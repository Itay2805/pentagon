
out/bin/pentagon.elf:     file format elf64-x86-64


Disassembly of section .text:

ffffffff80000000 <read_field>:
ffffffff80000000:	f3 0f 1e fa          	endbr64 
ffffffff80000004:	55                   	push   %rbp
ffffffff80000005:	48 89 e5             	mov    %rsp,%rbp
ffffffff80000008:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff8000000c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff80000010:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff80000014:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff80000018:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8000001c:	48 01 d0             	add    %rdx,%rax
ffffffff8000001f:	48 8b 00             	mov    (%rax),%rax
ffffffff80000022:	c9                   	leave  
ffffffff80000023:	c3                   	ret    

ffffffff80000024 <write_field>:
ffffffff80000024:	f3 0f 1e fa          	endbr64 
ffffffff80000028:	55                   	push   %rbp
ffffffff80000029:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000002c:	48 83 ec 18          	sub    $0x18,%rsp
ffffffff80000030:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff80000034:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff80000038:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
ffffffff8000003c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff80000040:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80000044:	48 01 d0             	add    %rdx,%rax
ffffffff80000047:	48 89 c2             	mov    %rax,%rdx
ffffffff8000004a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000004e:	48 89 02             	mov    %rax,(%rdx)
ffffffff80000051:	90                   	nop
ffffffff80000052:	c9                   	leave  
ffffffff80000053:	c3                   	ret    

ffffffff80000054 <gc_new>:
ffffffff80000054:	f3 0f 1e fa          	endbr64 
ffffffff80000058:	55                   	push   %rbp
ffffffff80000059:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000005c:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff80000060:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff80000064:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
ffffffff80000068:	e8 2e 48 01 00       	call   ffffffff8001489b <scheduler_preempt_disable>
ffffffff8000006d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80000071:	48 8b 80 80 00 00 00 	mov    0x80(%rax),%rax
ffffffff80000078:	48 0f af 45 e0       	imul   -0x20(%rbp),%rax
ffffffff8000007d:	48 89 c7             	mov    %rax,%rdi
ffffffff80000080:	e8 b7 b7 00 00       	call   ffffffff8000b83c <malloc>
ffffffff80000085:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff80000089:	b8 08 00 00 00       	mov    $0x8,%eax
ffffffff8000008e:	64 0f b6 40 02       	movzbl %fs:0x2(%rax),%eax
ffffffff80000093:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff80000097:	88 42 08             	mov    %al,0x8(%rdx)
ffffffff8000009a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000009e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff800000a2:	48 89 10             	mov    %rdx,(%rax)
ffffffff800000a5:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800000aa:	e8 32 6c 00 00       	call   ffffffff80006ce1 <get_apic_id>
ffffffff800000af:	48 89 c1             	mov    %rax,%rcx
ffffffff800000b2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff800000b6:	48 89 c2             	mov    %rax,%rdx
ffffffff800000b9:	48 89 ce             	mov    %rcx,%rsi
ffffffff800000bc:	48 8d 05 3d 7f 03 00 	lea    0x37f3d(%rip),%rax        # ffffffff80038000 <g_stivale2_header+0x1000>
ffffffff800000c3:	48 89 c7             	mov    %rax,%rdi
ffffffff800000c6:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800000cb:	e8 70 34 01 00       	call   ffffffff80013540 <printf_>
ffffffff800000d0:	48 8d 05 2d ff 0a 00 	lea    0xaff2d(%rip),%rax        # ffffffff800b0004 <m_all_objects_lock>
ffffffff800000d7:	48 89 c7             	mov    %rax,%rdi
ffffffff800000da:	e8 2f 1d 00 00       	call   ffffffff80001e0e <spinlock_lock>
ffffffff800000df:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff800000e3:	48 83 c0 18          	add    $0x18,%rax
ffffffff800000e7:	48 89 c6             	mov    %rax,%rsi
ffffffff800000ea:	48 8d 05 af 6f 0a 00 	lea    0xa6faf(%rip),%rax        # ffffffff800a70a0 <m_all_objects>
ffffffff800000f1:	48 89 c7             	mov    %rax,%rdi
ffffffff800000f4:	e8 ae 0f 01 00       	call   ffffffff800110a7 <list_add>
ffffffff800000f9:	48 8d 05 04 ff 0a 00 	lea    0xaff04(%rip),%rax        # ffffffff800b0004 <m_all_objects_lock>
ffffffff80000100:	48 89 c7             	mov    %rax,%rdi
ffffffff80000103:	e8 d5 1d 00 00       	call   ffffffff80001edd <spinlock_unlock>
ffffffff80000108:	e8 f6 47 01 00       	call   ffffffff80014903 <scheduler_preempt_enable>
ffffffff8000010d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80000111:	90                   	nop
ffffffff80000112:	90                   	nop
ffffffff80000113:	c9                   	leave  
ffffffff80000114:	c3                   	ret    

ffffffff80000115 <gc_update>:
ffffffff80000115:	f3 0f 1e fa          	endbr64 
ffffffff80000119:	55                   	push   %rbp
ffffffff8000011a:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000011d:	53                   	push   %rbx
ffffffff8000011e:	48 83 ec 48          	sub    $0x48,%rsp
ffffffff80000122:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
ffffffff80000126:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
ffffffff8000012a:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
ffffffff8000012e:	e8 68 47 01 00       	call   ffffffff8001489b <scheduler_preempt_disable>
ffffffff80000133:	b8 08 00 00 00       	mov    $0x8,%eax
ffffffff80000138:	64 0f b6 00          	movzbl %fs:(%rax),%eax
ffffffff8000013c:	84 c0                	test   %al,%al
ffffffff8000013e:	0f 84 01 02 00 00    	je     ffffffff80000345 <gc_update+0x230>
ffffffff80000144:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80000148:	0f b6 40 08          	movzbl 0x8(%rax),%eax
ffffffff8000014c:	0f b6 c0             	movzbl %al,%eax
ffffffff8000014f:	8b 15 ab 6e 0a 00    	mov    0xa6eab(%rip),%edx        # ffffffff800a7000 <m_color_white>
ffffffff80000155:	39 d0                	cmp    %edx,%eax
ffffffff80000157:	0f 85 e8 01 00 00    	jne    ffffffff80000345 <gc_update+0x230>
ffffffff8000015d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80000161:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff80000165:	48 85 c0             	test   %rax,%rax
ffffffff80000168:	0f 84 d7 01 00 00    	je     ffffffff80000345 <gc_update+0x230>
ffffffff8000016e:	b8 08 00 00 00       	mov    $0x8,%eax
ffffffff80000173:	64 48 8b 40 08       	mov    %fs:0x8(%rax),%rax
ffffffff80000178:	48 85 c0             	test   %rax,%rax
ffffffff8000017b:	74 13                	je     ffffffff80000190 <gc_update+0x7b>
ffffffff8000017d:	b8 08 00 00 00       	mov    $0x8,%eax
ffffffff80000182:	64 48 8b 40 08       	mov    %fs:0x8(%rax),%rax
ffffffff80000187:	48 83 e8 20          	sub    $0x20,%rax
ffffffff8000018b:	48 8b 00             	mov    (%rax),%rax
ffffffff8000018e:	eb 05                	jmp    ffffffff80000195 <gc_update+0x80>
ffffffff80000190:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80000195:	89 45 ec             	mov    %eax,-0x14(%rbp)
ffffffff80000198:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8000019c:	48 8b 00             	mov    (%rax),%rax
ffffffff8000019f:	48 8b 80 f0 00 00 00 	mov    0xf0(%rax),%rax
ffffffff800001a6:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff800001aa:	b8 08 00 00 00       	mov    $0x8,%eax
ffffffff800001af:	64 48 8b 40 08       	mov    %fs:0x8(%rax),%rax
ffffffff800001b4:	48 85 c0             	test   %rax,%rax
ffffffff800001b7:	74 16                	je     ffffffff800001cf <gc_update+0xba>
ffffffff800001b9:	b8 08 00 00 00       	mov    $0x8,%eax
ffffffff800001be:	64 48 8b 40 08       	mov    %fs:0x8(%rax),%rax
ffffffff800001c3:	48 83 e8 20          	sub    $0x20,%rax
ffffffff800001c7:	48 8b 00             	mov    (%rax),%rax
ffffffff800001ca:	48 89 c2             	mov    %rax,%rdx
ffffffff800001cd:	eb 05                	jmp    ffffffff800001d4 <gc_update+0xbf>
ffffffff800001cf:	ba 00 00 00 00       	mov    $0x0,%edx
ffffffff800001d4:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
ffffffff800001d9:	74 0d                	je     ffffffff800001e8 <gc_update+0xd3>
ffffffff800001db:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff800001df:	48 83 e8 20          	sub    $0x20,%rax
ffffffff800001e3:	48 8b 00             	mov    (%rax),%rax
ffffffff800001e6:	eb 05                	jmp    ffffffff800001ed <gc_update+0xd8>
ffffffff800001e8:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800001ed:	48 01 d0             	add    %rdx,%rax
ffffffff800001f0:	48 83 c0 01          	add    $0x1,%rax
ffffffff800001f4:	48 89 c2             	mov    %rax,%rdx
ffffffff800001f7:	b8 08 00 00 00       	mov    $0x8,%eax
ffffffff800001fc:	64 48 8b 40 08       	mov    %fs:0x8(%rax),%rax
ffffffff80000201:	bb 08 00 00 00       	mov    $0x8,%ebx
ffffffff80000206:	48 89 d1             	mov    %rdx,%rcx
ffffffff80000209:	ba 00 00 00 00       	mov    $0x0,%edx
ffffffff8000020e:	be 08 00 00 00       	mov    $0x8,%esi
ffffffff80000213:	48 89 c7             	mov    %rax,%rdi
ffffffff80000216:	e8 4d ed 00 00       	call   ffffffff8000ef68 <stbds_arrgrowf>
ffffffff8000021b:	64 48 89 43 08       	mov    %rax,%fs:0x8(%rbx)
ffffffff80000220:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%rbp)
ffffffff80000227:	eb 48                	jmp    ffffffff80000271 <gc_update+0x15c>
ffffffff80000229:	8b 45 e8             	mov    -0x18(%rbp),%eax
ffffffff8000022c:	48 98                	cltq   
ffffffff8000022e:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
ffffffff80000235:	00 
ffffffff80000236:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8000023a:	48 01 d0             	add    %rdx,%rax
ffffffff8000023d:	48 8b 10             	mov    (%rax),%rdx
ffffffff80000240:	b8 08 00 00 00       	mov    $0x8,%eax
ffffffff80000245:	64 48 8b 48 08       	mov    %fs:0x8(%rax),%rcx
ffffffff8000024a:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
ffffffff8000024e:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff80000251:	48 98                	cltq   
ffffffff80000253:	48 c1 e0 03          	shl    $0x3,%rax
ffffffff80000257:	48 8d 1c 01          	lea    (%rcx,%rax,1),%rbx
ffffffff8000025b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8000025f:	48 89 d6             	mov    %rdx,%rsi
ffffffff80000262:	48 89 c7             	mov    %rax,%rdi
ffffffff80000265:	e8 96 fd ff ff       	call   ffffffff80000000 <read_field>
ffffffff8000026a:	48 89 03             	mov    %rax,(%rbx)
ffffffff8000026d:	83 45 e8 01          	addl   $0x1,-0x18(%rbp)
ffffffff80000271:	8b 45 e8             	mov    -0x18(%rbp),%eax
ffffffff80000274:	48 98                	cltq   
ffffffff80000276:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
ffffffff8000027b:	74 0d                	je     ffffffff8000028a <gc_update+0x175>
ffffffff8000027d:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff80000281:	48 83 ea 20          	sub    $0x20,%rdx
ffffffff80000285:	48 8b 12             	mov    (%rdx),%rdx
ffffffff80000288:	eb 05                	jmp    ffffffff8000028f <gc_update+0x17a>
ffffffff8000028a:	ba 00 00 00 00       	mov    $0x0,%edx
ffffffff8000028f:	48 39 c2             	cmp    %rax,%rdx
ffffffff80000292:	7f 95                	jg     ffffffff80000229 <gc_update+0x114>
ffffffff80000294:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80000298:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff8000029c:	48 85 c0             	test   %rax,%rax
ffffffff8000029f:	0f 85 a0 00 00 00    	jne    ffffffff80000345 <gc_update+0x230>
ffffffff800002a5:	b8 08 00 00 00       	mov    $0x8,%eax
ffffffff800002aa:	64 48 8b 40 08       	mov    %fs:0x8(%rax),%rax
ffffffff800002af:	48 85 c0             	test   %rax,%rax
ffffffff800002b2:	74 14                	je     ffffffff800002c8 <gc_update+0x1b3>
ffffffff800002b4:	b8 08 00 00 00       	mov    $0x8,%eax
ffffffff800002b9:	64 48 8b 40 08       	mov    %fs:0x8(%rax),%rax
ffffffff800002be:	48 83 e8 20          	sub    $0x20,%rax
ffffffff800002c2:	48 8b 50 08          	mov    0x8(%rax),%rdx
ffffffff800002c6:	eb 05                	jmp    ffffffff800002cd <gc_update+0x1b8>
ffffffff800002c8:	ba 00 00 00 00       	mov    $0x0,%edx
ffffffff800002cd:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff800002d0:	48 98                	cltq   
ffffffff800002d2:	48 39 c2             	cmp    %rax,%rdx
ffffffff800002d5:	73 2b                	jae    ffffffff80000302 <gc_update+0x1ed>
ffffffff800002d7:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff800002da:	48 98                	cltq   
ffffffff800002dc:	ba 08 00 00 00       	mov    $0x8,%edx
ffffffff800002e1:	64 48 8b 7a 08       	mov    %fs:0x8(%rdx),%rdi
ffffffff800002e6:	bb 08 00 00 00       	mov    $0x8,%ebx
ffffffff800002eb:	48 89 c1             	mov    %rax,%rcx
ffffffff800002ee:	ba 00 00 00 00       	mov    $0x0,%edx
ffffffff800002f3:	be 08 00 00 00       	mov    $0x8,%esi
ffffffff800002f8:	e8 6b ec 00 00       	call   ffffffff8000ef68 <stbds_arrgrowf>
ffffffff800002fd:	64 48 89 43 08       	mov    %rax,%fs:0x8(%rbx)
ffffffff80000302:	b8 08 00 00 00       	mov    $0x8,%eax
ffffffff80000307:	64 48 8b 40 08       	mov    %fs:0x8(%rax),%rax
ffffffff8000030c:	48 85 c0             	test   %rax,%rax
ffffffff8000030f:	74 16                	je     ffffffff80000327 <gc_update+0x212>
ffffffff80000311:	b8 08 00 00 00       	mov    $0x8,%eax
ffffffff80000316:	64 48 8b 40 08       	mov    %fs:0x8(%rax),%rax
ffffffff8000031b:	48 8d 50 e0          	lea    -0x20(%rax),%rdx
ffffffff8000031f:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff80000322:	48 98                	cltq   
ffffffff80000324:	48 89 02             	mov    %rax,(%rdx)
ffffffff80000327:	b8 08 00 00 00       	mov    $0x8,%eax
ffffffff8000032c:	64 48 8b 50 08       	mov    %fs:0x8(%rax),%rdx
ffffffff80000331:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff80000334:	48 98                	cltq   
ffffffff80000336:	48 c1 e0 03          	shl    $0x3,%rax
ffffffff8000033a:	48 01 c2             	add    %rax,%rdx
ffffffff8000033d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80000341:	48 89 50 10          	mov    %rdx,0x10(%rax)
ffffffff80000345:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
ffffffff80000349:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
ffffffff8000034d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80000351:	48 89 ce             	mov    %rcx,%rsi
ffffffff80000354:	48 89 c7             	mov    %rax,%rdi
ffffffff80000357:	e8 c8 fc ff ff       	call   ffffffff80000024 <write_field>
ffffffff8000035c:	b8 08 00 00 00       	mov    $0x8,%eax
ffffffff80000361:	64 0f b6 40 01       	movzbl %fs:0x1(%rax),%eax
ffffffff80000366:	84 c0                	test   %al,%al
ffffffff80000368:	0f 84 97 00 00 00    	je     ffffffff80000405 <gc_update+0x2f0>
ffffffff8000036e:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
ffffffff80000373:	0f 84 8c 00 00 00    	je     ffffffff80000405 <gc_update+0x2f0>
ffffffff80000379:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff8000037d:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
ffffffff80000381:	b8 08 00 00 00       	mov    $0x8,%eax
ffffffff80000386:	64 48 8b 78 10       	mov    %fs:0x10(%rax),%rdi
ffffffff8000038b:	bb 08 00 00 00       	mov    $0x8,%ebx
ffffffff80000390:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
ffffffff80000394:	41 b8 00 00 00 00    	mov    $0x0,%r8d
ffffffff8000039a:	b9 08 00 00 00       	mov    $0x8,%ecx
ffffffff8000039f:	48 89 c2             	mov    %rax,%rdx
ffffffff800003a2:	be 08 00 00 00       	mov    $0x8,%esi
ffffffff800003a7:	e8 d0 fe 00 00       	call   ffffffff8001027c <stbds_hmput_key>
ffffffff800003ac:	64 48 89 43 10       	mov    %rax,%fs:0x10(%rbx)
ffffffff800003b1:	b8 08 00 00 00       	mov    $0x8,%eax
ffffffff800003b6:	64 48 8b 50 10       	mov    %fs:0x10(%rax),%rdx
ffffffff800003bb:	b8 08 00 00 00       	mov    $0x8,%eax
ffffffff800003c0:	64 48 8b 40 10       	mov    %fs:0x10(%rax),%rax
ffffffff800003c5:	48 83 e8 28          	sub    $0x28,%rax
ffffffff800003c9:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff800003cd:	48 c1 e0 03          	shl    $0x3,%rax
ffffffff800003d1:	48 01 d0             	add    %rdx,%rax
ffffffff800003d4:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
ffffffff800003d8:	48 89 10             	mov    %rdx,(%rax)
ffffffff800003db:	b8 08 00 00 00       	mov    $0x8,%eax
ffffffff800003e0:	64 48 8b 50 10       	mov    %fs:0x10(%rax),%rdx
ffffffff800003e5:	b8 08 00 00 00       	mov    $0x8,%eax
ffffffff800003ea:	64 48 8b 40 10       	mov    %fs:0x10(%rax),%rax
ffffffff800003ef:	48 83 e8 28          	sub    $0x28,%rax
ffffffff800003f3:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff800003f7:	48 c1 e0 03          	shl    $0x3,%rax
ffffffff800003fb:	48 01 d0             	add    %rdx,%rax
ffffffff800003fe:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
ffffffff80000402:	48 89 10             	mov    %rdx,(%rax)
ffffffff80000405:	e8 f9 44 01 00       	call   ffffffff80014903 <scheduler_preempt_enable>
ffffffff8000040a:	90                   	nop
ffffffff8000040b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
ffffffff8000040f:	c9                   	leave  
ffffffff80000410:	c3                   	ret    

ffffffff80000411 <initiate_collection_cycle>:
ffffffff80000411:	f3 0f 1e fa          	endbr64 
ffffffff80000415:	55                   	push   %rbp
ffffffff80000416:	48 89 e5             	mov    %rsp,%rbp
ffffffff80000419:	48 83 ec 40          	sub    $0x40,%rsp
ffffffff8000041d:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80000422:	e8 91 60 01 00       	call   ffffffff800164b8 <lock_all_threads>
ffffffff80000427:	48 8b 05 52 0d 2b 00 	mov    0x2b0d52(%rip),%rax        # ffffffff802b1180 <g_all_threads>
ffffffff8000042e:	48 85 c0             	test   %rax,%rax
ffffffff80000431:	74 10                	je     ffffffff80000443 <initiate_collection_cycle+0x32>
ffffffff80000433:	48 8b 05 46 0d 2b 00 	mov    0x2b0d46(%rip),%rax        # ffffffff802b1180 <g_all_threads>
ffffffff8000043a:	48 83 e8 20          	sub    $0x20,%rax
ffffffff8000043e:	48 8b 00             	mov    (%rax),%rax
ffffffff80000441:	eb 05                	jmp    ffffffff80000448 <initiate_collection_cycle+0x37>
ffffffff80000443:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80000448:	89 05 ba fb 0a 00    	mov    %eax,0xafbba(%rip)        # ffffffff800b0008 <m_thread_count>
ffffffff8000044e:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
ffffffff80000455:	eb 67                	jmp    ffffffff800004be <initiate_collection_cycle+0xad>
ffffffff80000457:	48 8b 15 22 0d 2b 00 	mov    0x2b0d22(%rip),%rdx        # ffffffff802b1180 <g_all_threads>
ffffffff8000045e:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff80000461:	48 98                	cltq   
ffffffff80000463:	48 c1 e0 03          	shl    $0x3,%rax
ffffffff80000467:	48 01 d0             	add    %rdx,%rax
ffffffff8000046a:	48 8b 00             	mov    (%rax),%rax
ffffffff8000046d:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff80000471:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80000476:	e8 aa 4f 01 00       	call   ffffffff80015425 <get_current_thread>
ffffffff8000047b:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
ffffffff8000047f:	74 38                	je     ffffffff800004b9 <initiate_collection_cycle+0xa8>
ffffffff80000481:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80000485:	48 89 c7             	mov    %rax,%rdi
ffffffff80000488:	e8 45 42 01 00       	call   ffffffff800146d2 <scheduler_suspend_thread>
ffffffff8000048d:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
ffffffff80000491:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
ffffffff80000495:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80000499:	48 8b 80 d0 00 00 00 	mov    0xd0(%rax),%rax
ffffffff800004a0:	c6 40 09 01          	movb   $0x1,0x9(%rax)
ffffffff800004a4:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
ffffffff800004a8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff800004ac:	48 89 d7             	mov    %rdx,%rdi
ffffffff800004af:	48 89 c6             	mov    %rax,%rsi
ffffffff800004b2:	e8 7e 43 01 00       	call   ffffffff80014835 <scheduler_resume_thread>
ffffffff800004b7:	eb 01                	jmp    ffffffff800004ba <initiate_collection_cycle+0xa9>
ffffffff800004b9:	90                   	nop
ffffffff800004ba:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
ffffffff800004be:	8b 05 44 fb 0a 00    	mov    0xafb44(%rip),%eax        # ffffffff800b0008 <m_thread_count>
ffffffff800004c4:	39 45 fc             	cmp    %eax,-0x4(%rbp)
ffffffff800004c7:	7c 8e                	jl     ffffffff80000457 <initiate_collection_cycle+0x46>
ffffffff800004c9:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800004ce:	e8 ff 5f 01 00       	call   ffffffff800164d2 <unlock_all_threads>
ffffffff800004d3:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800004d8:	e8 db 5f 01 00       	call   ffffffff800164b8 <lock_all_threads>
ffffffff800004dd:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
ffffffff800004e4:	eb 67                	jmp    ffffffff8000054d <initiate_collection_cycle+0x13c>
ffffffff800004e6:	48 8b 15 93 0c 2b 00 	mov    0x2b0c93(%rip),%rdx        # ffffffff802b1180 <g_all_threads>
ffffffff800004ed:	8b 45 f8             	mov    -0x8(%rbp),%eax
ffffffff800004f0:	48 98                	cltq   
ffffffff800004f2:	48 c1 e0 03          	shl    $0x3,%rax
ffffffff800004f6:	48 01 d0             	add    %rdx,%rax
ffffffff800004f9:	48 8b 00             	mov    (%rax),%rax
ffffffff800004fc:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff80000500:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80000505:	e8 1b 4f 01 00       	call   ffffffff80015425 <get_current_thread>
ffffffff8000050a:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
ffffffff8000050e:	74 38                	je     ffffffff80000548 <initiate_collection_cycle+0x137>
ffffffff80000510:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80000514:	48 89 c7             	mov    %rax,%rdi
ffffffff80000517:	e8 b6 41 01 00       	call   ffffffff800146d2 <scheduler_suspend_thread>
ffffffff8000051c:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
ffffffff80000520:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
ffffffff80000524:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80000528:	48 8b 80 d0 00 00 00 	mov    0xd0(%rax),%rax
ffffffff8000052f:	c6 40 08 01          	movb   $0x1,0x8(%rax)
ffffffff80000533:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
ffffffff80000537:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8000053b:	48 89 d7             	mov    %rdx,%rdi
ffffffff8000053e:	48 89 c6             	mov    %rax,%rsi
ffffffff80000541:	e8 ef 42 01 00       	call   ffffffff80014835 <scheduler_resume_thread>
ffffffff80000546:	eb 01                	jmp    ffffffff80000549 <initiate_collection_cycle+0x138>
ffffffff80000548:	90                   	nop
ffffffff80000549:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)
ffffffff8000054d:	8b 05 b5 fa 0a 00    	mov    0xafab5(%rip),%eax        # ffffffff800b0008 <m_thread_count>
ffffffff80000553:	39 45 f8             	cmp    %eax,-0x8(%rbp)
ffffffff80000556:	7c 8e                	jl     ffffffff800004e6 <initiate_collection_cycle+0xd5>
ffffffff80000558:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000055d:	e8 70 5f 01 00       	call   ffffffff800164d2 <unlock_all_threads>
ffffffff80000562:	90                   	nop
ffffffff80000563:	c9                   	leave  
ffffffff80000564:	c3                   	ret    

ffffffff80000565 <get_roots>:
ffffffff80000565:	f3 0f 1e fa          	endbr64 
ffffffff80000569:	55                   	push   %rbp
ffffffff8000056a:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000056d:	48 83 ec 40          	sub    $0x40,%rsp
ffffffff80000571:	8b 15 89 fa 0a 00    	mov    0xafa89(%rip),%edx        # ffffffff800b0000 <m_color_black>
ffffffff80000577:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8000057c:	29 d0                	sub    %edx,%eax
ffffffff8000057e:	89 05 7c fa 0a 00    	mov    %eax,0xafa7c(%rip)        # ffffffff800b0000 <m_color_black>
ffffffff80000584:	8b 15 76 6a 0a 00    	mov    0xa6a76(%rip),%edx        # ffffffff800a7000 <m_color_white>
ffffffff8000058a:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8000058f:	29 d0                	sub    %edx,%eax
ffffffff80000591:	89 05 69 6a 0a 00    	mov    %eax,0xa6a69(%rip)        # ffffffff800a7000 <m_color_white>
ffffffff80000597:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000059c:	e8 17 5f 01 00       	call   ffffffff800164b8 <lock_all_threads>
ffffffff800005a1:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
ffffffff800005a8:	eb 7b                	jmp    ffffffff80000625 <get_roots+0xc0>
ffffffff800005aa:	48 8b 15 cf 0b 2b 00 	mov    0x2b0bcf(%rip),%rdx        # ffffffff802b1180 <g_all_threads>
ffffffff800005b1:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff800005b4:	48 98                	cltq   
ffffffff800005b6:	48 c1 e0 03          	shl    $0x3,%rax
ffffffff800005ba:	48 01 d0             	add    %rdx,%rax
ffffffff800005bd:	48 8b 00             	mov    (%rax),%rax
ffffffff800005c0:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
ffffffff800005c4:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800005c9:	e8 57 4e 01 00       	call   ffffffff80015425 <get_current_thread>
ffffffff800005ce:	48 39 45 d8          	cmp    %rax,-0x28(%rbp)
ffffffff800005d2:	74 4c                	je     ffffffff80000620 <get_roots+0xbb>
ffffffff800005d4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff800005d8:	48 89 c7             	mov    %rax,%rdi
ffffffff800005db:	e8 f2 40 01 00       	call   ffffffff800146d2 <scheduler_suspend_thread>
ffffffff800005e0:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
ffffffff800005e4:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
ffffffff800005e8:	8b 15 12 fa 0a 00    	mov    0xafa12(%rip),%edx        # ffffffff800b0000 <m_color_black>
ffffffff800005ee:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff800005f2:	48 8b 80 d0 00 00 00 	mov    0xd0(%rax),%rax
ffffffff800005f9:	88 50 0a             	mov    %dl,0xa(%rax)
ffffffff800005fc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80000600:	48 8b 80 d0 00 00 00 	mov    0xd0(%rax),%rax
ffffffff80000607:	c6 40 09 00          	movb   $0x0,0x9(%rax)
ffffffff8000060b:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
ffffffff8000060f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80000613:	48 89 d7             	mov    %rdx,%rdi
ffffffff80000616:	48 89 c6             	mov    %rax,%rsi
ffffffff80000619:	e8 17 42 01 00       	call   ffffffff80014835 <scheduler_resume_thread>
ffffffff8000061e:	eb 01                	jmp    ffffffff80000621 <get_roots+0xbc>
ffffffff80000620:	90                   	nop
ffffffff80000621:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
ffffffff80000625:	8b 05 dd f9 0a 00    	mov    0xaf9dd(%rip),%eax        # ffffffff800b0008 <m_thread_count>
ffffffff8000062b:	39 45 fc             	cmp    %eax,-0x4(%rbp)
ffffffff8000062e:	0f 8c 76 ff ff ff    	jl     ffffffff800005aa <get_roots+0x45>
ffffffff80000634:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80000639:	e8 94 5e 01 00       	call   ffffffff800164d2 <unlock_all_threads>
ffffffff8000063e:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80000643:	e8 70 5e 01 00       	call   ffffffff800164b8 <lock_all_threads>
ffffffff80000648:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
ffffffff8000064f:	e9 77 01 00 00       	jmp    ffffffff800007cb <get_roots+0x266>
ffffffff80000654:	48 8b 15 25 0b 2b 00 	mov    0x2b0b25(%rip),%rdx        # ffffffff802b1180 <g_all_threads>
ffffffff8000065b:	8b 45 f8             	mov    -0x8(%rbp),%eax
ffffffff8000065e:	48 98                	cltq   
ffffffff80000660:	48 c1 e0 03          	shl    $0x3,%rax
ffffffff80000664:	48 01 d0             	add    %rdx,%rax
ffffffff80000667:	48 8b 00             	mov    (%rax),%rax
ffffffff8000066a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff8000066e:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80000673:	e8 ad 4d 01 00       	call   ffffffff80015425 <get_current_thread>
ffffffff80000678:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
ffffffff8000067c:	0f 84 44 01 00 00    	je     ffffffff800007c6 <get_roots+0x261>
ffffffff80000682:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
ffffffff80000689:	e9 a8 00 00 00       	jmp    ffffffff80000736 <get_roots+0x1d1>
ffffffff8000068e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80000692:	48 8b 80 d0 00 00 00 	mov    0xd0(%rax),%rax
ffffffff80000699:	48 8b 50 18          	mov    0x18(%rax),%rdx
ffffffff8000069d:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff800006a0:	48 98                	cltq   
ffffffff800006a2:	48 c1 e0 03          	shl    $0x3,%rax
ffffffff800006a6:	48 01 d0             	add    %rdx,%rax
ffffffff800006a9:	48 8b 00             	mov    (%rax),%rax
ffffffff800006ac:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff800006b0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff800006b4:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
ffffffff800006b8:	48 8b 3d 51 f9 0a 00 	mov    0xaf951(%rip),%rdi        # ffffffff800b0010 <m_roots>
ffffffff800006bf:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
ffffffff800006c3:	41 b8 00 00 00 00    	mov    $0x0,%r8d
ffffffff800006c9:	b9 08 00 00 00       	mov    $0x8,%ecx
ffffffff800006ce:	48 89 c2             	mov    %rax,%rdx
ffffffff800006d1:	be 08 00 00 00       	mov    $0x8,%esi
ffffffff800006d6:	e8 a1 fb 00 00       	call   ffffffff8001027c <stbds_hmput_key>
ffffffff800006db:	48 89 05 2e f9 0a 00 	mov    %rax,0xaf92e(%rip)        # ffffffff800b0010 <m_roots>
ffffffff800006e2:	48 8b 15 27 f9 0a 00 	mov    0xaf927(%rip),%rdx        # ffffffff800b0010 <m_roots>
ffffffff800006e9:	48 8b 05 20 f9 0a 00 	mov    0xaf920(%rip),%rax        # ffffffff800b0010 <m_roots>
ffffffff800006f0:	48 83 e8 08          	sub    $0x8,%rax
ffffffff800006f4:	48 83 e8 20          	sub    $0x20,%rax
ffffffff800006f8:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff800006fc:	48 c1 e0 03          	shl    $0x3,%rax
ffffffff80000700:	48 01 d0             	add    %rdx,%rax
ffffffff80000703:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff80000707:	48 89 10             	mov    %rdx,(%rax)
ffffffff8000070a:	48 8b 15 ff f8 0a 00 	mov    0xaf8ff(%rip),%rdx        # ffffffff800b0010 <m_roots>
ffffffff80000711:	48 8b 05 f8 f8 0a 00 	mov    0xaf8f8(%rip),%rax        # ffffffff800b0010 <m_roots>
ffffffff80000718:	48 83 e8 08          	sub    $0x8,%rax
ffffffff8000071c:	48 83 e8 20          	sub    $0x20,%rax
ffffffff80000720:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff80000724:	48 c1 e0 03          	shl    $0x3,%rax
ffffffff80000728:	48 01 d0             	add    %rdx,%rax
ffffffff8000072b:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff8000072f:	48 89 10             	mov    %rdx,(%rax)
ffffffff80000732:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
ffffffff80000736:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff80000739:	48 98                	cltq   
ffffffff8000073b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff8000073f:	48 8b 92 d0 00 00 00 	mov    0xd0(%rdx),%rdx
ffffffff80000746:	48 8b 52 18          	mov    0x18(%rdx),%rdx
ffffffff8000074a:	48 85 d2             	test   %rdx,%rdx
ffffffff8000074d:	74 20                	je     ffffffff8000076f <get_roots+0x20a>
ffffffff8000074f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff80000753:	48 8b 92 d0 00 00 00 	mov    0xd0(%rdx),%rdx
ffffffff8000075a:	48 8b 52 18          	mov    0x18(%rdx),%rdx
ffffffff8000075e:	48 83 ea 08          	sub    $0x8,%rdx
ffffffff80000762:	48 83 ea 20          	sub    $0x20,%rdx
ffffffff80000766:	48 8b 12             	mov    (%rdx),%rdx
ffffffff80000769:	48 83 ea 01          	sub    $0x1,%rdx
ffffffff8000076d:	eb 05                	jmp    ffffffff80000774 <get_roots+0x20f>
ffffffff8000076f:	ba 00 00 00 00       	mov    $0x0,%edx
ffffffff80000774:	48 39 c2             	cmp    %rax,%rdx
ffffffff80000777:	0f 8f 11 ff ff ff    	jg     ffffffff8000068e <get_roots+0x129>
ffffffff8000077d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80000781:	48 8b 80 d0 00 00 00 	mov    0xd0(%rax),%rax
ffffffff80000788:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff8000078c:	48 85 c0             	test   %rax,%rax
ffffffff8000078f:	74 20                	je     ffffffff800007b1 <get_roots+0x24c>
ffffffff80000791:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80000795:	48 8b 80 d0 00 00 00 	mov    0xd0(%rax),%rax
ffffffff8000079c:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff800007a0:	48 83 e8 08          	sub    $0x8,%rax
ffffffff800007a4:	be 08 00 00 00       	mov    $0x8,%esi
ffffffff800007a9:	48 89 c7             	mov    %rax,%rdi
ffffffff800007ac:	e8 44 f5 00 00       	call   ffffffff8000fcf5 <stbds_hmfree_func>
ffffffff800007b1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800007b5:	48 8b 80 d0 00 00 00 	mov    0xd0(%rax),%rax
ffffffff800007bc:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)
ffffffff800007c3:	00 
ffffffff800007c4:	eb 01                	jmp    ffffffff800007c7 <get_roots+0x262>
ffffffff800007c6:	90                   	nop
ffffffff800007c7:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)
ffffffff800007cb:	8b 05 37 f8 0a 00    	mov    0xaf837(%rip),%eax        # ffffffff800b0008 <m_thread_count>
ffffffff800007d1:	39 45 f8             	cmp    %eax,-0x8(%rbp)
ffffffff800007d4:	0f 8c 7a fe ff ff    	jl     ffffffff80000654 <get_roots+0xef>
ffffffff800007da:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800007df:	e8 ee 5c 01 00       	call   ffffffff800164d2 <unlock_all_threads>
ffffffff800007e4:	90                   	nop
ffffffff800007e5:	c9                   	leave  
ffffffff800007e6:	c3                   	ret    

ffffffff800007e7 <trace>:
ffffffff800007e7:	f3 0f 1e fa          	endbr64 
ffffffff800007eb:	55                   	push   %rbp
ffffffff800007ec:	48 89 e5             	mov    %rsp,%rbp
ffffffff800007ef:	41 54                	push   %r12
ffffffff800007f1:	53                   	push   %rbx
ffffffff800007f2:	48 83 ec 40          	sub    $0x40,%rsp
ffffffff800007f6:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
ffffffff800007fa:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff800007fe:	0f b6 40 08          	movzbl 0x8(%rax),%eax
ffffffff80000802:	0f b6 c0             	movzbl %al,%eax
ffffffff80000805:	8b 15 f5 67 0a 00    	mov    0xa67f5(%rip),%edx        # ffffffff800a7000 <m_color_white>
ffffffff8000080b:	39 d0                	cmp    %edx,%eax
ffffffff8000080d:	0f 85 3b 03 00 00    	jne    ffffffff80000b4e <trace+0x367>
ffffffff80000813:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff80000817:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff8000081b:	48 85 c0             	test   %rax,%rax
ffffffff8000081e:	0f 85 fb 01 00 00    	jne    ffffffff80000a1f <trace+0x238>
ffffffff80000824:	48 89 e0             	mov    %rsp,%rax
ffffffff80000827:	49 89 c4             	mov    %rax,%r12
ffffffff8000082a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff8000082e:	48 8b 00             	mov    (%rax),%rax
ffffffff80000831:	48 8b 80 f0 00 00 00 	mov    0xf0(%rax),%rax
ffffffff80000838:	48 85 c0             	test   %rax,%rax
ffffffff8000083b:	74 17                	je     ffffffff80000854 <trace+0x6d>
ffffffff8000083d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff80000841:	48 8b 00             	mov    (%rax),%rax
ffffffff80000844:	48 8b 80 f0 00 00 00 	mov    0xf0(%rax),%rax
ffffffff8000084b:	48 83 e8 20          	sub    $0x20,%rax
ffffffff8000084f:	48 8b 00             	mov    (%rax),%rax
ffffffff80000852:	eb 05                	jmp    ffffffff80000859 <trace+0x72>
ffffffff80000854:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80000859:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
ffffffff8000085d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80000861:	48 89 c2             	mov    %rax,%rdx
ffffffff80000864:	48 83 ea 01          	sub    $0x1,%rdx
ffffffff80000868:	48 89 55 d0          	mov    %rdx,-0x30(%rbp)
ffffffff8000086c:	49 89 c0             	mov    %rax,%r8
ffffffff8000086f:	41 b9 00 00 00 00    	mov    $0x0,%r9d
ffffffff80000875:	48 89 c1             	mov    %rax,%rcx
ffffffff80000878:	bb 00 00 00 00       	mov    $0x0,%ebx
ffffffff8000087d:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
ffffffff80000884:	00 
ffffffff80000885:	b8 10 00 00 00       	mov    $0x10,%eax
ffffffff8000088a:	48 83 e8 01          	sub    $0x1,%rax
ffffffff8000088e:	48 01 d0             	add    %rdx,%rax
ffffffff80000891:	bb 10 00 00 00       	mov    $0x10,%ebx
ffffffff80000896:	ba 00 00 00 00       	mov    $0x0,%edx
ffffffff8000089b:	48 f7 f3             	div    %rbx
ffffffff8000089e:	48 6b c0 10          	imul   $0x10,%rax,%rax
ffffffff800008a2:	48 89 c1             	mov    %rax,%rcx
ffffffff800008a5:	48 81 e1 00 f0 ff ff 	and    $0xfffffffffffff000,%rcx
ffffffff800008ac:	48 89 e2             	mov    %rsp,%rdx
ffffffff800008af:	48 29 ca             	sub    %rcx,%rdx
ffffffff800008b2:	48 39 d4             	cmp    %rdx,%rsp
ffffffff800008b5:	74 12                	je     ffffffff800008c9 <trace+0xe2>
ffffffff800008b7:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
ffffffff800008be:	48 83 8c 24 f8 0f 00 	orq    $0x0,0xff8(%rsp)
ffffffff800008c5:	00 00 
ffffffff800008c7:	eb e9                	jmp    ffffffff800008b2 <trace+0xcb>
ffffffff800008c9:	48 89 c2             	mov    %rax,%rdx
ffffffff800008cc:	81 e2 ff 0f 00 00    	and    $0xfff,%edx
ffffffff800008d2:	48 29 d4             	sub    %rdx,%rsp
ffffffff800008d5:	48 89 c2             	mov    %rax,%rdx
ffffffff800008d8:	81 e2 ff 0f 00 00    	and    $0xfff,%edx
ffffffff800008de:	48 85 d2             	test   %rdx,%rdx
ffffffff800008e1:	74 10                	je     ffffffff800008f3 <trace+0x10c>
ffffffff800008e3:	25 ff 0f 00 00       	and    $0xfff,%eax
ffffffff800008e8:	48 83 e8 08          	sub    $0x8,%rax
ffffffff800008ec:	48 01 e0             	add    %rsp,%rax
ffffffff800008ef:	48 83 08 00          	orq    $0x0,(%rax)
ffffffff800008f3:	48 89 e0             	mov    %rsp,%rax
ffffffff800008f6:	48 83 c0 07          	add    $0x7,%rax
ffffffff800008fa:	48 c1 e8 03          	shr    $0x3,%rax
ffffffff800008fe:	48 c1 e0 03          	shl    $0x3,%rax
ffffffff80000902:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
ffffffff80000906:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
ffffffff8000090d:	eb 3e                	jmp    ffffffff8000094d <trace+0x166>
ffffffff8000090f:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff80000913:	48 8b 00             	mov    (%rax),%rax
ffffffff80000916:	48 8b 90 f0 00 00 00 	mov    0xf0(%rax),%rdx
ffffffff8000091d:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff80000920:	48 98                	cltq   
ffffffff80000922:	48 c1 e0 03          	shl    $0x3,%rax
ffffffff80000926:	48 01 d0             	add    %rdx,%rax
ffffffff80000929:	48 8b 10             	mov    (%rax),%rdx
ffffffff8000092c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff80000930:	48 89 d6             	mov    %rdx,%rsi
ffffffff80000933:	48 89 c7             	mov    %rax,%rdi
ffffffff80000936:	e8 c5 f6 ff ff       	call   ffffffff80000000 <read_field>
ffffffff8000093b:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
ffffffff8000093f:	8b 55 ec             	mov    -0x14(%rbp),%edx
ffffffff80000942:	48 63 d2             	movslq %edx,%rdx
ffffffff80000945:	48 89 04 d1          	mov    %rax,(%rcx,%rdx,8)
ffffffff80000949:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
ffffffff8000094d:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff80000950:	48 98                	cltq   
ffffffff80000952:	48 39 45 d8          	cmp    %rax,-0x28(%rbp)
ffffffff80000956:	77 b7                	ja     ffffffff8000090f <trace+0x128>
ffffffff80000958:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff8000095c:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff80000960:	48 85 c0             	test   %rax,%rax
ffffffff80000963:	0f 85 ae 00 00 00    	jne    ffffffff80000a17 <trace+0x230>
ffffffff80000969:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%rbp)
ffffffff80000970:	e9 93 00 00 00       	jmp    ffffffff80000a08 <trace+0x221>
ffffffff80000975:	48 8b 05 9c f6 0a 00 	mov    0xaf69c(%rip),%rax        # ffffffff800b0018 <m_mark_stack>
ffffffff8000097c:	48 85 c0             	test   %rax,%rax
ffffffff8000097f:	74 26                	je     ffffffff800009a7 <trace+0x1c0>
ffffffff80000981:	48 8b 05 90 f6 0a 00 	mov    0xaf690(%rip),%rax        # ffffffff800b0018 <m_mark_stack>
ffffffff80000988:	48 83 e8 20          	sub    $0x20,%rax
ffffffff8000098c:	48 8b 00             	mov    (%rax),%rax
ffffffff8000098f:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffff80000993:	48 8b 05 7e f6 0a 00 	mov    0xaf67e(%rip),%rax        # ffffffff800b0018 <m_mark_stack>
ffffffff8000099a:	48 83 e8 20          	sub    $0x20,%rax
ffffffff8000099e:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff800009a2:	48 39 c2             	cmp    %rax,%rdx
ffffffff800009a5:	76 25                	jbe    ffffffff800009cc <trace+0x1e5>
ffffffff800009a7:	48 8b 05 6a f6 0a 00 	mov    0xaf66a(%rip),%rax        # ffffffff800b0018 <m_mark_stack>
ffffffff800009ae:	b9 00 00 00 00       	mov    $0x0,%ecx
ffffffff800009b3:	ba 01 00 00 00       	mov    $0x1,%edx
ffffffff800009b8:	be 08 00 00 00       	mov    $0x8,%esi
ffffffff800009bd:	48 89 c7             	mov    %rax,%rdi
ffffffff800009c0:	e8 a3 e5 00 00       	call   ffffffff8000ef68 <stbds_arrgrowf>
ffffffff800009c5:	48 89 05 4c f6 0a 00 	mov    %rax,0xaf64c(%rip)        # ffffffff800b0018 <m_mark_stack>
ffffffff800009cc:	48 8b 35 45 f6 0a 00 	mov    0xaf645(%rip),%rsi        # ffffffff800b0018 <m_mark_stack>
ffffffff800009d3:	48 8b 05 3e f6 0a 00 	mov    0xaf63e(%rip),%rax        # ffffffff800b0018 <m_mark_stack>
ffffffff800009da:	48 83 e8 20          	sub    $0x20,%rax
ffffffff800009de:	48 8b 10             	mov    (%rax),%rdx
ffffffff800009e1:	48 8d 4a 01          	lea    0x1(%rdx),%rcx
ffffffff800009e5:	48 89 08             	mov    %rcx,(%rax)
ffffffff800009e8:	48 8d 04 d5 00 00 00 	lea    0x0(,%rdx,8),%rax
ffffffff800009ef:	00 
ffffffff800009f0:	48 8d 14 06          	lea    (%rsi,%rax,1),%rdx
ffffffff800009f4:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
ffffffff800009f8:	8b 45 e8             	mov    -0x18(%rbp),%eax
ffffffff800009fb:	48 98                	cltq   
ffffffff800009fd:	48 8b 04 c1          	mov    (%rcx,%rax,8),%rax
ffffffff80000a01:	48 89 02             	mov    %rax,(%rdx)
ffffffff80000a04:	83 45 e8 01          	addl   $0x1,-0x18(%rbp)
ffffffff80000a08:	8b 45 e8             	mov    -0x18(%rbp),%eax
ffffffff80000a0b:	48 98                	cltq   
ffffffff80000a0d:	48 39 45 d8          	cmp    %rax,-0x28(%rbp)
ffffffff80000a11:	0f 87 5e ff ff ff    	ja     ffffffff80000975 <trace+0x18e>
ffffffff80000a17:	4c 89 e4             	mov    %r12,%rsp
ffffffff80000a1a:	e9 20 01 00 00       	jmp    ffffffff80000b3f <trace+0x358>
ffffffff80000a1f:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
ffffffff80000a26:	e9 d7 00 00 00       	jmp    ffffffff80000b02 <trace+0x31b>
ffffffff80000a2b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff80000a2f:	48 8b 00             	mov    (%rax),%rax
ffffffff80000a32:	48 8b 80 f0 00 00 00 	mov    0xf0(%rax),%rax
ffffffff80000a39:	48 85 c0             	test   %rax,%rax
ffffffff80000a3c:	74 17                	je     ffffffff80000a55 <trace+0x26e>
ffffffff80000a3e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff80000a42:	48 8b 00             	mov    (%rax),%rax
ffffffff80000a45:	48 8b 80 f0 00 00 00 	mov    0xf0(%rax),%rax
ffffffff80000a4c:	48 83 e8 20          	sub    $0x20,%rax
ffffffff80000a50:	48 8b 00             	mov    (%rax),%rax
ffffffff80000a53:	eb 05                	jmp    ffffffff80000a5a <trace+0x273>
ffffffff80000a55:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80000a5a:	8b 55 e4             	mov    -0x1c(%rbp),%edx
ffffffff80000a5d:	29 d0                	sub    %edx,%eax
ffffffff80000a5f:	83 e8 01             	sub    $0x1,%eax
ffffffff80000a62:	89 45 e0             	mov    %eax,-0x20(%rbp)
ffffffff80000a65:	48 8b 05 ac f5 0a 00 	mov    0xaf5ac(%rip),%rax        # ffffffff800b0018 <m_mark_stack>
ffffffff80000a6c:	48 85 c0             	test   %rax,%rax
ffffffff80000a6f:	74 26                	je     ffffffff80000a97 <trace+0x2b0>
ffffffff80000a71:	48 8b 05 a0 f5 0a 00 	mov    0xaf5a0(%rip),%rax        # ffffffff800b0018 <m_mark_stack>
ffffffff80000a78:	48 83 e8 20          	sub    $0x20,%rax
ffffffff80000a7c:	48 8b 00             	mov    (%rax),%rax
ffffffff80000a7f:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffff80000a83:	48 8b 05 8e f5 0a 00 	mov    0xaf58e(%rip),%rax        # ffffffff800b0018 <m_mark_stack>
ffffffff80000a8a:	48 83 e8 20          	sub    $0x20,%rax
ffffffff80000a8e:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff80000a92:	48 39 c2             	cmp    %rax,%rdx
ffffffff80000a95:	76 25                	jbe    ffffffff80000abc <trace+0x2d5>
ffffffff80000a97:	48 8b 05 7a f5 0a 00 	mov    0xaf57a(%rip),%rax        # ffffffff800b0018 <m_mark_stack>
ffffffff80000a9e:	b9 00 00 00 00       	mov    $0x0,%ecx
ffffffff80000aa3:	ba 01 00 00 00       	mov    $0x1,%edx
ffffffff80000aa8:	be 08 00 00 00       	mov    $0x8,%esi
ffffffff80000aad:	48 89 c7             	mov    %rax,%rdi
ffffffff80000ab0:	e8 b3 e4 00 00       	call   ffffffff8000ef68 <stbds_arrgrowf>
ffffffff80000ab5:	48 89 05 5c f5 0a 00 	mov    %rax,0xaf55c(%rip)        # ffffffff800b0018 <m_mark_stack>
ffffffff80000abc:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff80000ac0:	48 8b 50 10          	mov    0x10(%rax),%rdx
ffffffff80000ac4:	8b 45 e0             	mov    -0x20(%rbp),%eax
ffffffff80000ac7:	48 98                	cltq   
ffffffff80000ac9:	48 c1 e0 03          	shl    $0x3,%rax
ffffffff80000acd:	48 8d 34 02          	lea    (%rdx,%rax,1),%rsi
ffffffff80000ad1:	48 8b 3d 40 f5 0a 00 	mov    0xaf540(%rip),%rdi        # ffffffff800b0018 <m_mark_stack>
ffffffff80000ad8:	48 8b 05 39 f5 0a 00 	mov    0xaf539(%rip),%rax        # ffffffff800b0018 <m_mark_stack>
ffffffff80000adf:	48 83 e8 20          	sub    $0x20,%rax
ffffffff80000ae3:	48 8b 10             	mov    (%rax),%rdx
ffffffff80000ae6:	48 8d 4a 01          	lea    0x1(%rdx),%rcx
ffffffff80000aea:	48 89 08             	mov    %rcx,(%rax)
ffffffff80000aed:	48 8d 04 d5 00 00 00 	lea    0x0(,%rdx,8),%rax
ffffffff80000af4:	00 
ffffffff80000af5:	48 01 f8             	add    %rdi,%rax
ffffffff80000af8:	48 8b 16             	mov    (%rsi),%rdx
ffffffff80000afb:	48 89 10             	mov    %rdx,(%rax)
ffffffff80000afe:	83 45 e4 01          	addl   $0x1,-0x1c(%rbp)
ffffffff80000b02:	8b 45 e4             	mov    -0x1c(%rbp),%eax
ffffffff80000b05:	48 98                	cltq   
ffffffff80000b07:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
ffffffff80000b0b:	48 8b 12             	mov    (%rdx),%rdx
ffffffff80000b0e:	48 8b 92 f0 00 00 00 	mov    0xf0(%rdx),%rdx
ffffffff80000b15:	48 85 d2             	test   %rdx,%rdx
ffffffff80000b18:	74 17                	je     ffffffff80000b31 <trace+0x34a>
ffffffff80000b1a:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
ffffffff80000b1e:	48 8b 12             	mov    (%rdx),%rdx
ffffffff80000b21:	48 8b 92 f0 00 00 00 	mov    0xf0(%rdx),%rdx
ffffffff80000b28:	48 83 ea 20          	sub    $0x20,%rdx
ffffffff80000b2c:	48 8b 12             	mov    (%rdx),%rdx
ffffffff80000b2f:	eb 05                	jmp    ffffffff80000b36 <trace+0x34f>
ffffffff80000b31:	ba 00 00 00 00       	mov    $0x0,%edx
ffffffff80000b36:	48 39 c2             	cmp    %rax,%rdx
ffffffff80000b39:	0f 8f ec fe ff ff    	jg     ffffffff80000a2b <trace+0x244>
ffffffff80000b3f:	8b 05 bb f4 0a 00    	mov    0xaf4bb(%rip),%eax        # ffffffff800b0000 <m_color_black>
ffffffff80000b45:	89 c2                	mov    %eax,%edx
ffffffff80000b47:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff80000b4b:	88 50 08             	mov    %dl,0x8(%rax)
ffffffff80000b4e:	90                   	nop
ffffffff80000b4f:	48 8d 65 f0          	lea    -0x10(%rbp),%rsp
ffffffff80000b53:	5b                   	pop    %rbx
ffffffff80000b54:	41 5c                	pop    %r12
ffffffff80000b56:	5d                   	pop    %rbp
ffffffff80000b57:	c3                   	ret    

ffffffff80000b58 <trace_heap>:
ffffffff80000b58:	f3 0f 1e fa          	endbr64 
ffffffff80000b5c:	55                   	push   %rbp
ffffffff80000b5d:	48 89 e5             	mov    %rsp,%rbp
ffffffff80000b60:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff80000b64:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
ffffffff80000b6b:	e9 a3 00 00 00       	jmp    ffffffff80000c13 <trace_heap+0xbb>
ffffffff80000b70:	48 8b 15 99 f4 0a 00 	mov    0xaf499(%rip),%rdx        # ffffffff800b0010 <m_roots>
ffffffff80000b77:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff80000b7a:	48 98                	cltq   
ffffffff80000b7c:	48 c1 e0 03          	shl    $0x3,%rax
ffffffff80000b80:	48 01 d0             	add    %rdx,%rax
ffffffff80000b83:	48 8b 00             	mov    (%rax),%rax
ffffffff80000b86:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff80000b8a:	48 8b 05 87 f4 0a 00 	mov    0xaf487(%rip),%rax        # ffffffff800b0018 <m_mark_stack>
ffffffff80000b91:	48 85 c0             	test   %rax,%rax
ffffffff80000b94:	74 26                	je     ffffffff80000bbc <trace_heap+0x64>
ffffffff80000b96:	48 8b 05 7b f4 0a 00 	mov    0xaf47b(%rip),%rax        # ffffffff800b0018 <m_mark_stack>
ffffffff80000b9d:	48 83 e8 20          	sub    $0x20,%rax
ffffffff80000ba1:	48 8b 00             	mov    (%rax),%rax
ffffffff80000ba4:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffff80000ba8:	48 8b 05 69 f4 0a 00 	mov    0xaf469(%rip),%rax        # ffffffff800b0018 <m_mark_stack>
ffffffff80000baf:	48 83 e8 20          	sub    $0x20,%rax
ffffffff80000bb3:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff80000bb7:	48 39 c2             	cmp    %rax,%rdx
ffffffff80000bba:	76 25                	jbe    ffffffff80000be1 <trace_heap+0x89>
ffffffff80000bbc:	48 8b 05 55 f4 0a 00 	mov    0xaf455(%rip),%rax        # ffffffff800b0018 <m_mark_stack>
ffffffff80000bc3:	b9 00 00 00 00       	mov    $0x0,%ecx
ffffffff80000bc8:	ba 01 00 00 00       	mov    $0x1,%edx
ffffffff80000bcd:	be 08 00 00 00       	mov    $0x8,%esi
ffffffff80000bd2:	48 89 c7             	mov    %rax,%rdi
ffffffff80000bd5:	e8 8e e3 00 00       	call   ffffffff8000ef68 <stbds_arrgrowf>
ffffffff80000bda:	48 89 05 37 f4 0a 00 	mov    %rax,0xaf437(%rip)        # ffffffff800b0018 <m_mark_stack>
ffffffff80000be1:	48 8b 35 30 f4 0a 00 	mov    0xaf430(%rip),%rsi        # ffffffff800b0018 <m_mark_stack>
ffffffff80000be8:	48 8b 05 29 f4 0a 00 	mov    0xaf429(%rip),%rax        # ffffffff800b0018 <m_mark_stack>
ffffffff80000bef:	48 83 e8 20          	sub    $0x20,%rax
ffffffff80000bf3:	48 8b 10             	mov    (%rax),%rdx
ffffffff80000bf6:	48 8d 4a 01          	lea    0x1(%rdx),%rcx
ffffffff80000bfa:	48 89 08             	mov    %rcx,(%rax)
ffffffff80000bfd:	48 8d 04 d5 00 00 00 	lea    0x0(,%rdx,8),%rax
ffffffff80000c04:	00 
ffffffff80000c05:	48 01 f0             	add    %rsi,%rax
ffffffff80000c08:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff80000c0c:	48 89 10             	mov    %rdx,(%rax)
ffffffff80000c0f:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
ffffffff80000c13:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff80000c16:	48 98                	cltq   
ffffffff80000c18:	48 8b 15 f1 f3 0a 00 	mov    0xaf3f1(%rip),%rdx        # ffffffff800b0010 <m_roots>
ffffffff80000c1f:	48 85 d2             	test   %rdx,%rdx
ffffffff80000c22:	74 18                	je     ffffffff80000c3c <trace_heap+0xe4>
ffffffff80000c24:	48 8b 15 e5 f3 0a 00 	mov    0xaf3e5(%rip),%rdx        # ffffffff800b0010 <m_roots>
ffffffff80000c2b:	48 83 ea 08          	sub    $0x8,%rdx
ffffffff80000c2f:	48 83 ea 20          	sub    $0x20,%rdx
ffffffff80000c33:	48 8b 12             	mov    (%rdx),%rdx
ffffffff80000c36:	48 83 ea 01          	sub    $0x1,%rdx
ffffffff80000c3a:	eb 05                	jmp    ffffffff80000c41 <trace_heap+0xe9>
ffffffff80000c3c:	ba 00 00 00 00       	mov    $0x0,%edx
ffffffff80000c41:	48 39 c2             	cmp    %rax,%rdx
ffffffff80000c44:	0f 8f 26 ff ff ff    	jg     ffffffff80000b70 <trace_heap+0x18>
ffffffff80000c4a:	eb 44                	jmp    ffffffff80000c90 <trace_heap+0x138>
ffffffff80000c4c:	48 8b 05 c5 f3 0a 00 	mov    0xaf3c5(%rip),%rax        # ffffffff800b0018 <m_mark_stack>
ffffffff80000c53:	48 83 e8 20          	sub    $0x20,%rax
ffffffff80000c57:	48 8b 10             	mov    (%rax),%rdx
ffffffff80000c5a:	48 83 ea 01          	sub    $0x1,%rdx
ffffffff80000c5e:	48 89 10             	mov    %rdx,(%rax)
ffffffff80000c61:	48 8b 15 b0 f3 0a 00 	mov    0xaf3b0(%rip),%rdx        # ffffffff800b0018 <m_mark_stack>
ffffffff80000c68:	48 8b 05 a9 f3 0a 00 	mov    0xaf3a9(%rip),%rax        # ffffffff800b0018 <m_mark_stack>
ffffffff80000c6f:	48 83 e8 20          	sub    $0x20,%rax
ffffffff80000c73:	48 8b 00             	mov    (%rax),%rax
ffffffff80000c76:	48 c1 e0 03          	shl    $0x3,%rax
ffffffff80000c7a:	48 01 d0             	add    %rdx,%rax
ffffffff80000c7d:	48 8b 00             	mov    (%rax),%rax
ffffffff80000c80:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff80000c84:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80000c88:	48 89 c7             	mov    %rax,%rdi
ffffffff80000c8b:	e8 57 fb ff ff       	call   ffffffff800007e7 <trace>
ffffffff80000c90:	48 8b 05 81 f3 0a 00 	mov    0xaf381(%rip),%rax        # ffffffff800b0018 <m_mark_stack>
ffffffff80000c97:	48 85 c0             	test   %rax,%rax
ffffffff80000c9a:	74 13                	je     ffffffff80000caf <trace_heap+0x157>
ffffffff80000c9c:	48 8b 05 75 f3 0a 00 	mov    0xaf375(%rip),%rax        # ffffffff800b0018 <m_mark_stack>
ffffffff80000ca3:	48 83 e8 20          	sub    $0x20,%rax
ffffffff80000ca7:	48 8b 00             	mov    (%rax),%rax
ffffffff80000caa:	48 85 c0             	test   %rax,%rax
ffffffff80000cad:	75 9d                	jne    ffffffff80000c4c <trace_heap+0xf4>
ffffffff80000caf:	90                   	nop
ffffffff80000cb0:	c9                   	leave  
ffffffff80000cb1:	c3                   	ret    

ffffffff80000cb2 <sweep>:
ffffffff80000cb2:	f3 0f 1e fa          	endbr64 
ffffffff80000cb6:	55                   	push   %rbp
ffffffff80000cb7:	48 89 e5             	mov    %rsp,%rbp
ffffffff80000cba:	48 83 ec 30          	sub    $0x30,%rsp
ffffffff80000cbe:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80000cc3:	e8 f0 57 01 00       	call   ffffffff800164b8 <lock_all_threads>
ffffffff80000cc8:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
ffffffff80000ccf:	eb 67                	jmp    ffffffff80000d38 <sweep+0x86>
ffffffff80000cd1:	48 8b 15 a8 04 2b 00 	mov    0x2b04a8(%rip),%rdx        # ffffffff802b1180 <g_all_threads>
ffffffff80000cd8:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff80000cdb:	48 98                	cltq   
ffffffff80000cdd:	48 c1 e0 03          	shl    $0x3,%rax
ffffffff80000ce1:	48 01 d0             	add    %rdx,%rax
ffffffff80000ce4:	48 8b 00             	mov    (%rax),%rax
ffffffff80000ce7:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff80000ceb:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80000cf0:	e8 30 47 01 00       	call   ffffffff80015425 <get_current_thread>
ffffffff80000cf5:	48 39 45 e0          	cmp    %rax,-0x20(%rbp)
ffffffff80000cf9:	74 38                	je     ffffffff80000d33 <sweep+0x81>
ffffffff80000cfb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80000cff:	48 89 c7             	mov    %rax,%rdi
ffffffff80000d02:	e8 cb 39 01 00       	call   ffffffff800146d2 <scheduler_suspend_thread>
ffffffff80000d07:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
ffffffff80000d0b:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
ffffffff80000d0f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80000d13:	48 8b 80 d0 00 00 00 	mov    0xd0(%rax),%rax
ffffffff80000d1a:	c6 40 08 00          	movb   $0x0,0x8(%rax)
ffffffff80000d1e:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
ffffffff80000d22:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80000d26:	48 89 d7             	mov    %rdx,%rdi
ffffffff80000d29:	48 89 c6             	mov    %rax,%rsi
ffffffff80000d2c:	e8 04 3b 01 00       	call   ffffffff80014835 <scheduler_resume_thread>
ffffffff80000d31:	eb 01                	jmp    ffffffff80000d34 <sweep+0x82>
ffffffff80000d33:	90                   	nop
ffffffff80000d34:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
ffffffff80000d38:	8b 05 ca f2 0a 00    	mov    0xaf2ca(%rip),%eax        # ffffffff800b0008 <m_thread_count>
ffffffff80000d3e:	39 45 fc             	cmp    %eax,-0x4(%rbp)
ffffffff80000d41:	7c 8e                	jl     ffffffff80000cd1 <sweep+0x1f>
ffffffff80000d43:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80000d48:	e8 85 57 01 00       	call   ffffffff800164d2 <unlock_all_threads>
ffffffff80000d4d:	48 8d 05 b0 f2 0a 00 	lea    0xaf2b0(%rip),%rax        # ffffffff800b0004 <m_all_objects_lock>
ffffffff80000d54:	48 89 c7             	mov    %rax,%rdi
ffffffff80000d57:	e8 b2 10 00 00       	call   ffffffff80001e0e <spinlock_lock>
ffffffff80000d5c:	48 8b 05 3d 63 0a 00 	mov    0xa633d(%rip),%rax        # ffffffff800a70a0 <m_all_objects>
ffffffff80000d63:	48 83 e8 18          	sub    $0x18,%rax
ffffffff80000d67:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff80000d6b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80000d6f:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff80000d73:	48 83 e8 18          	sub    $0x18,%rax
ffffffff80000d77:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff80000d7b:	eb 74                	jmp    ffffffff80000df1 <sweep+0x13f>
ffffffff80000d7d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80000d81:	0f b6 40 08          	movzbl 0x8(%rax),%eax
ffffffff80000d85:	0f b6 c0             	movzbl %al,%eax
ffffffff80000d88:	8b 15 72 62 0a 00    	mov    0xa6272(%rip),%edx        # ffffffff800a7000 <m_color_white>
ffffffff80000d8e:	39 d0                	cmp    %edx,%eax
ffffffff80000d90:	75 47                	jne    ffffffff80000dd9 <sweep+0x127>
ffffffff80000d92:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80000d97:	e8 45 5f 00 00       	call   ffffffff80006ce1 <get_apic_id>
ffffffff80000d9c:	48 89 c1             	mov    %rax,%rcx
ffffffff80000d9f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80000da3:	48 89 c2             	mov    %rax,%rdx
ffffffff80000da6:	48 89 ce             	mov    %rcx,%rsi
ffffffff80000da9:	48 8d 05 6c 72 03 00 	lea    0x3726c(%rip),%rax        # ffffffff8003801c <g_stivale2_header+0x101c>
ffffffff80000db0:	48 89 c7             	mov    %rax,%rdi
ffffffff80000db3:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80000db8:	e8 83 27 01 00       	call   ffffffff80013540 <printf_>
ffffffff80000dbd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80000dc1:	48 83 c0 18          	add    $0x18,%rax
ffffffff80000dc5:	48 89 c7             	mov    %rax,%rdi
ffffffff80000dc8:	e8 3d 03 01 00       	call   ffffffff8001110a <list_del>
ffffffff80000dcd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80000dd1:	48 89 c7             	mov    %rax,%rdi
ffffffff80000dd4:	e8 2d ab 00 00       	call   ffffffff8000b906 <free>
ffffffff80000dd9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80000ddd:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff80000de1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80000de5:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff80000de9:	48 83 e8 18          	sub    $0x18,%rax
ffffffff80000ded:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff80000df1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80000df5:	48 8d 50 18          	lea    0x18(%rax),%rdx
ffffffff80000df9:	48 8d 05 a0 62 0a 00 	lea    0xa62a0(%rip),%rax        # ffffffff800a70a0 <m_all_objects>
ffffffff80000e00:	48 39 c2             	cmp    %rax,%rdx
ffffffff80000e03:	0f 85 74 ff ff ff    	jne    ffffffff80000d7d <sweep+0xcb>
ffffffff80000e09:	48 8d 05 f4 f1 0a 00 	lea    0xaf1f4(%rip),%rax        # ffffffff800b0004 <m_all_objects_lock>
ffffffff80000e10:	48 89 c7             	mov    %rax,%rdi
ffffffff80000e13:	e8 c5 10 00 00       	call   ffffffff80001edd <spinlock_unlock>
ffffffff80000e18:	90                   	nop
ffffffff80000e19:	c9                   	leave  
ffffffff80000e1a:	c3                   	ret    

ffffffff80000e1b <prepare_next_collection>:
ffffffff80000e1b:	f3 0f 1e fa          	endbr64 
ffffffff80000e1f:	55                   	push   %rbp
ffffffff80000e20:	48 89 e5             	mov    %rsp,%rbp
ffffffff80000e23:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff80000e27:	48 8b 05 e2 f1 0a 00 	mov    0xaf1e2(%rip),%rax        # ffffffff800b0010 <m_roots>
ffffffff80000e2e:	48 85 c0             	test   %rax,%rax
ffffffff80000e31:	74 18                	je     ffffffff80000e4b <prepare_next_collection+0x30>
ffffffff80000e33:	48 8b 05 d6 f1 0a 00 	mov    0xaf1d6(%rip),%rax        # ffffffff800b0010 <m_roots>
ffffffff80000e3a:	48 83 e8 08          	sub    $0x8,%rax
ffffffff80000e3e:	be 08 00 00 00       	mov    $0x8,%esi
ffffffff80000e43:	48 89 c7             	mov    %rax,%rdi
ffffffff80000e46:	e8 aa ee 00 00       	call   ffffffff8000fcf5 <stbds_hmfree_func>
ffffffff80000e4b:	48 c7 05 ba f1 0a 00 	movq   $0x0,0xaf1ba(%rip)        # ffffffff800b0010 <m_roots>
ffffffff80000e52:	00 00 00 00 
ffffffff80000e56:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80000e5b:	e8 58 56 01 00       	call   ffffffff800164b8 <lock_all_threads>
ffffffff80000e60:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
ffffffff80000e67:	e9 d9 00 00 00       	jmp    ffffffff80000f45 <prepare_next_collection+0x12a>
ffffffff80000e6c:	48 8b 15 0d 03 2b 00 	mov    0x2b030d(%rip),%rdx        # ffffffff802b1180 <g_all_threads>
ffffffff80000e73:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff80000e76:	48 98                	cltq   
ffffffff80000e78:	48 c1 e0 03          	shl    $0x3,%rax
ffffffff80000e7c:	48 01 d0             	add    %rdx,%rax
ffffffff80000e7f:	48 8b 00             	mov    (%rax),%rax
ffffffff80000e82:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff80000e86:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80000e8b:	e8 95 45 01 00       	call   ffffffff80015425 <get_current_thread>
ffffffff80000e90:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
ffffffff80000e94:	0f 84 a6 00 00 00    	je     ffffffff80000f40 <prepare_next_collection+0x125>
ffffffff80000e9a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80000e9e:	48 8b 80 d0 00 00 00 	mov    0xd0(%rax),%rax
ffffffff80000ea5:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff80000ea9:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff80000ead:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
ffffffff80000eb4:	eb 23                	jmp    ffffffff80000ed9 <prepare_next_collection+0xbe>
ffffffff80000eb6:	8b 45 f8             	mov    -0x8(%rbp),%eax
ffffffff80000eb9:	48 98                	cltq   
ffffffff80000ebb:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
ffffffff80000ec2:	00 
ffffffff80000ec3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80000ec7:	48 01 d0             	add    %rdx,%rax
ffffffff80000eca:	48 8b 00             	mov    (%rax),%rax
ffffffff80000ecd:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
ffffffff80000ed4:	00 
ffffffff80000ed5:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)
ffffffff80000ed9:	8b 45 f8             	mov    -0x8(%rbp),%eax
ffffffff80000edc:	48 98                	cltq   
ffffffff80000ede:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
ffffffff80000ee3:	74 0d                	je     ffffffff80000ef2 <prepare_next_collection+0xd7>
ffffffff80000ee5:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff80000ee9:	48 83 ea 20          	sub    $0x20,%rdx
ffffffff80000eed:	48 8b 12             	mov    (%rdx),%rdx
ffffffff80000ef0:	eb 05                	jmp    ffffffff80000ef7 <prepare_next_collection+0xdc>
ffffffff80000ef2:	ba 00 00 00 00       	mov    $0x0,%edx
ffffffff80000ef7:	48 39 c2             	cmp    %rax,%rdx
ffffffff80000efa:	7f ba                	jg     ffffffff80000eb6 <prepare_next_collection+0x9b>
ffffffff80000efc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80000f00:	48 8b 80 d0 00 00 00 	mov    0xd0(%rax),%rax
ffffffff80000f07:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff80000f0b:	48 85 c0             	test   %rax,%rax
ffffffff80000f0e:	74 1b                	je     ffffffff80000f2b <prepare_next_collection+0x110>
ffffffff80000f10:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80000f14:	48 8b 80 d0 00 00 00 	mov    0xd0(%rax),%rax
ffffffff80000f1b:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff80000f1f:	48 83 e8 20          	sub    $0x20,%rax
ffffffff80000f23:	48 89 c7             	mov    %rax,%rdi
ffffffff80000f26:	e8 db a9 00 00       	call   ffffffff8000b906 <free>
ffffffff80000f2b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80000f2f:	48 8b 80 d0 00 00 00 	mov    0xd0(%rax),%rax
ffffffff80000f36:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
ffffffff80000f3d:	00 
ffffffff80000f3e:	eb 01                	jmp    ffffffff80000f41 <prepare_next_collection+0x126>
ffffffff80000f40:	90                   	nop
ffffffff80000f41:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
ffffffff80000f45:	8b 05 bd f0 0a 00    	mov    0xaf0bd(%rip),%eax        # ffffffff800b0008 <m_thread_count>
ffffffff80000f4b:	39 45 fc             	cmp    %eax,-0x4(%rbp)
ffffffff80000f4e:	0f 8c 18 ff ff ff    	jl     ffffffff80000e6c <prepare_next_collection+0x51>
ffffffff80000f54:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80000f59:	e8 74 55 01 00       	call   ffffffff800164d2 <unlock_all_threads>
ffffffff80000f5e:	90                   	nop
ffffffff80000f5f:	c9                   	leave  
ffffffff80000f60:	c3                   	ret    

ffffffff80000f61 <gc_collection_cycle>:
ffffffff80000f61:	f3 0f 1e fa          	endbr64 
ffffffff80000f65:	55                   	push   %rbp
ffffffff80000f66:	48 89 e5             	mov    %rsp,%rbp
ffffffff80000f69:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80000f6e:	e8 9e f4 ff ff       	call   ffffffff80000411 <initiate_collection_cycle>
ffffffff80000f73:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80000f78:	e8 e8 f5 ff ff       	call   ffffffff80000565 <get_roots>
ffffffff80000f7d:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80000f82:	e8 d1 fb ff ff       	call   ffffffff80000b58 <trace_heap>
ffffffff80000f87:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80000f8c:	e8 21 fd ff ff       	call   ffffffff80000cb2 <sweep>
ffffffff80000f91:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80000f96:	e8 80 fe ff ff       	call   ffffffff80000e1b <prepare_next_collection>
ffffffff80000f9b:	90                   	nop
ffffffff80000f9c:	5d                   	pop    %rbp
ffffffff80000f9d:	c3                   	ret    

ffffffff80000f9e <gc_next>:
ffffffff80000f9e:	f3 0f 1e fa          	endbr64 
ffffffff80000fa2:	55                   	push   %rbp
ffffffff80000fa3:	48 89 e5             	mov    %rsp,%rbp
ffffffff80000fa6:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff80000faa:	48 8d 05 53 60 0a 00 	lea    0xa6053(%rip),%rax        # ffffffff800a7004 <m_running>
ffffffff80000fb1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff80000fb5:	c6 45 ee 00          	movb   $0x0,-0x12(%rbp)
ffffffff80000fb9:	0f b6 45 ee          	movzbl -0x12(%rbp),%eax
ffffffff80000fbd:	0f b6 d0             	movzbl %al,%edx
ffffffff80000fc0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80000fc4:	86 10                	xchg   %dl,(%rax)
ffffffff80000fc6:	48 8d 05 93 f0 0a 00 	lea    0xaf093(%rip),%rax        # ffffffff800b0060 <m_done>
ffffffff80000fcd:	48 89 c7             	mov    %rax,%rdi
ffffffff80000fd0:	e8 03 06 00 00       	call   ffffffff800015d8 <conditional_broadcast>
ffffffff80000fd5:	48 8d 05 44 f0 0a 00 	lea    0xaf044(%rip),%rax        # ffffffff800b0020 <m_trigger_mutex>
ffffffff80000fdc:	48 89 c6             	mov    %rax,%rsi
ffffffff80000fdf:	48 8d 05 5a f0 0a 00 	lea    0xaf05a(%rip),%rax        # ffffffff800b0040 <m_wake>
ffffffff80000fe6:	48 89 c7             	mov    %rax,%rdi
ffffffff80000fe9:	e8 7c 05 00 00       	call   ffffffff8000156a <conditional_wait>
ffffffff80000fee:	48 8d 05 0f 60 0a 00 	lea    0xa600f(%rip),%rax        # ffffffff800a7004 <m_running>
ffffffff80000ff5:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff80000ff9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80000ffd:	0f b6 00             	movzbl (%rax),%eax
ffffffff80001000:	88 45 ef             	mov    %al,-0x11(%rbp)
ffffffff80001003:	0f b6 45 ef          	movzbl -0x11(%rbp),%eax
ffffffff80001007:	83 f0 01             	xor    $0x1,%eax
ffffffff8000100a:	84 c0                	test   %al,%al
ffffffff8000100c:	75 c7                	jne    ffffffff80000fd5 <gc_next+0x37>
ffffffff8000100e:	90                   	nop
ffffffff8000100f:	90                   	nop
ffffffff80001010:	c9                   	leave  
ffffffff80001011:	c3                   	ret    

ffffffff80001012 <gc_wake>:
ffffffff80001012:	f3 0f 1e fa          	endbr64 
ffffffff80001016:	55                   	push   %rbp
ffffffff80001017:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000101a:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff8000101e:	48 8d 05 df 5f 0a 00 	lea    0xa5fdf(%rip),%rax        # ffffffff800a7004 <m_running>
ffffffff80001025:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff80001029:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000102d:	0f b6 00             	movzbl (%rax),%eax
ffffffff80001030:	88 45 ee             	mov    %al,-0x12(%rbp)
ffffffff80001033:	0f b6 45 ee          	movzbl -0x12(%rbp),%eax
ffffffff80001037:	84 c0                	test   %al,%al
ffffffff80001039:	75 2d                	jne    ffffffff80001068 <gc_wake+0x56>
ffffffff8000103b:	48 8d 05 c2 5f 0a 00 	lea    0xa5fc2(%rip),%rax        # ffffffff800a7004 <m_running>
ffffffff80001042:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff80001046:	c6 45 ef 01          	movb   $0x1,-0x11(%rbp)
ffffffff8000104a:	0f b6 45 ef          	movzbl -0x11(%rbp),%eax
ffffffff8000104e:	0f b6 d0             	movzbl %al,%edx
ffffffff80001051:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80001055:	86 10                	xchg   %dl,(%rax)
ffffffff80001057:	48 8d 05 e2 ef 0a 00 	lea    0xaefe2(%rip),%rax        # ffffffff800b0040 <m_wake>
ffffffff8000105e:	48 89 c7             	mov    %rax,%rdi
ffffffff80001061:	e8 53 05 00 00       	call   ffffffff800015b9 <conditional_signal>
ffffffff80001066:	eb 01                	jmp    ffffffff80001069 <gc_wake+0x57>
ffffffff80001068:	90                   	nop
ffffffff80001069:	c9                   	leave  
ffffffff8000106a:	c3                   	ret    

ffffffff8000106b <gc_wait>:
ffffffff8000106b:	f3 0f 1e fa          	endbr64 
ffffffff8000106f:	55                   	push   %rbp
ffffffff80001070:	48 89 e5             	mov    %rsp,%rbp
ffffffff80001073:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff80001077:	48 8d 05 a2 ef 0a 00 	lea    0xaefa2(%rip),%rax        # ffffffff800b0020 <m_trigger_mutex>
ffffffff8000107e:	48 89 c7             	mov    %rax,%rdi
ffffffff80001081:	e8 4d 0b 00 00       	call   ffffffff80001bd3 <mutex_lock>
ffffffff80001086:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000108b:	e8 82 ff ff ff       	call   ffffffff80001012 <gc_wake>
ffffffff80001090:	48 8d 05 89 ef 0a 00 	lea    0xaef89(%rip),%rax        # ffffffff800b0020 <m_trigger_mutex>
ffffffff80001097:	48 89 c6             	mov    %rax,%rsi
ffffffff8000109a:	48 8d 05 bf ef 0a 00 	lea    0xaefbf(%rip),%rax        # ffffffff800b0060 <m_done>
ffffffff800010a1:	48 89 c7             	mov    %rax,%rdi
ffffffff800010a4:	e8 c1 04 00 00       	call   ffffffff8000156a <conditional_wait>
ffffffff800010a9:	48 8d 05 54 5f 0a 00 	lea    0xa5f54(%rip),%rax        # ffffffff800a7004 <m_running>
ffffffff800010b0:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff800010b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff800010b8:	0f b6 00             	movzbl (%rax),%eax
ffffffff800010bb:	88 45 f7             	mov    %al,-0x9(%rbp)
ffffffff800010be:	0f b6 45 f7          	movzbl -0x9(%rbp),%eax
ffffffff800010c2:	84 c0                	test   %al,%al
ffffffff800010c4:	75 ca                	jne    ffffffff80001090 <gc_wait+0x25>
ffffffff800010c6:	48 8d 05 53 ef 0a 00 	lea    0xaef53(%rip),%rax        # ffffffff800b0020 <m_trigger_mutex>
ffffffff800010cd:	48 89 c7             	mov    %rax,%rdi
ffffffff800010d0:	e8 b4 0c 00 00       	call   ffffffff80001d89 <mutex_unlock>
ffffffff800010d5:	90                   	nop
ffffffff800010d6:	c9                   	leave  
ffffffff800010d7:	c3                   	ret    

ffffffff800010d8 <gc_thread>:
ffffffff800010d8:	f3 0f 1e fa          	endbr64 
ffffffff800010dc:	55                   	push   %rbp
ffffffff800010dd:	48 89 e5             	mov    %rsp,%rbp
ffffffff800010e0:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff800010e4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff800010e8:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800010ed:	e8 ef 5b 00 00       	call   ffffffff80006ce1 <get_apic_id>
ffffffff800010f2:	48 89 c6             	mov    %rax,%rsi
ffffffff800010f5:	48 8d 05 2c b6 03 00 	lea    0x3b62c(%rip),%rax        # ffffffff8003c728 <g_stivale2_header+0x5728>
ffffffff800010fc:	48 89 c7             	mov    %rax,%rdi
ffffffff800010ff:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80001104:	e8 37 24 01 00       	call   ffffffff80013540 <printf_>
ffffffff80001109:	48 8d 05 10 ef 0a 00 	lea    0xaef10(%rip),%rax        # ffffffff800b0020 <m_trigger_mutex>
ffffffff80001110:	48 89 c7             	mov    %rax,%rdi
ffffffff80001113:	e8 bb 0a 00 00       	call   ffffffff80001bd3 <mutex_lock>
ffffffff80001118:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000111d:	e8 7c fe ff ff       	call   ffffffff80000f9e <gc_next>
ffffffff80001122:	48 8d 05 f7 ee 0a 00 	lea    0xaeef7(%rip),%rax        # ffffffff800b0020 <m_trigger_mutex>
ffffffff80001129:	48 89 c7             	mov    %rax,%rdi
ffffffff8000112c:	e8 58 0c 00 00       	call   ffffffff80001d89 <mutex_unlock>
ffffffff80001131:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80001136:	e8 a6 5b 00 00       	call   ffffffff80006ce1 <get_apic_id>
ffffffff8000113b:	48 89 c6             	mov    %rax,%rsi
ffffffff8000113e:	48 8d 05 0b b6 03 00 	lea    0x3b60b(%rip),%rax        # ffffffff8003c750 <g_stivale2_header+0x5750>
ffffffff80001145:	48 89 c7             	mov    %rax,%rdi
ffffffff80001148:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000114d:	e8 ee 23 01 00       	call   ffffffff80013540 <printf_>
ffffffff80001152:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80001157:	e8 05 fe ff ff       	call   ffffffff80000f61 <gc_collection_cycle>
ffffffff8000115c:	eb ab                	jmp    ffffffff80001109 <gc_thread+0x31>

ffffffff8000115e <init_gc>:
ffffffff8000115e:	f3 0f 1e fa          	endbr64 
ffffffff80001162:	55                   	push   %rbp
ffffffff80001163:	48 89 e5             	mov    %rsp,%rbp
ffffffff80001166:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff8000116a:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
ffffffff80001171:	48 8d 05 be 6e 03 00 	lea    0x36ebe(%rip),%rax        # ffffffff80038036 <g_stivale2_header+0x1036>
ffffffff80001178:	48 89 c2             	mov    %rax,%rdx
ffffffff8000117b:	be 00 00 00 00       	mov    $0x0,%esi
ffffffff80001180:	48 8d 05 51 ff ff ff 	lea    -0xaf(%rip),%rax        # ffffffff800010d8 <gc_thread>
ffffffff80001187:	48 89 c7             	mov    %rax,%rdi
ffffffff8000118a:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000118f:	e8 1a 51 01 00       	call   ffffffff800162ae <create_thread>
ffffffff80001194:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff80001198:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
ffffffff8000119d:	75 46                	jne    ffffffff800011e5 <init_gc+0x87>
ffffffff8000119f:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)
ffffffff800011a6:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800011ab:	e8 31 5b 00 00       	call   ffffffff80006ce1 <get_apic_id>
ffffffff800011b0:	48 89 c6             	mov    %rax,%rsi
ffffffff800011b3:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff800011b6:	41 b9 33 01 00 00    	mov    $0x133,%r9d
ffffffff800011bc:	4c 8d 05 7d 6e 03 00 	lea    0x36e7d(%rip),%r8        # ffffffff80038040 <g_stivale2_header+0x1040>
ffffffff800011c3:	48 8d 15 f6 c1 03 00 	lea    0x3c1f6(%rip),%rdx        # ffffffff8003d3c0 <__FUNCTION__.0.lto_priv.0>
ffffffff800011ca:	48 89 d1             	mov    %rdx,%rcx
ffffffff800011cd:	89 c2                	mov    %eax,%edx
ffffffff800011cf:	48 8d 05 a2 b5 03 00 	lea    0x3b5a2(%rip),%rax        # ffffffff8003c778 <g_stivale2_header+0x5778>
ffffffff800011d6:	48 89 c7             	mov    %rax,%rdi
ffffffff800011d9:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800011de:	e8 5d 23 01 00       	call   ffffffff80013540 <printf_>
ffffffff800011e3:	eb 0c                	jmp    ffffffff800011f1 <init_gc+0x93>
ffffffff800011e5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff800011e9:	48 89 c7             	mov    %rax,%rdi
ffffffff800011ec:	e8 c7 32 01 00       	call   ffffffff800144b8 <scheduler_ready_thread>
ffffffff800011f1:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff800011f4:	90                   	nop
ffffffff800011f5:	90                   	nop
ffffffff800011f6:	c9                   	leave  
ffffffff800011f7:	c3                   	ret    

ffffffff800011f8 <less>:
ffffffff800011f8:	f3 0f 1e fa          	endbr64 
ffffffff800011fc:	55                   	push   %rbp
ffffffff800011fd:	48 89 e5             	mov    %rsp,%rbp
ffffffff80001200:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80001204:	89 7d fc             	mov    %edi,-0x4(%rbp)
ffffffff80001207:	89 75 f8             	mov    %esi,-0x8(%rbp)
ffffffff8000120a:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8000120d:	2b 45 f8             	sub    -0x8(%rbp),%eax
ffffffff80001210:	c1 e8 1f             	shr    $0x1f,%eax
ffffffff80001213:	c9                   	leave  
ffffffff80001214:	c3                   	ret    

ffffffff80001215 <notify_list_add>:
ffffffff80001215:	f3 0f 1e fa          	endbr64 
ffffffff80001219:	55                   	push   %rbp
ffffffff8000121a:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000121d:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80001221:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff80001225:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80001229:	ba 01 00 00 00       	mov    $0x1,%edx
ffffffff8000122e:	f0 0f c1 10          	lock xadd %edx,(%rax)
ffffffff80001232:	89 d0                	mov    %edx,%eax
ffffffff80001234:	c9                   	leave  
ffffffff80001235:	c3                   	ret    

ffffffff80001236 <notify_list_wait>:
ffffffff80001236:	f3 0f 1e fa          	endbr64 
ffffffff8000123a:	55                   	push   %rbp
ffffffff8000123b:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000123e:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff80001242:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff80001246:	89 75 e4             	mov    %esi,-0x1c(%rbp)
ffffffff80001249:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000124d:	48 83 c0 08          	add    $0x8,%rax
ffffffff80001251:	48 89 c7             	mov    %rax,%rdi
ffffffff80001254:	e8 b5 0b 00 00       	call   ffffffff80001e0e <spinlock_lock>
ffffffff80001259:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000125d:	8b 50 04             	mov    0x4(%rax),%edx
ffffffff80001260:	8b 45 e4             	mov    -0x1c(%rbp),%eax
ffffffff80001263:	89 d6                	mov    %edx,%esi
ffffffff80001265:	89 c7                	mov    %eax,%edi
ffffffff80001267:	e8 8c ff ff ff       	call   ffffffff800011f8 <less>
ffffffff8000126c:	84 c0                	test   %al,%al
ffffffff8000126e:	74 15                	je     ffffffff80001285 <notify_list_wait+0x4f>
ffffffff80001270:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80001274:	48 83 c0 08          	add    $0x8,%rax
ffffffff80001278:	48 89 c7             	mov    %rax,%rdi
ffffffff8000127b:	e8 5d 0c 00 00       	call   ffffffff80001edd <spinlock_unlock>
ffffffff80001280:	e9 82 00 00 00       	jmp    ffffffff80001307 <notify_list_wait+0xd1>
ffffffff80001285:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000128a:	e8 b1 43 01 00       	call   ffffffff80015640 <acquire_waiting_thread>
ffffffff8000128f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff80001293:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80001298:	e8 88 41 01 00       	call   ffffffff80015425 <get_current_thread>
ffffffff8000129d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff800012a1:	48 89 02             	mov    %rax,(%rdx)
ffffffff800012a4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800012a8:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff800012ac:	48 85 c0             	test   %rax,%rax
ffffffff800012af:	75 0e                	jne    ffffffff800012bf <notify_list_wait+0x89>
ffffffff800012b1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800012b5:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff800012b9:	48 89 50 10          	mov    %rdx,0x10(%rax)
ffffffff800012bd:	eb 10                	jmp    ffffffff800012cf <notify_list_wait+0x99>
ffffffff800012bf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800012c3:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff800012c7:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff800012cb:	48 89 50 08          	mov    %rdx,0x8(%rax)
ffffffff800012cf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800012d3:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff800012d7:	48 89 50 18          	mov    %rdx,0x18(%rax)
ffffffff800012db:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff800012df:	48 8b 00             	mov    (%rax),%rax
ffffffff800012e2:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff800012e6:	48 83 c2 08          	add    $0x8,%rdx
ffffffff800012ea:	48 89 90 e8 00 00 00 	mov    %rdx,0xe8(%rax)
ffffffff800012f1:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800012f6:	e8 ef 40 01 00       	call   ffffffff800153ea <scheduler_park>
ffffffff800012fb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff800012ff:	48 89 c7             	mov    %rax,%rdi
ffffffff80001302:	e8 97 44 01 00       	call   ffffffff8001579e <release_waiting_thread>
ffffffff80001307:	c9                   	leave  
ffffffff80001308:	c3                   	ret    

ffffffff80001309 <notify_list_notify_all>:
ffffffff80001309:	f3 0f 1e fa          	endbr64 
ffffffff8000130d:	55                   	push   %rbp
ffffffff8000130e:	48 89 e5             	mov    %rsp,%rbp
ffffffff80001311:	48 83 ec 50          	sub    $0x50,%rsp
ffffffff80001315:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
ffffffff80001319:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff8000131d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff80001321:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80001325:	8b 00                	mov    (%rax),%eax
ffffffff80001327:	89 45 c0             	mov    %eax,-0x40(%rbp)
ffffffff8000132a:	8b 55 c0             	mov    -0x40(%rbp),%edx
ffffffff8000132d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff80001331:	48 83 c0 04          	add    $0x4,%rax
ffffffff80001335:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff80001339:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000133d:	8b 00                	mov    (%rax),%eax
ffffffff8000133f:	89 45 c4             	mov    %eax,-0x3c(%rbp)
ffffffff80001342:	8b 45 c4             	mov    -0x3c(%rbp),%eax
ffffffff80001345:	39 c2                	cmp    %eax,%edx
ffffffff80001347:	0f 84 aa 00 00 00    	je     ffffffff800013f7 <notify_list_notify_all+0xee>
ffffffff8000134d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff80001351:	48 83 c0 08          	add    $0x8,%rax
ffffffff80001355:	48 89 c7             	mov    %rax,%rdi
ffffffff80001358:	e8 b1 0a 00 00       	call   ffffffff80001e0e <spinlock_lock>
ffffffff8000135d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff80001361:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff80001365:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff80001369:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff8000136d:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
ffffffff80001374:	00 
ffffffff80001375:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff80001379:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)
ffffffff80001380:	00 
ffffffff80001381:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff80001385:	48 83 c0 04          	add    $0x4,%rax
ffffffff80001389:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff8000138d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff80001391:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
ffffffff80001395:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80001399:	8b 00                	mov    (%rax),%eax
ffffffff8000139b:	89 45 c8             	mov    %eax,-0x38(%rbp)
ffffffff8000139e:	8b 45 c8             	mov    -0x38(%rbp),%eax
ffffffff800013a1:	89 45 cc             	mov    %eax,-0x34(%rbp)
ffffffff800013a4:	8b 55 cc             	mov    -0x34(%rbp),%edx
ffffffff800013a7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff800013ab:	87 10                	xchg   %edx,(%rax)
ffffffff800013ad:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff800013b1:	48 83 c0 08          	add    $0x8,%rax
ffffffff800013b5:	48 89 c7             	mov    %rax,%rdi
ffffffff800013b8:	e8 20 0b 00 00       	call   ffffffff80001edd <spinlock_unlock>
ffffffff800013bd:	eb 2f                	jmp    ffffffff800013ee <notify_list_notify_all+0xe5>
ffffffff800013bf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff800013c3:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff800013c7:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
ffffffff800013cb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff800013cf:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
ffffffff800013d6:	00 
ffffffff800013d7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff800013db:	48 8b 00             	mov    (%rax),%rax
ffffffff800013de:	48 89 c7             	mov    %rax,%rdi
ffffffff800013e1:	e8 d2 30 01 00       	call   ffffffff800144b8 <scheduler_ready_thread>
ffffffff800013e6:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff800013ea:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff800013ee:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff800013f3:	75 ca                	jne    ffffffff800013bf <notify_list_notify_all+0xb6>
ffffffff800013f5:	eb 01                	jmp    ffffffff800013f8 <notify_list_notify_all+0xef>
ffffffff800013f7:	90                   	nop
ffffffff800013f8:	c9                   	leave  
ffffffff800013f9:	c3                   	ret    

ffffffff800013fa <notify_list_notify_one>:
ffffffff800013fa:	f3 0f 1e fa          	endbr64 
ffffffff800013fe:	55                   	push   %rbp
ffffffff800013ff:	48 89 e5             	mov    %rsp,%rbp
ffffffff80001402:	48 83 ec 60          	sub    $0x60,%rsp
ffffffff80001406:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
ffffffff8000140a:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff8000140e:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff80001412:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80001416:	8b 00                	mov    (%rax),%eax
ffffffff80001418:	89 45 b0             	mov    %eax,-0x50(%rbp)
ffffffff8000141b:	8b 55 b0             	mov    -0x50(%rbp),%edx
ffffffff8000141e:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff80001422:	48 83 c0 04          	add    $0x4,%rax
ffffffff80001426:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff8000142a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8000142e:	8b 00                	mov    (%rax),%eax
ffffffff80001430:	89 45 b4             	mov    %eax,-0x4c(%rbp)
ffffffff80001433:	8b 45 b4             	mov    -0x4c(%rbp),%eax
ffffffff80001436:	39 c2                	cmp    %eax,%edx
ffffffff80001438:	0f 84 29 01 00 00    	je     ffffffff80001567 <notify_list_notify_one+0x16d>
ffffffff8000143e:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff80001442:	48 83 c0 08          	add    $0x8,%rax
ffffffff80001446:	48 89 c7             	mov    %rax,%rdi
ffffffff80001449:	e8 c0 09 00 00       	call   ffffffff80001e0e <spinlock_lock>
ffffffff8000144e:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff80001452:	8b 40 04             	mov    0x4(%rax),%eax
ffffffff80001455:	89 45 dc             	mov    %eax,-0x24(%rbp)
ffffffff80001458:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff8000145c:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
ffffffff80001460:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff80001464:	8b 00                	mov    (%rax),%eax
ffffffff80001466:	89 45 b8             	mov    %eax,-0x48(%rbp)
ffffffff80001469:	8b 45 b8             	mov    -0x48(%rbp),%eax
ffffffff8000146c:	3b 45 dc             	cmp    -0x24(%rbp),%eax
ffffffff8000146f:	75 15                	jne    ffffffff80001486 <notify_list_notify_one+0x8c>
ffffffff80001471:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff80001475:	48 83 c0 08          	add    $0x8,%rax
ffffffff80001479:	48 89 c7             	mov    %rax,%rdi
ffffffff8000147c:	e8 5c 0a 00 00       	call   ffffffff80001edd <spinlock_unlock>
ffffffff80001481:	e9 e2 00 00 00       	jmp    ffffffff80001568 <notify_list_notify_one+0x16e>
ffffffff80001486:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff8000148a:	48 83 c0 04          	add    $0x4,%rax
ffffffff8000148e:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
ffffffff80001492:	8b 45 dc             	mov    -0x24(%rbp),%eax
ffffffff80001495:	83 c0 01             	add    $0x1,%eax
ffffffff80001498:	89 45 bc             	mov    %eax,-0x44(%rbp)
ffffffff8000149b:	8b 55 bc             	mov    -0x44(%rbp),%edx
ffffffff8000149e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff800014a2:	87 10                	xchg   %edx,(%rax)
ffffffff800014a4:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
ffffffff800014ab:	00 
ffffffff800014ac:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff800014b0:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff800014b4:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff800014b8:	e9 8d 00 00 00       	jmp    ffffffff8000154a <notify_list_notify_one+0x150>
ffffffff800014bd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff800014c1:	8b 40 10             	mov    0x10(%rax),%eax
ffffffff800014c4:	39 45 dc             	cmp    %eax,-0x24(%rbp)
ffffffff800014c7:	75 6d                	jne    ffffffff80001536 <notify_list_notify_one+0x13c>
ffffffff800014c9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff800014cd:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff800014d1:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
ffffffff800014d5:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff800014da:	74 0e                	je     ffffffff800014ea <notify_list_notify_one+0xf0>
ffffffff800014dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff800014e0:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
ffffffff800014e4:	48 89 50 08          	mov    %rdx,0x8(%rax)
ffffffff800014e8:	eb 0c                	jmp    ffffffff800014f6 <notify_list_notify_one+0xfc>
ffffffff800014ea:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff800014ee:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
ffffffff800014f2:	48 89 50 10          	mov    %rdx,0x10(%rax)
ffffffff800014f6:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
ffffffff800014fb:	75 0c                	jne    ffffffff80001509 <notify_list_notify_one+0x10f>
ffffffff800014fd:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff80001501:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff80001505:	48 89 50 18          	mov    %rdx,0x18(%rax)
ffffffff80001509:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff8000150d:	48 83 c0 08          	add    $0x8,%rax
ffffffff80001511:	48 89 c7             	mov    %rax,%rdi
ffffffff80001514:	e8 c4 09 00 00       	call   ffffffff80001edd <spinlock_unlock>
ffffffff80001519:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8000151d:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
ffffffff80001524:	00 
ffffffff80001525:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80001529:	48 8b 00             	mov    (%rax),%rax
ffffffff8000152c:	48 89 c7             	mov    %rax,%rdi
ffffffff8000152f:	e8 84 2f 01 00       	call   ffffffff800144b8 <scheduler_ready_thread>
ffffffff80001534:	eb 32                	jmp    ffffffff80001568 <notify_list_notify_one+0x16e>
ffffffff80001536:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8000153a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8000153e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80001542:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff80001546:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff8000154a:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
ffffffff8000154f:	0f 85 68 ff ff ff    	jne    ffffffff800014bd <notify_list_notify_one+0xc3>
ffffffff80001555:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff80001559:	48 83 c0 08          	add    $0x8,%rax
ffffffff8000155d:	48 89 c7             	mov    %rax,%rdi
ffffffff80001560:	e8 78 09 00 00       	call   ffffffff80001edd <spinlock_unlock>
ffffffff80001565:	eb 01                	jmp    ffffffff80001568 <notify_list_notify_one+0x16e>
ffffffff80001567:	90                   	nop
ffffffff80001568:	c9                   	leave  
ffffffff80001569:	c3                   	ret    

ffffffff8000156a <conditional_wait>:
ffffffff8000156a:	f3 0f 1e fa          	endbr64 
ffffffff8000156e:	55                   	push   %rbp
ffffffff8000156f:	48 89 e5             	mov    %rsp,%rbp
ffffffff80001572:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff80001576:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff8000157a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
ffffffff8000157e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80001582:	48 89 c7             	mov    %rax,%rdi
ffffffff80001585:	e8 8b fc ff ff       	call   ffffffff80001215 <notify_list_add>
ffffffff8000158a:	89 45 fc             	mov    %eax,-0x4(%rbp)
ffffffff8000158d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80001591:	48 89 c7             	mov    %rax,%rdi
ffffffff80001594:	e8 f0 07 00 00       	call   ffffffff80001d89 <mutex_unlock>
ffffffff80001599:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000159d:	8b 55 fc             	mov    -0x4(%rbp),%edx
ffffffff800015a0:	89 d6                	mov    %edx,%esi
ffffffff800015a2:	48 89 c7             	mov    %rax,%rdi
ffffffff800015a5:	e8 8c fc ff ff       	call   ffffffff80001236 <notify_list_wait>
ffffffff800015aa:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff800015ae:	48 89 c7             	mov    %rax,%rdi
ffffffff800015b1:	e8 1d 06 00 00       	call   ffffffff80001bd3 <mutex_lock>
ffffffff800015b6:	90                   	nop
ffffffff800015b7:	c9                   	leave  
ffffffff800015b8:	c3                   	ret    

ffffffff800015b9 <conditional_signal>:
ffffffff800015b9:	f3 0f 1e fa          	endbr64 
ffffffff800015bd:	55                   	push   %rbp
ffffffff800015be:	48 89 e5             	mov    %rsp,%rbp
ffffffff800015c1:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff800015c5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff800015c9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff800015cd:	48 89 c7             	mov    %rax,%rdi
ffffffff800015d0:	e8 25 fe ff ff       	call   ffffffff800013fa <notify_list_notify_one>
ffffffff800015d5:	90                   	nop
ffffffff800015d6:	c9                   	leave  
ffffffff800015d7:	c3                   	ret    

ffffffff800015d8 <conditional_broadcast>:
ffffffff800015d8:	f3 0f 1e fa          	endbr64 
ffffffff800015dc:	55                   	push   %rbp
ffffffff800015dd:	48 89 e5             	mov    %rsp,%rbp
ffffffff800015e0:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff800015e4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff800015e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff800015ec:	48 89 c7             	mov    %rax,%rdi
ffffffff800015ef:	e8 15 fd ff ff       	call   ffffffff80001309 <notify_list_notify_all>
ffffffff800015f4:	90                   	nop
ffffffff800015f5:	c9                   	leave  
ffffffff800015f6:	c3                   	ret    

ffffffff800015f7 <semaphore_queue>:
ffffffff800015f7:	f3 0f 1e fa          	endbr64 
ffffffff800015fb:	55                   	push   %rbp
ffffffff800015fc:	48 89 e5             	mov    %rsp,%rbp
ffffffff800015ff:	48 83 ec 28          	sub    $0x28,%rsp
ffffffff80001603:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff80001607:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
ffffffff8000160b:	89 d0                	mov    %edx,%eax
ffffffff8000160d:	88 45 dc             	mov    %al,-0x24(%rbp)
ffffffff80001610:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80001614:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff80001618:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8000161c:	80 7d dc 00          	cmpb   $0x0,-0x24(%rbp)
ffffffff80001620:	74 5d                	je     ffffffff8000167f <semaphore_queue+0x88>
ffffffff80001622:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80001626:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff8000162a:	48 89 50 08          	mov    %rdx,0x8(%rax)
ffffffff8000162e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80001632:	8b 50 10             	mov    0x10(%rax),%edx
ffffffff80001635:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80001639:	89 50 10             	mov    %edx,0x10(%rax)
ffffffff8000163c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80001640:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff80001644:	48 89 50 18          	mov    %rdx,0x18(%rax)
ffffffff80001648:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000164c:	48 8b 50 20          	mov    0x20(%rax),%rdx
ffffffff80001650:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80001654:	48 89 50 20          	mov    %rdx,0x20(%rax)
ffffffff80001658:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8000165c:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff80001660:	48 85 c0             	test   %rax,%rax
ffffffff80001663:	75 0c                	jne    ffffffff80001671 <semaphore_queue+0x7a>
ffffffff80001665:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80001669:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff8000166d:	48 89 50 20          	mov    %rdx,0x20(%rax)
ffffffff80001671:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80001675:	48 c7 40 20 00 00 00 	movq   $0x0,0x20(%rax)
ffffffff8000167c:	00 
ffffffff8000167d:	eb 43                	jmp    ffffffff800016c2 <semaphore_queue+0xcb>
ffffffff8000167f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80001683:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff80001687:	48 85 c0             	test   %rax,%rax
ffffffff8000168a:	75 0e                	jne    ffffffff8000169a <semaphore_queue+0xa3>
ffffffff8000168c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80001690:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff80001694:	48 89 50 18          	mov    %rdx,0x18(%rax)
ffffffff80001698:	eb 10                	jmp    ffffffff800016aa <semaphore_queue+0xb3>
ffffffff8000169a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000169e:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff800016a2:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff800016a6:	48 89 50 18          	mov    %rdx,0x18(%rax)
ffffffff800016aa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff800016ae:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff800016b2:	48 89 50 20          	mov    %rdx,0x20(%rax)
ffffffff800016b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff800016ba:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)
ffffffff800016c1:	00 
ffffffff800016c2:	90                   	nop
ffffffff800016c3:	c9                   	leave  
ffffffff800016c4:	c3                   	ret    

ffffffff800016c5 <semaphore_dequeue>:
ffffffff800016c5:	f3 0f 1e fa          	endbr64 
ffffffff800016c9:	55                   	push   %rbp
ffffffff800016ca:	48 89 e5             	mov    %rsp,%rbp
ffffffff800016cd:	48 83 ec 18          	sub    $0x18,%rsp
ffffffff800016d1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff800016d5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800016d9:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff800016dd:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff800016e1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff800016e5:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff800016e9:	48 85 c0             	test   %rax,%rax
ffffffff800016ec:	74 6b                	je     ffffffff80001759 <semaphore_dequeue+0x94>
ffffffff800016ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff800016f2:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff800016f6:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff800016fa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800016fe:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff80001702:	48 89 50 08          	mov    %rdx,0x8(%rax)
ffffffff80001706:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000170a:	8b 50 10             	mov    0x10(%rax),%edx
ffffffff8000170d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80001711:	89 50 10             	mov    %edx,0x10(%rax)
ffffffff80001714:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80001718:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff8000171c:	48 85 c0             	test   %rax,%rax
ffffffff8000171f:	74 12                	je     ffffffff80001733 <semaphore_dequeue+0x6e>
ffffffff80001721:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80001725:	48 8b 50 20          	mov    0x20(%rax),%rdx
ffffffff80001729:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8000172d:	48 89 50 20          	mov    %rdx,0x20(%rax)
ffffffff80001731:	eb 0c                	jmp    ffffffff8000173f <semaphore_dequeue+0x7a>
ffffffff80001733:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80001737:	48 c7 40 20 00 00 00 	movq   $0x0,0x20(%rax)
ffffffff8000173e:	00 
ffffffff8000173f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80001743:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)
ffffffff8000174a:	00 
ffffffff8000174b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000174f:	48 c7 40 20 00 00 00 	movq   $0x0,0x20(%rax)
ffffffff80001756:	00 
ffffffff80001757:	eb 0c                	jmp    ffffffff80001765 <semaphore_dequeue+0xa0>
ffffffff80001759:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000175d:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
ffffffff80001764:	00 
ffffffff80001765:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80001769:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%rax)
ffffffff80001770:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80001774:	c9                   	leave  
ffffffff80001775:	c3                   	ret    

ffffffff80001776 <semaphore_can_acquire>:
ffffffff80001776:	f3 0f 1e fa          	endbr64 
ffffffff8000177a:	55                   	push   %rbp
ffffffff8000177b:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000177e:	48 83 ec 28          	sub    $0x28,%rsp
ffffffff80001782:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
ffffffff80001786:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8000178a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8000178e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80001792:	8b 00                	mov    (%rax),%eax
ffffffff80001794:	89 45 e4             	mov    %eax,-0x1c(%rbp)
ffffffff80001797:	8b 45 e4             	mov    -0x1c(%rbp),%eax
ffffffff8000179a:	89 45 ec             	mov    %eax,-0x14(%rbp)
ffffffff8000179d:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff800017a0:	85 c0                	test   %eax,%eax
ffffffff800017a2:	75 07                	jne    ffffffff800017ab <semaphore_can_acquire+0x35>
ffffffff800017a4:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800017a9:	eb 36                	jmp    ffffffff800017e1 <semaphore_can_acquire+0x6b>
ffffffff800017ab:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff800017af:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff800017b3:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff800017b6:	83 e8 01             	sub    $0x1,%eax
ffffffff800017b9:	89 45 e8             	mov    %eax,-0x18(%rbp)
ffffffff800017bc:	8b 4d e8             	mov    -0x18(%rbp),%ecx
ffffffff800017bf:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
ffffffff800017c3:	48 8d 55 ec          	lea    -0x14(%rbp),%rdx
ffffffff800017c7:	8b 02                	mov    (%rdx),%eax
ffffffff800017c9:	f0 0f b1 0e          	lock cmpxchg %ecx,(%rsi)
ffffffff800017cd:	89 c1                	mov    %eax,%ecx
ffffffff800017cf:	0f 94 c0             	sete   %al
ffffffff800017d2:	84 c0                	test   %al,%al
ffffffff800017d4:	75 02                	jne    ffffffff800017d8 <semaphore_can_acquire+0x62>
ffffffff800017d6:	89 0a                	mov    %ecx,(%rdx)
ffffffff800017d8:	84 c0                	test   %al,%al
ffffffff800017da:	74 aa                	je     ffffffff80001786 <semaphore_can_acquire+0x10>
ffffffff800017dc:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff800017e1:	c9                   	leave  
ffffffff800017e2:	c3                   	ret    

ffffffff800017e3 <semaphore_acquire>:
ffffffff800017e3:	f3 0f 1e fa          	endbr64 
ffffffff800017e7:	55                   	push   %rbp
ffffffff800017e8:	48 89 e5             	mov    %rsp,%rbp
ffffffff800017eb:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff800017ef:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff800017f3:	89 f0                	mov    %esi,%eax
ffffffff800017f5:	88 45 e4             	mov    %al,-0x1c(%rbp)
ffffffff800017f8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800017fc:	48 89 c7             	mov    %rax,%rdi
ffffffff800017ff:	e8 72 ff ff ff       	call   ffffffff80001776 <semaphore_can_acquire>
ffffffff80001804:	84 c0                	test   %al,%al
ffffffff80001806:	0f 85 cd 00 00 00    	jne    ffffffff800018d9 <semaphore_acquire+0xf6>
ffffffff8000180c:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80001811:	e8 2a 3e 01 00       	call   ffffffff80015640 <acquire_waiting_thread>
ffffffff80001816:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8000181a:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000181f:	e8 01 3c 01 00       	call   ffffffff80015425 <get_current_thread>
ffffffff80001824:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff80001828:	48 89 02             	mov    %rax,(%rdx)
ffffffff8000182b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000182f:	48 83 c0 04          	add    $0x4,%rax
ffffffff80001833:	48 89 c7             	mov    %rax,%rdi
ffffffff80001836:	e8 d3 05 00 00       	call   ffffffff80001e0e <spinlock_lock>
ffffffff8000183b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000183f:	48 83 c0 10          	add    $0x10,%rax
ffffffff80001843:	f0 83 00 01          	lock addl $0x1,(%rax)
ffffffff80001847:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000184b:	48 89 c7             	mov    %rax,%rdi
ffffffff8000184e:	e8 23 ff ff ff       	call   ffffffff80001776 <semaphore_can_acquire>
ffffffff80001853:	84 c0                	test   %al,%al
ffffffff80001855:	74 1e                	je     ffffffff80001875 <semaphore_acquire+0x92>
ffffffff80001857:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000185b:	48 83 c0 10          	add    $0x10,%rax
ffffffff8000185f:	f0 83 28 01          	lock subl $0x1,(%rax)
ffffffff80001863:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80001867:	48 83 c0 04          	add    $0x4,%rax
ffffffff8000186b:	48 89 c7             	mov    %rax,%rdi
ffffffff8000186e:	e8 6a 06 00 00       	call   ffffffff80001edd <spinlock_unlock>
ffffffff80001873:	eb 56                	jmp    ffffffff800018cb <semaphore_acquire+0xe8>
ffffffff80001875:	0f b6 45 e4          	movzbl -0x1c(%rbp),%eax
ffffffff80001879:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
ffffffff8000187d:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
ffffffff80001881:	89 c2                	mov    %eax,%edx
ffffffff80001883:	48 89 cf             	mov    %rcx,%rdi
ffffffff80001886:	e8 6c fd ff ff       	call   ffffffff800015f7 <semaphore_queue>
ffffffff8000188b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000188f:	48 8b 00             	mov    (%rax),%rax
ffffffff80001892:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff80001896:	48 83 c2 04          	add    $0x4,%rdx
ffffffff8000189a:	48 89 90 e8 00 00 00 	mov    %rdx,0xe8(%rax)
ffffffff800018a1:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800018a6:	e8 3f 3b 01 00       	call   ffffffff800153ea <scheduler_park>
ffffffff800018ab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff800018af:	8b 40 10             	mov    0x10(%rax),%eax
ffffffff800018b2:	85 c0                	test   %eax,%eax
ffffffff800018b4:	75 15                	jne    ffffffff800018cb <semaphore_acquire+0xe8>
ffffffff800018b6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800018ba:	48 89 c7             	mov    %rax,%rdi
ffffffff800018bd:	e8 b4 fe ff ff       	call   ffffffff80001776 <semaphore_can_acquire>
ffffffff800018c2:	84 c0                	test   %al,%al
ffffffff800018c4:	75 05                	jne    ffffffff800018cb <semaphore_acquire+0xe8>
ffffffff800018c6:	e9 60 ff ff ff       	jmp    ffffffff8000182b <semaphore_acquire+0x48>
ffffffff800018cb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff800018cf:	48 89 c7             	mov    %rax,%rdi
ffffffff800018d2:	e8 c7 3e 01 00       	call   ffffffff8001579e <release_waiting_thread>
ffffffff800018d7:	eb 01                	jmp    ffffffff800018da <semaphore_acquire+0xf7>
ffffffff800018d9:	90                   	nop
ffffffff800018da:	c9                   	leave  
ffffffff800018db:	c3                   	ret    

ffffffff800018dc <semaphore_release>:
ffffffff800018dc:	f3 0f 1e fa          	endbr64 
ffffffff800018e0:	55                   	push   %rbp
ffffffff800018e1:	48 89 e5             	mov    %rsp,%rbp
ffffffff800018e4:	53                   	push   %rbx
ffffffff800018e5:	48 83 ec 38          	sub    $0x38,%rsp
ffffffff800018e9:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
ffffffff800018ed:	89 f0                	mov    %esi,%eax
ffffffff800018ef:	88 45 c4             	mov    %al,-0x3c(%rbp)
ffffffff800018f2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff800018f6:	f0 83 00 01          	lock addl $0x1,(%rax)
ffffffff800018fa:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff800018fe:	48 83 c0 10          	add    $0x10,%rax
ffffffff80001902:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff80001906:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000190a:	8b 00                	mov    (%rax),%eax
ffffffff8000190c:	89 45 d0             	mov    %eax,-0x30(%rbp)
ffffffff8000190f:	8b 45 d0             	mov    -0x30(%rbp),%eax
ffffffff80001912:	85 c0                	test   %eax,%eax
ffffffff80001914:	0f 84 b5 00 00 00    	je     ffffffff800019cf <semaphore_release+0xf3>
ffffffff8000191a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8000191e:	48 83 c0 04          	add    $0x4,%rax
ffffffff80001922:	48 89 c7             	mov    %rax,%rdi
ffffffff80001925:	e8 e4 04 00 00       	call   ffffffff80001e0e <spinlock_lock>
ffffffff8000192a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8000192e:	48 83 c0 10          	add    $0x10,%rax
ffffffff80001932:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff80001936:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8000193a:	8b 00                	mov    (%rax),%eax
ffffffff8000193c:	89 45 d4             	mov    %eax,-0x2c(%rbp)
ffffffff8000193f:	8b 45 d4             	mov    -0x2c(%rbp),%eax
ffffffff80001942:	85 c0                	test   %eax,%eax
ffffffff80001944:	75 12                	jne    ffffffff80001958 <semaphore_release+0x7c>
ffffffff80001946:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8000194a:	48 83 c0 04          	add    $0x4,%rax
ffffffff8000194e:	48 89 c7             	mov    %rax,%rdi
ffffffff80001951:	e8 87 05 00 00       	call   ffffffff80001edd <spinlock_unlock>
ffffffff80001956:	eb 78                	jmp    ffffffff800019d0 <semaphore_release+0xf4>
ffffffff80001958:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8000195c:	48 89 c7             	mov    %rax,%rdi
ffffffff8000195f:	e8 61 fd ff ff       	call   ffffffff800016c5 <semaphore_dequeue>
ffffffff80001964:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
ffffffff80001968:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8000196c:	48 83 c0 10          	add    $0x10,%rax
ffffffff80001970:	f0 83 28 01          	lock subl $0x1,(%rax)
ffffffff80001974:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80001978:	48 83 c0 04          	add    $0x4,%rax
ffffffff8000197c:	48 89 c7             	mov    %rax,%rdi
ffffffff8000197f:	e8 59 05 00 00       	call   ffffffff80001edd <spinlock_unlock>
ffffffff80001984:	0f b6 5d c4          	movzbl -0x3c(%rbp),%ebx
ffffffff80001988:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8000198c:	48 89 c7             	mov    %rax,%rdi
ffffffff8000198f:	e8 e2 fd ff ff       	call   ffffffff80001776 <semaphore_can_acquire>
ffffffff80001994:	0f b6 c0             	movzbl %al,%eax
ffffffff80001997:	21 d8                	and    %ebx,%eax
ffffffff80001999:	85 c0                	test   %eax,%eax
ffffffff8000199b:	74 0b                	je     ffffffff800019a8 <semaphore_release+0xcc>
ffffffff8000199d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff800019a1:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%rax)
ffffffff800019a8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff800019ac:	48 8b 00             	mov    (%rax),%rax
ffffffff800019af:	48 89 c7             	mov    %rax,%rdi
ffffffff800019b2:	e8 01 2b 01 00       	call   ffffffff800144b8 <scheduler_ready_thread>
ffffffff800019b7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff800019bb:	8b 40 10             	mov    0x10(%rax),%eax
ffffffff800019be:	83 f8 01             	cmp    $0x1,%eax
ffffffff800019c1:	75 0d                	jne    ffffffff800019d0 <semaphore_release+0xf4>
ffffffff800019c3:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800019c8:	e8 10 3a 01 00       	call   ffffffff800153dd <scheduler_yield>
ffffffff800019cd:	eb 01                	jmp    ffffffff800019d0 <semaphore_release+0xf4>
ffffffff800019cf:	90                   	nop
ffffffff800019d0:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
ffffffff800019d4:	c9                   	leave  
ffffffff800019d5:	c3                   	ret    

ffffffff800019d6 <mutex_lock_slow>:
ffffffff800019d6:	f3 0f 1e fa          	endbr64 
ffffffff800019da:	55                   	push   %rbp
ffffffff800019db:	48 89 e5             	mov    %rsp,%rbp
ffffffff800019de:	48 83 ec 60          	sub    $0x60,%rsp
ffffffff800019e2:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
ffffffff800019e6:	c6 45 f7 00          	movb   $0x0,-0x9(%rbp)
ffffffff800019ea:	c6 45 f6 00          	movb   $0x0,-0xa(%rbp)
ffffffff800019ee:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
ffffffff800019f5:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff800019f9:	8b 00                	mov    (%rax),%eax
ffffffff800019fb:	89 45 c8             	mov    %eax,-0x38(%rbp)
ffffffff800019fe:	8b 45 c8             	mov    -0x38(%rbp),%eax
ffffffff80001a01:	83 e0 05             	and    $0x5,%eax
ffffffff80001a04:	83 f8 01             	cmp    $0x1,%eax
ffffffff80001a07:	0f 85 82 00 00 00    	jne    ffffffff80001a8f <mutex_lock_slow+0xb9>
ffffffff80001a0d:	8b 45 f0             	mov    -0x10(%rbp),%eax
ffffffff80001a10:	89 c7                	mov    %eax,%edi
ffffffff80001a12:	e8 3e 2a 01 00       	call   ffffffff80014455 <scheduler_can_spin>
ffffffff80001a17:	84 c0                	test   %al,%al
ffffffff80001a19:	74 74                	je     ffffffff80001a8f <mutex_lock_slow+0xb9>
ffffffff80001a1b:	0f b6 45 f6          	movzbl -0xa(%rbp),%eax
ffffffff80001a1f:	83 f0 01             	xor    $0x1,%eax
ffffffff80001a22:	84 c0                	test   %al,%al
ffffffff80001a24:	74 4b                	je     ffffffff80001a71 <mutex_lock_slow+0x9b>
ffffffff80001a26:	8b 45 c8             	mov    -0x38(%rbp),%eax
ffffffff80001a29:	83 e0 02             	and    $0x2,%eax
ffffffff80001a2c:	85 c0                	test   %eax,%eax
ffffffff80001a2e:	75 41                	jne    ffffffff80001a71 <mutex_lock_slow+0x9b>
ffffffff80001a30:	8b 45 c8             	mov    -0x38(%rbp),%eax
ffffffff80001a33:	c1 f8 03             	sar    $0x3,%eax
ffffffff80001a36:	85 c0                	test   %eax,%eax
ffffffff80001a38:	74 37                	je     ffffffff80001a71 <mutex_lock_slow+0x9b>
ffffffff80001a3a:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff80001a3e:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
ffffffff80001a42:	8b 45 c8             	mov    -0x38(%rbp),%eax
ffffffff80001a45:	83 c8 02             	or     $0x2,%eax
ffffffff80001a48:	89 45 bc             	mov    %eax,-0x44(%rbp)
ffffffff80001a4b:	8b 45 bc             	mov    -0x44(%rbp),%eax
ffffffff80001a4e:	89 c1                	mov    %eax,%ecx
ffffffff80001a50:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
ffffffff80001a54:	48 8d 55 c8          	lea    -0x38(%rbp),%rdx
ffffffff80001a58:	8b 02                	mov    (%rdx),%eax
ffffffff80001a5a:	f0 0f b1 0e          	lock cmpxchg %ecx,(%rsi)
ffffffff80001a5e:	89 c1                	mov    %eax,%ecx
ffffffff80001a60:	0f 94 c0             	sete   %al
ffffffff80001a63:	84 c0                	test   %al,%al
ffffffff80001a65:	75 02                	jne    ffffffff80001a69 <mutex_lock_slow+0x93>
ffffffff80001a67:	89 0a                	mov    %ecx,(%rdx)
ffffffff80001a69:	84 c0                	test   %al,%al
ffffffff80001a6b:	74 04                	je     ffffffff80001a71 <mutex_lock_slow+0x9b>
ffffffff80001a6d:	c6 45 f6 01          	movb   $0x1,-0xa(%rbp)
ffffffff80001a71:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
ffffffff80001a78:	eb 06                	jmp    ffffffff80001a80 <mutex_lock_slow+0xaa>
ffffffff80001a7a:	f3 90                	pause  
ffffffff80001a7c:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
ffffffff80001a80:	83 7d ec 1d          	cmpl   $0x1d,-0x14(%rbp)
ffffffff80001a84:	7e f4                	jle    ffffffff80001a7a <mutex_lock_slow+0xa4>
ffffffff80001a86:	83 45 f0 01          	addl   $0x1,-0x10(%rbp)
ffffffff80001a8a:	e9 6f ff ff ff       	jmp    ffffffff800019fe <mutex_lock_slow+0x28>
ffffffff80001a8f:	8b 45 c8             	mov    -0x38(%rbp),%eax
ffffffff80001a92:	89 45 e8             	mov    %eax,-0x18(%rbp)
ffffffff80001a95:	8b 45 c8             	mov    -0x38(%rbp),%eax
ffffffff80001a98:	83 e0 04             	and    $0x4,%eax
ffffffff80001a9b:	85 c0                	test   %eax,%eax
ffffffff80001a9d:	75 04                	jne    ffffffff80001aa3 <mutex_lock_slow+0xcd>
ffffffff80001a9f:	83 4d e8 01          	orl    $0x1,-0x18(%rbp)
ffffffff80001aa3:	8b 45 c8             	mov    -0x38(%rbp),%eax
ffffffff80001aa6:	83 e0 05             	and    $0x5,%eax
ffffffff80001aa9:	85 c0                	test   %eax,%eax
ffffffff80001aab:	74 04                	je     ffffffff80001ab1 <mutex_lock_slow+0xdb>
ffffffff80001aad:	83 45 e8 08          	addl   $0x8,-0x18(%rbp)
ffffffff80001ab1:	80 7d f7 00          	cmpb   $0x0,-0x9(%rbp)
ffffffff80001ab5:	74 0e                	je     ffffffff80001ac5 <mutex_lock_slow+0xef>
ffffffff80001ab7:	8b 45 c8             	mov    -0x38(%rbp),%eax
ffffffff80001aba:	83 e0 01             	and    $0x1,%eax
ffffffff80001abd:	85 c0                	test   %eax,%eax
ffffffff80001abf:	74 04                	je     ffffffff80001ac5 <mutex_lock_slow+0xef>
ffffffff80001ac1:	83 4d e8 04          	orl    $0x4,-0x18(%rbp)
ffffffff80001ac5:	80 7d f6 00          	cmpb   $0x0,-0xa(%rbp)
ffffffff80001ac9:	74 04                	je     ffffffff80001acf <mutex_lock_slow+0xf9>
ffffffff80001acb:	83 65 e8 fd          	andl   $0xfffffffd,-0x18(%rbp)
ffffffff80001acf:	8b 45 c8             	mov    -0x38(%rbp),%eax
ffffffff80001ad2:	89 45 c4             	mov    %eax,-0x3c(%rbp)
ffffffff80001ad5:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff80001ad9:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
ffffffff80001add:	8b 45 e8             	mov    -0x18(%rbp),%eax
ffffffff80001ae0:	89 45 c0             	mov    %eax,-0x40(%rbp)
ffffffff80001ae3:	8b 45 c0             	mov    -0x40(%rbp),%eax
ffffffff80001ae6:	89 c1                	mov    %eax,%ecx
ffffffff80001ae8:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
ffffffff80001aec:	48 8d 55 c4          	lea    -0x3c(%rbp),%rdx
ffffffff80001af0:	8b 02                	mov    (%rdx),%eax
ffffffff80001af2:	f0 0f b1 0e          	lock cmpxchg %ecx,(%rsi)
ffffffff80001af6:	89 c1                	mov    %eax,%ecx
ffffffff80001af8:	0f 94 c0             	sete   %al
ffffffff80001afb:	84 c0                	test   %al,%al
ffffffff80001afd:	75 02                	jne    ffffffff80001b01 <mutex_lock_slow+0x12b>
ffffffff80001aff:	89 0a                	mov    %ecx,(%rdx)
ffffffff80001b01:	84 c0                	test   %al,%al
ffffffff80001b03:	0f 84 f5 fe ff ff    	je     ffffffff800019fe <mutex_lock_slow+0x28>
ffffffff80001b09:	8b 45 c8             	mov    -0x38(%rbp),%eax
ffffffff80001b0c:	83 e0 05             	and    $0x5,%eax
ffffffff80001b0f:	85 c0                	test   %eax,%eax
ffffffff80001b11:	0f 84 b8 00 00 00    	je     ffffffff80001bcf <mutex_lock_slow+0x1f9>
ffffffff80001b17:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff80001b1c:	0f 95 c0             	setne  %al
ffffffff80001b1f:	88 45 cf             	mov    %al,-0x31(%rbp)
ffffffff80001b22:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff80001b27:	75 0e                	jne    ffffffff80001b37 <mutex_lock_slow+0x161>
ffffffff80001b29:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80001b2e:	e8 ba 4b 01 00       	call   ffffffff800166ed <microtime>
ffffffff80001b33:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff80001b37:	0f b6 45 cf          	movzbl -0x31(%rbp),%eax
ffffffff80001b3b:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
ffffffff80001b3f:	48 83 c2 08          	add    $0x8,%rdx
ffffffff80001b43:	89 c6                	mov    %eax,%esi
ffffffff80001b45:	48 89 d7             	mov    %rdx,%rdi
ffffffff80001b48:	e8 96 fc ff ff       	call   ffffffff800017e3 <semaphore_acquire>
ffffffff80001b4d:	80 7d f7 00          	cmpb   $0x0,-0x9(%rbp)
ffffffff80001b51:	75 19                	jne    ffffffff80001b6c <mutex_lock_slow+0x196>
ffffffff80001b53:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80001b58:	e8 90 4b 01 00       	call   ffffffff800166ed <microtime>
ffffffff80001b5d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff80001b61:	48 29 d0             	sub    %rdx,%rax
ffffffff80001b64:	48 3d e8 03 00 00    	cmp    $0x3e8,%rax
ffffffff80001b6a:	76 07                	jbe    ffffffff80001b73 <mutex_lock_slow+0x19d>
ffffffff80001b6c:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff80001b71:	eb 05                	jmp    ffffffff80001b78 <mutex_lock_slow+0x1a2>
ffffffff80001b73:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80001b78:	88 45 f7             	mov    %al,-0x9(%rbp)
ffffffff80001b7b:	80 65 f7 01          	andb   $0x1,-0x9(%rbp)
ffffffff80001b7f:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff80001b83:	8b 00                	mov    (%rax),%eax
ffffffff80001b85:	89 45 c8             	mov    %eax,-0x38(%rbp)
ffffffff80001b88:	8b 45 c8             	mov    -0x38(%rbp),%eax
ffffffff80001b8b:	83 e0 04             	and    $0x4,%eax
ffffffff80001b8e:	85 c0                	test   %eax,%eax
ffffffff80001b90:	74 2d                	je     ffffffff80001bbf <mutex_lock_slow+0x1e9>
ffffffff80001b92:	c7 45 e4 f9 ff ff ff 	movl   $0xfffffff9,-0x1c(%rbp)
ffffffff80001b99:	0f b6 45 f7          	movzbl -0x9(%rbp),%eax
ffffffff80001b9d:	83 f0 01             	xor    $0x1,%eax
ffffffff80001ba0:	84 c0                	test   %al,%al
ffffffff80001ba2:	75 0b                	jne    ffffffff80001baf <mutex_lock_slow+0x1d9>
ffffffff80001ba4:	8b 45 c8             	mov    -0x38(%rbp),%eax
ffffffff80001ba7:	c1 f8 03             	sar    $0x3,%eax
ffffffff80001baa:	83 f8 01             	cmp    $0x1,%eax
ffffffff80001bad:	75 04                	jne    ffffffff80001bb3 <mutex_lock_slow+0x1dd>
ffffffff80001baf:	83 6d e4 04          	subl   $0x4,-0x1c(%rbp)
ffffffff80001bb3:	8b 55 e4             	mov    -0x1c(%rbp),%edx
ffffffff80001bb6:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff80001bba:	f0 01 10             	lock add %edx,(%rax)
ffffffff80001bbd:	eb 11                	jmp    ffffffff80001bd0 <mutex_lock_slow+0x1fa>
ffffffff80001bbf:	c6 45 f6 01          	movb   $0x1,-0xa(%rbp)
ffffffff80001bc3:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
ffffffff80001bca:	e9 2f fe ff ff       	jmp    ffffffff800019fe <mutex_lock_slow+0x28>
ffffffff80001bcf:	90                   	nop
ffffffff80001bd0:	90                   	nop
ffffffff80001bd1:	c9                   	leave  
ffffffff80001bd2:	c3                   	ret    

ffffffff80001bd3 <mutex_lock>:
ffffffff80001bd3:	f3 0f 1e fa          	endbr64 
ffffffff80001bd7:	55                   	push   %rbp
ffffffff80001bd8:	48 89 e5             	mov    %rsp,%rbp
ffffffff80001bdb:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff80001bdf:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff80001be3:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
ffffffff80001bea:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80001bee:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff80001bf2:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%rbp)
ffffffff80001bf9:	8b 45 f0             	mov    -0x10(%rbp),%eax
ffffffff80001bfc:	89 c1                	mov    %eax,%ecx
ffffffff80001bfe:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
ffffffff80001c02:	48 8d 55 f4          	lea    -0xc(%rbp),%rdx
ffffffff80001c06:	8b 02                	mov    (%rdx),%eax
ffffffff80001c08:	f0 0f b1 0e          	lock cmpxchg %ecx,(%rsi)
ffffffff80001c0c:	89 c1                	mov    %eax,%ecx
ffffffff80001c0e:	0f 94 c0             	sete   %al
ffffffff80001c11:	84 c0                	test   %al,%al
ffffffff80001c13:	75 02                	jne    ffffffff80001c17 <mutex_lock+0x44>
ffffffff80001c15:	89 0a                	mov    %ecx,(%rdx)
ffffffff80001c17:	84 c0                	test   %al,%al
ffffffff80001c19:	75 0e                	jne    ffffffff80001c29 <mutex_lock+0x56>
ffffffff80001c1b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80001c1f:	48 89 c7             	mov    %rax,%rdi
ffffffff80001c22:	e8 af fd ff ff       	call   ffffffff800019d6 <mutex_lock_slow>
ffffffff80001c27:	eb 01                	jmp    ffffffff80001c2a <mutex_lock+0x57>
ffffffff80001c29:	90                   	nop
ffffffff80001c2a:	c9                   	leave  
ffffffff80001c2b:	c3                   	ret    

ffffffff80001c2c <mutex_try_lock>:
ffffffff80001c2c:	f3 0f 1e fa          	endbr64 
ffffffff80001c30:	55                   	push   %rbp
ffffffff80001c31:	48 89 e5             	mov    %rsp,%rbp
ffffffff80001c34:	48 83 ec 18          	sub    $0x18,%rsp
ffffffff80001c38:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff80001c3c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80001c40:	8b 00                	mov    (%rax),%eax
ffffffff80001c42:	89 45 f4             	mov    %eax,-0xc(%rbp)
ffffffff80001c45:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff80001c48:	83 e0 05             	and    $0x5,%eax
ffffffff80001c4b:	85 c0                	test   %eax,%eax
ffffffff80001c4d:	74 07                	je     ffffffff80001c56 <mutex_try_lock+0x2a>
ffffffff80001c4f:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80001c54:	eb 43                	jmp    ffffffff80001c99 <mutex_try_lock+0x6d>
ffffffff80001c56:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80001c5a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff80001c5e:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff80001c61:	83 c8 01             	or     $0x1,%eax
ffffffff80001c64:	89 45 f0             	mov    %eax,-0x10(%rbp)
ffffffff80001c67:	8b 45 f0             	mov    -0x10(%rbp),%eax
ffffffff80001c6a:	89 c1                	mov    %eax,%ecx
ffffffff80001c6c:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
ffffffff80001c70:	48 8d 55 f4          	lea    -0xc(%rbp),%rdx
ffffffff80001c74:	8b 02                	mov    (%rdx),%eax
ffffffff80001c76:	f0 0f b1 0e          	lock cmpxchg %ecx,(%rsi)
ffffffff80001c7a:	89 c1                	mov    %eax,%ecx
ffffffff80001c7c:	0f 94 c0             	sete   %al
ffffffff80001c7f:	84 c0                	test   %al,%al
ffffffff80001c81:	75 02                	jne    ffffffff80001c85 <mutex_try_lock+0x59>
ffffffff80001c83:	89 0a                	mov    %ecx,(%rdx)
ffffffff80001c85:	83 f0 01             	xor    $0x1,%eax
ffffffff80001c88:	84 c0                	test   %al,%al
ffffffff80001c8a:	74 07                	je     ffffffff80001c93 <mutex_try_lock+0x67>
ffffffff80001c8c:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80001c91:	eb 06                	jmp    ffffffff80001c99 <mutex_try_lock+0x6d>
ffffffff80001c93:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff80001c98:	90                   	nop
ffffffff80001c99:	c9                   	leave  
ffffffff80001c9a:	c3                   	ret    

ffffffff80001c9b <mutex_unlock_slow>:
ffffffff80001c9b:	f3 0f 1e fa          	endbr64 
ffffffff80001c9f:	55                   	push   %rbp
ffffffff80001ca0:	48 89 e5             	mov    %rsp,%rbp
ffffffff80001ca3:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff80001ca7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff80001cab:	89 75 e4             	mov    %esi,-0x1c(%rbp)
ffffffff80001cae:	8b 45 e4             	mov    -0x1c(%rbp),%eax
ffffffff80001cb1:	83 c0 01             	add    $0x1,%eax
ffffffff80001cb4:	83 e0 01             	and    $0x1,%eax
ffffffff80001cb7:	85 c0                	test   %eax,%eax
ffffffff80001cb9:	75 3d                	jne    ffffffff80001cf8 <mutex_unlock_slow+0x5d>
ffffffff80001cbb:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80001cc0:	e8 1c 50 00 00       	call   ffffffff80006ce1 <get_apic_id>
ffffffff80001cc5:	48 89 c6             	mov    %rax,%rsi
ffffffff80001cc8:	41 b8 a5 00 00 00    	mov    $0xa5,%r8d
ffffffff80001cce:	48 8d 05 7e 63 03 00 	lea    0x3637e(%rip),%rax        # ffffffff80038053 <g_stivale2_header+0x1053>
ffffffff80001cd5:	48 89 c1             	mov    %rax,%rcx
ffffffff80001cd8:	48 8d 05 f1 b6 03 00 	lea    0x3b6f1(%rip),%rax        # ffffffff8003d3d0 <__FUNCTION__.0.lto_priv.1>
ffffffff80001cdf:	48 89 c2             	mov    %rax,%rdx
ffffffff80001ce2:	48 8d 05 d7 aa 03 00 	lea    0x3aad7(%rip),%rax        # ffffffff8003c7c0 <g_stivale2_header+0x57c0>
ffffffff80001ce9:	48 89 c7             	mov    %rax,%rdi
ffffffff80001cec:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80001cf1:	e8 4a 18 01 00       	call   ffffffff80013540 <printf_>
ffffffff80001cf6:	0f 0b                	ud2    
ffffffff80001cf8:	8b 45 e4             	mov    -0x1c(%rbp),%eax
ffffffff80001cfb:	83 e0 04             	and    $0x4,%eax
ffffffff80001cfe:	85 c0                	test   %eax,%eax
ffffffff80001d00:	75 6d                	jne    ffffffff80001d6f <mutex_unlock_slow+0xd4>
ffffffff80001d02:	8b 45 e4             	mov    -0x1c(%rbp),%eax
ffffffff80001d05:	89 45 f4             	mov    %eax,-0xc(%rbp)
ffffffff80001d08:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff80001d0b:	c1 f8 03             	sar    $0x3,%eax
ffffffff80001d0e:	85 c0                	test   %eax,%eax
ffffffff80001d10:	74 74                	je     ffffffff80001d86 <mutex_unlock_slow+0xeb>
ffffffff80001d12:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff80001d15:	83 e0 07             	and    $0x7,%eax
ffffffff80001d18:	85 c0                	test   %eax,%eax
ffffffff80001d1a:	75 6a                	jne    ffffffff80001d86 <mutex_unlock_slow+0xeb>
ffffffff80001d1c:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff80001d1f:	83 e8 08             	sub    $0x8,%eax
ffffffff80001d22:	83 c8 02             	or     $0x2,%eax
ffffffff80001d25:	89 45 e4             	mov    %eax,-0x1c(%rbp)
ffffffff80001d28:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80001d2c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff80001d30:	8b 45 e4             	mov    -0x1c(%rbp),%eax
ffffffff80001d33:	89 45 f0             	mov    %eax,-0x10(%rbp)
ffffffff80001d36:	8b 45 f0             	mov    -0x10(%rbp),%eax
ffffffff80001d39:	89 c1                	mov    %eax,%ecx
ffffffff80001d3b:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
ffffffff80001d3f:	48 8d 55 f4          	lea    -0xc(%rbp),%rdx
ffffffff80001d43:	8b 02                	mov    (%rdx),%eax
ffffffff80001d45:	f0 0f b1 0e          	lock cmpxchg %ecx,(%rsi)
ffffffff80001d49:	89 c1                	mov    %eax,%ecx
ffffffff80001d4b:	0f 94 c0             	sete   %al
ffffffff80001d4e:	84 c0                	test   %al,%al
ffffffff80001d50:	75 02                	jne    ffffffff80001d54 <mutex_unlock_slow+0xb9>
ffffffff80001d52:	89 0a                	mov    %ecx,(%rdx)
ffffffff80001d54:	84 c0                	test   %al,%al
ffffffff80001d56:	74 b0                	je     ffffffff80001d08 <mutex_unlock_slow+0x6d>
ffffffff80001d58:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80001d5c:	48 83 c0 08          	add    $0x8,%rax
ffffffff80001d60:	be 00 00 00 00       	mov    $0x0,%esi
ffffffff80001d65:	48 89 c7             	mov    %rax,%rdi
ffffffff80001d68:	e8 6f fb ff ff       	call   ffffffff800018dc <semaphore_release>
ffffffff80001d6d:	eb 18                	jmp    ffffffff80001d87 <mutex_unlock_slow+0xec>
ffffffff80001d6f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80001d73:	48 83 c0 08          	add    $0x8,%rax
ffffffff80001d77:	be 01 00 00 00       	mov    $0x1,%esi
ffffffff80001d7c:	48 89 c7             	mov    %rax,%rdi
ffffffff80001d7f:	e8 58 fb ff ff       	call   ffffffff800018dc <semaphore_release>
ffffffff80001d84:	eb 01                	jmp    ffffffff80001d87 <mutex_unlock_slow+0xec>
ffffffff80001d86:	90                   	nop
ffffffff80001d87:	c9                   	leave  
ffffffff80001d88:	c3                   	ret    

ffffffff80001d89 <mutex_unlock>:
ffffffff80001d89:	f3 0f 1e fa          	endbr64 
ffffffff80001d8d:	55                   	push   %rbp
ffffffff80001d8e:	48 89 e5             	mov    %rsp,%rbp
ffffffff80001d91:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff80001d95:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff80001d99:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80001d9d:	ba 01 00 00 00       	mov    $0x1,%edx
ffffffff80001da2:	f7 da                	neg    %edx
ffffffff80001da4:	f0 0f c1 10          	lock xadd %edx,(%rax)
ffffffff80001da8:	89 d0                	mov    %edx,%eax
ffffffff80001daa:	83 e8 01             	sub    $0x1,%eax
ffffffff80001dad:	89 45 fc             	mov    %eax,-0x4(%rbp)
ffffffff80001db0:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
ffffffff80001db4:	74 11                	je     ffffffff80001dc7 <mutex_unlock+0x3e>
ffffffff80001db6:	8b 55 fc             	mov    -0x4(%rbp),%edx
ffffffff80001db9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80001dbd:	89 d6                	mov    %edx,%esi
ffffffff80001dbf:	48 89 c7             	mov    %rax,%rdi
ffffffff80001dc2:	e8 d4 fe ff ff       	call   ffffffff80001c9b <mutex_unlock_slow>
ffffffff80001dc7:	90                   	nop
ffffffff80001dc8:	c9                   	leave  
ffffffff80001dc9:	c3                   	ret    

ffffffff80001dca <spinlock_try_lock_weak>:
ffffffff80001dca:	f3 0f 1e fa          	endbr64 
ffffffff80001dce:	55                   	push   %rbp
ffffffff80001dcf:	48 89 e5             	mov    %rsp,%rbp
ffffffff80001dd2:	48 83 ec 18          	sub    $0x18,%rsp
ffffffff80001dd6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff80001dda:	c6 45 f7 00          	movb   $0x0,-0x9(%rbp)
ffffffff80001dde:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80001de2:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff80001de6:	c6 45 f6 01          	movb   $0x1,-0xa(%rbp)
ffffffff80001dea:	0f b6 45 f6          	movzbl -0xa(%rbp),%eax
ffffffff80001dee:	0f b6 c8             	movzbl %al,%ecx
ffffffff80001df1:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
ffffffff80001df5:	48 8d 55 f7          	lea    -0x9(%rbp),%rdx
ffffffff80001df9:	0f b6 02             	movzbl (%rdx),%eax
ffffffff80001dfc:	f0 0f b0 0e          	lock cmpxchg %cl,(%rsi)
ffffffff80001e00:	89 c1                	mov    %eax,%ecx
ffffffff80001e02:	0f 94 c0             	sete   %al
ffffffff80001e05:	84 c0                	test   %al,%al
ffffffff80001e07:	75 02                	jne    ffffffff80001e0b <spinlock_try_lock_weak+0x41>
ffffffff80001e09:	88 0a                	mov    %cl,(%rdx)
ffffffff80001e0b:	90                   	nop
ffffffff80001e0c:	c9                   	leave  
ffffffff80001e0d:	c3                   	ret    

ffffffff80001e0e <spinlock_lock>:
ffffffff80001e0e:	f3 0f 1e fa          	endbr64 
ffffffff80001e12:	55                   	push   %rbp
ffffffff80001e13:	48 89 e5             	mov    %rsp,%rbp
ffffffff80001e16:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff80001e1a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff80001e1e:	9c                   	pushf  
ffffffff80001e1f:	58                   	pop    %rax
ffffffff80001e20:	25 00 02 00 00       	and    $0x200,%eax
ffffffff80001e25:	48 85 c0             	test   %rax,%rax
ffffffff80001e28:	0f 95 c0             	setne  %al
ffffffff80001e2b:	88 45 ff             	mov    %al,-0x1(%rbp)
ffffffff80001e2e:	fa                   	cli    
ffffffff80001e2f:	90                   	nop
ffffffff80001e30:	eb 18                	jmp    ffffffff80001e4a <spinlock_lock+0x3c>
ffffffff80001e32:	fb                   	sti    
ffffffff80001e33:	90                   	nop
ffffffff80001e34:	eb 02                	jmp    ffffffff80001e38 <spinlock_lock+0x2a>
ffffffff80001e36:	f3 90                	pause  
ffffffff80001e38:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80001e3c:	48 89 c7             	mov    %rax,%rdi
ffffffff80001e3f:	e8 d6 00 00 00       	call   ffffffff80001f1a <spinlock_is_locked>
ffffffff80001e44:	84 c0                	test   %al,%al
ffffffff80001e46:	75 ee                	jne    ffffffff80001e36 <spinlock_lock+0x28>
ffffffff80001e48:	fa                   	cli    
ffffffff80001e49:	90                   	nop
ffffffff80001e4a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80001e4e:	48 89 c7             	mov    %rax,%rdi
ffffffff80001e51:	e8 74 ff ff ff       	call   ffffffff80001dca <spinlock_try_lock_weak>
ffffffff80001e56:	83 f0 01             	xor    $0x1,%eax
ffffffff80001e59:	84 c0                	test   %al,%al
ffffffff80001e5b:	75 d5                	jne    ffffffff80001e32 <spinlock_lock+0x24>
ffffffff80001e5d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff80001e61:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
ffffffff80001e65:	88 42 01             	mov    %al,0x1(%rdx)
ffffffff80001e68:	90                   	nop
ffffffff80001e69:	c9                   	leave  
ffffffff80001e6a:	c3                   	ret    

ffffffff80001e6b <spinlock_try_lock>:
ffffffff80001e6b:	f3 0f 1e fa          	endbr64 
ffffffff80001e6f:	55                   	push   %rbp
ffffffff80001e70:	48 89 e5             	mov    %rsp,%rbp
ffffffff80001e73:	48 83 ec 28          	sub    $0x28,%rsp
ffffffff80001e77:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
ffffffff80001e7b:	9c                   	pushf  
ffffffff80001e7c:	58                   	pop    %rax
ffffffff80001e7d:	25 00 02 00 00       	and    $0x200,%eax
ffffffff80001e82:	48 85 c0             	test   %rax,%rax
ffffffff80001e85:	0f 95 c0             	setne  %al
ffffffff80001e88:	88 45 ff             	mov    %al,-0x1(%rbp)
ffffffff80001e8b:	fa                   	cli    
ffffffff80001e8c:	90                   	nop
ffffffff80001e8d:	c6 45 ee 00          	movb   $0x0,-0x12(%rbp)
ffffffff80001e91:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80001e95:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff80001e99:	c6 45 ed 01          	movb   $0x1,-0x13(%rbp)
ffffffff80001e9d:	0f b6 45 ed          	movzbl -0x13(%rbp),%eax
ffffffff80001ea1:	0f b6 c8             	movzbl %al,%ecx
ffffffff80001ea4:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
ffffffff80001ea8:	48 8d 55 ee          	lea    -0x12(%rbp),%rdx
ffffffff80001eac:	0f b6 02             	movzbl (%rdx),%eax
ffffffff80001eaf:	f0 0f b0 0e          	lock cmpxchg %cl,(%rsi)
ffffffff80001eb3:	89 c1                	mov    %eax,%ecx
ffffffff80001eb5:	0f 94 c0             	sete   %al
ffffffff80001eb8:	84 c0                	test   %al,%al
ffffffff80001eba:	75 02                	jne    ffffffff80001ebe <spinlock_try_lock+0x53>
ffffffff80001ebc:	88 0a                	mov    %cl,(%rdx)
ffffffff80001ebe:	88 45 ef             	mov    %al,-0x11(%rbp)
ffffffff80001ec1:	80 7d ef 00          	cmpb   $0x0,-0x11(%rbp)
ffffffff80001ec5:	74 0d                	je     ffffffff80001ed4 <spinlock_try_lock+0x69>
ffffffff80001ec7:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff80001ecb:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
ffffffff80001ecf:	88 42 01             	mov    %al,0x1(%rdx)
ffffffff80001ed2:	eb 02                	jmp    ffffffff80001ed6 <spinlock_try_lock+0x6b>
ffffffff80001ed4:	fb                   	sti    
ffffffff80001ed5:	90                   	nop
ffffffff80001ed6:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
ffffffff80001eda:	90                   	nop
ffffffff80001edb:	c9                   	leave  
ffffffff80001edc:	c3                   	ret    

ffffffff80001edd <spinlock_unlock>:
ffffffff80001edd:	f3 0f 1e fa          	endbr64 
ffffffff80001ee1:	55                   	push   %rbp
ffffffff80001ee2:	48 89 e5             	mov    %rsp,%rbp
ffffffff80001ee5:	48 83 ec 18          	sub    $0x18,%rsp
ffffffff80001ee9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff80001eed:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80001ef1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff80001ef5:	c6 45 f7 00          	movb   $0x0,-0x9(%rbp)
ffffffff80001ef9:	0f b6 45 f7          	movzbl -0x9(%rbp),%eax
ffffffff80001efd:	0f b6 d0             	movzbl %al,%edx
ffffffff80001f00:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80001f04:	88 10                	mov    %dl,(%rax)
ffffffff80001f06:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80001f0a:	0f b6 40 01          	movzbl 0x1(%rax),%eax
ffffffff80001f0e:	84 c0                	test   %al,%al
ffffffff80001f10:	74 03                	je     ffffffff80001f15 <spinlock_unlock+0x38>
ffffffff80001f12:	fb                   	sti    
ffffffff80001f13:	eb 02                	jmp    ffffffff80001f17 <spinlock_unlock+0x3a>
ffffffff80001f15:	fa                   	cli    
ffffffff80001f16:	90                   	nop
ffffffff80001f17:	90                   	nop
ffffffff80001f18:	c9                   	leave  
ffffffff80001f19:	c3                   	ret    

ffffffff80001f1a <spinlock_is_locked>:
ffffffff80001f1a:	f3 0f 1e fa          	endbr64 
ffffffff80001f1e:	55                   	push   %rbp
ffffffff80001f1f:	48 89 e5             	mov    %rsp,%rbp
ffffffff80001f22:	48 83 ec 18          	sub    $0x18,%rsp
ffffffff80001f26:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff80001f2a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80001f2e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff80001f32:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80001f36:	0f b6 00             	movzbl (%rax),%eax
ffffffff80001f39:	88 45 f7             	mov    %al,-0x9(%rbp)
ffffffff80001f3c:	0f b6 45 f7          	movzbl -0x9(%rbp),%eax
ffffffff80001f40:	c9                   	leave  
ffffffff80001f41:	c3                   	ret    

ffffffff80001f42 <get_stivale2_tag>:
ffffffff80001f42:	f3 0f 1e fa          	endbr64 
ffffffff80001f46:	55                   	push   %rbp
ffffffff80001f47:	48 89 e5             	mov    %rsp,%rbp
ffffffff80001f4a:	48 83 ec 18          	sub    $0x18,%rsp
ffffffff80001f4e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff80001f52:	48 8b 05 27 e1 2a 00 	mov    0x2ae127(%rip),%rax        # ffffffff802b0080 <m_stivale2>
ffffffff80001f59:	48 8b 80 80 00 00 00 	mov    0x80(%rax),%rax
ffffffff80001f60:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff80001f64:	eb 1f                	jmp    ffffffff80001f85 <get_stivale2_tag+0x43>
ffffffff80001f66:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80001f6a:	48 8b 00             	mov    (%rax),%rax
ffffffff80001f6d:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
ffffffff80001f71:	75 06                	jne    ffffffff80001f79 <get_stivale2_tag+0x37>
ffffffff80001f73:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80001f77:	eb 18                	jmp    ffffffff80001f91 <get_stivale2_tag+0x4f>
ffffffff80001f79:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80001f7d:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff80001f81:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff80001f85:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff80001f8a:	75 da                	jne    ffffffff80001f66 <get_stivale2_tag+0x24>
ffffffff80001f8c:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80001f91:	c9                   	leave  
ffffffff80001f92:	c3                   	ret    

ffffffff80001f93 <get_stivale2_module>:
ffffffff80001f93:	f3 0f 1e fa          	endbr64 
ffffffff80001f97:	55                   	push   %rbp
ffffffff80001f98:	48 89 e5             	mov    %rsp,%rbp
ffffffff80001f9b:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff80001f9f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff80001fa3:	48 8b 05 e6 e0 2a 00 	mov    0x2ae0e6(%rip),%rax        # ffffffff802b0090 <modules.4>
ffffffff80001faa:	48 85 c0             	test   %rax,%rax
ffffffff80001fad:	75 19                	jne    ffffffff80001fc8 <get_stivale2_module+0x35>
ffffffff80001faf:	48 b8 ce 04 de aa 66 	movabs $0x4b6fe466aade04ce,%rax
ffffffff80001fb6:	e4 6f 4b 
ffffffff80001fb9:	48 89 c7             	mov    %rax,%rdi
ffffffff80001fbc:	e8 81 ff ff ff       	call   ffffffff80001f42 <get_stivale2_tag>
ffffffff80001fc1:	48 89 05 c8 e0 2a 00 	mov    %rax,0x2ae0c8(%rip)        # ffffffff802b0090 <modules.4>
ffffffff80001fc8:	48 8b 05 c1 e0 2a 00 	mov    0x2ae0c1(%rip),%rax        # ffffffff802b0090 <modules.4>
ffffffff80001fcf:	48 85 c0             	test   %rax,%rax
ffffffff80001fd2:	74 6d                	je     ffffffff80002041 <get_stivale2_module+0xae>
ffffffff80001fd4:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
ffffffff80001fdb:	eb 4f                	jmp    ffffffff8000202c <get_stivale2_module+0x99>
ffffffff80001fdd:	48 8b 0d ac e0 2a 00 	mov    0x2ae0ac(%rip),%rcx        # ffffffff802b0090 <modules.4>
ffffffff80001fe4:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff80001fe7:	48 63 d0             	movslq %eax,%rdx
ffffffff80001fea:	48 89 d0             	mov    %rdx,%rax
ffffffff80001fed:	48 c1 e0 03          	shl    $0x3,%rax
ffffffff80001ff1:	48 01 d0             	add    %rdx,%rax
ffffffff80001ff4:	48 c1 e0 04          	shl    $0x4,%rax
ffffffff80001ff8:	48 83 c0 10          	add    $0x10,%rax
ffffffff80001ffc:	48 01 c8             	add    %rcx,%rax
ffffffff80001fff:	48 83 c0 08          	add    $0x8,%rax
ffffffff80002003:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff80002007:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8000200b:	48 83 c0 10          	add    $0x10,%rax
ffffffff8000200f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff80002013:	48 89 d6             	mov    %rdx,%rsi
ffffffff80002016:	48 89 c7             	mov    %rax,%rdi
ffffffff80002019:	e8 98 c9 00 00       	call   ffffffff8000e9b6 <strcmp>
ffffffff8000201e:	85 c0                	test   %eax,%eax
ffffffff80002020:	75 06                	jne    ffffffff80002028 <get_stivale2_module+0x95>
ffffffff80002022:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80002026:	eb 1e                	jmp    ffffffff80002046 <get_stivale2_module+0xb3>
ffffffff80002028:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
ffffffff8000202c:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8000202f:	48 98                	cltq   
ffffffff80002031:	48 8b 15 58 e0 2a 00 	mov    0x2ae058(%rip),%rdx        # ffffffff802b0090 <modules.4>
ffffffff80002038:	48 8b 52 10          	mov    0x10(%rdx),%rdx
ffffffff8000203c:	48 39 d0             	cmp    %rdx,%rax
ffffffff8000203f:	72 9c                	jb     ffffffff80001fdd <get_stivale2_module+0x4a>
ffffffff80002041:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80002046:	c9                   	leave  
ffffffff80002047:	c3                   	ret    

ffffffff80002048 <get_kernel_file>:
ffffffff80002048:	f3 0f 1e fa          	endbr64 
ffffffff8000204c:	55                   	push   %rbp
ffffffff8000204d:	48 89 e5             	mov    %rsp,%rbp
ffffffff80002050:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff80002054:	48 8b 05 3d e0 2a 00 	mov    0x2ae03d(%rip),%rax        # ffffffff802b0098 <kernel.3>
ffffffff8000205b:	48 85 c0             	test   %rax,%rax
ffffffff8000205e:	75 5a                	jne    ffffffff800020ba <get_kernel_file+0x72>
ffffffff80002060:	48 b8 4a 58 75 29 0c 	movabs $0xe599d90c2975584a,%rax
ffffffff80002067:	d9 99 e5 
ffffffff8000206a:	48 89 c7             	mov    %rax,%rdi
ffffffff8000206d:	e8 d0 fe ff ff       	call   ffffffff80001f42 <get_stivale2_tag>
ffffffff80002072:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff80002076:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff8000207b:	75 2e                	jne    ffffffff800020ab <get_kernel_file+0x63>
ffffffff8000207d:	48 b8 a2 6e 2c a0 18 	movabs $0x37c13018a02c6ea2,%rax
ffffffff80002084:	30 c1 37 
ffffffff80002087:	48 89 c7             	mov    %rax,%rdi
ffffffff8000208a:	e8 b3 fe ff ff       	call   ffffffff80001f42 <get_stivale2_tag>
ffffffff8000208f:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff80002093:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
ffffffff80002098:	74 20                	je     ffffffff800020ba <get_kernel_file+0x72>
ffffffff8000209a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8000209e:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff800020a2:	48 89 05 ef df 2a 00 	mov    %rax,0x2adfef(%rip)        # ffffffff802b0098 <kernel.3>
ffffffff800020a9:	eb 0f                	jmp    ffffffff800020ba <get_kernel_file+0x72>
ffffffff800020ab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff800020af:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff800020b3:	48 89 05 de df 2a 00 	mov    %rax,0x2adfde(%rip)        # ffffffff802b0098 <kernel.3>
ffffffff800020ba:	48 8b 05 d7 df 2a 00 	mov    0x2adfd7(%rip),%rax        # ffffffff802b0098 <kernel.3>
ffffffff800020c1:	c9                   	leave  
ffffffff800020c2:	c3                   	ret    

ffffffff800020c3 <enable_cpu_features>:
ffffffff800020c3:	f3 0f 1e fa          	endbr64 
ffffffff800020c7:	55                   	push   %rbp
ffffffff800020c8:	48 89 e5             	mov    %rsp,%rbp
ffffffff800020cb:	48 83 ec 30          	sub    $0x30,%rsp
ffffffff800020cf:	0f 20 c0             	mov    %cr0,%rax
ffffffff800020d2:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff800020d6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff800020da:	89 45 dc             	mov    %eax,-0x24(%rbp)
ffffffff800020dd:	0f b6 45 de          	movzbl -0x22(%rbp),%eax
ffffffff800020e1:	83 c8 01             	or     $0x1,%eax
ffffffff800020e4:	88 45 de             	mov    %al,-0x22(%rbp)
ffffffff800020e7:	8b 45 dc             	mov    -0x24(%rbp),%eax
ffffffff800020ea:	89 c0                	mov    %eax,%eax
ffffffff800020ec:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff800020f0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800020f4:	89 c0                	mov    %eax,%eax
ffffffff800020f6:	0f 22 c0             	mov    %rax,%cr0
ffffffff800020f9:	90                   	nop
ffffffff800020fa:	0f 20 e0             	mov    %cr4,%rax
ffffffff800020fd:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff80002101:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80002105:	89 45 d8             	mov    %eax,-0x28(%rbp)
ffffffff80002108:	0f b6 45 d9          	movzbl -0x27(%rbp),%eax
ffffffff8000210c:	83 c8 02             	or     $0x2,%eax
ffffffff8000210f:	88 45 d9             	mov    %al,-0x27(%rbp)
ffffffff80002112:	8b 45 d8             	mov    -0x28(%rbp),%eax
ffffffff80002115:	89 c0                	mov    %eax,%eax
ffffffff80002117:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8000211b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000211f:	89 c0                	mov    %eax,%eax
ffffffff80002121:	0f 22 e0             	mov    %rax,%cr4
ffffffff80002124:	90                   	nop
ffffffff80002125:	90                   	nop
ffffffff80002126:	c9                   	leave  
ffffffff80002127:	c3                   	ret    

ffffffff80002128 <get_cpu_count>:
ffffffff80002128:	f3 0f 1e fa          	endbr64 
ffffffff8000212c:	55                   	push   %rbp
ffffffff8000212d:	48 89 e5             	mov    %rsp,%rbp
ffffffff80002130:	48 8b 05 f1 4e 0a 00 	mov    0xa4ef1(%rip),%rax        # ffffffff800a7028 <m_cpu_count>
ffffffff80002137:	5d                   	pop    %rbp
ffffffff80002138:	c3                   	ret    

ffffffff80002139 <per_cpu_start>:
ffffffff80002139:	f3 0f 1e fa          	endbr64 
ffffffff8000213d:	55                   	push   %rbp
ffffffff8000213e:	48 89 e5             	mov    %rsp,%rbp
ffffffff80002141:	53                   	push   %rbx
ffffffff80002142:	48 83 ec 48          	sub    $0x48,%rsp
ffffffff80002146:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
ffffffff8000214a:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
ffffffff80002151:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80002156:	e8 68 ff ff ff       	call   ffffffff800020c3 <enable_cpu_features>
ffffffff8000215b:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80002160:	e8 f7 1a 00 00       	call   ffffffff80003c5c <init_gdt>
ffffffff80002165:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000216a:	e8 aa 32 00 00       	call   ffffffff80005419 <init_idt>
ffffffff8000216f:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80002174:	e8 ba 59 00 00       	call   ffffffff80007b33 <init_vmm_per_cpu>
ffffffff80002179:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000217e:	e8 88 48 00 00       	call   ffffffff80006a0b <init_apic>
ffffffff80002183:	89 45 ec             	mov    %eax,-0x14(%rbp)
ffffffff80002186:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
ffffffff8000218a:	74 40                	je     ffffffff800021cc <per_cpu_start+0x93>
ffffffff8000218c:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80002191:	e8 4b 4b 00 00       	call   ffffffff80006ce1 <get_apic_id>
ffffffff80002196:	48 89 c6             	mov    %rax,%rsi
ffffffff80002199:	41 b8 a2 00 00 00    	mov    $0xa2,%r8d
ffffffff8000219f:	48 8d 05 c1 5e 03 00 	lea    0x35ec1(%rip),%rax        # ffffffff80038067 <g_stivale2_header+0x1067>
ffffffff800021a6:	48 89 c1             	mov    %rax,%rcx
ffffffff800021a9:	48 8d 05 38 b2 03 00 	lea    0x3b238(%rip),%rax        # ffffffff8003d3e8 <__FUNCTION__.2.lto_priv.0>
ffffffff800021b0:	48 89 c2             	mov    %rax,%rdx
ffffffff800021b3:	48 8d 05 36 a6 03 00 	lea    0x3a636(%rip),%rax        # ffffffff8003c7f0 <g_stivale2_header+0x57f0>
ffffffff800021ba:	48 89 c7             	mov    %rax,%rdi
ffffffff800021bd:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800021c2:	e8 79 13 01 00       	call   ffffffff80013540 <printf_>
ffffffff800021c7:	e9 45 01 00 00       	jmp    ffffffff80002311 <per_cpu_start+0x1d8>
ffffffff800021cc:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800021d1:	e8 ff 32 01 00       	call   ffffffff800154d5 <init_cpu_locals>
ffffffff800021d6:	89 45 ec             	mov    %eax,-0x14(%rbp)
ffffffff800021d9:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
ffffffff800021dd:	74 40                	je     ffffffff8000221f <per_cpu_start+0xe6>
ffffffff800021df:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800021e4:	e8 f8 4a 00 00       	call   ffffffff80006ce1 <get_apic_id>
ffffffff800021e9:	48 89 c6             	mov    %rax,%rsi
ffffffff800021ec:	41 b8 a3 00 00 00    	mov    $0xa3,%r8d
ffffffff800021f2:	48 8d 05 6e 5e 03 00 	lea    0x35e6e(%rip),%rax        # ffffffff80038067 <g_stivale2_header+0x1067>
ffffffff800021f9:	48 89 c1             	mov    %rax,%rcx
ffffffff800021fc:	48 8d 05 e5 b1 03 00 	lea    0x3b1e5(%rip),%rax        # ffffffff8003d3e8 <__FUNCTION__.2.lto_priv.0>
ffffffff80002203:	48 89 c2             	mov    %rax,%rdx
ffffffff80002206:	48 8d 05 e3 a5 03 00 	lea    0x3a5e3(%rip),%rax        # ffffffff8003c7f0 <g_stivale2_header+0x57f0>
ffffffff8000220d:	48 89 c7             	mov    %rax,%rdi
ffffffff80002210:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80002215:	e8 26 13 01 00       	call   ffffffff80013540 <printf_>
ffffffff8000221a:	e9 f2 00 00 00       	jmp    ffffffff80002311 <per_cpu_start+0x1d8>
ffffffff8000221f:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff80002223:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff80002227:	48 b8 00 00 00 00 80 	movabs $0x8000000000,%rax
ffffffff8000222e:	00 00 00 
ffffffff80002231:	48 39 45 e0          	cmp    %rax,-0x20(%rbp)
ffffffff80002235:	76 3d                	jbe    ffffffff80002274 <per_cpu_start+0x13b>
ffffffff80002237:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000223c:	e8 a0 4a 00 00       	call   ffffffff80006ce1 <get_apic_id>
ffffffff80002241:	48 89 c6             	mov    %rax,%rsi
ffffffff80002244:	41 b8 a6 00 00 00    	mov    $0xa6,%r8d
ffffffff8000224a:	48 8d 05 16 5e 03 00 	lea    0x35e16(%rip),%rax        # ffffffff80038067 <g_stivale2_header+0x1067>
ffffffff80002251:	48 89 c1             	mov    %rax,%rcx
ffffffff80002254:	48 8d 05 8d b1 03 00 	lea    0x3b18d(%rip),%rax        # ffffffff8003d3e8 <__FUNCTION__.2.lto_priv.0>
ffffffff8000225b:	48 89 c2             	mov    %rax,%rdx
ffffffff8000225e:	48 8d 05 5b a5 03 00 	lea    0x3a55b(%rip),%rax        # ffffffff8003c7c0 <g_stivale2_header+0x57c0>
ffffffff80002265:	48 89 c7             	mov    %rax,%rdi
ffffffff80002268:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000226d:	e8 ce 12 01 00       	call   ffffffff80013540 <printf_>
ffffffff80002272:	0f 0b                	ud2    
ffffffff80002274:	48 ba 00 00 00 00 00 	movabs $0xffff800000000000,%rdx
ffffffff8000227b:	80 ff ff 
ffffffff8000227e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80002282:	48 01 d0             	add    %rdx,%rax
ffffffff80002285:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
ffffffff80002289:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff8000228d:	8b 40 04             	mov    0x4(%rax),%eax
ffffffff80002290:	89 c3                	mov    %eax,%ebx
ffffffff80002292:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80002297:	e8 45 4a 00 00       	call   ffffffff80006ce1 <get_apic_id>
ffffffff8000229c:	48 39 c3             	cmp    %rax,%rbx
ffffffff8000229f:	74 46                	je     ffffffff800022e7 <per_cpu_start+0x1ae>
ffffffff800022a1:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%rbp)
ffffffff800022a8:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800022ad:	e8 2f 4a 00 00       	call   ffffffff80006ce1 <get_apic_id>
ffffffff800022b2:	48 89 c6             	mov    %rax,%rsi
ffffffff800022b5:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff800022b8:	41 b9 a9 00 00 00    	mov    $0xa9,%r9d
ffffffff800022be:	4c 8d 05 a2 5d 03 00 	lea    0x35da2(%rip),%r8        # ffffffff80038067 <g_stivale2_header+0x1067>
ffffffff800022c5:	48 8d 15 1c b1 03 00 	lea    0x3b11c(%rip),%rdx        # ffffffff8003d3e8 <__FUNCTION__.2.lto_priv.0>
ffffffff800022cc:	48 89 d1             	mov    %rdx,%rcx
ffffffff800022cf:	89 c2                	mov    %eax,%edx
ffffffff800022d1:	48 8d 05 a0 a4 03 00 	lea    0x3a4a0(%rip),%rax        # ffffffff8003c778 <g_stivale2_header+0x5778>
ffffffff800022d8:	48 89 c7             	mov    %rax,%rdi
ffffffff800022db:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800022e0:	e8 5b 12 01 00       	call   ffffffff80013540 <printf_>
ffffffff800022e5:	eb 2a                	jmp    ffffffff80002311 <per_cpu_start+0x1d8>
ffffffff800022e7:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff800022eb:	8b 58 04             	mov    0x4(%rax),%ebx
ffffffff800022ee:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800022f3:	e8 e9 49 00 00       	call   ffffffff80006ce1 <get_apic_id>
ffffffff800022f8:	89 da                	mov    %ebx,%edx
ffffffff800022fa:	48 89 c6             	mov    %rax,%rsi
ffffffff800022fd:	48 8d 05 73 5d 03 00 	lea    0x35d73(%rip),%rax        # ffffffff80038077 <g_stivale2_header+0x1077>
ffffffff80002304:	48 89 c7             	mov    %rax,%rdi
ffffffff80002307:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000230c:	e8 2f 12 01 00       	call   ffffffff80013540 <printf_>
ffffffff80002311:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
ffffffff80002315:	74 3d                	je     ffffffff80002354 <per_cpu_start+0x21b>
ffffffff80002317:	48 8d 05 6e dd 2a 00 	lea    0x2add6e(%rip),%rax        # ffffffff802b008c <m_smp_error>
ffffffff8000231e:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
ffffffff80002322:	c6 45 ce 01          	movb   $0x1,-0x32(%rbp)
ffffffff80002326:	0f b6 45 ce          	movzbl -0x32(%rbp),%eax
ffffffff8000232a:	0f b6 d0             	movzbl %al,%edx
ffffffff8000232d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80002331:	86 10                	xchg   %dl,(%rax)
ffffffff80002333:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80002338:	e8 a4 49 00 00       	call   ffffffff80006ce1 <get_apic_id>
ffffffff8000233d:	48 89 c6             	mov    %rax,%rsi
ffffffff80002340:	48 8d 05 d1 a4 03 00 	lea    0x3a4d1(%rip),%rax        # ffffffff8003c818 <g_stivale2_header+0x5818>
ffffffff80002347:	48 89 c7             	mov    %rax,%rdi
ffffffff8000234a:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000234f:	e8 ec 11 01 00       	call   ffffffff80013540 <printf_>
ffffffff80002354:	f0 83 05 2c dd 2a 00 	lock addl $0x1,0x2add2c(%rip)        # ffffffff802b0088 <m_startup_count>
ffffffff8000235b:	01 
ffffffff8000235c:	eb 02                	jmp    ffffffff80002360 <per_cpu_start+0x227>
ffffffff8000235e:	f3 90                	pause  
ffffffff80002360:	48 8d 05 26 dd 2a 00 	lea    0x2add26(%rip),%rax        # ffffffff802b008d <m_start_scheduler>
ffffffff80002367:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
ffffffff8000236b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8000236f:	0f b6 00             	movzbl (%rax),%eax
ffffffff80002372:	88 45 cf             	mov    %al,-0x31(%rbp)
ffffffff80002375:	0f b6 45 cf          	movzbl -0x31(%rbp),%eax
ffffffff80002379:	83 f0 01             	xor    $0x1,%eax
ffffffff8000237c:	84 c0                	test   %al,%al
ffffffff8000237e:	75 de                	jne    ffffffff8000235e <per_cpu_start+0x225>
ffffffff80002380:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff80002384:	8b 58 04             	mov    0x4(%rax),%ebx
ffffffff80002387:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000238c:	e8 50 49 00 00       	call   ffffffff80006ce1 <get_apic_id>
ffffffff80002391:	89 da                	mov    %ebx,%edx
ffffffff80002393:	48 89 c6             	mov    %rax,%rsi
ffffffff80002396:	48 8d 05 da 5c 03 00 	lea    0x35cda(%rip),%rax        # ffffffff80038077 <g_stivale2_header+0x1077>
ffffffff8000239d:	48 89 c7             	mov    %rax,%rdi
ffffffff800023a0:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800023a5:	e8 96 11 01 00       	call   ffffffff80013540 <printf_>
ffffffff800023aa:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800023af:	e8 50 30 01 00       	call   ffffffff80015404 <scheduler_startup>
ffffffff800023b4:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800023b9:	e8 23 49 00 00       	call   ffffffff80006ce1 <get_apic_id>
ffffffff800023be:	48 89 c6             	mov    %rax,%rsi
ffffffff800023c1:	48 8d 05 78 a4 03 00 	lea    0x3a478(%rip),%rax        # ffffffff8003c840 <g_stivale2_header+0x5840>
ffffffff800023c8:	48 89 c7             	mov    %rax,%rdi
ffffffff800023cb:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800023d0:	e8 6b 11 01 00       	call   ffffffff80013540 <printf_>
ffffffff800023d5:	fa                   	cli    
ffffffff800023d6:	90                   	nop
ffffffff800023d7:	f4                   	hlt    
ffffffff800023d8:	eb fd                	jmp    ffffffff800023d7 <per_cpu_start+0x29e>

ffffffff800023da <start_thread>:
ffffffff800023da:	f3 0f 1e fa          	endbr64 
ffffffff800023de:	55                   	push   %rbp
ffffffff800023df:	48 89 e5             	mov    %rsp,%rbp
ffffffff800023e2:	48 81 ec 00 01 00 00 	sub    $0x100,%rsp
ffffffff800023e9:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
ffffffff800023f0:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800023f5:	e8 e7 48 00 00       	call   ffffffff80006ce1 <get_apic_id>
ffffffff800023fa:	48 89 c6             	mov    %rax,%rsi
ffffffff800023fd:	48 8d 05 6c a4 03 00 	lea    0x3a46c(%rip),%rax        # ffffffff8003c870 <g_stivale2_header+0x5870>
ffffffff80002404:	48 89 c7             	mov    %rax,%rdi
ffffffff80002407:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000240c:	e8 2f 11 01 00       	call   ffffffff80013540 <printf_>
ffffffff80002411:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80002416:	e8 43 ed ff ff       	call   ffffffff8000115e <init_gc>
ffffffff8000241b:	89 45 fc             	mov    %eax,-0x4(%rbp)
ffffffff8000241e:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
ffffffff80002422:	74 3d                	je     ffffffff80002461 <start_thread+0x87>
ffffffff80002424:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80002429:	e8 b3 48 00 00       	call   ffffffff80006ce1 <get_apic_id>
ffffffff8000242e:	48 89 c6             	mov    %rax,%rsi
ffffffff80002431:	41 b8 ce 00 00 00    	mov    $0xce,%r8d
ffffffff80002437:	48 8d 05 29 5c 03 00 	lea    0x35c29(%rip),%rax        # ffffffff80038067 <g_stivale2_header+0x1067>
ffffffff8000243e:	48 89 c1             	mov    %rax,%rcx
ffffffff80002441:	48 8d 05 b0 af 03 00 	lea    0x3afb0(%rip),%rax        # ffffffff8003d3f8 <__FUNCTION__.1.lto_priv.0>
ffffffff80002448:	48 89 c2             	mov    %rax,%rdx
ffffffff8000244b:	48 8d 05 9e a3 03 00 	lea    0x3a39e(%rip),%rax        # ffffffff8003c7f0 <g_stivale2_header+0x57f0>
ffffffff80002452:	48 89 c7             	mov    %rax,%rdi
ffffffff80002455:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000245a:	e8 e1 10 01 00       	call   ffffffff80013540 <printf_>
ffffffff8000245f:	eb 3d                	jmp    ffffffff8000249e <start_thread+0xc4>
ffffffff80002461:	48 8d 95 00 ff ff ff 	lea    -0x100(%rbp),%rdx
ffffffff80002468:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000246d:	b9 1f 00 00 00       	mov    $0x1f,%ecx
ffffffff80002472:	48 89 d7             	mov    %rdx,%rdi
ffffffff80002475:	f3 48 ab             	rep stos %rax,%es:(%rdi)
ffffffff80002478:	48 c7 45 80 28 00 00 	movq   $0x28,-0x80(%rbp)
ffffffff8000247f:	00 
ffffffff80002480:	48 8d 85 00 ff ff ff 	lea    -0x100(%rbp),%rax
ffffffff80002487:	be 01 00 00 00       	mov    $0x1,%esi
ffffffff8000248c:	48 89 c7             	mov    %rax,%rdi
ffffffff8000248f:	e8 c0 db ff ff       	call   ffffffff80000054 <gc_new>
ffffffff80002494:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80002499:	e8 cd eb ff ff       	call   ffffffff8000106b <gc_wait>
ffffffff8000249e:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
ffffffff800024a2:	74 3d                	je     ffffffff800024e1 <start_thread+0x107>
ffffffff800024a4:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800024a9:	e8 33 48 00 00       	call   ffffffff80006ce1 <get_apic_id>
ffffffff800024ae:	48 89 c6             	mov    %rax,%rsi
ffffffff800024b1:	41 b8 da 00 00 00    	mov    $0xda,%r8d
ffffffff800024b7:	48 8d 05 a9 5b 03 00 	lea    0x35ba9(%rip),%rax        # ffffffff80038067 <g_stivale2_header+0x1067>
ffffffff800024be:	48 89 c1             	mov    %rax,%rcx
ffffffff800024c1:	48 8d 05 30 af 03 00 	lea    0x3af30(%rip),%rax        # ffffffff8003d3f8 <__FUNCTION__.1.lto_priv.0>
ffffffff800024c8:	48 89 c2             	mov    %rax,%rdx
ffffffff800024cb:	48 8d 05 ee a2 03 00 	lea    0x3a2ee(%rip),%rax        # ffffffff8003c7c0 <g_stivale2_header+0x57c0>
ffffffff800024d2:	48 89 c7             	mov    %rax,%rdi
ffffffff800024d5:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800024da:	e8 61 10 01 00       	call   ffffffff80013540 <printf_>
ffffffff800024df:	0f 0b                	ud2    
ffffffff800024e1:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800024e6:	e8 f6 47 00 00       	call   ffffffff80006ce1 <get_apic_id>
ffffffff800024eb:	48 89 c6             	mov    %rax,%rsi
ffffffff800024ee:	48 8d 05 9a 5b 03 00 	lea    0x35b9a(%rip),%rax        # ffffffff8003808f <g_stivale2_header+0x108f>
ffffffff800024f5:	48 89 c7             	mov    %rax,%rdi
ffffffff800024f8:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800024fd:	e8 3e 10 01 00       	call   ffffffff80013540 <printf_>
ffffffff80002502:	eb fe                	jmp    ffffffff80002502 <start_thread+0x128>

ffffffff80002504 <_start>:
ffffffff80002504:	f3 0f 1e fa          	endbr64 
ffffffff80002508:	55                   	push   %rbp
ffffffff80002509:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000250c:	41 54                	push   %r12
ffffffff8000250e:	53                   	push   %rbx
ffffffff8000250f:	48 83 ec 60          	sub    $0x60,%rsp
ffffffff80002513:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
ffffffff80002517:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
ffffffff8000251e:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80002523:	e8 9b fb ff ff       	call   ffffffff800020c3 <enable_cpu_features>
ffffffff80002528:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000252d:	e8 2a 17 00 00       	call   ffffffff80003c5c <init_gdt>
ffffffff80002532:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80002537:	e8 dd 2e 00 00       	call   ffffffff80005419 <init_idt>
ffffffff8000253c:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80002541:	e8 d7 43 00 00       	call   ffffffff8000691d <early_init_apic>
ffffffff80002546:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff8000254a:	48 89 05 2f db 2a 00 	mov    %rax,0x2adb2f(%rip)        # ffffffff802b0080 <m_stivale2>
ffffffff80002551:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80002556:	e8 4c b8 00 00       	call   ffffffff8000dda7 <trace_init>
ffffffff8000255b:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80002560:	e8 7c 47 00 00       	call   ffffffff80006ce1 <get_apic_id>
ffffffff80002565:	48 89 c6             	mov    %rax,%rsi
ffffffff80002568:	48 8d 05 29 a3 03 00 	lea    0x3a329(%rip),%rax        # ffffffff8003c898 <g_stivale2_header+0x5898>
ffffffff8000256f:	48 89 c7             	mov    %rax,%rdi
ffffffff80002572:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80002577:	e8 c4 0f 01 00       	call   ffffffff80013540 <printf_>
ffffffff8000257c:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff80002580:	4c 8d 60 40          	lea    0x40(%rax),%r12
ffffffff80002584:	48 8b 5d 98          	mov    -0x68(%rbp),%rbx
ffffffff80002588:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000258d:	e8 4f 47 00 00       	call   ffffffff80006ce1 <get_apic_id>
ffffffff80002592:	4c 89 e1             	mov    %r12,%rcx
ffffffff80002595:	48 89 da             	mov    %rbx,%rdx
ffffffff80002598:	48 89 c6             	mov    %rax,%rsi
ffffffff8000259b:	48 8d 05 1e a3 03 00 	lea    0x3a31e(%rip),%rax        # ffffffff8003c8c0 <g_stivale2_header+0x58c0>
ffffffff800025a2:	48 89 c7             	mov    %rax,%rdi
ffffffff800025a5:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800025aa:	e8 91 0f 01 00       	call   ffffffff80013540 <printf_>
ffffffff800025af:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800025b4:	e8 28 47 00 00       	call   ffffffff80006ce1 <get_apic_id>
ffffffff800025b9:	48 89 c6             	mov    %rax,%rsi
ffffffff800025bc:	48 8d 05 25 a3 03 00 	lea    0x3a325(%rip),%rax        # ffffffff8003c8e8 <g_stivale2_header+0x58e8>
ffffffff800025c3:	48 89 c7             	mov    %rax,%rdi
ffffffff800025c6:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800025cb:	e8 70 0f 01 00       	call   ffffffff80013540 <printf_>
ffffffff800025d0:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800025d5:	e8 07 47 00 00       	call   ffffffff80006ce1 <get_apic_id>
ffffffff800025da:	48 89 c6             	mov    %rax,%rsi
ffffffff800025dd:	49 b8 00 00 00 00 80 	movabs $0x8000000000,%r8
ffffffff800025e4:	00 00 00 
ffffffff800025e7:	48 b8 00 00 00 00 80 	movabs $0xffff808000000000,%rax
ffffffff800025ee:	80 ff ff 
ffffffff800025f1:	48 89 c1             	mov    %rax,%rcx
ffffffff800025f4:	48 b8 00 00 00 00 00 	movabs $0xffff800000000000,%rax
ffffffff800025fb:	80 ff ff 
ffffffff800025fe:	48 89 c2             	mov    %rax,%rdx
ffffffff80002601:	48 8d 05 08 a3 03 00 	lea    0x3a308(%rip),%rax        # ffffffff8003c910 <g_stivale2_header+0x5910>
ffffffff80002608:	48 89 c7             	mov    %rax,%rdi
ffffffff8000260b:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80002610:	e8 2b 0f 01 00       	call   ffffffff80013540 <printf_>
ffffffff80002615:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000261a:	e8 c2 46 00 00       	call   ffffffff80006ce1 <get_apic_id>
ffffffff8000261f:	48 89 c6             	mov    %rax,%rsi
ffffffff80002622:	49 b8 00 00 00 00 02 	movabs $0x200000000,%r8
ffffffff80002629:	00 00 00 
ffffffff8000262c:	48 b8 00 00 00 40 82 	movabs $0xffff808240000000,%rax
ffffffff80002633:	80 ff ff 
ffffffff80002636:	48 89 c1             	mov    %rax,%rcx
ffffffff80002639:	48 b8 00 00 00 40 80 	movabs $0xffff808040000000,%rax
ffffffff80002640:	80 ff ff 
ffffffff80002643:	48 89 c2             	mov    %rax,%rdx
ffffffff80002646:	48 8d 05 f3 a2 03 00 	lea    0x3a2f3(%rip),%rax        # ffffffff8003c940 <g_stivale2_header+0x5940>
ffffffff8000264d:	48 89 c7             	mov    %rax,%rdi
ffffffff80002650:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80002655:	e8 e6 0e 01 00       	call   ffffffff80013540 <printf_>
ffffffff8000265a:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000265f:	e8 7d 46 00 00       	call   ffffffff80006ce1 <get_apic_id>
ffffffff80002664:	48 89 c6             	mov    %rax,%rsi
ffffffff80002667:	49 b8 00 00 00 00 80 	movabs $0x8000000000,%r8
ffffffff8000266e:	00 00 00 
ffffffff80002671:	48 b8 00 00 00 00 80 	movabs $0xffffff8000000000,%rax
ffffffff80002678:	ff ff ff 
ffffffff8000267b:	48 89 c1             	mov    %rax,%rcx
ffffffff8000267e:	48 b8 00 00 00 00 00 	movabs $0xffffff0000000000,%rax
ffffffff80002685:	ff ff ff 
ffffffff80002688:	48 89 c2             	mov    %rax,%rdx
ffffffff8000268b:	48 8d 05 d6 a2 03 00 	lea    0x3a2d6(%rip),%rax        # ffffffff8003c968 <g_stivale2_header+0x5968>
ffffffff80002692:	48 89 c7             	mov    %rax,%rdi
ffffffff80002695:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000269a:	e8 a1 0e 01 00       	call   ffffffff80013540 <printf_>
ffffffff8000269f:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800026a4:	e8 38 46 00 00       	call   ffffffff80006ce1 <get_apic_id>
ffffffff800026a9:	48 89 c6             	mov    %rax,%rsi
ffffffff800026ac:	49 b8 00 00 00 00 30 	movabs $0x3000000000,%r8
ffffffff800026b3:	00 00 00 
ffffffff800026b6:	48 b8 00 00 00 40 b0 	movabs $0xffffffb040000000,%rax
ffffffff800026bd:	ff ff ff 
ffffffff800026c0:	48 89 c1             	mov    %rax,%rcx
ffffffff800026c3:	48 b8 00 00 00 40 80 	movabs $0xffffff8040000000,%rax
ffffffff800026ca:	ff ff ff 
ffffffff800026cd:	48 89 c2             	mov    %rax,%rdx
ffffffff800026d0:	48 8d 05 c1 a2 03 00 	lea    0x3a2c1(%rip),%rax        # ffffffff8003c998 <g_stivale2_header+0x5998>
ffffffff800026d7:	48 89 c7             	mov    %rax,%rdi
ffffffff800026da:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800026df:	e8 5c 0e 01 00       	call   ffffffff80013540 <printf_>
ffffffff800026e4:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800026e9:	e8 f3 45 00 00       	call   ffffffff80006ce1 <get_apic_id>
ffffffff800026ee:	48 89 c6             	mov    %rax,%rsi
ffffffff800026f1:	49 b8 00 00 00 00 01 	movabs $0x100000000,%r8
ffffffff800026f8:	00 00 00 
ffffffff800026fb:	48 b8 00 00 00 80 b1 	movabs $0xffffffb180000000,%rax
ffffffff80002702:	ff ff ff 
ffffffff80002705:	48 89 c1             	mov    %rax,%rcx
ffffffff80002708:	48 b8 00 00 00 80 b0 	movabs $0xffffffb080000000,%rax
ffffffff8000270f:	ff ff ff 
ffffffff80002712:	48 89 c2             	mov    %rax,%rdx
ffffffff80002715:	48 8d 05 a4 a2 03 00 	lea    0x3a2a4(%rip),%rax        # ffffffff8003c9c0 <g_stivale2_header+0x59c0>
ffffffff8000271c:	48 89 c7             	mov    %rax,%rdi
ffffffff8000271f:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80002724:	e8 17 0e 01 00       	call   ffffffff80013540 <printf_>
ffffffff80002729:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000272e:	e8 ea 46 00 00       	call   ffffffff80006e1d <init_vmm>
ffffffff80002733:	89 45 ec             	mov    %eax,-0x14(%rbp)
ffffffff80002736:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
ffffffff8000273a:	74 40                	je     ffffffff8000277c <_start+0x278>
ffffffff8000273c:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80002741:	e8 9b 45 00 00       	call   ffffffff80006ce1 <get_apic_id>
ffffffff80002746:	48 89 c6             	mov    %rax,%rsi
ffffffff80002749:	41 b8 fc 00 00 00    	mov    $0xfc,%r8d
ffffffff8000274f:	48 8d 05 11 59 03 00 	lea    0x35911(%rip),%rax        # ffffffff80038067 <g_stivale2_header+0x1067>
ffffffff80002756:	48 89 c1             	mov    %rax,%rcx
ffffffff80002759:	48 8d 05 a5 ac 03 00 	lea    0x3aca5(%rip),%rax        # ffffffff8003d405 <__FUNCTION__.0.lto_priv.2>
ffffffff80002760:	48 89 c2             	mov    %rax,%rdx
ffffffff80002763:	48 8d 05 86 a0 03 00 	lea    0x3a086(%rip),%rax        # ffffffff8003c7f0 <g_stivale2_header+0x57f0>
ffffffff8000276a:	48 89 c7             	mov    %rax,%rdi
ffffffff8000276d:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80002772:	e8 c9 0d 01 00       	call   ffffffff80013540 <printf_>
ffffffff80002777:	e9 c2 07 00 00       	jmp    ffffffff80002f3e <_start+0xa3a>
ffffffff8000277c:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80002781:	e8 e6 ac 00 00       	call   ffffffff8000d46c <init_palloc>
ffffffff80002786:	89 45 ec             	mov    %eax,-0x14(%rbp)
ffffffff80002789:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
ffffffff8000278d:	74 40                	je     ffffffff800027cf <_start+0x2cb>
ffffffff8000278f:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80002794:	e8 48 45 00 00       	call   ffffffff80006ce1 <get_apic_id>
ffffffff80002799:	48 89 c6             	mov    %rax,%rsi
ffffffff8000279c:	41 b8 fd 00 00 00    	mov    $0xfd,%r8d
ffffffff800027a2:	48 8d 05 be 58 03 00 	lea    0x358be(%rip),%rax        # ffffffff80038067 <g_stivale2_header+0x1067>
ffffffff800027a9:	48 89 c1             	mov    %rax,%rcx
ffffffff800027ac:	48 8d 05 52 ac 03 00 	lea    0x3ac52(%rip),%rax        # ffffffff8003d405 <__FUNCTION__.0.lto_priv.2>
ffffffff800027b3:	48 89 c2             	mov    %rax,%rdx
ffffffff800027b6:	48 8d 05 33 a0 03 00 	lea    0x3a033(%rip),%rax        # ffffffff8003c7f0 <g_stivale2_header+0x57f0>
ffffffff800027bd:	48 89 c7             	mov    %rax,%rdi
ffffffff800027c0:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800027c5:	e8 76 0d 01 00       	call   ffffffff80013540 <printf_>
ffffffff800027ca:	e9 6f 07 00 00       	jmp    ffffffff80002f3e <_start+0xa3a>
ffffffff800027cf:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800027d4:	e8 48 53 00 00       	call   ffffffff80007b21 <vmm_switch_allocator>
ffffffff800027d9:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800027de:	e8 8e 8f 00 00       	call   ffffffff8000b771 <init_malloc>
ffffffff800027e3:	89 45 ec             	mov    %eax,-0x14(%rbp)
ffffffff800027e6:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
ffffffff800027ea:	74 40                	je     ffffffff8000282c <_start+0x328>
ffffffff800027ec:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800027f1:	e8 eb 44 00 00       	call   ffffffff80006ce1 <get_apic_id>
ffffffff800027f6:	48 89 c6             	mov    %rax,%rsi
ffffffff800027f9:	41 b8 ff 00 00 00    	mov    $0xff,%r8d
ffffffff800027ff:	48 8d 05 61 58 03 00 	lea    0x35861(%rip),%rax        # ffffffff80038067 <g_stivale2_header+0x1067>
ffffffff80002806:	48 89 c1             	mov    %rax,%rcx
ffffffff80002809:	48 8d 05 f5 ab 03 00 	lea    0x3abf5(%rip),%rax        # ffffffff8003d405 <__FUNCTION__.0.lto_priv.2>
ffffffff80002810:	48 89 c2             	mov    %rax,%rdx
ffffffff80002813:	48 8d 05 d6 9f 03 00 	lea    0x39fd6(%rip),%rax        # ffffffff8003c7f0 <g_stivale2_header+0x57f0>
ffffffff8000281a:	48 89 c7             	mov    %rax,%rdi
ffffffff8000281d:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80002822:	e8 19 0d 01 00       	call   ffffffff80013540 <printf_>
ffffffff80002827:	e9 12 07 00 00       	jmp    ffffffff80002f3e <_start+0xa3a>
ffffffff8000282c:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80002831:	e8 12 f8 ff ff       	call   ffffffff80002048 <get_kernel_file>
ffffffff80002836:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff8000283a:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
ffffffff8000283f:	75 49                	jne    ffffffff8000288a <_start+0x386>
ffffffff80002841:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%rbp)
ffffffff80002848:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000284d:	e8 8f 44 00 00       	call   ffffffff80006ce1 <get_apic_id>
ffffffff80002852:	48 89 c6             	mov    %rax,%rsi
ffffffff80002855:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff80002858:	41 b9 04 01 00 00    	mov    $0x104,%r9d
ffffffff8000285e:	4c 8d 05 02 58 03 00 	lea    0x35802(%rip),%r8        # ffffffff80038067 <g_stivale2_header+0x1067>
ffffffff80002865:	48 8d 15 99 ab 03 00 	lea    0x3ab99(%rip),%rdx        # ffffffff8003d405 <__FUNCTION__.0.lto_priv.2>
ffffffff8000286c:	48 89 d1             	mov    %rdx,%rcx
ffffffff8000286f:	89 c2                	mov    %eax,%edx
ffffffff80002871:	48 8d 05 00 9f 03 00 	lea    0x39f00(%rip),%rax        # ffffffff8003c778 <g_stivale2_header+0x5778>
ffffffff80002878:	48 89 c7             	mov    %rax,%rdi
ffffffff8000287b:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80002880:	e8 bb 0c 01 00       	call   ffffffff80013540 <printf_>
ffffffff80002885:	e9 b4 06 00 00       	jmp    ffffffff80002f3e <_start+0xa3a>
ffffffff8000288a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8000288e:	48 89 c7             	mov    %rax,%rdi
ffffffff80002891:	e8 aa 0f 00 00       	call   ffffffff80003840 <debug_load_symbols>
ffffffff80002896:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000289b:	e8 db 41 01 00       	call   ffffffff80016a7b <init_acpi>
ffffffff800028a0:	89 45 ec             	mov    %eax,-0x14(%rbp)
ffffffff800028a3:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
ffffffff800028a7:	74 40                	je     ffffffff800028e9 <_start+0x3e5>
ffffffff800028a9:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800028ae:	e8 2e 44 00 00       	call   ffffffff80006ce1 <get_apic_id>
ffffffff800028b3:	48 89 c6             	mov    %rax,%rsi
ffffffff800028b6:	41 b8 08 01 00 00    	mov    $0x108,%r8d
ffffffff800028bc:	48 8d 05 a4 57 03 00 	lea    0x357a4(%rip),%rax        # ffffffff80038067 <g_stivale2_header+0x1067>
ffffffff800028c3:	48 89 c1             	mov    %rax,%rcx
ffffffff800028c6:	48 8d 05 38 ab 03 00 	lea    0x3ab38(%rip),%rax        # ffffffff8003d405 <__FUNCTION__.0.lto_priv.2>
ffffffff800028cd:	48 89 c2             	mov    %rax,%rdx
ffffffff800028d0:	48 8d 05 19 9f 03 00 	lea    0x39f19(%rip),%rax        # ffffffff8003c7f0 <g_stivale2_header+0x57f0>
ffffffff800028d7:	48 89 c7             	mov    %rax,%rdi
ffffffff800028da:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800028df:	e8 5c 0c 01 00       	call   ffffffff80013540 <printf_>
ffffffff800028e4:	e9 55 06 00 00       	jmp    ffffffff80002f3e <_start+0xa3a>
ffffffff800028e9:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800028ee:	e8 2e 3e 01 00       	call   ffffffff80016721 <init_delay>
ffffffff800028f3:	89 45 ec             	mov    %eax,-0x14(%rbp)
ffffffff800028f6:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
ffffffff800028fa:	74 40                	je     ffffffff8000293c <_start+0x438>
ffffffff800028fc:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80002901:	e8 db 43 00 00       	call   ffffffff80006ce1 <get_apic_id>
ffffffff80002906:	48 89 c6             	mov    %rax,%rsi
ffffffff80002909:	41 b8 09 01 00 00    	mov    $0x109,%r8d
ffffffff8000290f:	48 8d 05 51 57 03 00 	lea    0x35751(%rip),%rax        # ffffffff80038067 <g_stivale2_header+0x1067>
ffffffff80002916:	48 89 c1             	mov    %rax,%rcx
ffffffff80002919:	48 8d 05 e5 aa 03 00 	lea    0x3aae5(%rip),%rax        # ffffffff8003d405 <__FUNCTION__.0.lto_priv.2>
ffffffff80002920:	48 89 c2             	mov    %rax,%rdx
ffffffff80002923:	48 8d 05 c6 9e 03 00 	lea    0x39ec6(%rip),%rax        # ffffffff8003c7f0 <g_stivale2_header+0x57f0>
ffffffff8000292a:	48 89 c7             	mov    %rax,%rdi
ffffffff8000292d:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80002932:	e8 09 0c 01 00       	call   ffffffff80013540 <printf_>
ffffffff80002937:	e9 02 06 00 00       	jmp    ffffffff80002f3e <_start+0xa3a>
ffffffff8000293c:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80002941:	e8 d2 3c 01 00       	call   ffffffff80016618 <init_timer>
ffffffff80002946:	89 45 ec             	mov    %eax,-0x14(%rbp)
ffffffff80002949:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
ffffffff8000294d:	74 40                	je     ffffffff8000298f <_start+0x48b>
ffffffff8000294f:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80002954:	e8 88 43 00 00       	call   ffffffff80006ce1 <get_apic_id>
ffffffff80002959:	48 89 c6             	mov    %rax,%rsi
ffffffff8000295c:	41 b8 0a 01 00 00    	mov    $0x10a,%r8d
ffffffff80002962:	48 8d 05 fe 56 03 00 	lea    0x356fe(%rip),%rax        # ffffffff80038067 <g_stivale2_header+0x1067>
ffffffff80002969:	48 89 c1             	mov    %rax,%rcx
ffffffff8000296c:	48 8d 05 92 aa 03 00 	lea    0x3aa92(%rip),%rax        # ffffffff8003d405 <__FUNCTION__.0.lto_priv.2>
ffffffff80002973:	48 89 c2             	mov    %rax,%rdx
ffffffff80002976:	48 8d 05 73 9e 03 00 	lea    0x39e73(%rip),%rax        # ffffffff8003c7f0 <g_stivale2_header+0x57f0>
ffffffff8000297d:	48 89 c7             	mov    %rax,%rdi
ffffffff80002980:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80002985:	e8 b6 0b 01 00       	call   ffffffff80013540 <printf_>
ffffffff8000298a:	e9 af 05 00 00       	jmp    ffffffff80002f3e <_start+0xa3a>
ffffffff8000298f:	48 b8 25 70 64 39 63 	movabs $0x34d1d96339647025,%rax
ffffffff80002996:	d9 d1 34 
ffffffff80002999:	48 89 c7             	mov    %rax,%rdi
ffffffff8000299c:	e8 a1 f5 ff ff       	call   ffffffff80001f42 <get_stivale2_tag>
ffffffff800029a1:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
ffffffff800029a5:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
ffffffff800029aa:	74 0f                	je     ffffffff800029bb <_start+0x4b7>
ffffffff800029ac:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff800029b0:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff800029b4:	48 89 05 6d 46 0a 00 	mov    %rax,0xa466d(%rip)        # ffffffff800a7028 <m_cpu_count>
ffffffff800029bb:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800029c0:	e8 10 2b 01 00       	call   ffffffff800154d5 <init_cpu_locals>
ffffffff800029c5:	89 45 ec             	mov    %eax,-0x14(%rbp)
ffffffff800029c8:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
ffffffff800029cc:	74 40                	je     ffffffff80002a0e <_start+0x50a>
ffffffff800029ce:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800029d3:	e8 09 43 00 00       	call   ffffffff80006ce1 <get_apic_id>
ffffffff800029d8:	48 89 c6             	mov    %rax,%rsi
ffffffff800029db:	41 b8 19 01 00 00    	mov    $0x119,%r8d
ffffffff800029e1:	48 8d 05 7f 56 03 00 	lea    0x3567f(%rip),%rax        # ffffffff80038067 <g_stivale2_header+0x1067>
ffffffff800029e8:	48 89 c1             	mov    %rax,%rcx
ffffffff800029eb:	48 8d 05 13 aa 03 00 	lea    0x3aa13(%rip),%rax        # ffffffff8003d405 <__FUNCTION__.0.lto_priv.2>
ffffffff800029f2:	48 89 c2             	mov    %rax,%rdx
ffffffff800029f5:	48 8d 05 f4 9d 03 00 	lea    0x39df4(%rip),%rax        # ffffffff8003c7f0 <g_stivale2_header+0x57f0>
ffffffff800029fc:	48 89 c7             	mov    %rax,%rdi
ffffffff800029ff:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80002a04:	e8 37 0b 01 00       	call   ffffffff80013540 <printf_>
ffffffff80002a09:	e9 30 05 00 00       	jmp    ffffffff80002f3e <_start+0xa3a>
ffffffff80002a0e:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80002a13:	e8 1f 2a 01 00       	call   ffffffff80015437 <init_scheduler>
ffffffff80002a18:	89 45 ec             	mov    %eax,-0x14(%rbp)
ffffffff80002a1b:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
ffffffff80002a1f:	74 40                	je     ffffffff80002a61 <_start+0x55d>
ffffffff80002a21:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80002a26:	e8 b6 42 00 00       	call   ffffffff80006ce1 <get_apic_id>
ffffffff80002a2b:	48 89 c6             	mov    %rax,%rsi
ffffffff80002a2e:	41 b8 1a 01 00 00    	mov    $0x11a,%r8d
ffffffff80002a34:	48 8d 05 2c 56 03 00 	lea    0x3562c(%rip),%rax        # ffffffff80038067 <g_stivale2_header+0x1067>
ffffffff80002a3b:	48 89 c1             	mov    %rax,%rcx
ffffffff80002a3e:	48 8d 05 c0 a9 03 00 	lea    0x3a9c0(%rip),%rax        # ffffffff8003d405 <__FUNCTION__.0.lto_priv.2>
ffffffff80002a45:	48 89 c2             	mov    %rax,%rdx
ffffffff80002a48:	48 8d 05 a1 9d 03 00 	lea    0x39da1(%rip),%rax        # ffffffff8003c7f0 <g_stivale2_header+0x57f0>
ffffffff80002a4f:	48 89 c7             	mov    %rax,%rdi
ffffffff80002a52:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80002a57:	e8 e4 0a 01 00       	call   ffffffff80013540 <printf_>
ffffffff80002a5c:	e9 dd 04 00 00       	jmp    ffffffff80002f3e <_start+0xa3a>
ffffffff80002a61:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80002a65:	48 89 c7             	mov    %rax,%rdi
ffffffff80002a68:	e8 05 33 01 00       	call   ffffffff80015d72 <init_tls>
ffffffff80002a6d:	89 45 ec             	mov    %eax,-0x14(%rbp)
ffffffff80002a70:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
ffffffff80002a74:	74 40                	je     ffffffff80002ab6 <_start+0x5b2>
ffffffff80002a76:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80002a7b:	e8 61 42 00 00       	call   ffffffff80006ce1 <get_apic_id>
ffffffff80002a80:	48 89 c6             	mov    %rax,%rsi
ffffffff80002a83:	41 b8 1b 01 00 00    	mov    $0x11b,%r8d
ffffffff80002a89:	48 8d 05 d7 55 03 00 	lea    0x355d7(%rip),%rax        # ffffffff80038067 <g_stivale2_header+0x1067>
ffffffff80002a90:	48 89 c1             	mov    %rax,%rcx
ffffffff80002a93:	48 8d 05 6b a9 03 00 	lea    0x3a96b(%rip),%rax        # ffffffff8003d405 <__FUNCTION__.0.lto_priv.2>
ffffffff80002a9a:	48 89 c2             	mov    %rax,%rdx
ffffffff80002a9d:	48 8d 05 4c 9d 03 00 	lea    0x39d4c(%rip),%rax        # ffffffff8003c7f0 <g_stivale2_header+0x57f0>
ffffffff80002aa4:	48 89 c7             	mov    %rax,%rdi
ffffffff80002aa7:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80002aac:	e8 8f 0a 01 00       	call   ffffffff80013540 <printf_>
ffffffff80002ab1:	e9 88 04 00 00       	jmp    ffffffff80002f3e <_start+0xa3a>
ffffffff80002ab6:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
ffffffff80002abb:	0f 84 8b 02 00 00    	je     ffffffff80002d4c <_start+0x848>
ffffffff80002ac1:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80002ac6:	e8 16 42 00 00       	call   ffffffff80006ce1 <get_apic_id>
ffffffff80002acb:	48 89 c6             	mov    %rax,%rsi
ffffffff80002ace:	48 8d 05 d2 55 03 00 	lea    0x355d2(%rip),%rax        # ffffffff800380a7 <g_stivale2_header+0x10a7>
ffffffff80002ad5:	48 89 c7             	mov    %rax,%rdi
ffffffff80002ad8:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80002add:	e8 5e 0a 01 00       	call   ffffffff80013540 <printf_>
ffffffff80002ae2:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%rbp)
ffffffff80002ae9:	e9 91 01 00 00       	jmp    ffffffff80002c7f <_start+0x77b>
ffffffff80002aee:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff80002af2:	8b 45 e8             	mov    -0x18(%rbp),%eax
ffffffff80002af5:	48 98                	cltq   
ffffffff80002af7:	48 83 c0 01          	add    $0x1,%rax
ffffffff80002afb:	48 c1 e0 05          	shl    $0x5,%rax
ffffffff80002aff:	48 01 d0             	add    %rdx,%rax
ffffffff80002b02:	48 83 c0 0c          	add    $0xc,%rax
ffffffff80002b06:	8b 00                	mov    (%rax),%eax
ffffffff80002b08:	89 c2                	mov    %eax,%edx
ffffffff80002b0a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80002b0e:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff80002b12:	48 39 c2             	cmp    %rax,%rdx
ffffffff80002b15:	72 49                	jb     ffffffff80002b60 <_start+0x65c>
ffffffff80002b17:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%rbp)
ffffffff80002b1e:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80002b23:	e8 b9 41 00 00       	call   ffffffff80006ce1 <get_apic_id>
ffffffff80002b28:	48 89 c6             	mov    %rax,%rsi
ffffffff80002b2b:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff80002b2e:	41 b9 23 01 00 00    	mov    $0x123,%r9d
ffffffff80002b34:	4c 8d 05 2c 55 03 00 	lea    0x3552c(%rip),%r8        # ffffffff80038067 <g_stivale2_header+0x1067>
ffffffff80002b3b:	48 8d 15 c3 a8 03 00 	lea    0x3a8c3(%rip),%rdx        # ffffffff8003d405 <__FUNCTION__.0.lto_priv.2>
ffffffff80002b42:	48 89 d1             	mov    %rdx,%rcx
ffffffff80002b45:	89 c2                	mov    %eax,%edx
ffffffff80002b47:	48 8d 05 2a 9c 03 00 	lea    0x39c2a(%rip),%rax        # ffffffff8003c778 <g_stivale2_header+0x5778>
ffffffff80002b4e:	48 89 c7             	mov    %rax,%rdi
ffffffff80002b51:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80002b56:	e8 e5 09 01 00       	call   ffffffff80013540 <printf_>
ffffffff80002b5b:	e9 de 03 00 00       	jmp    ffffffff80002f3e <_start+0xa3a>
ffffffff80002b60:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff80002b64:	8b 45 e8             	mov    -0x18(%rbp),%eax
ffffffff80002b67:	48 98                	cltq   
ffffffff80002b69:	48 83 c0 01          	add    $0x1,%rax
ffffffff80002b6d:	48 c1 e0 05          	shl    $0x5,%rax
ffffffff80002b71:	48 01 d0             	add    %rdx,%rax
ffffffff80002b74:	48 83 c0 0c          	add    $0xc,%rax
ffffffff80002b78:	8b 10                	mov    (%rax),%edx
ffffffff80002b7a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80002b7e:	8b 40 18             	mov    0x18(%rax),%eax
ffffffff80002b81:	39 c2                	cmp    %eax,%edx
ffffffff80002b83:	0f 85 8f 00 00 00    	jne    ffffffff80002c18 <_start+0x714>
ffffffff80002b89:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80002b8d:	8b 58 18             	mov    0x18(%rax),%ebx
ffffffff80002b90:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80002b95:	e8 47 41 00 00       	call   ffffffff80006ce1 <get_apic_id>
ffffffff80002b9a:	89 da                	mov    %ebx,%edx
ffffffff80002b9c:	48 89 c6             	mov    %rax,%rsi
ffffffff80002b9f:	48 8d 05 1c 55 03 00 	lea    0x3551c(%rip),%rax        # ffffffff800380c2 <g_stivale2_header+0x10c2>
ffffffff80002ba6:	48 89 c7             	mov    %rax,%rdi
ffffffff80002ba9:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80002bae:	e8 8d 09 01 00       	call   ffffffff80013540 <printf_>
ffffffff80002bb3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80002bb7:	8b 40 18             	mov    0x18(%rax),%eax
ffffffff80002bba:	89 c3                	mov    %eax,%ebx
ffffffff80002bbc:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80002bc1:	e8 1b 41 00 00       	call   ffffffff80006ce1 <get_apic_id>
ffffffff80002bc6:	48 39 c3             	cmp    %rax,%rbx
ffffffff80002bc9:	0f 84 ab 00 00 00    	je     ffffffff80002c7a <_start+0x776>
ffffffff80002bcf:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%rbp)
ffffffff80002bd6:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80002bdb:	e8 01 41 00 00       	call   ffffffff80006ce1 <get_apic_id>
ffffffff80002be0:	48 89 c6             	mov    %rax,%rsi
ffffffff80002be3:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff80002be6:	41 b9 27 01 00 00    	mov    $0x127,%r9d
ffffffff80002bec:	4c 8d 05 74 54 03 00 	lea    0x35474(%rip),%r8        # ffffffff80038067 <g_stivale2_header+0x1067>
ffffffff80002bf3:	48 8d 15 0b a8 03 00 	lea    0x3a80b(%rip),%rdx        # ffffffff8003d405 <__FUNCTION__.0.lto_priv.2>
ffffffff80002bfa:	48 89 d1             	mov    %rdx,%rcx
ffffffff80002bfd:	89 c2                	mov    %eax,%edx
ffffffff80002bff:	48 8d 05 72 9b 03 00 	lea    0x39b72(%rip),%rax        # ffffffff8003c778 <g_stivale2_header+0x5778>
ffffffff80002c06:	48 89 c7             	mov    %rax,%rdi
ffffffff80002c09:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80002c0e:	e8 2d 09 01 00       	call   ffffffff80013540 <printf_>
ffffffff80002c13:	e9 26 03 00 00       	jmp    ffffffff80002f3e <_start+0xa3a>
ffffffff80002c18:	bf 00 10 00 00       	mov    $0x1000,%edi
ffffffff80002c1d:	e8 df af 00 00       	call   ffffffff8000dc01 <palloc>
ffffffff80002c22:	48 05 00 10 00 00    	add    $0x1000,%rax
ffffffff80002c28:	48 89 c1             	mov    %rax,%rcx
ffffffff80002c2b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff80002c2f:	8b 45 e8             	mov    -0x18(%rbp),%eax
ffffffff80002c32:	48 98                	cltq   
ffffffff80002c34:	48 83 c0 01          	add    $0x1,%rax
ffffffff80002c38:	48 c1 e0 05          	shl    $0x5,%rax
ffffffff80002c3c:	48 01 d0             	add    %rdx,%rax
ffffffff80002c3f:	48 83 c0 10          	add    $0x10,%rax
ffffffff80002c43:	48 89 08             	mov    %rcx,(%rax)
ffffffff80002c46:	8b 45 e8             	mov    -0x18(%rbp),%eax
ffffffff80002c49:	48 98                	cltq   
ffffffff80002c4b:	48 c1 e0 05          	shl    $0x5,%rax
ffffffff80002c4f:	48 8d 50 30          	lea    0x30(%rax),%rdx
ffffffff80002c53:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80002c57:	48 01 d0             	add    %rdx,%rax
ffffffff80002c5a:	48 83 c0 08          	add    $0x8,%rax
ffffffff80002c5e:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
ffffffff80002c62:	48 8d 05 d0 f4 ff ff 	lea    -0xb30(%rip),%rax        # ffffffff80002139 <per_cpu_start>
ffffffff80002c69:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
ffffffff80002c6d:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
ffffffff80002c71:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff80002c75:	48 87 10             	xchg   %rdx,(%rax)
ffffffff80002c78:	eb 01                	jmp    ffffffff80002c7b <_start+0x777>
ffffffff80002c7a:	90                   	nop
ffffffff80002c7b:	83 45 e8 01          	addl   $0x1,-0x18(%rbp)
ffffffff80002c7f:	8b 45 e8             	mov    -0x18(%rbp),%eax
ffffffff80002c82:	48 98                	cltq   
ffffffff80002c84:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff80002c88:	48 8b 52 20          	mov    0x20(%rdx),%rdx
ffffffff80002c8c:	48 39 d0             	cmp    %rdx,%rax
ffffffff80002c8f:	0f 82 59 fe ff ff    	jb     ffffffff80002aee <_start+0x5ea>
ffffffff80002c95:	eb 02                	jmp    ffffffff80002c99 <_start+0x795>
ffffffff80002c97:	f3 90                	pause  
ffffffff80002c99:	48 8d 05 e8 d3 2a 00 	lea    0x2ad3e8(%rip),%rax        # ffffffff802b0088 <m_startup_count>
ffffffff80002ca0:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
ffffffff80002ca4:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff80002ca8:	8b 00                	mov    (%rax),%eax
ffffffff80002caa:	89 45 a8             	mov    %eax,-0x58(%rbp)
ffffffff80002cad:	8b 45 a8             	mov    -0x58(%rbp),%eax
ffffffff80002cb0:	48 98                	cltq   
ffffffff80002cb2:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff80002cb6:	48 8b 52 20          	mov    0x20(%rdx),%rdx
ffffffff80002cba:	48 83 ea 01          	sub    $0x1,%rdx
ffffffff80002cbe:	48 39 d0             	cmp    %rdx,%rax
ffffffff80002cc1:	75 d4                	jne    ffffffff80002c97 <_start+0x793>
ffffffff80002cc3:	48 8d 05 c2 d3 2a 00 	lea    0x2ad3c2(%rip),%rax        # ffffffff802b008c <m_smp_error>
ffffffff80002cca:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
ffffffff80002cce:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80002cd2:	0f b6 00             	movzbl (%rax),%eax
ffffffff80002cd5:	88 45 ae             	mov    %al,-0x52(%rbp)
ffffffff80002cd8:	0f b6 45 ae          	movzbl -0x52(%rbp),%eax
ffffffff80002cdc:	84 c0                	test   %al,%al
ffffffff80002cde:	74 49                	je     ffffffff80002d29 <_start+0x825>
ffffffff80002ce0:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%rbp)
ffffffff80002ce7:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80002cec:	e8 f0 3f 00 00       	call   ffffffff80006ce1 <get_apic_id>
ffffffff80002cf1:	48 89 c6             	mov    %rax,%rsi
ffffffff80002cf4:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff80002cf7:	41 b9 36 01 00 00    	mov    $0x136,%r9d
ffffffff80002cfd:	4c 8d 05 63 53 03 00 	lea    0x35363(%rip),%r8        # ffffffff80038067 <g_stivale2_header+0x1067>
ffffffff80002d04:	48 8d 15 fa a6 03 00 	lea    0x3a6fa(%rip),%rdx        # ffffffff8003d405 <__FUNCTION__.0.lto_priv.2>
ffffffff80002d0b:	48 89 d1             	mov    %rdx,%rcx
ffffffff80002d0e:	89 c2                	mov    %eax,%edx
ffffffff80002d10:	48 8d 05 61 9a 03 00 	lea    0x39a61(%rip),%rax        # ffffffff8003c778 <g_stivale2_header+0x5778>
ffffffff80002d17:	48 89 c7             	mov    %rax,%rdi
ffffffff80002d1a:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80002d1f:	e8 1c 08 01 00       	call   ffffffff80013540 <printf_>
ffffffff80002d24:	e9 15 02 00 00       	jmp    ffffffff80002f3e <_start+0xa3a>
ffffffff80002d29:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80002d2e:	e8 ae 3f 00 00       	call   ffffffff80006ce1 <get_apic_id>
ffffffff80002d33:	48 89 c6             	mov    %rax,%rsi
ffffffff80002d36:	48 8d 05 ab 9c 03 00 	lea    0x39cab(%rip),%rax        # ffffffff8003c9e8 <g_stivale2_header+0x59e8>
ffffffff80002d3d:	48 89 c7             	mov    %rax,%rdi
ffffffff80002d40:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80002d45:	e8 f6 07 01 00       	call   ffffffff80013540 <printf_>
ffffffff80002d4a:	eb 79                	jmp    ffffffff80002dc5 <_start+0x8c1>
ffffffff80002d4c:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80002d51:	e8 8b 3f 00 00       	call   ffffffff80006ce1 <get_apic_id>
ffffffff80002d56:	48 89 c6             	mov    %rax,%rsi
ffffffff80002d59:	48 8d 05 a8 9c 03 00 	lea    0x39ca8(%rip),%rax        # ffffffff8003ca08 <g_stivale2_header+0x5a08>
ffffffff80002d60:	48 89 c7             	mov    %rax,%rdi
ffffffff80002d63:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80002d68:	e8 d3 07 01 00       	call   ffffffff80013540 <printf_>
ffffffff80002d6d:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80002d72:	e8 6a 3f 00 00       	call   ffffffff80006ce1 <get_apic_id>
ffffffff80002d77:	48 85 c0             	test   %rax,%rax
ffffffff80002d7a:	74 49                	je     ffffffff80002dc5 <_start+0x8c1>
ffffffff80002d7c:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%rbp)
ffffffff80002d83:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80002d88:	e8 54 3f 00 00       	call   ffffffff80006ce1 <get_apic_id>
ffffffff80002d8d:	48 89 c6             	mov    %rax,%rsi
ffffffff80002d90:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff80002d93:	41 b9 3b 01 00 00    	mov    $0x13b,%r9d
ffffffff80002d99:	4c 8d 05 c7 52 03 00 	lea    0x352c7(%rip),%r8        # ffffffff80038067 <g_stivale2_header+0x1067>
ffffffff80002da0:	48 8d 15 5e a6 03 00 	lea    0x3a65e(%rip),%rdx        # ffffffff8003d405 <__FUNCTION__.0.lto_priv.2>
ffffffff80002da7:	48 89 d1             	mov    %rdx,%rcx
ffffffff80002daa:	89 c2                	mov    %eax,%edx
ffffffff80002dac:	48 8d 05 c5 99 03 00 	lea    0x399c5(%rip),%rax        # ffffffff8003c778 <g_stivale2_header+0x5778>
ffffffff80002db3:	48 89 c7             	mov    %rax,%rdi
ffffffff80002db6:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80002dbb:	e8 80 07 01 00       	call   ffffffff80013540 <printf_>
ffffffff80002dc0:	e9 79 01 00 00       	jmp    ffffffff80002f3e <_start+0xa3a>
ffffffff80002dc5:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80002dca:	e8 93 aa 00 00       	call   ffffffff8000d862 <palloc_reclaim>
ffffffff80002dcf:	89 45 ec             	mov    %eax,-0x14(%rbp)
ffffffff80002dd2:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
ffffffff80002dd6:	74 40                	je     ffffffff80002e18 <_start+0x914>
ffffffff80002dd8:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80002ddd:	e8 ff 3e 00 00       	call   ffffffff80006ce1 <get_apic_id>
ffffffff80002de2:	48 89 c6             	mov    %rax,%rsi
ffffffff80002de5:	41 b8 43 01 00 00    	mov    $0x143,%r8d
ffffffff80002deb:	48 8d 05 75 52 03 00 	lea    0x35275(%rip),%rax        # ffffffff80038067 <g_stivale2_header+0x1067>
ffffffff80002df2:	48 89 c1             	mov    %rax,%rcx
ffffffff80002df5:	48 8d 05 09 a6 03 00 	lea    0x3a609(%rip),%rax        # ffffffff8003d405 <__FUNCTION__.0.lto_priv.2>
ffffffff80002dfc:	48 89 c2             	mov    %rax,%rdx
ffffffff80002dff:	48 8d 05 ea 99 03 00 	lea    0x399ea(%rip),%rax        # ffffffff8003c7f0 <g_stivale2_header+0x57f0>
ffffffff80002e06:	48 89 c7             	mov    %rax,%rdi
ffffffff80002e09:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80002e0e:	e8 2d 07 01 00       	call   ffffffff80013540 <printf_>
ffffffff80002e13:	e9 26 01 00 00       	jmp    ffffffff80002f3e <_start+0xa3a>
ffffffff80002e18:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80002e1d:	e8 bf 3e 00 00       	call   ffffffff80006ce1 <get_apic_id>
ffffffff80002e22:	48 89 c6             	mov    %rax,%rsi
ffffffff80002e25:	48 8d 05 14 9c 03 00 	lea    0x39c14(%rip),%rax        # ffffffff8003ca40 <g_stivale2_header+0x5a40>
ffffffff80002e2c:	48 89 c7             	mov    %rax,%rdi
ffffffff80002e2f:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80002e34:	e8 07 07 01 00       	call   ffffffff80013540 <printf_>
ffffffff80002e39:	b8 05 00 00 00       	mov    $0x5,%eax
ffffffff80002e3e:	44 0f 22 c0          	mov    %rax,%cr8
ffffffff80002e42:	90                   	nop
ffffffff80002e43:	48 8d 05 96 52 03 00 	lea    0x35296(%rip),%rax        # ffffffff800380e0 <g_stivale2_header+0x10e0>
ffffffff80002e4a:	48 89 c2             	mov    %rax,%rdx
ffffffff80002e4d:	be 00 00 00 00       	mov    $0x0,%esi
ffffffff80002e52:	48 8d 05 81 f5 ff ff 	lea    -0xa7f(%rip),%rax        # ffffffff800023da <start_thread>
ffffffff80002e59:	48 89 c7             	mov    %rax,%rdi
ffffffff80002e5c:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80002e61:	e8 48 34 01 00       	call   ffffffff800162ae <create_thread>
ffffffff80002e66:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
ffffffff80002e6a:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
ffffffff80002e6f:	75 49                	jne    ffffffff80002eba <_start+0x9b6>
ffffffff80002e71:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%rbp)
ffffffff80002e78:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80002e7d:	e8 5f 3e 00 00       	call   ffffffff80006ce1 <get_apic_id>
ffffffff80002e82:	48 89 c6             	mov    %rax,%rsi
ffffffff80002e85:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff80002e88:	41 b9 4d 01 00 00    	mov    $0x14d,%r9d
ffffffff80002e8e:	4c 8d 05 d2 51 03 00 	lea    0x351d2(%rip),%r8        # ffffffff80038067 <g_stivale2_header+0x1067>
ffffffff80002e95:	48 8d 15 69 a5 03 00 	lea    0x3a569(%rip),%rdx        # ffffffff8003d405 <__FUNCTION__.0.lto_priv.2>
ffffffff80002e9c:	48 89 d1             	mov    %rdx,%rcx
ffffffff80002e9f:	89 c2                	mov    %eax,%edx
ffffffff80002ea1:	48 8d 05 d0 98 03 00 	lea    0x398d0(%rip),%rax        # ffffffff8003c778 <g_stivale2_header+0x5778>
ffffffff80002ea8:	48 89 c7             	mov    %rax,%rdi
ffffffff80002eab:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80002eb0:	e8 8b 06 01 00       	call   ffffffff80013540 <printf_>
ffffffff80002eb5:	e9 84 00 00 00       	jmp    ffffffff80002f3e <_start+0xa3a>
ffffffff80002eba:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff80002ebe:	48 89 c7             	mov    %rax,%rdi
ffffffff80002ec1:	e8 f2 15 01 00       	call   ffffffff800144b8 <scheduler_ready_thread>
ffffffff80002ec6:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80002ecb:	e8 11 3e 00 00       	call   ffffffff80006ce1 <get_apic_id>
ffffffff80002ed0:	48 89 c6             	mov    %rax,%rsi
ffffffff80002ed3:	48 8d 05 86 9b 03 00 	lea    0x39b86(%rip),%rax        # ffffffff8003ca60 <g_stivale2_header+0x5a60>
ffffffff80002eda:	48 89 c7             	mov    %rax,%rdi
ffffffff80002edd:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80002ee2:	e8 59 06 01 00       	call   ffffffff80013540 <printf_>
ffffffff80002ee7:	48 8d 05 9f d1 2a 00 	lea    0x2ad19f(%rip),%rax        # ffffffff802b008d <m_start_scheduler>
ffffffff80002eee:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
ffffffff80002ef2:	c6 45 af 01          	movb   $0x1,-0x51(%rbp)
ffffffff80002ef6:	0f b6 45 af          	movzbl -0x51(%rbp),%eax
ffffffff80002efa:	0f b6 d0             	movzbl %al,%edx
ffffffff80002efd:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
ffffffff80002f01:	88 10                	mov    %dl,(%rax)
ffffffff80002f03:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80002f08:	e8 d4 3d 00 00       	call   ffffffff80006ce1 <get_apic_id>
ffffffff80002f0d:	48 89 c3             	mov    %rax,%rbx
ffffffff80002f10:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80002f15:	e8 c7 3d 00 00       	call   ffffffff80006ce1 <get_apic_id>
ffffffff80002f1a:	48 89 da             	mov    %rbx,%rdx
ffffffff80002f1d:	48 89 c6             	mov    %rax,%rsi
ffffffff80002f20:	48 8d 05 9b 51 03 00 	lea    0x3519b(%rip),%rax        # ffffffff800380c2 <g_stivale2_header+0x10c2>
ffffffff80002f27:	48 89 c7             	mov    %rax,%rdi
ffffffff80002f2a:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80002f2f:	e8 0c 06 01 00       	call   ffffffff80013540 <printf_>
ffffffff80002f34:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80002f39:	e8 c6 24 01 00       	call   ffffffff80015404 <scheduler_startup>
ffffffff80002f3e:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
ffffffff80002f42:	74 23                	je     ffffffff80002f67 <_start+0xa63>
ffffffff80002f44:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80002f49:	e8 93 3d 00 00       	call   ffffffff80006ce1 <get_apic_id>
ffffffff80002f4e:	48 89 c6             	mov    %rax,%rsi
ffffffff80002f51:	48 8d 05 38 9b 03 00 	lea    0x39b38(%rip),%rax        # ffffffff8003ca90 <g_stivale2_header+0x5a90>
ffffffff80002f58:	48 89 c7             	mov    %rax,%rdi
ffffffff80002f5b:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80002f60:	e8 db 05 01 00       	call   ffffffff80013540 <printf_>
ffffffff80002f65:	eb 21                	jmp    ffffffff80002f88 <_start+0xa84>
ffffffff80002f67:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80002f6c:	e8 70 3d 00 00       	call   ffffffff80006ce1 <get_apic_id>
ffffffff80002f71:	48 89 c6             	mov    %rax,%rsi
ffffffff80002f74:	48 8d 05 c5 98 03 00 	lea    0x398c5(%rip),%rax        # ffffffff8003c840 <g_stivale2_header+0x5840>
ffffffff80002f7b:	48 89 c7             	mov    %rax,%rdi
ffffffff80002f7e:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80002f83:	e8 b8 05 01 00       	call   ffffffff80013540 <printf_>
ffffffff80002f88:	fa                   	cli    
ffffffff80002f89:	90                   	nop
ffffffff80002f8a:	f4                   	hlt    
ffffffff80002f8b:	eb fd                	jmp    ffffffff80002f8a <_start+0xa86>

ffffffff80002f8d <ZydisFormatterPrintAddressAbsolute>:
ffffffff80002f8d:	f3 0f 1e fa          	endbr64 
ffffffff80002f91:	55                   	push   %rbp
ffffffff80002f92:	48 89 e5             	mov    %rsp,%rbp
ffffffff80002f95:	48 81 ec 90 01 00 00 	sub    $0x190,%rsp
ffffffff80002f9c:	48 89 bd 88 fe ff ff 	mov    %rdi,-0x178(%rbp)
ffffffff80002fa3:	48 89 b5 80 fe ff ff 	mov    %rsi,-0x180(%rbp)
ffffffff80002faa:	48 89 95 78 fe ff ff 	mov    %rdx,-0x188(%rbp)
ffffffff80002fb1:	48 8b 85 78 fe ff ff 	mov    -0x188(%rbp),%rax
ffffffff80002fb8:	48 8b 50 18          	mov    0x18(%rax),%rdx
ffffffff80002fbc:	48 8b 85 78 fe ff ff 	mov    -0x188(%rbp),%rax
ffffffff80002fc3:	48 8b 70 10          	mov    0x10(%rax),%rsi
ffffffff80002fc7:	48 8b 85 78 fe ff ff 	mov    -0x188(%rbp),%rax
ffffffff80002fce:	48 8b 38             	mov    (%rax),%rdi
ffffffff80002fd1:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
ffffffff80002fd5:	48 89 c1             	mov    %rax,%rcx
ffffffff80002fd8:	e8 2d 1e 03 00       	call   ffffffff80034e0a <ZydisCalcAbsoluteAddress>
ffffffff80002fdd:	89 45 fc             	mov    %eax,-0x4(%rbp)
ffffffff80002fe0:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff80002fe3:	85 c0                	test   %eax,%eax
ffffffff80002fe5:	79 08                	jns    ffffffff80002fef <ZydisFormatterPrintAddressAbsolute+0x62>
ffffffff80002fe7:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff80002fea:	e9 ce 02 00 00       	jmp    ffffffff800032bd <ZydisFormatterPrintAddressAbsolute+0x330>
ffffffff80002fef:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80002ff3:	48 89 c7             	mov    %rax,%rdi
ffffffff80002ff6:	e8 80 0a 00 00       	call   ffffffff80003a7b <debug_lookup_symbol>
ffffffff80002ffb:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff80002fff:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
ffffffff80003004:	0f 84 8d 02 00 00    	je     ffffffff80003297 <ZydisFormatterPrintAddressAbsolute+0x30a>
ffffffff8000300a:	48 8b 85 80 fe ff ff 	mov    -0x180(%rbp),%rax
ffffffff80003011:	be 0e 00 00 00       	mov    $0xe,%esi
ffffffff80003016:	48 89 c7             	mov    %rax,%rdi
ffffffff80003019:	e8 eb 2a 03 00       	call   ffffffff80035b09 <ZydisFormatterBufferAppend>
ffffffff8000301e:	89 45 ec             	mov    %eax,-0x14(%rbp)
ffffffff80003021:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff80003024:	85 c0                	test   %eax,%eax
ffffffff80003026:	79 08                	jns    ffffffff80003030 <ZydisFormatterPrintAddressAbsolute+0xa3>
ffffffff80003028:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff8000302b:	e9 8d 02 00 00       	jmp    ffffffff800032bd <ZydisFormatterPrintAddressAbsolute+0x330>
ffffffff80003030:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
ffffffff80003034:	48 8b 95 80 fe ff ff 	mov    -0x180(%rbp),%rdx
ffffffff8000303b:	48 89 c6             	mov    %rax,%rsi
ffffffff8000303e:	48 89 d7             	mov    %rdx,%rdi
ffffffff80003041:	e8 5f 2a 03 00       	call   ffffffff80035aa5 <ZydisFormatterBufferGetString>
ffffffff80003046:	89 45 e8             	mov    %eax,-0x18(%rbp)
ffffffff80003049:	8b 45 e8             	mov    -0x18(%rbp),%eax
ffffffff8000304c:	85 c0                	test   %eax,%eax
ffffffff8000304e:	79 08                	jns    ffffffff80003058 <ZydisFormatterPrintAddressAbsolute+0xcb>
ffffffff80003050:	8b 45 e8             	mov    -0x18(%rbp),%eax
ffffffff80003053:	e9 65 02 00 00       	jmp    ffffffff800032bd <ZydisFormatterPrintAddressAbsolute+0x330>
ffffffff80003058:	48 c7 85 d0 fe ff ff 	movq   $0x0,-0x130(%rbp)
ffffffff8000305f:	00 00 00 00 
ffffffff80003063:	48 c7 85 d8 fe ff ff 	movq   $0x0,-0x128(%rbp)
ffffffff8000306a:	00 00 00 00 
ffffffff8000306e:	48 c7 85 e0 fe ff ff 	movq   $0x0,-0x120(%rbp)
ffffffff80003075:	00 00 00 00 
ffffffff80003079:	48 c7 85 e8 fe ff ff 	movq   $0x0,-0x118(%rbp)
ffffffff80003080:	00 00 00 00 
ffffffff80003084:	48 c7 85 f0 fe ff ff 	movq   $0x0,-0x110(%rbp)
ffffffff8000308b:	00 00 00 00 
ffffffff8000308f:	48 c7 85 f8 fe ff ff 	movq   $0x0,-0x108(%rbp)
ffffffff80003096:	00 00 00 00 
ffffffff8000309a:	48 c7 85 00 ff ff ff 	movq   $0x0,-0x100(%rbp)
ffffffff800030a1:	00 00 00 00 
ffffffff800030a5:	48 c7 85 08 ff ff ff 	movq   $0x0,-0xf8(%rbp)
ffffffff800030ac:	00 00 00 00 
ffffffff800030b0:	48 c7 85 10 ff ff ff 	movq   $0x0,-0xf0(%rbp)
ffffffff800030b7:	00 00 00 00 
ffffffff800030bb:	48 c7 85 18 ff ff ff 	movq   $0x0,-0xe8(%rbp)
ffffffff800030c2:	00 00 00 00 
ffffffff800030c6:	48 c7 85 20 ff ff ff 	movq   $0x0,-0xe0(%rbp)
ffffffff800030cd:	00 00 00 00 
ffffffff800030d1:	48 c7 85 28 ff ff ff 	movq   $0x0,-0xd8(%rbp)
ffffffff800030d8:	00 00 00 00 
ffffffff800030dc:	48 c7 85 30 ff ff ff 	movq   $0x0,-0xd0(%rbp)
ffffffff800030e3:	00 00 00 00 
ffffffff800030e7:	48 c7 85 38 ff ff ff 	movq   $0x0,-0xc8(%rbp)
ffffffff800030ee:	00 00 00 00 
ffffffff800030f2:	48 c7 85 40 ff ff ff 	movq   $0x0,-0xc0(%rbp)
ffffffff800030f9:	00 00 00 00 
ffffffff800030fd:	48 c7 85 48 ff ff ff 	movq   $0x0,-0xb8(%rbp)
ffffffff80003104:	00 00 00 00 
ffffffff80003108:	48 c7 85 50 ff ff ff 	movq   $0x0,-0xb0(%rbp)
ffffffff8000310f:	00 00 00 00 
ffffffff80003113:	48 c7 85 58 ff ff ff 	movq   $0x0,-0xa8(%rbp)
ffffffff8000311a:	00 00 00 00 
ffffffff8000311e:	48 c7 85 60 ff ff ff 	movq   $0x0,-0xa0(%rbp)
ffffffff80003125:	00 00 00 00 
ffffffff80003129:	48 c7 85 68 ff ff ff 	movq   $0x0,-0x98(%rbp)
ffffffff80003130:	00 00 00 00 
ffffffff80003134:	48 c7 85 70 ff ff ff 	movq   $0x0,-0x90(%rbp)
ffffffff8000313b:	00 00 00 00 
ffffffff8000313f:	48 c7 85 78 ff ff ff 	movq   $0x0,-0x88(%rbp)
ffffffff80003146:	00 00 00 00 
ffffffff8000314a:	48 c7 45 80 00 00 00 	movq   $0x0,-0x80(%rbp)
ffffffff80003151:	00 
ffffffff80003152:	48 c7 45 88 00 00 00 	movq   $0x0,-0x78(%rbp)
ffffffff80003159:	00 
ffffffff8000315a:	48 c7 45 90 00 00 00 	movq   $0x0,-0x70(%rbp)
ffffffff80003161:	00 
ffffffff80003162:	48 c7 45 98 00 00 00 	movq   $0x0,-0x68(%rbp)
ffffffff80003169:	00 
ffffffff8000316a:	48 c7 45 a0 00 00 00 	movq   $0x0,-0x60(%rbp)
ffffffff80003171:	00 
ffffffff80003172:	48 c7 45 a8 00 00 00 	movq   $0x0,-0x58(%rbp)
ffffffff80003179:	00 
ffffffff8000317a:	48 c7 45 b0 00 00 00 	movq   $0x0,-0x50(%rbp)
ffffffff80003181:	00 
ffffffff80003182:	48 c7 45 b8 00 00 00 	movq   $0x0,-0x48(%rbp)
ffffffff80003189:	00 
ffffffff8000318a:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
ffffffff80003191:	00 
ffffffff80003192:	48 c7 45 c8 00 00 00 	movq   $0x0,-0x38(%rbp)
ffffffff80003199:	00 
ffffffff8000319a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8000319e:	48 8b 10             	mov    (%rax),%rdx
ffffffff800031a1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff800031a5:	48 39 c2             	cmp    %rax,%rdx
ffffffff800031a8:	75 2d                	jne    ffffffff800031d7 <ZydisFormatterPrintAddressAbsolute+0x24a>
ffffffff800031aa:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff800031ae:	48 8b 50 10          	mov    0x10(%rax),%rdx
ffffffff800031b2:	48 8d 85 d0 fe ff ff 	lea    -0x130(%rbp),%rax
ffffffff800031b9:	48 89 d1             	mov    %rdx,%rcx
ffffffff800031bc:	48 8d 15 31 4f 03 00 	lea    0x34f31(%rip),%rdx        # ffffffff800380f4 <g_stivale2_header+0x10f4>
ffffffff800031c3:	be 00 01 00 00       	mov    $0x100,%esi
ffffffff800031c8:	48 89 c7             	mov    %rax,%rdi
ffffffff800031cb:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800031d0:	e8 23 05 01 00       	call   ffffffff800136f8 <snprintf_>
ffffffff800031d5:	eb 3f                	jmp    ffffffff80003216 <ZydisFormatterPrintAddressAbsolute+0x289>
ffffffff800031d7:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff800031db:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff800031df:	48 8b 00             	mov    (%rax),%rax
ffffffff800031e2:	48 89 d1             	mov    %rdx,%rcx
ffffffff800031e5:	48 29 c1             	sub    %rax,%rcx
ffffffff800031e8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff800031ec:	48 8b 50 10          	mov    0x10(%rax),%rdx
ffffffff800031f0:	48 8d 85 d0 fe ff ff 	lea    -0x130(%rbp),%rax
ffffffff800031f7:	49 89 c8             	mov    %rcx,%r8
ffffffff800031fa:	48 89 d1             	mov    %rdx,%rcx
ffffffff800031fd:	48 8d 15 f3 4e 03 00 	lea    0x34ef3(%rip),%rdx        # ffffffff800380f7 <g_stivale2_header+0x10f7>
ffffffff80003204:	be 00 01 00 00       	mov    $0x100,%esi
ffffffff80003209:	48 89 c7             	mov    %rax,%rdi
ffffffff8000320c:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80003211:	e8 e2 04 01 00       	call   ffffffff800136f8 <snprintf_>
ffffffff80003216:	c6 85 90 fe ff ff 00 	movb   $0x0,-0x170(%rbp)
ffffffff8000321d:	48 c7 85 98 fe ff ff 	movq   $0x0,-0x168(%rbp)
ffffffff80003224:	00 00 00 00 
ffffffff80003228:	c6 85 a0 fe ff ff 01 	movb   $0x1,-0x160(%rbp)
ffffffff8000322f:	c6 85 a1 fe ff ff 00 	movb   $0x0,-0x15f(%rbp)
ffffffff80003236:	48 8d 85 d0 fe ff ff 	lea    -0x130(%rbp),%rax
ffffffff8000323d:	48 89 c7             	mov    %rax,%rdi
ffffffff80003240:	e8 eb b7 00 00       	call   ffffffff8000ea30 <strlen>
ffffffff80003245:	48 83 c0 01          	add    $0x1,%rax
ffffffff80003249:	48 89 85 a8 fe ff ff 	mov    %rax,-0x158(%rbp)
ffffffff80003250:	48 c7 85 b0 fe ff ff 	movq   $0x100,-0x150(%rbp)
ffffffff80003257:	00 01 00 00 
ffffffff8000325b:	48 c7 85 b8 fe ff ff 	movq   $0x1,-0x148(%rbp)
ffffffff80003262:	01 00 00 00 
ffffffff80003266:	48 c7 85 c0 fe ff ff 	movq   $0x0,-0x140(%rbp)
ffffffff8000326d:	00 00 00 00 
ffffffff80003271:	48 8d 85 d0 fe ff ff 	lea    -0x130(%rbp),%rax
ffffffff80003278:	48 89 85 c8 fe ff ff 	mov    %rax,-0x138(%rbp)
ffffffff8000327f:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff80003283:	48 8d 85 90 fe ff ff 	lea    -0x170(%rbp),%rax
ffffffff8000328a:	48 89 c6             	mov    %rax,%rsi
ffffffff8000328d:	48 89 d7             	mov    %rdx,%rdi
ffffffff80003290:	e8 61 4e 01 00       	call   ffffffff800180f6 <ZyanStringAppend>
ffffffff80003295:	eb 26                	jmp    ffffffff800032bd <ZydisFormatterPrintAddressAbsolute+0x330>
ffffffff80003297:	4c 8b 05 0a ce 2a 00 	mov    0x2ace0a(%rip),%r8        # ffffffff802b00a8 <default_print_address_absolute>
ffffffff8000329e:	48 8b 95 78 fe ff ff 	mov    -0x188(%rbp),%rdx
ffffffff800032a5:	48 8b 8d 80 fe ff ff 	mov    -0x180(%rbp),%rcx
ffffffff800032ac:	48 8b 85 88 fe ff ff 	mov    -0x178(%rbp),%rax
ffffffff800032b3:	48 89 ce             	mov    %rcx,%rsi
ffffffff800032b6:	48 89 c7             	mov    %rax,%rdi
ffffffff800032b9:	41 ff d0             	call   *%r8
ffffffff800032bc:	90                   	nop
ffffffff800032bd:	c9                   	leave  
ffffffff800032be:	c3                   	ret    

ffffffff800032bf <debug_disasm_at>:
ffffffff800032bf:	f3 0f 1e fa          	endbr64 
ffffffff800032c3:	55                   	push   %rbp
ffffffff800032c4:	48 89 e5             	mov    %rsp,%rbp
ffffffff800032c7:	53                   	push   %rbx
ffffffff800032c8:	48 81 ec 08 08 00 00 	sub    $0x808,%rsp
ffffffff800032cf:	48 89 bd f8 f7 ff ff 	mov    %rdi,-0x808(%rbp)
ffffffff800032d6:	89 b5 f4 f7 ff ff    	mov    %esi,-0x80c(%rbp)
ffffffff800032dc:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
ffffffff800032e0:	ba 02 00 00 00       	mov    $0x2,%edx
ffffffff800032e5:	be 00 00 00 00       	mov    $0x0,%esi
ffffffff800032ea:	48 89 c7             	mov    %rax,%rdi
ffffffff800032ed:	e8 f2 a2 02 00       	call   ffffffff8002d5e4 <ZydisDecoderInit>
ffffffff800032f2:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
ffffffff800032f9:	be 01 00 00 00       	mov    $0x1,%esi
ffffffff800032fe:	48 89 c7             	mov    %rax,%rdi
ffffffff80003301:	e8 af a8 02 00       	call   ffffffff8002dbb5 <ZydisFormatterInit>
ffffffff80003306:	48 8d 05 80 fc ff ff 	lea    -0x380(%rip),%rax        # ffffffff80002f8d <ZydisFormatterPrintAddressAbsolute>
ffffffff8000330d:	48 89 05 94 cd 2a 00 	mov    %rax,0x2acd94(%rip)        # ffffffff802b00a8 <default_print_address_absolute>
ffffffff80003314:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
ffffffff8000331b:	48 8d 15 86 cd 2a 00 	lea    0x2acd86(%rip),%rdx        # ffffffff802b00a8 <default_print_address_absolute>
ffffffff80003322:	be 0b 00 00 00       	mov    $0xb,%esi
ffffffff80003327:	48 89 c7             	mov    %rax,%rdi
ffffffff8000332a:	e8 67 ae 02 00       	call   ffffffff8002e196 <ZydisFormatterSetHook>
ffffffff8000332f:	c6 45 ef 01          	movb   $0x1,-0x11(%rbp)
ffffffff80003333:	e9 36 02 00 00       	jmp    ffffffff8000356e <debug_disasm_at+0x2af>
ffffffff80003338:	48 8b bd f8 f7 ff ff 	mov    -0x808(%rbp),%rdi
ffffffff8000333f:	0f b6 85 29 fc ff ff 	movzbl -0x3d7(%rbp),%eax
ffffffff80003346:	0f b6 c8             	movzbl %al,%ecx
ffffffff80003349:	4c 8d 85 00 f9 ff ff 	lea    -0x700(%rbp),%r8
ffffffff80003350:	48 8d 95 00 fa ff ff 	lea    -0x600(%rbp),%rdx
ffffffff80003357:	48 8d b5 10 fc ff ff 	lea    -0x3f0(%rbp),%rsi
ffffffff8000335e:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
ffffffff80003365:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80003369:	57                   	push   %rdi
ffffffff8000336a:	41 b9 00 01 00 00    	mov    $0x100,%r9d
ffffffff80003370:	48 89 c7             	mov    %rax,%rdi
ffffffff80003373:	e8 05 af 02 00       	call   ffffffff8002e27d <ZydisFormatterFormatInstruction>
ffffffff80003378:	48 83 c4 10          	add    $0x10,%rsp
ffffffff8000337c:	48 c7 85 00 f8 ff ff 	movq   $0x0,-0x800(%rbp)
ffffffff80003383:	00 00 00 00 
ffffffff80003387:	48 c7 85 08 f8 ff ff 	movq   $0x0,-0x7f8(%rbp)
ffffffff8000338e:	00 00 00 00 
ffffffff80003392:	48 c7 85 10 f8 ff ff 	movq   $0x0,-0x7f0(%rbp)
ffffffff80003399:	00 00 00 00 
ffffffff8000339d:	48 c7 85 18 f8 ff ff 	movq   $0x0,-0x7e8(%rbp)
ffffffff800033a4:	00 00 00 00 
ffffffff800033a8:	48 c7 85 20 f8 ff ff 	movq   $0x0,-0x7e0(%rbp)
ffffffff800033af:	00 00 00 00 
ffffffff800033b3:	48 c7 85 28 f8 ff ff 	movq   $0x0,-0x7d8(%rbp)
ffffffff800033ba:	00 00 00 00 
ffffffff800033be:	48 c7 85 30 f8 ff ff 	movq   $0x0,-0x7d0(%rbp)
ffffffff800033c5:	00 00 00 00 
ffffffff800033c9:	48 c7 85 38 f8 ff ff 	movq   $0x0,-0x7c8(%rbp)
ffffffff800033d0:	00 00 00 00 
ffffffff800033d4:	48 c7 85 40 f8 ff ff 	movq   $0x0,-0x7c0(%rbp)
ffffffff800033db:	00 00 00 00 
ffffffff800033df:	48 c7 85 48 f8 ff ff 	movq   $0x0,-0x7b8(%rbp)
ffffffff800033e6:	00 00 00 00 
ffffffff800033ea:	48 c7 85 50 f8 ff ff 	movq   $0x0,-0x7b0(%rbp)
ffffffff800033f1:	00 00 00 00 
ffffffff800033f5:	48 c7 85 58 f8 ff ff 	movq   $0x0,-0x7a8(%rbp)
ffffffff800033fc:	00 00 00 00 
ffffffff80003400:	48 c7 85 60 f8 ff ff 	movq   $0x0,-0x7a0(%rbp)
ffffffff80003407:	00 00 00 00 
ffffffff8000340b:	48 c7 85 68 f8 ff ff 	movq   $0x0,-0x798(%rbp)
ffffffff80003412:	00 00 00 00 
ffffffff80003416:	48 c7 85 70 f8 ff ff 	movq   $0x0,-0x790(%rbp)
ffffffff8000341d:	00 00 00 00 
ffffffff80003421:	48 c7 85 78 f8 ff ff 	movq   $0x0,-0x788(%rbp)
ffffffff80003428:	00 00 00 00 
ffffffff8000342c:	48 c7 85 80 f8 ff ff 	movq   $0x0,-0x780(%rbp)
ffffffff80003433:	00 00 00 00 
ffffffff80003437:	48 c7 85 88 f8 ff ff 	movq   $0x0,-0x778(%rbp)
ffffffff8000343e:	00 00 00 00 
ffffffff80003442:	48 c7 85 90 f8 ff ff 	movq   $0x0,-0x770(%rbp)
ffffffff80003449:	00 00 00 00 
ffffffff8000344d:	48 c7 85 98 f8 ff ff 	movq   $0x0,-0x768(%rbp)
ffffffff80003454:	00 00 00 00 
ffffffff80003458:	48 c7 85 a0 f8 ff ff 	movq   $0x0,-0x760(%rbp)
ffffffff8000345f:	00 00 00 00 
ffffffff80003463:	48 c7 85 a8 f8 ff ff 	movq   $0x0,-0x758(%rbp)
ffffffff8000346a:	00 00 00 00 
ffffffff8000346e:	48 c7 85 b0 f8 ff ff 	movq   $0x0,-0x750(%rbp)
ffffffff80003475:	00 00 00 00 
ffffffff80003479:	48 c7 85 b8 f8 ff ff 	movq   $0x0,-0x748(%rbp)
ffffffff80003480:	00 00 00 00 
ffffffff80003484:	48 c7 85 c0 f8 ff ff 	movq   $0x0,-0x740(%rbp)
ffffffff8000348b:	00 00 00 00 
ffffffff8000348f:	48 c7 85 c8 f8 ff ff 	movq   $0x0,-0x738(%rbp)
ffffffff80003496:	00 00 00 00 
ffffffff8000349a:	48 c7 85 d0 f8 ff ff 	movq   $0x0,-0x730(%rbp)
ffffffff800034a1:	00 00 00 00 
ffffffff800034a5:	48 c7 85 d8 f8 ff ff 	movq   $0x0,-0x728(%rbp)
ffffffff800034ac:	00 00 00 00 
ffffffff800034b0:	48 c7 85 e0 f8 ff ff 	movq   $0x0,-0x720(%rbp)
ffffffff800034b7:	00 00 00 00 
ffffffff800034bb:	48 c7 85 e8 f8 ff ff 	movq   $0x0,-0x718(%rbp)
ffffffff800034c2:	00 00 00 00 
ffffffff800034c6:	48 c7 85 f0 f8 ff ff 	movq   $0x0,-0x710(%rbp)
ffffffff800034cd:	00 00 00 00 
ffffffff800034d1:	48 c7 85 f8 f8 ff ff 	movq   $0x0,-0x708(%rbp)
ffffffff800034d8:	00 00 00 00 
ffffffff800034dc:	48 8b 8d f8 f7 ff ff 	mov    -0x808(%rbp),%rcx
ffffffff800034e3:	48 8d 85 00 f8 ff ff 	lea    -0x800(%rbp),%rax
ffffffff800034ea:	ba 00 01 00 00       	mov    $0x100,%edx
ffffffff800034ef:	48 89 c6             	mov    %rax,%rsi
ffffffff800034f2:	48 89 cf             	mov    %rcx,%rdi
ffffffff800034f5:	e8 b6 06 00 00       	call   ffffffff80003bb0 <debug_format_symbol>
ffffffff800034fa:	80 7d ef 00          	cmpb   $0x0,-0x11(%rbp)
ffffffff800034fe:	74 07                	je     ffffffff80003507 <debug_disasm_at+0x248>
ffffffff80003500:	bb 3e 00 00 00       	mov    $0x3e,%ebx
ffffffff80003505:	eb 05                	jmp    ffffffff8000350c <debug_disasm_at+0x24d>
ffffffff80003507:	bb 20 00 00 00       	mov    $0x20,%ebx
ffffffff8000350c:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80003511:	e8 cb 37 00 00       	call   ffffffff80006ce1 <get_apic_id>
ffffffff80003516:	48 89 c6             	mov    %rax,%rsi
ffffffff80003519:	48 8d 95 00 f9 ff ff 	lea    -0x700(%rbp),%rdx
ffffffff80003520:	48 8d 85 00 f8 ff ff 	lea    -0x800(%rbp),%rax
ffffffff80003527:	49 89 d0             	mov    %rdx,%r8
ffffffff8000352a:	48 89 c1             	mov    %rax,%rcx
ffffffff8000352d:	89 da                	mov    %ebx,%edx
ffffffff8000352f:	48 8d 05 c9 4b 03 00 	lea    0x34bc9(%rip),%rax        # ffffffff800380ff <g_stivale2_header+0x10ff>
ffffffff80003536:	48 89 c7             	mov    %rax,%rdi
ffffffff80003539:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000353e:	e8 fd ff 00 00       	call   ffffffff80013540 <printf_>
ffffffff80003543:	c6 45 ef 00          	movb   $0x0,-0x11(%rbp)
ffffffff80003547:	0f b6 85 18 fc ff ff 	movzbl -0x3e8(%rbp),%eax
ffffffff8000354e:	0f b6 c0             	movzbl %al,%eax
ffffffff80003551:	48 01 85 f8 f7 ff ff 	add    %rax,-0x808(%rbp)
ffffffff80003558:	8b 85 f4 f7 ff ff    	mov    -0x80c(%rbp),%eax
ffffffff8000355e:	8d 50 ff             	lea    -0x1(%rax),%edx
ffffffff80003561:	89 95 f4 f7 ff ff    	mov    %edx,-0x80c(%rbp)
ffffffff80003567:	85 c0                	test   %eax,%eax
ffffffff80003569:	75 03                	jne    ffffffff8000356e <debug_disasm_at+0x2af>
ffffffff8000356b:	90                   	nop
ffffffff8000356c:	eb 46                	jmp    ffffffff800035b4 <debug_disasm_at+0x2f5>
ffffffff8000356e:	48 8d 8d 00 fa ff ff 	lea    -0x600(%rbp),%rcx
ffffffff80003575:	48 8d 95 10 fc ff ff 	lea    -0x3f0(%rbp),%rdx
ffffffff8000357c:	48 8b b5 f8 f7 ff ff 	mov    -0x808(%rbp),%rsi
ffffffff80003583:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
ffffffff80003587:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff8000358b:	6a 01                	push   $0x1
ffffffff8000358d:	41 b9 05 00 00 00    	mov    $0x5,%r9d
ffffffff80003593:	49 89 c8             	mov    %rcx,%r8
ffffffff80003596:	48 89 d1             	mov    %rdx,%rcx
ffffffff80003599:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
ffffffff800035a0:	48 89 c7             	mov    %rax,%rdi
ffffffff800035a3:	e8 1a a1 02 00       	call   ffffffff8002d6c2 <ZydisDecoderDecodeFull>
ffffffff800035a8:	48 83 c4 10          	add    $0x10,%rsp
ffffffff800035ac:	85 c0                	test   %eax,%eax
ffffffff800035ae:	0f 89 84 fd ff ff    	jns    ffffffff80003338 <debug_disasm_at+0x79>
ffffffff800035b4:	90                   	nop
ffffffff800035b5:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
ffffffff800035b9:	c9                   	leave  
ffffffff800035ba:	c3                   	ret    

ffffffff800035bb <insert_symbol>:
ffffffff800035bb:	f3 0f 1e fa          	endbr64 
ffffffff800035bf:	55                   	push   %rbp
ffffffff800035c0:	48 89 e5             	mov    %rsp,%rbp
ffffffff800035c3:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff800035c7:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
ffffffff800035ce:	e9 55 01 00 00       	jmp    ffffffff80003728 <insert_symbol+0x16d>
ffffffff800035d3:	48 8b 0d c6 ca 2a 00 	mov    0x2acac6(%rip),%rcx        # ffffffff802b00a0 <m_symbols>
ffffffff800035da:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff800035dd:	48 63 d0             	movslq %eax,%rdx
ffffffff800035e0:	48 89 d0             	mov    %rdx,%rax
ffffffff800035e3:	48 01 c0             	add    %rax,%rax
ffffffff800035e6:	48 01 d0             	add    %rdx,%rax
ffffffff800035e9:	48 c1 e0 03          	shl    $0x3,%rax
ffffffff800035ed:	48 01 c8             	add    %rcx,%rax
ffffffff800035f0:	48 8b 10             	mov    (%rax),%rdx
ffffffff800035f3:	48 8b 45 10          	mov    0x10(%rbp),%rax
ffffffff800035f7:	48 39 c2             	cmp    %rax,%rdx
ffffffff800035fa:	0f 86 24 01 00 00    	jbe    ffffffff80003724 <insert_symbol+0x169>
ffffffff80003600:	48 8b 05 99 ca 2a 00 	mov    0x2aca99(%rip),%rax        # ffffffff802b00a0 <m_symbols>
ffffffff80003607:	48 85 c0             	test   %rax,%rax
ffffffff8000360a:	74 26                	je     ffffffff80003632 <insert_symbol+0x77>
ffffffff8000360c:	48 8b 05 8d ca 2a 00 	mov    0x2aca8d(%rip),%rax        # ffffffff802b00a0 <m_symbols>
ffffffff80003613:	48 83 e8 20          	sub    $0x20,%rax
ffffffff80003617:	48 8b 00             	mov    (%rax),%rax
ffffffff8000361a:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffff8000361e:	48 8b 05 7b ca 2a 00 	mov    0x2aca7b(%rip),%rax        # ffffffff802b00a0 <m_symbols>
ffffffff80003625:	48 83 e8 20          	sub    $0x20,%rax
ffffffff80003629:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff8000362d:	48 39 c2             	cmp    %rax,%rdx
ffffffff80003630:	76 25                	jbe    ffffffff80003657 <insert_symbol+0x9c>
ffffffff80003632:	48 8b 05 67 ca 2a 00 	mov    0x2aca67(%rip),%rax        # ffffffff802b00a0 <m_symbols>
ffffffff80003639:	b9 00 00 00 00       	mov    $0x0,%ecx
ffffffff8000363e:	ba 01 00 00 00       	mov    $0x1,%edx
ffffffff80003643:	be 18 00 00 00       	mov    $0x18,%esi
ffffffff80003648:	48 89 c7             	mov    %rax,%rdi
ffffffff8000364b:	e8 18 b9 00 00       	call   ffffffff8000ef68 <stbds_arrgrowf>
ffffffff80003650:	48 89 05 49 ca 2a 00 	mov    %rax,0x2aca49(%rip)        # ffffffff802b00a0 <m_symbols>
ffffffff80003657:	48 8b 05 42 ca 2a 00 	mov    0x2aca42(%rip),%rax        # ffffffff802b00a0 <m_symbols>
ffffffff8000365e:	48 83 e8 20          	sub    $0x20,%rax
ffffffff80003662:	48 8b 10             	mov    (%rax),%rdx
ffffffff80003665:	48 8b 05 34 ca 2a 00 	mov    0x2aca34(%rip),%rax        # ffffffff802b00a0 <m_symbols>
ffffffff8000366c:	48 83 e8 20          	sub    $0x20,%rax
ffffffff80003670:	48 83 c2 01          	add    $0x1,%rdx
ffffffff80003674:	48 89 10             	mov    %rdx,(%rax)
ffffffff80003677:	48 8b 05 22 ca 2a 00 	mov    0x2aca22(%rip),%rax        # ffffffff802b00a0 <m_symbols>
ffffffff8000367e:	48 83 e8 20          	sub    $0x20,%rax
ffffffff80003682:	48 8b 00             	mov    (%rax),%rax
ffffffff80003685:	8b 55 fc             	mov    -0x4(%rbp),%edx
ffffffff80003688:	48 63 ca             	movslq %edx,%rcx
ffffffff8000368b:	48 29 c8             	sub    %rcx,%rax
ffffffff8000368e:	48 89 c2             	mov    %rax,%rdx
ffffffff80003691:	48 89 d0             	mov    %rdx,%rax
ffffffff80003694:	48 01 c0             	add    %rax,%rax
ffffffff80003697:	48 01 d0             	add    %rdx,%rax
ffffffff8000369a:	48 c1 e0 03          	shl    $0x3,%rax
ffffffff8000369e:	48 8d 50 e8          	lea    -0x18(%rax),%rdx
ffffffff800036a2:	48 8b 35 f7 c9 2a 00 	mov    0x2ac9f7(%rip),%rsi        # ffffffff802b00a0 <m_symbols>
ffffffff800036a9:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff800036ac:	48 63 c8             	movslq %eax,%rcx
ffffffff800036af:	48 89 c8             	mov    %rcx,%rax
ffffffff800036b2:	48 01 c0             	add    %rax,%rax
ffffffff800036b5:	48 01 c8             	add    %rcx,%rax
ffffffff800036b8:	48 c1 e0 03          	shl    $0x3,%rax
ffffffff800036bc:	48 8d 0c 06          	lea    (%rsi,%rax,1),%rcx
ffffffff800036c0:	48 8b 3d d9 c9 2a 00 	mov    0x2ac9d9(%rip),%rdi        # ffffffff802b00a0 <m_symbols>
ffffffff800036c7:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff800036ca:	48 98                	cltq   
ffffffff800036cc:	48 8d 70 01          	lea    0x1(%rax),%rsi
ffffffff800036d0:	48 89 f0             	mov    %rsi,%rax
ffffffff800036d3:	48 01 c0             	add    %rax,%rax
ffffffff800036d6:	48 01 f0             	add    %rsi,%rax
ffffffff800036d9:	48 c1 e0 03          	shl    $0x3,%rax
ffffffff800036dd:	48 01 f8             	add    %rdi,%rax
ffffffff800036e0:	48 89 ce             	mov    %rcx,%rsi
ffffffff800036e3:	48 89 c7             	mov    %rax,%rdi
ffffffff800036e6:	e8 8e b1 00 00       	call   ffffffff8000e879 <memmove>
ffffffff800036eb:	48 8b 0d ae c9 2a 00 	mov    0x2ac9ae(%rip),%rcx        # ffffffff802b00a0 <m_symbols>
ffffffff800036f2:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff800036f5:	48 63 d0             	movslq %eax,%rdx
ffffffff800036f8:	48 89 d0             	mov    %rdx,%rax
ffffffff800036fb:	48 01 c0             	add    %rax,%rax
ffffffff800036fe:	48 01 d0             	add    %rdx,%rax
ffffffff80003701:	48 c1 e0 03          	shl    $0x3,%rax
ffffffff80003705:	48 01 c1             	add    %rax,%rcx
ffffffff80003708:	48 8b 45 10          	mov    0x10(%rbp),%rax
ffffffff8000370c:	48 8b 55 18          	mov    0x18(%rbp),%rdx
ffffffff80003710:	48 89 01             	mov    %rax,(%rcx)
ffffffff80003713:	48 89 51 08          	mov    %rdx,0x8(%rcx)
ffffffff80003717:	48 8b 45 20          	mov    0x20(%rbp),%rax
ffffffff8000371b:	48 89 41 10          	mov    %rax,0x10(%rcx)
ffffffff8000371f:	e9 ce 00 00 00       	jmp    ffffffff800037f2 <insert_symbol+0x237>
ffffffff80003724:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
ffffffff80003728:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8000372b:	48 98                	cltq   
ffffffff8000372d:	48 8b 15 6c c9 2a 00 	mov    0x2ac96c(%rip),%rdx        # ffffffff802b00a0 <m_symbols>
ffffffff80003734:	48 85 d2             	test   %rdx,%rdx
ffffffff80003737:	74 10                	je     ffffffff80003749 <insert_symbol+0x18e>
ffffffff80003739:	48 8b 15 60 c9 2a 00 	mov    0x2ac960(%rip),%rdx        # ffffffff802b00a0 <m_symbols>
ffffffff80003740:	48 83 ea 20          	sub    $0x20,%rdx
ffffffff80003744:	48 8b 12             	mov    (%rdx),%rdx
ffffffff80003747:	eb 05                	jmp    ffffffff8000374e <insert_symbol+0x193>
ffffffff80003749:	ba 00 00 00 00       	mov    $0x0,%edx
ffffffff8000374e:	48 39 c2             	cmp    %rax,%rdx
ffffffff80003751:	0f 8f 7c fe ff ff    	jg     ffffffff800035d3 <insert_symbol+0x18>
ffffffff80003757:	48 8b 05 42 c9 2a 00 	mov    0x2ac942(%rip),%rax        # ffffffff802b00a0 <m_symbols>
ffffffff8000375e:	48 85 c0             	test   %rax,%rax
ffffffff80003761:	74 26                	je     ffffffff80003789 <insert_symbol+0x1ce>
ffffffff80003763:	48 8b 05 36 c9 2a 00 	mov    0x2ac936(%rip),%rax        # ffffffff802b00a0 <m_symbols>
ffffffff8000376a:	48 83 e8 20          	sub    $0x20,%rax
ffffffff8000376e:	48 8b 00             	mov    (%rax),%rax
ffffffff80003771:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffff80003775:	48 8b 05 24 c9 2a 00 	mov    0x2ac924(%rip),%rax        # ffffffff802b00a0 <m_symbols>
ffffffff8000377c:	48 83 e8 20          	sub    $0x20,%rax
ffffffff80003780:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff80003784:	48 39 c2             	cmp    %rax,%rdx
ffffffff80003787:	76 25                	jbe    ffffffff800037ae <insert_symbol+0x1f3>
ffffffff80003789:	48 8b 05 10 c9 2a 00 	mov    0x2ac910(%rip),%rax        # ffffffff802b00a0 <m_symbols>
ffffffff80003790:	b9 00 00 00 00       	mov    $0x0,%ecx
ffffffff80003795:	ba 01 00 00 00       	mov    $0x1,%edx
ffffffff8000379a:	be 18 00 00 00       	mov    $0x18,%esi
ffffffff8000379f:	48 89 c7             	mov    %rax,%rdi
ffffffff800037a2:	e8 c1 b7 00 00       	call   ffffffff8000ef68 <stbds_arrgrowf>
ffffffff800037a7:	48 89 05 f2 c8 2a 00 	mov    %rax,0x2ac8f2(%rip)        # ffffffff802b00a0 <m_symbols>
ffffffff800037ae:	48 8b 35 eb c8 2a 00 	mov    0x2ac8eb(%rip),%rsi        # ffffffff802b00a0 <m_symbols>
ffffffff800037b5:	48 8b 05 e4 c8 2a 00 	mov    0x2ac8e4(%rip),%rax        # ffffffff802b00a0 <m_symbols>
ffffffff800037bc:	48 83 e8 20          	sub    $0x20,%rax
ffffffff800037c0:	48 8b 10             	mov    (%rax),%rdx
ffffffff800037c3:	48 8d 4a 01          	lea    0x1(%rdx),%rcx
ffffffff800037c7:	48 89 08             	mov    %rcx,(%rax)
ffffffff800037ca:	48 89 d0             	mov    %rdx,%rax
ffffffff800037cd:	48 01 c0             	add    %rax,%rax
ffffffff800037d0:	48 01 d0             	add    %rdx,%rax
ffffffff800037d3:	48 c1 e0 03          	shl    $0x3,%rax
ffffffff800037d7:	48 8d 0c 06          	lea    (%rsi,%rax,1),%rcx
ffffffff800037db:	48 8b 45 10          	mov    0x10(%rbp),%rax
ffffffff800037df:	48 8b 55 18          	mov    0x18(%rbp),%rdx
ffffffff800037e3:	48 89 01             	mov    %rax,(%rcx)
ffffffff800037e6:	48 89 51 08          	mov    %rdx,0x8(%rcx)
ffffffff800037ea:	48 8b 45 20          	mov    0x20(%rbp),%rax
ffffffff800037ee:	48 89 41 10          	mov    %rax,0x10(%rcx)
ffffffff800037f2:	c9                   	leave  
ffffffff800037f3:	c3                   	ret    

ffffffff800037f4 <strdup>:
ffffffff800037f4:	f3 0f 1e fa          	endbr64 
ffffffff800037f8:	55                   	push   %rbp
ffffffff800037f9:	48 89 e5             	mov    %rsp,%rbp
ffffffff800037fc:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff80003800:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff80003804:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80003808:	48 89 c7             	mov    %rax,%rdi
ffffffff8000380b:	e8 20 b2 00 00       	call   ffffffff8000ea30 <strlen>
ffffffff80003810:	89 45 fc             	mov    %eax,-0x4(%rbp)
ffffffff80003813:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff80003816:	83 c0 01             	add    $0x1,%eax
ffffffff80003819:	48 98                	cltq   
ffffffff8000381b:	48 89 c7             	mov    %rax,%rdi
ffffffff8000381e:	e8 19 80 00 00       	call   ffffffff8000b83c <malloc>
ffffffff80003823:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff80003827:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff8000382b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8000382f:	48 89 d6             	mov    %rdx,%rsi
ffffffff80003832:	48 89 c7             	mov    %rax,%rdi
ffffffff80003835:	e8 2e b2 00 00       	call   ffffffff8000ea68 <strcpy>
ffffffff8000383a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8000383e:	c9                   	leave  
ffffffff8000383f:	c3                   	ret    

ffffffff80003840 <debug_load_symbols>:
ffffffff80003840:	f3 0f 1e fa          	endbr64 
ffffffff80003844:	55                   	push   %rbp
ffffffff80003845:	48 89 e5             	mov    %rsp,%rbp
ffffffff80003848:	53                   	push   %rbx
ffffffff80003849:	48 83 ec 68          	sub    $0x68,%rsp
ffffffff8000384d:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
ffffffff80003851:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff80003855:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
ffffffff80003859:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
ffffffff80003860:	00 
ffffffff80003861:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80003865:	48 8b 40 28          	mov    0x28(%rax),%rax
ffffffff80003869:	48 85 c0             	test   %rax,%rax
ffffffff8000386c:	75 26                	jne    ffffffff80003894 <debug_load_symbols+0x54>
ffffffff8000386e:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80003873:	e8 69 34 00 00       	call   ffffffff80006ce1 <get_apic_id>
ffffffff80003878:	48 89 c6             	mov    %rax,%rsi
ffffffff8000387b:	48 8d 05 3e 92 03 00 	lea    0x3923e(%rip),%rax        # ffffffff8003cac0 <g_stivale2_header+0x5ac0>
ffffffff80003882:	48 89 c7             	mov    %rax,%rdi
ffffffff80003885:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000388a:	e8 b1 fc 00 00       	call   ffffffff80013540 <printf_>
ffffffff8000388f:	e9 e1 01 00 00       	jmp    ffffffff80003a75 <debug_load_symbols+0x235>
ffffffff80003894:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80003898:	48 8b 50 28          	mov    0x28(%rax),%rdx
ffffffff8000389c:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff800038a0:	48 01 d0             	add    %rdx,%rax
ffffffff800038a3:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
ffffffff800038a7:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
ffffffff800038ae:	eb 38                	jmp    ffffffff800038e8 <debug_load_symbols+0xa8>
ffffffff800038b0:	8b 45 e4             	mov    -0x1c(%rbp),%eax
ffffffff800038b3:	48 98                	cltq   
ffffffff800038b5:	48 c1 e0 06          	shl    $0x6,%rax
ffffffff800038b9:	48 89 c2             	mov    %rax,%rdx
ffffffff800038bc:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff800038c0:	48 01 d0             	add    %rdx,%rax
ffffffff800038c3:	8b 40 04             	mov    0x4(%rax),%eax
ffffffff800038c6:	83 f8 02             	cmp    $0x2,%eax
ffffffff800038c9:	75 19                	jne    ffffffff800038e4 <debug_load_symbols+0xa4>
ffffffff800038cb:	8b 45 e4             	mov    -0x1c(%rbp),%eax
ffffffff800038ce:	48 98                	cltq   
ffffffff800038d0:	48 c1 e0 06          	shl    $0x6,%rax
ffffffff800038d4:	48 89 c2             	mov    %rax,%rdx
ffffffff800038d7:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff800038db:	48 01 d0             	add    %rdx,%rax
ffffffff800038de:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff800038e2:	eb 14                	jmp    ffffffff800038f8 <debug_load_symbols+0xb8>
ffffffff800038e4:	83 45 e4 01          	addl   $0x1,-0x1c(%rbp)
ffffffff800038e8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff800038ec:	0f b7 40 3c          	movzwl 0x3c(%rax),%eax
ffffffff800038f0:	0f b7 c0             	movzwl %ax,%eax
ffffffff800038f3:	39 45 e4             	cmp    %eax,-0x1c(%rbp)
ffffffff800038f6:	7c b8                	jl     ffffffff800038b0 <debug_load_symbols+0x70>
ffffffff800038f8:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
ffffffff800038fd:	75 26                	jne    ffffffff80003925 <debug_load_symbols+0xe5>
ffffffff800038ff:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80003904:	e8 d8 33 00 00       	call   ffffffff80006ce1 <get_apic_id>
ffffffff80003909:	48 89 c6             	mov    %rax,%rsi
ffffffff8000390c:	48 8d 05 e5 91 03 00 	lea    0x391e5(%rip),%rax        # ffffffff8003caf8 <g_stivale2_header+0x5af8>
ffffffff80003913:	48 89 c7             	mov    %rax,%rdi
ffffffff80003916:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000391b:	e8 20 fc 00 00       	call   ffffffff80013540 <printf_>
ffffffff80003920:	e9 50 01 00 00       	jmp    ffffffff80003a75 <debug_load_symbols+0x235>
ffffffff80003925:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80003929:	8b 40 28             	mov    0x28(%rax),%eax
ffffffff8000392c:	89 c0                	mov    %eax,%eax
ffffffff8000392e:	48 c1 e0 06          	shl    $0x6,%rax
ffffffff80003932:	48 89 c2             	mov    %rax,%rdx
ffffffff80003935:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff80003939:	48 01 d0             	add    %rdx,%rax
ffffffff8000393c:	48 8b 50 18          	mov    0x18(%rax),%rdx
ffffffff80003940:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff80003944:	48 01 d0             	add    %rdx,%rax
ffffffff80003947:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
ffffffff8000394b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000394f:	48 8b 50 18          	mov    0x18(%rax),%rdx
ffffffff80003953:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff80003957:	48 01 d0             	add    %rdx,%rax
ffffffff8000395a:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
ffffffff8000395e:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%rbp)
ffffffff80003965:	e9 98 00 00 00       	jmp    ffffffff80003a02 <debug_load_symbols+0x1c2>
ffffffff8000396a:	8b 45 e0             	mov    -0x20(%rbp),%eax
ffffffff8000396d:	48 63 d0             	movslq %eax,%rdx
ffffffff80003970:	48 89 d0             	mov    %rdx,%rax
ffffffff80003973:	48 01 c0             	add    %rax,%rax
ffffffff80003976:	48 01 d0             	add    %rdx,%rax
ffffffff80003979:	48 c1 e0 03          	shl    $0x3,%rax
ffffffff8000397d:	48 89 c2             	mov    %rax,%rdx
ffffffff80003980:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff80003984:	48 01 d0             	add    %rdx,%rax
ffffffff80003987:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff8000398b:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
ffffffff8000398f:	8b 45 e0             	mov    -0x20(%rbp),%eax
ffffffff80003992:	48 63 d0             	movslq %eax,%rdx
ffffffff80003995:	48 89 d0             	mov    %rdx,%rax
ffffffff80003998:	48 01 c0             	add    %rax,%rax
ffffffff8000399b:	48 01 d0             	add    %rdx,%rax
ffffffff8000399e:	48 c1 e0 03          	shl    $0x3,%rax
ffffffff800039a2:	48 89 c2             	mov    %rax,%rdx
ffffffff800039a5:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff800039a9:	48 01 d0             	add    %rdx,%rax
ffffffff800039ac:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff800039b0:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
ffffffff800039b4:	8b 45 e0             	mov    -0x20(%rbp),%eax
ffffffff800039b7:	48 63 d0             	movslq %eax,%rdx
ffffffff800039ba:	48 89 d0             	mov    %rdx,%rax
ffffffff800039bd:	48 01 c0             	add    %rax,%rax
ffffffff800039c0:	48 01 d0             	add    %rdx,%rax
ffffffff800039c3:	48 c1 e0 03          	shl    $0x3,%rax
ffffffff800039c7:	48 89 c2             	mov    %rax,%rdx
ffffffff800039ca:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff800039ce:	48 01 d0             	add    %rdx,%rax
ffffffff800039d1:	8b 00                	mov    (%rax),%eax
ffffffff800039d3:	89 c2                	mov    %eax,%edx
ffffffff800039d5:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff800039d9:	48 01 d0             	add    %rdx,%rax
ffffffff800039dc:	48 89 c7             	mov    %rax,%rdi
ffffffff800039df:	e8 10 fe ff ff       	call   ffffffff800037f4 <strdup>
ffffffff800039e4:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
ffffffff800039e8:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff800039ec:	ff 75 b0             	push   -0x50(%rbp)
ffffffff800039ef:	ff 75 a8             	push   -0x58(%rbp)
ffffffff800039f2:	ff 75 a0             	push   -0x60(%rbp)
ffffffff800039f5:	e8 c1 fb ff ff       	call   ffffffff800035bb <insert_symbol>
ffffffff800039fa:	48 83 c4 20          	add    $0x20,%rsp
ffffffff800039fe:	83 45 e0 01          	addl   $0x1,-0x20(%rbp)
ffffffff80003a02:	8b 45 e0             	mov    -0x20(%rbp),%eax
ffffffff80003a05:	48 63 c8             	movslq %eax,%rcx
ffffffff80003a08:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80003a0c:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff80003a10:	48 ba ab aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaab,%rdx
ffffffff80003a17:	aa aa aa 
ffffffff80003a1a:	48 f7 e2             	mul    %rdx
ffffffff80003a1d:	48 89 d0             	mov    %rdx,%rax
ffffffff80003a20:	48 c1 e8 04          	shr    $0x4,%rax
ffffffff80003a24:	48 39 c1             	cmp    %rax,%rcx
ffffffff80003a27:	0f 82 3d ff ff ff    	jb     ffffffff8000396a <debug_load_symbols+0x12a>
ffffffff80003a2d:	48 8b 05 6c c6 2a 00 	mov    0x2ac66c(%rip),%rax        # ffffffff802b00a0 <m_symbols>
ffffffff80003a34:	48 85 c0             	test   %rax,%rax
ffffffff80003a37:	74 13                	je     ffffffff80003a4c <debug_load_symbols+0x20c>
ffffffff80003a39:	48 8b 05 60 c6 2a 00 	mov    0x2ac660(%rip),%rax        # ffffffff802b00a0 <m_symbols>
ffffffff80003a40:	48 83 e8 20          	sub    $0x20,%rax
ffffffff80003a44:	48 8b 00             	mov    (%rax),%rax
ffffffff80003a47:	48 89 c3             	mov    %rax,%rbx
ffffffff80003a4a:	eb 05                	jmp    ffffffff80003a51 <debug_load_symbols+0x211>
ffffffff80003a4c:	bb 00 00 00 00       	mov    $0x0,%ebx
ffffffff80003a51:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80003a56:	e8 86 32 00 00       	call   ffffffff80006ce1 <get_apic_id>
ffffffff80003a5b:	48 89 da             	mov    %rbx,%rdx
ffffffff80003a5e:	48 89 c6             	mov    %rax,%rsi
ffffffff80003a61:	48 8d 05 c8 90 03 00 	lea    0x390c8(%rip),%rax        # ffffffff8003cb30 <g_stivale2_header+0x5b30>
ffffffff80003a68:	48 89 c7             	mov    %rax,%rdi
ffffffff80003a6b:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80003a70:	e8 cb fa 00 00       	call   ffffffff80013540 <printf_>
ffffffff80003a75:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
ffffffff80003a79:	c9                   	leave  
ffffffff80003a7a:	c3                   	ret    

ffffffff80003a7b <debug_lookup_symbol>:
ffffffff80003a7b:	f3 0f 1e fa          	endbr64 
ffffffff80003a7f:	55                   	push   %rbp
ffffffff80003a80:	48 89 e5             	mov    %rsp,%rbp
ffffffff80003a83:	48 83 ec 18          	sub    $0x18,%rsp
ffffffff80003a87:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff80003a8b:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
ffffffff80003a92:	48 8b 05 07 c6 2a 00 	mov    0x2ac607(%rip),%rax        # ffffffff802b00a0 <m_symbols>
ffffffff80003a99:	48 85 c0             	test   %rax,%rax
ffffffff80003a9c:	74 10                	je     ffffffff80003aae <debug_lookup_symbol+0x33>
ffffffff80003a9e:	48 8b 05 fb c5 2a 00 	mov    0x2ac5fb(%rip),%rax        # ffffffff802b00a0 <m_symbols>
ffffffff80003aa5:	48 83 e8 20          	sub    $0x20,%rax
ffffffff80003aa9:	48 8b 00             	mov    (%rax),%rax
ffffffff80003aac:	eb 05                	jmp    ffffffff80003ab3 <debug_lookup_symbol+0x38>
ffffffff80003aae:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80003ab3:	89 45 f8             	mov    %eax,-0x8(%rbp)
ffffffff80003ab6:	e9 e2 00 00 00       	jmp    ffffffff80003b9d <debug_lookup_symbol+0x122>
ffffffff80003abb:	8b 45 f8             	mov    -0x8(%rbp),%eax
ffffffff80003abe:	2b 45 fc             	sub    -0x4(%rbp),%eax
ffffffff80003ac1:	89 c2                	mov    %eax,%edx
ffffffff80003ac3:	c1 ea 1f             	shr    $0x1f,%edx
ffffffff80003ac6:	01 d0                	add    %edx,%eax
ffffffff80003ac8:	d1 f8                	sar    %eax
ffffffff80003aca:	89 c2                	mov    %eax,%edx
ffffffff80003acc:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff80003acf:	01 d0                	add    %edx,%eax
ffffffff80003ad1:	89 45 f4             	mov    %eax,-0xc(%rbp)
ffffffff80003ad4:	48 8b 0d c5 c5 2a 00 	mov    0x2ac5c5(%rip),%rcx        # ffffffff802b00a0 <m_symbols>
ffffffff80003adb:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff80003ade:	48 63 d0             	movslq %eax,%rdx
ffffffff80003ae1:	48 89 d0             	mov    %rdx,%rax
ffffffff80003ae4:	48 01 c0             	add    %rax,%rax
ffffffff80003ae7:	48 01 d0             	add    %rdx,%rax
ffffffff80003aea:	48 c1 e0 03          	shl    $0x3,%rax
ffffffff80003aee:	48 01 c8             	add    %rcx,%rax
ffffffff80003af1:	48 8b 00             	mov    (%rax),%rax
ffffffff80003af4:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
ffffffff80003af8:	72 69                	jb     ffffffff80003b63 <debug_lookup_symbol+0xe8>
ffffffff80003afa:	48 8b 0d 9f c5 2a 00 	mov    0x2ac59f(%rip),%rcx        # ffffffff802b00a0 <m_symbols>
ffffffff80003b01:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff80003b04:	48 63 d0             	movslq %eax,%rdx
ffffffff80003b07:	48 89 d0             	mov    %rdx,%rax
ffffffff80003b0a:	48 01 c0             	add    %rax,%rax
ffffffff80003b0d:	48 01 d0             	add    %rdx,%rax
ffffffff80003b10:	48 c1 e0 03          	shl    $0x3,%rax
ffffffff80003b14:	48 01 c8             	add    %rcx,%rax
ffffffff80003b17:	48 8b 08             	mov    (%rax),%rcx
ffffffff80003b1a:	48 8b 35 7f c5 2a 00 	mov    0x2ac57f(%rip),%rsi        # ffffffff802b00a0 <m_symbols>
ffffffff80003b21:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff80003b24:	48 63 d0             	movslq %eax,%rdx
ffffffff80003b27:	48 89 d0             	mov    %rdx,%rax
ffffffff80003b2a:	48 01 c0             	add    %rax,%rax
ffffffff80003b2d:	48 01 d0             	add    %rdx,%rax
ffffffff80003b30:	48 c1 e0 03          	shl    $0x3,%rax
ffffffff80003b34:	48 01 f0             	add    %rsi,%rax
ffffffff80003b37:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff80003b3b:	48 01 c8             	add    %rcx,%rax
ffffffff80003b3e:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
ffffffff80003b42:	73 1f                	jae    ffffffff80003b63 <debug_lookup_symbol+0xe8>
ffffffff80003b44:	48 8b 0d 55 c5 2a 00 	mov    0x2ac555(%rip),%rcx        # ffffffff802b00a0 <m_symbols>
ffffffff80003b4b:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff80003b4e:	48 63 d0             	movslq %eax,%rdx
ffffffff80003b51:	48 89 d0             	mov    %rdx,%rax
ffffffff80003b54:	48 01 c0             	add    %rax,%rax
ffffffff80003b57:	48 01 d0             	add    %rdx,%rax
ffffffff80003b5a:	48 c1 e0 03          	shl    $0x3,%rax
ffffffff80003b5e:	48 01 c8             	add    %rcx,%rax
ffffffff80003b61:	eb 4b                	jmp    ffffffff80003bae <debug_lookup_symbol+0x133>
ffffffff80003b63:	48 8b 0d 36 c5 2a 00 	mov    0x2ac536(%rip),%rcx        # ffffffff802b00a0 <m_symbols>
ffffffff80003b6a:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff80003b6d:	48 63 d0             	movslq %eax,%rdx
ffffffff80003b70:	48 89 d0             	mov    %rdx,%rax
ffffffff80003b73:	48 01 c0             	add    %rax,%rax
ffffffff80003b76:	48 01 d0             	add    %rdx,%rax
ffffffff80003b79:	48 c1 e0 03          	shl    $0x3,%rax
ffffffff80003b7d:	48 01 c8             	add    %rcx,%rax
ffffffff80003b80:	48 8b 00             	mov    (%rax),%rax
ffffffff80003b83:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
ffffffff80003b87:	76 0b                	jbe    ffffffff80003b94 <debug_lookup_symbol+0x119>
ffffffff80003b89:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff80003b8c:	83 c0 01             	add    $0x1,%eax
ffffffff80003b8f:	89 45 fc             	mov    %eax,-0x4(%rbp)
ffffffff80003b92:	eb 09                	jmp    ffffffff80003b9d <debug_lookup_symbol+0x122>
ffffffff80003b94:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff80003b97:	83 e8 01             	sub    $0x1,%eax
ffffffff80003b9a:	89 45 f8             	mov    %eax,-0x8(%rbp)
ffffffff80003b9d:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff80003ba0:	3b 45 f8             	cmp    -0x8(%rbp),%eax
ffffffff80003ba3:	0f 8e 12 ff ff ff    	jle    ffffffff80003abb <debug_lookup_symbol+0x40>
ffffffff80003ba9:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80003bae:	c9                   	leave  
ffffffff80003baf:	c3                   	ret    

ffffffff80003bb0 <debug_format_symbol>:
ffffffff80003bb0:	f3 0f 1e fa          	endbr64 
ffffffff80003bb4:	55                   	push   %rbp
ffffffff80003bb5:	48 89 e5             	mov    %rsp,%rbp
ffffffff80003bb8:	48 83 ec 30          	sub    $0x30,%rsp
ffffffff80003bbc:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff80003bc0:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
ffffffff80003bc4:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
ffffffff80003bc8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80003bcc:	48 89 c7             	mov    %rax,%rdi
ffffffff80003bcf:	e8 a7 fe ff ff       	call   ffffffff80003a7b <debug_lookup_symbol>
ffffffff80003bd4:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff80003bd8:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff80003bdd:	75 25                	jne    ffffffff80003c04 <debug_format_symbol+0x54>
ffffffff80003bdf:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff80003be3:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
ffffffff80003be7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80003beb:	48 89 d1             	mov    %rdx,%rcx
ffffffff80003bee:	48 8d 15 24 45 03 00 	lea    0x34524(%rip),%rdx        # ffffffff80038119 <g_stivale2_header+0x1119>
ffffffff80003bf5:	48 89 c7             	mov    %rax,%rdi
ffffffff80003bf8:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80003bfd:	e8 f6 fa 00 00       	call   ffffffff800136f8 <snprintf_>
ffffffff80003c02:	eb 3b                	jmp    ffffffff80003c3f <debug_format_symbol+0x8f>
ffffffff80003c04:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80003c08:	48 8b 10             	mov    (%rax),%rdx
ffffffff80003c0b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80003c0f:	48 29 d0             	sub    %rdx,%rax
ffffffff80003c12:	48 89 c1             	mov    %rax,%rcx
ffffffff80003c15:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80003c19:	48 8b 50 10          	mov    0x10(%rax),%rdx
ffffffff80003c1d:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
ffffffff80003c21:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80003c25:	49 89 c8             	mov    %rcx,%r8
ffffffff80003c28:	48 89 d1             	mov    %rdx,%rcx
ffffffff80003c2b:	48 8d 15 ed 44 03 00 	lea    0x344ed(%rip),%rdx        # ffffffff8003811f <g_stivale2_header+0x111f>
ffffffff80003c32:	48 89 c7             	mov    %rax,%rdi
ffffffff80003c35:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80003c3a:	e8 b9 fa 00 00       	call   ffffffff800136f8 <snprintf_>
ffffffff80003c3f:	90                   	nop
ffffffff80003c40:	c9                   	leave  
ffffffff80003c41:	c3                   	ret    

ffffffff80003c42 <__lgdt>:
ffffffff80003c42:	f3 0f 1e fa          	endbr64 
ffffffff80003c46:	55                   	push   %rbp
ffffffff80003c47:	48 89 e5             	mov    %rsp,%rbp
ffffffff80003c4a:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80003c4e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff80003c52:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80003c56:	0f 01 10             	lgdt   (%rax)
ffffffff80003c59:	90                   	nop
ffffffff80003c5a:	c9                   	leave  
ffffffff80003c5b:	c3                   	ret    

ffffffff80003c5c <init_gdt>:
ffffffff80003c5c:	f3 0f 1e fa          	endbr64 
ffffffff80003c60:	55                   	push   %rbp
ffffffff80003c61:	48 89 e5             	mov    %rsp,%rbp
ffffffff80003c64:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff80003c68:	66 c7 45 f6 17 00    	movw   $0x17,-0xa(%rbp)
ffffffff80003c6e:	48 8d 05 bb 33 0a 00 	lea    0xa33bb(%rip),%rax        # ffffffff800a7030 <m_gdt_entries>
ffffffff80003c75:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff80003c79:	48 8d 45 f6          	lea    -0xa(%rbp),%rax
ffffffff80003c7d:	48 89 c7             	mov    %rax,%rdi
ffffffff80003c80:	e8 bd ff ff ff       	call   ffffffff80003c42 <__lgdt>
ffffffff80003c85:	48 89 e0             	mov    %rsp,%rax
ffffffff80003c88:	6a 10                	push   $0x10
ffffffff80003c8a:	50                   	push   %rax
ffffffff80003c8b:	9c                   	pushf  
ffffffff80003c8c:	6a 08                	push   $0x8
ffffffff80003c8e:	68 95 3c 00 80       	push   $0xffffffff80003c95
ffffffff80003c93:	48 cf                	iretq  
ffffffff80003c95:	66 b8 10 00          	mov    $0x10,%ax
ffffffff80003c99:	8e d0                	mov    %eax,%ss
ffffffff80003c9b:	8e d8                	mov    %eax,%ds
ffffffff80003c9d:	8e c0                	mov    %eax,%es
ffffffff80003c9f:	8e e0                	mov    %eax,%fs
ffffffff80003ca1:	8e e8                	mov    %eax,%gs
ffffffff80003ca3:	90                   	nop
ffffffff80003ca4:	c9                   	leave  
ffffffff80003ca5:	c3                   	ret    

ffffffff80003ca6 <common_exception_stub>:
ffffffff80003ca6:	fc                   	cld    
ffffffff80003ca7:	50                   	push   %rax
ffffffff80003ca8:	53                   	push   %rbx
ffffffff80003ca9:	51                   	push   %rcx
ffffffff80003caa:	52                   	push   %rdx
ffffffff80003cab:	56                   	push   %rsi
ffffffff80003cac:	57                   	push   %rdi
ffffffff80003cad:	55                   	push   %rbp
ffffffff80003cae:	41 50                	push   %r8
ffffffff80003cb0:	41 51                	push   %r9
ffffffff80003cb2:	41 52                	push   %r10
ffffffff80003cb4:	41 53                	push   %r11
ffffffff80003cb6:	41 54                	push   %r12
ffffffff80003cb8:	41 55                	push   %r13
ffffffff80003cba:	41 56                	push   %r14
ffffffff80003cbc:	41 57                	push   %r15
ffffffff80003cbe:	48 89 e7             	mov    %rsp,%rdi
ffffffff80003cc1:	e8 fe 06 00 00       	call   ffffffff800043c4 <common_exception_handler>
ffffffff80003cc6:	41 5f                	pop    %r15
ffffffff80003cc8:	41 5e                	pop    %r14
ffffffff80003cca:	41 5d                	pop    %r13
ffffffff80003ccc:	41 5c                	pop    %r12
ffffffff80003cce:	41 5b                	pop    %r11
ffffffff80003cd0:	41 5a                	pop    %r10
ffffffff80003cd2:	41 59                	pop    %r9
ffffffff80003cd4:	41 58                	pop    %r8
ffffffff80003cd6:	5d                   	pop    %rbp
ffffffff80003cd7:	5f                   	pop    %rdi
ffffffff80003cd8:	5e                   	pop    %rsi
ffffffff80003cd9:	5a                   	pop    %rdx
ffffffff80003cda:	59                   	pop    %rcx
ffffffff80003cdb:	5b                   	pop    %rbx
ffffffff80003cdc:	58                   	pop    %rax
ffffffff80003cdd:	48 83 c4 10          	add    $0x10,%rsp
ffffffff80003ce1:	48 cf                	iretq  

ffffffff80003ce3 <interrupt_handle_0x00>:
ffffffff80003ce3:	f3 0f 1e fa          	endbr64 
ffffffff80003ce7:	6a 00                	push   $0x0
ffffffff80003ce9:	6a 00                	push   $0x0
ffffffff80003ceb:	eb b9                	jmp    ffffffff80003ca6 <common_exception_stub>
ffffffff80003ced:	0f 0b                	ud2    

ffffffff80003cef <interrupt_handle_0x01>:
ffffffff80003cef:	f3 0f 1e fa          	endbr64 
ffffffff80003cf3:	6a 00                	push   $0x0
ffffffff80003cf5:	6a 01                	push   $0x1
ffffffff80003cf7:	eb ad                	jmp    ffffffff80003ca6 <common_exception_stub>
ffffffff80003cf9:	0f 0b                	ud2    

ffffffff80003cfb <interrupt_handle_0x02>:
ffffffff80003cfb:	f3 0f 1e fa          	endbr64 
ffffffff80003cff:	6a 00                	push   $0x0
ffffffff80003d01:	6a 02                	push   $0x2
ffffffff80003d03:	eb a1                	jmp    ffffffff80003ca6 <common_exception_stub>
ffffffff80003d05:	0f 0b                	ud2    

ffffffff80003d07 <interrupt_handle_0x03>:
ffffffff80003d07:	f3 0f 1e fa          	endbr64 
ffffffff80003d0b:	6a 00                	push   $0x0
ffffffff80003d0d:	6a 03                	push   $0x3
ffffffff80003d0f:	eb 95                	jmp    ffffffff80003ca6 <common_exception_stub>
ffffffff80003d11:	0f 0b                	ud2    

ffffffff80003d13 <interrupt_handle_0x04>:
ffffffff80003d13:	f3 0f 1e fa          	endbr64 
ffffffff80003d17:	6a 00                	push   $0x0
ffffffff80003d19:	6a 04                	push   $0x4
ffffffff80003d1b:	eb 89                	jmp    ffffffff80003ca6 <common_exception_stub>
ffffffff80003d1d:	0f 0b                	ud2    

ffffffff80003d1f <interrupt_handle_0x05>:
ffffffff80003d1f:	f3 0f 1e fa          	endbr64 
ffffffff80003d23:	6a 00                	push   $0x0
ffffffff80003d25:	6a 05                	push   $0x5
ffffffff80003d27:	e9 7a ff ff ff       	jmp    ffffffff80003ca6 <common_exception_stub>
ffffffff80003d2c:	0f 0b                	ud2    

ffffffff80003d2e <interrupt_handle_0x06>:
ffffffff80003d2e:	f3 0f 1e fa          	endbr64 
ffffffff80003d32:	6a 00                	push   $0x0
ffffffff80003d34:	6a 06                	push   $0x6
ffffffff80003d36:	e9 6b ff ff ff       	jmp    ffffffff80003ca6 <common_exception_stub>
ffffffff80003d3b:	0f 0b                	ud2    

ffffffff80003d3d <interrupt_handle_0x07>:
ffffffff80003d3d:	f3 0f 1e fa          	endbr64 
ffffffff80003d41:	6a 00                	push   $0x0
ffffffff80003d43:	6a 07                	push   $0x7
ffffffff80003d45:	e9 5c ff ff ff       	jmp    ffffffff80003ca6 <common_exception_stub>
ffffffff80003d4a:	0f 0b                	ud2    

ffffffff80003d4c <interrupt_handle_0x08>:
ffffffff80003d4c:	f3 0f 1e fa          	endbr64 
ffffffff80003d50:	6a 08                	push   $0x8
ffffffff80003d52:	e9 4f ff ff ff       	jmp    ffffffff80003ca6 <common_exception_stub>
ffffffff80003d57:	0f 0b                	ud2    

ffffffff80003d59 <interrupt_handle_0x09>:
ffffffff80003d59:	f3 0f 1e fa          	endbr64 
ffffffff80003d5d:	6a 00                	push   $0x0
ffffffff80003d5f:	6a 09                	push   $0x9
ffffffff80003d61:	e9 40 ff ff ff       	jmp    ffffffff80003ca6 <common_exception_stub>
ffffffff80003d66:	0f 0b                	ud2    

ffffffff80003d68 <interrupt_handle_0x0a>:
ffffffff80003d68:	f3 0f 1e fa          	endbr64 
ffffffff80003d6c:	6a 0a                	push   $0xa
ffffffff80003d6e:	e9 33 ff ff ff       	jmp    ffffffff80003ca6 <common_exception_stub>
ffffffff80003d73:	0f 0b                	ud2    

ffffffff80003d75 <interrupt_handle_0x0b>:
ffffffff80003d75:	f3 0f 1e fa          	endbr64 
ffffffff80003d79:	6a 0b                	push   $0xb
ffffffff80003d7b:	e9 26 ff ff ff       	jmp    ffffffff80003ca6 <common_exception_stub>
ffffffff80003d80:	0f 0b                	ud2    

ffffffff80003d82 <interrupt_handle_0x0c>:
ffffffff80003d82:	f3 0f 1e fa          	endbr64 
ffffffff80003d86:	6a 0c                	push   $0xc
ffffffff80003d88:	e9 19 ff ff ff       	jmp    ffffffff80003ca6 <common_exception_stub>
ffffffff80003d8d:	0f 0b                	ud2    

ffffffff80003d8f <interrupt_handle_0x0d>:
ffffffff80003d8f:	f3 0f 1e fa          	endbr64 
ffffffff80003d93:	6a 0d                	push   $0xd
ffffffff80003d95:	e9 0c ff ff ff       	jmp    ffffffff80003ca6 <common_exception_stub>
ffffffff80003d9a:	0f 0b                	ud2    

ffffffff80003d9c <interrupt_handle_0x0e>:
ffffffff80003d9c:	f3 0f 1e fa          	endbr64 
ffffffff80003da0:	6a 0e                	push   $0xe
ffffffff80003da2:	e9 ff fe ff ff       	jmp    ffffffff80003ca6 <common_exception_stub>
ffffffff80003da7:	0f 0b                	ud2    

ffffffff80003da9 <interrupt_handle_0x0f>:
ffffffff80003da9:	f3 0f 1e fa          	endbr64 
ffffffff80003dad:	6a 00                	push   $0x0
ffffffff80003daf:	6a 0f                	push   $0xf
ffffffff80003db1:	e9 f0 fe ff ff       	jmp    ffffffff80003ca6 <common_exception_stub>
ffffffff80003db6:	0f 0b                	ud2    

ffffffff80003db8 <interrupt_handle_0x10>:
ffffffff80003db8:	f3 0f 1e fa          	endbr64 
ffffffff80003dbc:	6a 00                	push   $0x0
ffffffff80003dbe:	6a 10                	push   $0x10
ffffffff80003dc0:	e9 e1 fe ff ff       	jmp    ffffffff80003ca6 <common_exception_stub>
ffffffff80003dc5:	0f 0b                	ud2    

ffffffff80003dc7 <interrupt_handle_0x11>:
ffffffff80003dc7:	f3 0f 1e fa          	endbr64 
ffffffff80003dcb:	6a 11                	push   $0x11
ffffffff80003dcd:	e9 d4 fe ff ff       	jmp    ffffffff80003ca6 <common_exception_stub>
ffffffff80003dd2:	0f 0b                	ud2    

ffffffff80003dd4 <interrupt_handle_0x12>:
ffffffff80003dd4:	f3 0f 1e fa          	endbr64 
ffffffff80003dd8:	6a 00                	push   $0x0
ffffffff80003dda:	6a 12                	push   $0x12
ffffffff80003ddc:	e9 c5 fe ff ff       	jmp    ffffffff80003ca6 <common_exception_stub>
ffffffff80003de1:	0f 0b                	ud2    

ffffffff80003de3 <interrupt_handle_0x13>:
ffffffff80003de3:	f3 0f 1e fa          	endbr64 
ffffffff80003de7:	6a 00                	push   $0x0
ffffffff80003de9:	6a 13                	push   $0x13
ffffffff80003deb:	e9 b6 fe ff ff       	jmp    ffffffff80003ca6 <common_exception_stub>
ffffffff80003df0:	0f 0b                	ud2    

ffffffff80003df2 <interrupt_handle_0x14>:
ffffffff80003df2:	f3 0f 1e fa          	endbr64 
ffffffff80003df6:	6a 00                	push   $0x0
ffffffff80003df8:	6a 14                	push   $0x14
ffffffff80003dfa:	e9 a7 fe ff ff       	jmp    ffffffff80003ca6 <common_exception_stub>
ffffffff80003dff:	0f 0b                	ud2    

ffffffff80003e01 <interrupt_handle_0x15>:
ffffffff80003e01:	f3 0f 1e fa          	endbr64 
ffffffff80003e05:	6a 00                	push   $0x0
ffffffff80003e07:	6a 15                	push   $0x15
ffffffff80003e09:	e9 98 fe ff ff       	jmp    ffffffff80003ca6 <common_exception_stub>
ffffffff80003e0e:	0f 0b                	ud2    

ffffffff80003e10 <interrupt_handle_0x16>:
ffffffff80003e10:	f3 0f 1e fa          	endbr64 
ffffffff80003e14:	6a 00                	push   $0x0
ffffffff80003e16:	6a 16                	push   $0x16
ffffffff80003e18:	e9 89 fe ff ff       	jmp    ffffffff80003ca6 <common_exception_stub>
ffffffff80003e1d:	0f 0b                	ud2    

ffffffff80003e1f <interrupt_handle_0x17>:
ffffffff80003e1f:	f3 0f 1e fa          	endbr64 
ffffffff80003e23:	6a 00                	push   $0x0
ffffffff80003e25:	6a 17                	push   $0x17
ffffffff80003e27:	e9 7a fe ff ff       	jmp    ffffffff80003ca6 <common_exception_stub>
ffffffff80003e2c:	0f 0b                	ud2    

ffffffff80003e2e <interrupt_handle_0x18>:
ffffffff80003e2e:	f3 0f 1e fa          	endbr64 
ffffffff80003e32:	6a 00                	push   $0x0
ffffffff80003e34:	6a 18                	push   $0x18
ffffffff80003e36:	e9 6b fe ff ff       	jmp    ffffffff80003ca6 <common_exception_stub>
ffffffff80003e3b:	0f 0b                	ud2    

ffffffff80003e3d <interrupt_handle_0x19>:
ffffffff80003e3d:	f3 0f 1e fa          	endbr64 
ffffffff80003e41:	6a 00                	push   $0x0
ffffffff80003e43:	6a 19                	push   $0x19
ffffffff80003e45:	e9 5c fe ff ff       	jmp    ffffffff80003ca6 <common_exception_stub>
ffffffff80003e4a:	0f 0b                	ud2    

ffffffff80003e4c <interrupt_handle_0x1a>:
ffffffff80003e4c:	f3 0f 1e fa          	endbr64 
ffffffff80003e50:	6a 00                	push   $0x0
ffffffff80003e52:	6a 1a                	push   $0x1a
ffffffff80003e54:	e9 4d fe ff ff       	jmp    ffffffff80003ca6 <common_exception_stub>
ffffffff80003e59:	0f 0b                	ud2    

ffffffff80003e5b <interrupt_handle_0x1b>:
ffffffff80003e5b:	f3 0f 1e fa          	endbr64 
ffffffff80003e5f:	6a 00                	push   $0x0
ffffffff80003e61:	6a 1b                	push   $0x1b
ffffffff80003e63:	e9 3e fe ff ff       	jmp    ffffffff80003ca6 <common_exception_stub>
ffffffff80003e68:	0f 0b                	ud2    

ffffffff80003e6a <interrupt_handle_0x1c>:
ffffffff80003e6a:	f3 0f 1e fa          	endbr64 
ffffffff80003e6e:	6a 00                	push   $0x0
ffffffff80003e70:	6a 1c                	push   $0x1c
ffffffff80003e72:	e9 2f fe ff ff       	jmp    ffffffff80003ca6 <common_exception_stub>
ffffffff80003e77:	0f 0b                	ud2    

ffffffff80003e79 <interrupt_handle_0x1d>:
ffffffff80003e79:	f3 0f 1e fa          	endbr64 
ffffffff80003e7d:	6a 00                	push   $0x0
ffffffff80003e7f:	6a 1d                	push   $0x1d
ffffffff80003e81:	e9 20 fe ff ff       	jmp    ffffffff80003ca6 <common_exception_stub>
ffffffff80003e86:	0f 0b                	ud2    

ffffffff80003e88 <interrupt_handle_0x1e>:
ffffffff80003e88:	f3 0f 1e fa          	endbr64 
ffffffff80003e8c:	6a 1e                	push   $0x1e
ffffffff80003e8e:	e9 13 fe ff ff       	jmp    ffffffff80003ca6 <common_exception_stub>
ffffffff80003e93:	0f 0b                	ud2    

ffffffff80003e95 <interrupt_handle_0x1f>:
ffffffff80003e95:	f3 0f 1e fa          	endbr64 
ffffffff80003e99:	6a 00                	push   $0x0
ffffffff80003e9b:	6a 1f                	push   $0x1f
ffffffff80003e9d:	e9 04 fe ff ff       	jmp    ffffffff80003ca6 <common_exception_stub>
ffffffff80003ea2:	0f 0b                	ud2    

ffffffff80003ea4 <default_exception_handler>:
ffffffff80003ea4:	f3 0f 1e fa          	endbr64 
ffffffff80003ea8:	55                   	push   %rbp
ffffffff80003ea9:	48 89 e5             	mov    %rsp,%rbp
ffffffff80003eac:	41 56                	push   %r14
ffffffff80003eae:	41 55                	push   %r13
ffffffff80003eb0:	41 54                	push   %r12
ffffffff80003eb2:	53                   	push   %rbx
ffffffff80003eb3:	48 83 ec 50          	sub    $0x50,%rsp
ffffffff80003eb7:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
ffffffff80003ebb:	48 8d 05 ee c1 2a 00 	lea    0x2ac1ee(%rip),%rax        # ffffffff802b00b0 <m_exception_lock>
ffffffff80003ec2:	48 89 c7             	mov    %rax,%rdi
ffffffff80003ec5:	e8 44 df ff ff       	call   ffffffff80001e0e <spinlock_lock>
ffffffff80003eca:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80003ecf:	e8 0d 2e 00 00       	call   ffffffff80006ce1 <get_apic_id>
ffffffff80003ed4:	48 89 c6             	mov    %rax,%rsi
ffffffff80003ed7:	48 8d 05 bd 43 03 00 	lea    0x343bd(%rip),%rax        # ffffffff8003829b <g_stivale2_header+0x129b>
ffffffff80003ede:	48 89 c7             	mov    %rax,%rdi
ffffffff80003ee1:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80003ee6:	e8 55 f6 00 00       	call   ffffffff80013540 <printf_>
ffffffff80003eeb:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80003ef0:	e8 ec 2d 00 00       	call   ffffffff80006ce1 <get_apic_id>
ffffffff80003ef5:	48 89 c6             	mov    %rax,%rsi
ffffffff80003ef8:	48 8d 05 11 8d 03 00 	lea    0x38d11(%rip),%rax        # ffffffff8003cc10 <g_stivale2_header+0x5c10>
ffffffff80003eff:	48 89 c7             	mov    %rax,%rdi
ffffffff80003f02:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80003f07:	e8 34 f6 00 00       	call   ffffffff80013540 <printf_>
ffffffff80003f0c:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff80003f10:	4c 8b a0 80 00 00 00 	mov    0x80(%rax),%r12
ffffffff80003f17:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff80003f1b:	48 8b 40 78          	mov    0x78(%rax),%rax
ffffffff80003f1f:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
ffffffff80003f26:	00 
ffffffff80003f27:	48 8d 05 b2 31 0a 00 	lea    0xa31b2(%rip),%rax        # ffffffff800a70e0 <g_exception_name>
ffffffff80003f2e:	48 8b 1c 02          	mov    (%rdx,%rax,1),%rbx
ffffffff80003f32:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80003f37:	e8 a5 2d 00 00       	call   ffffffff80006ce1 <get_apic_id>
ffffffff80003f3c:	4c 89 e1             	mov    %r12,%rcx
ffffffff80003f3f:	48 89 da             	mov    %rbx,%rdx
ffffffff80003f42:	48 89 c6             	mov    %rax,%rsi
ffffffff80003f45:	48 8d 05 0c 8d 03 00 	lea    0x38d0c(%rip),%rax        # ffffffff8003cc58 <g_stivale2_header+0x5c58>
ffffffff80003f4c:	48 89 c7             	mov    %rax,%rdi
ffffffff80003f4f:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80003f54:	e8 e7 f5 00 00       	call   ffffffff80013540 <printf_>
ffffffff80003f59:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80003f5e:	e8 7e 2d 00 00       	call   ffffffff80006ce1 <get_apic_id>
ffffffff80003f63:	48 89 c6             	mov    %rax,%rsi
ffffffff80003f66:	48 8d 05 a3 8c 03 00 	lea    0x38ca3(%rip),%rax        # ffffffff8003cc10 <g_stivale2_header+0x5c10>
ffffffff80003f6d:	48 89 c7             	mov    %rax,%rdi
ffffffff80003f70:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80003f75:	e8 c6 f5 00 00       	call   ffffffff80013540 <printf_>
ffffffff80003f7a:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80003f7f:	e8 5d 2d 00 00       	call   ffffffff80006ce1 <get_apic_id>
ffffffff80003f84:	48 89 c6             	mov    %rax,%rsi
ffffffff80003f87:	48 8d 05 0d 43 03 00 	lea    0x3430d(%rip),%rax        # ffffffff8003829b <g_stivale2_header+0x129b>
ffffffff80003f8e:	48 89 c7             	mov    %rax,%rdi
ffffffff80003f91:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80003f96:	e8 a5 f5 00 00       	call   ffffffff80013540 <printf_>
ffffffff80003f9b:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff80003f9f:	48 8b 40 78          	mov    0x78(%rax),%rax
ffffffff80003fa3:	48 83 f8 0e          	cmp    $0xe,%rax
ffffffff80003fa7:	0f 85 13 01 00 00    	jne    ffffffff800040c0 <default_exception_handler+0x21c>
ffffffff80003fad:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff80003fb1:	48 8b 80 80 00 00 00 	mov    0x80(%rax),%rax
ffffffff80003fb8:	89 45 a4             	mov    %eax,-0x5c(%rbp)
ffffffff80003fbb:	0f b6 45 a4          	movzbl -0x5c(%rbp),%eax
ffffffff80003fbf:	83 e0 08             	and    $0x8,%eax
ffffffff80003fc2:	84 c0                	test   %al,%al
ffffffff80003fc4:	74 26                	je     ffffffff80003fec <default_exception_handler+0x148>
ffffffff80003fc6:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80003fcb:	e8 11 2d 00 00       	call   ffffffff80006ce1 <get_apic_id>
ffffffff80003fd0:	48 89 c6             	mov    %rax,%rsi
ffffffff80003fd3:	48 8d 05 ae 8c 03 00 	lea    0x38cae(%rip),%rax        # ffffffff8003cc88 <g_stivale2_header+0x5c88>
ffffffff80003fda:	48 89 c7             	mov    %rax,%rdi
ffffffff80003fdd:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80003fe2:	e8 59 f5 00 00       	call   ffffffff80013540 <printf_>
ffffffff80003fe7:	e9 b3 00 00 00       	jmp    ffffffff8000409f <default_exception_handler+0x1fb>
ffffffff80003fec:	0f b6 45 a4          	movzbl -0x5c(%rbp),%eax
ffffffff80003ff0:	83 e0 10             	and    $0x10,%eax
ffffffff80003ff3:	84 c0                	test   %al,%al
ffffffff80003ff5:	74 26                	je     ffffffff8000401d <default_exception_handler+0x179>
ffffffff80003ff7:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80003ffc:	e8 e0 2c 00 00       	call   ffffffff80006ce1 <get_apic_id>
ffffffff80004001:	48 89 c6             	mov    %rax,%rsi
ffffffff80004004:	48 8d 05 dd 8c 03 00 	lea    0x38cdd(%rip),%rax        # ffffffff8003cce8 <g_stivale2_header+0x5ce8>
ffffffff8000400b:	48 89 c7             	mov    %rax,%rdi
ffffffff8000400e:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80004013:	e8 28 f5 00 00       	call   ffffffff80013540 <printf_>
ffffffff80004018:	e9 82 00 00 00       	jmp    ffffffff8000409f <default_exception_handler+0x1fb>
ffffffff8000401d:	0f b6 45 a4          	movzbl -0x5c(%rbp),%eax
ffffffff80004021:	83 e0 02             	and    $0x2,%eax
ffffffff80004024:	84 c0                	test   %al,%al
ffffffff80004026:	74 09                	je     ffffffff80004031 <default_exception_handler+0x18d>
ffffffff80004028:	48 8d 05 c5 74 03 00 	lea    0x374c5(%rip),%rax        # ffffffff8003b4f4 <g_stivale2_header+0x44f4>
ffffffff8000402f:	eb 07                	jmp    ffffffff80004038 <default_exception_handler+0x194>
ffffffff80004031:	48 8d 05 b7 40 03 00 	lea    0x340b7(%rip),%rax        # ffffffff800380ef <g_stivale2_header+0x10ef>
ffffffff80004038:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
ffffffff8000403c:	0f b6 45 a4          	movzbl -0x5c(%rbp),%eax
ffffffff80004040:	83 e0 01             	and    $0x1,%eax
ffffffff80004043:	84 c0                	test   %al,%al
ffffffff80004045:	74 2d                	je     ffffffff80004074 <default_exception_handler+0x1d0>
ffffffff80004047:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000404c:	e8 90 2c 00 00       	call   ffffffff80006ce1 <get_apic_id>
ffffffff80004051:	48 89 c1             	mov    %rax,%rcx
ffffffff80004054:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80004058:	48 89 c2             	mov    %rax,%rdx
ffffffff8000405b:	48 89 ce             	mov    %rcx,%rsi
ffffffff8000405e:	48 8d 05 b3 8c 03 00 	lea    0x38cb3(%rip),%rax        # ffffffff8003cd18 <g_stivale2_header+0x5d18>
ffffffff80004065:	48 89 c7             	mov    %rax,%rdi
ffffffff80004068:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000406d:	e8 ce f4 00 00       	call   ffffffff80013540 <printf_>
ffffffff80004072:	eb 2b                	jmp    ffffffff8000409f <default_exception_handler+0x1fb>
ffffffff80004074:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80004079:	e8 63 2c 00 00       	call   ffffffff80006ce1 <get_apic_id>
ffffffff8000407e:	48 89 c1             	mov    %rax,%rcx
ffffffff80004081:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80004085:	48 89 c2             	mov    %rax,%rdx
ffffffff80004088:	48 89 ce             	mov    %rcx,%rsi
ffffffff8000408b:	48 8d 05 ae 8c 03 00 	lea    0x38cae(%rip),%rax        # ffffffff8003cd40 <g_stivale2_header+0x5d40>
ffffffff80004092:	48 89 c7             	mov    %rax,%rdi
ffffffff80004095:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000409a:	e8 a1 f4 00 00       	call   ffffffff80013540 <printf_>
ffffffff8000409f:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800040a4:	e8 38 2c 00 00       	call   ffffffff80006ce1 <get_apic_id>
ffffffff800040a9:	48 89 c6             	mov    %rax,%rsi
ffffffff800040ac:	48 8d 05 e8 41 03 00 	lea    0x341e8(%rip),%rax        # ffffffff8003829b <g_stivale2_header+0x129b>
ffffffff800040b3:	48 89 c7             	mov    %rax,%rdi
ffffffff800040b6:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800040bb:	e8 80 f4 00 00       	call   ffffffff80013540 <printf_>
ffffffff800040c0:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff800040c4:	4c 8b 70 58          	mov    0x58(%rax),%r14
ffffffff800040c8:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff800040cc:	4c 8b 68 60          	mov    0x60(%rax),%r13
ffffffff800040d0:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff800040d4:	4c 8b 60 68          	mov    0x68(%rax),%r12
ffffffff800040d8:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff800040dc:	48 8b 58 70          	mov    0x70(%rax),%rbx
ffffffff800040e0:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800040e5:	e8 f7 2b 00 00       	call   ffffffff80006ce1 <get_apic_id>
ffffffff800040ea:	4d 89 f1             	mov    %r14,%r9
ffffffff800040ed:	4d 89 e8             	mov    %r13,%r8
ffffffff800040f0:	4c 89 e1             	mov    %r12,%rcx
ffffffff800040f3:	48 89 da             	mov    %rbx,%rdx
ffffffff800040f6:	48 89 c6             	mov    %rax,%rsi
ffffffff800040f9:	48 8d 05 78 8c 03 00 	lea    0x38c78(%rip),%rax        # ffffffff8003cd78 <g_stivale2_header+0x5d78>
ffffffff80004100:	48 89 c7             	mov    %rax,%rdi
ffffffff80004103:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80004108:	e8 33 f4 00 00       	call   ffffffff80013540 <printf_>
ffffffff8000410d:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff80004111:	4c 8b b0 a0 00 00 00 	mov    0xa0(%rax),%r14
ffffffff80004118:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff8000411c:	4c 8b 68 40          	mov    0x40(%rax),%r13
ffffffff80004120:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff80004124:	4c 8b 60 48          	mov    0x48(%rax),%r12
ffffffff80004128:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff8000412c:	48 8b 58 50          	mov    0x50(%rax),%rbx
ffffffff80004130:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80004135:	e8 a7 2b 00 00       	call   ffffffff80006ce1 <get_apic_id>
ffffffff8000413a:	4d 89 f1             	mov    %r14,%r9
ffffffff8000413d:	4d 89 e8             	mov    %r13,%r8
ffffffff80004140:	4c 89 e1             	mov    %r12,%rcx
ffffffff80004143:	48 89 da             	mov    %rbx,%rdx
ffffffff80004146:	48 89 c6             	mov    %rax,%rsi
ffffffff80004149:	48 8d 05 60 8c 03 00 	lea    0x38c60(%rip),%rax        # ffffffff8003cdb0 <g_stivale2_header+0x5db0>
ffffffff80004150:	48 89 c7             	mov    %rax,%rdi
ffffffff80004153:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80004158:	e8 e3 f3 00 00       	call   ffffffff80013540 <printf_>
ffffffff8000415d:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff80004161:	4c 8b 70 20          	mov    0x20(%rax),%r14
ffffffff80004165:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff80004169:	4c 8b 68 28          	mov    0x28(%rax),%r13
ffffffff8000416d:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff80004171:	4c 8b 60 30          	mov    0x30(%rax),%r12
ffffffff80004175:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff80004179:	48 8b 58 38          	mov    0x38(%rax),%rbx
ffffffff8000417d:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80004182:	e8 5a 2b 00 00       	call   ffffffff80006ce1 <get_apic_id>
ffffffff80004187:	4d 89 f1             	mov    %r14,%r9
ffffffff8000418a:	4d 89 e8             	mov    %r13,%r8
ffffffff8000418d:	4c 89 e1             	mov    %r12,%rcx
ffffffff80004190:	48 89 da             	mov    %rbx,%rdx
ffffffff80004193:	48 89 c6             	mov    %rax,%rsi
ffffffff80004196:	48 8d 05 4b 8c 03 00 	lea    0x38c4b(%rip),%rax        # ffffffff8003cde8 <g_stivale2_header+0x5de8>
ffffffff8000419d:	48 89 c7             	mov    %rax,%rdi
ffffffff800041a0:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800041a5:	e8 96 f3 00 00       	call   ffffffff80013540 <printf_>
ffffffff800041aa:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff800041ae:	4c 8b 30             	mov    (%rax),%r14
ffffffff800041b1:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff800041b5:	4c 8b 68 08          	mov    0x8(%rax),%r13
ffffffff800041b9:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff800041bd:	4c 8b 60 10          	mov    0x10(%rax),%r12
ffffffff800041c1:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff800041c5:	48 8b 58 18          	mov    0x18(%rax),%rbx
ffffffff800041c9:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800041ce:	e8 0e 2b 00 00       	call   ffffffff80006ce1 <get_apic_id>
ffffffff800041d3:	4d 89 f1             	mov    %r14,%r9
ffffffff800041d6:	4d 89 e8             	mov    %r13,%r8
ffffffff800041d9:	4c 89 e1             	mov    %r12,%rcx
ffffffff800041dc:	48 89 da             	mov    %rbx,%rdx
ffffffff800041df:	48 89 c6             	mov    %rax,%rsi
ffffffff800041e2:	48 8d 05 37 8c 03 00 	lea    0x38c37(%rip),%rax        # ffffffff8003ce20 <g_stivale2_header+0x5e20>
ffffffff800041e9:	48 89 c7             	mov    %rax,%rdi
ffffffff800041ec:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800041f1:	e8 4a f3 00 00       	call   ffffffff80013540 <printf_>
ffffffff800041f6:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff800041fa:	4c 8b a0 98 00 00 00 	mov    0x98(%rax),%r12
ffffffff80004201:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff80004205:	48 8b 98 88 00 00 00 	mov    0x88(%rax),%rbx
ffffffff8000420c:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80004211:	e8 cb 2a 00 00       	call   ffffffff80006ce1 <get_apic_id>
ffffffff80004216:	4c 89 e1             	mov    %r12,%rcx
ffffffff80004219:	48 89 da             	mov    %rbx,%rdx
ffffffff8000421c:	48 89 c6             	mov    %rax,%rsi
ffffffff8000421f:	48 8d 05 32 8c 03 00 	lea    0x38c32(%rip),%rax        # ffffffff8003ce58 <g_stivale2_header+0x5e58>
ffffffff80004226:	48 89 c7             	mov    %rax,%rdi
ffffffff80004229:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000422e:	e8 0d f3 00 00       	call   ffffffff80013540 <printf_>
ffffffff80004233:	b8 01 01 00 c0       	mov    $0xc0000101,%eax
ffffffff80004238:	89 c1                	mov    %eax,%ecx
ffffffff8000423a:	0f 32                	rdmsr  
ffffffff8000423c:	89 55 ac             	mov    %edx,-0x54(%rbp)
ffffffff8000423f:	89 45 a8             	mov    %eax,-0x58(%rbp)
ffffffff80004242:	8b 45 ac             	mov    -0x54(%rbp),%eax
ffffffff80004245:	48 c1 e0 20          	shl    $0x20,%rax
ffffffff80004249:	48 89 c2             	mov    %rax,%rdx
ffffffff8000424c:	8b 45 a8             	mov    -0x58(%rbp),%eax
ffffffff8000424f:	48 09 c2             	or     %rax,%rdx
ffffffff80004252:	49 89 d4             	mov    %rdx,%r12
ffffffff80004255:	90                   	nop
ffffffff80004256:	b8 00 01 00 c0       	mov    $0xc0000100,%eax
ffffffff8000425b:	89 c1                	mov    %eax,%ecx
ffffffff8000425d:	0f 32                	rdmsr  
ffffffff8000425f:	89 55 b4             	mov    %edx,-0x4c(%rbp)
ffffffff80004262:	89 45 b0             	mov    %eax,-0x50(%rbp)
ffffffff80004265:	8b 45 b4             	mov    -0x4c(%rbp),%eax
ffffffff80004268:	48 c1 e0 20          	shl    $0x20,%rax
ffffffff8000426c:	48 89 c2             	mov    %rax,%rdx
ffffffff8000426f:	8b 45 b0             	mov    -0x50(%rbp),%eax
ffffffff80004272:	48 89 d3             	mov    %rdx,%rbx
ffffffff80004275:	48 09 c3             	or     %rax,%rbx
ffffffff80004278:	90                   	nop
ffffffff80004279:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000427e:	e8 5e 2a 00 00       	call   ffffffff80006ce1 <get_apic_id>
ffffffff80004283:	4c 89 e1             	mov    %r12,%rcx
ffffffff80004286:	48 89 da             	mov    %rbx,%rdx
ffffffff80004289:	48 89 c6             	mov    %rax,%rsi
ffffffff8000428c:	48 8d 05 e5 8b 03 00 	lea    0x38be5(%rip),%rax        # ffffffff8003ce78 <g_stivale2_header+0x5e78>
ffffffff80004293:	48 89 c7             	mov    %rax,%rdi
ffffffff80004296:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000429b:	e8 a0 f2 00 00       	call   ffffffff80013540 <printf_>
ffffffff800042a0:	0f 20 e0             	mov    %cr4,%rax
ffffffff800042a3:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
ffffffff800042a7:	4c 8b 75 b8          	mov    -0x48(%rbp),%r14
ffffffff800042ab:	90                   	nop
ffffffff800042ac:	0f 20 d8             	mov    %cr3,%rax
ffffffff800042af:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
ffffffff800042b3:	4c 8b 6d c0          	mov    -0x40(%rbp),%r13
ffffffff800042b7:	90                   	nop
ffffffff800042b8:	0f 20 d0             	mov    %cr2,%rax
ffffffff800042bb:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
ffffffff800042bf:	4c 8b 65 c8          	mov    -0x38(%rbp),%r12
ffffffff800042c3:	90                   	nop
ffffffff800042c4:	0f 20 c0             	mov    %cr0,%rax
ffffffff800042c7:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
ffffffff800042cb:	48 8b 5d d0          	mov    -0x30(%rbp),%rbx
ffffffff800042cf:	90                   	nop
ffffffff800042d0:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800042d5:	e8 07 2a 00 00       	call   ffffffff80006ce1 <get_apic_id>
ffffffff800042da:	4d 89 f1             	mov    %r14,%r9
ffffffff800042dd:	4d 89 e8             	mov    %r13,%r8
ffffffff800042e0:	4c 89 e1             	mov    %r12,%rcx
ffffffff800042e3:	48 89 da             	mov    %rbx,%rdx
ffffffff800042e6:	48 89 c6             	mov    %rax,%rsi
ffffffff800042e9:	48 8d 05 b0 8b 03 00 	lea    0x38bb0(%rip),%rax        # ffffffff8003cea0 <g_stivale2_header+0x5ea0>
ffffffff800042f0:	48 89 c7             	mov    %rax,%rdi
ffffffff800042f3:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800042f8:	e8 43 f2 00 00       	call   ffffffff80013540 <printf_>
ffffffff800042fd:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff80004301:	48 8b 40 78          	mov    0x78(%rax),%rax
ffffffff80004305:	48 83 f8 0e          	cmp    $0xe,%rax
ffffffff80004309:	75 0b                	jne    ffffffff80004316 <default_exception_handler+0x472>
ffffffff8000430b:	0f b6 45 a4          	movzbl -0x5c(%rbp),%eax
ffffffff8000430f:	83 e0 10             	and    $0x10,%eax
ffffffff80004312:	84 c0                	test   %al,%al
ffffffff80004314:	75 5a                	jne    ffffffff80004370 <default_exception_handler+0x4cc>
ffffffff80004316:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000431b:	e8 c1 29 00 00       	call   ffffffff80006ce1 <get_apic_id>
ffffffff80004320:	48 89 c6             	mov    %rax,%rsi
ffffffff80004323:	48 8d 05 71 3f 03 00 	lea    0x33f71(%rip),%rax        # ffffffff8003829b <g_stivale2_header+0x129b>
ffffffff8000432a:	48 89 c7             	mov    %rax,%rdi
ffffffff8000432d:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80004332:	e8 09 f2 00 00       	call   ffffffff80013540 <printf_>
ffffffff80004337:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000433c:	e8 a0 29 00 00       	call   ffffffff80006ce1 <get_apic_id>
ffffffff80004341:	48 89 c6             	mov    %rax,%rsi
ffffffff80004344:	48 8d 05 60 3f 03 00 	lea    0x33f60(%rip),%rax        # ffffffff800382ab <g_stivale2_header+0x12ab>
ffffffff8000434b:	48 89 c7             	mov    %rax,%rdi
ffffffff8000434e:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80004353:	e8 e8 f1 00 00       	call   ffffffff80013540 <printf_>
ffffffff80004358:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff8000435c:	48 8b 80 88 00 00 00 	mov    0x88(%rax),%rax
ffffffff80004363:	be 05 00 00 00       	mov    $0x5,%esi
ffffffff80004368:	48 89 c7             	mov    %rax,%rdi
ffffffff8000436b:	e8 4f ef ff ff       	call   ffffffff800032bf <debug_disasm_at>
ffffffff80004370:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80004375:	e8 67 29 00 00       	call   ffffffff80006ce1 <get_apic_id>
ffffffff8000437a:	48 89 c6             	mov    %rax,%rsi
ffffffff8000437d:	48 8d 05 17 3f 03 00 	lea    0x33f17(%rip),%rax        # ffffffff8003829b <g_stivale2_header+0x129b>
ffffffff80004384:	48 89 c7             	mov    %rax,%rdi
ffffffff80004387:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000438c:	e8 af f1 00 00       	call   ffffffff80013540 <printf_>
ffffffff80004391:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80004396:	e8 46 29 00 00       	call   ffffffff80006ce1 <get_apic_id>
ffffffff8000439b:	48 89 c6             	mov    %rax,%rsi
ffffffff8000439e:	48 8d 05 1b 3f 03 00 	lea    0x33f1b(%rip),%rax        # ffffffff800382c0 <g_stivale2_header+0x12c0>
ffffffff800043a5:	48 89 c7             	mov    %rax,%rdi
ffffffff800043a8:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800043ad:	e8 8e f1 00 00       	call   ffffffff80013540 <printf_>
ffffffff800043b2:	48 8d 05 f7 bc 2a 00 	lea    0x2abcf7(%rip),%rax        # ffffffff802b00b0 <m_exception_lock>
ffffffff800043b9:	48 89 c7             	mov    %rax,%rdi
ffffffff800043bc:	e8 1c db ff ff       	call   ffffffff80001edd <spinlock_unlock>
ffffffff800043c1:	f4                   	hlt    
ffffffff800043c2:	eb fd                	jmp    ffffffff800043c1 <default_exception_handler+0x51d>

ffffffff800043c4 <common_exception_handler>:
ffffffff800043c4:	f3 0f 1e fa          	endbr64 
ffffffff800043c8:	55                   	push   %rbp
ffffffff800043c9:	48 89 e5             	mov    %rsp,%rbp
ffffffff800043cc:	48 83 ec 30          	sub    $0x30,%rsp
ffffffff800043d0:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
ffffffff800043d4:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
ffffffff800043db:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff800043df:	48 8b 40 78          	mov    0x78(%rax),%rax
ffffffff800043e3:	48 83 f8 0e          	cmp    $0xe,%rax
ffffffff800043e7:	0f 85 87 00 00 00    	jne    ffffffff80004474 <common_exception_handler+0xb0>
ffffffff800043ed:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff800043f1:	48 8b 80 80 00 00 00 	mov    0x80(%rax),%rax
ffffffff800043f8:	89 45 ec             	mov    %eax,-0x14(%rbp)
ffffffff800043fb:	0f b6 45 ec          	movzbl -0x14(%rbp),%eax
ffffffff800043ff:	83 e0 01             	and    $0x1,%eax
ffffffff80004402:	84 c0                	test   %al,%al
ffffffff80004404:	0f 95 c0             	setne  %al
ffffffff80004407:	0f b6 d0             	movzbl %al,%edx
ffffffff8000440a:	0f b6 45 ec          	movzbl -0x14(%rbp),%eax
ffffffff8000440e:	83 e0 02             	and    $0x2,%eax
ffffffff80004411:	84 c0                	test   %al,%al
ffffffff80004413:	0f 95 c0             	setne  %al
ffffffff80004416:	0f b6 c0             	movzbl %al,%eax
ffffffff80004419:	0f 20 d1             	mov    %cr2,%rcx
ffffffff8000441c:	48 89 4d f0          	mov    %rcx,-0x10(%rbp)
ffffffff80004420:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
ffffffff80004424:	89 c6                	mov    %eax,%esi
ffffffff80004426:	48 89 cf             	mov    %rcx,%rdi
ffffffff80004429:	e8 bc 42 00 00       	call   ffffffff800086ea <vmm_page_fault_handler>
ffffffff8000442e:	89 45 fc             	mov    %eax,-0x4(%rbp)
ffffffff80004431:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
ffffffff80004435:	74 49                	je     ffffffff80004480 <common_exception_handler+0xbc>
ffffffff80004437:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000443c:	e8 a0 28 00 00       	call   ffffffff80006ce1 <get_apic_id>
ffffffff80004441:	48 89 c6             	mov    %rax,%rsi
ffffffff80004444:	41 b8 55 01 00 00    	mov    $0x155,%r8d
ffffffff8000444a:	48 8d 05 89 3e 03 00 	lea    0x33e89(%rip),%rax        # ffffffff800382da <g_stivale2_header+0x12da>
ffffffff80004451:	48 89 c1             	mov    %rax,%rcx
ffffffff80004454:	48 8d 05 b5 8f 03 00 	lea    0x38fb5(%rip),%rax        # ffffffff8003d410 <__FUNCTION__.1.lto_priv.1>
ffffffff8000445b:	48 89 c2             	mov    %rax,%rdx
ffffffff8000445e:	48 8d 05 8b 83 03 00 	lea    0x3838b(%rip),%rax        # ffffffff8003c7f0 <g_stivale2_header+0x57f0>
ffffffff80004465:	48 89 c7             	mov    %rax,%rdi
ffffffff80004468:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000446d:	e8 ce f0 00 00       	call   ffffffff80013540 <printf_>
ffffffff80004472:	eb 0c                	jmp    ffffffff80004480 <common_exception_handler+0xbc>
ffffffff80004474:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80004478:	48 89 c7             	mov    %rax,%rdi
ffffffff8000447b:	e8 24 fa ff ff       	call   ffffffff80003ea4 <default_exception_handler>
ffffffff80004480:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
ffffffff80004484:	74 0c                	je     ffffffff80004492 <common_exception_handler+0xce>
ffffffff80004486:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8000448a:	48 89 c7             	mov    %rax,%rdi
ffffffff8000448d:	e8 12 fa ff ff       	call   ffffffff80003ea4 <default_exception_handler>
ffffffff80004492:	90                   	nop
ffffffff80004493:	c9                   	leave  
ffffffff80004494:	c3                   	ret    

ffffffff80004495 <common_interrupt_stub>:
ffffffff80004495:	fc                   	cld    
ffffffff80004496:	50                   	push   %rax
ffffffff80004497:	53                   	push   %rbx
ffffffff80004498:	51                   	push   %rcx
ffffffff80004499:	52                   	push   %rdx
ffffffff8000449a:	56                   	push   %rsi
ffffffff8000449b:	57                   	push   %rdi
ffffffff8000449c:	55                   	push   %rbp
ffffffff8000449d:	41 50                	push   %r8
ffffffff8000449f:	41 51                	push   %r9
ffffffff800044a1:	41 52                	push   %r10
ffffffff800044a3:	41 53                	push   %r11
ffffffff800044a5:	41 54                	push   %r12
ffffffff800044a7:	41 55                	push   %r13
ffffffff800044a9:	41 56                	push   %r14
ffffffff800044ab:	41 57                	push   %r15
ffffffff800044ad:	48 89 e7             	mov    %rsp,%rdi
ffffffff800044b0:	e8 eb 0c 00 00       	call   ffffffff800051a0 <common_interrupt_handler>
ffffffff800044b5:	41 5f                	pop    %r15
ffffffff800044b7:	41 5e                	pop    %r14
ffffffff800044b9:	41 5d                	pop    %r13
ffffffff800044bb:	41 5c                	pop    %r12
ffffffff800044bd:	41 5b                	pop    %r11
ffffffff800044bf:	41 5a                	pop    %r10
ffffffff800044c1:	41 59                	pop    %r9
ffffffff800044c3:	41 58                	pop    %r8
ffffffff800044c5:	5d                   	pop    %rbp
ffffffff800044c6:	5f                   	pop    %rdi
ffffffff800044c7:	5e                   	pop    %rsi
ffffffff800044c8:	5a                   	pop    %rdx
ffffffff800044c9:	59                   	pop    %rcx
ffffffff800044ca:	5b                   	pop    %rbx
ffffffff800044cb:	58                   	pop    %rax
ffffffff800044cc:	48 83 c4 08          	add    $0x8,%rsp
ffffffff800044d0:	48 cf                	iretq  

ffffffff800044d2 <interrupt_handle_0x20>:
ffffffff800044d2:	f3 0f 1e fa          	endbr64 
ffffffff800044d6:	6a 20                	push   $0x20
ffffffff800044d8:	eb bb                	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff800044da:	0f 0b                	ud2    

ffffffff800044dc <interrupt_handle_0x21>:
ffffffff800044dc:	f3 0f 1e fa          	endbr64 
ffffffff800044e0:	6a 21                	push   $0x21
ffffffff800044e2:	eb b1                	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff800044e4:	0f 0b                	ud2    

ffffffff800044e6 <interrupt_handle_0x22>:
ffffffff800044e6:	f3 0f 1e fa          	endbr64 
ffffffff800044ea:	6a 22                	push   $0x22
ffffffff800044ec:	eb a7                	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff800044ee:	0f 0b                	ud2    

ffffffff800044f0 <interrupt_handle_0x23>:
ffffffff800044f0:	f3 0f 1e fa          	endbr64 
ffffffff800044f4:	6a 23                	push   $0x23
ffffffff800044f6:	eb 9d                	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff800044f8:	0f 0b                	ud2    

ffffffff800044fa <interrupt_handle_0x24>:
ffffffff800044fa:	f3 0f 1e fa          	endbr64 
ffffffff800044fe:	6a 24                	push   $0x24
ffffffff80004500:	eb 93                	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004502:	0f 0b                	ud2    

ffffffff80004504 <interrupt_handle_0x25>:
ffffffff80004504:	f3 0f 1e fa          	endbr64 
ffffffff80004508:	6a 25                	push   $0x25
ffffffff8000450a:	eb 89                	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff8000450c:	0f 0b                	ud2    

ffffffff8000450e <interrupt_handle_0x26>:
ffffffff8000450e:	f3 0f 1e fa          	endbr64 
ffffffff80004512:	6a 26                	push   $0x26
ffffffff80004514:	e9 7c ff ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004519:	0f 0b                	ud2    

ffffffff8000451b <interrupt_handle_0x27>:
ffffffff8000451b:	f3 0f 1e fa          	endbr64 
ffffffff8000451f:	6a 27                	push   $0x27
ffffffff80004521:	e9 6f ff ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004526:	0f 0b                	ud2    

ffffffff80004528 <interrupt_handle_0x28>:
ffffffff80004528:	f3 0f 1e fa          	endbr64 
ffffffff8000452c:	6a 28                	push   $0x28
ffffffff8000452e:	e9 62 ff ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004533:	0f 0b                	ud2    

ffffffff80004535 <interrupt_handle_0x29>:
ffffffff80004535:	f3 0f 1e fa          	endbr64 
ffffffff80004539:	6a 29                	push   $0x29
ffffffff8000453b:	e9 55 ff ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004540:	0f 0b                	ud2    

ffffffff80004542 <interrupt_handle_0x2a>:
ffffffff80004542:	f3 0f 1e fa          	endbr64 
ffffffff80004546:	6a 2a                	push   $0x2a
ffffffff80004548:	e9 48 ff ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff8000454d:	0f 0b                	ud2    

ffffffff8000454f <interrupt_handle_0x2b>:
ffffffff8000454f:	f3 0f 1e fa          	endbr64 
ffffffff80004553:	6a 2b                	push   $0x2b
ffffffff80004555:	e9 3b ff ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff8000455a:	0f 0b                	ud2    

ffffffff8000455c <interrupt_handle_0x2c>:
ffffffff8000455c:	f3 0f 1e fa          	endbr64 
ffffffff80004560:	6a 2c                	push   $0x2c
ffffffff80004562:	e9 2e ff ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004567:	0f 0b                	ud2    

ffffffff80004569 <interrupt_handle_0x2d>:
ffffffff80004569:	f3 0f 1e fa          	endbr64 
ffffffff8000456d:	6a 2d                	push   $0x2d
ffffffff8000456f:	e9 21 ff ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004574:	0f 0b                	ud2    

ffffffff80004576 <interrupt_handle_0x2e>:
ffffffff80004576:	f3 0f 1e fa          	endbr64 
ffffffff8000457a:	6a 2e                	push   $0x2e
ffffffff8000457c:	e9 14 ff ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004581:	0f 0b                	ud2    

ffffffff80004583 <interrupt_handle_0x2f>:
ffffffff80004583:	f3 0f 1e fa          	endbr64 
ffffffff80004587:	6a 2f                	push   $0x2f
ffffffff80004589:	e9 07 ff ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff8000458e:	0f 0b                	ud2    

ffffffff80004590 <interrupt_handle_0x30>:
ffffffff80004590:	f3 0f 1e fa          	endbr64 
ffffffff80004594:	6a 30                	push   $0x30
ffffffff80004596:	e9 fa fe ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff8000459b:	0f 0b                	ud2    

ffffffff8000459d <interrupt_handle_0x31>:
ffffffff8000459d:	f3 0f 1e fa          	endbr64 
ffffffff800045a1:	6a 31                	push   $0x31
ffffffff800045a3:	e9 ed fe ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff800045a8:	0f 0b                	ud2    

ffffffff800045aa <interrupt_handle_0x32>:
ffffffff800045aa:	f3 0f 1e fa          	endbr64 
ffffffff800045ae:	6a 32                	push   $0x32
ffffffff800045b0:	e9 e0 fe ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff800045b5:	0f 0b                	ud2    

ffffffff800045b7 <interrupt_handle_0x33>:
ffffffff800045b7:	f3 0f 1e fa          	endbr64 
ffffffff800045bb:	6a 33                	push   $0x33
ffffffff800045bd:	e9 d3 fe ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff800045c2:	0f 0b                	ud2    

ffffffff800045c4 <interrupt_handle_0x34>:
ffffffff800045c4:	f3 0f 1e fa          	endbr64 
ffffffff800045c8:	6a 34                	push   $0x34
ffffffff800045ca:	e9 c6 fe ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff800045cf:	0f 0b                	ud2    

ffffffff800045d1 <interrupt_handle_0x35>:
ffffffff800045d1:	f3 0f 1e fa          	endbr64 
ffffffff800045d5:	6a 35                	push   $0x35
ffffffff800045d7:	e9 b9 fe ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff800045dc:	0f 0b                	ud2    

ffffffff800045de <interrupt_handle_0x36>:
ffffffff800045de:	f3 0f 1e fa          	endbr64 
ffffffff800045e2:	6a 36                	push   $0x36
ffffffff800045e4:	e9 ac fe ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff800045e9:	0f 0b                	ud2    

ffffffff800045eb <interrupt_handle_0x37>:
ffffffff800045eb:	f3 0f 1e fa          	endbr64 
ffffffff800045ef:	6a 37                	push   $0x37
ffffffff800045f1:	e9 9f fe ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff800045f6:	0f 0b                	ud2    

ffffffff800045f8 <interrupt_handle_0x38>:
ffffffff800045f8:	f3 0f 1e fa          	endbr64 
ffffffff800045fc:	6a 38                	push   $0x38
ffffffff800045fe:	e9 92 fe ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004603:	0f 0b                	ud2    

ffffffff80004605 <interrupt_handle_0x39>:
ffffffff80004605:	f3 0f 1e fa          	endbr64 
ffffffff80004609:	6a 39                	push   $0x39
ffffffff8000460b:	e9 85 fe ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004610:	0f 0b                	ud2    

ffffffff80004612 <interrupt_handle_0x3a>:
ffffffff80004612:	f3 0f 1e fa          	endbr64 
ffffffff80004616:	6a 3a                	push   $0x3a
ffffffff80004618:	e9 78 fe ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff8000461d:	0f 0b                	ud2    

ffffffff8000461f <interrupt_handle_0x3b>:
ffffffff8000461f:	f3 0f 1e fa          	endbr64 
ffffffff80004623:	6a 3b                	push   $0x3b
ffffffff80004625:	e9 6b fe ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff8000462a:	0f 0b                	ud2    

ffffffff8000462c <interrupt_handle_0x3c>:
ffffffff8000462c:	f3 0f 1e fa          	endbr64 
ffffffff80004630:	6a 3c                	push   $0x3c
ffffffff80004632:	e9 5e fe ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004637:	0f 0b                	ud2    

ffffffff80004639 <interrupt_handle_0x3d>:
ffffffff80004639:	f3 0f 1e fa          	endbr64 
ffffffff8000463d:	6a 3d                	push   $0x3d
ffffffff8000463f:	e9 51 fe ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004644:	0f 0b                	ud2    

ffffffff80004646 <interrupt_handle_0x3e>:
ffffffff80004646:	f3 0f 1e fa          	endbr64 
ffffffff8000464a:	6a 3e                	push   $0x3e
ffffffff8000464c:	e9 44 fe ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004651:	0f 0b                	ud2    

ffffffff80004653 <interrupt_handle_0x3f>:
ffffffff80004653:	f3 0f 1e fa          	endbr64 
ffffffff80004657:	6a 3f                	push   $0x3f
ffffffff80004659:	e9 37 fe ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff8000465e:	0f 0b                	ud2    

ffffffff80004660 <interrupt_handle_0x40>:
ffffffff80004660:	f3 0f 1e fa          	endbr64 
ffffffff80004664:	6a 40                	push   $0x40
ffffffff80004666:	e9 2a fe ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff8000466b:	0f 0b                	ud2    

ffffffff8000466d <interrupt_handle_0x41>:
ffffffff8000466d:	f3 0f 1e fa          	endbr64 
ffffffff80004671:	6a 41                	push   $0x41
ffffffff80004673:	e9 1d fe ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004678:	0f 0b                	ud2    

ffffffff8000467a <interrupt_handle_0x42>:
ffffffff8000467a:	f3 0f 1e fa          	endbr64 
ffffffff8000467e:	6a 42                	push   $0x42
ffffffff80004680:	e9 10 fe ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004685:	0f 0b                	ud2    

ffffffff80004687 <interrupt_handle_0x43>:
ffffffff80004687:	f3 0f 1e fa          	endbr64 
ffffffff8000468b:	6a 43                	push   $0x43
ffffffff8000468d:	e9 03 fe ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004692:	0f 0b                	ud2    

ffffffff80004694 <interrupt_handle_0x44>:
ffffffff80004694:	f3 0f 1e fa          	endbr64 
ffffffff80004698:	6a 44                	push   $0x44
ffffffff8000469a:	e9 f6 fd ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff8000469f:	0f 0b                	ud2    

ffffffff800046a1 <interrupt_handle_0x45>:
ffffffff800046a1:	f3 0f 1e fa          	endbr64 
ffffffff800046a5:	6a 45                	push   $0x45
ffffffff800046a7:	e9 e9 fd ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff800046ac:	0f 0b                	ud2    

ffffffff800046ae <interrupt_handle_0x46>:
ffffffff800046ae:	f3 0f 1e fa          	endbr64 
ffffffff800046b2:	6a 46                	push   $0x46
ffffffff800046b4:	e9 dc fd ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff800046b9:	0f 0b                	ud2    

ffffffff800046bb <interrupt_handle_0x47>:
ffffffff800046bb:	f3 0f 1e fa          	endbr64 
ffffffff800046bf:	6a 47                	push   $0x47
ffffffff800046c1:	e9 cf fd ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff800046c6:	0f 0b                	ud2    

ffffffff800046c8 <interrupt_handle_0x48>:
ffffffff800046c8:	f3 0f 1e fa          	endbr64 
ffffffff800046cc:	6a 48                	push   $0x48
ffffffff800046ce:	e9 c2 fd ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff800046d3:	0f 0b                	ud2    

ffffffff800046d5 <interrupt_handle_0x49>:
ffffffff800046d5:	f3 0f 1e fa          	endbr64 
ffffffff800046d9:	6a 49                	push   $0x49
ffffffff800046db:	e9 b5 fd ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff800046e0:	0f 0b                	ud2    

ffffffff800046e2 <interrupt_handle_0x4a>:
ffffffff800046e2:	f3 0f 1e fa          	endbr64 
ffffffff800046e6:	6a 4a                	push   $0x4a
ffffffff800046e8:	e9 a8 fd ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff800046ed:	0f 0b                	ud2    

ffffffff800046ef <interrupt_handle_0x4b>:
ffffffff800046ef:	f3 0f 1e fa          	endbr64 
ffffffff800046f3:	6a 4b                	push   $0x4b
ffffffff800046f5:	e9 9b fd ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff800046fa:	0f 0b                	ud2    

ffffffff800046fc <interrupt_handle_0x4c>:
ffffffff800046fc:	f3 0f 1e fa          	endbr64 
ffffffff80004700:	6a 4c                	push   $0x4c
ffffffff80004702:	e9 8e fd ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004707:	0f 0b                	ud2    

ffffffff80004709 <interrupt_handle_0x4d>:
ffffffff80004709:	f3 0f 1e fa          	endbr64 
ffffffff8000470d:	6a 4d                	push   $0x4d
ffffffff8000470f:	e9 81 fd ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004714:	0f 0b                	ud2    

ffffffff80004716 <interrupt_handle_0x4e>:
ffffffff80004716:	f3 0f 1e fa          	endbr64 
ffffffff8000471a:	6a 4e                	push   $0x4e
ffffffff8000471c:	e9 74 fd ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004721:	0f 0b                	ud2    

ffffffff80004723 <interrupt_handle_0x4f>:
ffffffff80004723:	f3 0f 1e fa          	endbr64 
ffffffff80004727:	6a 4f                	push   $0x4f
ffffffff80004729:	e9 67 fd ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff8000472e:	0f 0b                	ud2    

ffffffff80004730 <interrupt_handle_0x50>:
ffffffff80004730:	f3 0f 1e fa          	endbr64 
ffffffff80004734:	6a 50                	push   $0x50
ffffffff80004736:	e9 5a fd ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff8000473b:	0f 0b                	ud2    

ffffffff8000473d <interrupt_handle_0x51>:
ffffffff8000473d:	f3 0f 1e fa          	endbr64 
ffffffff80004741:	6a 51                	push   $0x51
ffffffff80004743:	e9 4d fd ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004748:	0f 0b                	ud2    

ffffffff8000474a <interrupt_handle_0x52>:
ffffffff8000474a:	f3 0f 1e fa          	endbr64 
ffffffff8000474e:	6a 52                	push   $0x52
ffffffff80004750:	e9 40 fd ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004755:	0f 0b                	ud2    

ffffffff80004757 <interrupt_handle_0x53>:
ffffffff80004757:	f3 0f 1e fa          	endbr64 
ffffffff8000475b:	6a 53                	push   $0x53
ffffffff8000475d:	e9 33 fd ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004762:	0f 0b                	ud2    

ffffffff80004764 <interrupt_handle_0x54>:
ffffffff80004764:	f3 0f 1e fa          	endbr64 
ffffffff80004768:	6a 54                	push   $0x54
ffffffff8000476a:	e9 26 fd ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff8000476f:	0f 0b                	ud2    

ffffffff80004771 <interrupt_handle_0x55>:
ffffffff80004771:	f3 0f 1e fa          	endbr64 
ffffffff80004775:	6a 55                	push   $0x55
ffffffff80004777:	e9 19 fd ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff8000477c:	0f 0b                	ud2    

ffffffff8000477e <interrupt_handle_0x56>:
ffffffff8000477e:	f3 0f 1e fa          	endbr64 
ffffffff80004782:	6a 56                	push   $0x56
ffffffff80004784:	e9 0c fd ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004789:	0f 0b                	ud2    

ffffffff8000478b <interrupt_handle_0x57>:
ffffffff8000478b:	f3 0f 1e fa          	endbr64 
ffffffff8000478f:	6a 57                	push   $0x57
ffffffff80004791:	e9 ff fc ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004796:	0f 0b                	ud2    

ffffffff80004798 <interrupt_handle_0x58>:
ffffffff80004798:	f3 0f 1e fa          	endbr64 
ffffffff8000479c:	6a 58                	push   $0x58
ffffffff8000479e:	e9 f2 fc ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff800047a3:	0f 0b                	ud2    

ffffffff800047a5 <interrupt_handle_0x59>:
ffffffff800047a5:	f3 0f 1e fa          	endbr64 
ffffffff800047a9:	6a 59                	push   $0x59
ffffffff800047ab:	e9 e5 fc ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff800047b0:	0f 0b                	ud2    

ffffffff800047b2 <interrupt_handle_0x5a>:
ffffffff800047b2:	f3 0f 1e fa          	endbr64 
ffffffff800047b6:	6a 5a                	push   $0x5a
ffffffff800047b8:	e9 d8 fc ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff800047bd:	0f 0b                	ud2    

ffffffff800047bf <interrupt_handle_0x5b>:
ffffffff800047bf:	f3 0f 1e fa          	endbr64 
ffffffff800047c3:	6a 5b                	push   $0x5b
ffffffff800047c5:	e9 cb fc ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff800047ca:	0f 0b                	ud2    

ffffffff800047cc <interrupt_handle_0x5c>:
ffffffff800047cc:	f3 0f 1e fa          	endbr64 
ffffffff800047d0:	6a 5c                	push   $0x5c
ffffffff800047d2:	e9 be fc ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff800047d7:	0f 0b                	ud2    

ffffffff800047d9 <interrupt_handle_0x5d>:
ffffffff800047d9:	f3 0f 1e fa          	endbr64 
ffffffff800047dd:	6a 5d                	push   $0x5d
ffffffff800047df:	e9 b1 fc ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff800047e4:	0f 0b                	ud2    

ffffffff800047e6 <interrupt_handle_0x5e>:
ffffffff800047e6:	f3 0f 1e fa          	endbr64 
ffffffff800047ea:	6a 5e                	push   $0x5e
ffffffff800047ec:	e9 a4 fc ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff800047f1:	0f 0b                	ud2    

ffffffff800047f3 <interrupt_handle_0x5f>:
ffffffff800047f3:	f3 0f 1e fa          	endbr64 
ffffffff800047f7:	6a 5f                	push   $0x5f
ffffffff800047f9:	e9 97 fc ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff800047fe:	0f 0b                	ud2    

ffffffff80004800 <interrupt_handle_0x60>:
ffffffff80004800:	f3 0f 1e fa          	endbr64 
ffffffff80004804:	6a 60                	push   $0x60
ffffffff80004806:	e9 8a fc ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff8000480b:	0f 0b                	ud2    

ffffffff8000480d <interrupt_handle_0x61>:
ffffffff8000480d:	f3 0f 1e fa          	endbr64 
ffffffff80004811:	6a 61                	push   $0x61
ffffffff80004813:	e9 7d fc ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004818:	0f 0b                	ud2    

ffffffff8000481a <interrupt_handle_0x62>:
ffffffff8000481a:	f3 0f 1e fa          	endbr64 
ffffffff8000481e:	6a 62                	push   $0x62
ffffffff80004820:	e9 70 fc ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004825:	0f 0b                	ud2    

ffffffff80004827 <interrupt_handle_0x63>:
ffffffff80004827:	f3 0f 1e fa          	endbr64 
ffffffff8000482b:	6a 63                	push   $0x63
ffffffff8000482d:	e9 63 fc ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004832:	0f 0b                	ud2    

ffffffff80004834 <interrupt_handle_0x64>:
ffffffff80004834:	f3 0f 1e fa          	endbr64 
ffffffff80004838:	6a 64                	push   $0x64
ffffffff8000483a:	e9 56 fc ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff8000483f:	0f 0b                	ud2    

ffffffff80004841 <interrupt_handle_0x65>:
ffffffff80004841:	f3 0f 1e fa          	endbr64 
ffffffff80004845:	6a 65                	push   $0x65
ffffffff80004847:	e9 49 fc ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff8000484c:	0f 0b                	ud2    

ffffffff8000484e <interrupt_handle_0x66>:
ffffffff8000484e:	f3 0f 1e fa          	endbr64 
ffffffff80004852:	6a 66                	push   $0x66
ffffffff80004854:	e9 3c fc ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004859:	0f 0b                	ud2    

ffffffff8000485b <interrupt_handle_0x67>:
ffffffff8000485b:	f3 0f 1e fa          	endbr64 
ffffffff8000485f:	6a 67                	push   $0x67
ffffffff80004861:	e9 2f fc ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004866:	0f 0b                	ud2    

ffffffff80004868 <interrupt_handle_0x68>:
ffffffff80004868:	f3 0f 1e fa          	endbr64 
ffffffff8000486c:	6a 68                	push   $0x68
ffffffff8000486e:	e9 22 fc ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004873:	0f 0b                	ud2    

ffffffff80004875 <interrupt_handle_0x69>:
ffffffff80004875:	f3 0f 1e fa          	endbr64 
ffffffff80004879:	6a 69                	push   $0x69
ffffffff8000487b:	e9 15 fc ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004880:	0f 0b                	ud2    

ffffffff80004882 <interrupt_handle_0x6a>:
ffffffff80004882:	f3 0f 1e fa          	endbr64 
ffffffff80004886:	6a 6a                	push   $0x6a
ffffffff80004888:	e9 08 fc ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff8000488d:	0f 0b                	ud2    

ffffffff8000488f <interrupt_handle_0x6b>:
ffffffff8000488f:	f3 0f 1e fa          	endbr64 
ffffffff80004893:	6a 6b                	push   $0x6b
ffffffff80004895:	e9 fb fb ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff8000489a:	0f 0b                	ud2    

ffffffff8000489c <interrupt_handle_0x6c>:
ffffffff8000489c:	f3 0f 1e fa          	endbr64 
ffffffff800048a0:	6a 6c                	push   $0x6c
ffffffff800048a2:	e9 ee fb ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff800048a7:	0f 0b                	ud2    

ffffffff800048a9 <interrupt_handle_0x6d>:
ffffffff800048a9:	f3 0f 1e fa          	endbr64 
ffffffff800048ad:	6a 6d                	push   $0x6d
ffffffff800048af:	e9 e1 fb ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff800048b4:	0f 0b                	ud2    

ffffffff800048b6 <interrupt_handle_0x6e>:
ffffffff800048b6:	f3 0f 1e fa          	endbr64 
ffffffff800048ba:	6a 6e                	push   $0x6e
ffffffff800048bc:	e9 d4 fb ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff800048c1:	0f 0b                	ud2    

ffffffff800048c3 <interrupt_handle_0x6f>:
ffffffff800048c3:	f3 0f 1e fa          	endbr64 
ffffffff800048c7:	6a 6f                	push   $0x6f
ffffffff800048c9:	e9 c7 fb ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff800048ce:	0f 0b                	ud2    

ffffffff800048d0 <interrupt_handle_0x70>:
ffffffff800048d0:	f3 0f 1e fa          	endbr64 
ffffffff800048d4:	6a 70                	push   $0x70
ffffffff800048d6:	e9 ba fb ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff800048db:	0f 0b                	ud2    

ffffffff800048dd <interrupt_handle_0x71>:
ffffffff800048dd:	f3 0f 1e fa          	endbr64 
ffffffff800048e1:	6a 71                	push   $0x71
ffffffff800048e3:	e9 ad fb ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff800048e8:	0f 0b                	ud2    

ffffffff800048ea <interrupt_handle_0x72>:
ffffffff800048ea:	f3 0f 1e fa          	endbr64 
ffffffff800048ee:	6a 72                	push   $0x72
ffffffff800048f0:	e9 a0 fb ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff800048f5:	0f 0b                	ud2    

ffffffff800048f7 <interrupt_handle_0x73>:
ffffffff800048f7:	f3 0f 1e fa          	endbr64 
ffffffff800048fb:	6a 73                	push   $0x73
ffffffff800048fd:	e9 93 fb ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004902:	0f 0b                	ud2    

ffffffff80004904 <interrupt_handle_0x74>:
ffffffff80004904:	f3 0f 1e fa          	endbr64 
ffffffff80004908:	6a 74                	push   $0x74
ffffffff8000490a:	e9 86 fb ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff8000490f:	0f 0b                	ud2    

ffffffff80004911 <interrupt_handle_0x75>:
ffffffff80004911:	f3 0f 1e fa          	endbr64 
ffffffff80004915:	6a 75                	push   $0x75
ffffffff80004917:	e9 79 fb ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff8000491c:	0f 0b                	ud2    

ffffffff8000491e <interrupt_handle_0x76>:
ffffffff8000491e:	f3 0f 1e fa          	endbr64 
ffffffff80004922:	6a 76                	push   $0x76
ffffffff80004924:	e9 6c fb ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004929:	0f 0b                	ud2    

ffffffff8000492b <interrupt_handle_0x77>:
ffffffff8000492b:	f3 0f 1e fa          	endbr64 
ffffffff8000492f:	6a 77                	push   $0x77
ffffffff80004931:	e9 5f fb ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004936:	0f 0b                	ud2    

ffffffff80004938 <interrupt_handle_0x78>:
ffffffff80004938:	f3 0f 1e fa          	endbr64 
ffffffff8000493c:	6a 78                	push   $0x78
ffffffff8000493e:	e9 52 fb ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004943:	0f 0b                	ud2    

ffffffff80004945 <interrupt_handle_0x79>:
ffffffff80004945:	f3 0f 1e fa          	endbr64 
ffffffff80004949:	6a 79                	push   $0x79
ffffffff8000494b:	e9 45 fb ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004950:	0f 0b                	ud2    

ffffffff80004952 <interrupt_handle_0x7a>:
ffffffff80004952:	f3 0f 1e fa          	endbr64 
ffffffff80004956:	6a 7a                	push   $0x7a
ffffffff80004958:	e9 38 fb ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff8000495d:	0f 0b                	ud2    

ffffffff8000495f <interrupt_handle_0x7b>:
ffffffff8000495f:	f3 0f 1e fa          	endbr64 
ffffffff80004963:	6a 7b                	push   $0x7b
ffffffff80004965:	e9 2b fb ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff8000496a:	0f 0b                	ud2    

ffffffff8000496c <interrupt_handle_0x7c>:
ffffffff8000496c:	f3 0f 1e fa          	endbr64 
ffffffff80004970:	6a 7c                	push   $0x7c
ffffffff80004972:	e9 1e fb ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004977:	0f 0b                	ud2    

ffffffff80004979 <interrupt_handle_0x7d>:
ffffffff80004979:	f3 0f 1e fa          	endbr64 
ffffffff8000497d:	6a 7d                	push   $0x7d
ffffffff8000497f:	e9 11 fb ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004984:	0f 0b                	ud2    

ffffffff80004986 <interrupt_handle_0x7e>:
ffffffff80004986:	f3 0f 1e fa          	endbr64 
ffffffff8000498a:	6a 7e                	push   $0x7e
ffffffff8000498c:	e9 04 fb ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004991:	0f 0b                	ud2    

ffffffff80004993 <interrupt_handle_0x7f>:
ffffffff80004993:	f3 0f 1e fa          	endbr64 
ffffffff80004997:	6a 7f                	push   $0x7f
ffffffff80004999:	e9 f7 fa ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff8000499e:	0f 0b                	ud2    

ffffffff800049a0 <interrupt_handle_0x80>:
ffffffff800049a0:	f3 0f 1e fa          	endbr64 
ffffffff800049a4:	68 80 00 00 00       	push   $0x80
ffffffff800049a9:	e9 e7 fa ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff800049ae:	0f 0b                	ud2    

ffffffff800049b0 <interrupt_handle_0x81>:
ffffffff800049b0:	f3 0f 1e fa          	endbr64 
ffffffff800049b4:	68 81 00 00 00       	push   $0x81
ffffffff800049b9:	e9 d7 fa ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff800049be:	0f 0b                	ud2    

ffffffff800049c0 <interrupt_handle_0x82>:
ffffffff800049c0:	f3 0f 1e fa          	endbr64 
ffffffff800049c4:	68 82 00 00 00       	push   $0x82
ffffffff800049c9:	e9 c7 fa ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff800049ce:	0f 0b                	ud2    

ffffffff800049d0 <interrupt_handle_0x83>:
ffffffff800049d0:	f3 0f 1e fa          	endbr64 
ffffffff800049d4:	68 83 00 00 00       	push   $0x83
ffffffff800049d9:	e9 b7 fa ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff800049de:	0f 0b                	ud2    

ffffffff800049e0 <interrupt_handle_0x84>:
ffffffff800049e0:	f3 0f 1e fa          	endbr64 
ffffffff800049e4:	68 84 00 00 00       	push   $0x84
ffffffff800049e9:	e9 a7 fa ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff800049ee:	0f 0b                	ud2    

ffffffff800049f0 <interrupt_handle_0x85>:
ffffffff800049f0:	f3 0f 1e fa          	endbr64 
ffffffff800049f4:	68 85 00 00 00       	push   $0x85
ffffffff800049f9:	e9 97 fa ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff800049fe:	0f 0b                	ud2    

ffffffff80004a00 <interrupt_handle_0x86>:
ffffffff80004a00:	f3 0f 1e fa          	endbr64 
ffffffff80004a04:	68 86 00 00 00       	push   $0x86
ffffffff80004a09:	e9 87 fa ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004a0e:	0f 0b                	ud2    

ffffffff80004a10 <interrupt_handle_0x87>:
ffffffff80004a10:	f3 0f 1e fa          	endbr64 
ffffffff80004a14:	68 87 00 00 00       	push   $0x87
ffffffff80004a19:	e9 77 fa ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004a1e:	0f 0b                	ud2    

ffffffff80004a20 <interrupt_handle_0x88>:
ffffffff80004a20:	f3 0f 1e fa          	endbr64 
ffffffff80004a24:	68 88 00 00 00       	push   $0x88
ffffffff80004a29:	e9 67 fa ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004a2e:	0f 0b                	ud2    

ffffffff80004a30 <interrupt_handle_0x89>:
ffffffff80004a30:	f3 0f 1e fa          	endbr64 
ffffffff80004a34:	68 89 00 00 00       	push   $0x89
ffffffff80004a39:	e9 57 fa ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004a3e:	0f 0b                	ud2    

ffffffff80004a40 <interrupt_handle_0x8a>:
ffffffff80004a40:	f3 0f 1e fa          	endbr64 
ffffffff80004a44:	68 8a 00 00 00       	push   $0x8a
ffffffff80004a49:	e9 47 fa ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004a4e:	0f 0b                	ud2    

ffffffff80004a50 <interrupt_handle_0x8b>:
ffffffff80004a50:	f3 0f 1e fa          	endbr64 
ffffffff80004a54:	68 8b 00 00 00       	push   $0x8b
ffffffff80004a59:	e9 37 fa ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004a5e:	0f 0b                	ud2    

ffffffff80004a60 <interrupt_handle_0x8c>:
ffffffff80004a60:	f3 0f 1e fa          	endbr64 
ffffffff80004a64:	68 8c 00 00 00       	push   $0x8c
ffffffff80004a69:	e9 27 fa ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004a6e:	0f 0b                	ud2    

ffffffff80004a70 <interrupt_handle_0x8d>:
ffffffff80004a70:	f3 0f 1e fa          	endbr64 
ffffffff80004a74:	68 8d 00 00 00       	push   $0x8d
ffffffff80004a79:	e9 17 fa ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004a7e:	0f 0b                	ud2    

ffffffff80004a80 <interrupt_handle_0x8e>:
ffffffff80004a80:	f3 0f 1e fa          	endbr64 
ffffffff80004a84:	68 8e 00 00 00       	push   $0x8e
ffffffff80004a89:	e9 07 fa ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004a8e:	0f 0b                	ud2    

ffffffff80004a90 <interrupt_handle_0x8f>:
ffffffff80004a90:	f3 0f 1e fa          	endbr64 
ffffffff80004a94:	68 8f 00 00 00       	push   $0x8f
ffffffff80004a99:	e9 f7 f9 ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004a9e:	0f 0b                	ud2    

ffffffff80004aa0 <interrupt_handle_0x90>:
ffffffff80004aa0:	f3 0f 1e fa          	endbr64 
ffffffff80004aa4:	68 90 00 00 00       	push   $0x90
ffffffff80004aa9:	e9 e7 f9 ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004aae:	0f 0b                	ud2    

ffffffff80004ab0 <interrupt_handle_0x91>:
ffffffff80004ab0:	f3 0f 1e fa          	endbr64 
ffffffff80004ab4:	68 91 00 00 00       	push   $0x91
ffffffff80004ab9:	e9 d7 f9 ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004abe:	0f 0b                	ud2    

ffffffff80004ac0 <interrupt_handle_0x92>:
ffffffff80004ac0:	f3 0f 1e fa          	endbr64 
ffffffff80004ac4:	68 92 00 00 00       	push   $0x92
ffffffff80004ac9:	e9 c7 f9 ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004ace:	0f 0b                	ud2    

ffffffff80004ad0 <interrupt_handle_0x93>:
ffffffff80004ad0:	f3 0f 1e fa          	endbr64 
ffffffff80004ad4:	68 93 00 00 00       	push   $0x93
ffffffff80004ad9:	e9 b7 f9 ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004ade:	0f 0b                	ud2    

ffffffff80004ae0 <interrupt_handle_0x94>:
ffffffff80004ae0:	f3 0f 1e fa          	endbr64 
ffffffff80004ae4:	68 94 00 00 00       	push   $0x94
ffffffff80004ae9:	e9 a7 f9 ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004aee:	0f 0b                	ud2    

ffffffff80004af0 <interrupt_handle_0x95>:
ffffffff80004af0:	f3 0f 1e fa          	endbr64 
ffffffff80004af4:	68 95 00 00 00       	push   $0x95
ffffffff80004af9:	e9 97 f9 ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004afe:	0f 0b                	ud2    

ffffffff80004b00 <interrupt_handle_0x96>:
ffffffff80004b00:	f3 0f 1e fa          	endbr64 
ffffffff80004b04:	68 96 00 00 00       	push   $0x96
ffffffff80004b09:	e9 87 f9 ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004b0e:	0f 0b                	ud2    

ffffffff80004b10 <interrupt_handle_0x97>:
ffffffff80004b10:	f3 0f 1e fa          	endbr64 
ffffffff80004b14:	68 97 00 00 00       	push   $0x97
ffffffff80004b19:	e9 77 f9 ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004b1e:	0f 0b                	ud2    

ffffffff80004b20 <interrupt_handle_0x98>:
ffffffff80004b20:	f3 0f 1e fa          	endbr64 
ffffffff80004b24:	68 98 00 00 00       	push   $0x98
ffffffff80004b29:	e9 67 f9 ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004b2e:	0f 0b                	ud2    

ffffffff80004b30 <interrupt_handle_0x99>:
ffffffff80004b30:	f3 0f 1e fa          	endbr64 
ffffffff80004b34:	68 99 00 00 00       	push   $0x99
ffffffff80004b39:	e9 57 f9 ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004b3e:	0f 0b                	ud2    

ffffffff80004b40 <interrupt_handle_0x9a>:
ffffffff80004b40:	f3 0f 1e fa          	endbr64 
ffffffff80004b44:	68 9a 00 00 00       	push   $0x9a
ffffffff80004b49:	e9 47 f9 ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004b4e:	0f 0b                	ud2    

ffffffff80004b50 <interrupt_handle_0x9b>:
ffffffff80004b50:	f3 0f 1e fa          	endbr64 
ffffffff80004b54:	68 9b 00 00 00       	push   $0x9b
ffffffff80004b59:	e9 37 f9 ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004b5e:	0f 0b                	ud2    

ffffffff80004b60 <interrupt_handle_0x9c>:
ffffffff80004b60:	f3 0f 1e fa          	endbr64 
ffffffff80004b64:	68 9c 00 00 00       	push   $0x9c
ffffffff80004b69:	e9 27 f9 ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004b6e:	0f 0b                	ud2    

ffffffff80004b70 <interrupt_handle_0x9d>:
ffffffff80004b70:	f3 0f 1e fa          	endbr64 
ffffffff80004b74:	68 9d 00 00 00       	push   $0x9d
ffffffff80004b79:	e9 17 f9 ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004b7e:	0f 0b                	ud2    

ffffffff80004b80 <interrupt_handle_0x9e>:
ffffffff80004b80:	f3 0f 1e fa          	endbr64 
ffffffff80004b84:	68 9e 00 00 00       	push   $0x9e
ffffffff80004b89:	e9 07 f9 ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004b8e:	0f 0b                	ud2    

ffffffff80004b90 <interrupt_handle_0x9f>:
ffffffff80004b90:	f3 0f 1e fa          	endbr64 
ffffffff80004b94:	68 9f 00 00 00       	push   $0x9f
ffffffff80004b99:	e9 f7 f8 ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004b9e:	0f 0b                	ud2    

ffffffff80004ba0 <interrupt_handle_0xa0>:
ffffffff80004ba0:	f3 0f 1e fa          	endbr64 
ffffffff80004ba4:	68 a0 00 00 00       	push   $0xa0
ffffffff80004ba9:	e9 e7 f8 ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004bae:	0f 0b                	ud2    

ffffffff80004bb0 <interrupt_handle_0xa1>:
ffffffff80004bb0:	f3 0f 1e fa          	endbr64 
ffffffff80004bb4:	68 a1 00 00 00       	push   $0xa1
ffffffff80004bb9:	e9 d7 f8 ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004bbe:	0f 0b                	ud2    

ffffffff80004bc0 <interrupt_handle_0xa2>:
ffffffff80004bc0:	f3 0f 1e fa          	endbr64 
ffffffff80004bc4:	68 a2 00 00 00       	push   $0xa2
ffffffff80004bc9:	e9 c7 f8 ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004bce:	0f 0b                	ud2    

ffffffff80004bd0 <interrupt_handle_0xa3>:
ffffffff80004bd0:	f3 0f 1e fa          	endbr64 
ffffffff80004bd4:	68 a3 00 00 00       	push   $0xa3
ffffffff80004bd9:	e9 b7 f8 ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004bde:	0f 0b                	ud2    

ffffffff80004be0 <interrupt_handle_0xa4>:
ffffffff80004be0:	f3 0f 1e fa          	endbr64 
ffffffff80004be4:	68 a4 00 00 00       	push   $0xa4
ffffffff80004be9:	e9 a7 f8 ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004bee:	0f 0b                	ud2    

ffffffff80004bf0 <interrupt_handle_0xa5>:
ffffffff80004bf0:	f3 0f 1e fa          	endbr64 
ffffffff80004bf4:	68 a5 00 00 00       	push   $0xa5
ffffffff80004bf9:	e9 97 f8 ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004bfe:	0f 0b                	ud2    

ffffffff80004c00 <interrupt_handle_0xa6>:
ffffffff80004c00:	f3 0f 1e fa          	endbr64 
ffffffff80004c04:	68 a6 00 00 00       	push   $0xa6
ffffffff80004c09:	e9 87 f8 ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004c0e:	0f 0b                	ud2    

ffffffff80004c10 <interrupt_handle_0xa7>:
ffffffff80004c10:	f3 0f 1e fa          	endbr64 
ffffffff80004c14:	68 a7 00 00 00       	push   $0xa7
ffffffff80004c19:	e9 77 f8 ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004c1e:	0f 0b                	ud2    

ffffffff80004c20 <interrupt_handle_0xa8>:
ffffffff80004c20:	f3 0f 1e fa          	endbr64 
ffffffff80004c24:	68 a8 00 00 00       	push   $0xa8
ffffffff80004c29:	e9 67 f8 ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004c2e:	0f 0b                	ud2    

ffffffff80004c30 <interrupt_handle_0xa9>:
ffffffff80004c30:	f3 0f 1e fa          	endbr64 
ffffffff80004c34:	68 a9 00 00 00       	push   $0xa9
ffffffff80004c39:	e9 57 f8 ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004c3e:	0f 0b                	ud2    

ffffffff80004c40 <interrupt_handle_0xaa>:
ffffffff80004c40:	f3 0f 1e fa          	endbr64 
ffffffff80004c44:	68 aa 00 00 00       	push   $0xaa
ffffffff80004c49:	e9 47 f8 ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004c4e:	0f 0b                	ud2    

ffffffff80004c50 <interrupt_handle_0xab>:
ffffffff80004c50:	f3 0f 1e fa          	endbr64 
ffffffff80004c54:	68 ab 00 00 00       	push   $0xab
ffffffff80004c59:	e9 37 f8 ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004c5e:	0f 0b                	ud2    

ffffffff80004c60 <interrupt_handle_0xac>:
ffffffff80004c60:	f3 0f 1e fa          	endbr64 
ffffffff80004c64:	68 ac 00 00 00       	push   $0xac
ffffffff80004c69:	e9 27 f8 ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004c6e:	0f 0b                	ud2    

ffffffff80004c70 <interrupt_handle_0xad>:
ffffffff80004c70:	f3 0f 1e fa          	endbr64 
ffffffff80004c74:	68 ad 00 00 00       	push   $0xad
ffffffff80004c79:	e9 17 f8 ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004c7e:	0f 0b                	ud2    

ffffffff80004c80 <interrupt_handle_0xae>:
ffffffff80004c80:	f3 0f 1e fa          	endbr64 
ffffffff80004c84:	68 ae 00 00 00       	push   $0xae
ffffffff80004c89:	e9 07 f8 ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004c8e:	0f 0b                	ud2    

ffffffff80004c90 <interrupt_handle_0xaf>:
ffffffff80004c90:	f3 0f 1e fa          	endbr64 
ffffffff80004c94:	68 af 00 00 00       	push   $0xaf
ffffffff80004c99:	e9 f7 f7 ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004c9e:	0f 0b                	ud2    

ffffffff80004ca0 <interrupt_handle_0xb0>:
ffffffff80004ca0:	f3 0f 1e fa          	endbr64 
ffffffff80004ca4:	68 b0 00 00 00       	push   $0xb0
ffffffff80004ca9:	e9 e7 f7 ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004cae:	0f 0b                	ud2    

ffffffff80004cb0 <interrupt_handle_0xb1>:
ffffffff80004cb0:	f3 0f 1e fa          	endbr64 
ffffffff80004cb4:	68 b1 00 00 00       	push   $0xb1
ffffffff80004cb9:	e9 d7 f7 ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004cbe:	0f 0b                	ud2    

ffffffff80004cc0 <interrupt_handle_0xb2>:
ffffffff80004cc0:	f3 0f 1e fa          	endbr64 
ffffffff80004cc4:	68 b2 00 00 00       	push   $0xb2
ffffffff80004cc9:	e9 c7 f7 ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004cce:	0f 0b                	ud2    

ffffffff80004cd0 <interrupt_handle_0xb3>:
ffffffff80004cd0:	f3 0f 1e fa          	endbr64 
ffffffff80004cd4:	68 b3 00 00 00       	push   $0xb3
ffffffff80004cd9:	e9 b7 f7 ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004cde:	0f 0b                	ud2    

ffffffff80004ce0 <interrupt_handle_0xb4>:
ffffffff80004ce0:	f3 0f 1e fa          	endbr64 
ffffffff80004ce4:	68 b4 00 00 00       	push   $0xb4
ffffffff80004ce9:	e9 a7 f7 ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004cee:	0f 0b                	ud2    

ffffffff80004cf0 <interrupt_handle_0xb5>:
ffffffff80004cf0:	f3 0f 1e fa          	endbr64 
ffffffff80004cf4:	68 b5 00 00 00       	push   $0xb5
ffffffff80004cf9:	e9 97 f7 ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004cfe:	0f 0b                	ud2    

ffffffff80004d00 <interrupt_handle_0xb6>:
ffffffff80004d00:	f3 0f 1e fa          	endbr64 
ffffffff80004d04:	68 b6 00 00 00       	push   $0xb6
ffffffff80004d09:	e9 87 f7 ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004d0e:	0f 0b                	ud2    

ffffffff80004d10 <interrupt_handle_0xb7>:
ffffffff80004d10:	f3 0f 1e fa          	endbr64 
ffffffff80004d14:	68 b7 00 00 00       	push   $0xb7
ffffffff80004d19:	e9 77 f7 ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004d1e:	0f 0b                	ud2    

ffffffff80004d20 <interrupt_handle_0xb8>:
ffffffff80004d20:	f3 0f 1e fa          	endbr64 
ffffffff80004d24:	68 b8 00 00 00       	push   $0xb8
ffffffff80004d29:	e9 67 f7 ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004d2e:	0f 0b                	ud2    

ffffffff80004d30 <interrupt_handle_0xb9>:
ffffffff80004d30:	f3 0f 1e fa          	endbr64 
ffffffff80004d34:	68 b9 00 00 00       	push   $0xb9
ffffffff80004d39:	e9 57 f7 ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004d3e:	0f 0b                	ud2    

ffffffff80004d40 <interrupt_handle_0xba>:
ffffffff80004d40:	f3 0f 1e fa          	endbr64 
ffffffff80004d44:	68 ba 00 00 00       	push   $0xba
ffffffff80004d49:	e9 47 f7 ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004d4e:	0f 0b                	ud2    

ffffffff80004d50 <interrupt_handle_0xbb>:
ffffffff80004d50:	f3 0f 1e fa          	endbr64 
ffffffff80004d54:	68 bb 00 00 00       	push   $0xbb
ffffffff80004d59:	e9 37 f7 ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004d5e:	0f 0b                	ud2    

ffffffff80004d60 <interrupt_handle_0xbc>:
ffffffff80004d60:	f3 0f 1e fa          	endbr64 
ffffffff80004d64:	68 bc 00 00 00       	push   $0xbc
ffffffff80004d69:	e9 27 f7 ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004d6e:	0f 0b                	ud2    

ffffffff80004d70 <interrupt_handle_0xbd>:
ffffffff80004d70:	f3 0f 1e fa          	endbr64 
ffffffff80004d74:	68 bd 00 00 00       	push   $0xbd
ffffffff80004d79:	e9 17 f7 ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004d7e:	0f 0b                	ud2    

ffffffff80004d80 <interrupt_handle_0xbe>:
ffffffff80004d80:	f3 0f 1e fa          	endbr64 
ffffffff80004d84:	68 be 00 00 00       	push   $0xbe
ffffffff80004d89:	e9 07 f7 ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004d8e:	0f 0b                	ud2    

ffffffff80004d90 <interrupt_handle_0xbf>:
ffffffff80004d90:	f3 0f 1e fa          	endbr64 
ffffffff80004d94:	68 bf 00 00 00       	push   $0xbf
ffffffff80004d99:	e9 f7 f6 ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004d9e:	0f 0b                	ud2    

ffffffff80004da0 <interrupt_handle_0xc0>:
ffffffff80004da0:	f3 0f 1e fa          	endbr64 
ffffffff80004da4:	68 c0 00 00 00       	push   $0xc0
ffffffff80004da9:	e9 e7 f6 ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004dae:	0f 0b                	ud2    

ffffffff80004db0 <interrupt_handle_0xc1>:
ffffffff80004db0:	f3 0f 1e fa          	endbr64 
ffffffff80004db4:	68 c1 00 00 00       	push   $0xc1
ffffffff80004db9:	e9 d7 f6 ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004dbe:	0f 0b                	ud2    

ffffffff80004dc0 <interrupt_handle_0xc2>:
ffffffff80004dc0:	f3 0f 1e fa          	endbr64 
ffffffff80004dc4:	68 c2 00 00 00       	push   $0xc2
ffffffff80004dc9:	e9 c7 f6 ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004dce:	0f 0b                	ud2    

ffffffff80004dd0 <interrupt_handle_0xc3>:
ffffffff80004dd0:	f3 0f 1e fa          	endbr64 
ffffffff80004dd4:	68 c3 00 00 00       	push   $0xc3
ffffffff80004dd9:	e9 b7 f6 ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004dde:	0f 0b                	ud2    

ffffffff80004de0 <interrupt_handle_0xc4>:
ffffffff80004de0:	f3 0f 1e fa          	endbr64 
ffffffff80004de4:	68 c4 00 00 00       	push   $0xc4
ffffffff80004de9:	e9 a7 f6 ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004dee:	0f 0b                	ud2    

ffffffff80004df0 <interrupt_handle_0xc5>:
ffffffff80004df0:	f3 0f 1e fa          	endbr64 
ffffffff80004df4:	68 c5 00 00 00       	push   $0xc5
ffffffff80004df9:	e9 97 f6 ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004dfe:	0f 0b                	ud2    

ffffffff80004e00 <interrupt_handle_0xc6>:
ffffffff80004e00:	f3 0f 1e fa          	endbr64 
ffffffff80004e04:	68 c6 00 00 00       	push   $0xc6
ffffffff80004e09:	e9 87 f6 ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004e0e:	0f 0b                	ud2    

ffffffff80004e10 <interrupt_handle_0xc7>:
ffffffff80004e10:	f3 0f 1e fa          	endbr64 
ffffffff80004e14:	68 c7 00 00 00       	push   $0xc7
ffffffff80004e19:	e9 77 f6 ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004e1e:	0f 0b                	ud2    

ffffffff80004e20 <interrupt_handle_0xc8>:
ffffffff80004e20:	f3 0f 1e fa          	endbr64 
ffffffff80004e24:	68 c8 00 00 00       	push   $0xc8
ffffffff80004e29:	e9 67 f6 ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004e2e:	0f 0b                	ud2    

ffffffff80004e30 <interrupt_handle_0xc9>:
ffffffff80004e30:	f3 0f 1e fa          	endbr64 
ffffffff80004e34:	68 c9 00 00 00       	push   $0xc9
ffffffff80004e39:	e9 57 f6 ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004e3e:	0f 0b                	ud2    

ffffffff80004e40 <interrupt_handle_0xca>:
ffffffff80004e40:	f3 0f 1e fa          	endbr64 
ffffffff80004e44:	68 ca 00 00 00       	push   $0xca
ffffffff80004e49:	e9 47 f6 ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004e4e:	0f 0b                	ud2    

ffffffff80004e50 <interrupt_handle_0xcb>:
ffffffff80004e50:	f3 0f 1e fa          	endbr64 
ffffffff80004e54:	68 cb 00 00 00       	push   $0xcb
ffffffff80004e59:	e9 37 f6 ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004e5e:	0f 0b                	ud2    

ffffffff80004e60 <interrupt_handle_0xcc>:
ffffffff80004e60:	f3 0f 1e fa          	endbr64 
ffffffff80004e64:	68 cc 00 00 00       	push   $0xcc
ffffffff80004e69:	e9 27 f6 ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004e6e:	0f 0b                	ud2    

ffffffff80004e70 <interrupt_handle_0xcd>:
ffffffff80004e70:	f3 0f 1e fa          	endbr64 
ffffffff80004e74:	68 cd 00 00 00       	push   $0xcd
ffffffff80004e79:	e9 17 f6 ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004e7e:	0f 0b                	ud2    

ffffffff80004e80 <interrupt_handle_0xce>:
ffffffff80004e80:	f3 0f 1e fa          	endbr64 
ffffffff80004e84:	68 ce 00 00 00       	push   $0xce
ffffffff80004e89:	e9 07 f6 ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004e8e:	0f 0b                	ud2    

ffffffff80004e90 <interrupt_handle_0xcf>:
ffffffff80004e90:	f3 0f 1e fa          	endbr64 
ffffffff80004e94:	68 cf 00 00 00       	push   $0xcf
ffffffff80004e99:	e9 f7 f5 ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004e9e:	0f 0b                	ud2    

ffffffff80004ea0 <interrupt_handle_0xd0>:
ffffffff80004ea0:	f3 0f 1e fa          	endbr64 
ffffffff80004ea4:	68 d0 00 00 00       	push   $0xd0
ffffffff80004ea9:	e9 e7 f5 ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004eae:	0f 0b                	ud2    

ffffffff80004eb0 <interrupt_handle_0xd1>:
ffffffff80004eb0:	f3 0f 1e fa          	endbr64 
ffffffff80004eb4:	68 d1 00 00 00       	push   $0xd1
ffffffff80004eb9:	e9 d7 f5 ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004ebe:	0f 0b                	ud2    

ffffffff80004ec0 <interrupt_handle_0xd2>:
ffffffff80004ec0:	f3 0f 1e fa          	endbr64 
ffffffff80004ec4:	68 d2 00 00 00       	push   $0xd2
ffffffff80004ec9:	e9 c7 f5 ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004ece:	0f 0b                	ud2    

ffffffff80004ed0 <interrupt_handle_0xd3>:
ffffffff80004ed0:	f3 0f 1e fa          	endbr64 
ffffffff80004ed4:	68 d3 00 00 00       	push   $0xd3
ffffffff80004ed9:	e9 b7 f5 ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004ede:	0f 0b                	ud2    

ffffffff80004ee0 <interrupt_handle_0xd4>:
ffffffff80004ee0:	f3 0f 1e fa          	endbr64 
ffffffff80004ee4:	68 d4 00 00 00       	push   $0xd4
ffffffff80004ee9:	e9 a7 f5 ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004eee:	0f 0b                	ud2    

ffffffff80004ef0 <interrupt_handle_0xd5>:
ffffffff80004ef0:	f3 0f 1e fa          	endbr64 
ffffffff80004ef4:	68 d5 00 00 00       	push   $0xd5
ffffffff80004ef9:	e9 97 f5 ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004efe:	0f 0b                	ud2    

ffffffff80004f00 <interrupt_handle_0xd6>:
ffffffff80004f00:	f3 0f 1e fa          	endbr64 
ffffffff80004f04:	68 d6 00 00 00       	push   $0xd6
ffffffff80004f09:	e9 87 f5 ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004f0e:	0f 0b                	ud2    

ffffffff80004f10 <interrupt_handle_0xd7>:
ffffffff80004f10:	f3 0f 1e fa          	endbr64 
ffffffff80004f14:	68 d7 00 00 00       	push   $0xd7
ffffffff80004f19:	e9 77 f5 ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004f1e:	0f 0b                	ud2    

ffffffff80004f20 <interrupt_handle_0xd8>:
ffffffff80004f20:	f3 0f 1e fa          	endbr64 
ffffffff80004f24:	68 d8 00 00 00       	push   $0xd8
ffffffff80004f29:	e9 67 f5 ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004f2e:	0f 0b                	ud2    

ffffffff80004f30 <interrupt_handle_0xd9>:
ffffffff80004f30:	f3 0f 1e fa          	endbr64 
ffffffff80004f34:	68 d9 00 00 00       	push   $0xd9
ffffffff80004f39:	e9 57 f5 ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004f3e:	0f 0b                	ud2    

ffffffff80004f40 <interrupt_handle_0xda>:
ffffffff80004f40:	f3 0f 1e fa          	endbr64 
ffffffff80004f44:	68 da 00 00 00       	push   $0xda
ffffffff80004f49:	e9 47 f5 ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004f4e:	0f 0b                	ud2    

ffffffff80004f50 <interrupt_handle_0xdb>:
ffffffff80004f50:	f3 0f 1e fa          	endbr64 
ffffffff80004f54:	68 db 00 00 00       	push   $0xdb
ffffffff80004f59:	e9 37 f5 ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004f5e:	0f 0b                	ud2    

ffffffff80004f60 <interrupt_handle_0xdc>:
ffffffff80004f60:	f3 0f 1e fa          	endbr64 
ffffffff80004f64:	68 dc 00 00 00       	push   $0xdc
ffffffff80004f69:	e9 27 f5 ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004f6e:	0f 0b                	ud2    

ffffffff80004f70 <interrupt_handle_0xdd>:
ffffffff80004f70:	f3 0f 1e fa          	endbr64 
ffffffff80004f74:	68 dd 00 00 00       	push   $0xdd
ffffffff80004f79:	e9 17 f5 ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004f7e:	0f 0b                	ud2    

ffffffff80004f80 <interrupt_handle_0xde>:
ffffffff80004f80:	f3 0f 1e fa          	endbr64 
ffffffff80004f84:	68 de 00 00 00       	push   $0xde
ffffffff80004f89:	e9 07 f5 ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004f8e:	0f 0b                	ud2    

ffffffff80004f90 <interrupt_handle_0xdf>:
ffffffff80004f90:	f3 0f 1e fa          	endbr64 
ffffffff80004f94:	68 df 00 00 00       	push   $0xdf
ffffffff80004f99:	e9 f7 f4 ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004f9e:	0f 0b                	ud2    

ffffffff80004fa0 <interrupt_handle_0xe0>:
ffffffff80004fa0:	f3 0f 1e fa          	endbr64 
ffffffff80004fa4:	68 e0 00 00 00       	push   $0xe0
ffffffff80004fa9:	e9 e7 f4 ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004fae:	0f 0b                	ud2    

ffffffff80004fb0 <interrupt_handle_0xe1>:
ffffffff80004fb0:	f3 0f 1e fa          	endbr64 
ffffffff80004fb4:	68 e1 00 00 00       	push   $0xe1
ffffffff80004fb9:	e9 d7 f4 ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004fbe:	0f 0b                	ud2    

ffffffff80004fc0 <interrupt_handle_0xe2>:
ffffffff80004fc0:	f3 0f 1e fa          	endbr64 
ffffffff80004fc4:	68 e2 00 00 00       	push   $0xe2
ffffffff80004fc9:	e9 c7 f4 ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004fce:	0f 0b                	ud2    

ffffffff80004fd0 <interrupt_handle_0xe3>:
ffffffff80004fd0:	f3 0f 1e fa          	endbr64 
ffffffff80004fd4:	68 e3 00 00 00       	push   $0xe3
ffffffff80004fd9:	e9 b7 f4 ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004fde:	0f 0b                	ud2    

ffffffff80004fe0 <interrupt_handle_0xe4>:
ffffffff80004fe0:	f3 0f 1e fa          	endbr64 
ffffffff80004fe4:	68 e4 00 00 00       	push   $0xe4
ffffffff80004fe9:	e9 a7 f4 ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004fee:	0f 0b                	ud2    

ffffffff80004ff0 <interrupt_handle_0xe5>:
ffffffff80004ff0:	f3 0f 1e fa          	endbr64 
ffffffff80004ff4:	68 e5 00 00 00       	push   $0xe5
ffffffff80004ff9:	e9 97 f4 ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff80004ffe:	0f 0b                	ud2    

ffffffff80005000 <interrupt_handle_0xe6>:
ffffffff80005000:	f3 0f 1e fa          	endbr64 
ffffffff80005004:	68 e6 00 00 00       	push   $0xe6
ffffffff80005009:	e9 87 f4 ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff8000500e:	0f 0b                	ud2    

ffffffff80005010 <interrupt_handle_0xe7>:
ffffffff80005010:	f3 0f 1e fa          	endbr64 
ffffffff80005014:	68 e7 00 00 00       	push   $0xe7
ffffffff80005019:	e9 77 f4 ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff8000501e:	0f 0b                	ud2    

ffffffff80005020 <interrupt_handle_0xe8>:
ffffffff80005020:	f3 0f 1e fa          	endbr64 
ffffffff80005024:	68 e8 00 00 00       	push   $0xe8
ffffffff80005029:	e9 67 f4 ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff8000502e:	0f 0b                	ud2    

ffffffff80005030 <interrupt_handle_0xe9>:
ffffffff80005030:	f3 0f 1e fa          	endbr64 
ffffffff80005034:	68 e9 00 00 00       	push   $0xe9
ffffffff80005039:	e9 57 f4 ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff8000503e:	0f 0b                	ud2    

ffffffff80005040 <interrupt_handle_0xea>:
ffffffff80005040:	f3 0f 1e fa          	endbr64 
ffffffff80005044:	68 ea 00 00 00       	push   $0xea
ffffffff80005049:	e9 47 f4 ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff8000504e:	0f 0b                	ud2    

ffffffff80005050 <interrupt_handle_0xeb>:
ffffffff80005050:	f3 0f 1e fa          	endbr64 
ffffffff80005054:	68 eb 00 00 00       	push   $0xeb
ffffffff80005059:	e9 37 f4 ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff8000505e:	0f 0b                	ud2    

ffffffff80005060 <interrupt_handle_0xec>:
ffffffff80005060:	f3 0f 1e fa          	endbr64 
ffffffff80005064:	68 ec 00 00 00       	push   $0xec
ffffffff80005069:	e9 27 f4 ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff8000506e:	0f 0b                	ud2    

ffffffff80005070 <interrupt_handle_0xed>:
ffffffff80005070:	f3 0f 1e fa          	endbr64 
ffffffff80005074:	68 ed 00 00 00       	push   $0xed
ffffffff80005079:	e9 17 f4 ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff8000507e:	0f 0b                	ud2    

ffffffff80005080 <interrupt_handle_0xee>:
ffffffff80005080:	f3 0f 1e fa          	endbr64 
ffffffff80005084:	68 ee 00 00 00       	push   $0xee
ffffffff80005089:	e9 07 f4 ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff8000508e:	0f 0b                	ud2    

ffffffff80005090 <interrupt_handle_0xef>:
ffffffff80005090:	f3 0f 1e fa          	endbr64 
ffffffff80005094:	68 ef 00 00 00       	push   $0xef
ffffffff80005099:	e9 f7 f3 ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff8000509e:	0f 0b                	ud2    

ffffffff800050a0 <interrupt_handle_0xf0>:
ffffffff800050a0:	f3 0f 1e fa          	endbr64 
ffffffff800050a4:	68 f0 00 00 00       	push   $0xf0
ffffffff800050a9:	e9 e7 f3 ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff800050ae:	0f 0b                	ud2    

ffffffff800050b0 <interrupt_handle_0xf1>:
ffffffff800050b0:	f3 0f 1e fa          	endbr64 
ffffffff800050b4:	68 f1 00 00 00       	push   $0xf1
ffffffff800050b9:	e9 d7 f3 ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff800050be:	0f 0b                	ud2    

ffffffff800050c0 <interrupt_handle_0xf2>:
ffffffff800050c0:	f3 0f 1e fa          	endbr64 
ffffffff800050c4:	68 f2 00 00 00       	push   $0xf2
ffffffff800050c9:	e9 c7 f3 ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff800050ce:	0f 0b                	ud2    

ffffffff800050d0 <interrupt_handle_0xf3>:
ffffffff800050d0:	f3 0f 1e fa          	endbr64 
ffffffff800050d4:	68 f3 00 00 00       	push   $0xf3
ffffffff800050d9:	e9 b7 f3 ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff800050de:	0f 0b                	ud2    

ffffffff800050e0 <interrupt_handle_0xf4>:
ffffffff800050e0:	f3 0f 1e fa          	endbr64 
ffffffff800050e4:	68 f4 00 00 00       	push   $0xf4
ffffffff800050e9:	e9 a7 f3 ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff800050ee:	0f 0b                	ud2    

ffffffff800050f0 <interrupt_handle_0xf5>:
ffffffff800050f0:	f3 0f 1e fa          	endbr64 
ffffffff800050f4:	68 f5 00 00 00       	push   $0xf5
ffffffff800050f9:	e9 97 f3 ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff800050fe:	0f 0b                	ud2    

ffffffff80005100 <interrupt_handle_0xf6>:
ffffffff80005100:	f3 0f 1e fa          	endbr64 
ffffffff80005104:	68 f6 00 00 00       	push   $0xf6
ffffffff80005109:	e9 87 f3 ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff8000510e:	0f 0b                	ud2    

ffffffff80005110 <interrupt_handle_0xf7>:
ffffffff80005110:	f3 0f 1e fa          	endbr64 
ffffffff80005114:	68 f7 00 00 00       	push   $0xf7
ffffffff80005119:	e9 77 f3 ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff8000511e:	0f 0b                	ud2    

ffffffff80005120 <interrupt_handle_0xf8>:
ffffffff80005120:	f3 0f 1e fa          	endbr64 
ffffffff80005124:	68 f8 00 00 00       	push   $0xf8
ffffffff80005129:	e9 67 f3 ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff8000512e:	0f 0b                	ud2    

ffffffff80005130 <interrupt_handle_0xf9>:
ffffffff80005130:	f3 0f 1e fa          	endbr64 
ffffffff80005134:	68 f9 00 00 00       	push   $0xf9
ffffffff80005139:	e9 57 f3 ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff8000513e:	0f 0b                	ud2    

ffffffff80005140 <interrupt_handle_0xfa>:
ffffffff80005140:	f3 0f 1e fa          	endbr64 
ffffffff80005144:	68 fa 00 00 00       	push   $0xfa
ffffffff80005149:	e9 47 f3 ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff8000514e:	0f 0b                	ud2    

ffffffff80005150 <interrupt_handle_0xfb>:
ffffffff80005150:	f3 0f 1e fa          	endbr64 
ffffffff80005154:	68 fb 00 00 00       	push   $0xfb
ffffffff80005159:	e9 37 f3 ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff8000515e:	0f 0b                	ud2    

ffffffff80005160 <interrupt_handle_0xfc>:
ffffffff80005160:	f3 0f 1e fa          	endbr64 
ffffffff80005164:	68 fc 00 00 00       	push   $0xfc
ffffffff80005169:	e9 27 f3 ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff8000516e:	0f 0b                	ud2    

ffffffff80005170 <interrupt_handle_0xfd>:
ffffffff80005170:	f3 0f 1e fa          	endbr64 
ffffffff80005174:	68 fd 00 00 00       	push   $0xfd
ffffffff80005179:	e9 17 f3 ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff8000517e:	0f 0b                	ud2    

ffffffff80005180 <interrupt_handle_0xfe>:
ffffffff80005180:	f3 0f 1e fa          	endbr64 
ffffffff80005184:	68 fe 00 00 00       	push   $0xfe
ffffffff80005189:	e9 07 f3 ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff8000518e:	0f 0b                	ud2    

ffffffff80005190 <interrupt_handle_0xff>:
ffffffff80005190:	f3 0f 1e fa          	endbr64 
ffffffff80005194:	68 ff 00 00 00       	push   $0xff
ffffffff80005199:	e9 f7 f2 ff ff       	jmp    ffffffff80004495 <common_interrupt_stub>
ffffffff8000519e:	0f 0b                	ud2    

ffffffff800051a0 <common_interrupt_handler>:
ffffffff800051a0:	f3 0f 1e fa          	endbr64 
ffffffff800051a4:	55                   	push   %rbp
ffffffff800051a5:	48 89 e5             	mov    %rsp,%rbp
ffffffff800051a8:	53                   	push   %rbx
ffffffff800051a9:	48 83 ec 28          	sub    $0x28,%rsp
ffffffff800051ad:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
ffffffff800051b1:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
ffffffff800051b8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff800051bc:	48 8b 40 78          	mov    0x78(%rax),%rax
ffffffff800051c0:	48 3d f3 00 00 00    	cmp    $0xf3,%rax
ffffffff800051c6:	0f 84 87 00 00 00    	je     ffffffff80005253 <common_interrupt_handler+0xb3>
ffffffff800051cc:	48 3d f3 00 00 00    	cmp    $0xf3,%rax
ffffffff800051d2:	0f 87 89 00 00 00    	ja     ffffffff80005261 <common_interrupt_handler+0xc1>
ffffffff800051d8:	48 3d f2 00 00 00    	cmp    $0xf2,%rax
ffffffff800051de:	74 65                	je     ffffffff80005245 <common_interrupt_handler+0xa5>
ffffffff800051e0:	48 3d f2 00 00 00    	cmp    $0xf2,%rax
ffffffff800051e6:	77 79                	ja     ffffffff80005261 <common_interrupt_handler+0xc1>
ffffffff800051e8:	48 3d f1 00 00 00    	cmp    $0xf1,%rax
ffffffff800051ee:	74 44                	je     ffffffff80005234 <common_interrupt_handler+0x94>
ffffffff800051f0:	48 3d f1 00 00 00    	cmp    $0xf1,%rax
ffffffff800051f6:	77 69                	ja     ffffffff80005261 <common_interrupt_handler+0xc1>
ffffffff800051f8:	48 83 f8 60          	cmp    $0x60,%rax
ffffffff800051fc:	74 0a                	je     ffffffff80005208 <common_interrupt_handler+0x68>
ffffffff800051fe:	48 3d f0 00 00 00    	cmp    $0xf0,%rax
ffffffff80005204:	74 1d                	je     ffffffff80005223 <common_interrupt_handler+0x83>
ffffffff80005206:	eb 59                	jmp    ffffffff80005261 <common_interrupt_handler+0xc1>
ffffffff80005208:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8000520c:	48 89 c7             	mov    %rax,%rdi
ffffffff8000520f:	e8 6f fe 00 00       	call   ffffffff80015083 <scheduler_on_schedule>
ffffffff80005214:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80005219:	e8 37 1a 00 00       	call   ffffffff80006c55 <lapic_eoi>
ffffffff8000521e:	e9 af 00 00 00       	jmp    ffffffff800052d2 <common_interrupt_handler+0x132>
ffffffff80005223:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80005227:	48 89 c7             	mov    %rax,%rdi
ffffffff8000522a:	e8 54 fe 00 00       	call   ffffffff80015083 <scheduler_on_schedule>
ffffffff8000522f:	e9 9e 00 00 00       	jmp    ffffffff800052d2 <common_interrupt_handler+0x132>
ffffffff80005234:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80005238:	48 89 c7             	mov    %rax,%rdi
ffffffff8000523b:	e8 3b ff 00 00       	call   ffffffff8001517b <scheduler_on_yield>
ffffffff80005240:	e9 8d 00 00 00       	jmp    ffffffff800052d2 <common_interrupt_handler+0x132>
ffffffff80005245:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80005249:	48 89 c7             	mov    %rax,%rdi
ffffffff8000524c:	e8 ec ff 00 00       	call   ffffffff8001523d <scheduler_on_park>
ffffffff80005251:	eb 7f                	jmp    ffffffff800052d2 <common_interrupt_handler+0x132>
ffffffff80005253:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80005257:	48 89 c7             	mov    %rax,%rdi
ffffffff8000525a:	e8 c1 00 01 00       	call   ffffffff80015320 <scheduler_on_drop>
ffffffff8000525f:	eb 71                	jmp    ffffffff800052d2 <common_interrupt_handler+0x132>
ffffffff80005261:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%rbp)
ffffffff80005268:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8000526c:	48 8b 58 78          	mov    0x78(%rax),%rbx
ffffffff80005270:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80005275:	e8 67 1a 00 00       	call   ffffffff80006ce1 <get_apic_id>
ffffffff8000527a:	48 89 da             	mov    %rbx,%rdx
ffffffff8000527d:	48 89 c6             	mov    %rax,%rsi
ffffffff80005280:	48 8d 05 51 7c 03 00 	lea    0x37c51(%rip),%rax        # ffffffff8003ced8 <g_stivale2_header+0x5ed8>
ffffffff80005287:	48 89 c7             	mov    %rax,%rdi
ffffffff8000528a:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000528f:	e8 ac e2 00 00       	call   ffffffff80013540 <printf_>
ffffffff80005294:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80005299:	e8 43 1a 00 00       	call   ffffffff80006ce1 <get_apic_id>
ffffffff8000529e:	48 89 c6             	mov    %rax,%rsi
ffffffff800052a1:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff800052a4:	41 b9 d2 02 00 00    	mov    $0x2d2,%r9d
ffffffff800052aa:	4c 8d 05 29 30 03 00 	lea    0x33029(%rip),%r8        # ffffffff800382da <g_stivale2_header+0x12da>
ffffffff800052b1:	48 8d 15 78 81 03 00 	lea    0x38178(%rip),%rdx        # ffffffff8003d430 <__FUNCTION__.0.lto_priv.3>
ffffffff800052b8:	48 89 d1             	mov    %rdx,%rcx
ffffffff800052bb:	89 c2                	mov    %eax,%edx
ffffffff800052bd:	48 8d 05 b4 74 03 00 	lea    0x374b4(%rip),%rax        # ffffffff8003c778 <g_stivale2_header+0x5778>
ffffffff800052c4:	48 89 c7             	mov    %rax,%rdi
ffffffff800052c7:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800052cc:	e8 6f e2 00 00       	call   ffffffff80013540 <printf_>
ffffffff800052d1:	90                   	nop
ffffffff800052d2:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
ffffffff800052d6:	74 03                	je     ffffffff800052db <common_interrupt_handler+0x13b>
ffffffff800052d8:	f4                   	hlt    
ffffffff800052d9:	eb fd                	jmp    ffffffff800052d8 <common_interrupt_handler+0x138>
ffffffff800052db:	90                   	nop
ffffffff800052dc:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
ffffffff800052e0:	c9                   	leave  
ffffffff800052e1:	c3                   	ret    

ffffffff800052e2 <set_idt_entry>:
ffffffff800052e2:	f3 0f 1e fa          	endbr64 
ffffffff800052e6:	55                   	push   %rbp
ffffffff800052e7:	48 89 e5             	mov    %rsp,%rbp
ffffffff800052ea:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff800052ee:	89 f8                	mov    %edi,%eax
ffffffff800052f0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff800052f4:	88 45 fc             	mov    %al,-0x4(%rbp)
ffffffff800052f7:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff800052fb:	0f b6 45 fc          	movzbl -0x4(%rbp),%eax
ffffffff800052ff:	89 d6                	mov    %edx,%esi
ffffffff80005301:	48 98                	cltq   
ffffffff80005303:	48 c1 e0 04          	shl    $0x4,%rax
ffffffff80005307:	48 89 c2             	mov    %rax,%rdx
ffffffff8000530a:	48 8d 05 af ad 2a 00 	lea    0x2aadaf(%rip),%rax        # ffffffff802b00c0 <m_idt_entries>
ffffffff80005311:	0f b7 0c 02          	movzwl (%rdx,%rax,1),%ecx
ffffffff80005315:	83 e1 00             	and    $0x0,%ecx
ffffffff80005318:	09 f1                	or     %esi,%ecx
ffffffff8000531a:	66 89 0c 02          	mov    %cx,(%rdx,%rax,1)
ffffffff8000531e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80005322:	48 c1 e8 10          	shr    $0x10,%rax
ffffffff80005326:	48 89 c1             	mov    %rax,%rcx
ffffffff80005329:	0f b6 45 fc          	movzbl -0x4(%rbp),%eax
ffffffff8000532d:	48 ba ff ff ff ff ff 	movabs $0xffffffffffff,%rdx
ffffffff80005334:	ff 00 00 
ffffffff80005337:	48 21 d1             	and    %rdx,%rcx
ffffffff8000533a:	48 98                	cltq   
ffffffff8000533c:	48 c1 e0 04          	shl    $0x4,%rax
ffffffff80005340:	48 89 c2             	mov    %rax,%rdx
ffffffff80005343:	48 8d 05 76 ad 2a 00 	lea    0x2aad76(%rip),%rax        # ffffffff802b00c0 <m_idt_entries>
ffffffff8000534a:	0f b7 f9             	movzwl %cx,%edi
ffffffff8000534d:	0f b7 74 02 06       	movzwl 0x6(%rdx,%rax,1),%esi
ffffffff80005352:	83 e6 00             	and    $0x0,%esi
ffffffff80005355:	09 fe                	or     %edi,%esi
ffffffff80005357:	66 89 74 02 06       	mov    %si,0x6(%rdx,%rax,1)
ffffffff8000535c:	48 c1 e9 10          	shr    $0x10,%rcx
ffffffff80005360:	89 ce                	mov    %ecx,%esi
ffffffff80005362:	8b 4c 02 08          	mov    0x8(%rdx,%rax,1),%ecx
ffffffff80005366:	83 e1 00             	and    $0x0,%ecx
ffffffff80005369:	09 f1                	or     %esi,%ecx
ffffffff8000536b:	89 4c 02 08          	mov    %ecx,0x8(%rdx,%rax,1)
ffffffff8000536f:	0f b6 45 fc          	movzbl -0x4(%rbp),%eax
ffffffff80005373:	48 98                	cltq   
ffffffff80005375:	48 c1 e0 04          	shl    $0x4,%rax
ffffffff80005379:	48 89 c2             	mov    %rax,%rdx
ffffffff8000537c:	48 8d 05 3d ad 2a 00 	lea    0x2aad3d(%rip),%rax        # ffffffff802b00c0 <m_idt_entries>
ffffffff80005383:	0f b6 4c 02 05       	movzbl 0x5(%rdx,%rax,1),%ecx
ffffffff80005388:	83 e1 f0             	and    $0xfffffff0,%ecx
ffffffff8000538b:	83 c9 0e             	or     $0xe,%ecx
ffffffff8000538e:	88 4c 02 05          	mov    %cl,0x5(%rdx,%rax,1)
ffffffff80005392:	0f b6 45 fc          	movzbl -0x4(%rbp),%eax
ffffffff80005396:	48 98                	cltq   
ffffffff80005398:	48 c1 e0 04          	shl    $0x4,%rax
ffffffff8000539c:	48 89 c2             	mov    %rax,%rdx
ffffffff8000539f:	48 8d 05 1a ad 2a 00 	lea    0x2aad1a(%rip),%rax        # ffffffff802b00c0 <m_idt_entries>
ffffffff800053a6:	0f b7 4c 02 02       	movzwl 0x2(%rdx,%rax,1),%ecx
ffffffff800053ab:	83 e1 00             	and    $0x0,%ecx
ffffffff800053ae:	83 c9 08             	or     $0x8,%ecx
ffffffff800053b1:	66 89 4c 02 02       	mov    %cx,0x2(%rdx,%rax,1)
ffffffff800053b6:	0f b6 45 fc          	movzbl -0x4(%rbp),%eax
ffffffff800053ba:	48 98                	cltq   
ffffffff800053bc:	48 c1 e0 04          	shl    $0x4,%rax
ffffffff800053c0:	48 89 c2             	mov    %rax,%rdx
ffffffff800053c3:	48 8d 05 f6 ac 2a 00 	lea    0x2aacf6(%rip),%rax        # ffffffff802b00c0 <m_idt_entries>
ffffffff800053ca:	0f b6 4c 02 05       	movzbl 0x5(%rdx,%rax,1),%ecx
ffffffff800053cf:	83 c9 80             	or     $0xffffff80,%ecx
ffffffff800053d2:	88 4c 02 05          	mov    %cl,0x5(%rdx,%rax,1)
ffffffff800053d6:	0f b6 45 fc          	movzbl -0x4(%rbp),%eax
ffffffff800053da:	48 98                	cltq   
ffffffff800053dc:	48 c1 e0 04          	shl    $0x4,%rax
ffffffff800053e0:	48 89 c2             	mov    %rax,%rdx
ffffffff800053e3:	48 8d 05 d6 ac 2a 00 	lea    0x2aacd6(%rip),%rax        # ffffffff802b00c0 <m_idt_entries>
ffffffff800053ea:	0f b6 4c 02 05       	movzbl 0x5(%rdx,%rax,1),%ecx
ffffffff800053ef:	83 e1 9f             	and    $0xffffff9f,%ecx
ffffffff800053f2:	88 4c 02 05          	mov    %cl,0x5(%rdx,%rax,1)
ffffffff800053f6:	0f b6 45 fc          	movzbl -0x4(%rbp),%eax
ffffffff800053fa:	48 98                	cltq   
ffffffff800053fc:	48 c1 e0 04          	shl    $0x4,%rax
ffffffff80005400:	48 89 c2             	mov    %rax,%rdx
ffffffff80005403:	48 8d 05 b6 ac 2a 00 	lea    0x2aacb6(%rip),%rax        # ffffffff802b00c0 <m_idt_entries>
ffffffff8000540a:	0f b6 4c 02 04       	movzbl 0x4(%rdx,%rax,1),%ecx
ffffffff8000540f:	83 e1 f8             	and    $0xfffffff8,%ecx
ffffffff80005412:	88 4c 02 04          	mov    %cl,0x4(%rdx,%rax,1)
ffffffff80005416:	90                   	nop
ffffffff80005417:	c9                   	leave  
ffffffff80005418:	c3                   	ret    

ffffffff80005419 <init_idt>:
ffffffff80005419:	f3 0f 1e fa          	endbr64 
ffffffff8000541d:	55                   	push   %rbp
ffffffff8000541e:	48 89 e5             	mov    %rsp,%rbp
ffffffff80005421:	48 8d 05 bb e8 ff ff 	lea    -0x1745(%rip),%rax        # ffffffff80003ce3 <interrupt_handle_0x00>
ffffffff80005428:	48 89 c6             	mov    %rax,%rsi
ffffffff8000542b:	bf 00 00 00 00       	mov    $0x0,%edi
ffffffff80005430:	e8 ad fe ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80005435:	48 8d 05 b3 e8 ff ff 	lea    -0x174d(%rip),%rax        # ffffffff80003cef <interrupt_handle_0x01>
ffffffff8000543c:	48 89 c6             	mov    %rax,%rsi
ffffffff8000543f:	bf 01 00 00 00       	mov    $0x1,%edi
ffffffff80005444:	e8 99 fe ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80005449:	48 8d 05 ab e8 ff ff 	lea    -0x1755(%rip),%rax        # ffffffff80003cfb <interrupt_handle_0x02>
ffffffff80005450:	48 89 c6             	mov    %rax,%rsi
ffffffff80005453:	bf 02 00 00 00       	mov    $0x2,%edi
ffffffff80005458:	e8 85 fe ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff8000545d:	48 8d 05 a3 e8 ff ff 	lea    -0x175d(%rip),%rax        # ffffffff80003d07 <interrupt_handle_0x03>
ffffffff80005464:	48 89 c6             	mov    %rax,%rsi
ffffffff80005467:	bf 03 00 00 00       	mov    $0x3,%edi
ffffffff8000546c:	e8 71 fe ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80005471:	48 8d 05 9b e8 ff ff 	lea    -0x1765(%rip),%rax        # ffffffff80003d13 <interrupt_handle_0x04>
ffffffff80005478:	48 89 c6             	mov    %rax,%rsi
ffffffff8000547b:	bf 04 00 00 00       	mov    $0x4,%edi
ffffffff80005480:	e8 5d fe ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80005485:	48 8d 05 93 e8 ff ff 	lea    -0x176d(%rip),%rax        # ffffffff80003d1f <interrupt_handle_0x05>
ffffffff8000548c:	48 89 c6             	mov    %rax,%rsi
ffffffff8000548f:	bf 05 00 00 00       	mov    $0x5,%edi
ffffffff80005494:	e8 49 fe ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80005499:	48 8d 05 8e e8 ff ff 	lea    -0x1772(%rip),%rax        # ffffffff80003d2e <interrupt_handle_0x06>
ffffffff800054a0:	48 89 c6             	mov    %rax,%rsi
ffffffff800054a3:	bf 06 00 00 00       	mov    $0x6,%edi
ffffffff800054a8:	e8 35 fe ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff800054ad:	48 8d 05 89 e8 ff ff 	lea    -0x1777(%rip),%rax        # ffffffff80003d3d <interrupt_handle_0x07>
ffffffff800054b4:	48 89 c6             	mov    %rax,%rsi
ffffffff800054b7:	bf 07 00 00 00       	mov    $0x7,%edi
ffffffff800054bc:	e8 21 fe ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff800054c1:	48 8d 05 84 e8 ff ff 	lea    -0x177c(%rip),%rax        # ffffffff80003d4c <interrupt_handle_0x08>
ffffffff800054c8:	48 89 c6             	mov    %rax,%rsi
ffffffff800054cb:	bf 08 00 00 00       	mov    $0x8,%edi
ffffffff800054d0:	e8 0d fe ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff800054d5:	48 8d 05 7d e8 ff ff 	lea    -0x1783(%rip),%rax        # ffffffff80003d59 <interrupt_handle_0x09>
ffffffff800054dc:	48 89 c6             	mov    %rax,%rsi
ffffffff800054df:	bf 09 00 00 00       	mov    $0x9,%edi
ffffffff800054e4:	e8 f9 fd ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff800054e9:	48 8d 05 78 e8 ff ff 	lea    -0x1788(%rip),%rax        # ffffffff80003d68 <interrupt_handle_0x0a>
ffffffff800054f0:	48 89 c6             	mov    %rax,%rsi
ffffffff800054f3:	bf 0a 00 00 00       	mov    $0xa,%edi
ffffffff800054f8:	e8 e5 fd ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff800054fd:	48 8d 05 71 e8 ff ff 	lea    -0x178f(%rip),%rax        # ffffffff80003d75 <interrupt_handle_0x0b>
ffffffff80005504:	48 89 c6             	mov    %rax,%rsi
ffffffff80005507:	bf 0b 00 00 00       	mov    $0xb,%edi
ffffffff8000550c:	e8 d1 fd ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80005511:	48 8d 05 6a e8 ff ff 	lea    -0x1796(%rip),%rax        # ffffffff80003d82 <interrupt_handle_0x0c>
ffffffff80005518:	48 89 c6             	mov    %rax,%rsi
ffffffff8000551b:	bf 0c 00 00 00       	mov    $0xc,%edi
ffffffff80005520:	e8 bd fd ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80005525:	48 8d 05 63 e8 ff ff 	lea    -0x179d(%rip),%rax        # ffffffff80003d8f <interrupt_handle_0x0d>
ffffffff8000552c:	48 89 c6             	mov    %rax,%rsi
ffffffff8000552f:	bf 0d 00 00 00       	mov    $0xd,%edi
ffffffff80005534:	e8 a9 fd ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80005539:	48 8d 05 5c e8 ff ff 	lea    -0x17a4(%rip),%rax        # ffffffff80003d9c <interrupt_handle_0x0e>
ffffffff80005540:	48 89 c6             	mov    %rax,%rsi
ffffffff80005543:	bf 0e 00 00 00       	mov    $0xe,%edi
ffffffff80005548:	e8 95 fd ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff8000554d:	48 8d 05 55 e8 ff ff 	lea    -0x17ab(%rip),%rax        # ffffffff80003da9 <interrupt_handle_0x0f>
ffffffff80005554:	48 89 c6             	mov    %rax,%rsi
ffffffff80005557:	bf 0f 00 00 00       	mov    $0xf,%edi
ffffffff8000555c:	e8 81 fd ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80005561:	48 8d 05 50 e8 ff ff 	lea    -0x17b0(%rip),%rax        # ffffffff80003db8 <interrupt_handle_0x10>
ffffffff80005568:	48 89 c6             	mov    %rax,%rsi
ffffffff8000556b:	bf 10 00 00 00       	mov    $0x10,%edi
ffffffff80005570:	e8 6d fd ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80005575:	48 8d 05 4b e8 ff ff 	lea    -0x17b5(%rip),%rax        # ffffffff80003dc7 <interrupt_handle_0x11>
ffffffff8000557c:	48 89 c6             	mov    %rax,%rsi
ffffffff8000557f:	bf 11 00 00 00       	mov    $0x11,%edi
ffffffff80005584:	e8 59 fd ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80005589:	48 8d 05 44 e8 ff ff 	lea    -0x17bc(%rip),%rax        # ffffffff80003dd4 <interrupt_handle_0x12>
ffffffff80005590:	48 89 c6             	mov    %rax,%rsi
ffffffff80005593:	bf 12 00 00 00       	mov    $0x12,%edi
ffffffff80005598:	e8 45 fd ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff8000559d:	48 8d 05 3f e8 ff ff 	lea    -0x17c1(%rip),%rax        # ffffffff80003de3 <interrupt_handle_0x13>
ffffffff800055a4:	48 89 c6             	mov    %rax,%rsi
ffffffff800055a7:	bf 13 00 00 00       	mov    $0x13,%edi
ffffffff800055ac:	e8 31 fd ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff800055b1:	48 8d 05 3a e8 ff ff 	lea    -0x17c6(%rip),%rax        # ffffffff80003df2 <interrupt_handle_0x14>
ffffffff800055b8:	48 89 c6             	mov    %rax,%rsi
ffffffff800055bb:	bf 14 00 00 00       	mov    $0x14,%edi
ffffffff800055c0:	e8 1d fd ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff800055c5:	48 8d 05 35 e8 ff ff 	lea    -0x17cb(%rip),%rax        # ffffffff80003e01 <interrupt_handle_0x15>
ffffffff800055cc:	48 89 c6             	mov    %rax,%rsi
ffffffff800055cf:	bf 15 00 00 00       	mov    $0x15,%edi
ffffffff800055d4:	e8 09 fd ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff800055d9:	48 8d 05 30 e8 ff ff 	lea    -0x17d0(%rip),%rax        # ffffffff80003e10 <interrupt_handle_0x16>
ffffffff800055e0:	48 89 c6             	mov    %rax,%rsi
ffffffff800055e3:	bf 16 00 00 00       	mov    $0x16,%edi
ffffffff800055e8:	e8 f5 fc ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff800055ed:	48 8d 05 2b e8 ff ff 	lea    -0x17d5(%rip),%rax        # ffffffff80003e1f <interrupt_handle_0x17>
ffffffff800055f4:	48 89 c6             	mov    %rax,%rsi
ffffffff800055f7:	bf 17 00 00 00       	mov    $0x17,%edi
ffffffff800055fc:	e8 e1 fc ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80005601:	48 8d 05 26 e8 ff ff 	lea    -0x17da(%rip),%rax        # ffffffff80003e2e <interrupt_handle_0x18>
ffffffff80005608:	48 89 c6             	mov    %rax,%rsi
ffffffff8000560b:	bf 18 00 00 00       	mov    $0x18,%edi
ffffffff80005610:	e8 cd fc ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80005615:	48 8d 05 21 e8 ff ff 	lea    -0x17df(%rip),%rax        # ffffffff80003e3d <interrupt_handle_0x19>
ffffffff8000561c:	48 89 c6             	mov    %rax,%rsi
ffffffff8000561f:	bf 19 00 00 00       	mov    $0x19,%edi
ffffffff80005624:	e8 b9 fc ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80005629:	48 8d 05 1c e8 ff ff 	lea    -0x17e4(%rip),%rax        # ffffffff80003e4c <interrupt_handle_0x1a>
ffffffff80005630:	48 89 c6             	mov    %rax,%rsi
ffffffff80005633:	bf 1a 00 00 00       	mov    $0x1a,%edi
ffffffff80005638:	e8 a5 fc ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff8000563d:	48 8d 05 17 e8 ff ff 	lea    -0x17e9(%rip),%rax        # ffffffff80003e5b <interrupt_handle_0x1b>
ffffffff80005644:	48 89 c6             	mov    %rax,%rsi
ffffffff80005647:	bf 1b 00 00 00       	mov    $0x1b,%edi
ffffffff8000564c:	e8 91 fc ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80005651:	48 8d 05 12 e8 ff ff 	lea    -0x17ee(%rip),%rax        # ffffffff80003e6a <interrupt_handle_0x1c>
ffffffff80005658:	48 89 c6             	mov    %rax,%rsi
ffffffff8000565b:	bf 1c 00 00 00       	mov    $0x1c,%edi
ffffffff80005660:	e8 7d fc ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80005665:	48 8d 05 0d e8 ff ff 	lea    -0x17f3(%rip),%rax        # ffffffff80003e79 <interrupt_handle_0x1d>
ffffffff8000566c:	48 89 c6             	mov    %rax,%rsi
ffffffff8000566f:	bf 1d 00 00 00       	mov    $0x1d,%edi
ffffffff80005674:	e8 69 fc ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80005679:	48 8d 05 08 e8 ff ff 	lea    -0x17f8(%rip),%rax        # ffffffff80003e88 <interrupt_handle_0x1e>
ffffffff80005680:	48 89 c6             	mov    %rax,%rsi
ffffffff80005683:	bf 1e 00 00 00       	mov    $0x1e,%edi
ffffffff80005688:	e8 55 fc ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff8000568d:	48 8d 05 01 e8 ff ff 	lea    -0x17ff(%rip),%rax        # ffffffff80003e95 <interrupt_handle_0x1f>
ffffffff80005694:	48 89 c6             	mov    %rax,%rsi
ffffffff80005697:	bf 1f 00 00 00       	mov    $0x1f,%edi
ffffffff8000569c:	e8 41 fc ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff800056a1:	48 8d 05 2a ee ff ff 	lea    -0x11d6(%rip),%rax        # ffffffff800044d2 <interrupt_handle_0x20>
ffffffff800056a8:	48 89 c6             	mov    %rax,%rsi
ffffffff800056ab:	bf 20 00 00 00       	mov    $0x20,%edi
ffffffff800056b0:	e8 2d fc ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff800056b5:	48 8d 05 20 ee ff ff 	lea    -0x11e0(%rip),%rax        # ffffffff800044dc <interrupt_handle_0x21>
ffffffff800056bc:	48 89 c6             	mov    %rax,%rsi
ffffffff800056bf:	bf 21 00 00 00       	mov    $0x21,%edi
ffffffff800056c4:	e8 19 fc ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff800056c9:	48 8d 05 16 ee ff ff 	lea    -0x11ea(%rip),%rax        # ffffffff800044e6 <interrupt_handle_0x22>
ffffffff800056d0:	48 89 c6             	mov    %rax,%rsi
ffffffff800056d3:	bf 22 00 00 00       	mov    $0x22,%edi
ffffffff800056d8:	e8 05 fc ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff800056dd:	48 8d 05 0c ee ff ff 	lea    -0x11f4(%rip),%rax        # ffffffff800044f0 <interrupt_handle_0x23>
ffffffff800056e4:	48 89 c6             	mov    %rax,%rsi
ffffffff800056e7:	bf 23 00 00 00       	mov    $0x23,%edi
ffffffff800056ec:	e8 f1 fb ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff800056f1:	48 8d 05 02 ee ff ff 	lea    -0x11fe(%rip),%rax        # ffffffff800044fa <interrupt_handle_0x24>
ffffffff800056f8:	48 89 c6             	mov    %rax,%rsi
ffffffff800056fb:	bf 24 00 00 00       	mov    $0x24,%edi
ffffffff80005700:	e8 dd fb ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80005705:	48 8d 05 f8 ed ff ff 	lea    -0x1208(%rip),%rax        # ffffffff80004504 <interrupt_handle_0x25>
ffffffff8000570c:	48 89 c6             	mov    %rax,%rsi
ffffffff8000570f:	bf 25 00 00 00       	mov    $0x25,%edi
ffffffff80005714:	e8 c9 fb ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80005719:	48 8d 05 ee ed ff ff 	lea    -0x1212(%rip),%rax        # ffffffff8000450e <interrupt_handle_0x26>
ffffffff80005720:	48 89 c6             	mov    %rax,%rsi
ffffffff80005723:	bf 26 00 00 00       	mov    $0x26,%edi
ffffffff80005728:	e8 b5 fb ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff8000572d:	48 8d 05 e7 ed ff ff 	lea    -0x1219(%rip),%rax        # ffffffff8000451b <interrupt_handle_0x27>
ffffffff80005734:	48 89 c6             	mov    %rax,%rsi
ffffffff80005737:	bf 27 00 00 00       	mov    $0x27,%edi
ffffffff8000573c:	e8 a1 fb ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80005741:	48 8d 05 e0 ed ff ff 	lea    -0x1220(%rip),%rax        # ffffffff80004528 <interrupt_handle_0x28>
ffffffff80005748:	48 89 c6             	mov    %rax,%rsi
ffffffff8000574b:	bf 28 00 00 00       	mov    $0x28,%edi
ffffffff80005750:	e8 8d fb ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80005755:	48 8d 05 d9 ed ff ff 	lea    -0x1227(%rip),%rax        # ffffffff80004535 <interrupt_handle_0x29>
ffffffff8000575c:	48 89 c6             	mov    %rax,%rsi
ffffffff8000575f:	bf 29 00 00 00       	mov    $0x29,%edi
ffffffff80005764:	e8 79 fb ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80005769:	48 8d 05 d2 ed ff ff 	lea    -0x122e(%rip),%rax        # ffffffff80004542 <interrupt_handle_0x2a>
ffffffff80005770:	48 89 c6             	mov    %rax,%rsi
ffffffff80005773:	bf 2a 00 00 00       	mov    $0x2a,%edi
ffffffff80005778:	e8 65 fb ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff8000577d:	48 8d 05 cb ed ff ff 	lea    -0x1235(%rip),%rax        # ffffffff8000454f <interrupt_handle_0x2b>
ffffffff80005784:	48 89 c6             	mov    %rax,%rsi
ffffffff80005787:	bf 2b 00 00 00       	mov    $0x2b,%edi
ffffffff8000578c:	e8 51 fb ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80005791:	48 8d 05 c4 ed ff ff 	lea    -0x123c(%rip),%rax        # ffffffff8000455c <interrupt_handle_0x2c>
ffffffff80005798:	48 89 c6             	mov    %rax,%rsi
ffffffff8000579b:	bf 2c 00 00 00       	mov    $0x2c,%edi
ffffffff800057a0:	e8 3d fb ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff800057a5:	48 8d 05 bd ed ff ff 	lea    -0x1243(%rip),%rax        # ffffffff80004569 <interrupt_handle_0x2d>
ffffffff800057ac:	48 89 c6             	mov    %rax,%rsi
ffffffff800057af:	bf 2d 00 00 00       	mov    $0x2d,%edi
ffffffff800057b4:	e8 29 fb ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff800057b9:	48 8d 05 b6 ed ff ff 	lea    -0x124a(%rip),%rax        # ffffffff80004576 <interrupt_handle_0x2e>
ffffffff800057c0:	48 89 c6             	mov    %rax,%rsi
ffffffff800057c3:	bf 2e 00 00 00       	mov    $0x2e,%edi
ffffffff800057c8:	e8 15 fb ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff800057cd:	48 8d 05 af ed ff ff 	lea    -0x1251(%rip),%rax        # ffffffff80004583 <interrupt_handle_0x2f>
ffffffff800057d4:	48 89 c6             	mov    %rax,%rsi
ffffffff800057d7:	bf 2f 00 00 00       	mov    $0x2f,%edi
ffffffff800057dc:	e8 01 fb ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff800057e1:	48 8d 05 a8 ed ff ff 	lea    -0x1258(%rip),%rax        # ffffffff80004590 <interrupt_handle_0x30>
ffffffff800057e8:	48 89 c6             	mov    %rax,%rsi
ffffffff800057eb:	bf 30 00 00 00       	mov    $0x30,%edi
ffffffff800057f0:	e8 ed fa ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff800057f5:	48 8d 05 a1 ed ff ff 	lea    -0x125f(%rip),%rax        # ffffffff8000459d <interrupt_handle_0x31>
ffffffff800057fc:	48 89 c6             	mov    %rax,%rsi
ffffffff800057ff:	bf 31 00 00 00       	mov    $0x31,%edi
ffffffff80005804:	e8 d9 fa ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80005809:	48 8d 05 9a ed ff ff 	lea    -0x1266(%rip),%rax        # ffffffff800045aa <interrupt_handle_0x32>
ffffffff80005810:	48 89 c6             	mov    %rax,%rsi
ffffffff80005813:	bf 32 00 00 00       	mov    $0x32,%edi
ffffffff80005818:	e8 c5 fa ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff8000581d:	48 8d 05 93 ed ff ff 	lea    -0x126d(%rip),%rax        # ffffffff800045b7 <interrupt_handle_0x33>
ffffffff80005824:	48 89 c6             	mov    %rax,%rsi
ffffffff80005827:	bf 33 00 00 00       	mov    $0x33,%edi
ffffffff8000582c:	e8 b1 fa ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80005831:	48 8d 05 8c ed ff ff 	lea    -0x1274(%rip),%rax        # ffffffff800045c4 <interrupt_handle_0x34>
ffffffff80005838:	48 89 c6             	mov    %rax,%rsi
ffffffff8000583b:	bf 34 00 00 00       	mov    $0x34,%edi
ffffffff80005840:	e8 9d fa ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80005845:	48 8d 05 85 ed ff ff 	lea    -0x127b(%rip),%rax        # ffffffff800045d1 <interrupt_handle_0x35>
ffffffff8000584c:	48 89 c6             	mov    %rax,%rsi
ffffffff8000584f:	bf 35 00 00 00       	mov    $0x35,%edi
ffffffff80005854:	e8 89 fa ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80005859:	48 8d 05 7e ed ff ff 	lea    -0x1282(%rip),%rax        # ffffffff800045de <interrupt_handle_0x36>
ffffffff80005860:	48 89 c6             	mov    %rax,%rsi
ffffffff80005863:	bf 36 00 00 00       	mov    $0x36,%edi
ffffffff80005868:	e8 75 fa ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff8000586d:	48 8d 05 77 ed ff ff 	lea    -0x1289(%rip),%rax        # ffffffff800045eb <interrupt_handle_0x37>
ffffffff80005874:	48 89 c6             	mov    %rax,%rsi
ffffffff80005877:	bf 37 00 00 00       	mov    $0x37,%edi
ffffffff8000587c:	e8 61 fa ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80005881:	48 8d 05 70 ed ff ff 	lea    -0x1290(%rip),%rax        # ffffffff800045f8 <interrupt_handle_0x38>
ffffffff80005888:	48 89 c6             	mov    %rax,%rsi
ffffffff8000588b:	bf 38 00 00 00       	mov    $0x38,%edi
ffffffff80005890:	e8 4d fa ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80005895:	48 8d 05 69 ed ff ff 	lea    -0x1297(%rip),%rax        # ffffffff80004605 <interrupt_handle_0x39>
ffffffff8000589c:	48 89 c6             	mov    %rax,%rsi
ffffffff8000589f:	bf 39 00 00 00       	mov    $0x39,%edi
ffffffff800058a4:	e8 39 fa ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff800058a9:	48 8d 05 62 ed ff ff 	lea    -0x129e(%rip),%rax        # ffffffff80004612 <interrupt_handle_0x3a>
ffffffff800058b0:	48 89 c6             	mov    %rax,%rsi
ffffffff800058b3:	bf 3a 00 00 00       	mov    $0x3a,%edi
ffffffff800058b8:	e8 25 fa ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff800058bd:	48 8d 05 5b ed ff ff 	lea    -0x12a5(%rip),%rax        # ffffffff8000461f <interrupt_handle_0x3b>
ffffffff800058c4:	48 89 c6             	mov    %rax,%rsi
ffffffff800058c7:	bf 3b 00 00 00       	mov    $0x3b,%edi
ffffffff800058cc:	e8 11 fa ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff800058d1:	48 8d 05 54 ed ff ff 	lea    -0x12ac(%rip),%rax        # ffffffff8000462c <interrupt_handle_0x3c>
ffffffff800058d8:	48 89 c6             	mov    %rax,%rsi
ffffffff800058db:	bf 3c 00 00 00       	mov    $0x3c,%edi
ffffffff800058e0:	e8 fd f9 ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff800058e5:	48 8d 05 4d ed ff ff 	lea    -0x12b3(%rip),%rax        # ffffffff80004639 <interrupt_handle_0x3d>
ffffffff800058ec:	48 89 c6             	mov    %rax,%rsi
ffffffff800058ef:	bf 3d 00 00 00       	mov    $0x3d,%edi
ffffffff800058f4:	e8 e9 f9 ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff800058f9:	48 8d 05 46 ed ff ff 	lea    -0x12ba(%rip),%rax        # ffffffff80004646 <interrupt_handle_0x3e>
ffffffff80005900:	48 89 c6             	mov    %rax,%rsi
ffffffff80005903:	bf 3e 00 00 00       	mov    $0x3e,%edi
ffffffff80005908:	e8 d5 f9 ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff8000590d:	48 8d 05 3f ed ff ff 	lea    -0x12c1(%rip),%rax        # ffffffff80004653 <interrupt_handle_0x3f>
ffffffff80005914:	48 89 c6             	mov    %rax,%rsi
ffffffff80005917:	bf 3f 00 00 00       	mov    $0x3f,%edi
ffffffff8000591c:	e8 c1 f9 ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80005921:	48 8d 05 38 ed ff ff 	lea    -0x12c8(%rip),%rax        # ffffffff80004660 <interrupt_handle_0x40>
ffffffff80005928:	48 89 c6             	mov    %rax,%rsi
ffffffff8000592b:	bf 40 00 00 00       	mov    $0x40,%edi
ffffffff80005930:	e8 ad f9 ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80005935:	48 8d 05 31 ed ff ff 	lea    -0x12cf(%rip),%rax        # ffffffff8000466d <interrupt_handle_0x41>
ffffffff8000593c:	48 89 c6             	mov    %rax,%rsi
ffffffff8000593f:	bf 41 00 00 00       	mov    $0x41,%edi
ffffffff80005944:	e8 99 f9 ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80005949:	48 8d 05 2a ed ff ff 	lea    -0x12d6(%rip),%rax        # ffffffff8000467a <interrupt_handle_0x42>
ffffffff80005950:	48 89 c6             	mov    %rax,%rsi
ffffffff80005953:	bf 42 00 00 00       	mov    $0x42,%edi
ffffffff80005958:	e8 85 f9 ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff8000595d:	48 8d 05 23 ed ff ff 	lea    -0x12dd(%rip),%rax        # ffffffff80004687 <interrupt_handle_0x43>
ffffffff80005964:	48 89 c6             	mov    %rax,%rsi
ffffffff80005967:	bf 43 00 00 00       	mov    $0x43,%edi
ffffffff8000596c:	e8 71 f9 ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80005971:	48 8d 05 1c ed ff ff 	lea    -0x12e4(%rip),%rax        # ffffffff80004694 <interrupt_handle_0x44>
ffffffff80005978:	48 89 c6             	mov    %rax,%rsi
ffffffff8000597b:	bf 44 00 00 00       	mov    $0x44,%edi
ffffffff80005980:	e8 5d f9 ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80005985:	48 8d 05 15 ed ff ff 	lea    -0x12eb(%rip),%rax        # ffffffff800046a1 <interrupt_handle_0x45>
ffffffff8000598c:	48 89 c6             	mov    %rax,%rsi
ffffffff8000598f:	bf 45 00 00 00       	mov    $0x45,%edi
ffffffff80005994:	e8 49 f9 ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80005999:	48 8d 05 0e ed ff ff 	lea    -0x12f2(%rip),%rax        # ffffffff800046ae <interrupt_handle_0x46>
ffffffff800059a0:	48 89 c6             	mov    %rax,%rsi
ffffffff800059a3:	bf 46 00 00 00       	mov    $0x46,%edi
ffffffff800059a8:	e8 35 f9 ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff800059ad:	48 8d 05 07 ed ff ff 	lea    -0x12f9(%rip),%rax        # ffffffff800046bb <interrupt_handle_0x47>
ffffffff800059b4:	48 89 c6             	mov    %rax,%rsi
ffffffff800059b7:	bf 47 00 00 00       	mov    $0x47,%edi
ffffffff800059bc:	e8 21 f9 ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff800059c1:	48 8d 05 00 ed ff ff 	lea    -0x1300(%rip),%rax        # ffffffff800046c8 <interrupt_handle_0x48>
ffffffff800059c8:	48 89 c6             	mov    %rax,%rsi
ffffffff800059cb:	bf 48 00 00 00       	mov    $0x48,%edi
ffffffff800059d0:	e8 0d f9 ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff800059d5:	48 8d 05 f9 ec ff ff 	lea    -0x1307(%rip),%rax        # ffffffff800046d5 <interrupt_handle_0x49>
ffffffff800059dc:	48 89 c6             	mov    %rax,%rsi
ffffffff800059df:	bf 49 00 00 00       	mov    $0x49,%edi
ffffffff800059e4:	e8 f9 f8 ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff800059e9:	48 8d 05 f2 ec ff ff 	lea    -0x130e(%rip),%rax        # ffffffff800046e2 <interrupt_handle_0x4a>
ffffffff800059f0:	48 89 c6             	mov    %rax,%rsi
ffffffff800059f3:	bf 4a 00 00 00       	mov    $0x4a,%edi
ffffffff800059f8:	e8 e5 f8 ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff800059fd:	48 8d 05 eb ec ff ff 	lea    -0x1315(%rip),%rax        # ffffffff800046ef <interrupt_handle_0x4b>
ffffffff80005a04:	48 89 c6             	mov    %rax,%rsi
ffffffff80005a07:	bf 4b 00 00 00       	mov    $0x4b,%edi
ffffffff80005a0c:	e8 d1 f8 ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80005a11:	48 8d 05 e4 ec ff ff 	lea    -0x131c(%rip),%rax        # ffffffff800046fc <interrupt_handle_0x4c>
ffffffff80005a18:	48 89 c6             	mov    %rax,%rsi
ffffffff80005a1b:	bf 4c 00 00 00       	mov    $0x4c,%edi
ffffffff80005a20:	e8 bd f8 ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80005a25:	48 8d 05 dd ec ff ff 	lea    -0x1323(%rip),%rax        # ffffffff80004709 <interrupt_handle_0x4d>
ffffffff80005a2c:	48 89 c6             	mov    %rax,%rsi
ffffffff80005a2f:	bf 4d 00 00 00       	mov    $0x4d,%edi
ffffffff80005a34:	e8 a9 f8 ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80005a39:	48 8d 05 d6 ec ff ff 	lea    -0x132a(%rip),%rax        # ffffffff80004716 <interrupt_handle_0x4e>
ffffffff80005a40:	48 89 c6             	mov    %rax,%rsi
ffffffff80005a43:	bf 4e 00 00 00       	mov    $0x4e,%edi
ffffffff80005a48:	e8 95 f8 ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80005a4d:	48 8d 05 cf ec ff ff 	lea    -0x1331(%rip),%rax        # ffffffff80004723 <interrupt_handle_0x4f>
ffffffff80005a54:	48 89 c6             	mov    %rax,%rsi
ffffffff80005a57:	bf 4f 00 00 00       	mov    $0x4f,%edi
ffffffff80005a5c:	e8 81 f8 ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80005a61:	48 8d 05 c8 ec ff ff 	lea    -0x1338(%rip),%rax        # ffffffff80004730 <interrupt_handle_0x50>
ffffffff80005a68:	48 89 c6             	mov    %rax,%rsi
ffffffff80005a6b:	bf 50 00 00 00       	mov    $0x50,%edi
ffffffff80005a70:	e8 6d f8 ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80005a75:	48 8d 05 c1 ec ff ff 	lea    -0x133f(%rip),%rax        # ffffffff8000473d <interrupt_handle_0x51>
ffffffff80005a7c:	48 89 c6             	mov    %rax,%rsi
ffffffff80005a7f:	bf 51 00 00 00       	mov    $0x51,%edi
ffffffff80005a84:	e8 59 f8 ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80005a89:	48 8d 05 ba ec ff ff 	lea    -0x1346(%rip),%rax        # ffffffff8000474a <interrupt_handle_0x52>
ffffffff80005a90:	48 89 c6             	mov    %rax,%rsi
ffffffff80005a93:	bf 52 00 00 00       	mov    $0x52,%edi
ffffffff80005a98:	e8 45 f8 ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80005a9d:	48 8d 05 b3 ec ff ff 	lea    -0x134d(%rip),%rax        # ffffffff80004757 <interrupt_handle_0x53>
ffffffff80005aa4:	48 89 c6             	mov    %rax,%rsi
ffffffff80005aa7:	bf 53 00 00 00       	mov    $0x53,%edi
ffffffff80005aac:	e8 31 f8 ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80005ab1:	48 8d 05 ac ec ff ff 	lea    -0x1354(%rip),%rax        # ffffffff80004764 <interrupt_handle_0x54>
ffffffff80005ab8:	48 89 c6             	mov    %rax,%rsi
ffffffff80005abb:	bf 54 00 00 00       	mov    $0x54,%edi
ffffffff80005ac0:	e8 1d f8 ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80005ac5:	48 8d 05 a5 ec ff ff 	lea    -0x135b(%rip),%rax        # ffffffff80004771 <interrupt_handle_0x55>
ffffffff80005acc:	48 89 c6             	mov    %rax,%rsi
ffffffff80005acf:	bf 55 00 00 00       	mov    $0x55,%edi
ffffffff80005ad4:	e8 09 f8 ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80005ad9:	48 8d 05 9e ec ff ff 	lea    -0x1362(%rip),%rax        # ffffffff8000477e <interrupt_handle_0x56>
ffffffff80005ae0:	48 89 c6             	mov    %rax,%rsi
ffffffff80005ae3:	bf 56 00 00 00       	mov    $0x56,%edi
ffffffff80005ae8:	e8 f5 f7 ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80005aed:	48 8d 05 97 ec ff ff 	lea    -0x1369(%rip),%rax        # ffffffff8000478b <interrupt_handle_0x57>
ffffffff80005af4:	48 89 c6             	mov    %rax,%rsi
ffffffff80005af7:	bf 57 00 00 00       	mov    $0x57,%edi
ffffffff80005afc:	e8 e1 f7 ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80005b01:	48 8d 05 90 ec ff ff 	lea    -0x1370(%rip),%rax        # ffffffff80004798 <interrupt_handle_0x58>
ffffffff80005b08:	48 89 c6             	mov    %rax,%rsi
ffffffff80005b0b:	bf 58 00 00 00       	mov    $0x58,%edi
ffffffff80005b10:	e8 cd f7 ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80005b15:	48 8d 05 89 ec ff ff 	lea    -0x1377(%rip),%rax        # ffffffff800047a5 <interrupt_handle_0x59>
ffffffff80005b1c:	48 89 c6             	mov    %rax,%rsi
ffffffff80005b1f:	bf 59 00 00 00       	mov    $0x59,%edi
ffffffff80005b24:	e8 b9 f7 ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80005b29:	48 8d 05 82 ec ff ff 	lea    -0x137e(%rip),%rax        # ffffffff800047b2 <interrupt_handle_0x5a>
ffffffff80005b30:	48 89 c6             	mov    %rax,%rsi
ffffffff80005b33:	bf 5a 00 00 00       	mov    $0x5a,%edi
ffffffff80005b38:	e8 a5 f7 ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80005b3d:	48 8d 05 7b ec ff ff 	lea    -0x1385(%rip),%rax        # ffffffff800047bf <interrupt_handle_0x5b>
ffffffff80005b44:	48 89 c6             	mov    %rax,%rsi
ffffffff80005b47:	bf 5b 00 00 00       	mov    $0x5b,%edi
ffffffff80005b4c:	e8 91 f7 ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80005b51:	48 8d 05 74 ec ff ff 	lea    -0x138c(%rip),%rax        # ffffffff800047cc <interrupt_handle_0x5c>
ffffffff80005b58:	48 89 c6             	mov    %rax,%rsi
ffffffff80005b5b:	bf 5c 00 00 00       	mov    $0x5c,%edi
ffffffff80005b60:	e8 7d f7 ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80005b65:	48 8d 05 6d ec ff ff 	lea    -0x1393(%rip),%rax        # ffffffff800047d9 <interrupt_handle_0x5d>
ffffffff80005b6c:	48 89 c6             	mov    %rax,%rsi
ffffffff80005b6f:	bf 5d 00 00 00       	mov    $0x5d,%edi
ffffffff80005b74:	e8 69 f7 ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80005b79:	48 8d 05 66 ec ff ff 	lea    -0x139a(%rip),%rax        # ffffffff800047e6 <interrupt_handle_0x5e>
ffffffff80005b80:	48 89 c6             	mov    %rax,%rsi
ffffffff80005b83:	bf 5e 00 00 00       	mov    $0x5e,%edi
ffffffff80005b88:	e8 55 f7 ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80005b8d:	48 8d 05 5f ec ff ff 	lea    -0x13a1(%rip),%rax        # ffffffff800047f3 <interrupt_handle_0x5f>
ffffffff80005b94:	48 89 c6             	mov    %rax,%rsi
ffffffff80005b97:	bf 5f 00 00 00       	mov    $0x5f,%edi
ffffffff80005b9c:	e8 41 f7 ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80005ba1:	48 8d 05 58 ec ff ff 	lea    -0x13a8(%rip),%rax        # ffffffff80004800 <interrupt_handle_0x60>
ffffffff80005ba8:	48 89 c6             	mov    %rax,%rsi
ffffffff80005bab:	bf 60 00 00 00       	mov    $0x60,%edi
ffffffff80005bb0:	e8 2d f7 ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80005bb5:	48 8d 05 51 ec ff ff 	lea    -0x13af(%rip),%rax        # ffffffff8000480d <interrupt_handle_0x61>
ffffffff80005bbc:	48 89 c6             	mov    %rax,%rsi
ffffffff80005bbf:	bf 61 00 00 00       	mov    $0x61,%edi
ffffffff80005bc4:	e8 19 f7 ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80005bc9:	48 8d 05 4a ec ff ff 	lea    -0x13b6(%rip),%rax        # ffffffff8000481a <interrupt_handle_0x62>
ffffffff80005bd0:	48 89 c6             	mov    %rax,%rsi
ffffffff80005bd3:	bf 62 00 00 00       	mov    $0x62,%edi
ffffffff80005bd8:	e8 05 f7 ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80005bdd:	48 8d 05 43 ec ff ff 	lea    -0x13bd(%rip),%rax        # ffffffff80004827 <interrupt_handle_0x63>
ffffffff80005be4:	48 89 c6             	mov    %rax,%rsi
ffffffff80005be7:	bf 63 00 00 00       	mov    $0x63,%edi
ffffffff80005bec:	e8 f1 f6 ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80005bf1:	48 8d 05 3c ec ff ff 	lea    -0x13c4(%rip),%rax        # ffffffff80004834 <interrupt_handle_0x64>
ffffffff80005bf8:	48 89 c6             	mov    %rax,%rsi
ffffffff80005bfb:	bf 64 00 00 00       	mov    $0x64,%edi
ffffffff80005c00:	e8 dd f6 ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80005c05:	48 8d 05 35 ec ff ff 	lea    -0x13cb(%rip),%rax        # ffffffff80004841 <interrupt_handle_0x65>
ffffffff80005c0c:	48 89 c6             	mov    %rax,%rsi
ffffffff80005c0f:	bf 65 00 00 00       	mov    $0x65,%edi
ffffffff80005c14:	e8 c9 f6 ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80005c19:	48 8d 05 2e ec ff ff 	lea    -0x13d2(%rip),%rax        # ffffffff8000484e <interrupt_handle_0x66>
ffffffff80005c20:	48 89 c6             	mov    %rax,%rsi
ffffffff80005c23:	bf 66 00 00 00       	mov    $0x66,%edi
ffffffff80005c28:	e8 b5 f6 ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80005c2d:	48 8d 05 27 ec ff ff 	lea    -0x13d9(%rip),%rax        # ffffffff8000485b <interrupt_handle_0x67>
ffffffff80005c34:	48 89 c6             	mov    %rax,%rsi
ffffffff80005c37:	bf 67 00 00 00       	mov    $0x67,%edi
ffffffff80005c3c:	e8 a1 f6 ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80005c41:	48 8d 05 20 ec ff ff 	lea    -0x13e0(%rip),%rax        # ffffffff80004868 <interrupt_handle_0x68>
ffffffff80005c48:	48 89 c6             	mov    %rax,%rsi
ffffffff80005c4b:	bf 68 00 00 00       	mov    $0x68,%edi
ffffffff80005c50:	e8 8d f6 ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80005c55:	48 8d 05 19 ec ff ff 	lea    -0x13e7(%rip),%rax        # ffffffff80004875 <interrupt_handle_0x69>
ffffffff80005c5c:	48 89 c6             	mov    %rax,%rsi
ffffffff80005c5f:	bf 69 00 00 00       	mov    $0x69,%edi
ffffffff80005c64:	e8 79 f6 ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80005c69:	48 8d 05 12 ec ff ff 	lea    -0x13ee(%rip),%rax        # ffffffff80004882 <interrupt_handle_0x6a>
ffffffff80005c70:	48 89 c6             	mov    %rax,%rsi
ffffffff80005c73:	bf 6a 00 00 00       	mov    $0x6a,%edi
ffffffff80005c78:	e8 65 f6 ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80005c7d:	48 8d 05 0b ec ff ff 	lea    -0x13f5(%rip),%rax        # ffffffff8000488f <interrupt_handle_0x6b>
ffffffff80005c84:	48 89 c6             	mov    %rax,%rsi
ffffffff80005c87:	bf 6b 00 00 00       	mov    $0x6b,%edi
ffffffff80005c8c:	e8 51 f6 ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80005c91:	48 8d 05 04 ec ff ff 	lea    -0x13fc(%rip),%rax        # ffffffff8000489c <interrupt_handle_0x6c>
ffffffff80005c98:	48 89 c6             	mov    %rax,%rsi
ffffffff80005c9b:	bf 6c 00 00 00       	mov    $0x6c,%edi
ffffffff80005ca0:	e8 3d f6 ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80005ca5:	48 8d 05 fd eb ff ff 	lea    -0x1403(%rip),%rax        # ffffffff800048a9 <interrupt_handle_0x6d>
ffffffff80005cac:	48 89 c6             	mov    %rax,%rsi
ffffffff80005caf:	bf 6d 00 00 00       	mov    $0x6d,%edi
ffffffff80005cb4:	e8 29 f6 ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80005cb9:	48 8d 05 f6 eb ff ff 	lea    -0x140a(%rip),%rax        # ffffffff800048b6 <interrupt_handle_0x6e>
ffffffff80005cc0:	48 89 c6             	mov    %rax,%rsi
ffffffff80005cc3:	bf 6e 00 00 00       	mov    $0x6e,%edi
ffffffff80005cc8:	e8 15 f6 ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80005ccd:	48 8d 05 ef eb ff ff 	lea    -0x1411(%rip),%rax        # ffffffff800048c3 <interrupt_handle_0x6f>
ffffffff80005cd4:	48 89 c6             	mov    %rax,%rsi
ffffffff80005cd7:	bf 6f 00 00 00       	mov    $0x6f,%edi
ffffffff80005cdc:	e8 01 f6 ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80005ce1:	48 8d 05 e8 eb ff ff 	lea    -0x1418(%rip),%rax        # ffffffff800048d0 <interrupt_handle_0x70>
ffffffff80005ce8:	48 89 c6             	mov    %rax,%rsi
ffffffff80005ceb:	bf 70 00 00 00       	mov    $0x70,%edi
ffffffff80005cf0:	e8 ed f5 ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80005cf5:	48 8d 05 e1 eb ff ff 	lea    -0x141f(%rip),%rax        # ffffffff800048dd <interrupt_handle_0x71>
ffffffff80005cfc:	48 89 c6             	mov    %rax,%rsi
ffffffff80005cff:	bf 71 00 00 00       	mov    $0x71,%edi
ffffffff80005d04:	e8 d9 f5 ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80005d09:	48 8d 05 da eb ff ff 	lea    -0x1426(%rip),%rax        # ffffffff800048ea <interrupt_handle_0x72>
ffffffff80005d10:	48 89 c6             	mov    %rax,%rsi
ffffffff80005d13:	bf 72 00 00 00       	mov    $0x72,%edi
ffffffff80005d18:	e8 c5 f5 ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80005d1d:	48 8d 05 d3 eb ff ff 	lea    -0x142d(%rip),%rax        # ffffffff800048f7 <interrupt_handle_0x73>
ffffffff80005d24:	48 89 c6             	mov    %rax,%rsi
ffffffff80005d27:	bf 73 00 00 00       	mov    $0x73,%edi
ffffffff80005d2c:	e8 b1 f5 ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80005d31:	48 8d 05 cc eb ff ff 	lea    -0x1434(%rip),%rax        # ffffffff80004904 <interrupt_handle_0x74>
ffffffff80005d38:	48 89 c6             	mov    %rax,%rsi
ffffffff80005d3b:	bf 74 00 00 00       	mov    $0x74,%edi
ffffffff80005d40:	e8 9d f5 ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80005d45:	48 8d 05 c5 eb ff ff 	lea    -0x143b(%rip),%rax        # ffffffff80004911 <interrupt_handle_0x75>
ffffffff80005d4c:	48 89 c6             	mov    %rax,%rsi
ffffffff80005d4f:	bf 75 00 00 00       	mov    $0x75,%edi
ffffffff80005d54:	e8 89 f5 ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80005d59:	48 8d 05 be eb ff ff 	lea    -0x1442(%rip),%rax        # ffffffff8000491e <interrupt_handle_0x76>
ffffffff80005d60:	48 89 c6             	mov    %rax,%rsi
ffffffff80005d63:	bf 76 00 00 00       	mov    $0x76,%edi
ffffffff80005d68:	e8 75 f5 ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80005d6d:	48 8d 05 b7 eb ff ff 	lea    -0x1449(%rip),%rax        # ffffffff8000492b <interrupt_handle_0x77>
ffffffff80005d74:	48 89 c6             	mov    %rax,%rsi
ffffffff80005d77:	bf 77 00 00 00       	mov    $0x77,%edi
ffffffff80005d7c:	e8 61 f5 ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80005d81:	48 8d 05 b0 eb ff ff 	lea    -0x1450(%rip),%rax        # ffffffff80004938 <interrupt_handle_0x78>
ffffffff80005d88:	48 89 c6             	mov    %rax,%rsi
ffffffff80005d8b:	bf 78 00 00 00       	mov    $0x78,%edi
ffffffff80005d90:	e8 4d f5 ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80005d95:	48 8d 05 a9 eb ff ff 	lea    -0x1457(%rip),%rax        # ffffffff80004945 <interrupt_handle_0x79>
ffffffff80005d9c:	48 89 c6             	mov    %rax,%rsi
ffffffff80005d9f:	bf 79 00 00 00       	mov    $0x79,%edi
ffffffff80005da4:	e8 39 f5 ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80005da9:	48 8d 05 a2 eb ff ff 	lea    -0x145e(%rip),%rax        # ffffffff80004952 <interrupt_handle_0x7a>
ffffffff80005db0:	48 89 c6             	mov    %rax,%rsi
ffffffff80005db3:	bf 7a 00 00 00       	mov    $0x7a,%edi
ffffffff80005db8:	e8 25 f5 ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80005dbd:	48 8d 05 9b eb ff ff 	lea    -0x1465(%rip),%rax        # ffffffff8000495f <interrupt_handle_0x7b>
ffffffff80005dc4:	48 89 c6             	mov    %rax,%rsi
ffffffff80005dc7:	bf 7b 00 00 00       	mov    $0x7b,%edi
ffffffff80005dcc:	e8 11 f5 ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80005dd1:	48 8d 05 94 eb ff ff 	lea    -0x146c(%rip),%rax        # ffffffff8000496c <interrupt_handle_0x7c>
ffffffff80005dd8:	48 89 c6             	mov    %rax,%rsi
ffffffff80005ddb:	bf 7c 00 00 00       	mov    $0x7c,%edi
ffffffff80005de0:	e8 fd f4 ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80005de5:	48 8d 05 8d eb ff ff 	lea    -0x1473(%rip),%rax        # ffffffff80004979 <interrupt_handle_0x7d>
ffffffff80005dec:	48 89 c6             	mov    %rax,%rsi
ffffffff80005def:	bf 7d 00 00 00       	mov    $0x7d,%edi
ffffffff80005df4:	e8 e9 f4 ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80005df9:	48 8d 05 86 eb ff ff 	lea    -0x147a(%rip),%rax        # ffffffff80004986 <interrupt_handle_0x7e>
ffffffff80005e00:	48 89 c6             	mov    %rax,%rsi
ffffffff80005e03:	bf 7e 00 00 00       	mov    $0x7e,%edi
ffffffff80005e08:	e8 d5 f4 ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80005e0d:	48 8d 05 7f eb ff ff 	lea    -0x1481(%rip),%rax        # ffffffff80004993 <interrupt_handle_0x7f>
ffffffff80005e14:	48 89 c6             	mov    %rax,%rsi
ffffffff80005e17:	bf 7f 00 00 00       	mov    $0x7f,%edi
ffffffff80005e1c:	e8 c1 f4 ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80005e21:	48 8d 05 78 eb ff ff 	lea    -0x1488(%rip),%rax        # ffffffff800049a0 <interrupt_handle_0x80>
ffffffff80005e28:	48 89 c6             	mov    %rax,%rsi
ffffffff80005e2b:	bf 80 00 00 00       	mov    $0x80,%edi
ffffffff80005e30:	e8 ad f4 ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80005e35:	48 8d 05 74 eb ff ff 	lea    -0x148c(%rip),%rax        # ffffffff800049b0 <interrupt_handle_0x81>
ffffffff80005e3c:	48 89 c6             	mov    %rax,%rsi
ffffffff80005e3f:	bf 81 00 00 00       	mov    $0x81,%edi
ffffffff80005e44:	e8 99 f4 ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80005e49:	48 8d 05 70 eb ff ff 	lea    -0x1490(%rip),%rax        # ffffffff800049c0 <interrupt_handle_0x82>
ffffffff80005e50:	48 89 c6             	mov    %rax,%rsi
ffffffff80005e53:	bf 82 00 00 00       	mov    $0x82,%edi
ffffffff80005e58:	e8 85 f4 ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80005e5d:	48 8d 05 6c eb ff ff 	lea    -0x1494(%rip),%rax        # ffffffff800049d0 <interrupt_handle_0x83>
ffffffff80005e64:	48 89 c6             	mov    %rax,%rsi
ffffffff80005e67:	bf 83 00 00 00       	mov    $0x83,%edi
ffffffff80005e6c:	e8 71 f4 ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80005e71:	48 8d 05 68 eb ff ff 	lea    -0x1498(%rip),%rax        # ffffffff800049e0 <interrupt_handle_0x84>
ffffffff80005e78:	48 89 c6             	mov    %rax,%rsi
ffffffff80005e7b:	bf 84 00 00 00       	mov    $0x84,%edi
ffffffff80005e80:	e8 5d f4 ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80005e85:	48 8d 05 64 eb ff ff 	lea    -0x149c(%rip),%rax        # ffffffff800049f0 <interrupt_handle_0x85>
ffffffff80005e8c:	48 89 c6             	mov    %rax,%rsi
ffffffff80005e8f:	bf 85 00 00 00       	mov    $0x85,%edi
ffffffff80005e94:	e8 49 f4 ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80005e99:	48 8d 05 60 eb ff ff 	lea    -0x14a0(%rip),%rax        # ffffffff80004a00 <interrupt_handle_0x86>
ffffffff80005ea0:	48 89 c6             	mov    %rax,%rsi
ffffffff80005ea3:	bf 86 00 00 00       	mov    $0x86,%edi
ffffffff80005ea8:	e8 35 f4 ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80005ead:	48 8d 05 5c eb ff ff 	lea    -0x14a4(%rip),%rax        # ffffffff80004a10 <interrupt_handle_0x87>
ffffffff80005eb4:	48 89 c6             	mov    %rax,%rsi
ffffffff80005eb7:	bf 87 00 00 00       	mov    $0x87,%edi
ffffffff80005ebc:	e8 21 f4 ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80005ec1:	48 8d 05 58 eb ff ff 	lea    -0x14a8(%rip),%rax        # ffffffff80004a20 <interrupt_handle_0x88>
ffffffff80005ec8:	48 89 c6             	mov    %rax,%rsi
ffffffff80005ecb:	bf 88 00 00 00       	mov    $0x88,%edi
ffffffff80005ed0:	e8 0d f4 ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80005ed5:	48 8d 05 54 eb ff ff 	lea    -0x14ac(%rip),%rax        # ffffffff80004a30 <interrupt_handle_0x89>
ffffffff80005edc:	48 89 c6             	mov    %rax,%rsi
ffffffff80005edf:	bf 89 00 00 00       	mov    $0x89,%edi
ffffffff80005ee4:	e8 f9 f3 ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80005ee9:	48 8d 05 50 eb ff ff 	lea    -0x14b0(%rip),%rax        # ffffffff80004a40 <interrupt_handle_0x8a>
ffffffff80005ef0:	48 89 c6             	mov    %rax,%rsi
ffffffff80005ef3:	bf 8a 00 00 00       	mov    $0x8a,%edi
ffffffff80005ef8:	e8 e5 f3 ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80005efd:	48 8d 05 4c eb ff ff 	lea    -0x14b4(%rip),%rax        # ffffffff80004a50 <interrupt_handle_0x8b>
ffffffff80005f04:	48 89 c6             	mov    %rax,%rsi
ffffffff80005f07:	bf 8b 00 00 00       	mov    $0x8b,%edi
ffffffff80005f0c:	e8 d1 f3 ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80005f11:	48 8d 05 48 eb ff ff 	lea    -0x14b8(%rip),%rax        # ffffffff80004a60 <interrupt_handle_0x8c>
ffffffff80005f18:	48 89 c6             	mov    %rax,%rsi
ffffffff80005f1b:	bf 8c 00 00 00       	mov    $0x8c,%edi
ffffffff80005f20:	e8 bd f3 ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80005f25:	48 8d 05 44 eb ff ff 	lea    -0x14bc(%rip),%rax        # ffffffff80004a70 <interrupt_handle_0x8d>
ffffffff80005f2c:	48 89 c6             	mov    %rax,%rsi
ffffffff80005f2f:	bf 8d 00 00 00       	mov    $0x8d,%edi
ffffffff80005f34:	e8 a9 f3 ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80005f39:	48 8d 05 40 eb ff ff 	lea    -0x14c0(%rip),%rax        # ffffffff80004a80 <interrupt_handle_0x8e>
ffffffff80005f40:	48 89 c6             	mov    %rax,%rsi
ffffffff80005f43:	bf 8e 00 00 00       	mov    $0x8e,%edi
ffffffff80005f48:	e8 95 f3 ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80005f4d:	48 8d 05 3c eb ff ff 	lea    -0x14c4(%rip),%rax        # ffffffff80004a90 <interrupt_handle_0x8f>
ffffffff80005f54:	48 89 c6             	mov    %rax,%rsi
ffffffff80005f57:	bf 8f 00 00 00       	mov    $0x8f,%edi
ffffffff80005f5c:	e8 81 f3 ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80005f61:	48 8d 05 38 eb ff ff 	lea    -0x14c8(%rip),%rax        # ffffffff80004aa0 <interrupt_handle_0x90>
ffffffff80005f68:	48 89 c6             	mov    %rax,%rsi
ffffffff80005f6b:	bf 90 00 00 00       	mov    $0x90,%edi
ffffffff80005f70:	e8 6d f3 ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80005f75:	48 8d 05 34 eb ff ff 	lea    -0x14cc(%rip),%rax        # ffffffff80004ab0 <interrupt_handle_0x91>
ffffffff80005f7c:	48 89 c6             	mov    %rax,%rsi
ffffffff80005f7f:	bf 91 00 00 00       	mov    $0x91,%edi
ffffffff80005f84:	e8 59 f3 ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80005f89:	48 8d 05 30 eb ff ff 	lea    -0x14d0(%rip),%rax        # ffffffff80004ac0 <interrupt_handle_0x92>
ffffffff80005f90:	48 89 c6             	mov    %rax,%rsi
ffffffff80005f93:	bf 92 00 00 00       	mov    $0x92,%edi
ffffffff80005f98:	e8 45 f3 ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80005f9d:	48 8d 05 2c eb ff ff 	lea    -0x14d4(%rip),%rax        # ffffffff80004ad0 <interrupt_handle_0x93>
ffffffff80005fa4:	48 89 c6             	mov    %rax,%rsi
ffffffff80005fa7:	bf 93 00 00 00       	mov    $0x93,%edi
ffffffff80005fac:	e8 31 f3 ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80005fb1:	48 8d 05 28 eb ff ff 	lea    -0x14d8(%rip),%rax        # ffffffff80004ae0 <interrupt_handle_0x94>
ffffffff80005fb8:	48 89 c6             	mov    %rax,%rsi
ffffffff80005fbb:	bf 94 00 00 00       	mov    $0x94,%edi
ffffffff80005fc0:	e8 1d f3 ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80005fc5:	48 8d 05 24 eb ff ff 	lea    -0x14dc(%rip),%rax        # ffffffff80004af0 <interrupt_handle_0x95>
ffffffff80005fcc:	48 89 c6             	mov    %rax,%rsi
ffffffff80005fcf:	bf 95 00 00 00       	mov    $0x95,%edi
ffffffff80005fd4:	e8 09 f3 ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80005fd9:	48 8d 05 20 eb ff ff 	lea    -0x14e0(%rip),%rax        # ffffffff80004b00 <interrupt_handle_0x96>
ffffffff80005fe0:	48 89 c6             	mov    %rax,%rsi
ffffffff80005fe3:	bf 96 00 00 00       	mov    $0x96,%edi
ffffffff80005fe8:	e8 f5 f2 ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80005fed:	48 8d 05 1c eb ff ff 	lea    -0x14e4(%rip),%rax        # ffffffff80004b10 <interrupt_handle_0x97>
ffffffff80005ff4:	48 89 c6             	mov    %rax,%rsi
ffffffff80005ff7:	bf 97 00 00 00       	mov    $0x97,%edi
ffffffff80005ffc:	e8 e1 f2 ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80006001:	48 8d 05 18 eb ff ff 	lea    -0x14e8(%rip),%rax        # ffffffff80004b20 <interrupt_handle_0x98>
ffffffff80006008:	48 89 c6             	mov    %rax,%rsi
ffffffff8000600b:	bf 98 00 00 00       	mov    $0x98,%edi
ffffffff80006010:	e8 cd f2 ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80006015:	48 8d 05 14 eb ff ff 	lea    -0x14ec(%rip),%rax        # ffffffff80004b30 <interrupt_handle_0x99>
ffffffff8000601c:	48 89 c6             	mov    %rax,%rsi
ffffffff8000601f:	bf 99 00 00 00       	mov    $0x99,%edi
ffffffff80006024:	e8 b9 f2 ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80006029:	48 8d 05 10 eb ff ff 	lea    -0x14f0(%rip),%rax        # ffffffff80004b40 <interrupt_handle_0x9a>
ffffffff80006030:	48 89 c6             	mov    %rax,%rsi
ffffffff80006033:	bf 9a 00 00 00       	mov    $0x9a,%edi
ffffffff80006038:	e8 a5 f2 ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff8000603d:	48 8d 05 0c eb ff ff 	lea    -0x14f4(%rip),%rax        # ffffffff80004b50 <interrupt_handle_0x9b>
ffffffff80006044:	48 89 c6             	mov    %rax,%rsi
ffffffff80006047:	bf 9b 00 00 00       	mov    $0x9b,%edi
ffffffff8000604c:	e8 91 f2 ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80006051:	48 8d 05 08 eb ff ff 	lea    -0x14f8(%rip),%rax        # ffffffff80004b60 <interrupt_handle_0x9c>
ffffffff80006058:	48 89 c6             	mov    %rax,%rsi
ffffffff8000605b:	bf 9c 00 00 00       	mov    $0x9c,%edi
ffffffff80006060:	e8 7d f2 ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80006065:	48 8d 05 04 eb ff ff 	lea    -0x14fc(%rip),%rax        # ffffffff80004b70 <interrupt_handle_0x9d>
ffffffff8000606c:	48 89 c6             	mov    %rax,%rsi
ffffffff8000606f:	bf 9d 00 00 00       	mov    $0x9d,%edi
ffffffff80006074:	e8 69 f2 ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80006079:	48 8d 05 00 eb ff ff 	lea    -0x1500(%rip),%rax        # ffffffff80004b80 <interrupt_handle_0x9e>
ffffffff80006080:	48 89 c6             	mov    %rax,%rsi
ffffffff80006083:	bf 9e 00 00 00       	mov    $0x9e,%edi
ffffffff80006088:	e8 55 f2 ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff8000608d:	48 8d 05 fc ea ff ff 	lea    -0x1504(%rip),%rax        # ffffffff80004b90 <interrupt_handle_0x9f>
ffffffff80006094:	48 89 c6             	mov    %rax,%rsi
ffffffff80006097:	bf 9f 00 00 00       	mov    $0x9f,%edi
ffffffff8000609c:	e8 41 f2 ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff800060a1:	48 8d 05 f8 ea ff ff 	lea    -0x1508(%rip),%rax        # ffffffff80004ba0 <interrupt_handle_0xa0>
ffffffff800060a8:	48 89 c6             	mov    %rax,%rsi
ffffffff800060ab:	bf a0 00 00 00       	mov    $0xa0,%edi
ffffffff800060b0:	e8 2d f2 ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff800060b5:	48 8d 05 f4 ea ff ff 	lea    -0x150c(%rip),%rax        # ffffffff80004bb0 <interrupt_handle_0xa1>
ffffffff800060bc:	48 89 c6             	mov    %rax,%rsi
ffffffff800060bf:	bf a1 00 00 00       	mov    $0xa1,%edi
ffffffff800060c4:	e8 19 f2 ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff800060c9:	48 8d 05 f0 ea ff ff 	lea    -0x1510(%rip),%rax        # ffffffff80004bc0 <interrupt_handle_0xa2>
ffffffff800060d0:	48 89 c6             	mov    %rax,%rsi
ffffffff800060d3:	bf a2 00 00 00       	mov    $0xa2,%edi
ffffffff800060d8:	e8 05 f2 ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff800060dd:	48 8d 05 ec ea ff ff 	lea    -0x1514(%rip),%rax        # ffffffff80004bd0 <interrupt_handle_0xa3>
ffffffff800060e4:	48 89 c6             	mov    %rax,%rsi
ffffffff800060e7:	bf a3 00 00 00       	mov    $0xa3,%edi
ffffffff800060ec:	e8 f1 f1 ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff800060f1:	48 8d 05 e8 ea ff ff 	lea    -0x1518(%rip),%rax        # ffffffff80004be0 <interrupt_handle_0xa4>
ffffffff800060f8:	48 89 c6             	mov    %rax,%rsi
ffffffff800060fb:	bf a4 00 00 00       	mov    $0xa4,%edi
ffffffff80006100:	e8 dd f1 ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80006105:	48 8d 05 e4 ea ff ff 	lea    -0x151c(%rip),%rax        # ffffffff80004bf0 <interrupt_handle_0xa5>
ffffffff8000610c:	48 89 c6             	mov    %rax,%rsi
ffffffff8000610f:	bf a5 00 00 00       	mov    $0xa5,%edi
ffffffff80006114:	e8 c9 f1 ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80006119:	48 8d 05 e0 ea ff ff 	lea    -0x1520(%rip),%rax        # ffffffff80004c00 <interrupt_handle_0xa6>
ffffffff80006120:	48 89 c6             	mov    %rax,%rsi
ffffffff80006123:	bf a6 00 00 00       	mov    $0xa6,%edi
ffffffff80006128:	e8 b5 f1 ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff8000612d:	48 8d 05 dc ea ff ff 	lea    -0x1524(%rip),%rax        # ffffffff80004c10 <interrupt_handle_0xa7>
ffffffff80006134:	48 89 c6             	mov    %rax,%rsi
ffffffff80006137:	bf a7 00 00 00       	mov    $0xa7,%edi
ffffffff8000613c:	e8 a1 f1 ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80006141:	48 8d 05 d8 ea ff ff 	lea    -0x1528(%rip),%rax        # ffffffff80004c20 <interrupt_handle_0xa8>
ffffffff80006148:	48 89 c6             	mov    %rax,%rsi
ffffffff8000614b:	bf a8 00 00 00       	mov    $0xa8,%edi
ffffffff80006150:	e8 8d f1 ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80006155:	48 8d 05 d4 ea ff ff 	lea    -0x152c(%rip),%rax        # ffffffff80004c30 <interrupt_handle_0xa9>
ffffffff8000615c:	48 89 c6             	mov    %rax,%rsi
ffffffff8000615f:	bf a9 00 00 00       	mov    $0xa9,%edi
ffffffff80006164:	e8 79 f1 ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80006169:	48 8d 05 d0 ea ff ff 	lea    -0x1530(%rip),%rax        # ffffffff80004c40 <interrupt_handle_0xaa>
ffffffff80006170:	48 89 c6             	mov    %rax,%rsi
ffffffff80006173:	bf aa 00 00 00       	mov    $0xaa,%edi
ffffffff80006178:	e8 65 f1 ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff8000617d:	48 8d 05 cc ea ff ff 	lea    -0x1534(%rip),%rax        # ffffffff80004c50 <interrupt_handle_0xab>
ffffffff80006184:	48 89 c6             	mov    %rax,%rsi
ffffffff80006187:	bf ab 00 00 00       	mov    $0xab,%edi
ffffffff8000618c:	e8 51 f1 ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80006191:	48 8d 05 c8 ea ff ff 	lea    -0x1538(%rip),%rax        # ffffffff80004c60 <interrupt_handle_0xac>
ffffffff80006198:	48 89 c6             	mov    %rax,%rsi
ffffffff8000619b:	bf ac 00 00 00       	mov    $0xac,%edi
ffffffff800061a0:	e8 3d f1 ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff800061a5:	48 8d 05 c4 ea ff ff 	lea    -0x153c(%rip),%rax        # ffffffff80004c70 <interrupt_handle_0xad>
ffffffff800061ac:	48 89 c6             	mov    %rax,%rsi
ffffffff800061af:	bf ad 00 00 00       	mov    $0xad,%edi
ffffffff800061b4:	e8 29 f1 ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff800061b9:	48 8d 05 c0 ea ff ff 	lea    -0x1540(%rip),%rax        # ffffffff80004c80 <interrupt_handle_0xae>
ffffffff800061c0:	48 89 c6             	mov    %rax,%rsi
ffffffff800061c3:	bf ae 00 00 00       	mov    $0xae,%edi
ffffffff800061c8:	e8 15 f1 ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff800061cd:	48 8d 05 bc ea ff ff 	lea    -0x1544(%rip),%rax        # ffffffff80004c90 <interrupt_handle_0xaf>
ffffffff800061d4:	48 89 c6             	mov    %rax,%rsi
ffffffff800061d7:	bf af 00 00 00       	mov    $0xaf,%edi
ffffffff800061dc:	e8 01 f1 ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff800061e1:	48 8d 05 b8 ea ff ff 	lea    -0x1548(%rip),%rax        # ffffffff80004ca0 <interrupt_handle_0xb0>
ffffffff800061e8:	48 89 c6             	mov    %rax,%rsi
ffffffff800061eb:	bf b0 00 00 00       	mov    $0xb0,%edi
ffffffff800061f0:	e8 ed f0 ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff800061f5:	48 8d 05 b4 ea ff ff 	lea    -0x154c(%rip),%rax        # ffffffff80004cb0 <interrupt_handle_0xb1>
ffffffff800061fc:	48 89 c6             	mov    %rax,%rsi
ffffffff800061ff:	bf b1 00 00 00       	mov    $0xb1,%edi
ffffffff80006204:	e8 d9 f0 ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80006209:	48 8d 05 b0 ea ff ff 	lea    -0x1550(%rip),%rax        # ffffffff80004cc0 <interrupt_handle_0xb2>
ffffffff80006210:	48 89 c6             	mov    %rax,%rsi
ffffffff80006213:	bf b2 00 00 00       	mov    $0xb2,%edi
ffffffff80006218:	e8 c5 f0 ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff8000621d:	48 8d 05 ac ea ff ff 	lea    -0x1554(%rip),%rax        # ffffffff80004cd0 <interrupt_handle_0xb3>
ffffffff80006224:	48 89 c6             	mov    %rax,%rsi
ffffffff80006227:	bf b3 00 00 00       	mov    $0xb3,%edi
ffffffff8000622c:	e8 b1 f0 ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80006231:	48 8d 05 a8 ea ff ff 	lea    -0x1558(%rip),%rax        # ffffffff80004ce0 <interrupt_handle_0xb4>
ffffffff80006238:	48 89 c6             	mov    %rax,%rsi
ffffffff8000623b:	bf b4 00 00 00       	mov    $0xb4,%edi
ffffffff80006240:	e8 9d f0 ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80006245:	48 8d 05 a4 ea ff ff 	lea    -0x155c(%rip),%rax        # ffffffff80004cf0 <interrupt_handle_0xb5>
ffffffff8000624c:	48 89 c6             	mov    %rax,%rsi
ffffffff8000624f:	bf b5 00 00 00       	mov    $0xb5,%edi
ffffffff80006254:	e8 89 f0 ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80006259:	48 8d 05 a0 ea ff ff 	lea    -0x1560(%rip),%rax        # ffffffff80004d00 <interrupt_handle_0xb6>
ffffffff80006260:	48 89 c6             	mov    %rax,%rsi
ffffffff80006263:	bf b6 00 00 00       	mov    $0xb6,%edi
ffffffff80006268:	e8 75 f0 ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff8000626d:	48 8d 05 9c ea ff ff 	lea    -0x1564(%rip),%rax        # ffffffff80004d10 <interrupt_handle_0xb7>
ffffffff80006274:	48 89 c6             	mov    %rax,%rsi
ffffffff80006277:	bf b7 00 00 00       	mov    $0xb7,%edi
ffffffff8000627c:	e8 61 f0 ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80006281:	48 8d 05 98 ea ff ff 	lea    -0x1568(%rip),%rax        # ffffffff80004d20 <interrupt_handle_0xb8>
ffffffff80006288:	48 89 c6             	mov    %rax,%rsi
ffffffff8000628b:	bf b8 00 00 00       	mov    $0xb8,%edi
ffffffff80006290:	e8 4d f0 ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80006295:	48 8d 05 94 ea ff ff 	lea    -0x156c(%rip),%rax        # ffffffff80004d30 <interrupt_handle_0xb9>
ffffffff8000629c:	48 89 c6             	mov    %rax,%rsi
ffffffff8000629f:	bf b9 00 00 00       	mov    $0xb9,%edi
ffffffff800062a4:	e8 39 f0 ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff800062a9:	48 8d 05 90 ea ff ff 	lea    -0x1570(%rip),%rax        # ffffffff80004d40 <interrupt_handle_0xba>
ffffffff800062b0:	48 89 c6             	mov    %rax,%rsi
ffffffff800062b3:	bf ba 00 00 00       	mov    $0xba,%edi
ffffffff800062b8:	e8 25 f0 ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff800062bd:	48 8d 05 8c ea ff ff 	lea    -0x1574(%rip),%rax        # ffffffff80004d50 <interrupt_handle_0xbb>
ffffffff800062c4:	48 89 c6             	mov    %rax,%rsi
ffffffff800062c7:	bf bb 00 00 00       	mov    $0xbb,%edi
ffffffff800062cc:	e8 11 f0 ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff800062d1:	48 8d 05 88 ea ff ff 	lea    -0x1578(%rip),%rax        # ffffffff80004d60 <interrupt_handle_0xbc>
ffffffff800062d8:	48 89 c6             	mov    %rax,%rsi
ffffffff800062db:	bf bc 00 00 00       	mov    $0xbc,%edi
ffffffff800062e0:	e8 fd ef ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff800062e5:	48 8d 05 84 ea ff ff 	lea    -0x157c(%rip),%rax        # ffffffff80004d70 <interrupt_handle_0xbd>
ffffffff800062ec:	48 89 c6             	mov    %rax,%rsi
ffffffff800062ef:	bf bd 00 00 00       	mov    $0xbd,%edi
ffffffff800062f4:	e8 e9 ef ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff800062f9:	48 8d 05 80 ea ff ff 	lea    -0x1580(%rip),%rax        # ffffffff80004d80 <interrupt_handle_0xbe>
ffffffff80006300:	48 89 c6             	mov    %rax,%rsi
ffffffff80006303:	bf be 00 00 00       	mov    $0xbe,%edi
ffffffff80006308:	e8 d5 ef ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff8000630d:	48 8d 05 7c ea ff ff 	lea    -0x1584(%rip),%rax        # ffffffff80004d90 <interrupt_handle_0xbf>
ffffffff80006314:	48 89 c6             	mov    %rax,%rsi
ffffffff80006317:	bf bf 00 00 00       	mov    $0xbf,%edi
ffffffff8000631c:	e8 c1 ef ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80006321:	48 8d 05 78 ea ff ff 	lea    -0x1588(%rip),%rax        # ffffffff80004da0 <interrupt_handle_0xc0>
ffffffff80006328:	48 89 c6             	mov    %rax,%rsi
ffffffff8000632b:	bf c0 00 00 00       	mov    $0xc0,%edi
ffffffff80006330:	e8 ad ef ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80006335:	48 8d 05 74 ea ff ff 	lea    -0x158c(%rip),%rax        # ffffffff80004db0 <interrupt_handle_0xc1>
ffffffff8000633c:	48 89 c6             	mov    %rax,%rsi
ffffffff8000633f:	bf c1 00 00 00       	mov    $0xc1,%edi
ffffffff80006344:	e8 99 ef ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80006349:	48 8d 05 70 ea ff ff 	lea    -0x1590(%rip),%rax        # ffffffff80004dc0 <interrupt_handle_0xc2>
ffffffff80006350:	48 89 c6             	mov    %rax,%rsi
ffffffff80006353:	bf c2 00 00 00       	mov    $0xc2,%edi
ffffffff80006358:	e8 85 ef ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff8000635d:	48 8d 05 6c ea ff ff 	lea    -0x1594(%rip),%rax        # ffffffff80004dd0 <interrupt_handle_0xc3>
ffffffff80006364:	48 89 c6             	mov    %rax,%rsi
ffffffff80006367:	bf c3 00 00 00       	mov    $0xc3,%edi
ffffffff8000636c:	e8 71 ef ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80006371:	48 8d 05 68 ea ff ff 	lea    -0x1598(%rip),%rax        # ffffffff80004de0 <interrupt_handle_0xc4>
ffffffff80006378:	48 89 c6             	mov    %rax,%rsi
ffffffff8000637b:	bf c4 00 00 00       	mov    $0xc4,%edi
ffffffff80006380:	e8 5d ef ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80006385:	48 8d 05 64 ea ff ff 	lea    -0x159c(%rip),%rax        # ffffffff80004df0 <interrupt_handle_0xc5>
ffffffff8000638c:	48 89 c6             	mov    %rax,%rsi
ffffffff8000638f:	bf c5 00 00 00       	mov    $0xc5,%edi
ffffffff80006394:	e8 49 ef ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80006399:	48 8d 05 60 ea ff ff 	lea    -0x15a0(%rip),%rax        # ffffffff80004e00 <interrupt_handle_0xc6>
ffffffff800063a0:	48 89 c6             	mov    %rax,%rsi
ffffffff800063a3:	bf c6 00 00 00       	mov    $0xc6,%edi
ffffffff800063a8:	e8 35 ef ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff800063ad:	48 8d 05 5c ea ff ff 	lea    -0x15a4(%rip),%rax        # ffffffff80004e10 <interrupt_handle_0xc7>
ffffffff800063b4:	48 89 c6             	mov    %rax,%rsi
ffffffff800063b7:	bf c7 00 00 00       	mov    $0xc7,%edi
ffffffff800063bc:	e8 21 ef ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff800063c1:	48 8d 05 58 ea ff ff 	lea    -0x15a8(%rip),%rax        # ffffffff80004e20 <interrupt_handle_0xc8>
ffffffff800063c8:	48 89 c6             	mov    %rax,%rsi
ffffffff800063cb:	bf c8 00 00 00       	mov    $0xc8,%edi
ffffffff800063d0:	e8 0d ef ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff800063d5:	48 8d 05 54 ea ff ff 	lea    -0x15ac(%rip),%rax        # ffffffff80004e30 <interrupt_handle_0xc9>
ffffffff800063dc:	48 89 c6             	mov    %rax,%rsi
ffffffff800063df:	bf c9 00 00 00       	mov    $0xc9,%edi
ffffffff800063e4:	e8 f9 ee ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff800063e9:	48 8d 05 50 ea ff ff 	lea    -0x15b0(%rip),%rax        # ffffffff80004e40 <interrupt_handle_0xca>
ffffffff800063f0:	48 89 c6             	mov    %rax,%rsi
ffffffff800063f3:	bf ca 00 00 00       	mov    $0xca,%edi
ffffffff800063f8:	e8 e5 ee ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff800063fd:	48 8d 05 4c ea ff ff 	lea    -0x15b4(%rip),%rax        # ffffffff80004e50 <interrupt_handle_0xcb>
ffffffff80006404:	48 89 c6             	mov    %rax,%rsi
ffffffff80006407:	bf cb 00 00 00       	mov    $0xcb,%edi
ffffffff8000640c:	e8 d1 ee ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80006411:	48 8d 05 48 ea ff ff 	lea    -0x15b8(%rip),%rax        # ffffffff80004e60 <interrupt_handle_0xcc>
ffffffff80006418:	48 89 c6             	mov    %rax,%rsi
ffffffff8000641b:	bf cc 00 00 00       	mov    $0xcc,%edi
ffffffff80006420:	e8 bd ee ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80006425:	48 8d 05 44 ea ff ff 	lea    -0x15bc(%rip),%rax        # ffffffff80004e70 <interrupt_handle_0xcd>
ffffffff8000642c:	48 89 c6             	mov    %rax,%rsi
ffffffff8000642f:	bf cd 00 00 00       	mov    $0xcd,%edi
ffffffff80006434:	e8 a9 ee ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80006439:	48 8d 05 40 ea ff ff 	lea    -0x15c0(%rip),%rax        # ffffffff80004e80 <interrupt_handle_0xce>
ffffffff80006440:	48 89 c6             	mov    %rax,%rsi
ffffffff80006443:	bf ce 00 00 00       	mov    $0xce,%edi
ffffffff80006448:	e8 95 ee ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff8000644d:	48 8d 05 3c ea ff ff 	lea    -0x15c4(%rip),%rax        # ffffffff80004e90 <interrupt_handle_0xcf>
ffffffff80006454:	48 89 c6             	mov    %rax,%rsi
ffffffff80006457:	bf cf 00 00 00       	mov    $0xcf,%edi
ffffffff8000645c:	e8 81 ee ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80006461:	48 8d 05 38 ea ff ff 	lea    -0x15c8(%rip),%rax        # ffffffff80004ea0 <interrupt_handle_0xd0>
ffffffff80006468:	48 89 c6             	mov    %rax,%rsi
ffffffff8000646b:	bf d0 00 00 00       	mov    $0xd0,%edi
ffffffff80006470:	e8 6d ee ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80006475:	48 8d 05 34 ea ff ff 	lea    -0x15cc(%rip),%rax        # ffffffff80004eb0 <interrupt_handle_0xd1>
ffffffff8000647c:	48 89 c6             	mov    %rax,%rsi
ffffffff8000647f:	bf d1 00 00 00       	mov    $0xd1,%edi
ffffffff80006484:	e8 59 ee ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80006489:	48 8d 05 30 ea ff ff 	lea    -0x15d0(%rip),%rax        # ffffffff80004ec0 <interrupt_handle_0xd2>
ffffffff80006490:	48 89 c6             	mov    %rax,%rsi
ffffffff80006493:	bf d2 00 00 00       	mov    $0xd2,%edi
ffffffff80006498:	e8 45 ee ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff8000649d:	48 8d 05 2c ea ff ff 	lea    -0x15d4(%rip),%rax        # ffffffff80004ed0 <interrupt_handle_0xd3>
ffffffff800064a4:	48 89 c6             	mov    %rax,%rsi
ffffffff800064a7:	bf d3 00 00 00       	mov    $0xd3,%edi
ffffffff800064ac:	e8 31 ee ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff800064b1:	48 8d 05 28 ea ff ff 	lea    -0x15d8(%rip),%rax        # ffffffff80004ee0 <interrupt_handle_0xd4>
ffffffff800064b8:	48 89 c6             	mov    %rax,%rsi
ffffffff800064bb:	bf d4 00 00 00       	mov    $0xd4,%edi
ffffffff800064c0:	e8 1d ee ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff800064c5:	48 8d 05 24 ea ff ff 	lea    -0x15dc(%rip),%rax        # ffffffff80004ef0 <interrupt_handle_0xd5>
ffffffff800064cc:	48 89 c6             	mov    %rax,%rsi
ffffffff800064cf:	bf d5 00 00 00       	mov    $0xd5,%edi
ffffffff800064d4:	e8 09 ee ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff800064d9:	48 8d 05 20 ea ff ff 	lea    -0x15e0(%rip),%rax        # ffffffff80004f00 <interrupt_handle_0xd6>
ffffffff800064e0:	48 89 c6             	mov    %rax,%rsi
ffffffff800064e3:	bf d6 00 00 00       	mov    $0xd6,%edi
ffffffff800064e8:	e8 f5 ed ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff800064ed:	48 8d 05 1c ea ff ff 	lea    -0x15e4(%rip),%rax        # ffffffff80004f10 <interrupt_handle_0xd7>
ffffffff800064f4:	48 89 c6             	mov    %rax,%rsi
ffffffff800064f7:	bf d7 00 00 00       	mov    $0xd7,%edi
ffffffff800064fc:	e8 e1 ed ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80006501:	48 8d 05 18 ea ff ff 	lea    -0x15e8(%rip),%rax        # ffffffff80004f20 <interrupt_handle_0xd8>
ffffffff80006508:	48 89 c6             	mov    %rax,%rsi
ffffffff8000650b:	bf d8 00 00 00       	mov    $0xd8,%edi
ffffffff80006510:	e8 cd ed ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80006515:	48 8d 05 14 ea ff ff 	lea    -0x15ec(%rip),%rax        # ffffffff80004f30 <interrupt_handle_0xd9>
ffffffff8000651c:	48 89 c6             	mov    %rax,%rsi
ffffffff8000651f:	bf d9 00 00 00       	mov    $0xd9,%edi
ffffffff80006524:	e8 b9 ed ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80006529:	48 8d 05 10 ea ff ff 	lea    -0x15f0(%rip),%rax        # ffffffff80004f40 <interrupt_handle_0xda>
ffffffff80006530:	48 89 c6             	mov    %rax,%rsi
ffffffff80006533:	bf da 00 00 00       	mov    $0xda,%edi
ffffffff80006538:	e8 a5 ed ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff8000653d:	48 8d 05 0c ea ff ff 	lea    -0x15f4(%rip),%rax        # ffffffff80004f50 <interrupt_handle_0xdb>
ffffffff80006544:	48 89 c6             	mov    %rax,%rsi
ffffffff80006547:	bf db 00 00 00       	mov    $0xdb,%edi
ffffffff8000654c:	e8 91 ed ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80006551:	48 8d 05 08 ea ff ff 	lea    -0x15f8(%rip),%rax        # ffffffff80004f60 <interrupt_handle_0xdc>
ffffffff80006558:	48 89 c6             	mov    %rax,%rsi
ffffffff8000655b:	bf dc 00 00 00       	mov    $0xdc,%edi
ffffffff80006560:	e8 7d ed ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80006565:	48 8d 05 04 ea ff ff 	lea    -0x15fc(%rip),%rax        # ffffffff80004f70 <interrupt_handle_0xdd>
ffffffff8000656c:	48 89 c6             	mov    %rax,%rsi
ffffffff8000656f:	bf dd 00 00 00       	mov    $0xdd,%edi
ffffffff80006574:	e8 69 ed ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80006579:	48 8d 05 00 ea ff ff 	lea    -0x1600(%rip),%rax        # ffffffff80004f80 <interrupt_handle_0xde>
ffffffff80006580:	48 89 c6             	mov    %rax,%rsi
ffffffff80006583:	bf de 00 00 00       	mov    $0xde,%edi
ffffffff80006588:	e8 55 ed ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff8000658d:	48 8d 05 fc e9 ff ff 	lea    -0x1604(%rip),%rax        # ffffffff80004f90 <interrupt_handle_0xdf>
ffffffff80006594:	48 89 c6             	mov    %rax,%rsi
ffffffff80006597:	bf df 00 00 00       	mov    $0xdf,%edi
ffffffff8000659c:	e8 41 ed ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff800065a1:	48 8d 05 f8 e9 ff ff 	lea    -0x1608(%rip),%rax        # ffffffff80004fa0 <interrupt_handle_0xe0>
ffffffff800065a8:	48 89 c6             	mov    %rax,%rsi
ffffffff800065ab:	bf e0 00 00 00       	mov    $0xe0,%edi
ffffffff800065b0:	e8 2d ed ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff800065b5:	48 8d 05 f4 e9 ff ff 	lea    -0x160c(%rip),%rax        # ffffffff80004fb0 <interrupt_handle_0xe1>
ffffffff800065bc:	48 89 c6             	mov    %rax,%rsi
ffffffff800065bf:	bf e1 00 00 00       	mov    $0xe1,%edi
ffffffff800065c4:	e8 19 ed ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff800065c9:	48 8d 05 f0 e9 ff ff 	lea    -0x1610(%rip),%rax        # ffffffff80004fc0 <interrupt_handle_0xe2>
ffffffff800065d0:	48 89 c6             	mov    %rax,%rsi
ffffffff800065d3:	bf e2 00 00 00       	mov    $0xe2,%edi
ffffffff800065d8:	e8 05 ed ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff800065dd:	48 8d 05 ec e9 ff ff 	lea    -0x1614(%rip),%rax        # ffffffff80004fd0 <interrupt_handle_0xe3>
ffffffff800065e4:	48 89 c6             	mov    %rax,%rsi
ffffffff800065e7:	bf e3 00 00 00       	mov    $0xe3,%edi
ffffffff800065ec:	e8 f1 ec ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff800065f1:	48 8d 05 e8 e9 ff ff 	lea    -0x1618(%rip),%rax        # ffffffff80004fe0 <interrupt_handle_0xe4>
ffffffff800065f8:	48 89 c6             	mov    %rax,%rsi
ffffffff800065fb:	bf e4 00 00 00       	mov    $0xe4,%edi
ffffffff80006600:	e8 dd ec ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80006605:	48 8d 05 e4 e9 ff ff 	lea    -0x161c(%rip),%rax        # ffffffff80004ff0 <interrupt_handle_0xe5>
ffffffff8000660c:	48 89 c6             	mov    %rax,%rsi
ffffffff8000660f:	bf e5 00 00 00       	mov    $0xe5,%edi
ffffffff80006614:	e8 c9 ec ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80006619:	48 8d 05 e0 e9 ff ff 	lea    -0x1620(%rip),%rax        # ffffffff80005000 <interrupt_handle_0xe6>
ffffffff80006620:	48 89 c6             	mov    %rax,%rsi
ffffffff80006623:	bf e6 00 00 00       	mov    $0xe6,%edi
ffffffff80006628:	e8 b5 ec ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff8000662d:	48 8d 05 dc e9 ff ff 	lea    -0x1624(%rip),%rax        # ffffffff80005010 <interrupt_handle_0xe7>
ffffffff80006634:	48 89 c6             	mov    %rax,%rsi
ffffffff80006637:	bf e7 00 00 00       	mov    $0xe7,%edi
ffffffff8000663c:	e8 a1 ec ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80006641:	48 8d 05 d8 e9 ff ff 	lea    -0x1628(%rip),%rax        # ffffffff80005020 <interrupt_handle_0xe8>
ffffffff80006648:	48 89 c6             	mov    %rax,%rsi
ffffffff8000664b:	bf e8 00 00 00       	mov    $0xe8,%edi
ffffffff80006650:	e8 8d ec ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80006655:	48 8d 05 d4 e9 ff ff 	lea    -0x162c(%rip),%rax        # ffffffff80005030 <interrupt_handle_0xe9>
ffffffff8000665c:	48 89 c6             	mov    %rax,%rsi
ffffffff8000665f:	bf e9 00 00 00       	mov    $0xe9,%edi
ffffffff80006664:	e8 79 ec ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80006669:	48 8d 05 d0 e9 ff ff 	lea    -0x1630(%rip),%rax        # ffffffff80005040 <interrupt_handle_0xea>
ffffffff80006670:	48 89 c6             	mov    %rax,%rsi
ffffffff80006673:	bf ea 00 00 00       	mov    $0xea,%edi
ffffffff80006678:	e8 65 ec ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff8000667d:	48 8d 05 cc e9 ff ff 	lea    -0x1634(%rip),%rax        # ffffffff80005050 <interrupt_handle_0xeb>
ffffffff80006684:	48 89 c6             	mov    %rax,%rsi
ffffffff80006687:	bf eb 00 00 00       	mov    $0xeb,%edi
ffffffff8000668c:	e8 51 ec ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80006691:	48 8d 05 c8 e9 ff ff 	lea    -0x1638(%rip),%rax        # ffffffff80005060 <interrupt_handle_0xec>
ffffffff80006698:	48 89 c6             	mov    %rax,%rsi
ffffffff8000669b:	bf ec 00 00 00       	mov    $0xec,%edi
ffffffff800066a0:	e8 3d ec ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff800066a5:	48 8d 05 c4 e9 ff ff 	lea    -0x163c(%rip),%rax        # ffffffff80005070 <interrupt_handle_0xed>
ffffffff800066ac:	48 89 c6             	mov    %rax,%rsi
ffffffff800066af:	bf ed 00 00 00       	mov    $0xed,%edi
ffffffff800066b4:	e8 29 ec ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff800066b9:	48 8d 05 c0 e9 ff ff 	lea    -0x1640(%rip),%rax        # ffffffff80005080 <interrupt_handle_0xee>
ffffffff800066c0:	48 89 c6             	mov    %rax,%rsi
ffffffff800066c3:	bf ee 00 00 00       	mov    $0xee,%edi
ffffffff800066c8:	e8 15 ec ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff800066cd:	48 8d 05 bc e9 ff ff 	lea    -0x1644(%rip),%rax        # ffffffff80005090 <interrupt_handle_0xef>
ffffffff800066d4:	48 89 c6             	mov    %rax,%rsi
ffffffff800066d7:	bf ef 00 00 00       	mov    $0xef,%edi
ffffffff800066dc:	e8 01 ec ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff800066e1:	48 8d 05 b8 e9 ff ff 	lea    -0x1648(%rip),%rax        # ffffffff800050a0 <interrupt_handle_0xf0>
ffffffff800066e8:	48 89 c6             	mov    %rax,%rsi
ffffffff800066eb:	bf f0 00 00 00       	mov    $0xf0,%edi
ffffffff800066f0:	e8 ed eb ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff800066f5:	48 8d 05 b4 e9 ff ff 	lea    -0x164c(%rip),%rax        # ffffffff800050b0 <interrupt_handle_0xf1>
ffffffff800066fc:	48 89 c6             	mov    %rax,%rsi
ffffffff800066ff:	bf f1 00 00 00       	mov    $0xf1,%edi
ffffffff80006704:	e8 d9 eb ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80006709:	48 8d 05 b0 e9 ff ff 	lea    -0x1650(%rip),%rax        # ffffffff800050c0 <interrupt_handle_0xf2>
ffffffff80006710:	48 89 c6             	mov    %rax,%rsi
ffffffff80006713:	bf f2 00 00 00       	mov    $0xf2,%edi
ffffffff80006718:	e8 c5 eb ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff8000671d:	48 8d 05 ac e9 ff ff 	lea    -0x1654(%rip),%rax        # ffffffff800050d0 <interrupt_handle_0xf3>
ffffffff80006724:	48 89 c6             	mov    %rax,%rsi
ffffffff80006727:	bf f3 00 00 00       	mov    $0xf3,%edi
ffffffff8000672c:	e8 b1 eb ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80006731:	48 8d 05 a8 e9 ff ff 	lea    -0x1658(%rip),%rax        # ffffffff800050e0 <interrupt_handle_0xf4>
ffffffff80006738:	48 89 c6             	mov    %rax,%rsi
ffffffff8000673b:	bf f4 00 00 00       	mov    $0xf4,%edi
ffffffff80006740:	e8 9d eb ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80006745:	48 8d 05 a4 e9 ff ff 	lea    -0x165c(%rip),%rax        # ffffffff800050f0 <interrupt_handle_0xf5>
ffffffff8000674c:	48 89 c6             	mov    %rax,%rsi
ffffffff8000674f:	bf f5 00 00 00       	mov    $0xf5,%edi
ffffffff80006754:	e8 89 eb ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80006759:	48 8d 05 a0 e9 ff ff 	lea    -0x1660(%rip),%rax        # ffffffff80005100 <interrupt_handle_0xf6>
ffffffff80006760:	48 89 c6             	mov    %rax,%rsi
ffffffff80006763:	bf f6 00 00 00       	mov    $0xf6,%edi
ffffffff80006768:	e8 75 eb ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff8000676d:	48 8d 05 9c e9 ff ff 	lea    -0x1664(%rip),%rax        # ffffffff80005110 <interrupt_handle_0xf7>
ffffffff80006774:	48 89 c6             	mov    %rax,%rsi
ffffffff80006777:	bf f7 00 00 00       	mov    $0xf7,%edi
ffffffff8000677c:	e8 61 eb ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80006781:	48 8d 05 98 e9 ff ff 	lea    -0x1668(%rip),%rax        # ffffffff80005120 <interrupt_handle_0xf8>
ffffffff80006788:	48 89 c6             	mov    %rax,%rsi
ffffffff8000678b:	bf f8 00 00 00       	mov    $0xf8,%edi
ffffffff80006790:	e8 4d eb ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80006795:	48 8d 05 94 e9 ff ff 	lea    -0x166c(%rip),%rax        # ffffffff80005130 <interrupt_handle_0xf9>
ffffffff8000679c:	48 89 c6             	mov    %rax,%rsi
ffffffff8000679f:	bf f9 00 00 00       	mov    $0xf9,%edi
ffffffff800067a4:	e8 39 eb ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff800067a9:	48 8d 05 90 e9 ff ff 	lea    -0x1670(%rip),%rax        # ffffffff80005140 <interrupt_handle_0xfa>
ffffffff800067b0:	48 89 c6             	mov    %rax,%rsi
ffffffff800067b3:	bf fa 00 00 00       	mov    $0xfa,%edi
ffffffff800067b8:	e8 25 eb ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff800067bd:	48 8d 05 8c e9 ff ff 	lea    -0x1674(%rip),%rax        # ffffffff80005150 <interrupt_handle_0xfb>
ffffffff800067c4:	48 89 c6             	mov    %rax,%rsi
ffffffff800067c7:	bf fb 00 00 00       	mov    $0xfb,%edi
ffffffff800067cc:	e8 11 eb ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff800067d1:	48 8d 05 88 e9 ff ff 	lea    -0x1678(%rip),%rax        # ffffffff80005160 <interrupt_handle_0xfc>
ffffffff800067d8:	48 89 c6             	mov    %rax,%rsi
ffffffff800067db:	bf fc 00 00 00       	mov    $0xfc,%edi
ffffffff800067e0:	e8 fd ea ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff800067e5:	48 8d 05 84 e9 ff ff 	lea    -0x167c(%rip),%rax        # ffffffff80005170 <interrupt_handle_0xfd>
ffffffff800067ec:	48 89 c6             	mov    %rax,%rsi
ffffffff800067ef:	bf fd 00 00 00       	mov    $0xfd,%edi
ffffffff800067f4:	e8 e9 ea ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff800067f9:	48 8d 05 80 e9 ff ff 	lea    -0x1680(%rip),%rax        # ffffffff80005180 <interrupt_handle_0xfe>
ffffffff80006800:	48 89 c6             	mov    %rax,%rsi
ffffffff80006803:	bf fe 00 00 00       	mov    $0xfe,%edi
ffffffff80006808:	e8 d5 ea ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff8000680d:	48 8d 05 7c e9 ff ff 	lea    -0x1684(%rip),%rax        # ffffffff80005190 <interrupt_handle_0xff>
ffffffff80006814:	48 89 c6             	mov    %rax,%rsi
ffffffff80006817:	bf ff 00 00 00       	mov    $0xff,%edi
ffffffff8000681c:	e8 c1 ea ff ff       	call   ffffffff800052e2 <set_idt_entry>
ffffffff80006821:	0f 01 1d b8 09 0a 00 	lidt   0xa09b8(%rip)        # ffffffff800a71e0 <m_idt>
ffffffff80006828:	90                   	nop
ffffffff80006829:	5d                   	pop    %rbp
ffffffff8000682a:	c3                   	ret    

ffffffff8000682b <cpuid.lto_priv.0>:
ffffffff8000682b:	55                   	push   %rbp
ffffffff8000682c:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000682f:	53                   	push   %rbx
ffffffff80006830:	48 83 ec 58          	sub    $0x58,%rsp
ffffffff80006834:	89 7d cc             	mov    %edi,-0x34(%rbp)
ffffffff80006837:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
ffffffff8000683b:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
ffffffff8000683f:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
ffffffff80006843:	4c 89 45 a8          	mov    %r8,-0x58(%rbp)
ffffffff80006847:	8b 55 cc             	mov    -0x34(%rbp),%edx
ffffffff8000684a:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
ffffffff8000684e:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff80006852:	89 55 e4             	mov    %edx,-0x1c(%rbp)
ffffffff80006855:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80006859:	4c 8d 48 04          	lea    0x4(%rax),%r9
ffffffff8000685d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80006861:	4c 8d 40 08          	lea    0x8(%rax),%r8
ffffffff80006865:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80006869:	48 8d 78 0c          	lea    0xc(%rax),%rdi
ffffffff8000686d:	8b 45 e4             	mov    -0x1c(%rbp),%eax
ffffffff80006870:	0f a2                	cpuid  
ffffffff80006872:	89 de                	mov    %ebx,%esi
ffffffff80006874:	4c 8b 55 e8          	mov    -0x18(%rbp),%r10
ffffffff80006878:	41 89 02             	mov    %eax,(%r10)
ffffffff8000687b:	41 89 31             	mov    %esi,(%r9)
ffffffff8000687e:	41 89 08             	mov    %ecx,(%r8)
ffffffff80006881:	89 17                	mov    %edx,(%rdi)
ffffffff80006883:	90                   	nop
ffffffff80006884:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
ffffffff80006889:	74 0b                	je     ffffffff80006896 <cpuid.lto_priv.0+0x6b>
ffffffff8000688b:	8b 45 d0             	mov    -0x30(%rbp),%eax
ffffffff8000688e:	89 c2                	mov    %eax,%edx
ffffffff80006890:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff80006894:	89 10                	mov    %edx,(%rax)
ffffffff80006896:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
ffffffff8000689b:	74 0b                	je     ffffffff800068a8 <cpuid.lto_priv.0+0x7d>
ffffffff8000689d:	8b 45 d4             	mov    -0x2c(%rbp),%eax
ffffffff800068a0:	89 c2                	mov    %eax,%edx
ffffffff800068a2:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff800068a6:	89 10                	mov    %edx,(%rax)
ffffffff800068a8:	48 83 7d b0 00       	cmpq   $0x0,-0x50(%rbp)
ffffffff800068ad:	74 0b                	je     ffffffff800068ba <cpuid.lto_priv.0+0x8f>
ffffffff800068af:	8b 45 d8             	mov    -0x28(%rbp),%eax
ffffffff800068b2:	89 c2                	mov    %eax,%edx
ffffffff800068b4:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
ffffffff800068b8:	89 10                	mov    %edx,(%rax)
ffffffff800068ba:	48 83 7d a8 00       	cmpq   $0x0,-0x58(%rbp)
ffffffff800068bf:	74 0b                	je     ffffffff800068cc <cpuid.lto_priv.0+0xa1>
ffffffff800068c1:	8b 45 dc             	mov    -0x24(%rbp),%eax
ffffffff800068c4:	89 c2                	mov    %eax,%edx
ffffffff800068c6:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff800068ca:	89 10                	mov    %edx,(%rax)
ffffffff800068cc:	90                   	nop
ffffffff800068cd:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
ffffffff800068d1:	c9                   	leave  
ffffffff800068d2:	c3                   	ret    

ffffffff800068d3 <lapic_read>:
ffffffff800068d3:	f3 0f 1e fa          	endbr64 
ffffffff800068d7:	55                   	push   %rbp
ffffffff800068d8:	48 89 e5             	mov    %rsp,%rbp
ffffffff800068db:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff800068df:	89 7d fc             	mov    %edi,-0x4(%rbp)
ffffffff800068e2:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff800068e5:	48 8b 15 5c 07 0a 00 	mov    0xa075c(%rip),%rdx        # ffffffff800a7048 <m_local_apic_base>
ffffffff800068ec:	48 01 d0             	add    %rdx,%rax
ffffffff800068ef:	8b 00                	mov    (%rax),%eax
ffffffff800068f1:	c9                   	leave  
ffffffff800068f2:	c3                   	ret    

ffffffff800068f3 <lapic_write>:
ffffffff800068f3:	f3 0f 1e fa          	endbr64 
ffffffff800068f7:	55                   	push   %rbp
ffffffff800068f8:	48 89 e5             	mov    %rsp,%rbp
ffffffff800068fb:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff800068ff:	89 7d fc             	mov    %edi,-0x4(%rbp)
ffffffff80006902:	89 75 f8             	mov    %esi,-0x8(%rbp)
ffffffff80006905:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff80006908:	48 8b 15 39 07 0a 00 	mov    0xa0739(%rip),%rdx        # ffffffff800a7048 <m_local_apic_base>
ffffffff8000690f:	48 01 d0             	add    %rdx,%rax
ffffffff80006912:	48 89 c2             	mov    %rax,%rdx
ffffffff80006915:	8b 45 f8             	mov    -0x8(%rbp),%eax
ffffffff80006918:	89 02                	mov    %eax,(%rdx)
ffffffff8000691a:	90                   	nop
ffffffff8000691b:	c9                   	leave  
ffffffff8000691c:	c3                   	ret    

ffffffff8000691d <early_init_apic>:
ffffffff8000691d:	f3 0f 1e fa          	endbr64 
ffffffff80006921:	55                   	push   %rbp
ffffffff80006922:	48 89 e5             	mov    %rsp,%rbp
ffffffff80006925:	48 83 ec 30          	sub    $0x30,%rsp
ffffffff80006929:	b8 1b 00 00 00       	mov    $0x1b,%eax
ffffffff8000692e:	89 c1                	mov    %eax,%ecx
ffffffff80006930:	0f 32                	rdmsr  
ffffffff80006932:	89 55 e4             	mov    %edx,-0x1c(%rbp)
ffffffff80006935:	89 45 e0             	mov    %eax,-0x20(%rbp)
ffffffff80006938:	8b 45 e4             	mov    -0x1c(%rbp),%eax
ffffffff8000693b:	48 c1 e0 20          	shl    $0x20,%rax
ffffffff8000693f:	48 89 c2             	mov    %rax,%rdx
ffffffff80006942:	8b 45 e0             	mov    -0x20(%rbp),%eax
ffffffff80006945:	48 09 d0             	or     %rdx,%rax
ffffffff80006948:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
ffffffff8000694c:	0f b6 45 d9          	movzbl -0x27(%rbp),%eax
ffffffff80006950:	83 c8 08             	or     $0x8,%eax
ffffffff80006953:	88 45 d9             	mov    %al,-0x27(%rbp)
ffffffff80006956:	0f b6 45 d9          	movzbl -0x27(%rbp),%eax
ffffffff8000695a:	83 e0 fb             	and    $0xfffffffb,%eax
ffffffff8000695d:	88 45 d9             	mov    %al,-0x27(%rbp)
ffffffff80006960:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80006964:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff80006968:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000696c:	48 c1 e8 20          	shr    $0x20,%rax
ffffffff80006970:	89 c2                	mov    %eax,%edx
ffffffff80006972:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80006976:	b9 1b 00 00 00       	mov    $0x1b,%ecx
ffffffff8000697b:	0f 30                	wrmsr  
ffffffff8000697d:	90                   	nop
ffffffff8000697e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80006982:	48 c1 e8 0c          	shr    $0xc,%rax
ffffffff80006986:	48 c1 e0 0c          	shl    $0xc,%rax
ffffffff8000698a:	48 ba ff ff ff ff ff 	movabs $0xfffffffffffff,%rdx
ffffffff80006991:	ff 0f 00 
ffffffff80006994:	48 21 d0             	and    %rdx,%rax
ffffffff80006997:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8000699b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000699f:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff800069a3:	48 b8 00 00 00 00 80 	movabs $0x8000000000,%rax
ffffffff800069aa:	00 00 00 
ffffffff800069ad:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
ffffffff800069b1:	76 3d                	jbe    ffffffff800069f0 <early_init_apic+0xd3>
ffffffff800069b3:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800069b8:	e8 24 03 00 00       	call   ffffffff80006ce1 <get_apic_id>
ffffffff800069bd:	48 89 c6             	mov    %rax,%rsi
ffffffff800069c0:	41 b8 b1 00 00 00    	mov    $0xb1,%r8d
ffffffff800069c6:	48 8d 05 1f 19 03 00 	lea    0x3191f(%rip),%rax        # ffffffff800382ec <g_stivale2_header+0x12ec>
ffffffff800069cd:	48 89 c1             	mov    %rax,%rcx
ffffffff800069d0:	48 8d 05 79 6a 03 00 	lea    0x36a79(%rip),%rax        # ffffffff8003d450 <__FUNCTION__.1.lto_priv.2>
ffffffff800069d7:	48 89 c2             	mov    %rax,%rdx
ffffffff800069da:	48 8d 05 df 5d 03 00 	lea    0x35ddf(%rip),%rax        # ffffffff8003c7c0 <g_stivale2_header+0x57c0>
ffffffff800069e1:	48 89 c7             	mov    %rax,%rdi
ffffffff800069e4:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800069e9:	e8 52 cb 00 00       	call   ffffffff80013540 <printf_>
ffffffff800069ee:	0f 0b                	ud2    
ffffffff800069f0:	48 ba 00 00 00 00 00 	movabs $0xffff800000000000,%rdx
ffffffff800069f7:	80 ff ff 
ffffffff800069fa:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff800069fe:	48 01 d0             	add    %rdx,%rax
ffffffff80006a01:	48 89 05 40 06 0a 00 	mov    %rax,0xa0640(%rip)        # ffffffff800a7048 <m_local_apic_base>
ffffffff80006a08:	90                   	nop
ffffffff80006a09:	c9                   	leave  
ffffffff80006a0a:	c3                   	ret    

ffffffff80006a0b <init_apic>:
ffffffff80006a0b:	f3 0f 1e fa          	endbr64 
ffffffff80006a0f:	55                   	push   %rbp
ffffffff80006a10:	48 89 e5             	mov    %rsp,%rbp
ffffffff80006a13:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff80006a17:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
ffffffff80006a1e:	0f b6 05 9b a6 2a 00 	movzbl 0x2aa69b(%rip),%eax        # ffffffff802b10c0 <m_mapped_lapic>
ffffffff80006a25:	83 f0 01             	xor    $0x1,%eax
ffffffff80006a28:	84 c0                	test   %al,%al
ffffffff80006a2a:	0f 84 e5 00 00 00    	je     ffffffff80006b15 <init_apic+0x10a>
ffffffff80006a30:	c6 05 89 a6 2a 00 01 	movb   $0x1,0x2aa689(%rip)        # ffffffff802b10c0 <m_mapped_lapic>
ffffffff80006a37:	48 8b 05 0a 06 0a 00 	mov    0xa060a(%rip),%rax        # ffffffff800a7048 <m_local_apic_base>
ffffffff80006a3e:	48 89 c6             	mov    %rax,%rsi
ffffffff80006a41:	48 8b 05 00 06 0a 00 	mov    0xa0600(%rip),%rax        # ffffffff800a7048 <m_local_apic_base>
ffffffff80006a48:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff80006a4c:	48 b8 ff ff ff ff ff 	movabs $0xffff7fffffffffff,%rax
ffffffff80006a53:	7f ff ff 
ffffffff80006a56:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
ffffffff80006a5a:	76 10                	jbe    ffffffff80006a6c <init_apic+0x61>
ffffffff80006a5c:	48 b8 00 00 00 00 80 	movabs $0xffff808000000000,%rax
ffffffff80006a63:	80 ff ff 
ffffffff80006a66:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
ffffffff80006a6a:	76 3d                	jbe    ffffffff80006aa9 <init_apic+0x9e>
ffffffff80006a6c:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80006a71:	e8 6b 02 00 00       	call   ffffffff80006ce1 <get_apic_id>
ffffffff80006a76:	48 89 c6             	mov    %rax,%rsi
ffffffff80006a79:	41 b8 bf 00 00 00    	mov    $0xbf,%r8d
ffffffff80006a7f:	48 8d 05 66 18 03 00 	lea    0x31866(%rip),%rax        # ffffffff800382ec <g_stivale2_header+0x12ec>
ffffffff80006a86:	48 89 c1             	mov    %rax,%rcx
ffffffff80006a89:	48 8d 05 d0 69 03 00 	lea    0x369d0(%rip),%rax        # ffffffff8003d460 <__FUNCTION__.0.lto_priv.4>
ffffffff80006a90:	48 89 c2             	mov    %rax,%rdx
ffffffff80006a93:	48 8d 05 26 5d 03 00 	lea    0x35d26(%rip),%rax        # ffffffff8003c7c0 <g_stivale2_header+0x57c0>
ffffffff80006a9a:	48 89 c7             	mov    %rax,%rdi
ffffffff80006a9d:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80006aa2:	e8 99 ca 00 00       	call   ffffffff80013540 <printf_>
ffffffff80006aa7:	0f 0b                	ud2    
ffffffff80006aa9:	48 ba 00 00 00 00 00 	movabs $0x800000000000,%rdx
ffffffff80006ab0:	80 00 00 
ffffffff80006ab3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80006ab7:	48 01 d0             	add    %rdx,%rax
ffffffff80006aba:	b9 01 00 00 00       	mov    $0x1,%ecx
ffffffff80006abf:	ba 01 00 00 00       	mov    $0x1,%edx
ffffffff80006ac4:	48 89 c7             	mov    %rax,%rdi
ffffffff80006ac7:	e8 ba 14 00 00       	call   ffffffff80007f86 <vmm_map>
ffffffff80006acc:	89 45 fc             	mov    %eax,-0x4(%rbp)
ffffffff80006acf:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
ffffffff80006ad3:	74 40                	je     ffffffff80006b15 <init_apic+0x10a>
ffffffff80006ad5:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80006ada:	e8 02 02 00 00       	call   ffffffff80006ce1 <get_apic_id>
ffffffff80006adf:	48 89 c6             	mov    %rax,%rsi
ffffffff80006ae2:	41 b8 bf 00 00 00    	mov    $0xbf,%r8d
ffffffff80006ae8:	48 8d 05 fd 17 03 00 	lea    0x317fd(%rip),%rax        # ffffffff800382ec <g_stivale2_header+0x12ec>
ffffffff80006aef:	48 89 c1             	mov    %rax,%rcx
ffffffff80006af2:	48 8d 05 67 69 03 00 	lea    0x36967(%rip),%rax        # ffffffff8003d460 <__FUNCTION__.0.lto_priv.4>
ffffffff80006af9:	48 89 c2             	mov    %rax,%rdx
ffffffff80006afc:	48 8d 05 ed 5c 03 00 	lea    0x35ced(%rip),%rax        # ffffffff8003c7f0 <g_stivale2_header+0x57f0>
ffffffff80006b03:	48 89 c7             	mov    %rax,%rdi
ffffffff80006b06:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80006b0b:	e8 30 ca 00 00       	call   ffffffff80013540 <printf_>
ffffffff80006b10:	e9 ba 00 00 00       	jmp    ffffffff80006bcf <init_apic+0x1c4>
ffffffff80006b15:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
ffffffff80006b1c:	c6 45 ec ff          	movb   $0xff,-0x14(%rbp)
ffffffff80006b20:	0f b6 45 ed          	movzbl -0x13(%rbp),%eax
ffffffff80006b24:	83 c8 01             	or     $0x1,%eax
ffffffff80006b27:	88 45 ed             	mov    %al,-0x13(%rbp)
ffffffff80006b2a:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff80006b2d:	89 c6                	mov    %eax,%esi
ffffffff80006b2f:	bf f0 00 00 00       	mov    $0xf0,%edi
ffffffff80006b34:	e8 ba fd ff ff       	call   ffffffff800068f3 <lapic_write>
ffffffff80006b39:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
ffffffff80006b3d:	41 b8 00 00 00 00    	mov    $0x0,%r8d
ffffffff80006b43:	48 89 c1             	mov    %rax,%rcx
ffffffff80006b46:	ba 00 00 00 00       	mov    $0x0,%edx
ffffffff80006b4b:	be 00 00 00 00       	mov    $0x0,%esi
ffffffff80006b50:	bf 01 00 00 00       	mov    $0x1,%edi
ffffffff80006b55:	e8 d1 fc ff ff       	call   ffffffff8000682b <cpuid.lto_priv.0>
ffffffff80006b5a:	0f b6 45 eb          	movzbl -0x15(%rbp),%eax
ffffffff80006b5e:	83 e0 01             	and    $0x1,%eax
ffffffff80006b61:	84 c0                	test   %al,%al
ffffffff80006b63:	75 46                	jne    ffffffff80006bab <init_apic+0x1a0>
ffffffff80006b65:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)
ffffffff80006b6c:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80006b71:	e8 6b 01 00 00       	call   ffffffff80006ce1 <get_apic_id>
ffffffff80006b76:	48 89 c6             	mov    %rax,%rsi
ffffffff80006b79:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff80006b7c:	41 b9 cd 00 00 00    	mov    $0xcd,%r9d
ffffffff80006b82:	4c 8d 05 63 17 03 00 	lea    0x31763(%rip),%r8        # ffffffff800382ec <g_stivale2_header+0x12ec>
ffffffff80006b89:	48 8d 15 d0 68 03 00 	lea    0x368d0(%rip),%rdx        # ffffffff8003d460 <__FUNCTION__.0.lto_priv.4>
ffffffff80006b90:	48 89 d1             	mov    %rdx,%rcx
ffffffff80006b93:	89 c2                	mov    %eax,%edx
ffffffff80006b95:	48 8d 05 dc 5b 03 00 	lea    0x35bdc(%rip),%rax        # ffffffff8003c778 <g_stivale2_header+0x5778>
ffffffff80006b9c:	48 89 c7             	mov    %rax,%rdi
ffffffff80006b9f:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80006ba4:	e8 97 c9 00 00       	call   ffffffff80013540 <printf_>
ffffffff80006ba9:	eb 24                	jmp    ffffffff80006bcf <init_apic+0x1c4>
ffffffff80006bab:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
ffffffff80006bb2:	c6 45 e4 60          	movb   $0x60,-0x1c(%rbp)
ffffffff80006bb6:	0f b6 45 e6          	movzbl -0x1a(%rbp),%eax
ffffffff80006bba:	83 c8 04             	or     $0x4,%eax
ffffffff80006bbd:	88 45 e6             	mov    %al,-0x1a(%rbp)
ffffffff80006bc0:	8b 45 e4             	mov    -0x1c(%rbp),%eax
ffffffff80006bc3:	89 c6                	mov    %eax,%esi
ffffffff80006bc5:	bf 20 03 00 00       	mov    $0x320,%edi
ffffffff80006bca:	e8 24 fd ff ff       	call   ffffffff800068f3 <lapic_write>
ffffffff80006bcf:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff80006bd2:	90                   	nop
ffffffff80006bd3:	c9                   	leave  
ffffffff80006bd4:	c3                   	ret    

ffffffff80006bd5 <send_ipi>:
ffffffff80006bd5:	f3 0f 1e fa          	endbr64 
ffffffff80006bd9:	55                   	push   %rbp
ffffffff80006bda:	48 89 e5             	mov    %rsp,%rbp
ffffffff80006bdd:	48 83 ec 18          	sub    $0x18,%rsp
ffffffff80006be1:	89 7d ec             	mov    %edi,-0x14(%rbp)
ffffffff80006be4:	89 75 e8             	mov    %esi,-0x18(%rbp)
ffffffff80006be7:	9c                   	pushf  
ffffffff80006be8:	58                   	pop    %rax
ffffffff80006be9:	25 00 02 00 00       	and    $0x200,%eax
ffffffff80006bee:	48 85 c0             	test   %rax,%rax
ffffffff80006bf1:	0f 95 c0             	setne  %al
ffffffff80006bf4:	88 45 ff             	mov    %al,-0x1(%rbp)
ffffffff80006bf7:	fa                   	cli    
ffffffff80006bf8:	90                   	nop
ffffffff80006bf9:	bf 00 03 00 00       	mov    $0x300,%edi
ffffffff80006bfe:	e8 d0 fc ff ff       	call   ffffffff800068d3 <lapic_read>
ffffffff80006c03:	89 45 fb             	mov    %eax,-0x5(%rbp)
ffffffff80006c06:	0f b6 45 fc          	movzbl -0x4(%rbp),%eax
ffffffff80006c0a:	83 e0 10             	and    $0x10,%eax
ffffffff80006c0d:	84 c0                	test   %al,%al
ffffffff80006c0f:	75 e8                	jne    ffffffff80006bf9 <send_ipi+0x24>
ffffffff80006c11:	8b 45 e8             	mov    -0x18(%rbp),%eax
ffffffff80006c14:	c1 e0 18             	shl    $0x18,%eax
ffffffff80006c17:	89 c6                	mov    %eax,%esi
ffffffff80006c19:	bf 10 03 00 00       	mov    $0x310,%edi
ffffffff80006c1e:	e8 d0 fc ff ff       	call   ffffffff800068f3 <lapic_write>
ffffffff80006c23:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff80006c26:	89 c6                	mov    %eax,%esi
ffffffff80006c28:	bf 00 03 00 00       	mov    $0x300,%edi
ffffffff80006c2d:	e8 c1 fc ff ff       	call   ffffffff800068f3 <lapic_write>
ffffffff80006c32:	bf 00 03 00 00       	mov    $0x300,%edi
ffffffff80006c37:	e8 97 fc ff ff       	call   ffffffff800068d3 <lapic_read>
ffffffff80006c3c:	89 45 fb             	mov    %eax,-0x5(%rbp)
ffffffff80006c3f:	0f b6 45 fc          	movzbl -0x4(%rbp),%eax
ffffffff80006c43:	83 e0 10             	and    $0x10,%eax
ffffffff80006c46:	84 c0                	test   %al,%al
ffffffff80006c48:	75 e8                	jne    ffffffff80006c32 <send_ipi+0x5d>
ffffffff80006c4a:	80 7d ff 00          	cmpb   $0x0,-0x1(%rbp)
ffffffff80006c4e:	74 02                	je     ffffffff80006c52 <send_ipi+0x7d>
ffffffff80006c50:	fb                   	sti    
ffffffff80006c51:	90                   	nop
ffffffff80006c52:	90                   	nop
ffffffff80006c53:	c9                   	leave  
ffffffff80006c54:	c3                   	ret    

ffffffff80006c55 <lapic_eoi>:
ffffffff80006c55:	f3 0f 1e fa          	endbr64 
ffffffff80006c59:	55                   	push   %rbp
ffffffff80006c5a:	48 89 e5             	mov    %rsp,%rbp
ffffffff80006c5d:	be 00 00 00 00       	mov    $0x0,%esi
ffffffff80006c62:	bf b0 00 00 00       	mov    $0xb0,%edi
ffffffff80006c67:	e8 87 fc ff ff       	call   ffffffff800068f3 <lapic_write>
ffffffff80006c6c:	90                   	nop
ffffffff80006c6d:	5d                   	pop    %rbp
ffffffff80006c6e:	c3                   	ret    

ffffffff80006c6f <lapic_send_ipi>:
ffffffff80006c6f:	f3 0f 1e fa          	endbr64 
ffffffff80006c73:	55                   	push   %rbp
ffffffff80006c74:	48 89 e5             	mov    %rsp,%rbp
ffffffff80006c77:	48 83 ec 18          	sub    $0x18,%rsp
ffffffff80006c7b:	89 f8                	mov    %edi,%eax
ffffffff80006c7d:	89 75 e8             	mov    %esi,-0x18(%rbp)
ffffffff80006c80:	88 45 ec             	mov    %al,-0x14(%rbp)
ffffffff80006c83:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
ffffffff80006c8a:	0f b6 45 ec          	movzbl -0x14(%rbp),%eax
ffffffff80006c8e:	88 45 fc             	mov    %al,-0x4(%rbp)
ffffffff80006c91:	8b 55 e8             	mov    -0x18(%rbp),%edx
ffffffff80006c94:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff80006c97:	89 d6                	mov    %edx,%esi
ffffffff80006c99:	89 c7                	mov    %eax,%edi
ffffffff80006c9b:	e8 35 ff ff ff       	call   ffffffff80006bd5 <send_ipi>
ffffffff80006ca0:	90                   	nop
ffffffff80006ca1:	c9                   	leave  
ffffffff80006ca2:	c3                   	ret    

ffffffff80006ca3 <lapic_send_ipi_lowest_priority>:
ffffffff80006ca3:	f3 0f 1e fa          	endbr64 
ffffffff80006ca7:	55                   	push   %rbp
ffffffff80006ca8:	48 89 e5             	mov    %rsp,%rbp
ffffffff80006cab:	48 83 ec 18          	sub    $0x18,%rsp
ffffffff80006caf:	89 f8                	mov    %edi,%eax
ffffffff80006cb1:	88 45 ec             	mov    %al,-0x14(%rbp)
ffffffff80006cb4:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
ffffffff80006cbb:	0f b6 45 ec          	movzbl -0x14(%rbp),%eax
ffffffff80006cbf:	88 45 fc             	mov    %al,-0x4(%rbp)
ffffffff80006cc2:	0f b6 45 fd          	movzbl -0x3(%rbp),%eax
ffffffff80006cc6:	83 e0 f8             	and    $0xfffffff8,%eax
ffffffff80006cc9:	83 c8 01             	or     $0x1,%eax
ffffffff80006ccc:	88 45 fd             	mov    %al,-0x3(%rbp)
ffffffff80006ccf:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff80006cd2:	be 00 00 00 00       	mov    $0x0,%esi
ffffffff80006cd7:	89 c7                	mov    %eax,%edi
ffffffff80006cd9:	e8 f7 fe ff ff       	call   ffffffff80006bd5 <send_ipi>
ffffffff80006cde:	90                   	nop
ffffffff80006cdf:	c9                   	leave  
ffffffff80006ce0:	c3                   	ret    

ffffffff80006ce1 <get_apic_id>:
ffffffff80006ce1:	f3 0f 1e fa          	endbr64 
ffffffff80006ce5:	55                   	push   %rbp
ffffffff80006ce6:	48 89 e5             	mov    %rsp,%rbp
ffffffff80006ce9:	bf 20 00 00 00       	mov    $0x20,%edi
ffffffff80006cee:	e8 e0 fb ff ff       	call   ffffffff800068d3 <lapic_read>
ffffffff80006cf3:	c1 e8 18             	shr    $0x18,%eax
ffffffff80006cf6:	89 c0                	mov    %eax,%eax
ffffffff80006cf8:	5d                   	pop    %rbp
ffffffff80006cf9:	c3                   	ret    

ffffffff80006cfa <lapic_set_deadline>:
ffffffff80006cfa:	f3 0f 1e fa          	endbr64 
ffffffff80006cfe:	55                   	push   %rbp
ffffffff80006cff:	48 89 e5             	mov    %rsp,%rbp
ffffffff80006d02:	53                   	push   %rbx
ffffffff80006d03:	48 83 ec 28          	sub    $0x28,%rsp
ffffffff80006d07:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
ffffffff80006d0b:	0f 31                	rdtsc  
ffffffff80006d0d:	48 c1 e2 20          	shl    $0x20,%rdx
ffffffff80006d11:	48 09 d0             	or     %rdx,%rax
ffffffff80006d14:	48 89 c3             	mov    %rax,%rbx
ffffffff80006d17:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80006d1c:	e8 bb f9 00 00       	call   ffffffff800166dc <get_tsc_freq>
ffffffff80006d21:	48 0f af 45 d8       	imul   -0x28(%rbp),%rax
ffffffff80006d26:	48 01 d8             	add    %rbx,%rax
ffffffff80006d29:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff80006d2d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80006d31:	48 c1 e8 20          	shr    $0x20,%rax
ffffffff80006d35:	89 c2                	mov    %eax,%edx
ffffffff80006d37:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80006d3b:	b9 e0 06 00 00       	mov    $0x6e0,%ecx
ffffffff80006d40:	0f 30                	wrmsr  
ffffffff80006d42:	90                   	nop
ffffffff80006d43:	90                   	nop
ffffffff80006d44:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
ffffffff80006d48:	c9                   	leave  
ffffffff80006d49:	c3                   	ret    

ffffffff80006d4a <get_memmap_type_name>:
ffffffff80006d4a:	f3 0f 1e fa          	endbr64 
ffffffff80006d4e:	55                   	push   %rbp
ffffffff80006d4f:	48 89 e5             	mov    %rsp,%rbp
ffffffff80006d52:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80006d56:	89 7d fc             	mov    %edi,-0x4(%rbp)
ffffffff80006d59:	81 7d fc 02 10 00 00 	cmpl   $0x1002,-0x4(%rbp)
ffffffff80006d60:	0f 84 a7 00 00 00    	je     ffffffff80006e0d <get_memmap_type_name+0xc3>
ffffffff80006d66:	81 7d fc 02 10 00 00 	cmpl   $0x1002,-0x4(%rbp)
ffffffff80006d6d:	0f 87 a3 00 00 00    	ja     ffffffff80006e16 <get_memmap_type_name+0xcc>
ffffffff80006d73:	81 7d fc 01 10 00 00 	cmpl   $0x1001,-0x4(%rbp)
ffffffff80006d7a:	0f 84 84 00 00 00    	je     ffffffff80006e04 <get_memmap_type_name+0xba>
ffffffff80006d80:	81 7d fc 01 10 00 00 	cmpl   $0x1001,-0x4(%rbp)
ffffffff80006d87:	0f 87 89 00 00 00    	ja     ffffffff80006e16 <get_memmap_type_name+0xcc>
ffffffff80006d8d:	83 7d fc 05          	cmpl   $0x5,-0x4(%rbp)
ffffffff80006d91:	77 30                	ja     ffffffff80006dc3 <get_memmap_type_name+0x79>
ffffffff80006d93:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
ffffffff80006d97:	74 7d                	je     ffffffff80006e16 <get_memmap_type_name+0xcc>
ffffffff80006d99:	83 7d fc 05          	cmpl   $0x5,-0x4(%rbp)
ffffffff80006d9d:	77 77                	ja     ffffffff80006e16 <get_memmap_type_name+0xcc>
ffffffff80006d9f:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff80006da2:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
ffffffff80006da9:	00 
ffffffff80006daa:	48 8d 05 bb 66 03 00 	lea    0x366bb(%rip),%rax        # ffffffff8003d46c <__FUNCTION__.0.lto_priv.4+0xc>
ffffffff80006db1:	8b 04 02             	mov    (%rdx,%rax,1),%eax
ffffffff80006db4:	48 98                	cltq   
ffffffff80006db6:	48 8d 15 af 66 03 00 	lea    0x366af(%rip),%rdx        # ffffffff8003d46c <__FUNCTION__.0.lto_priv.4+0xc>
ffffffff80006dbd:	48 01 d0             	add    %rdx,%rax
ffffffff80006dc0:	3e ff e0             	notrack jmp *%rax
ffffffff80006dc3:	81 7d fc 00 10 00 00 	cmpl   $0x1000,-0x4(%rbp)
ffffffff80006dca:	74 2f                	je     ffffffff80006dfb <get_memmap_type_name+0xb1>
ffffffff80006dcc:	eb 48                	jmp    ffffffff80006e16 <get_memmap_type_name+0xcc>
ffffffff80006dce:	48 8d 05 2a 15 03 00 	lea    0x3152a(%rip),%rax        # ffffffff800382ff <g_stivale2_header+0x12ff>
ffffffff80006dd5:	eb 44                	jmp    ffffffff80006e1b <get_memmap_type_name+0xd1>
ffffffff80006dd7:	48 8d 05 28 15 03 00 	lea    0x31528(%rip),%rax        # ffffffff80038306 <g_stivale2_header+0x1306>
ffffffff80006dde:	eb 3b                	jmp    ffffffff80006e1b <get_memmap_type_name+0xd1>
ffffffff80006de0:	48 8d 05 28 15 03 00 	lea    0x31528(%rip),%rax        # ffffffff8003830f <g_stivale2_header+0x130f>
ffffffff80006de7:	eb 32                	jmp    ffffffff80006e1b <get_memmap_type_name+0xd1>
ffffffff80006de9:	48 8d 05 30 15 03 00 	lea    0x31530(%rip),%rax        # ffffffff80038320 <g_stivale2_header+0x1320>
ffffffff80006df0:	eb 29                	jmp    ffffffff80006e1b <get_memmap_type_name+0xd1>
ffffffff80006df2:	48 8d 05 30 15 03 00 	lea    0x31530(%rip),%rax        # ffffffff80038329 <g_stivale2_header+0x1329>
ffffffff80006df9:	eb 20                	jmp    ffffffff80006e1b <get_memmap_type_name+0xd1>
ffffffff80006dfb:	48 8d 05 32 15 03 00 	lea    0x31532(%rip),%rax        # ffffffff80038334 <g_stivale2_header+0x1334>
ffffffff80006e02:	eb 17                	jmp    ffffffff80006e1b <get_memmap_type_name+0xd1>
ffffffff80006e04:	48 8d 05 40 15 03 00 	lea    0x31540(%rip),%rax        # ffffffff8003834b <g_stivale2_header+0x134b>
ffffffff80006e0b:	eb 0e                	jmp    ffffffff80006e1b <get_memmap_type_name+0xd1>
ffffffff80006e0d:	48 8d 05 46 15 03 00 	lea    0x31546(%rip),%rax        # ffffffff8003835a <g_stivale2_header+0x135a>
ffffffff80006e14:	eb 05                	jmp    ffffffff80006e1b <get_memmap_type_name+0xd1>
ffffffff80006e16:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80006e1b:	c9                   	leave  
ffffffff80006e1c:	c3                   	ret    

ffffffff80006e1d <init_vmm>:
ffffffff80006e1d:	f3 0f 1e fa          	endbr64 
ffffffff80006e21:	55                   	push   %rbp
ffffffff80006e22:	48 89 e5             	mov    %rsp,%rbp
ffffffff80006e25:	41 57                	push   %r15
ffffffff80006e27:	41 56                	push   %r14
ffffffff80006e29:	41 55                	push   %r13
ffffffff80006e2b:	41 54                	push   %r12
ffffffff80006e2d:	53                   	push   %rbx
ffffffff80006e2e:	48 81 ec 08 01 00 00 	sub    $0x108,%rsp
ffffffff80006e35:	c7 45 cc 00 00 00 00 	movl   $0x0,-0x34(%rbp)
ffffffff80006e3c:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80006e41:	e8 c6 47 00 00       	call   ffffffff8000b60c <early_alloc_page_phys>
ffffffff80006e46:	48 89 05 03 02 0a 00 	mov    %rax,0xa0203(%rip)        # ffffffff800a7050 <m_pml4_pa>
ffffffff80006e4d:	48 8b 05 fc 01 0a 00 	mov    0xa01fc(%rip),%rax        # ffffffff800a7050 <m_pml4_pa>
ffffffff80006e54:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
ffffffff80006e58:	48 b8 00 00 00 00 80 	movabs $0x8000000000,%rax
ffffffff80006e5f:	00 00 00 
ffffffff80006e62:	48 39 45 b0          	cmp    %rax,-0x50(%rbp)
ffffffff80006e66:	76 3d                	jbe    ffffffff80006ea5 <init_vmm+0x88>
ffffffff80006e68:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80006e6d:	e8 6f fe ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff80006e72:	48 89 c6             	mov    %rax,%rsi
ffffffff80006e75:	41 b8 37 00 00 00    	mov    $0x37,%r8d
ffffffff80006e7b:	48 8d 05 e4 14 03 00 	lea    0x314e4(%rip),%rax        # ffffffff80038366 <g_stivale2_header+0x1366>
ffffffff80006e82:	48 89 c1             	mov    %rax,%rcx
ffffffff80006e85:	48 8d 05 fc 65 03 00 	lea    0x365fc(%rip),%rax        # ffffffff8003d488 <__FUNCTION__.6.lto_priv.0>
ffffffff80006e8c:	48 89 c2             	mov    %rax,%rdx
ffffffff80006e8f:	48 8d 05 2a 59 03 00 	lea    0x3592a(%rip),%rax        # ffffffff8003c7c0 <g_stivale2_header+0x57c0>
ffffffff80006e96:	48 89 c7             	mov    %rax,%rdi
ffffffff80006e99:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80006e9e:	e8 9d c6 00 00       	call   ffffffff80013540 <printf_>
ffffffff80006ea3:	0f 0b                	ud2    
ffffffff80006ea5:	48 ba 00 00 00 00 00 	movabs $0xffff800000000000,%rdx
ffffffff80006eac:	80 ff ff 
ffffffff80006eaf:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
ffffffff80006eb3:	48 01 d0             	add    %rdx,%rax
ffffffff80006eb6:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
ffffffff80006eba:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff80006ebe:	48 05 f0 0f 00 00    	add    $0xff0,%rax
ffffffff80006ec4:	48 8b 15 85 01 0a 00 	mov    0xa0185(%rip),%rdx        # ffffffff800a7050 <m_pml4_pa>
ffffffff80006ecb:	48 89 d1             	mov    %rdx,%rcx
ffffffff80006ece:	48 c1 e9 0c          	shr    $0xc,%rcx
ffffffff80006ed2:	48 ba ff ff ff ff ff 	movabs $0xffffffffff,%rdx
ffffffff80006ed9:	00 00 00 
ffffffff80006edc:	48 21 ca             	and    %rcx,%rdx
ffffffff80006edf:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
ffffffff80006ee6:	0f b6 08             	movzbl (%rax),%ecx
ffffffff80006ee9:	83 c9 01             	or     $0x1,%ecx
ffffffff80006eec:	88 08                	mov    %cl,(%rax)
ffffffff80006eee:	0f b6 08             	movzbl (%rax),%ecx
ffffffff80006ef1:	83 c9 02             	or     $0x2,%ecx
ffffffff80006ef4:	88 08                	mov    %cl,(%rax)
ffffffff80006ef6:	48 89 d1             	mov    %rdx,%rcx
ffffffff80006ef9:	83 e1 0f             	and    $0xf,%ecx
ffffffff80006efc:	89 ce                	mov    %ecx,%esi
ffffffff80006efe:	c1 e6 04             	shl    $0x4,%esi
ffffffff80006f01:	0f b6 48 01          	movzbl 0x1(%rax),%ecx
ffffffff80006f05:	83 e1 0f             	and    $0xf,%ecx
ffffffff80006f08:	09 f1                	or     %esi,%ecx
ffffffff80006f0a:	88 48 01             	mov    %cl,0x1(%rax)
ffffffff80006f0d:	48 89 d1             	mov    %rdx,%rcx
ffffffff80006f10:	48 c1 e9 04          	shr    $0x4,%rcx
ffffffff80006f14:	0f b6 f1             	movzbl %cl,%esi
ffffffff80006f17:	0f b6 48 02          	movzbl 0x2(%rax),%ecx
ffffffff80006f1b:	83 e1 00             	and    $0x0,%ecx
ffffffff80006f1e:	09 f1                	or     %esi,%ecx
ffffffff80006f20:	88 48 02             	mov    %cl,0x2(%rax)
ffffffff80006f23:	48 89 d1             	mov    %rdx,%rcx
ffffffff80006f26:	48 c1 e9 0c          	shr    $0xc,%rcx
ffffffff80006f2a:	0f b6 f1             	movzbl %cl,%esi
ffffffff80006f2d:	0f b6 48 03          	movzbl 0x3(%rax),%ecx
ffffffff80006f31:	83 e1 00             	and    $0x0,%ecx
ffffffff80006f34:	09 f1                	or     %esi,%ecx
ffffffff80006f36:	88 48 03             	mov    %cl,0x3(%rax)
ffffffff80006f39:	48 89 d1             	mov    %rdx,%rcx
ffffffff80006f3c:	48 c1 e9 14          	shr    $0x14,%rcx
ffffffff80006f40:	0f b6 f1             	movzbl %cl,%esi
ffffffff80006f43:	0f b6 48 04          	movzbl 0x4(%rax),%ecx
ffffffff80006f47:	83 e1 00             	and    $0x0,%ecx
ffffffff80006f4a:	09 f1                	or     %esi,%ecx
ffffffff80006f4c:	88 48 04             	mov    %cl,0x4(%rax)
ffffffff80006f4f:	48 89 d1             	mov    %rdx,%rcx
ffffffff80006f52:	48 c1 e9 1c          	shr    $0x1c,%rcx
ffffffff80006f56:	0f b6 f1             	movzbl %cl,%esi
ffffffff80006f59:	0f b6 48 05          	movzbl 0x5(%rax),%ecx
ffffffff80006f5d:	83 e1 00             	and    $0x0,%ecx
ffffffff80006f60:	09 f1                	or     %esi,%ecx
ffffffff80006f62:	88 48 05             	mov    %cl,0x5(%rax)
ffffffff80006f65:	48 c1 ea 24          	shr    $0x24,%rdx
ffffffff80006f69:	83 e2 0f             	and    $0xf,%edx
ffffffff80006f6c:	89 d1                	mov    %edx,%ecx
ffffffff80006f6e:	83 e1 0f             	and    $0xf,%ecx
ffffffff80006f71:	0f b6 50 06          	movzbl 0x6(%rax),%edx
ffffffff80006f75:	83 e2 f0             	and    $0xfffffff0,%edx
ffffffff80006f78:	09 ca                	or     %ecx,%edx
ffffffff80006f7a:	88 50 06             	mov    %dl,0x6(%rax)
ffffffff80006f7d:	0f 20 d8             	mov    %cr3,%rax
ffffffff80006f80:	48 89 85 e0 fe ff ff 	mov    %rax,-0x120(%rbp)
ffffffff80006f87:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
ffffffff80006f8e:	90                   	nop
ffffffff80006f8f:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
ffffffff80006f93:	48 b8 00 00 00 00 80 	movabs $0x8000000000,%rax
ffffffff80006f9a:	00 00 00 
ffffffff80006f9d:	48 39 45 a0          	cmp    %rax,-0x60(%rbp)
ffffffff80006fa1:	76 3d                	jbe    ffffffff80006fe0 <init_vmm+0x1c3>
ffffffff80006fa3:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80006fa8:	e8 34 fd ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff80006fad:	48 89 c6             	mov    %rax,%rsi
ffffffff80006fb0:	41 b8 3f 00 00 00    	mov    $0x3f,%r8d
ffffffff80006fb6:	48 8d 05 a9 13 03 00 	lea    0x313a9(%rip),%rax        # ffffffff80038366 <g_stivale2_header+0x1366>
ffffffff80006fbd:	48 89 c1             	mov    %rax,%rcx
ffffffff80006fc0:	48 8d 05 c1 64 03 00 	lea    0x364c1(%rip),%rax        # ffffffff8003d488 <__FUNCTION__.6.lto_priv.0>
ffffffff80006fc7:	48 89 c2             	mov    %rax,%rdx
ffffffff80006fca:	48 8d 05 ef 57 03 00 	lea    0x357ef(%rip),%rax        # ffffffff8003c7c0 <g_stivale2_header+0x57c0>
ffffffff80006fd1:	48 89 c7             	mov    %rax,%rdi
ffffffff80006fd4:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80006fd9:	e8 62 c5 00 00       	call   ffffffff80013540 <printf_>
ffffffff80006fde:	0f 0b                	ud2    
ffffffff80006fe0:	48 ba 00 00 00 00 00 	movabs $0xffff800000000000,%rdx
ffffffff80006fe7:	80 ff ff 
ffffffff80006fea:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff80006fee:	48 01 d0             	add    %rdx,%rax
ffffffff80006ff1:	48 89 45 98          	mov    %rax,-0x68(%rbp)
ffffffff80006ff5:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff80006ff9:	48 05 f0 0f 00 00    	add    $0xff0,%rax
ffffffff80006fff:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
ffffffff80007003:	48 8b 92 f0 0f 00 00 	mov    0xff0(%rdx),%rdx
ffffffff8000700a:	48 89 10             	mov    %rdx,(%rax)
ffffffff8000700d:	48 b8 bd b6 47 40 a6 	movabs $0x5df266a64047b6bd,%rax
ffffffff80007014:	66 f2 5d 
ffffffff80007017:	48 89 c7             	mov    %rax,%rdi
ffffffff8000701a:	e8 23 af ff ff       	call   ffffffff80001f42 <get_stivale2_tag>
ffffffff8000701f:	48 89 45 90          	mov    %rax,-0x70(%rbp)
ffffffff80007023:	48 b8 f0 8a 2a 4a 87 	movabs $0x60d78874a2a8af0,%rax
ffffffff8000702a:	78 0d 06 
ffffffff8000702d:	48 89 c7             	mov    %rax,%rdi
ffffffff80007030:	e8 0d af ff ff       	call   ffffffff80001f42 <get_stivale2_tag>
ffffffff80007035:	48 89 45 88          	mov    %rax,-0x78(%rbp)
ffffffff80007039:	48 b8 07 de 12 86 9e 	movabs $0x2187f79e8612de07,%rax
ffffffff80007040:	f7 87 21 
ffffffff80007043:	48 89 c7             	mov    %rax,%rdi
ffffffff80007046:	e8 f7 ae ff ff       	call   ffffffff80001f42 <get_stivale2_tag>
ffffffff8000704b:	48 89 45 80          	mov    %rax,-0x80(%rbp)
ffffffff8000704f:	48 83 7d 90 00       	cmpq   $0x0,-0x70(%rbp)
ffffffff80007054:	75 49                	jne    ffffffff8000709f <init_vmm+0x282>
ffffffff80007056:	c7 45 cc 02 00 00 00 	movl   $0x2,-0x34(%rbp)
ffffffff8000705d:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80007062:	e8 7a fc ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff80007067:	48 89 c6             	mov    %rax,%rsi
ffffffff8000706a:	8b 45 cc             	mov    -0x34(%rbp),%eax
ffffffff8000706d:	41 b9 46 00 00 00    	mov    $0x46,%r9d
ffffffff80007073:	4c 8d 05 ec 12 03 00 	lea    0x312ec(%rip),%r8        # ffffffff80038366 <g_stivale2_header+0x1366>
ffffffff8000707a:	48 8d 15 07 64 03 00 	lea    0x36407(%rip),%rdx        # ffffffff8003d488 <__FUNCTION__.6.lto_priv.0>
ffffffff80007081:	48 89 d1             	mov    %rdx,%rcx
ffffffff80007084:	89 c2                	mov    %eax,%edx
ffffffff80007086:	48 8d 05 eb 56 03 00 	lea    0x356eb(%rip),%rax        # ffffffff8003c778 <g_stivale2_header+0x5778>
ffffffff8000708d:	48 89 c7             	mov    %rax,%rdi
ffffffff80007090:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80007095:	e8 a6 c4 00 00       	call   ffffffff80013540 <printf_>
ffffffff8000709a:	e9 6f 0a 00 00       	jmp    ffffffff80007b0e <init_vmm+0xcf1>
ffffffff8000709f:	48 83 7d 88 00       	cmpq   $0x0,-0x78(%rbp)
ffffffff800070a4:	75 49                	jne    ffffffff800070ef <init_vmm+0x2d2>
ffffffff800070a6:	c7 45 cc 02 00 00 00 	movl   $0x2,-0x34(%rbp)
ffffffff800070ad:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800070b2:	e8 2a fc ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff800070b7:	48 89 c6             	mov    %rax,%rsi
ffffffff800070ba:	8b 45 cc             	mov    -0x34(%rbp),%eax
ffffffff800070bd:	41 b9 47 00 00 00    	mov    $0x47,%r9d
ffffffff800070c3:	4c 8d 05 9c 12 03 00 	lea    0x3129c(%rip),%r8        # ffffffff80038366 <g_stivale2_header+0x1366>
ffffffff800070ca:	48 8d 15 b7 63 03 00 	lea    0x363b7(%rip),%rdx        # ffffffff8003d488 <__FUNCTION__.6.lto_priv.0>
ffffffff800070d1:	48 89 d1             	mov    %rdx,%rcx
ffffffff800070d4:	89 c2                	mov    %eax,%edx
ffffffff800070d6:	48 8d 05 9b 56 03 00 	lea    0x3569b(%rip),%rax        # ffffffff8003c778 <g_stivale2_header+0x5778>
ffffffff800070dd:	48 89 c7             	mov    %rax,%rdi
ffffffff800070e0:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800070e5:	e8 56 c4 00 00       	call   ffffffff80013540 <printf_>
ffffffff800070ea:	e9 1f 0a 00 00       	jmp    ffffffff80007b0e <init_vmm+0xcf1>
ffffffff800070ef:	48 83 7d 80 00       	cmpq   $0x0,-0x80(%rbp)
ffffffff800070f4:	75 49                	jne    ffffffff8000713f <init_vmm+0x322>
ffffffff800070f6:	c7 45 cc 02 00 00 00 	movl   $0x2,-0x34(%rbp)
ffffffff800070fd:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80007102:	e8 da fb ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff80007107:	48 89 c6             	mov    %rax,%rsi
ffffffff8000710a:	8b 45 cc             	mov    -0x34(%rbp),%eax
ffffffff8000710d:	41 b9 48 00 00 00    	mov    $0x48,%r9d
ffffffff80007113:	4c 8d 05 4c 12 03 00 	lea    0x3124c(%rip),%r8        # ffffffff80038366 <g_stivale2_header+0x1366>
ffffffff8000711a:	48 8d 15 67 63 03 00 	lea    0x36367(%rip),%rdx        # ffffffff8003d488 <__FUNCTION__.6.lto_priv.0>
ffffffff80007121:	48 89 d1             	mov    %rdx,%rcx
ffffffff80007124:	89 c2                	mov    %eax,%edx
ffffffff80007126:	48 8d 05 4b 56 03 00 	lea    0x3564b(%rip),%rax        # ffffffff8003c778 <g_stivale2_header+0x5778>
ffffffff8000712d:	48 89 c7             	mov    %rax,%rdi
ffffffff80007130:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80007135:	e8 06 c4 00 00       	call   ffffffff80013540 <printf_>
ffffffff8000713a:	e9 cf 09 00 00       	jmp    ffffffff80007b0e <init_vmm+0xcf1>
ffffffff8000713f:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80007144:	e8 98 fb ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff80007149:	48 89 c6             	mov    %rax,%rsi
ffffffff8000714c:	48 8d 05 ad 5d 03 00 	lea    0x35dad(%rip),%rax        # ffffffff8003cf00 <g_stivale2_header+0x5f00>
ffffffff80007153:	48 89 c7             	mov    %rax,%rdi
ffffffff80007156:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000715b:	e8 e0 c3 00 00       	call   ffffffff80013540 <printf_>
ffffffff80007160:	c7 45 c8 00 00 00 00 	movl   $0x0,-0x38(%rbp)
ffffffff80007167:	e9 32 05 00 00       	jmp    ffffffff8000769e <init_vmm+0x881>
ffffffff8000716c:	8b 45 c8             	mov    -0x38(%rbp),%eax
ffffffff8000716f:	48 63 d0             	movslq %eax,%rdx
ffffffff80007172:	48 89 d0             	mov    %rdx,%rax
ffffffff80007175:	48 01 c0             	add    %rax,%rax
ffffffff80007178:	48 01 d0             	add    %rdx,%rax
ffffffff8000717b:	48 c1 e0 03          	shl    $0x3,%rax
ffffffff8000717f:	48 8d 50 10          	lea    0x10(%rax),%rdx
ffffffff80007183:	48 8b 45 80          	mov    -0x80(%rbp),%rax
ffffffff80007187:	48 01 d0             	add    %rdx,%rax
ffffffff8000718a:	48 83 c0 08          	add    $0x8,%rax
ffffffff8000718e:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
ffffffff80007195:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
ffffffff8000719c:	48 8b 00             	mov    (%rax),%rax
ffffffff8000719f:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
ffffffff800071a6:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
ffffffff800071ad:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff800071b1:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
ffffffff800071b8:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
ffffffff800071bf:	8b 40 10             	mov    0x10(%rax),%eax
ffffffff800071c2:	89 85 44 ff ff ff    	mov    %eax,-0xbc(%rbp)
ffffffff800071c8:	48 8b 95 50 ff ff ff 	mov    -0xb0(%rbp),%rdx
ffffffff800071cf:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
ffffffff800071d6:	48 01 d0             	add    %rdx,%rax
ffffffff800071d9:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
ffffffff800071e0:	8b 85 44 ff ff ff    	mov    -0xbc(%rbp),%eax
ffffffff800071e6:	89 c7                	mov    %eax,%edi
ffffffff800071e8:	e8 5d fb ff ff       	call   ffffffff80006d4a <get_memmap_type_name>
ffffffff800071ed:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)
ffffffff800071f4:	83 bd 44 ff ff ff 05 	cmpl   $0x5,-0xbc(%rbp)
ffffffff800071fb:	0f 84 45 04 00 00    	je     ffffffff80007646 <init_vmm+0x829>
ffffffff80007201:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
ffffffff80007208:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
ffffffff8000720f:	48 c7 85 20 ff ff ff 	movq   $0x1000,-0xe0(%rbp)
ffffffff80007216:	00 10 00 00 
ffffffff8000721a:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
ffffffff80007221:	48 f7 d8             	neg    %rax
ffffffff80007224:	48 23 85 28 ff ff ff 	and    -0xd8(%rbp),%rax
ffffffff8000722b:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
ffffffff80007232:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
ffffffff80007239:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)
ffffffff80007240:	48 c7 85 10 ff ff ff 	movq   $0x1000,-0xf0(%rbp)
ffffffff80007247:	00 10 00 00 
ffffffff8000724b:	48 8b 95 10 ff ff ff 	mov    -0xf0(%rbp),%rdx
ffffffff80007252:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
ffffffff80007259:	48 01 d0             	add    %rdx,%rax
ffffffff8000725c:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
ffffffff80007260:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
ffffffff80007267:	48 f7 d8             	neg    %rax
ffffffff8000726a:	48 21 d0             	and    %rdx,%rax
ffffffff8000726d:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
ffffffff80007274:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%rbp)
ffffffff8000727b:	83 bd 44 ff ff ff 01 	cmpl   $0x1,-0xbc(%rbp)
ffffffff80007282:	74 18                	je     ffffffff8000729c <init_vmm+0x47f>
ffffffff80007284:	81 bd 44 ff ff ff 00 	cmpl   $0x1000,-0xbc(%rbp)
ffffffff8000728b:	10 00 00 
ffffffff8000728e:	74 0c                	je     ffffffff8000729c <init_vmm+0x47f>
ffffffff80007290:	81 bd 44 ff ff ff 02 	cmpl   $0x1002,-0xbc(%rbp)
ffffffff80007297:	10 00 00 
ffffffff8000729a:	75 07                	jne    ffffffff800072a3 <init_vmm+0x486>
ffffffff8000729c:	c7 45 c4 01 00 00 00 	movl   $0x1,-0x3c(%rbp)
ffffffff800072a3:	48 83 bd 30 ff ff ff 	cmpq   $0x0,-0xd0(%rbp)
ffffffff800072aa:	00 
ffffffff800072ab:	0f 84 63 01 00 00    	je     ffffffff80007414 <init_vmm+0x5f7>
ffffffff800072b1:	8b 45 c4             	mov    -0x3c(%rbp),%eax
ffffffff800072b4:	83 e0 01             	and    $0x1,%eax
ffffffff800072b7:	85 c0                	test   %eax,%eax
ffffffff800072b9:	74 08                	je     ffffffff800072c3 <init_vmm+0x4a6>
ffffffff800072bb:	41 bd 77 00 00 00    	mov    $0x77,%r13d
ffffffff800072c1:	eb 06                	jmp    ffffffff800072c9 <init_vmm+0x4ac>
ffffffff800072c3:	41 bd 2d 00 00 00    	mov    $0x2d,%r13d
ffffffff800072c9:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
ffffffff800072d0:	48 89 85 f8 fe ff ff 	mov    %rax,-0x108(%rbp)
ffffffff800072d7:	48 b8 00 00 00 00 80 	movabs $0x8000000000,%rax
ffffffff800072de:	00 00 00 
ffffffff800072e1:	48 39 85 f8 fe ff ff 	cmp    %rax,-0x108(%rbp)
ffffffff800072e8:	76 3d                	jbe    ffffffff80007327 <init_vmm+0x50a>
ffffffff800072ea:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800072ef:	e8 ed f9 ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff800072f4:	48 89 c6             	mov    %rax,%rsi
ffffffff800072f7:	41 b8 67 00 00 00    	mov    $0x67,%r8d
ffffffff800072fd:	48 8d 05 62 10 03 00 	lea    0x31062(%rip),%rax        # ffffffff80038366 <g_stivale2_header+0x1366>
ffffffff80007304:	48 89 c1             	mov    %rax,%rcx
ffffffff80007307:	48 8d 05 7a 61 03 00 	lea    0x3617a(%rip),%rax        # ffffffff8003d488 <__FUNCTION__.6.lto_priv.0>
ffffffff8000730e:	48 89 c2             	mov    %rax,%rdx
ffffffff80007311:	48 8d 05 a8 54 03 00 	lea    0x354a8(%rip),%rax        # ffffffff8003c7c0 <g_stivale2_header+0x57c0>
ffffffff80007318:	48 89 c7             	mov    %rax,%rdi
ffffffff8000731b:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80007320:	e8 1b c2 00 00       	call   ffffffff80013540 <printf_>
ffffffff80007325:	0f 0b                	ud2    
ffffffff80007327:	48 ba 00 00 00 00 00 	movabs $0xffff800000000000,%rdx
ffffffff8000732e:	80 ff ff 
ffffffff80007331:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
ffffffff80007338:	48 01 d0             	add    %rdx,%rax
ffffffff8000733b:	49 89 c7             	mov    %rax,%r15
ffffffff8000733e:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
ffffffff80007345:	48 89 85 f0 fe ff ff 	mov    %rax,-0x110(%rbp)
ffffffff8000734c:	48 b8 00 00 00 00 80 	movabs $0x8000000000,%rax
ffffffff80007353:	00 00 00 
ffffffff80007356:	48 39 85 f0 fe ff ff 	cmp    %rax,-0x110(%rbp)
ffffffff8000735d:	76 3d                	jbe    ffffffff8000739c <init_vmm+0x57f>
ffffffff8000735f:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80007364:	e8 78 f9 ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff80007369:	48 89 c6             	mov    %rax,%rsi
ffffffff8000736c:	41 b8 67 00 00 00    	mov    $0x67,%r8d
ffffffff80007372:	48 8d 05 ed 0f 03 00 	lea    0x30fed(%rip),%rax        # ffffffff80038366 <g_stivale2_header+0x1366>
ffffffff80007379:	48 89 c1             	mov    %rax,%rcx
ffffffff8000737c:	48 8d 05 05 61 03 00 	lea    0x36105(%rip),%rax        # ffffffff8003d488 <__FUNCTION__.6.lto_priv.0>
ffffffff80007383:	48 89 c2             	mov    %rax,%rdx
ffffffff80007386:	48 8d 05 33 54 03 00 	lea    0x35433(%rip),%rax        # ffffffff8003c7c0 <g_stivale2_header+0x57c0>
ffffffff8000738d:	48 89 c7             	mov    %rax,%rdi
ffffffff80007390:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80007395:	e8 a6 c1 00 00       	call   ffffffff80013540 <printf_>
ffffffff8000739a:	0f 0b                	ud2    
ffffffff8000739c:	48 ba 00 00 00 00 00 	movabs $0xffff800000000000,%rdx
ffffffff800073a3:	80 ff ff 
ffffffff800073a6:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
ffffffff800073ad:	48 01 d0             	add    %rdx,%rax
ffffffff800073b0:	49 89 c6             	mov    %rax,%r14
ffffffff800073b3:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
ffffffff800073ba:	48 8b 10             	mov    (%rax),%rdx
ffffffff800073bd:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
ffffffff800073c4:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff800073c8:	4c 8d 24 02          	lea    (%rdx,%rax,1),%r12
ffffffff800073cc:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
ffffffff800073d3:	48 8b 18             	mov    (%rax),%rbx
ffffffff800073d6:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800073db:	e8 01 f9 ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff800073e0:	ff b5 30 ff ff ff    	push   -0xd0(%rbp)
ffffffff800073e6:	41 55                	push   %r13
ffffffff800073e8:	4d 89 f9             	mov    %r15,%r9
ffffffff800073eb:	4d 89 f0             	mov    %r14,%r8
ffffffff800073ee:	4c 89 e1             	mov    %r12,%rcx
ffffffff800073f1:	48 89 da             	mov    %rbx,%rdx
ffffffff800073f4:	48 89 c6             	mov    %rax,%rsi
ffffffff800073f7:	48 8d 05 22 5b 03 00 	lea    0x35b22(%rip),%rax        # ffffffff8003cf20 <g_stivale2_header+0x5f20>
ffffffff800073fe:	48 89 c7             	mov    %rax,%rdi
ffffffff80007401:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80007406:	e8 35 c1 00 00       	call   ffffffff80013540 <printf_>
ffffffff8000740b:	48 83 c4 10          	add    $0x10,%rsp
ffffffff8000740f:	e9 49 01 00 00       	jmp    ffffffff8000755d <init_vmm+0x740>
ffffffff80007414:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
ffffffff8000741b:	48 89 85 08 ff ff ff 	mov    %rax,-0xf8(%rbp)
ffffffff80007422:	48 b8 00 00 00 00 80 	movabs $0x8000000000,%rax
ffffffff80007429:	00 00 00 
ffffffff8000742c:	48 39 85 08 ff ff ff 	cmp    %rax,-0xf8(%rbp)
ffffffff80007433:	76 3d                	jbe    ffffffff80007472 <init_vmm+0x655>
ffffffff80007435:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000743a:	e8 a2 f8 ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff8000743f:	48 89 c6             	mov    %rax,%rsi
ffffffff80007442:	41 b8 6d 00 00 00    	mov    $0x6d,%r8d
ffffffff80007448:	48 8d 05 17 0f 03 00 	lea    0x30f17(%rip),%rax        # ffffffff80038366 <g_stivale2_header+0x1366>
ffffffff8000744f:	48 89 c1             	mov    %rax,%rcx
ffffffff80007452:	48 8d 05 2f 60 03 00 	lea    0x3602f(%rip),%rax        # ffffffff8003d488 <__FUNCTION__.6.lto_priv.0>
ffffffff80007459:	48 89 c2             	mov    %rax,%rdx
ffffffff8000745c:	48 8d 05 5d 53 03 00 	lea    0x3535d(%rip),%rax        # ffffffff8003c7c0 <g_stivale2_header+0x57c0>
ffffffff80007463:	48 89 c7             	mov    %rax,%rdi
ffffffff80007466:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000746b:	e8 d0 c0 00 00       	call   ffffffff80013540 <printf_>
ffffffff80007470:	0f 0b                	ud2    
ffffffff80007472:	48 ba 00 00 00 00 00 	movabs $0xffff800000000000,%rdx
ffffffff80007479:	80 ff ff 
ffffffff8000747c:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
ffffffff80007483:	48 01 d0             	add    %rdx,%rax
ffffffff80007486:	49 89 c6             	mov    %rax,%r14
ffffffff80007489:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
ffffffff80007490:	48 89 85 00 ff ff ff 	mov    %rax,-0x100(%rbp)
ffffffff80007497:	48 b8 00 00 00 00 80 	movabs $0x8000000000,%rax
ffffffff8000749e:	00 00 00 
ffffffff800074a1:	48 39 85 00 ff ff ff 	cmp    %rax,-0x100(%rbp)
ffffffff800074a8:	76 3d                	jbe    ffffffff800074e7 <init_vmm+0x6ca>
ffffffff800074aa:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800074af:	e8 2d f8 ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff800074b4:	48 89 c6             	mov    %rax,%rsi
ffffffff800074b7:	41 b8 6d 00 00 00    	mov    $0x6d,%r8d
ffffffff800074bd:	48 8d 05 a2 0e 03 00 	lea    0x30ea2(%rip),%rax        # ffffffff80038366 <g_stivale2_header+0x1366>
ffffffff800074c4:	48 89 c1             	mov    %rax,%rcx
ffffffff800074c7:	48 8d 05 ba 5f 03 00 	lea    0x35fba(%rip),%rax        # ffffffff8003d488 <__FUNCTION__.6.lto_priv.0>
ffffffff800074ce:	48 89 c2             	mov    %rax,%rdx
ffffffff800074d1:	48 8d 05 e8 52 03 00 	lea    0x352e8(%rip),%rax        # ffffffff8003c7c0 <g_stivale2_header+0x57c0>
ffffffff800074d8:	48 89 c7             	mov    %rax,%rdi
ffffffff800074db:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800074e0:	e8 5b c0 00 00       	call   ffffffff80013540 <printf_>
ffffffff800074e5:	0f 0b                	ud2    
ffffffff800074e7:	48 ba 00 00 00 00 00 	movabs $0xffff800000000000,%rdx
ffffffff800074ee:	80 ff ff 
ffffffff800074f1:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
ffffffff800074f8:	48 01 d0             	add    %rdx,%rax
ffffffff800074fb:	49 89 c5             	mov    %rax,%r13
ffffffff800074fe:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
ffffffff80007505:	48 8b 10             	mov    (%rax),%rdx
ffffffff80007508:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
ffffffff8000750f:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff80007513:	4c 8d 24 02          	lea    (%rdx,%rax,1),%r12
ffffffff80007517:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
ffffffff8000751e:	48 8b 18             	mov    (%rax),%rbx
ffffffff80007521:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80007526:	e8 b6 f7 ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff8000752b:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff8000752f:	8b 95 44 ff ff ff    	mov    -0xbc(%rbp),%edx
ffffffff80007535:	52                   	push   %rdx
ffffffff80007536:	4d 89 f1             	mov    %r14,%r9
ffffffff80007539:	4d 89 e8             	mov    %r13,%r8
ffffffff8000753c:	4c 89 e1             	mov    %r12,%rcx
ffffffff8000753f:	48 89 da             	mov    %rbx,%rdx
ffffffff80007542:	48 89 c6             	mov    %rax,%rsi
ffffffff80007545:	48 8d 05 04 5a 03 00 	lea    0x35a04(%rip),%rax        # ffffffff8003cf50 <g_stivale2_header+0x5f50>
ffffffff8000754c:	48 89 c7             	mov    %rax,%rdi
ffffffff8000754f:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80007554:	e8 e7 bf 00 00       	call   ffffffff80013540 <printf_>
ffffffff80007559:	48 83 c4 10          	add    $0x10,%rsp
ffffffff8000755d:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
ffffffff80007564:	48 2b 85 50 ff ff ff 	sub    -0xb0(%rbp),%rax
ffffffff8000756b:	48 c1 e8 0c          	shr    $0xc,%rax
ffffffff8000756f:	48 89 c2             	mov    %rax,%rdx
ffffffff80007572:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
ffffffff80007579:	48 89 85 e8 fe ff ff 	mov    %rax,-0x118(%rbp)
ffffffff80007580:	48 b8 00 00 00 00 80 	movabs $0x8000000000,%rax
ffffffff80007587:	00 00 00 
ffffffff8000758a:	48 39 85 e8 fe ff ff 	cmp    %rax,-0x118(%rbp)
ffffffff80007591:	76 3d                	jbe    ffffffff800075d0 <init_vmm+0x7b3>
ffffffff80007593:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80007598:	e8 44 f7 ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff8000759d:	48 89 c6             	mov    %rax,%rsi
ffffffff800075a0:	41 b8 73 00 00 00    	mov    $0x73,%r8d
ffffffff800075a6:	48 8d 05 b9 0d 03 00 	lea    0x30db9(%rip),%rax        # ffffffff80038366 <g_stivale2_header+0x1366>
ffffffff800075ad:	48 89 c1             	mov    %rax,%rcx
ffffffff800075b0:	48 8d 05 d1 5e 03 00 	lea    0x35ed1(%rip),%rax        # ffffffff8003d488 <__FUNCTION__.6.lto_priv.0>
ffffffff800075b7:	48 89 c2             	mov    %rax,%rdx
ffffffff800075ba:	48 8d 05 ff 51 03 00 	lea    0x351ff(%rip),%rax        # ffffffff8003c7c0 <g_stivale2_header+0x57c0>
ffffffff800075c1:	48 89 c7             	mov    %rax,%rdi
ffffffff800075c4:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800075c9:	e8 72 bf 00 00       	call   ffffffff80013540 <printf_>
ffffffff800075ce:	0f 0b                	ud2    
ffffffff800075d0:	48 b9 00 00 00 00 00 	movabs $0xffff800000000000,%rcx
ffffffff800075d7:	80 ff ff 
ffffffff800075da:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
ffffffff800075e1:	48 01 c8             	add    %rcx,%rax
ffffffff800075e4:	48 89 c6             	mov    %rax,%rsi
ffffffff800075e7:	8b 4d c4             	mov    -0x3c(%rbp),%ecx
ffffffff800075ea:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
ffffffff800075f1:	48 89 c7             	mov    %rax,%rdi
ffffffff800075f4:	e8 8d 09 00 00       	call   ffffffff80007f86 <vmm_map>
ffffffff800075f9:	89 45 cc             	mov    %eax,-0x34(%rbp)
ffffffff800075fc:	83 7d cc 00          	cmpl   $0x0,-0x34(%rbp)
ffffffff80007600:	0f 84 94 00 00 00    	je     ffffffff8000769a <init_vmm+0x87d>
ffffffff80007606:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000760b:	e8 d1 f6 ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff80007610:	48 89 c6             	mov    %rax,%rsi
ffffffff80007613:	41 b8 73 00 00 00    	mov    $0x73,%r8d
ffffffff80007619:	48 8d 05 46 0d 03 00 	lea    0x30d46(%rip),%rax        # ffffffff80038366 <g_stivale2_header+0x1366>
ffffffff80007620:	48 89 c1             	mov    %rax,%rcx
ffffffff80007623:	48 8d 05 5e 5e 03 00 	lea    0x35e5e(%rip),%rax        # ffffffff8003d488 <__FUNCTION__.6.lto_priv.0>
ffffffff8000762a:	48 89 c2             	mov    %rax,%rdx
ffffffff8000762d:	48 8d 05 bc 51 03 00 	lea    0x351bc(%rip),%rax        # ffffffff8003c7f0 <g_stivale2_header+0x57f0>
ffffffff80007634:	48 89 c7             	mov    %rax,%rdi
ffffffff80007637:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000763c:	e8 ff be 00 00       	call   ffffffff80013540 <printf_>
ffffffff80007641:	e9 c8 04 00 00       	jmp    ffffffff80007b0e <init_vmm+0xcf1>
ffffffff80007646:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
ffffffff8000764d:	48 8b 10             	mov    (%rax),%rdx
ffffffff80007650:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
ffffffff80007657:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff8000765b:	4c 8d 24 02          	lea    (%rdx,%rax,1),%r12
ffffffff8000765f:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
ffffffff80007666:	48 8b 18             	mov    (%rax),%rbx
ffffffff80007669:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000766e:	e8 6e f6 ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff80007673:	48 8b 95 30 ff ff ff 	mov    -0xd0(%rbp),%rdx
ffffffff8000767a:	49 89 d0             	mov    %rdx,%r8
ffffffff8000767d:	4c 89 e1             	mov    %r12,%rcx
ffffffff80007680:	48 89 da             	mov    %rbx,%rdx
ffffffff80007683:	48 89 c6             	mov    %rax,%rsi
ffffffff80007686:	48 8d 05 03 59 03 00 	lea    0x35903(%rip),%rax        # ffffffff8003cf90 <g_stivale2_header+0x5f90>
ffffffff8000768d:	48 89 c7             	mov    %rax,%rdi
ffffffff80007690:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80007695:	e8 a6 be 00 00       	call   ffffffff80013540 <printf_>
ffffffff8000769a:	83 45 c8 01          	addl   $0x1,-0x38(%rbp)
ffffffff8000769e:	8b 45 c8             	mov    -0x38(%rbp),%eax
ffffffff800076a1:	48 98                	cltq   
ffffffff800076a3:	48 8b 55 80          	mov    -0x80(%rbp),%rdx
ffffffff800076a7:	48 8b 52 10          	mov    0x10(%rdx),%rdx
ffffffff800076ab:	48 39 d0             	cmp    %rdx,%rax
ffffffff800076ae:	0f 82 b8 fa ff ff    	jb     ffffffff8000716c <init_vmm+0x34f>
ffffffff800076b4:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800076b9:	e8 23 f6 ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff800076be:	48 89 c6             	mov    %rax,%rsi
ffffffff800076c1:	48 8d 05 f8 58 03 00 	lea    0x358f8(%rip),%rax        # ffffffff8003cfc0 <g_stivale2_header+0x5fc0>
ffffffff800076c8:	48 89 c7             	mov    %rax,%rdi
ffffffff800076cb:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800076d0:	e8 6b be 00 00       	call   ffffffff80013540 <printf_>
ffffffff800076d5:	c7 45 c0 00 00 00 00 	movl   $0x0,-0x40(%rbp)
ffffffff800076dc:	e9 bd 03 00 00       	jmp    ffffffff80007a9e <init_vmm+0xc81>
ffffffff800076e1:	8b 45 c0             	mov    -0x40(%rbp),%eax
ffffffff800076e4:	48 63 d0             	movslq %eax,%rdx
ffffffff800076e7:	48 89 d0             	mov    %rdx,%rax
ffffffff800076ea:	48 01 c0             	add    %rax,%rax
ffffffff800076ed:	48 01 d0             	add    %rdx,%rax
ffffffff800076f0:	48 c1 e0 03          	shl    $0x3,%rax
ffffffff800076f4:	48 8d 50 10          	lea    0x10(%rax),%rdx
ffffffff800076f8:	48 8b 45 90          	mov    -0x70(%rbp),%rax
ffffffff800076fc:	48 01 d0             	add    %rdx,%rax
ffffffff800076ff:	48 83 c0 08          	add    $0x8,%rax
ffffffff80007703:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
ffffffff8000770a:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
ffffffff80007711:	48 8b 10             	mov    (%rax),%rdx
ffffffff80007714:	48 8b 45 88          	mov    -0x78(%rbp),%rax
ffffffff80007718:	48 8b 48 18          	mov    0x18(%rax),%rcx
ffffffff8000771c:	48 89 d0             	mov    %rdx,%rax
ffffffff8000771f:	48 29 c8             	sub    %rcx,%rax
ffffffff80007722:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
ffffffff80007729:	48 8b 45 88          	mov    -0x78(%rbp),%rax
ffffffff8000772d:	48 8b 50 10          	mov    0x10(%rax),%rdx
ffffffff80007731:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
ffffffff80007738:	48 01 d0             	add    %rdx,%rax
ffffffff8000773b:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
ffffffff80007742:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
ffffffff80007749:	25 ff 0f 00 00       	and    $0xfff,%eax
ffffffff8000774e:	48 85 c0             	test   %rax,%rax
ffffffff80007751:	74 77                	je     ffffffff800077ca <init_vmm+0x9ad>
ffffffff80007753:	c7 45 cc 01 00 00 00 	movl   $0x1,-0x34(%rbp)
ffffffff8000775a:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000775f:	e8 7d f5 ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff80007764:	48 89 c1             	mov    %rax,%rcx
ffffffff80007767:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
ffffffff8000776e:	48 89 c2             	mov    %rax,%rdx
ffffffff80007771:	48 89 ce             	mov    %rcx,%rsi
ffffffff80007774:	48 8d 05 65 58 03 00 	lea    0x35865(%rip),%rax        # ffffffff8003cfe0 <g_stivale2_header+0x5fe0>
ffffffff8000777b:	48 89 c7             	mov    %rax,%rdi
ffffffff8000777e:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80007783:	e8 b8 bd 00 00       	call   ffffffff80013540 <printf_>
ffffffff80007788:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000778d:	e8 4f f5 ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff80007792:	48 89 c6             	mov    %rax,%rsi
ffffffff80007795:	8b 45 cc             	mov    -0x34(%rbp),%eax
ffffffff80007798:	41 b9 85 00 00 00    	mov    $0x85,%r9d
ffffffff8000779e:	4c 8d 05 c1 0b 03 00 	lea    0x30bc1(%rip),%r8        # ffffffff80038366 <g_stivale2_header+0x1366>
ffffffff800077a5:	48 8d 15 dc 5c 03 00 	lea    0x35cdc(%rip),%rdx        # ffffffff8003d488 <__FUNCTION__.6.lto_priv.0>
ffffffff800077ac:	48 89 d1             	mov    %rdx,%rcx
ffffffff800077af:	89 c2                	mov    %eax,%edx
ffffffff800077b1:	48 8d 05 c0 4f 03 00 	lea    0x34fc0(%rip),%rax        # ffffffff8003c778 <g_stivale2_header+0x5778>
ffffffff800077b8:	48 89 c7             	mov    %rax,%rdi
ffffffff800077bb:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800077c0:	e8 7b bd 00 00       	call   ffffffff80013540 <printf_>
ffffffff800077c5:	e9 44 03 00 00       	jmp    ffffffff80007b0e <init_vmm+0xcf1>
ffffffff800077ca:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
ffffffff800077d1:	48 8b 00             	mov    (%rax),%rax
ffffffff800077d4:	25 ff 0f 00 00       	and    $0xfff,%eax
ffffffff800077d9:	48 85 c0             	test   %rax,%rax
ffffffff800077dc:	74 77                	je     ffffffff80007855 <init_vmm+0xa38>
ffffffff800077de:	c7 45 cc 01 00 00 00 	movl   $0x1,-0x34(%rbp)
ffffffff800077e5:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
ffffffff800077ec:	48 8b 18             	mov    (%rax),%rbx
ffffffff800077ef:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800077f4:	e8 e8 f4 ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff800077f9:	48 89 da             	mov    %rbx,%rdx
ffffffff800077fc:	48 89 c6             	mov    %rax,%rsi
ffffffff800077ff:	48 8d 05 12 58 03 00 	lea    0x35812(%rip),%rax        # ffffffff8003d018 <g_stivale2_header+0x6018>
ffffffff80007806:	48 89 c7             	mov    %rax,%rdi
ffffffff80007809:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000780e:	e8 2d bd 00 00       	call   ffffffff80013540 <printf_>
ffffffff80007813:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80007818:	e8 c4 f4 ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff8000781d:	48 89 c6             	mov    %rax,%rsi
ffffffff80007820:	8b 45 cc             	mov    -0x34(%rbp),%eax
ffffffff80007823:	41 b9 86 00 00 00    	mov    $0x86,%r9d
ffffffff80007829:	4c 8d 05 36 0b 03 00 	lea    0x30b36(%rip),%r8        # ffffffff80038366 <g_stivale2_header+0x1366>
ffffffff80007830:	48 8d 15 51 5c 03 00 	lea    0x35c51(%rip),%rdx        # ffffffff8003d488 <__FUNCTION__.6.lto_priv.0>
ffffffff80007837:	48 89 d1             	mov    %rdx,%rcx
ffffffff8000783a:	89 c2                	mov    %eax,%edx
ffffffff8000783c:	48 8d 05 35 4f 03 00 	lea    0x34f35(%rip),%rax        # ffffffff8003c778 <g_stivale2_header+0x5778>
ffffffff80007843:	48 89 c7             	mov    %rax,%rdi
ffffffff80007846:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000784b:	e8 f0 bc 00 00       	call   ffffffff80013540 <printf_>
ffffffff80007850:	e9 b9 02 00 00       	jmp    ffffffff80007b0e <init_vmm+0xcf1>
ffffffff80007855:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
ffffffff8000785c:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff80007860:	25 ff 0f 00 00       	and    $0xfff,%eax
ffffffff80007865:	48 85 c0             	test   %rax,%rax
ffffffff80007868:	74 78                	je     ffffffff800078e2 <init_vmm+0xac5>
ffffffff8000786a:	c7 45 cc 01 00 00 00 	movl   $0x1,-0x34(%rbp)
ffffffff80007871:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
ffffffff80007878:	48 8b 58 08          	mov    0x8(%rax),%rbx
ffffffff8000787c:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80007881:	e8 5b f4 ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff80007886:	48 89 da             	mov    %rbx,%rdx
ffffffff80007889:	48 89 c6             	mov    %rax,%rsi
ffffffff8000788c:	48 8d 05 ad 57 03 00 	lea    0x357ad(%rip),%rax        # ffffffff8003d040 <g_stivale2_header+0x6040>
ffffffff80007893:	48 89 c7             	mov    %rax,%rdi
ffffffff80007896:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000789b:	e8 a0 bc 00 00       	call   ffffffff80013540 <printf_>
ffffffff800078a0:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800078a5:	e8 37 f4 ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff800078aa:	48 89 c6             	mov    %rax,%rsi
ffffffff800078ad:	8b 45 cc             	mov    -0x34(%rbp),%eax
ffffffff800078b0:	41 b9 87 00 00 00    	mov    $0x87,%r9d
ffffffff800078b6:	4c 8d 05 a9 0a 03 00 	lea    0x30aa9(%rip),%r8        # ffffffff80038366 <g_stivale2_header+0x1366>
ffffffff800078bd:	48 8d 15 c4 5b 03 00 	lea    0x35bc4(%rip),%rdx        # ffffffff8003d488 <__FUNCTION__.6.lto_priv.0>
ffffffff800078c4:	48 89 d1             	mov    %rdx,%rcx
ffffffff800078c7:	89 c2                	mov    %eax,%edx
ffffffff800078c9:	48 8d 05 a8 4e 03 00 	lea    0x34ea8(%rip),%rax        # ffffffff8003c778 <g_stivale2_header+0x5778>
ffffffff800078d0:	48 89 c7             	mov    %rax,%rdi
ffffffff800078d3:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800078d8:	e8 63 bc 00 00       	call   ffffffff80013540 <printf_>
ffffffff800078dd:	e9 2c 02 00 00       	jmp    ffffffff80007b0e <init_vmm+0xcf1>
ffffffff800078e2:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
ffffffff800078e9:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff800078ed:	83 e0 04             	and    $0x4,%eax
ffffffff800078f0:	48 85 c0             	test   %rax,%rax
ffffffff800078f3:	74 07                	je     ffffffff800078fc <init_vmm+0xadf>
ffffffff800078f5:	b8 72 00 00 00       	mov    $0x72,%eax
ffffffff800078fa:	eb 05                	jmp    ffffffff80007901 <init_vmm+0xae4>
ffffffff800078fc:	b8 2d 00 00 00       	mov    $0x2d,%eax
ffffffff80007901:	88 85 67 ff ff ff    	mov    %al,-0x99(%rbp)
ffffffff80007907:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
ffffffff8000790e:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff80007912:	83 e0 02             	and    $0x2,%eax
ffffffff80007915:	48 85 c0             	test   %rax,%rax
ffffffff80007918:	74 07                	je     ffffffff80007921 <init_vmm+0xb04>
ffffffff8000791a:	b8 77 00 00 00       	mov    $0x77,%eax
ffffffff8000791f:	eb 05                	jmp    ffffffff80007926 <init_vmm+0xb09>
ffffffff80007921:	b8 2d 00 00 00       	mov    $0x2d,%eax
ffffffff80007926:	88 85 66 ff ff ff    	mov    %al,-0x9a(%rbp)
ffffffff8000792c:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
ffffffff80007933:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff80007937:	83 e0 01             	and    $0x1,%eax
ffffffff8000793a:	48 85 c0             	test   %rax,%rax
ffffffff8000793d:	74 07                	je     ffffffff80007946 <init_vmm+0xb29>
ffffffff8000793f:	b8 78 00 00 00       	mov    $0x78,%eax
ffffffff80007944:	eb 05                	jmp    ffffffff8000794b <init_vmm+0xb2e>
ffffffff80007946:	b8 2d 00 00 00       	mov    $0x2d,%eax
ffffffff8000794b:	88 85 65 ff ff ff    	mov    %al,-0x9b(%rbp)
ffffffff80007951:	44 0f be bd 65 ff ff 	movsbl -0x9b(%rbp),%r15d
ffffffff80007958:	ff 
ffffffff80007959:	44 0f be b5 66 ff ff 	movsbl -0x9a(%rbp),%r14d
ffffffff80007960:	ff 
ffffffff80007961:	44 0f be ad 67 ff ff 	movsbl -0x99(%rbp),%r13d
ffffffff80007968:	ff 
ffffffff80007969:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
ffffffff80007970:	48 8b 50 08          	mov    0x8(%rax),%rdx
ffffffff80007974:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
ffffffff8000797b:	48 01 d0             	add    %rdx,%rax
ffffffff8000797e:	48 89 85 d8 fe ff ff 	mov    %rax,-0x128(%rbp)
ffffffff80007985:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
ffffffff8000798c:	48 8b 10             	mov    (%rax),%rdx
ffffffff8000798f:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
ffffffff80007996:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff8000799a:	4c 8d 24 02          	lea    (%rdx,%rax,1),%r12
ffffffff8000799e:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
ffffffff800079a5:	48 8b 18             	mov    (%rax),%rbx
ffffffff800079a8:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800079ad:	e8 2f f3 ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff800079b2:	48 8b 95 68 ff ff ff 	mov    -0x98(%rbp),%rdx
ffffffff800079b9:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff800079bd:	41 57                	push   %r15
ffffffff800079bf:	41 56                	push   %r14
ffffffff800079c1:	41 55                	push   %r13
ffffffff800079c3:	4c 8b 8d d8 fe ff ff 	mov    -0x128(%rbp),%r9
ffffffff800079ca:	49 89 d0             	mov    %rdx,%r8
ffffffff800079cd:	4c 89 e1             	mov    %r12,%rcx
ffffffff800079d0:	48 89 da             	mov    %rbx,%rdx
ffffffff800079d3:	48 89 c6             	mov    %rax,%rsi
ffffffff800079d6:	48 8d 05 93 56 03 00 	lea    0x35693(%rip),%rax        # ffffffff8003d070 <g_stivale2_header+0x6070>
ffffffff800079dd:	48 89 c7             	mov    %rax,%rdi
ffffffff800079e0:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800079e5:	e8 56 bb 00 00       	call   ffffffff80013540 <printf_>
ffffffff800079ea:	48 83 c4 20          	add    $0x20,%rsp
ffffffff800079ee:	c7 45 bc 04 00 00 00 	movl   $0x4,-0x44(%rbp)
ffffffff800079f5:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
ffffffff800079fc:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff80007a00:	83 e0 02             	and    $0x2,%eax
ffffffff80007a03:	48 85 c0             	test   %rax,%rax
ffffffff80007a06:	74 04                	je     ffffffff80007a0c <init_vmm+0xbef>
ffffffff80007a08:	83 4d bc 01          	orl    $0x1,-0x44(%rbp)
ffffffff80007a0c:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
ffffffff80007a13:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff80007a17:	83 e0 01             	and    $0x1,%eax
ffffffff80007a1a:	48 85 c0             	test   %rax,%rax
ffffffff80007a1d:	74 04                	je     ffffffff80007a23 <init_vmm+0xc06>
ffffffff80007a1f:	83 4d bc 02          	orl    $0x2,-0x44(%rbp)
ffffffff80007a23:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
ffffffff80007a2a:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff80007a2e:	48 c1 e8 0c          	shr    $0xc,%rax
ffffffff80007a32:	48 89 c2             	mov    %rax,%rdx
ffffffff80007a35:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
ffffffff80007a3c:	48 8b 00             	mov    (%rax),%rax
ffffffff80007a3f:	48 89 c6             	mov    %rax,%rsi
ffffffff80007a42:	8b 4d bc             	mov    -0x44(%rbp),%ecx
ffffffff80007a45:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
ffffffff80007a4c:	48 89 c7             	mov    %rax,%rdi
ffffffff80007a4f:	e8 32 05 00 00       	call   ffffffff80007f86 <vmm_map>
ffffffff80007a54:	89 45 cc             	mov    %eax,-0x34(%rbp)
ffffffff80007a57:	83 7d cc 00          	cmpl   $0x0,-0x34(%rbp)
ffffffff80007a5b:	74 3d                	je     ffffffff80007a9a <init_vmm+0xc7d>
ffffffff80007a5d:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80007a62:	e8 7a f2 ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff80007a67:	48 89 c6             	mov    %rax,%rsi
ffffffff80007a6a:	41 b8 96 00 00 00    	mov    $0x96,%r8d
ffffffff80007a70:	48 8d 05 ef 08 03 00 	lea    0x308ef(%rip),%rax        # ffffffff80038366 <g_stivale2_header+0x1366>
ffffffff80007a77:	48 89 c1             	mov    %rax,%rcx
ffffffff80007a7a:	48 8d 05 07 5a 03 00 	lea    0x35a07(%rip),%rax        # ffffffff8003d488 <__FUNCTION__.6.lto_priv.0>
ffffffff80007a81:	48 89 c2             	mov    %rax,%rdx
ffffffff80007a84:	48 8d 05 65 4d 03 00 	lea    0x34d65(%rip),%rax        # ffffffff8003c7f0 <g_stivale2_header+0x57f0>
ffffffff80007a8b:	48 89 c7             	mov    %rax,%rdi
ffffffff80007a8e:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80007a93:	e8 a8 ba 00 00       	call   ffffffff80013540 <printf_>
ffffffff80007a98:	eb 74                	jmp    ffffffff80007b0e <init_vmm+0xcf1>
ffffffff80007a9a:	83 45 c0 01          	addl   $0x1,-0x40(%rbp)
ffffffff80007a9e:	8b 45 c0             	mov    -0x40(%rbp),%eax
ffffffff80007aa1:	48 98                	cltq   
ffffffff80007aa3:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
ffffffff80007aa7:	48 8b 52 10          	mov    0x10(%rdx),%rdx
ffffffff80007aab:	48 39 d0             	cmp    %rdx,%rax
ffffffff80007aae:	0f 82 2d fc ff ff    	jb     ffffffff800076e1 <init_vmm+0x8c4>
ffffffff80007ab4:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80007ab9:	e8 4d ef ff ff       	call   ffffffff80006a0b <init_apic>
ffffffff80007abe:	89 45 cc             	mov    %eax,-0x34(%rbp)
ffffffff80007ac1:	83 7d cc 00          	cmpl   $0x0,-0x34(%rbp)
ffffffff80007ac5:	74 3d                	je     ffffffff80007b04 <init_vmm+0xce7>
ffffffff80007ac7:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80007acc:	e8 10 f2 ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff80007ad1:	48 89 c6             	mov    %rax,%rsi
ffffffff80007ad4:	41 b8 9b 00 00 00    	mov    $0x9b,%r8d
ffffffff80007ada:	48 8d 05 85 08 03 00 	lea    0x30885(%rip),%rax        # ffffffff80038366 <g_stivale2_header+0x1366>
ffffffff80007ae1:	48 89 c1             	mov    %rax,%rcx
ffffffff80007ae4:	48 8d 05 9d 59 03 00 	lea    0x3599d(%rip),%rax        # ffffffff8003d488 <__FUNCTION__.6.lto_priv.0>
ffffffff80007aeb:	48 89 c2             	mov    %rax,%rdx
ffffffff80007aee:	48 8d 05 fb 4c 03 00 	lea    0x34cfb(%rip),%rax        # ffffffff8003c7f0 <g_stivale2_header+0x57f0>
ffffffff80007af5:	48 89 c7             	mov    %rax,%rdi
ffffffff80007af8:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80007afd:	e8 3e ba 00 00       	call   ffffffff80013540 <printf_>
ffffffff80007b02:	eb 0a                	jmp    ffffffff80007b0e <init_vmm+0xcf1>
ffffffff80007b04:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80007b09:	e8 25 00 00 00       	call   ffffffff80007b33 <init_vmm_per_cpu>
ffffffff80007b0e:	8b 45 cc             	mov    -0x34(%rbp),%eax
ffffffff80007b11:	90                   	nop
ffffffff80007b12:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
ffffffff80007b16:	5b                   	pop    %rbx
ffffffff80007b17:	41 5c                	pop    %r12
ffffffff80007b19:	41 5d                	pop    %r13
ffffffff80007b1b:	41 5e                	pop    %r14
ffffffff80007b1d:	41 5f                	pop    %r15
ffffffff80007b1f:	5d                   	pop    %rbp
ffffffff80007b20:	c3                   	ret    

ffffffff80007b21 <vmm_switch_allocator>:
ffffffff80007b21:	f3 0f 1e fa          	endbr64 
ffffffff80007b25:	55                   	push   %rbp
ffffffff80007b26:	48 89 e5             	mov    %rsp,%rbp
ffffffff80007b29:	c6 05 28 f5 09 00 00 	movb   $0x0,0x9f528(%rip)        # ffffffff800a7058 <m_early_alloc>
ffffffff80007b30:	90                   	nop
ffffffff80007b31:	5d                   	pop    %rbp
ffffffff80007b32:	c3                   	ret    

ffffffff80007b33 <init_vmm_per_cpu>:
ffffffff80007b33:	f3 0f 1e fa          	endbr64 
ffffffff80007b37:	55                   	push   %rbp
ffffffff80007b38:	48 89 e5             	mov    %rsp,%rbp
ffffffff80007b3b:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff80007b3f:	b8 80 00 00 c0       	mov    $0xc0000080,%eax
ffffffff80007b44:	89 c1                	mov    %eax,%ecx
ffffffff80007b46:	0f 32                	rdmsr  
ffffffff80007b48:	89 55 ec             	mov    %edx,-0x14(%rbp)
ffffffff80007b4b:	89 45 e8             	mov    %eax,-0x18(%rbp)
ffffffff80007b4e:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff80007b51:	48 c1 e0 20          	shl    $0x20,%rax
ffffffff80007b55:	48 89 c2             	mov    %rax,%rdx
ffffffff80007b58:	8b 45 e8             	mov    -0x18(%rbp),%eax
ffffffff80007b5b:	48 09 d0             	or     %rdx,%rax
ffffffff80007b5e:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff80007b62:	0f b6 45 e1          	movzbl -0x1f(%rbp),%eax
ffffffff80007b66:	83 c8 08             	or     $0x8,%eax
ffffffff80007b69:	88 45 e1             	mov    %al,-0x1f(%rbp)
ffffffff80007b6c:	0f b6 45 e0          	movzbl -0x20(%rbp),%eax
ffffffff80007b70:	83 e0 fe             	and    $0xfffffffe,%eax
ffffffff80007b73:	88 45 e0             	mov    %al,-0x20(%rbp)
ffffffff80007b76:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80007b7a:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff80007b7e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80007b82:	48 c1 e8 20          	shr    $0x20,%rax
ffffffff80007b86:	89 c2                	mov    %eax,%edx
ffffffff80007b88:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80007b8c:	b9 80 00 00 c0       	mov    $0xc0000080,%ecx
ffffffff80007b91:	0f 30                	wrmsr  
ffffffff80007b93:	90                   	nop
ffffffff80007b94:	48 8b 05 b5 f4 09 00 	mov    0x9f4b5(%rip),%rax        # ffffffff800a7050 <m_pml4_pa>
ffffffff80007b9b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff80007b9f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80007ba3:	89 c0                	mov    %eax,%eax
ffffffff80007ba5:	0f 22 d8             	mov    %rax,%cr3
ffffffff80007ba8:	90                   	nop
ffffffff80007ba9:	90                   	nop
ffffffff80007baa:	c9                   	leave  
ffffffff80007bab:	c3                   	ret    

ffffffff80007bac <vmm_unmap_direct_page>:
ffffffff80007bac:	f3 0f 1e fa          	endbr64 
ffffffff80007bb0:	55                   	push   %rbp
ffffffff80007bb1:	48 89 e5             	mov    %rsp,%rbp
ffffffff80007bb4:	48 83 ec 50          	sub    $0x50,%rsp
ffffffff80007bb8:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
ffffffff80007bbc:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff80007bc0:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff80007bc4:	48 b8 00 00 00 00 80 	movabs $0x8000000000,%rax
ffffffff80007bcb:	00 00 00 
ffffffff80007bce:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
ffffffff80007bd2:	76 3d                	jbe    ffffffff80007c11 <vmm_unmap_direct_page+0x65>
ffffffff80007bd4:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80007bd9:	e8 03 f1 ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff80007bde:	48 89 c6             	mov    %rax,%rsi
ffffffff80007be1:	41 b8 be 00 00 00    	mov    $0xbe,%r8d
ffffffff80007be7:	48 8d 05 78 07 03 00 	lea    0x30778(%rip),%rax        # ffffffff80038366 <g_stivale2_header+0x1366>
ffffffff80007bee:	48 89 c1             	mov    %rax,%rcx
ffffffff80007bf1:	48 8d 05 a8 58 03 00 	lea    0x358a8(%rip),%rax        # ffffffff8003d4a0 <__FUNCTION__.5.lto_priv.0>
ffffffff80007bf8:	48 89 c2             	mov    %rax,%rdx
ffffffff80007bfb:	48 8d 05 be 4b 03 00 	lea    0x34bbe(%rip),%rax        # ffffffff8003c7c0 <g_stivale2_header+0x57c0>
ffffffff80007c02:	48 89 c7             	mov    %rax,%rdi
ffffffff80007c05:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80007c0a:	e8 31 b9 00 00       	call   ffffffff80013540 <printf_>
ffffffff80007c0f:	0f 0b                	ud2    
ffffffff80007c11:	48 ba 00 00 00 00 00 	movabs $0xffff800000000000,%rdx
ffffffff80007c18:	80 ff ff 
ffffffff80007c1b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80007c1f:	48 01 d0             	add    %rdx,%rax
ffffffff80007c22:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff80007c26:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80007c2a:	48 c1 e8 27          	shr    $0x27,%rax
ffffffff80007c2e:	25 ff 01 00 00       	and    $0x1ff,%eax
ffffffff80007c33:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff80007c37:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80007c3b:	48 c1 e8 1e          	shr    $0x1e,%rax
ffffffff80007c3f:	25 ff ff 03 00       	and    $0x3ffff,%eax
ffffffff80007c44:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff80007c48:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80007c4c:	48 c1 e8 15          	shr    $0x15,%rax
ffffffff80007c50:	25 ff ff ff 07       	and    $0x7ffffff,%eax
ffffffff80007c55:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
ffffffff80007c59:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80007c5d:	48 c1 e8 0c          	shr    $0xc,%rax
ffffffff80007c61:	48 89 c2             	mov    %rax,%rdx
ffffffff80007c64:	48 b8 ff ff ff ff 0f 	movabs $0xfffffffff,%rax
ffffffff80007c6b:	00 00 00 
ffffffff80007c6e:	48 21 d0             	and    %rdx,%rax
ffffffff80007c71:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
ffffffff80007c75:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80007c79:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
ffffffff80007c80:	00 
ffffffff80007c81:	48 b8 00 e0 df bf 7f 	movabs $0xffffff7fbfdfe000,%rax
ffffffff80007c88:	ff ff ff 
ffffffff80007c8b:	48 01 d0             	add    %rdx,%rax
ffffffff80007c8e:	0f b6 00             	movzbl (%rax),%eax
ffffffff80007c91:	83 e0 01             	and    $0x1,%eax
ffffffff80007c94:	84 c0                	test   %al,%al
ffffffff80007c96:	0f 84 9a 00 00 00    	je     ffffffff80007d36 <vmm_unmap_direct_page+0x18a>
ffffffff80007c9c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80007ca0:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
ffffffff80007ca7:	00 
ffffffff80007ca8:	48 b8 00 00 c0 bf 7f 	movabs $0xffffff7fbfc00000,%rax
ffffffff80007caf:	ff ff ff 
ffffffff80007cb2:	48 01 d0             	add    %rdx,%rax
ffffffff80007cb5:	0f b6 00             	movzbl (%rax),%eax
ffffffff80007cb8:	83 e0 01             	and    $0x1,%eax
ffffffff80007cbb:	84 c0                	test   %al,%al
ffffffff80007cbd:	74 7a                	je     ffffffff80007d39 <vmm_unmap_direct_page+0x18d>
ffffffff80007cbf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80007cc3:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
ffffffff80007cca:	00 
ffffffff80007ccb:	48 b8 00 00 00 80 7f 	movabs $0xffffff7f80000000,%rax
ffffffff80007cd2:	ff ff ff 
ffffffff80007cd5:	48 01 d0             	add    %rdx,%rax
ffffffff80007cd8:	0f b6 00             	movzbl (%rax),%eax
ffffffff80007cdb:	83 e0 01             	and    $0x1,%eax
ffffffff80007cde:	84 c0                	test   %al,%al
ffffffff80007ce0:	74 5a                	je     ffffffff80007d3c <vmm_unmap_direct_page+0x190>
ffffffff80007ce2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff80007ce6:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
ffffffff80007ced:	00 
ffffffff80007cee:	48 b8 00 00 00 00 00 	movabs $0xffffff0000000000,%rax
ffffffff80007cf5:	ff ff ff 
ffffffff80007cf8:	48 01 d0             	add    %rdx,%rax
ffffffff80007cfb:	0f b6 00             	movzbl (%rax),%eax
ffffffff80007cfe:	83 e0 01             	and    $0x1,%eax
ffffffff80007d01:	84 c0                	test   %al,%al
ffffffff80007d03:	74 3a                	je     ffffffff80007d3f <vmm_unmap_direct_page+0x193>
ffffffff80007d05:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff80007d09:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
ffffffff80007d10:	00 
ffffffff80007d11:	48 b8 00 00 00 00 00 	movabs $0xffffff0000000000,%rax
ffffffff80007d18:	ff ff ff 
ffffffff80007d1b:	48 01 d0             	add    %rdx,%rax
ffffffff80007d1e:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
ffffffff80007d25:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80007d29:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
ffffffff80007d2d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80007d31:	0f 01 38             	invlpg (%rax)
ffffffff80007d34:	eb 0a                	jmp    ffffffff80007d40 <vmm_unmap_direct_page+0x194>
ffffffff80007d36:	90                   	nop
ffffffff80007d37:	eb 07                	jmp    ffffffff80007d40 <vmm_unmap_direct_page+0x194>
ffffffff80007d39:	90                   	nop
ffffffff80007d3a:	eb 04                	jmp    ffffffff80007d40 <vmm_unmap_direct_page+0x194>
ffffffff80007d3c:	90                   	nop
ffffffff80007d3d:	eb 01                	jmp    ffffffff80007d40 <vmm_unmap_direct_page+0x194>
ffffffff80007d3f:	90                   	nop
ffffffff80007d40:	c9                   	leave  
ffffffff80007d41:	c3                   	ret    

ffffffff80007d42 <vmm_alloc_page>:
ffffffff80007d42:	f3 0f 1e fa          	endbr64 
ffffffff80007d46:	55                   	push   %rbp
ffffffff80007d47:	48 89 e5             	mov    %rsp,%rbp
ffffffff80007d4a:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff80007d4e:	48 c7 45 f8 ff ff ff 	movq   $0xffffffffffffffff,-0x8(%rbp)
ffffffff80007d55:	ff 
ffffffff80007d56:	0f b6 05 fb f2 09 00 	movzbl 0x9f2fb(%rip),%eax        # ffffffff800a7058 <m_early_alloc>
ffffffff80007d5d:	84 c0                	test   %al,%al
ffffffff80007d5f:	74 13                	je     ffffffff80007d74 <vmm_alloc_page+0x32>
ffffffff80007d61:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80007d66:	e8 a1 38 00 00       	call   ffffffff8000b60c <early_alloc_page_phys>
ffffffff80007d6b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff80007d6f:	e9 9b 00 00 00       	jmp    ffffffff80007e0f <vmm_alloc_page+0xcd>
ffffffff80007d74:	bf 00 10 00 00       	mov    $0x1000,%edi
ffffffff80007d79:	e8 83 5e 00 00       	call   ffffffff8000dc01 <palloc>
ffffffff80007d7e:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff80007d82:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
ffffffff80007d87:	75 0c                	jne    ffffffff80007d95 <vmm_alloc_page+0x53>
ffffffff80007d89:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
ffffffff80007d90:	e9 8b 00 00 00       	jmp    ffffffff80007e20 <vmm_alloc_page+0xde>
ffffffff80007d95:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80007d99:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff80007d9d:	48 b8 ff ff ff ff ff 	movabs $0xffff7fffffffffff,%rax
ffffffff80007da4:	7f ff ff 
ffffffff80007da7:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
ffffffff80007dab:	76 10                	jbe    ffffffff80007dbd <vmm_alloc_page+0x7b>
ffffffff80007dad:	48 b8 00 00 00 00 80 	movabs $0xffff808000000000,%rax
ffffffff80007db4:	80 ff ff 
ffffffff80007db7:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
ffffffff80007dbb:	76 3d                	jbe    ffffffff80007dfa <vmm_alloc_page+0xb8>
ffffffff80007dbd:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80007dc2:	e8 1a ef ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff80007dc7:	48 89 c6             	mov    %rax,%rsi
ffffffff80007dca:	41 b8 dc 00 00 00    	mov    $0xdc,%r8d
ffffffff80007dd0:	48 8d 05 8f 05 03 00 	lea    0x3058f(%rip),%rax        # ffffffff80038366 <g_stivale2_header+0x1366>
ffffffff80007dd7:	48 89 c1             	mov    %rax,%rcx
ffffffff80007dda:	48 8d 05 d7 56 03 00 	lea    0x356d7(%rip),%rax        # ffffffff8003d4b8 <__FUNCTION__.4.lto_priv.0>
ffffffff80007de1:	48 89 c2             	mov    %rax,%rdx
ffffffff80007de4:	48 8d 05 d5 49 03 00 	lea    0x349d5(%rip),%rax        # ffffffff8003c7c0 <g_stivale2_header+0x57c0>
ffffffff80007deb:	48 89 c7             	mov    %rax,%rdi
ffffffff80007dee:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80007df3:	e8 48 b7 00 00       	call   ffffffff80013540 <printf_>
ffffffff80007df8:	0f 0b                	ud2    
ffffffff80007dfa:	48 ba 00 00 00 00 00 	movabs $0x800000000000,%rdx
ffffffff80007e01:	80 00 00 
ffffffff80007e04:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80007e08:	48 01 d0             	add    %rdx,%rax
ffffffff80007e0b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff80007e0f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80007e13:	48 89 c7             	mov    %rax,%rdi
ffffffff80007e16:	e8 91 fd ff ff       	call   ffffffff80007bac <vmm_unmap_direct_page>
ffffffff80007e1b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80007e1f:	90                   	nop
ffffffff80007e20:	c9                   	leave  
ffffffff80007e21:	c3                   	ret    

ffffffff80007e22 <vmm_setup_level>:
ffffffff80007e22:	f3 0f 1e fa          	endbr64 
ffffffff80007e26:	55                   	push   %rbp
ffffffff80007e27:	48 89 e5             	mov    %rsp,%rbp
ffffffff80007e2a:	48 83 ec 40          	sub    $0x40,%rsp
ffffffff80007e2e:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
ffffffff80007e32:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
ffffffff80007e36:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
ffffffff80007e3a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80007e3e:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
ffffffff80007e45:	00 
ffffffff80007e46:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80007e4a:	48 01 d0             	add    %rdx,%rax
ffffffff80007e4d:	0f b6 00             	movzbl (%rax),%eax
ffffffff80007e50:	83 e0 01             	and    $0x1,%eax
ffffffff80007e53:	84 c0                	test   %al,%al
ffffffff80007e55:	0f 85 24 01 00 00    	jne    ffffffff80007f7f <vmm_setup_level+0x15d>
ffffffff80007e5b:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80007e60:	e8 dd fe ff ff       	call   ffffffff80007d42 <vmm_alloc_page>
ffffffff80007e65:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff80007e69:	48 83 7d f8 ff       	cmpq   $0xffffffffffffffff,-0x8(%rbp)
ffffffff80007e6e:	75 0a                	jne    ffffffff80007e7a <vmm_setup_level+0x58>
ffffffff80007e70:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80007e75:	e9 0a 01 00 00       	jmp    ffffffff80007f84 <vmm_setup_level+0x162>
ffffffff80007e7a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80007e7e:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
ffffffff80007e85:	00 
ffffffff80007e86:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80007e8a:	48 01 d0             	add    %rdx,%rax
ffffffff80007e8d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff80007e91:	48 c1 ea 0c          	shr    $0xc,%rdx
ffffffff80007e95:	48 89 d1             	mov    %rdx,%rcx
ffffffff80007e98:	48 ba ff ff ff ff ff 	movabs $0xffffffffff,%rdx
ffffffff80007e9f:	00 00 00 
ffffffff80007ea2:	48 21 ca             	and    %rcx,%rdx
ffffffff80007ea5:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
ffffffff80007eac:	0f b6 08             	movzbl (%rax),%ecx
ffffffff80007eaf:	83 c9 01             	or     $0x1,%ecx
ffffffff80007eb2:	88 08                	mov    %cl,(%rax)
ffffffff80007eb4:	0f b6 08             	movzbl (%rax),%ecx
ffffffff80007eb7:	83 c9 02             	or     $0x2,%ecx
ffffffff80007eba:	88 08                	mov    %cl,(%rax)
ffffffff80007ebc:	48 89 d1             	mov    %rdx,%rcx
ffffffff80007ebf:	83 e1 0f             	and    $0xf,%ecx
ffffffff80007ec2:	89 ce                	mov    %ecx,%esi
ffffffff80007ec4:	c1 e6 04             	shl    $0x4,%esi
ffffffff80007ec7:	0f b6 48 01          	movzbl 0x1(%rax),%ecx
ffffffff80007ecb:	83 e1 0f             	and    $0xf,%ecx
ffffffff80007ece:	09 f1                	or     %esi,%ecx
ffffffff80007ed0:	88 48 01             	mov    %cl,0x1(%rax)
ffffffff80007ed3:	48 89 d1             	mov    %rdx,%rcx
ffffffff80007ed6:	48 c1 e9 04          	shr    $0x4,%rcx
ffffffff80007eda:	0f b6 f1             	movzbl %cl,%esi
ffffffff80007edd:	0f b6 48 02          	movzbl 0x2(%rax),%ecx
ffffffff80007ee1:	83 e1 00             	and    $0x0,%ecx
ffffffff80007ee4:	09 f1                	or     %esi,%ecx
ffffffff80007ee6:	88 48 02             	mov    %cl,0x2(%rax)
ffffffff80007ee9:	48 89 d1             	mov    %rdx,%rcx
ffffffff80007eec:	48 c1 e9 0c          	shr    $0xc,%rcx
ffffffff80007ef0:	0f b6 f1             	movzbl %cl,%esi
ffffffff80007ef3:	0f b6 48 03          	movzbl 0x3(%rax),%ecx
ffffffff80007ef7:	83 e1 00             	and    $0x0,%ecx
ffffffff80007efa:	09 f1                	or     %esi,%ecx
ffffffff80007efc:	88 48 03             	mov    %cl,0x3(%rax)
ffffffff80007eff:	48 89 d1             	mov    %rdx,%rcx
ffffffff80007f02:	48 c1 e9 14          	shr    $0x14,%rcx
ffffffff80007f06:	0f b6 f1             	movzbl %cl,%esi
ffffffff80007f09:	0f b6 48 04          	movzbl 0x4(%rax),%ecx
ffffffff80007f0d:	83 e1 00             	and    $0x0,%ecx
ffffffff80007f10:	09 f1                	or     %esi,%ecx
ffffffff80007f12:	88 48 04             	mov    %cl,0x4(%rax)
ffffffff80007f15:	48 89 d1             	mov    %rdx,%rcx
ffffffff80007f18:	48 c1 e9 1c          	shr    $0x1c,%rcx
ffffffff80007f1c:	0f b6 f1             	movzbl %cl,%esi
ffffffff80007f1f:	0f b6 48 05          	movzbl 0x5(%rax),%ecx
ffffffff80007f23:	83 e1 00             	and    $0x0,%ecx
ffffffff80007f26:	09 f1                	or     %esi,%ecx
ffffffff80007f28:	88 48 05             	mov    %cl,0x5(%rax)
ffffffff80007f2b:	48 c1 ea 24          	shr    $0x24,%rdx
ffffffff80007f2f:	83 e2 0f             	and    $0xf,%edx
ffffffff80007f32:	89 d1                	mov    %edx,%ecx
ffffffff80007f34:	83 e1 0f             	and    $0xf,%ecx
ffffffff80007f37:	0f b6 50 06          	movzbl 0x6(%rax),%edx
ffffffff80007f3b:	83 e2 f0             	and    $0xfffffff0,%edx
ffffffff80007f3e:	09 ca                	or     %ecx,%edx
ffffffff80007f40:	88 50 06             	mov    %dl,0x6(%rax)
ffffffff80007f43:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80007f47:	48 c1 e0 0c          	shl    $0xc,%rax
ffffffff80007f4b:	48 89 c2             	mov    %rax,%rdx
ffffffff80007f4e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff80007f52:	48 01 d0             	add    %rdx,%rax
ffffffff80007f55:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff80007f59:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80007f5d:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff80007f61:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80007f65:	0f 01 38             	invlpg (%rax)
ffffffff80007f68:	90                   	nop
ffffffff80007f69:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80007f6d:	ba 00 10 00 00       	mov    $0x1000,%edx
ffffffff80007f72:	be 00 00 00 00       	mov    $0x0,%esi
ffffffff80007f77:	48 89 c7             	mov    %rax,%rdi
ffffffff80007f7a:	e8 c9 65 00 00       	call   ffffffff8000e548 <memset>
ffffffff80007f7f:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff80007f84:	c9                   	leave  
ffffffff80007f85:	c3                   	ret    

ffffffff80007f86 <vmm_map>:
ffffffff80007f86:	f3 0f 1e fa          	endbr64 
ffffffff80007f8a:	55                   	push   %rbp
ffffffff80007f8b:	48 89 e5             	mov    %rsp,%rbp
ffffffff80007f8e:	48 83 ec 60          	sub    $0x60,%rsp
ffffffff80007f92:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
ffffffff80007f96:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
ffffffff80007f9a:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
ffffffff80007f9e:	89 4d a4             	mov    %ecx,-0x5c(%rbp)
ffffffff80007fa1:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
ffffffff80007fa8:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
ffffffff80007fac:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff80007fb0:	e9 e4 02 00 00       	jmp    ffffffff80008299 <vmm_map+0x313>
ffffffff80007fb5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80007fb9:	48 c1 e8 27          	shr    $0x27,%rax
ffffffff80007fbd:	25 ff 01 00 00       	and    $0x1ff,%eax
ffffffff80007fc2:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff80007fc6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80007fca:	48 c1 e8 1e          	shr    $0x1e,%rax
ffffffff80007fce:	25 ff ff 03 00       	and    $0x3ffff,%eax
ffffffff80007fd3:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff80007fd7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80007fdb:	48 c1 e8 15          	shr    $0x15,%rax
ffffffff80007fdf:	25 ff ff ff 07       	and    $0x7ffffff,%eax
ffffffff80007fe4:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
ffffffff80007fe8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80007fec:	48 c1 e8 0c          	shr    $0xc,%rax
ffffffff80007ff0:	48 89 c2             	mov    %rax,%rdx
ffffffff80007ff3:	48 b8 ff ff ff ff 0f 	movabs $0xfffffffff,%rax
ffffffff80007ffa:	00 00 00 
ffffffff80007ffd:	48 21 d0             	and    %rdx,%rax
ffffffff80008000:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
ffffffff80008004:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80008008:	48 89 c2             	mov    %rax,%rdx
ffffffff8000800b:	48 b8 00 00 c0 bf 7f 	movabs $0xffffff7fbfc00000,%rax
ffffffff80008012:	ff ff ff 
ffffffff80008015:	48 89 c6             	mov    %rax,%rsi
ffffffff80008018:	48 b8 00 e0 df bf 7f 	movabs $0xffffff7fbfdfe000,%rax
ffffffff8000801f:	ff ff ff 
ffffffff80008022:	48 89 c7             	mov    %rax,%rdi
ffffffff80008025:	e8 f8 fd ff ff       	call   ffffffff80007e22 <vmm_setup_level>
ffffffff8000802a:	83 f0 01             	xor    $0x1,%eax
ffffffff8000802d:	84 c0                	test   %al,%al
ffffffff8000802f:	74 49                	je     ffffffff8000807a <vmm_map+0xf4>
ffffffff80008031:	c7 45 fc 03 00 00 00 	movl   $0x3,-0x4(%rbp)
ffffffff80008038:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000803d:	e8 9f ec ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff80008042:	48 89 c6             	mov    %rax,%rsi
ffffffff80008045:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff80008048:	41 b9 0f 01 00 00    	mov    $0x10f,%r9d
ffffffff8000804e:	4c 8d 05 11 03 03 00 	lea    0x30311(%rip),%r8        # ffffffff80038366 <g_stivale2_header+0x1366>
ffffffff80008055:	48 8d 15 6c 54 03 00 	lea    0x3546c(%rip),%rdx        # ffffffff8003d4c8 <__FUNCTION__.3.lto_priv.0>
ffffffff8000805c:	48 89 d1             	mov    %rdx,%rcx
ffffffff8000805f:	89 c2                	mov    %eax,%edx
ffffffff80008061:	48 8d 05 10 47 03 00 	lea    0x34710(%rip),%rax        # ffffffff8003c778 <g_stivale2_header+0x5778>
ffffffff80008068:	48 89 c7             	mov    %rax,%rdi
ffffffff8000806b:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80008070:	e8 cb b4 00 00       	call   ffffffff80013540 <printf_>
ffffffff80008075:	e9 3c 02 00 00       	jmp    ffffffff800082b6 <vmm_map+0x330>
ffffffff8000807a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8000807e:	48 89 c2             	mov    %rax,%rdx
ffffffff80008081:	48 b8 00 00 00 80 7f 	movabs $0xffffff7f80000000,%rax
ffffffff80008088:	ff ff ff 
ffffffff8000808b:	48 89 c6             	mov    %rax,%rsi
ffffffff8000808e:	48 b8 00 00 c0 bf 7f 	movabs $0xffffff7fbfc00000,%rax
ffffffff80008095:	ff ff ff 
ffffffff80008098:	48 89 c7             	mov    %rax,%rdi
ffffffff8000809b:	e8 82 fd ff ff       	call   ffffffff80007e22 <vmm_setup_level>
ffffffff800080a0:	83 f0 01             	xor    $0x1,%eax
ffffffff800080a3:	84 c0                	test   %al,%al
ffffffff800080a5:	74 49                	je     ffffffff800080f0 <vmm_map+0x16a>
ffffffff800080a7:	c7 45 fc 03 00 00 00 	movl   $0x3,-0x4(%rbp)
ffffffff800080ae:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800080b3:	e8 29 ec ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff800080b8:	48 89 c6             	mov    %rax,%rsi
ffffffff800080bb:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff800080be:	41 b9 10 01 00 00    	mov    $0x110,%r9d
ffffffff800080c4:	4c 8d 05 9b 02 03 00 	lea    0x3029b(%rip),%r8        # ffffffff80038366 <g_stivale2_header+0x1366>
ffffffff800080cb:	48 8d 15 f6 53 03 00 	lea    0x353f6(%rip),%rdx        # ffffffff8003d4c8 <__FUNCTION__.3.lto_priv.0>
ffffffff800080d2:	48 89 d1             	mov    %rdx,%rcx
ffffffff800080d5:	89 c2                	mov    %eax,%edx
ffffffff800080d7:	48 8d 05 9a 46 03 00 	lea    0x3469a(%rip),%rax        # ffffffff8003c778 <g_stivale2_header+0x5778>
ffffffff800080de:	48 89 c7             	mov    %rax,%rdi
ffffffff800080e1:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800080e6:	e8 55 b4 00 00       	call   ffffffff80013540 <printf_>
ffffffff800080eb:	e9 c6 01 00 00       	jmp    ffffffff800082b6 <vmm_map+0x330>
ffffffff800080f0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff800080f4:	48 89 c2             	mov    %rax,%rdx
ffffffff800080f7:	48 b8 00 00 00 00 00 	movabs $0xffffff0000000000,%rax
ffffffff800080fe:	ff ff ff 
ffffffff80008101:	48 89 c6             	mov    %rax,%rsi
ffffffff80008104:	48 b8 00 00 00 80 7f 	movabs $0xffffff7f80000000,%rax
ffffffff8000810b:	ff ff ff 
ffffffff8000810e:	48 89 c7             	mov    %rax,%rdi
ffffffff80008111:	e8 0c fd ff ff       	call   ffffffff80007e22 <vmm_setup_level>
ffffffff80008116:	83 f0 01             	xor    $0x1,%eax
ffffffff80008119:	84 c0                	test   %al,%al
ffffffff8000811b:	74 49                	je     ffffffff80008166 <vmm_map+0x1e0>
ffffffff8000811d:	c7 45 fc 03 00 00 00 	movl   $0x3,-0x4(%rbp)
ffffffff80008124:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80008129:	e8 b3 eb ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff8000812e:	48 89 c6             	mov    %rax,%rsi
ffffffff80008131:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff80008134:	41 b9 11 01 00 00    	mov    $0x111,%r9d
ffffffff8000813a:	4c 8d 05 25 02 03 00 	lea    0x30225(%rip),%r8        # ffffffff80038366 <g_stivale2_header+0x1366>
ffffffff80008141:	48 8d 15 80 53 03 00 	lea    0x35380(%rip),%rdx        # ffffffff8003d4c8 <__FUNCTION__.3.lto_priv.0>
ffffffff80008148:	48 89 d1             	mov    %rdx,%rcx
ffffffff8000814b:	89 c2                	mov    %eax,%edx
ffffffff8000814d:	48 8d 05 24 46 03 00 	lea    0x34624(%rip),%rax        # ffffffff8003c778 <g_stivale2_header+0x5778>
ffffffff80008154:	48 89 c7             	mov    %rax,%rdi
ffffffff80008157:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000815c:	e8 df b3 00 00       	call   ffffffff80013540 <printf_>
ffffffff80008161:	e9 50 01 00 00       	jmp    ffffffff800082b6 <vmm_map+0x330>
ffffffff80008166:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8000816a:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
ffffffff80008171:	00 
ffffffff80008172:	48 b8 00 00 00 00 00 	movabs $0xffffff0000000000,%rax
ffffffff80008179:	ff ff ff 
ffffffff8000817c:	48 01 d0             	add    %rdx,%rax
ffffffff8000817f:	8b 55 a4             	mov    -0x5c(%rbp),%edx
ffffffff80008182:	89 d1                	mov    %edx,%ecx
ffffffff80008184:	83 e1 01             	and    $0x1,%ecx
ffffffff80008187:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
ffffffff8000818b:	48 89 d6             	mov    %rdx,%rsi
ffffffff8000818e:	48 c1 ee 0c          	shr    $0xc,%rsi
ffffffff80008192:	48 ba ff ff ff ff ff 	movabs $0xffffffffff,%rdx
ffffffff80008199:	00 00 00 
ffffffff8000819c:	48 21 f2             	and    %rsi,%rdx
ffffffff8000819f:	8b 75 a4             	mov    -0x5c(%rbp),%esi
ffffffff800081a2:	83 e6 02             	and    $0x2,%esi
ffffffff800081a5:	85 f6                	test   %esi,%esi
ffffffff800081a7:	40 0f 94 c7          	sete   %dil
ffffffff800081ab:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
ffffffff800081b2:	0f b6 30             	movzbl (%rax),%esi
ffffffff800081b5:	83 ce 01             	or     $0x1,%esi
ffffffff800081b8:	40 88 30             	mov    %sil,(%rax)
ffffffff800081bb:	83 e1 01             	and    $0x1,%ecx
ffffffff800081be:	8d 34 09             	lea    (%rcx,%rcx,1),%esi
ffffffff800081c1:	0f b6 08             	movzbl (%rax),%ecx
ffffffff800081c4:	83 e1 fd             	and    $0xfffffffd,%ecx
ffffffff800081c7:	09 f1                	or     %esi,%ecx
ffffffff800081c9:	88 08                	mov    %cl,(%rax)
ffffffff800081cb:	48 89 d1             	mov    %rdx,%rcx
ffffffff800081ce:	83 e1 0f             	and    $0xf,%ecx
ffffffff800081d1:	89 ce                	mov    %ecx,%esi
ffffffff800081d3:	c1 e6 04             	shl    $0x4,%esi
ffffffff800081d6:	0f b6 48 01          	movzbl 0x1(%rax),%ecx
ffffffff800081da:	83 e1 0f             	and    $0xf,%ecx
ffffffff800081dd:	09 f1                	or     %esi,%ecx
ffffffff800081df:	88 48 01             	mov    %cl,0x1(%rax)
ffffffff800081e2:	48 89 d1             	mov    %rdx,%rcx
ffffffff800081e5:	48 c1 e9 04          	shr    $0x4,%rcx
ffffffff800081e9:	0f b6 f1             	movzbl %cl,%esi
ffffffff800081ec:	0f b6 48 02          	movzbl 0x2(%rax),%ecx
ffffffff800081f0:	83 e1 00             	and    $0x0,%ecx
ffffffff800081f3:	09 f1                	or     %esi,%ecx
ffffffff800081f5:	88 48 02             	mov    %cl,0x2(%rax)
ffffffff800081f8:	48 89 d1             	mov    %rdx,%rcx
ffffffff800081fb:	48 c1 e9 0c          	shr    $0xc,%rcx
ffffffff800081ff:	0f b6 f1             	movzbl %cl,%esi
ffffffff80008202:	0f b6 48 03          	movzbl 0x3(%rax),%ecx
ffffffff80008206:	83 e1 00             	and    $0x0,%ecx
ffffffff80008209:	09 f1                	or     %esi,%ecx
ffffffff8000820b:	88 48 03             	mov    %cl,0x3(%rax)
ffffffff8000820e:	48 89 d1             	mov    %rdx,%rcx
ffffffff80008211:	48 c1 e9 14          	shr    $0x14,%rcx
ffffffff80008215:	0f b6 f1             	movzbl %cl,%esi
ffffffff80008218:	0f b6 48 04          	movzbl 0x4(%rax),%ecx
ffffffff8000821c:	83 e1 00             	and    $0x0,%ecx
ffffffff8000821f:	09 f1                	or     %esi,%ecx
ffffffff80008221:	88 48 04             	mov    %cl,0x4(%rax)
ffffffff80008224:	48 89 d1             	mov    %rdx,%rcx
ffffffff80008227:	48 c1 e9 1c          	shr    $0x1c,%rcx
ffffffff8000822b:	0f b6 f1             	movzbl %cl,%esi
ffffffff8000822e:	0f b6 48 05          	movzbl 0x5(%rax),%ecx
ffffffff80008232:	83 e1 00             	and    $0x0,%ecx
ffffffff80008235:	09 f1                	or     %esi,%ecx
ffffffff80008237:	88 48 05             	mov    %cl,0x5(%rax)
ffffffff8000823a:	48 c1 ea 24          	shr    $0x24,%rdx
ffffffff8000823e:	83 e2 0f             	and    $0xf,%edx
ffffffff80008241:	89 d1                	mov    %edx,%ecx
ffffffff80008243:	83 e1 0f             	and    $0xf,%ecx
ffffffff80008246:	0f b6 50 06          	movzbl 0x6(%rax),%edx
ffffffff8000824a:	83 e2 f0             	and    $0xfffffff0,%edx
ffffffff8000824d:	09 ca                	or     %ecx,%edx
ffffffff8000824f:	88 50 06             	mov    %dl,0x6(%rax)
ffffffff80008252:	c1 e7 07             	shl    $0x7,%edi
ffffffff80008255:	89 f9                	mov    %edi,%ecx
ffffffff80008257:	0f b6 50 07          	movzbl 0x7(%rax),%edx
ffffffff8000825b:	83 e2 7f             	and    $0x7f,%edx
ffffffff8000825e:	09 ca                	or     %ecx,%edx
ffffffff80008260:	88 50 07             	mov    %dl,0x7(%rax)
ffffffff80008263:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80008267:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
ffffffff8000826b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8000826f:	0f 01 38             	invlpg (%rax)
ffffffff80008272:	90                   	nop
ffffffff80008273:	8b 45 a4             	mov    -0x5c(%rbp),%eax
ffffffff80008276:	83 e0 04             	and    $0x4,%eax
ffffffff80008279:	85 c0                	test   %eax,%eax
ffffffff8000827b:	74 0c                	je     ffffffff80008289 <vmm_map+0x303>
ffffffff8000827d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff80008281:	48 89 c7             	mov    %rax,%rdi
ffffffff80008284:	e8 23 f9 ff ff       	call   ffffffff80007bac <vmm_unmap_direct_page>
ffffffff80008289:	48 81 45 f0 00 10 00 	addq   $0x1000,-0x10(%rbp)
ffffffff80008290:	00 
ffffffff80008291:	48 81 45 b8 00 10 00 	addq   $0x1000,-0x48(%rbp)
ffffffff80008298:	00 
ffffffff80008299:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff8000829d:	48 c1 e0 0c          	shl    $0xc,%rax
ffffffff800082a1:	48 89 c2             	mov    %rax,%rdx
ffffffff800082a4:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
ffffffff800082a8:	48 01 d0             	add    %rdx,%rax
ffffffff800082ab:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
ffffffff800082af:	0f 82 00 fd ff ff    	jb     ffffffff80007fb5 <vmm_map+0x2f>
ffffffff800082b5:	90                   	nop
ffffffff800082b6:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff800082b9:	90                   	nop
ffffffff800082ba:	90                   	nop
ffffffff800082bb:	c9                   	leave  
ffffffff800082bc:	c3                   	ret    

ffffffff800082bd <vmm_set_perms>:
ffffffff800082bd:	f3 0f 1e fa          	endbr64 
ffffffff800082c1:	55                   	push   %rbp
ffffffff800082c2:	48 89 e5             	mov    %rsp,%rbp
ffffffff800082c5:	48 83 ec 40          	sub    $0x40,%rsp
ffffffff800082c9:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
ffffffff800082cd:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
ffffffff800082d1:	89 55 cc             	mov    %edx,-0x34(%rbp)
ffffffff800082d4:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
ffffffff800082db:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff800082df:	48 c1 e8 0c          	shr    $0xc,%rax
ffffffff800082e3:	48 89 c2             	mov    %rax,%rdx
ffffffff800082e6:	48 b8 ff ff ff ff 0f 	movabs $0xfffffffff,%rax
ffffffff800082ed:	00 00 00 
ffffffff800082f0:	48 21 d0             	and    %rdx,%rax
ffffffff800082f3:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff800082f7:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
ffffffff800082fe:	e9 5b 01 00 00       	jmp    ffffffff8000845e <vmm_set_perms+0x1a1>
ffffffff80008303:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80008307:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
ffffffff8000830e:	00 
ffffffff8000830f:	48 b8 00 00 00 00 00 	movabs $0xffffff0000000000,%rax
ffffffff80008316:	ff ff ff 
ffffffff80008319:	48 01 d0             	add    %rdx,%rax
ffffffff8000831c:	0f b6 00             	movzbl (%rax),%eax
ffffffff8000831f:	83 e0 01             	and    $0x1,%eax
ffffffff80008322:	84 c0                	test   %al,%al
ffffffff80008324:	75 49                	jne    ffffffff8000836f <vmm_set_perms+0xb2>
ffffffff80008326:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)
ffffffff8000832d:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80008332:	e8 aa e9 ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff80008337:	48 89 c6             	mov    %rax,%rsi
ffffffff8000833a:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8000833d:	41 b9 2f 01 00 00    	mov    $0x12f,%r9d
ffffffff80008343:	4c 8d 05 1c 00 03 00 	lea    0x3001c(%rip),%r8        # ffffffff80038366 <g_stivale2_header+0x1366>
ffffffff8000834a:	48 8d 15 7f 51 03 00 	lea    0x3517f(%rip),%rdx        # ffffffff8003d4d0 <__FUNCTION__.2.lto_priv.1>
ffffffff80008351:	48 89 d1             	mov    %rdx,%rcx
ffffffff80008354:	89 c2                	mov    %eax,%edx
ffffffff80008356:	48 8d 05 1b 44 03 00 	lea    0x3441b(%rip),%rax        # ffffffff8003c778 <g_stivale2_header+0x5778>
ffffffff8000835d:	48 89 c7             	mov    %rax,%rdi
ffffffff80008360:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80008365:	e8 d6 b1 00 00       	call   ffffffff80013540 <printf_>
ffffffff8000836a:	e9 ff 00 00 00       	jmp    ffffffff8000846e <vmm_set_perms+0x1b1>
ffffffff8000836f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80008373:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
ffffffff8000837a:	00 
ffffffff8000837b:	48 b8 00 00 00 00 00 	movabs $0xffffff0000000000,%rax
ffffffff80008382:	ff ff ff 
ffffffff80008385:	48 01 c2             	add    %rax,%rdx
ffffffff80008388:	8b 45 cc             	mov    -0x34(%rbp),%eax
ffffffff8000838b:	83 e0 01             	and    $0x1,%eax
ffffffff8000838e:	83 e0 01             	and    $0x1,%eax
ffffffff80008391:	8d 0c 00             	lea    (%rax,%rax,1),%ecx
ffffffff80008394:	0f b6 02             	movzbl (%rdx),%eax
ffffffff80008397:	83 e0 fd             	and    $0xfffffffd,%eax
ffffffff8000839a:	09 c8                	or     %ecx,%eax
ffffffff8000839c:	88 02                	mov    %al,(%rdx)
ffffffff8000839e:	8b 45 cc             	mov    -0x34(%rbp),%eax
ffffffff800083a1:	83 e0 02             	and    $0x2,%eax
ffffffff800083a4:	89 c2                	mov    %eax,%edx
ffffffff800083a6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff800083aa:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
ffffffff800083b1:	00 
ffffffff800083b2:	48 b8 00 00 00 00 00 	movabs $0xffffff0000000000,%rax
ffffffff800083b9:	ff ff ff 
ffffffff800083bc:	48 01 c8             	add    %rcx,%rax
ffffffff800083bf:	85 d2                	test   %edx,%edx
ffffffff800083c1:	0f 94 c2             	sete   %dl
ffffffff800083c4:	89 d1                	mov    %edx,%ecx
ffffffff800083c6:	c1 e1 07             	shl    $0x7,%ecx
ffffffff800083c9:	0f b6 50 07          	movzbl 0x7(%rax),%edx
ffffffff800083cd:	83 e2 7f             	and    $0x7f,%edx
ffffffff800083d0:	09 ca                	or     %ecx,%edx
ffffffff800083d2:	88 50 07             	mov    %dl,0x7(%rax)
ffffffff800083d5:	8b 45 cc             	mov    -0x34(%rbp),%eax
ffffffff800083d8:	83 e0 04             	and    $0x4,%eax
ffffffff800083db:	85 c0                	test   %eax,%eax
ffffffff800083dd:	74 76                	je     ffffffff80008455 <vmm_set_perms+0x198>
ffffffff800083df:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff800083e3:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
ffffffff800083ea:	00 
ffffffff800083eb:	48 b8 00 00 00 00 00 	movabs $0xffffff0000000000,%rax
ffffffff800083f2:	ff ff ff 
ffffffff800083f5:	48 01 d0             	add    %rdx,%rax
ffffffff800083f8:	0f b6 50 01          	movzbl 0x1(%rax),%edx
ffffffff800083fc:	c0 ea 04             	shr    $0x4,%dl
ffffffff800083ff:	0f b6 ca             	movzbl %dl,%ecx
ffffffff80008402:	0f b6 50 02          	movzbl 0x2(%rax),%edx
ffffffff80008406:	48 c1 e2 04          	shl    $0x4,%rdx
ffffffff8000840a:	48 09 d1             	or     %rdx,%rcx
ffffffff8000840d:	0f b6 50 03          	movzbl 0x3(%rax),%edx
ffffffff80008411:	48 c1 e2 0c          	shl    $0xc,%rdx
ffffffff80008415:	48 09 d1             	or     %rdx,%rcx
ffffffff80008418:	0f b6 50 04          	movzbl 0x4(%rax),%edx
ffffffff8000841c:	48 c1 e2 14          	shl    $0x14,%rdx
ffffffff80008420:	48 09 d1             	or     %rdx,%rcx
ffffffff80008423:	0f b6 50 05          	movzbl 0x5(%rax),%edx
ffffffff80008427:	48 c1 e2 1c          	shl    $0x1c,%rdx
ffffffff8000842b:	48 09 ca             	or     %rcx,%rdx
ffffffff8000842e:	0f b6 40 06          	movzbl 0x6(%rax),%eax
ffffffff80008432:	83 e0 0f             	and    $0xf,%eax
ffffffff80008435:	48 c1 e0 24          	shl    $0x24,%rax
ffffffff80008439:	48 09 d0             	or     %rdx,%rax
ffffffff8000843c:	48 c1 e0 0c          	shl    $0xc,%rax
ffffffff80008440:	48 ba ff ff ff ff ff 	movabs $0xffffffffff,%rdx
ffffffff80008447:	00 00 00 
ffffffff8000844a:	48 21 d0             	and    %rdx,%rax
ffffffff8000844d:	48 89 c7             	mov    %rax,%rdi
ffffffff80008450:	e8 57 f7 ff ff       	call   ffffffff80007bac <vmm_unmap_direct_page>
ffffffff80008455:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
ffffffff80008459:	48 83 45 f0 01       	addq   $0x1,-0x10(%rbp)
ffffffff8000845e:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff80008461:	48 98                	cltq   
ffffffff80008463:	48 39 45 d0          	cmp    %rax,-0x30(%rbp)
ffffffff80008467:	0f 87 96 fe ff ff    	ja     ffffffff80008303 <vmm_set_perms+0x46>
ffffffff8000846d:	90                   	nop
ffffffff8000846e:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff80008471:	90                   	nop
ffffffff80008472:	90                   	nop
ffffffff80008473:	c9                   	leave  
ffffffff80008474:	c3                   	ret    

ffffffff80008475 <vmm_alloc>:
ffffffff80008475:	f3 0f 1e fa          	endbr64 
ffffffff80008479:	55                   	push   %rbp
ffffffff8000847a:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000847d:	48 83 ec 40          	sub    $0x40,%rsp
ffffffff80008481:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
ffffffff80008485:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
ffffffff80008489:	89 55 cc             	mov    %edx,-0x34(%rbp)
ffffffff8000848c:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
ffffffff80008493:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
ffffffff8000849a:	00 
ffffffff8000849b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8000849f:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff800084a3:	e9 c6 00 00 00       	jmp    ffffffff8000856e <vmm_alloc+0xf9>
ffffffff800084a8:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800084ad:	e8 90 f8 ff ff       	call   ffffffff80007d42 <vmm_alloc_page>
ffffffff800084b2:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff800084b6:	48 83 7d e8 ff       	cmpq   $0xffffffffffffffff,-0x18(%rbp)
ffffffff800084bb:	75 49                	jne    ffffffff80008506 <vmm_alloc+0x91>
ffffffff800084bd:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)
ffffffff800084c4:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800084c9:	e8 13 e8 ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff800084ce:	48 89 c6             	mov    %rax,%rsi
ffffffff800084d1:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff800084d4:	41 b9 42 01 00 00    	mov    $0x142,%r9d
ffffffff800084da:	4c 8d 05 85 fe 02 00 	lea    0x2fe85(%rip),%r8        # ffffffff80038366 <g_stivale2_header+0x1366>
ffffffff800084e1:	48 8d 15 f8 4f 03 00 	lea    0x34ff8(%rip),%rdx        # ffffffff8003d4e0 <__FUNCTION__.1.lto_priv.3>
ffffffff800084e8:	48 89 d1             	mov    %rdx,%rcx
ffffffff800084eb:	89 c2                	mov    %eax,%edx
ffffffff800084ed:	48 8d 05 84 42 03 00 	lea    0x34284(%rip),%rax        # ffffffff8003c778 <g_stivale2_header+0x5778>
ffffffff800084f4:	48 89 c7             	mov    %rax,%rdi
ffffffff800084f7:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800084fc:	e8 3f b0 00 00       	call   ffffffff80013540 <printf_>
ffffffff80008501:	e9 85 00 00 00       	jmp    ffffffff8000858b <vmm_alloc+0x116>
ffffffff80008506:	8b 55 cc             	mov    -0x34(%rbp),%edx
ffffffff80008509:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
ffffffff8000850d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80008511:	89 d1                	mov    %edx,%ecx
ffffffff80008513:	ba 01 00 00 00       	mov    $0x1,%edx
ffffffff80008518:	48 89 c7             	mov    %rax,%rdi
ffffffff8000851b:	e8 66 fa ff ff       	call   ffffffff80007f86 <vmm_map>
ffffffff80008520:	89 45 fc             	mov    %eax,-0x4(%rbp)
ffffffff80008523:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
ffffffff80008527:	74 3d                	je     ffffffff80008566 <vmm_alloc+0xf1>
ffffffff80008529:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000852e:	e8 ae e7 ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff80008533:	48 89 c6             	mov    %rax,%rsi
ffffffff80008536:	41 b8 43 01 00 00    	mov    $0x143,%r8d
ffffffff8000853c:	48 8d 05 23 fe 02 00 	lea    0x2fe23(%rip),%rax        # ffffffff80038366 <g_stivale2_header+0x1366>
ffffffff80008543:	48 89 c1             	mov    %rax,%rcx
ffffffff80008546:	48 8d 05 93 4f 03 00 	lea    0x34f93(%rip),%rax        # ffffffff8003d4e0 <__FUNCTION__.1.lto_priv.3>
ffffffff8000854d:	48 89 c2             	mov    %rax,%rdx
ffffffff80008550:	48 8d 05 99 42 03 00 	lea    0x34299(%rip),%rax        # ffffffff8003c7f0 <g_stivale2_header+0x57f0>
ffffffff80008557:	48 89 c7             	mov    %rax,%rdi
ffffffff8000855a:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000855f:	e8 dc af 00 00       	call   ffffffff80013540 <printf_>
ffffffff80008564:	eb 25                	jmp    ffffffff8000858b <vmm_alloc+0x116>
ffffffff80008566:	48 81 45 f0 00 10 00 	addq   $0x1000,-0x10(%rbp)
ffffffff8000856d:	00 
ffffffff8000856e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff80008572:	48 c1 e0 0c          	shl    $0xc,%rax
ffffffff80008576:	48 89 c2             	mov    %rax,%rdx
ffffffff80008579:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8000857d:	48 01 d0             	add    %rdx,%rax
ffffffff80008580:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
ffffffff80008584:	0f 82 1e ff ff ff    	jb     ffffffff800084a8 <vmm_alloc+0x33>
ffffffff8000858a:	90                   	nop
ffffffff8000858b:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8000858e:	90                   	nop
ffffffff8000858f:	90                   	nop
ffffffff80008590:	c9                   	leave  
ffffffff80008591:	c3                   	ret    

ffffffff80008592 <vmm_unmap>:
ffffffff80008592:	f3 0f 1e fa          	endbr64 
ffffffff80008596:	55                   	push   %rbp
ffffffff80008597:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000859a:	48 83 ec 28          	sub    $0x28,%rsp
ffffffff8000859e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff800085a2:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
ffffffff800085a6:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
ffffffff800085aa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800085ae:	48 c1 e8 0c          	shr    $0xc,%rax
ffffffff800085b2:	48 89 c2             	mov    %rax,%rdx
ffffffff800085b5:	48 b8 ff ff ff ff 0f 	movabs $0xfffffffff,%rax
ffffffff800085bc:	00 00 00 
ffffffff800085bf:	48 21 d0             	and    %rdx,%rax
ffffffff800085c2:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff800085c6:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
ffffffff800085cd:	e9 05 01 00 00       	jmp    ffffffff800086d7 <vmm_unmap+0x145>
ffffffff800085d2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff800085d6:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
ffffffff800085dd:	00 
ffffffff800085de:	48 b8 00 00 00 00 00 	movabs $0xffffff0000000000,%rax
ffffffff800085e5:	ff ff ff 
ffffffff800085e8:	48 01 d0             	add    %rdx,%rax
ffffffff800085eb:	0f b6 00             	movzbl (%rax),%eax
ffffffff800085ee:	83 e0 01             	and    $0x1,%eax
ffffffff800085f1:	84 c0                	test   %al,%al
ffffffff800085f3:	0f 84 b3 00 00 00    	je     ffffffff800086ac <vmm_unmap+0x11a>
ffffffff800085f9:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
ffffffff800085fe:	0f 84 86 00 00 00    	je     ffffffff8000868a <vmm_unmap+0xf8>
ffffffff80008604:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80008608:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
ffffffff8000860f:	00 
ffffffff80008610:	48 b8 00 00 00 00 00 	movabs $0xffffff0000000000,%rax
ffffffff80008617:	ff ff ff 
ffffffff8000861a:	48 01 d0             	add    %rdx,%rax
ffffffff8000861d:	0f b6 50 01          	movzbl 0x1(%rax),%edx
ffffffff80008621:	c0 ea 04             	shr    $0x4,%dl
ffffffff80008624:	0f b6 ca             	movzbl %dl,%ecx
ffffffff80008627:	0f b6 50 02          	movzbl 0x2(%rax),%edx
ffffffff8000862b:	48 c1 e2 04          	shl    $0x4,%rdx
ffffffff8000862f:	48 09 d1             	or     %rdx,%rcx
ffffffff80008632:	0f b6 50 03          	movzbl 0x3(%rax),%edx
ffffffff80008636:	48 c1 e2 0c          	shl    $0xc,%rdx
ffffffff8000863a:	48 09 d1             	or     %rdx,%rcx
ffffffff8000863d:	0f b6 50 04          	movzbl 0x4(%rax),%edx
ffffffff80008641:	48 c1 e2 14          	shl    $0x14,%rdx
ffffffff80008645:	48 09 d1             	or     %rdx,%rcx
ffffffff80008648:	0f b6 50 05          	movzbl 0x5(%rax),%edx
ffffffff8000864c:	48 c1 e2 1c          	shl    $0x1c,%rdx
ffffffff80008650:	48 09 ca             	or     %rcx,%rdx
ffffffff80008653:	0f b6 40 06          	movzbl 0x6(%rax),%eax
ffffffff80008657:	83 e0 0f             	and    $0xf,%eax
ffffffff8000865a:	48 c1 e0 24          	shl    $0x24,%rax
ffffffff8000865e:	48 09 d0             	or     %rdx,%rax
ffffffff80008661:	48 c1 e0 0c          	shl    $0xc,%rax
ffffffff80008665:	48 ba ff ff ff ff ff 	movabs $0xffffffffff,%rdx
ffffffff8000866c:	00 00 00 
ffffffff8000866f:	48 21 d0             	and    %rdx,%rax
ffffffff80008672:	8b 55 f4             	mov    -0xc(%rbp),%edx
ffffffff80008675:	48 63 d2             	movslq %edx,%rdx
ffffffff80008678:	48 8d 0c d5 00 00 00 	lea    0x0(,%rdx,8),%rcx
ffffffff8000867f:	00 
ffffffff80008680:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff80008684:	48 01 ca             	add    %rcx,%rdx
ffffffff80008687:	48 89 02             	mov    %rax,(%rdx)
ffffffff8000868a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000868e:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
ffffffff80008695:	00 
ffffffff80008696:	48 b8 00 00 00 00 00 	movabs $0xffffff0000000000,%rax
ffffffff8000869d:	ff ff ff 
ffffffff800086a0:	48 01 d0             	add    %rdx,%rax
ffffffff800086a3:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
ffffffff800086aa:	eb 22                	jmp    ffffffff800086ce <vmm_unmap+0x13c>
ffffffff800086ac:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
ffffffff800086b1:	74 1b                	je     ffffffff800086ce <vmm_unmap+0x13c>
ffffffff800086b3:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff800086b6:	48 98                	cltq   
ffffffff800086b8:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
ffffffff800086bf:	00 
ffffffff800086c0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff800086c4:	48 01 d0             	add    %rdx,%rax
ffffffff800086c7:	48 c7 00 ff ff ff ff 	movq   $0xffffffffffffffff,(%rax)
ffffffff800086ce:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
ffffffff800086d2:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
ffffffff800086d7:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff800086da:	48 98                	cltq   
ffffffff800086dc:	48 39 45 e0          	cmp    %rax,-0x20(%rbp)
ffffffff800086e0:	0f 87 ec fe ff ff    	ja     ffffffff800085d2 <vmm_unmap+0x40>
ffffffff800086e6:	90                   	nop
ffffffff800086e7:	90                   	nop
ffffffff800086e8:	c9                   	leave  
ffffffff800086e9:	c3                   	ret    

ffffffff800086ea <vmm_page_fault_handler>:
ffffffff800086ea:	f3 0f 1e fa          	endbr64 
ffffffff800086ee:	55                   	push   %rbp
ffffffff800086ef:	48 89 e5             	mov    %rsp,%rbp
ffffffff800086f2:	48 83 ec 50          	sub    $0x50,%rsp
ffffffff800086f6:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
ffffffff800086fa:	89 f1                	mov    %esi,%ecx
ffffffff800086fc:	89 d0                	mov    %edx,%eax
ffffffff800086fe:	89 ca                	mov    %ecx,%edx
ffffffff80008700:	88 55 b4             	mov    %dl,-0x4c(%rbp)
ffffffff80008703:	88 45 b0             	mov    %al,-0x50(%rbp)
ffffffff80008706:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
ffffffff8000870d:	48 b8 ff ff ff 7f b0 	movabs $0xffffffb07fffffff,%rax
ffffffff80008714:	ff ff ff 
ffffffff80008717:	48 39 45 b8          	cmp    %rax,-0x48(%rbp)
ffffffff8000871b:	0f 86 dd 00 00 00    	jbe    ffffffff800087fe <vmm_page_fault_handler+0x114>
ffffffff80008721:	48 b8 ff ff ff 7f b1 	movabs $0xffffffb17fffffff,%rax
ffffffff80008728:	ff ff ff 
ffffffff8000872b:	48 39 45 b8          	cmp    %rax,-0x48(%rbp)
ffffffff8000872f:	0f 87 c9 00 00 00    	ja     ffffffff800087fe <vmm_page_fault_handler+0x114>
ffffffff80008735:	80 7d b0 00          	cmpb   $0x0,-0x50(%rbp)
ffffffff80008739:	74 49                	je     ffffffff80008784 <vmm_page_fault_handler+0x9a>
ffffffff8000873b:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)
ffffffff80008742:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80008747:	e8 95 e5 ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff8000874c:	48 89 c6             	mov    %rax,%rsi
ffffffff8000874f:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff80008752:	41 b9 65 01 00 00    	mov    $0x165,%r9d
ffffffff80008758:	4c 8d 05 07 fc 02 00 	lea    0x2fc07(%rip),%r8        # ffffffff80038366 <g_stivale2_header+0x1366>
ffffffff8000875f:	48 8d 15 8a 4d 03 00 	lea    0x34d8a(%rip),%rdx        # ffffffff8003d4f0 <__FUNCTION__.0.lto_priv.5>
ffffffff80008766:	48 89 d1             	mov    %rdx,%rcx
ffffffff80008769:	89 c2                	mov    %eax,%edx
ffffffff8000876b:	48 8d 05 06 40 03 00 	lea    0x34006(%rip),%rax        # ffffffff8003c778 <g_stivale2_header+0x5778>
ffffffff80008772:	48 89 c7             	mov    %rax,%rdi
ffffffff80008775:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000877a:	e8 c1 ad 00 00       	call   ffffffff80013540 <printf_>
ffffffff8000877f:	e9 b8 02 00 00       	jmp    ffffffff80008a3c <vmm_page_fault_handler+0x352>
ffffffff80008784:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff80008788:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff8000878c:	48 c7 45 e8 00 10 00 	movq   $0x1000,-0x18(%rbp)
ffffffff80008793:	00 
ffffffff80008794:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80008798:	48 f7 d8             	neg    %rax
ffffffff8000879b:	48 23 45 f0          	and    -0x10(%rbp),%rax
ffffffff8000879f:	ba 05 00 00 00       	mov    $0x5,%edx
ffffffff800087a4:	be 01 00 00 00       	mov    $0x1,%esi
ffffffff800087a9:	48 89 c7             	mov    %rax,%rdi
ffffffff800087ac:	e8 c4 fc ff ff       	call   ffffffff80008475 <vmm_alloc>
ffffffff800087b1:	89 45 fc             	mov    %eax,-0x4(%rbp)
ffffffff800087b4:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
ffffffff800087b8:	0f 84 7a 02 00 00    	je     ffffffff80008a38 <vmm_page_fault_handler+0x34e>
ffffffff800087be:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800087c3:	e8 19 e5 ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff800087c8:	48 89 c6             	mov    %rax,%rsi
ffffffff800087cb:	41 b8 68 01 00 00    	mov    $0x168,%r8d
ffffffff800087d1:	48 8d 05 8e fb 02 00 	lea    0x2fb8e(%rip),%rax        # ffffffff80038366 <g_stivale2_header+0x1366>
ffffffff800087d8:	48 89 c1             	mov    %rax,%rcx
ffffffff800087db:	48 8d 05 0e 4d 03 00 	lea    0x34d0e(%rip),%rax        # ffffffff8003d4f0 <__FUNCTION__.0.lto_priv.5>
ffffffff800087e2:	48 89 c2             	mov    %rax,%rdx
ffffffff800087e5:	48 8d 05 04 40 03 00 	lea    0x34004(%rip),%rax        # ffffffff8003c7f0 <g_stivale2_header+0x57f0>
ffffffff800087ec:	48 89 c7             	mov    %rax,%rdi
ffffffff800087ef:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800087f4:	e8 47 ad 00 00       	call   ffffffff80013540 <printf_>
ffffffff800087f9:	e9 3a 02 00 00       	jmp    ffffffff80008a38 <vmm_page_fault_handler+0x34e>
ffffffff800087fe:	48 b8 ff ff ff 3f 80 	movabs $0xffffff803fffffff,%rax
ffffffff80008805:	ff ff ff 
ffffffff80008808:	48 39 45 b8          	cmp    %rax,-0x48(%rbp)
ffffffff8000880c:	0f 86 b5 01 00 00    	jbe    ffffffff800089c7 <vmm_page_fault_handler+0x2dd>
ffffffff80008812:	48 b8 ff ff ff 3f b0 	movabs $0xffffffb03fffffff,%rax
ffffffff80008819:	ff ff ff 
ffffffff8000881c:	48 39 45 b8          	cmp    %rax,-0x48(%rbp)
ffffffff80008820:	0f 87 a1 01 00 00    	ja     ffffffff800089c7 <vmm_page_fault_handler+0x2dd>
ffffffff80008826:	80 7d b0 00          	cmpb   $0x0,-0x50(%rbp)
ffffffff8000882a:	74 49                	je     ffffffff80008875 <vmm_page_fault_handler+0x18b>
ffffffff8000882c:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)
ffffffff80008833:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80008838:	e8 a4 e4 ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff8000883d:	48 89 c6             	mov    %rax,%rsi
ffffffff80008840:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff80008843:	41 b9 6c 01 00 00    	mov    $0x16c,%r9d
ffffffff80008849:	4c 8d 05 16 fb 02 00 	lea    0x2fb16(%rip),%r8        # ffffffff80038366 <g_stivale2_header+0x1366>
ffffffff80008850:	48 8d 15 99 4c 03 00 	lea    0x34c99(%rip),%rdx        # ffffffff8003d4f0 <__FUNCTION__.0.lto_priv.5>
ffffffff80008857:	48 89 d1             	mov    %rdx,%rcx
ffffffff8000885a:	89 c2                	mov    %eax,%edx
ffffffff8000885c:	48 8d 05 15 3f 03 00 	lea    0x33f15(%rip),%rax        # ffffffff8003c778 <g_stivale2_header+0x5778>
ffffffff80008863:	48 89 c7             	mov    %rax,%rdi
ffffffff80008866:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000886b:	e8 d0 ac 00 00       	call   ffffffff80013540 <printf_>
ffffffff80008870:	e9 c7 01 00 00       	jmp    ffffffff80008a3c <vmm_page_fault_handler+0x352>
ffffffff80008875:	48 ba 00 00 00 c0 7f 	movabs $0x7fc0000000,%rdx
ffffffff8000887c:	00 00 00 
ffffffff8000887f:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff80008883:	48 01 d0             	add    %rdx,%rax
ffffffff80008886:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff8000888a:	48 c7 45 d8 00 00 10 	movq   $0x100000,-0x28(%rbp)
ffffffff80008891:	00 
ffffffff80008892:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80008896:	48 f7 d8             	neg    %rax
ffffffff80008899:	48 23 45 e0          	and    -0x20(%rbp),%rax
ffffffff8000889d:	48 c1 e8 14          	shr    $0x14,%rax
ffffffff800088a1:	48 89 c1             	mov    %rax,%rcx
ffffffff800088a4:	48 ba ab aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaab,%rdx
ffffffff800088ab:	aa aa aa 
ffffffff800088ae:	48 89 c8             	mov    %rcx,%rax
ffffffff800088b1:	48 f7 e2             	mul    %rdx
ffffffff800088b4:	48 89 d0             	mov    %rdx,%rax
ffffffff800088b7:	48 d1 e8             	shr    %rax
ffffffff800088ba:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
ffffffff800088be:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
ffffffff800088c2:	48 89 d0             	mov    %rdx,%rax
ffffffff800088c5:	48 01 c0             	add    %rax,%rax
ffffffff800088c8:	48 01 d0             	add    %rdx,%rax
ffffffff800088cb:	48 29 c1             	sub    %rax,%rcx
ffffffff800088ce:	48 89 ca             	mov    %rcx,%rdx
ffffffff800088d1:	48 89 55 d0          	mov    %rdx,-0x30(%rbp)
ffffffff800088d5:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
ffffffff800088da:	75 74                	jne    ffffffff80008950 <vmm_page_fault_handler+0x266>
ffffffff800088dc:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)
ffffffff800088e3:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800088e8:	e8 f4 e3 ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff800088ed:	48 89 c1             	mov    %rax,%rcx
ffffffff800088f0:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff800088f4:	48 89 c2             	mov    %rax,%rdx
ffffffff800088f7:	48 89 ce             	mov    %rcx,%rsi
ffffffff800088fa:	48 8d 05 a7 47 03 00 	lea    0x347a7(%rip),%rax        # ffffffff8003d0a8 <g_stivale2_header+0x60a8>
ffffffff80008901:	48 89 c7             	mov    %rax,%rdi
ffffffff80008904:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80008909:	e8 32 ac 00 00       	call   ffffffff80013540 <printf_>
ffffffff8000890e:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80008913:	e8 c9 e3 ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff80008918:	48 89 c6             	mov    %rax,%rsi
ffffffff8000891b:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8000891e:	41 b9 71 01 00 00    	mov    $0x171,%r9d
ffffffff80008924:	4c 8d 05 3b fa 02 00 	lea    0x2fa3b(%rip),%r8        # ffffffff80038366 <g_stivale2_header+0x1366>
ffffffff8000892b:	48 8d 15 be 4b 03 00 	lea    0x34bbe(%rip),%rdx        # ffffffff8003d4f0 <__FUNCTION__.0.lto_priv.5>
ffffffff80008932:	48 89 d1             	mov    %rdx,%rcx
ffffffff80008935:	89 c2                	mov    %eax,%edx
ffffffff80008937:	48 8d 05 3a 3e 03 00 	lea    0x33e3a(%rip),%rax        # ffffffff8003c778 <g_stivale2_header+0x5778>
ffffffff8000893e:	48 89 c7             	mov    %rax,%rdi
ffffffff80008941:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80008946:	e8 f5 ab 00 00       	call   ffffffff80013540 <printf_>
ffffffff8000894b:	e9 ec 00 00 00       	jmp    ffffffff80008a3c <vmm_page_fault_handler+0x352>
ffffffff80008950:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff80008954:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
ffffffff80008958:	48 c7 45 c0 00 10 00 	movq   $0x1000,-0x40(%rbp)
ffffffff8000895f:	00 
ffffffff80008960:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff80008964:	48 f7 d8             	neg    %rax
ffffffff80008967:	48 23 45 c8          	and    -0x38(%rbp),%rax
ffffffff8000896b:	ba 05 00 00 00       	mov    $0x5,%edx
ffffffff80008970:	be 01 00 00 00       	mov    $0x1,%esi
ffffffff80008975:	48 89 c7             	mov    %rax,%rdi
ffffffff80008978:	e8 f8 fa ff ff       	call   ffffffff80008475 <vmm_alloc>
ffffffff8000897d:	89 45 fc             	mov    %eax,-0x4(%rbp)
ffffffff80008980:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
ffffffff80008984:	0f 84 b1 00 00 00    	je     ffffffff80008a3b <vmm_page_fault_handler+0x351>
ffffffff8000898a:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000898f:	e8 4d e3 ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff80008994:	48 89 c6             	mov    %rax,%rsi
ffffffff80008997:	41 b8 74 01 00 00    	mov    $0x174,%r8d
ffffffff8000899d:	48 8d 05 c2 f9 02 00 	lea    0x2f9c2(%rip),%rax        # ffffffff80038366 <g_stivale2_header+0x1366>
ffffffff800089a4:	48 89 c1             	mov    %rax,%rcx
ffffffff800089a7:	48 8d 05 42 4b 03 00 	lea    0x34b42(%rip),%rax        # ffffffff8003d4f0 <__FUNCTION__.0.lto_priv.5>
ffffffff800089ae:	48 89 c2             	mov    %rax,%rdx
ffffffff800089b1:	48 8d 05 38 3e 03 00 	lea    0x33e38(%rip),%rax        # ffffffff8003c7f0 <g_stivale2_header+0x57f0>
ffffffff800089b8:	48 89 c7             	mov    %rax,%rdi
ffffffff800089bb:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800089c0:	e8 7b ab 00 00       	call   ffffffff80013540 <printf_>
ffffffff800089c5:	eb 75                	jmp    ffffffff80008a3c <vmm_page_fault_handler+0x352>
ffffffff800089c7:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)
ffffffff800089ce:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800089d3:	e8 09 e3 ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff800089d8:	48 89 c1             	mov    %rax,%rcx
ffffffff800089db:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff800089df:	48 89 c2             	mov    %rax,%rdx
ffffffff800089e2:	48 89 ce             	mov    %rcx,%rsi
ffffffff800089e5:	48 8d 05 fc 46 03 00 	lea    0x346fc(%rip),%rax        # ffffffff8003d0e8 <g_stivale2_header+0x60e8>
ffffffff800089ec:	48 89 c7             	mov    %rax,%rdi
ffffffff800089ef:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800089f4:	e8 47 ab 00 00       	call   ffffffff80013540 <printf_>
ffffffff800089f9:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800089fe:	e8 de e2 ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff80008a03:	48 89 c6             	mov    %rax,%rsi
ffffffff80008a06:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff80008a09:	41 b9 76 01 00 00    	mov    $0x176,%r9d
ffffffff80008a0f:	4c 8d 05 50 f9 02 00 	lea    0x2f950(%rip),%r8        # ffffffff80038366 <g_stivale2_header+0x1366>
ffffffff80008a16:	48 8d 15 d3 4a 03 00 	lea    0x34ad3(%rip),%rdx        # ffffffff8003d4f0 <__FUNCTION__.0.lto_priv.5>
ffffffff80008a1d:	48 89 d1             	mov    %rdx,%rcx
ffffffff80008a20:	89 c2                	mov    %eax,%edx
ffffffff80008a22:	48 8d 05 4f 3d 03 00 	lea    0x33d4f(%rip),%rax        # ffffffff8003c778 <g_stivale2_header+0x5778>
ffffffff80008a29:	48 89 c7             	mov    %rax,%rdi
ffffffff80008a2c:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80008a31:	e8 0a ab 00 00       	call   ffffffff80013540 <printf_>
ffffffff80008a36:	eb 04                	jmp    ffffffff80008a3c <vmm_page_fault_handler+0x352>
ffffffff80008a38:	90                   	nop
ffffffff80008a39:	eb 01                	jmp    ffffffff80008a3c <vmm_page_fault_handler+0x352>
ffffffff80008a3b:	90                   	nop
ffffffff80008a3c:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff80008a3f:	90                   	nop
ffffffff80008a40:	90                   	nop
ffffffff80008a41:	c9                   	leave  
ffffffff80008a42:	c3                   	ret    

ffffffff80008a43 <alloc_stack>:
ffffffff80008a43:	f3 0f 1e fa          	endbr64 
ffffffff80008a47:	55                   	push   %rbp
ffffffff80008a48:	48 89 e5             	mov    %rsp,%rbp
ffffffff80008a4b:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff80008a4f:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
ffffffff80008a56:	00 
ffffffff80008a57:	48 8d 05 63 86 2a 00 	lea    0x2a8663(%rip),%rax        # ffffffff802b10c1 <m_stack_alloc_lock>
ffffffff80008a5e:	48 89 c7             	mov    %rax,%rdi
ffffffff80008a61:	e8 a8 93 ff ff       	call   ffffffff80001e0e <spinlock_lock>
ffffffff80008a66:	48 8d 05 83 e7 09 00 	lea    0x9e783(%rip),%rax        # ffffffff800a71f0 <m_stack_free_list>
ffffffff80008a6d:	48 89 c7             	mov    %rax,%rdi
ffffffff80008a70:	e8 19 87 00 00       	call   ffffffff8001118e <list_pop>
ffffffff80008a75:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff80008a79:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
ffffffff80008a7e:	74 0e                	je     ffffffff80008a8e <alloc_stack+0x4b>
ffffffff80008a80:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80008a84:	48 83 c0 10          	add    $0x10,%rax
ffffffff80008a88:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff80008a8c:	eb 47                	jmp    ffffffff80008ad5 <alloc_stack+0x92>
ffffffff80008a8e:	48 8b 05 cb e5 09 00 	mov    0x9e5cb(%rip),%rax        # ffffffff800a7060 <m_next_stack>
ffffffff80008a95:	48 8d 90 00 00 30 00 	lea    0x300000(%rax),%rdx
ffffffff80008a9c:	48 b8 ff ff ff 3f b0 	movabs $0xffffffb03fffffff,%rax
ffffffff80008aa3:	ff ff ff 
ffffffff80008aa6:	48 39 c2             	cmp    %rax,%rdx
ffffffff80008aa9:	77 29                	ja     ffffffff80008ad4 <alloc_stack+0x91>
ffffffff80008aab:	48 8b 05 ae e5 09 00 	mov    0x9e5ae(%rip),%rax        # ffffffff800a7060 <m_next_stack>
ffffffff80008ab2:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff80008ab6:	48 8b 05 a3 e5 09 00 	mov    0x9e5a3(%rip),%rax        # ffffffff800a7060 <m_next_stack>
ffffffff80008abd:	48 05 00 00 30 00    	add    $0x300000,%rax
ffffffff80008ac3:	48 89 05 96 e5 09 00 	mov    %rax,0x9e596(%rip)        # ffffffff800a7060 <m_next_stack>
ffffffff80008aca:	48 81 45 f8 00 00 20 	addq   $0x200000,-0x8(%rbp)
ffffffff80008ad1:	00 
ffffffff80008ad2:	eb 01                	jmp    ffffffff80008ad5 <alloc_stack+0x92>
ffffffff80008ad4:	90                   	nop
ffffffff80008ad5:	48 8d 05 e5 85 2a 00 	lea    0x2a85e5(%rip),%rax        # ffffffff802b10c1 <m_stack_alloc_lock>
ffffffff80008adc:	48 89 c7             	mov    %rax,%rdi
ffffffff80008adf:	e8 f9 93 ff ff       	call   ffffffff80001edd <spinlock_unlock>
ffffffff80008ae4:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff80008ae9:	74 0b                	je     ffffffff80008af6 <alloc_stack+0xb3>
ffffffff80008aeb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80008aef:	48 83 e8 01          	sub    $0x1,%rax
ffffffff80008af3:	c6 00 00             	movb   $0x0,(%rax)
ffffffff80008af6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80008afa:	90                   	nop
ffffffff80008afb:	90                   	nop
ffffffff80008afc:	c9                   	leave  
ffffffff80008afd:	c3                   	ret    

ffffffff80008afe <free_stack>:
ffffffff80008afe:	f3 0f 1e fa          	endbr64 
ffffffff80008b02:	55                   	push   %rbp
ffffffff80008b03:	48 89 e5             	mov    %rsp,%rbp
ffffffff80008b06:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff80008b0a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff80008b0e:	48 8d 05 ac 85 2a 00 	lea    0x2a85ac(%rip),%rax        # ffffffff802b10c1 <m_stack_alloc_lock>
ffffffff80008b15:	48 89 c7             	mov    %rax,%rdi
ffffffff80008b18:	e8 f1 92 ff ff       	call   ffffffff80001e0e <spinlock_lock>
ffffffff80008b1d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80008b21:	48 83 e8 10          	sub    $0x10,%rax
ffffffff80008b25:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff80008b29:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80008b2d:	48 89 c6             	mov    %rax,%rsi
ffffffff80008b30:	48 8d 05 b9 e6 09 00 	lea    0x9e6b9(%rip),%rax        # ffffffff800a71f0 <m_stack_free_list>
ffffffff80008b37:	48 89 c7             	mov    %rax,%rdi
ffffffff80008b3a:	e8 68 85 00 00       	call   ffffffff800110a7 <list_add>
ffffffff80008b3f:	48 8d 05 7b 85 2a 00 	lea    0x2a857b(%rip),%rax        # ffffffff802b10c1 <m_stack_alloc_lock>
ffffffff80008b46:	48 89 c7             	mov    %rax,%rdi
ffffffff80008b49:	e8 8f 93 ff ff       	call   ffffffff80001edd <spinlock_unlock>
ffffffff80008b4e:	90                   	nop
ffffffff80008b4f:	c9                   	leave  
ffffffff80008b50:	c3                   	ret    

ffffffff80008b51 <rbits_put>:
ffffffff80008b51:	55                   	push   %rbp
ffffffff80008b52:	48 89 e5             	mov    %rsp,%rbp
ffffffff80008b55:	48 83 ec 30          	sub    $0x30,%rsp
ffffffff80008b59:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff80008b5d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
ffffffff80008b61:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
ffffffff80008b65:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
ffffffff80008b68:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff80008b6c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80008b70:	48 01 d0             	add    %rdx,%rax
ffffffff80008b73:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff80008b77:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80008b7b:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff80008b7f:	48 83 6d f8 01       	subq   $0x1,-0x8(%rbp)
ffffffff80008b84:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80008b88:	83 e0 7f             	and    $0x7f,%eax
ffffffff80008b8b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff80008b8f:	88 02                	mov    %al,(%rdx)
ffffffff80008b91:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80008b95:	0f b6 00             	movzbl (%rax),%eax
ffffffff80008b98:	84 c0                	test   %al,%al
ffffffff80008b9a:	74 08                	je     ffffffff80008ba4 <rbits_put+0x53>
ffffffff80008b9c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80008ba0:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff80008ba4:	48 c1 6d d8 07       	shrq   $0x7,-0x28(%rbp)
ffffffff80008ba9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80008bad:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
ffffffff80008bb1:	77 cc                	ja     ffffffff80008b7f <rbits_put+0x2e>
ffffffff80008bb3:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
ffffffff80008bb7:	75 08                	jne    ffffffff80008bc1 <rbits_put+0x70>
ffffffff80008bb9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80008bbd:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff80008bc1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80008bc5:	0f b6 00             	movzbl (%rax),%eax
ffffffff80008bc8:	83 c8 80             	or     $0xffffff80,%eax
ffffffff80008bcb:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff80008bcf:	88 02                	mov    %al,(%rdx)
ffffffff80008bd1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80008bd5:	c9                   	leave  
ffffffff80008bd6:	c3                   	ret    

ffffffff80008bd7 <rbits_ptroffset>:
ffffffff80008bd7:	55                   	push   %rbp
ffffffff80008bd8:	48 89 e5             	mov    %rsp,%rbp
ffffffff80008bdb:	48 83 ec 48          	sub    $0x48,%rsp
ffffffff80008bdf:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
ffffffff80008be3:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
ffffffff80008be7:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
ffffffff80008beb:	48 8d 45 de          	lea    -0x22(%rbp),%rax
ffffffff80008bef:	48 83 c0 09          	add    $0x9,%rax
ffffffff80008bf3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff80008bf7:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80008bfb:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff80008bff:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
ffffffff80008c03:	48 8d 45 de          	lea    -0x22(%rbp),%rax
ffffffff80008c07:	b9 01 00 00 00       	mov    $0x1,%ecx
ffffffff80008c0c:	be 0a 00 00 00       	mov    $0xa,%esi
ffffffff80008c11:	48 89 c7             	mov    %rax,%rdi
ffffffff80008c14:	e8 38 ff ff ff       	call   ffffffff80008b51 <rbits_put>
ffffffff80008c19:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff80008c1d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80008c21:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
ffffffff80008c25:	48 89 c2             	mov    %rax,%rdx
ffffffff80008c28:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80008c2c:	48 01 d0             	add    %rdx,%rax
ffffffff80008c2f:	48 83 c0 01          	add    $0x1,%rax
ffffffff80008c33:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff80008c37:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80008c3b:	ba 00 00 00 00       	mov    $0x0,%edx
ffffffff80008c40:	48 f7 75 b8          	divq   -0x48(%rbp)
ffffffff80008c44:	48 89 d1             	mov    %rdx,%rcx
ffffffff80008c47:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff80008c4b:	48 29 c8             	sub    %rcx,%rax
ffffffff80008c4e:	48 89 c2             	mov    %rax,%rdx
ffffffff80008c51:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff80008c55:	48 f7 d0             	not    %rax
ffffffff80008c58:	48 21 d0             	and    %rdx,%rax
ffffffff80008c5b:	48 01 45 f0          	add    %rax,-0x10(%rbp)
ffffffff80008c5f:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
ffffffff80008c63:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80008c67:	48 29 d0             	sub    %rdx,%rax
ffffffff80008c6a:	90                   	nop
ffffffff80008c6b:	c9                   	leave  
ffffffff80008c6c:	c3                   	ret    

ffffffff80008c6d <arena_block_alloc>:
ffffffff80008c6d:	f3 0f 1e fa          	endbr64 
ffffffff80008c71:	55                   	push   %rbp
ffffffff80008c72:	48 89 e5             	mov    %rsp,%rbp
ffffffff80008c75:	48 83 ec 30          	sub    $0x30,%rsp
ffffffff80008c79:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
ffffffff80008c7d:	c7 45 fc 00 80 00 00 	movl   $0x8000,-0x4(%rbp)
ffffffff80008c84:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80008c88:	48 83 c0 31          	add    $0x31,%rax
ffffffff80008c8c:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff80008c90:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff80008c93:	48 98                	cltq   
ffffffff80008c95:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff80008c99:	48 39 d0             	cmp    %rdx,%rax
ffffffff80008c9c:	48 0f 42 c2          	cmovb  %rdx,%rax
ffffffff80008ca0:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff80008ca4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80008ca8:	48 89 c7             	mov    %rax,%rdi
ffffffff80008cab:	e8 8c 2b 00 00       	call   ffffffff8000b83c <malloc>
ffffffff80008cb0:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff80008cb4:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
ffffffff80008cb9:	75 07                	jne    ffffffff80008cc2 <arena_block_alloc+0x55>
ffffffff80008cbb:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80008cc0:	eb 23                	jmp    ffffffff80008ce5 <arena_block_alloc+0x78>
ffffffff80008cc2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80008cc6:	48 8d 50 e8          	lea    -0x18(%rax),%rdx
ffffffff80008cca:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80008cce:	48 89 10             	mov    %rdx,(%rax)
ffffffff80008cd1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80008cd5:	48 8d 50 18          	lea    0x18(%rax),%rdx
ffffffff80008cd9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80008cdd:	48 89 50 08          	mov    %rdx,0x8(%rax)
ffffffff80008ce1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80008ce5:	c9                   	leave  
ffffffff80008ce6:	c3                   	ret    

ffffffff80008ce7 <create_arena>:
ffffffff80008ce7:	f3 0f 1e fa          	endbr64 
ffffffff80008ceb:	55                   	push   %rbp
ffffffff80008cec:	48 89 e5             	mov    %rsp,%rbp
ffffffff80008cef:	53                   	push   %rbx
ffffffff80008cf0:	48 83 ec 18          	sub    $0x18,%rsp
ffffffff80008cf4:	bf 10 00 00 00       	mov    $0x10,%edi
ffffffff80008cf9:	e8 6f ff ff ff       	call   ffffffff80008c6d <arena_block_alloc>
ffffffff80008cfe:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff80008d02:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
ffffffff80008d07:	75 0a                	jne    ffffffff80008d13 <create_arena+0x2c>
ffffffff80008d09:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80008d0e:	e9 99 00 00 00       	jmp    ffffffff80008dac <create_arena+0xc5>
ffffffff80008d13:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80008d17:	48 8b 58 08          	mov    0x8(%rax),%rbx
ffffffff80008d1b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80008d1f:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff80008d23:	ba 10 00 00 00       	mov    $0x10,%edx
ffffffff80008d28:	be 10 00 00 00       	mov    $0x10,%esi
ffffffff80008d2d:	48 89 c7             	mov    %rax,%rdi
ffffffff80008d30:	e8 a2 fe ff ff       	call   ffffffff80008bd7 <rbits_ptroffset>
ffffffff80008d35:	48 01 d8             	add    %rbx,%rax
ffffffff80008d38:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff80008d3c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80008d40:	48 8b 50 08          	mov    0x8(%rax),%rdx
ffffffff80008d44:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80008d48:	48 29 d0             	sub    %rdx,%rax
ffffffff80008d4b:	48 89 c6             	mov    %rax,%rsi
ffffffff80008d4e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80008d52:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff80008d56:	b9 00 00 00 00       	mov    $0x0,%ecx
ffffffff80008d5b:	ba 10 00 00 00       	mov    $0x10,%edx
ffffffff80008d60:	48 89 c7             	mov    %rax,%rdi
ffffffff80008d63:	e8 e9 fd ff ff       	call   ffffffff80008b51 <rbits_put>
ffffffff80008d68:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80008d6c:	48 8d 50 10          	lea    0x10(%rax),%rdx
ffffffff80008d70:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80008d74:	48 89 50 08          	mov    %rdx,0x8(%rax)
ffffffff80008d78:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80008d7c:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
ffffffff80008d83:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80008d87:	48 8b 10             	mov    (%rax),%rdx
ffffffff80008d8a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80008d8e:	48 89 50 10          	mov    %rdx,0x10(%rax)
ffffffff80008d92:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80008d96:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff80008d9a:	48 89 10             	mov    %rdx,(%rax)
ffffffff80008d9d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80008da1:	c7 40 08 01 00 00 00 	movl   $0x1,0x8(%rax)
ffffffff80008da8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80008dac:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
ffffffff80008db0:	c9                   	leave  
ffffffff80008db1:	c3                   	ret    

ffffffff80008db2 <free_arena>:
ffffffff80008db2:	f3 0f 1e fa          	endbr64 
ffffffff80008db6:	55                   	push   %rbp
ffffffff80008db7:	48 89 e5             	mov    %rsp,%rbp
ffffffff80008dba:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff80008dbe:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff80008dc2:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
ffffffff80008dc7:	74 3c                	je     ffffffff80008e05 <free_arena+0x53>
ffffffff80008dc9:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
ffffffff80008dd0:	00 
ffffffff80008dd1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80008dd5:	48 8b 00             	mov    (%rax),%rax
ffffffff80008dd8:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff80008ddc:	eb 20                	jmp    ffffffff80008dfe <free_arena+0x4c>
ffffffff80008dde:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80008de2:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff80008de6:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff80008dea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80008dee:	48 89 c7             	mov    %rax,%rdi
ffffffff80008df1:	e8 10 2b 00 00       	call   ffffffff8000b906 <free>
ffffffff80008df6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80008dfa:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff80008dfe:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff80008e03:	75 d9                	jne    ffffffff80008dde <free_arena+0x2c>
ffffffff80008e05:	90                   	nop
ffffffff80008e06:	c9                   	leave  
ffffffff80008e07:	c3                   	ret    

ffffffff80008e08 <arena_alloc>:
ffffffff80008e08:	f3 0f 1e fa          	endbr64 
ffffffff80008e0c:	55                   	push   %rbp
ffffffff80008e0d:	48 89 e5             	mov    %rsp,%rbp
ffffffff80008e10:	53                   	push   %rbx
ffffffff80008e11:	48 83 ec 48          	sub    $0x48,%rsp
ffffffff80008e15:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
ffffffff80008e19:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
ffffffff80008e1d:	48 83 7d b0 00       	cmpq   $0x0,-0x50(%rbp)
ffffffff80008e22:	75 0a                	jne    ffffffff80008e2e <arena_alloc+0x26>
ffffffff80008e24:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80008e29:	e9 c6 01 00 00       	jmp    ffffffff80008ff4 <arena_alloc+0x1ec>
ffffffff80008e2e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff80008e32:	48 8b 00             	mov    (%rax),%rax
ffffffff80008e35:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff80008e39:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80008e3d:	48 8b 58 08          	mov    0x8(%rax),%rbx
ffffffff80008e41:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80008e45:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff80008e49:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
ffffffff80008e4d:	ba 10 00 00 00       	mov    $0x10,%edx
ffffffff80008e52:	48 89 ce             	mov    %rcx,%rsi
ffffffff80008e55:	48 89 c7             	mov    %rax,%rdi
ffffffff80008e58:	e8 7a fd ff ff       	call   ffffffff80008bd7 <rbits_ptroffset>
ffffffff80008e5d:	48 01 d8             	add    %rbx,%rax
ffffffff80008e60:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff80008e64:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff80008e68:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
ffffffff80008e6c:	48 01 c2             	add    %rax,%rdx
ffffffff80008e6f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80008e73:	48 8b 00             	mov    (%rax),%rax
ffffffff80008e76:	48 8d 48 10          	lea    0x10(%rax),%rcx
ffffffff80008e7a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80008e7e:	48 01 c8             	add    %rcx,%rax
ffffffff80008e81:	48 83 c0 08          	add    $0x8,%rax
ffffffff80008e85:	48 39 c2             	cmp    %rax,%rdx
ffffffff80008e88:	0f 86 09 01 00 00    	jbe    ffffffff80008f97 <arena_alloc+0x18f>
ffffffff80008e8e:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
ffffffff80008e95:	00 
ffffffff80008e96:	48 81 7d b0 00 80 00 	cmpq   $0x8000,-0x50(%rbp)
ffffffff80008e9d:	00 
ffffffff80008e9e:	76 78                	jbe    ffffffff80008f18 <arena_alloc+0x110>
ffffffff80008ea0:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
ffffffff80008ea4:	48 8d 0c 00          	lea    (%rax,%rax,1),%rcx
ffffffff80008ea8:	c7 45 d4 01 00 00 00 	movl   $0x1,-0x2c(%rbp)
ffffffff80008eaf:	c7 45 d0 00 80 00 00 	movl   $0x8000,-0x30(%rbp)
ffffffff80008eb6:	8b 55 d0             	mov    -0x30(%rbp),%edx
ffffffff80008eb9:	8b 45 d4             	mov    -0x2c(%rbp),%eax
ffffffff80008ebc:	39 c2                	cmp    %eax,%edx
ffffffff80008ebe:	0f 4d c2             	cmovge %edx,%eax
ffffffff80008ec1:	83 e8 01             	sub    $0x1,%eax
ffffffff80008ec4:	48 98                	cltq   
ffffffff80008ec6:	48 01 c1             	add    %rax,%rcx
ffffffff80008ec9:	c7 45 cc 01 00 00 00 	movl   $0x1,-0x34(%rbp)
ffffffff80008ed0:	c7 45 c8 00 80 00 00 	movl   $0x8000,-0x38(%rbp)
ffffffff80008ed7:	8b 55 c8             	mov    -0x38(%rbp),%edx
ffffffff80008eda:	8b 45 cc             	mov    -0x34(%rbp),%eax
ffffffff80008edd:	39 c2                	cmp    %eax,%edx
ffffffff80008edf:	0f 4d c2             	cmovge %edx,%eax
ffffffff80008ee2:	48 63 d8             	movslq %eax,%rbx
ffffffff80008ee5:	48 89 c8             	mov    %rcx,%rax
ffffffff80008ee8:	ba 00 00 00 00       	mov    $0x0,%edx
ffffffff80008eed:	48 f7 f3             	div    %rbx
ffffffff80008ef0:	48 89 c1             	mov    %rax,%rcx
ffffffff80008ef3:	c7 45 c4 01 00 00 00 	movl   $0x1,-0x3c(%rbp)
ffffffff80008efa:	c7 45 c0 00 80 00 00 	movl   $0x8000,-0x40(%rbp)
ffffffff80008f01:	8b 55 c0             	mov    -0x40(%rbp),%edx
ffffffff80008f04:	8b 45 c4             	mov    -0x3c(%rbp),%eax
ffffffff80008f07:	39 c2                	cmp    %eax,%edx
ffffffff80008f09:	0f 4d c2             	cmovge %edx,%eax
ffffffff80008f0c:	48 98                	cltq   
ffffffff80008f0e:	48 0f af c1          	imul   %rcx,%rax
ffffffff80008f12:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
ffffffff80008f16:	eb 08                	jmp    ffffffff80008f20 <arena_alloc+0x118>
ffffffff80008f18:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
ffffffff80008f1c:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
ffffffff80008f20:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80008f24:	48 89 c7             	mov    %rax,%rdi
ffffffff80008f27:	e8 41 fd ff ff       	call   ffffffff80008c6d <arena_block_alloc>
ffffffff80008f2c:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff80008f30:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
ffffffff80008f35:	75 0a                	jne    ffffffff80008f41 <arena_alloc+0x139>
ffffffff80008f37:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80008f3c:	e9 b3 00 00 00       	jmp    ffffffff80008ff4 <arena_alloc+0x1ec>
ffffffff80008f41:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff80008f45:	48 8b 10             	mov    (%rax),%rdx
ffffffff80008f48:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80008f4c:	48 89 50 10          	mov    %rdx,0x10(%rax)
ffffffff80008f50:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff80008f54:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff80008f58:	48 89 10             	mov    %rdx,(%rax)
ffffffff80008f5b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff80008f5f:	8b 40 08             	mov    0x8(%rax),%eax
ffffffff80008f62:	8d 50 01             	lea    0x1(%rax),%edx
ffffffff80008f65:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff80008f69:	89 50 08             	mov    %edx,0x8(%rax)
ffffffff80008f6c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80008f70:	48 8b 58 08          	mov    0x8(%rax),%rbx
ffffffff80008f74:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80008f78:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff80008f7c:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
ffffffff80008f80:	ba 10 00 00 00       	mov    $0x10,%edx
ffffffff80008f85:	48 89 ce             	mov    %rcx,%rsi
ffffffff80008f88:	48 89 c7             	mov    %rax,%rdi
ffffffff80008f8b:	e8 47 fc ff ff       	call   ffffffff80008bd7 <rbits_ptroffset>
ffffffff80008f90:	48 01 d8             	add    %rbx,%rax
ffffffff80008f93:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff80008f97:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80008f9b:	48 8b 50 08          	mov    0x8(%rax),%rdx
ffffffff80008f9f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80008fa3:	48 29 d0             	sub    %rdx,%rax
ffffffff80008fa6:	48 89 c6             	mov    %rax,%rsi
ffffffff80008fa9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80008fad:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff80008fb1:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
ffffffff80008fb5:	b9 00 00 00 00       	mov    $0x0,%ecx
ffffffff80008fba:	48 89 c7             	mov    %rax,%rdi
ffffffff80008fbd:	e8 8f fb ff ff       	call   ffffffff80008b51 <rbits_put>
ffffffff80008fc2:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff80008fc6:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
ffffffff80008fca:	48 01 c2             	add    %rax,%rdx
ffffffff80008fcd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80008fd1:	48 89 50 08          	mov    %rdx,0x8(%rax)
ffffffff80008fd5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80008fd9:	48 89 c1             	mov    %rax,%rcx
ffffffff80008fdc:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
ffffffff80008fe0:	48 89 c2             	mov    %rax,%rdx
ffffffff80008fe3:	be 00 00 00 00       	mov    $0x0,%esi
ffffffff80008fe8:	48 89 cf             	mov    %rcx,%rdi
ffffffff80008feb:	e8 58 55 00 00       	call   ffffffff8000e548 <memset>
ffffffff80008ff0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80008ff4:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
ffffffff80008ff8:	c9                   	leave  
ffffffff80008ff9:	c3                   	ret    

ffffffff80008ffa <tlsf_ffs>:
ffffffff80008ffa:	f3 0f 1e fa          	endbr64 
ffffffff80008ffe:	55                   	push   %rbp
ffffffff80008fff:	48 89 e5             	mov    %rsp,%rbp
ffffffff80009002:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80009006:	89 7d fc             	mov    %edi,-0x4(%rbp)
ffffffff80009009:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8000900c:	ba ff ff ff ff       	mov    $0xffffffff,%edx
ffffffff80009011:	0f bc c0             	bsf    %eax,%eax
ffffffff80009014:	0f 44 c2             	cmove  %edx,%eax
ffffffff80009017:	83 c0 01             	add    $0x1,%eax
ffffffff8000901a:	83 e8 01             	sub    $0x1,%eax
ffffffff8000901d:	c9                   	leave  
ffffffff8000901e:	c3                   	ret    

ffffffff8000901f <tlsf_fls>:
ffffffff8000901f:	f3 0f 1e fa          	endbr64 
ffffffff80009023:	55                   	push   %rbp
ffffffff80009024:	48 89 e5             	mov    %rsp,%rbp
ffffffff80009027:	48 83 ec 18          	sub    $0x18,%rsp
ffffffff8000902b:	89 7d ec             	mov    %edi,-0x14(%rbp)
ffffffff8000902e:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
ffffffff80009032:	74 10                	je     ffffffff80009044 <tlsf_fls+0x25>
ffffffff80009034:	0f bd 45 ec          	bsr    -0x14(%rbp),%eax
ffffffff80009038:	83 f0 1f             	xor    $0x1f,%eax
ffffffff8000903b:	ba 20 00 00 00       	mov    $0x20,%edx
ffffffff80009040:	29 c2                	sub    %eax,%edx
ffffffff80009042:	eb 05                	jmp    ffffffff80009049 <tlsf_fls+0x2a>
ffffffff80009044:	ba 00 00 00 00       	mov    $0x0,%edx
ffffffff80009049:	89 55 fc             	mov    %edx,-0x4(%rbp)
ffffffff8000904c:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8000904f:	83 e8 01             	sub    $0x1,%eax
ffffffff80009052:	c9                   	leave  
ffffffff80009053:	c3                   	ret    

ffffffff80009054 <tlsf_fls_sizet>:
ffffffff80009054:	f3 0f 1e fa          	endbr64 
ffffffff80009058:	55                   	push   %rbp
ffffffff80009059:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000905c:	48 83 ec 18          	sub    $0x18,%rsp
ffffffff80009060:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff80009064:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80009068:	48 c1 e8 20          	shr    $0x20,%rax
ffffffff8000906c:	89 45 f8             	mov    %eax,-0x8(%rbp)
ffffffff8000906f:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
ffffffff80009076:	83 7d f8 00          	cmpl   $0x0,-0x8(%rbp)
ffffffff8000907a:	74 12                	je     ffffffff8000908e <tlsf_fls_sizet+0x3a>
ffffffff8000907c:	8b 45 f8             	mov    -0x8(%rbp),%eax
ffffffff8000907f:	89 c7                	mov    %eax,%edi
ffffffff80009081:	e8 99 ff ff ff       	call   ffffffff8000901f <tlsf_fls>
ffffffff80009086:	83 c0 20             	add    $0x20,%eax
ffffffff80009089:	89 45 fc             	mov    %eax,-0x4(%rbp)
ffffffff8000908c:	eb 0e                	jmp    ffffffff8000909c <tlsf_fls_sizet+0x48>
ffffffff8000908e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80009092:	89 c7                	mov    %eax,%edi
ffffffff80009094:	e8 86 ff ff ff       	call   ffffffff8000901f <tlsf_fls>
ffffffff80009099:	89 45 fc             	mov    %eax,-0x4(%rbp)
ffffffff8000909c:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8000909f:	c9                   	leave  
ffffffff800090a0:	c3                   	ret    

ffffffff800090a1 <block_size>:
ffffffff800090a1:	f3 0f 1e fa          	endbr64 
ffffffff800090a5:	55                   	push   %rbp
ffffffff800090a6:	48 89 e5             	mov    %rsp,%rbp
ffffffff800090a9:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff800090ad:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff800090b1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff800090b5:	48 8b 50 08          	mov    0x8(%rax),%rdx
ffffffff800090b9:	b9 01 00 00 00       	mov    $0x1,%ecx
ffffffff800090be:	b8 02 00 00 00       	mov    $0x2,%eax
ffffffff800090c3:	48 09 c8             	or     %rcx,%rax
ffffffff800090c6:	48 f7 d0             	not    %rax
ffffffff800090c9:	48 21 d0             	and    %rdx,%rax
ffffffff800090cc:	c9                   	leave  
ffffffff800090cd:	c3                   	ret    

ffffffff800090ce <block_set_size>:
ffffffff800090ce:	f3 0f 1e fa          	endbr64 
ffffffff800090d2:	55                   	push   %rbp
ffffffff800090d3:	48 89 e5             	mov    %rsp,%rbp
ffffffff800090d6:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff800090da:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff800090de:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
ffffffff800090e2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800090e6:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff800090ea:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff800090ee:	ba 01 00 00 00       	mov    $0x1,%edx
ffffffff800090f3:	b8 02 00 00 00       	mov    $0x2,%eax
ffffffff800090f8:	48 09 d0             	or     %rdx,%rax
ffffffff800090fb:	48 23 45 f8          	and    -0x8(%rbp),%rax
ffffffff800090ff:	48 0b 45 e0          	or     -0x20(%rbp),%rax
ffffffff80009103:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff80009107:	48 89 42 08          	mov    %rax,0x8(%rdx)
ffffffff8000910b:	90                   	nop
ffffffff8000910c:	c9                   	leave  
ffffffff8000910d:	c3                   	ret    

ffffffff8000910e <block_is_last>:
ffffffff8000910e:	f3 0f 1e fa          	endbr64 
ffffffff80009112:	55                   	push   %rbp
ffffffff80009113:	48 89 e5             	mov    %rsp,%rbp
ffffffff80009116:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff8000911a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8000911e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80009122:	48 89 c7             	mov    %rax,%rdi
ffffffff80009125:	e8 77 ff ff ff       	call   ffffffff800090a1 <block_size>
ffffffff8000912a:	48 85 c0             	test   %rax,%rax
ffffffff8000912d:	0f 94 c0             	sete   %al
ffffffff80009130:	0f b6 c0             	movzbl %al,%eax
ffffffff80009133:	c9                   	leave  
ffffffff80009134:	c3                   	ret    

ffffffff80009135 <block_is_free>:
ffffffff80009135:	f3 0f 1e fa          	endbr64 
ffffffff80009139:	55                   	push   %rbp
ffffffff8000913a:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000913d:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80009141:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff80009145:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80009149:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff8000914d:	89 c2                	mov    %eax,%edx
ffffffff8000914f:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff80009154:	21 d0                	and    %edx,%eax
ffffffff80009156:	c9                   	leave  
ffffffff80009157:	c3                   	ret    

ffffffff80009158 <block_set_free>:
ffffffff80009158:	f3 0f 1e fa          	endbr64 
ffffffff8000915c:	55                   	push   %rbp
ffffffff8000915d:	48 89 e5             	mov    %rsp,%rbp
ffffffff80009160:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80009164:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff80009168:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000916c:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff80009170:	ba 01 00 00 00       	mov    $0x1,%edx
ffffffff80009175:	48 09 c2             	or     %rax,%rdx
ffffffff80009178:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000917c:	48 89 50 08          	mov    %rdx,0x8(%rax)
ffffffff80009180:	90                   	nop
ffffffff80009181:	c9                   	leave  
ffffffff80009182:	c3                   	ret    

ffffffff80009183 <block_set_used>:
ffffffff80009183:	f3 0f 1e fa          	endbr64 
ffffffff80009187:	55                   	push   %rbp
ffffffff80009188:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000918b:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff8000918f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff80009193:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80009197:	48 8b 50 08          	mov    0x8(%rax),%rdx
ffffffff8000919b:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff800091a0:	48 f7 d0             	not    %rax
ffffffff800091a3:	48 21 c2             	and    %rax,%rdx
ffffffff800091a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff800091aa:	48 89 50 08          	mov    %rdx,0x8(%rax)
ffffffff800091ae:	90                   	nop
ffffffff800091af:	c9                   	leave  
ffffffff800091b0:	c3                   	ret    

ffffffff800091b1 <block_is_prev_free>:
ffffffff800091b1:	f3 0f 1e fa          	endbr64 
ffffffff800091b5:	55                   	push   %rbp
ffffffff800091b6:	48 89 e5             	mov    %rsp,%rbp
ffffffff800091b9:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff800091bd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff800091c1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff800091c5:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff800091c9:	89 c2                	mov    %eax,%edx
ffffffff800091cb:	b8 02 00 00 00       	mov    $0x2,%eax
ffffffff800091d0:	21 d0                	and    %edx,%eax
ffffffff800091d2:	c9                   	leave  
ffffffff800091d3:	c3                   	ret    

ffffffff800091d4 <block_set_prev_free>:
ffffffff800091d4:	f3 0f 1e fa          	endbr64 
ffffffff800091d8:	55                   	push   %rbp
ffffffff800091d9:	48 89 e5             	mov    %rsp,%rbp
ffffffff800091dc:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff800091e0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff800091e4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff800091e8:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff800091ec:	ba 02 00 00 00       	mov    $0x2,%edx
ffffffff800091f1:	48 09 c2             	or     %rax,%rdx
ffffffff800091f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff800091f8:	48 89 50 08          	mov    %rdx,0x8(%rax)
ffffffff800091fc:	90                   	nop
ffffffff800091fd:	c9                   	leave  
ffffffff800091fe:	c3                   	ret    

ffffffff800091ff <block_set_prev_used>:
ffffffff800091ff:	f3 0f 1e fa          	endbr64 
ffffffff80009203:	55                   	push   %rbp
ffffffff80009204:	48 89 e5             	mov    %rsp,%rbp
ffffffff80009207:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff8000920b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8000920f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80009213:	48 8b 50 08          	mov    0x8(%rax),%rdx
ffffffff80009217:	b8 02 00 00 00       	mov    $0x2,%eax
ffffffff8000921c:	48 f7 d0             	not    %rax
ffffffff8000921f:	48 21 c2             	and    %rax,%rdx
ffffffff80009222:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80009226:	48 89 50 08          	mov    %rdx,0x8(%rax)
ffffffff8000922a:	90                   	nop
ffffffff8000922b:	c9                   	leave  
ffffffff8000922c:	c3                   	ret    

ffffffff8000922d <block_from_ptr>:
ffffffff8000922d:	f3 0f 1e fa          	endbr64 
ffffffff80009231:	55                   	push   %rbp
ffffffff80009232:	48 89 e5             	mov    %rsp,%rbp
ffffffff80009235:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80009239:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8000923d:	b8 10 00 00 00       	mov    $0x10,%eax
ffffffff80009242:	48 f7 d8             	neg    %rax
ffffffff80009245:	48 89 c2             	mov    %rax,%rdx
ffffffff80009248:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000924c:	48 01 d0             	add    %rdx,%rax
ffffffff8000924f:	c9                   	leave  
ffffffff80009250:	c3                   	ret    

ffffffff80009251 <block_to_ptr>:
ffffffff80009251:	f3 0f 1e fa          	endbr64 
ffffffff80009255:	55                   	push   %rbp
ffffffff80009256:	48 89 e5             	mov    %rsp,%rbp
ffffffff80009259:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff8000925d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff80009261:	ba 10 00 00 00       	mov    $0x10,%edx
ffffffff80009266:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000926a:	48 01 d0             	add    %rdx,%rax
ffffffff8000926d:	c9                   	leave  
ffffffff8000926e:	c3                   	ret    

ffffffff8000926f <offset_to_block>:
ffffffff8000926f:	f3 0f 1e fa          	endbr64 
ffffffff80009273:	55                   	push   %rbp
ffffffff80009274:	48 89 e5             	mov    %rsp,%rbp
ffffffff80009277:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff8000927b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8000927f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff80009283:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff80009287:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8000928b:	48 01 d0             	add    %rdx,%rax
ffffffff8000928e:	c9                   	leave  
ffffffff8000928f:	c3                   	ret    

ffffffff80009290 <block_prev>:
ffffffff80009290:	f3 0f 1e fa          	endbr64 
ffffffff80009294:	55                   	push   %rbp
ffffffff80009295:	48 89 e5             	mov    %rsp,%rbp
ffffffff80009298:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff8000929c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff800092a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff800092a4:	48 89 c7             	mov    %rax,%rdi
ffffffff800092a7:	e8 05 ff ff ff       	call   ffffffff800091b1 <block_is_prev_free>
ffffffff800092ac:	85 c0                	test   %eax,%eax
ffffffff800092ae:	75 3d                	jne    ffffffff800092ed <block_prev+0x5d>
ffffffff800092b0:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800092b5:	e8 27 da ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff800092ba:	48 89 c6             	mov    %rax,%rsi
ffffffff800092bd:	41 b8 af 01 00 00    	mov    $0x1af,%r8d
ffffffff800092c3:	48 8d 05 ad f0 02 00 	lea    0x2f0ad(%rip),%rax        # ffffffff80038377 <g_stivale2_header+0x1377>
ffffffff800092ca:	48 89 c1             	mov    %rax,%rcx
ffffffff800092cd:	48 8d 05 64 42 03 00 	lea    0x34264(%rip),%rax        # ffffffff8003d538 <__FUNCTION__.21>
ffffffff800092d4:	48 89 c2             	mov    %rax,%rdx
ffffffff800092d7:	48 8d 05 e2 34 03 00 	lea    0x334e2(%rip),%rax        # ffffffff8003c7c0 <g_stivale2_header+0x57c0>
ffffffff800092de:	48 89 c7             	mov    %rax,%rdi
ffffffff800092e1:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800092e6:	e8 55 a2 00 00       	call   ffffffff80013540 <printf_>
ffffffff800092eb:	0f 0b                	ud2    
ffffffff800092ed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff800092f1:	48 8b 00             	mov    (%rax),%rax
ffffffff800092f4:	90                   	nop
ffffffff800092f5:	90                   	nop
ffffffff800092f6:	c9                   	leave  
ffffffff800092f7:	c3                   	ret    

ffffffff800092f8 <block_next>:
ffffffff800092f8:	f3 0f 1e fa          	endbr64 
ffffffff800092fc:	55                   	push   %rbp
ffffffff800092fd:	48 89 e5             	mov    %rsp,%rbp
ffffffff80009300:	53                   	push   %rbx
ffffffff80009301:	48 83 ec 28          	sub    $0x28,%rsp
ffffffff80009305:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
ffffffff80009309:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8000930d:	48 89 c7             	mov    %rax,%rdi
ffffffff80009310:	e8 8c fd ff ff       	call   ffffffff800090a1 <block_size>
ffffffff80009315:	ba 08 00 00 00       	mov    $0x8,%edx
ffffffff8000931a:	48 29 d0             	sub    %rdx,%rax
ffffffff8000931d:	48 89 c3             	mov    %rax,%rbx
ffffffff80009320:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80009324:	48 89 c7             	mov    %rax,%rdi
ffffffff80009327:	e8 25 ff ff ff       	call   ffffffff80009251 <block_to_ptr>
ffffffff8000932c:	48 89 de             	mov    %rbx,%rsi
ffffffff8000932f:	48 89 c7             	mov    %rax,%rdi
ffffffff80009332:	e8 38 ff ff ff       	call   ffffffff8000926f <offset_to_block>
ffffffff80009337:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff8000933b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8000933f:	48 89 c7             	mov    %rax,%rdi
ffffffff80009342:	e8 c7 fd ff ff       	call   ffffffff8000910e <block_is_last>
ffffffff80009347:	85 c0                	test   %eax,%eax
ffffffff80009349:	74 3d                	je     ffffffff80009388 <block_next+0x90>
ffffffff8000934b:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80009350:	e8 8c d9 ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff80009355:	48 89 c6             	mov    %rax,%rsi
ffffffff80009358:	41 b8 b8 01 00 00    	mov    $0x1b8,%r8d
ffffffff8000935e:	48 8d 05 12 f0 02 00 	lea    0x2f012(%rip),%rax        # ffffffff80038377 <g_stivale2_header+0x1377>
ffffffff80009365:	48 89 c1             	mov    %rax,%rcx
ffffffff80009368:	48 8d 05 d9 41 03 00 	lea    0x341d9(%rip),%rax        # ffffffff8003d548 <__FUNCTION__.20>
ffffffff8000936f:	48 89 c2             	mov    %rax,%rdx
ffffffff80009372:	48 8d 05 47 34 03 00 	lea    0x33447(%rip),%rax        # ffffffff8003c7c0 <g_stivale2_header+0x57c0>
ffffffff80009379:	48 89 c7             	mov    %rax,%rdi
ffffffff8000937c:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80009381:	e8 ba a1 00 00       	call   ffffffff80013540 <printf_>
ffffffff80009386:	0f 0b                	ud2    
ffffffff80009388:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000938c:	90                   	nop
ffffffff8000938d:	90                   	nop
ffffffff8000938e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
ffffffff80009392:	c9                   	leave  
ffffffff80009393:	c3                   	ret    

ffffffff80009394 <block_link_next>:
ffffffff80009394:	f3 0f 1e fa          	endbr64 
ffffffff80009398:	55                   	push   %rbp
ffffffff80009399:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000939c:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff800093a0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff800093a4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800093a8:	48 89 c7             	mov    %rax,%rdi
ffffffff800093ab:	e8 48 ff ff ff       	call   ffffffff800092f8 <block_next>
ffffffff800093b0:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff800093b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff800093b8:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff800093bc:	48 89 10             	mov    %rdx,(%rax)
ffffffff800093bf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff800093c3:	c9                   	leave  
ffffffff800093c4:	c3                   	ret    

ffffffff800093c5 <block_mark_as_free>:
ffffffff800093c5:	f3 0f 1e fa          	endbr64 
ffffffff800093c9:	55                   	push   %rbp
ffffffff800093ca:	48 89 e5             	mov    %rsp,%rbp
ffffffff800093cd:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff800093d1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff800093d5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800093d9:	48 89 c7             	mov    %rax,%rdi
ffffffff800093dc:	e8 b3 ff ff ff       	call   ffffffff80009394 <block_link_next>
ffffffff800093e1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff800093e5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff800093e9:	48 89 c7             	mov    %rax,%rdi
ffffffff800093ec:	e8 e3 fd ff ff       	call   ffffffff800091d4 <block_set_prev_free>
ffffffff800093f1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800093f5:	48 89 c7             	mov    %rax,%rdi
ffffffff800093f8:	e8 5b fd ff ff       	call   ffffffff80009158 <block_set_free>
ffffffff800093fd:	90                   	nop
ffffffff800093fe:	c9                   	leave  
ffffffff800093ff:	c3                   	ret    

ffffffff80009400 <block_mark_as_used>:
ffffffff80009400:	f3 0f 1e fa          	endbr64 
ffffffff80009404:	55                   	push   %rbp
ffffffff80009405:	48 89 e5             	mov    %rsp,%rbp
ffffffff80009408:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff8000940c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff80009410:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80009414:	48 89 c7             	mov    %rax,%rdi
ffffffff80009417:	e8 dc fe ff ff       	call   ffffffff800092f8 <block_next>
ffffffff8000941c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff80009420:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80009424:	48 89 c7             	mov    %rax,%rdi
ffffffff80009427:	e8 d3 fd ff ff       	call   ffffffff800091ff <block_set_prev_used>
ffffffff8000942c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80009430:	48 89 c7             	mov    %rax,%rdi
ffffffff80009433:	e8 4b fd ff ff       	call   ffffffff80009183 <block_set_used>
ffffffff80009438:	90                   	nop
ffffffff80009439:	c9                   	leave  
ffffffff8000943a:	c3                   	ret    

ffffffff8000943b <align_up>:
ffffffff8000943b:	f3 0f 1e fa          	endbr64 
ffffffff8000943f:	55                   	push   %rbp
ffffffff80009440:	48 89 e5             	mov    %rsp,%rbp
ffffffff80009443:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff80009447:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8000944b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff8000944f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80009453:	48 83 e8 01          	sub    $0x1,%rax
ffffffff80009457:	48 23 45 f0          	and    -0x10(%rbp),%rax
ffffffff8000945b:	48 85 c0             	test   %rax,%rax
ffffffff8000945e:	74 3d                	je     ffffffff8000949d <align_up+0x62>
ffffffff80009460:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80009465:	e8 77 d8 ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff8000946a:	48 89 c6             	mov    %rax,%rsi
ffffffff8000946d:	41 b8 d5 01 00 00    	mov    $0x1d5,%r8d
ffffffff80009473:	48 8d 05 fd ee 02 00 	lea    0x2eefd(%rip),%rax        # ffffffff80038377 <g_stivale2_header+0x1377>
ffffffff8000947a:	48 89 c1             	mov    %rax,%rcx
ffffffff8000947d:	48 8d 05 d4 40 03 00 	lea    0x340d4(%rip),%rax        # ffffffff8003d558 <__FUNCTION__.19>
ffffffff80009484:	48 89 c2             	mov    %rax,%rdx
ffffffff80009487:	48 8d 05 32 33 03 00 	lea    0x33332(%rip),%rax        # ffffffff8003c7c0 <g_stivale2_header+0x57c0>
ffffffff8000948e:	48 89 c7             	mov    %rax,%rdi
ffffffff80009491:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80009496:	e8 a5 a0 00 00       	call   ffffffff80013540 <printf_>
ffffffff8000949b:	0f 0b                	ud2    
ffffffff8000949d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff800094a1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff800094a5:	48 01 d0             	add    %rdx,%rax
ffffffff800094a8:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
ffffffff800094ac:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff800094b0:	48 f7 d8             	neg    %rax
ffffffff800094b3:	48 21 d0             	and    %rdx,%rax
ffffffff800094b6:	90                   	nop
ffffffff800094b7:	90                   	nop
ffffffff800094b8:	c9                   	leave  
ffffffff800094b9:	c3                   	ret    

ffffffff800094ba <align_down>:
ffffffff800094ba:	f3 0f 1e fa          	endbr64 
ffffffff800094be:	55                   	push   %rbp
ffffffff800094bf:	48 89 e5             	mov    %rsp,%rbp
ffffffff800094c2:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff800094c6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff800094ca:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff800094ce:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff800094d2:	48 83 e8 01          	sub    $0x1,%rax
ffffffff800094d6:	48 23 45 f0          	and    -0x10(%rbp),%rax
ffffffff800094da:	48 85 c0             	test   %rax,%rax
ffffffff800094dd:	74 3d                	je     ffffffff8000951c <align_down+0x62>
ffffffff800094df:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800094e4:	e8 f8 d7 ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff800094e9:	48 89 c6             	mov    %rax,%rsi
ffffffff800094ec:	41 b8 db 01 00 00    	mov    $0x1db,%r8d
ffffffff800094f2:	48 8d 05 7e ee 02 00 	lea    0x2ee7e(%rip),%rax        # ffffffff80038377 <g_stivale2_header+0x1377>
ffffffff800094f9:	48 89 c1             	mov    %rax,%rcx
ffffffff800094fc:	48 8d 05 65 40 03 00 	lea    0x34065(%rip),%rax        # ffffffff8003d568 <__FUNCTION__.18>
ffffffff80009503:	48 89 c2             	mov    %rax,%rdx
ffffffff80009506:	48 8d 05 b3 32 03 00 	lea    0x332b3(%rip),%rax        # ffffffff8003c7c0 <g_stivale2_header+0x57c0>
ffffffff8000950d:	48 89 c7             	mov    %rax,%rdi
ffffffff80009510:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80009515:	e8 26 a0 00 00       	call   ffffffff80013540 <printf_>
ffffffff8000951a:	0f 0b                	ud2    
ffffffff8000951c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80009520:	48 f7 d8             	neg    %rax
ffffffff80009523:	48 23 45 f8          	and    -0x8(%rbp),%rax
ffffffff80009527:	90                   	nop
ffffffff80009528:	90                   	nop
ffffffff80009529:	c9                   	leave  
ffffffff8000952a:	c3                   	ret    

ffffffff8000952b <align_ptr>:
ffffffff8000952b:	f3 0f 1e fa          	endbr64 
ffffffff8000952f:	55                   	push   %rbp
ffffffff80009530:	48 89 e5             	mov    %rsp,%rbp
ffffffff80009533:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff80009537:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff8000953b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
ffffffff8000953f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff80009543:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80009547:	48 01 d0             	add    %rdx,%rax
ffffffff8000954a:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
ffffffff8000954e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80009552:	48 f7 d8             	neg    %rax
ffffffff80009555:	48 21 d0             	and    %rdx,%rax
ffffffff80009558:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8000955c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80009560:	48 83 e8 01          	sub    $0x1,%rax
ffffffff80009564:	48 23 45 e0          	and    -0x20(%rbp),%rax
ffffffff80009568:	48 85 c0             	test   %rax,%rax
ffffffff8000956b:	74 3d                	je     ffffffff800095aa <align_ptr+0x7f>
ffffffff8000956d:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80009572:	e8 6a d7 ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff80009577:	48 89 c6             	mov    %rax,%rsi
ffffffff8000957a:	41 b8 e3 01 00 00    	mov    $0x1e3,%r8d
ffffffff80009580:	48 8d 05 f0 ed 02 00 	lea    0x2edf0(%rip),%rax        # ffffffff80038377 <g_stivale2_header+0x1377>
ffffffff80009587:	48 89 c1             	mov    %rax,%rcx
ffffffff8000958a:	48 8d 05 e7 3f 03 00 	lea    0x33fe7(%rip),%rax        # ffffffff8003d578 <__FUNCTION__.17>
ffffffff80009591:	48 89 c2             	mov    %rax,%rdx
ffffffff80009594:	48 8d 05 25 32 03 00 	lea    0x33225(%rip),%rax        # ffffffff8003c7c0 <g_stivale2_header+0x57c0>
ffffffff8000959b:	48 89 c7             	mov    %rax,%rdi
ffffffff8000959e:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800095a3:	e8 98 9f 00 00       	call   ffffffff80013540 <printf_>
ffffffff800095a8:	0f 0b                	ud2    
ffffffff800095aa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff800095ae:	90                   	nop
ffffffff800095af:	90                   	nop
ffffffff800095b0:	c9                   	leave  
ffffffff800095b1:	c3                   	ret    

ffffffff800095b2 <adjust_request_size>:
ffffffff800095b2:	f3 0f 1e fa          	endbr64 
ffffffff800095b6:	55                   	push   %rbp
ffffffff800095b7:	48 89 e5             	mov    %rsp,%rbp
ffffffff800095ba:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff800095be:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff800095c2:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
ffffffff800095c6:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
ffffffff800095cd:	00 
ffffffff800095ce:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
ffffffff800095d3:	74 3b                	je     ffffffff80009610 <adjust_request_size+0x5e>
ffffffff800095d5:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff800095d9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800095dd:	48 89 d6             	mov    %rdx,%rsi
ffffffff800095e0:	48 89 c7             	mov    %rax,%rdi
ffffffff800095e3:	e8 53 fe ff ff       	call   ffffffff8000943b <align_up>
ffffffff800095e8:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff800095ec:	48 b8 00 00 00 00 01 	movabs $0x100000000,%rax
ffffffff800095f3:	00 00 00 
ffffffff800095f6:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
ffffffff800095fa:	73 14                	jae    ffffffff80009610 <adjust_request_size+0x5e>
ffffffff800095fc:	ba 18 00 00 00       	mov    $0x18,%edx
ffffffff80009601:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80009605:	48 39 d0             	cmp    %rdx,%rax
ffffffff80009608:	48 0f 42 c2          	cmovb  %rdx,%rax
ffffffff8000960c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff80009610:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80009614:	c9                   	leave  
ffffffff80009615:	c3                   	ret    

ffffffff80009616 <mapping_insert>:
ffffffff80009616:	f3 0f 1e fa          	endbr64 
ffffffff8000961a:	55                   	push   %rbp
ffffffff8000961b:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000961e:	48 83 ec 28          	sub    $0x28,%rsp
ffffffff80009622:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff80009626:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
ffffffff8000962a:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
ffffffff8000962e:	48 81 7d e8 ff 00 00 	cmpq   $0xff,-0x18(%rbp)
ffffffff80009635:	00 
ffffffff80009636:	77 1b                	ja     ffffffff80009653 <mapping_insert+0x3d>
ffffffff80009638:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
ffffffff8000963f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80009643:	8d 50 07             	lea    0x7(%rax),%edx
ffffffff80009646:	85 c0                	test   %eax,%eax
ffffffff80009648:	0f 48 c2             	cmovs  %edx,%eax
ffffffff8000964b:	c1 f8 03             	sar    $0x3,%eax
ffffffff8000964e:	89 45 f8             	mov    %eax,-0x8(%rbp)
ffffffff80009651:	eb 2b                	jmp    ffffffff8000967e <mapping_insert+0x68>
ffffffff80009653:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80009657:	48 89 c7             	mov    %rax,%rdi
ffffffff8000965a:	e8 f5 f9 ff ff       	call   ffffffff80009054 <tlsf_fls_sizet>
ffffffff8000965f:	89 45 fc             	mov    %eax,-0x4(%rbp)
ffffffff80009662:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff80009665:	83 e8 05             	sub    $0x5,%eax
ffffffff80009668:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff8000966c:	89 c1                	mov    %eax,%ecx
ffffffff8000966e:	48 d3 ea             	shr    %cl,%rdx
ffffffff80009671:	48 89 d0             	mov    %rdx,%rax
ffffffff80009674:	83 f0 20             	xor    $0x20,%eax
ffffffff80009677:	89 45 f8             	mov    %eax,-0x8(%rbp)
ffffffff8000967a:	83 6d fc 07          	subl   $0x7,-0x4(%rbp)
ffffffff8000967e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80009682:	8b 55 fc             	mov    -0x4(%rbp),%edx
ffffffff80009685:	89 10                	mov    %edx,(%rax)
ffffffff80009687:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8000968b:	8b 55 f8             	mov    -0x8(%rbp),%edx
ffffffff8000968e:	89 10                	mov    %edx,(%rax)
ffffffff80009690:	90                   	nop
ffffffff80009691:	c9                   	leave  
ffffffff80009692:	c3                   	ret    

ffffffff80009693 <mapping_search>:
ffffffff80009693:	f3 0f 1e fa          	endbr64 
ffffffff80009697:	55                   	push   %rbp
ffffffff80009698:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000969b:	48 83 ec 28          	sub    $0x28,%rsp
ffffffff8000969f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff800096a3:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
ffffffff800096a7:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
ffffffff800096ab:	48 81 7d e8 ff 00 00 	cmpq   $0xff,-0x18(%rbp)
ffffffff800096b2:	00 
ffffffff800096b3:	76 2b                	jbe    ffffffff800096e0 <mapping_search+0x4d>
ffffffff800096b5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800096b9:	48 89 c7             	mov    %rax,%rdi
ffffffff800096bc:	e8 93 f9 ff ff       	call   ffffffff80009054 <tlsf_fls_sizet>
ffffffff800096c1:	83 e8 05             	sub    $0x5,%eax
ffffffff800096c4:	ba 01 00 00 00       	mov    $0x1,%edx
ffffffff800096c9:	89 c1                	mov    %eax,%ecx
ffffffff800096cb:	d3 e2                	shl    %cl,%edx
ffffffff800096cd:	89 d0                	mov    %edx,%eax
ffffffff800096cf:	83 e8 01             	sub    $0x1,%eax
ffffffff800096d2:	48 98                	cltq   
ffffffff800096d4:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff800096d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff800096dc:	48 01 45 e8          	add    %rax,-0x18(%rbp)
ffffffff800096e0:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff800096e4:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
ffffffff800096e8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800096ec:	48 89 ce             	mov    %rcx,%rsi
ffffffff800096ef:	48 89 c7             	mov    %rax,%rdi
ffffffff800096f2:	e8 1f ff ff ff       	call   ffffffff80009616 <mapping_insert>
ffffffff800096f7:	90                   	nop
ffffffff800096f8:	c9                   	leave  
ffffffff800096f9:	c3                   	ret    

ffffffff800096fa <search_suitable_block>:
ffffffff800096fa:	f3 0f 1e fa          	endbr64 
ffffffff800096fe:	55                   	push   %rbp
ffffffff800096ff:	48 89 e5             	mov    %rsp,%rbp
ffffffff80009702:	48 83 ec 30          	sub    $0x30,%rsp
ffffffff80009706:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff8000970a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
ffffffff8000970e:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
ffffffff80009712:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80009716:	8b 00                	mov    (%rax),%eax
ffffffff80009718:	89 45 fc             	mov    %eax,-0x4(%rbp)
ffffffff8000971b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8000971f:	8b 00                	mov    (%rax),%eax
ffffffff80009721:	89 45 f4             	mov    %eax,-0xc(%rbp)
ffffffff80009724:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80009728:	8b 55 fc             	mov    -0x4(%rbp),%edx
ffffffff8000972b:	48 63 d2             	movslq %edx,%rdx
ffffffff8000972e:	48 83 c2 08          	add    $0x8,%rdx
ffffffff80009732:	8b 54 90 04          	mov    0x4(%rax,%rdx,4),%edx
ffffffff80009736:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff80009739:	be ff ff ff ff       	mov    $0xffffffff,%esi
ffffffff8000973e:	89 c1                	mov    %eax,%ecx
ffffffff80009740:	d3 e6                	shl    %cl,%esi
ffffffff80009742:	89 f0                	mov    %esi,%eax
ffffffff80009744:	21 d0                	and    %edx,%eax
ffffffff80009746:	89 45 f8             	mov    %eax,-0x8(%rbp)
ffffffff80009749:	83 7d f8 00          	cmpl   $0x0,-0x8(%rbp)
ffffffff8000974d:	75 58                	jne    ffffffff800097a7 <search_suitable_block+0xad>
ffffffff8000974f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80009753:	8b 50 20             	mov    0x20(%rax),%edx
ffffffff80009756:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff80009759:	83 c0 01             	add    $0x1,%eax
ffffffff8000975c:	be ff ff ff ff       	mov    $0xffffffff,%esi
ffffffff80009761:	89 c1                	mov    %eax,%ecx
ffffffff80009763:	d3 e6                	shl    %cl,%esi
ffffffff80009765:	89 f0                	mov    %esi,%eax
ffffffff80009767:	21 d0                	and    %edx,%eax
ffffffff80009769:	89 45 f0             	mov    %eax,-0x10(%rbp)
ffffffff8000976c:	83 7d f0 00          	cmpl   $0x0,-0x10(%rbp)
ffffffff80009770:	75 0a                	jne    ffffffff8000977c <search_suitable_block+0x82>
ffffffff80009772:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80009777:	e9 a5 00 00 00       	jmp    ffffffff80009821 <search_suitable_block+0x127>
ffffffff8000977c:	8b 45 f0             	mov    -0x10(%rbp),%eax
ffffffff8000977f:	89 c7                	mov    %eax,%edi
ffffffff80009781:	e8 74 f8 ff ff       	call   ffffffff80008ffa <tlsf_ffs>
ffffffff80009786:	89 45 fc             	mov    %eax,-0x4(%rbp)
ffffffff80009789:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8000978d:	8b 55 fc             	mov    -0x4(%rbp),%edx
ffffffff80009790:	89 10                	mov    %edx,(%rax)
ffffffff80009792:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80009796:	8b 55 fc             	mov    -0x4(%rbp),%edx
ffffffff80009799:	48 63 d2             	movslq %edx,%rdx
ffffffff8000979c:	48 83 c2 08          	add    $0x8,%rdx
ffffffff800097a0:	8b 44 90 04          	mov    0x4(%rax,%rdx,4),%eax
ffffffff800097a4:	89 45 f8             	mov    %eax,-0x8(%rbp)
ffffffff800097a7:	83 7d f8 00          	cmpl   $0x0,-0x8(%rbp)
ffffffff800097ab:	75 3d                	jne    ffffffff800097ea <search_suitable_block+0xf0>
ffffffff800097ad:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800097b2:	e8 2a d5 ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff800097b7:	48 89 c6             	mov    %rax,%rsi
ffffffff800097ba:	41 b8 36 02 00 00    	mov    $0x236,%r8d
ffffffff800097c0:	48 8d 05 b0 eb 02 00 	lea    0x2ebb0(%rip),%rax        # ffffffff80038377 <g_stivale2_header+0x1377>
ffffffff800097c7:	48 89 c1             	mov    %rax,%rcx
ffffffff800097ca:	48 8d 05 bf 3d 03 00 	lea    0x33dbf(%rip),%rax        # ffffffff8003d590 <__FUNCTION__.16>
ffffffff800097d1:	48 89 c2             	mov    %rax,%rdx
ffffffff800097d4:	48 8d 05 e5 2f 03 00 	lea    0x32fe5(%rip),%rax        # ffffffff8003c7c0 <g_stivale2_header+0x57c0>
ffffffff800097db:	48 89 c7             	mov    %rax,%rdi
ffffffff800097de:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800097e3:	e8 58 9d 00 00       	call   ffffffff80013540 <printf_>
ffffffff800097e8:	0f 0b                	ud2    
ffffffff800097ea:	8b 45 f8             	mov    -0x8(%rbp),%eax
ffffffff800097ed:	89 c7                	mov    %eax,%edi
ffffffff800097ef:	e8 06 f8 ff ff       	call   ffffffff80008ffa <tlsf_ffs>
ffffffff800097f4:	89 45 f4             	mov    %eax,-0xc(%rbp)
ffffffff800097f7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff800097fb:	8b 55 f4             	mov    -0xc(%rbp),%edx
ffffffff800097fe:	89 10                	mov    %edx,(%rax)
ffffffff80009800:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80009804:	8b 55 f4             	mov    -0xc(%rbp),%edx
ffffffff80009807:	48 63 ca             	movslq %edx,%rcx
ffffffff8000980a:	8b 55 fc             	mov    -0x4(%rbp),%edx
ffffffff8000980d:	48 63 d2             	movslq %edx,%rdx
ffffffff80009810:	48 c1 e2 05          	shl    $0x5,%rdx
ffffffff80009814:	48 01 ca             	add    %rcx,%rdx
ffffffff80009817:	48 83 c2 10          	add    $0x10,%rdx
ffffffff8000981b:	48 8b 44 d0 08       	mov    0x8(%rax,%rdx,8),%rax
ffffffff80009820:	90                   	nop
ffffffff80009821:	c9                   	leave  
ffffffff80009822:	c3                   	ret    

ffffffff80009823 <remove_free_block>:
ffffffff80009823:	f3 0f 1e fa          	endbr64 
ffffffff80009827:	55                   	push   %rbp
ffffffff80009828:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000982b:	48 83 ec 30          	sub    $0x30,%rsp
ffffffff8000982f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff80009833:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
ffffffff80009837:	89 55 dc             	mov    %edx,-0x24(%rbp)
ffffffff8000983a:	89 4d d8             	mov    %ecx,-0x28(%rbp)
ffffffff8000983d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80009841:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff80009845:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff80009849:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8000984d:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff80009851:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff80009855:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff8000985a:	75 3d                	jne    ffffffff80009899 <remove_free_block+0x76>
ffffffff8000985c:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80009861:	e8 7b d4 ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff80009866:	48 89 c6             	mov    %rax,%rsi
ffffffff80009869:	41 b8 43 02 00 00    	mov    $0x243,%r8d
ffffffff8000986f:	48 8d 05 01 eb 02 00 	lea    0x2eb01(%rip),%rax        # ffffffff80038377 <g_stivale2_header+0x1377>
ffffffff80009876:	48 89 c1             	mov    %rax,%rcx
ffffffff80009879:	48 8d 05 30 3d 03 00 	lea    0x33d30(%rip),%rax        # ffffffff8003d5b0 <__FUNCTION__.15>
ffffffff80009880:	48 89 c2             	mov    %rax,%rdx
ffffffff80009883:	48 8d 05 36 2f 03 00 	lea    0x32f36(%rip),%rax        # ffffffff8003c7c0 <g_stivale2_header+0x57c0>
ffffffff8000988a:	48 89 c7             	mov    %rax,%rdi
ffffffff8000988d:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80009892:	e8 a9 9c 00 00       	call   ffffffff80013540 <printf_>
ffffffff80009897:	0f 0b                	ud2    
ffffffff80009899:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
ffffffff8000989e:	75 3d                	jne    ffffffff800098dd <remove_free_block+0xba>
ffffffff800098a0:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800098a5:	e8 37 d4 ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff800098aa:	48 89 c6             	mov    %rax,%rsi
ffffffff800098ad:	41 b8 44 02 00 00    	mov    $0x244,%r8d
ffffffff800098b3:	48 8d 05 bd ea 02 00 	lea    0x2eabd(%rip),%rax        # ffffffff80038377 <g_stivale2_header+0x1377>
ffffffff800098ba:	48 89 c1             	mov    %rax,%rcx
ffffffff800098bd:	48 8d 05 ec 3c 03 00 	lea    0x33cec(%rip),%rax        # ffffffff8003d5b0 <__FUNCTION__.15>
ffffffff800098c4:	48 89 c2             	mov    %rax,%rdx
ffffffff800098c7:	48 8d 05 f2 2e 03 00 	lea    0x32ef2(%rip),%rax        # ffffffff8003c7c0 <g_stivale2_header+0x57c0>
ffffffff800098ce:	48 89 c7             	mov    %rax,%rdi
ffffffff800098d1:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800098d6:	e8 65 9c 00 00       	call   ffffffff80013540 <printf_>
ffffffff800098db:	0f 0b                	ud2    
ffffffff800098dd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff800098e1:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff800098e5:	48 89 50 18          	mov    %rdx,0x18(%rax)
ffffffff800098e9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff800098ed:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff800098f1:	48 89 50 10          	mov    %rdx,0x10(%rax)
ffffffff800098f5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800098f9:	8b 55 d8             	mov    -0x28(%rbp),%edx
ffffffff800098fc:	48 63 ca             	movslq %edx,%rcx
ffffffff800098ff:	8b 55 dc             	mov    -0x24(%rbp),%edx
ffffffff80009902:	48 63 d2             	movslq %edx,%rdx
ffffffff80009905:	48 c1 e2 05          	shl    $0x5,%rdx
ffffffff80009909:	48 01 ca             	add    %rcx,%rdx
ffffffff8000990c:	48 83 c2 10          	add    $0x10,%rdx
ffffffff80009910:	48 8b 44 d0 08       	mov    0x8(%rax,%rdx,8),%rax
ffffffff80009915:	48 39 45 e0          	cmp    %rax,-0x20(%rbp)
ffffffff80009919:	0f 85 9c 00 00 00    	jne    ffffffff800099bb <remove_free_block+0x198>
ffffffff8000991f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80009923:	8b 55 d8             	mov    -0x28(%rbp),%edx
ffffffff80009926:	48 63 ca             	movslq %edx,%rcx
ffffffff80009929:	8b 55 dc             	mov    -0x24(%rbp),%edx
ffffffff8000992c:	48 63 d2             	movslq %edx,%rdx
ffffffff8000992f:	48 c1 e2 05          	shl    $0x5,%rdx
ffffffff80009933:	48 01 ca             	add    %rcx,%rdx
ffffffff80009936:	48 83 c2 10          	add    $0x10,%rdx
ffffffff8000993a:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
ffffffff8000993e:	48 89 4c d0 08       	mov    %rcx,0x8(%rax,%rdx,8)
ffffffff80009943:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80009947:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
ffffffff8000994b:	75 6e                	jne    ffffffff800099bb <remove_free_block+0x198>
ffffffff8000994d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80009951:	8b 55 dc             	mov    -0x24(%rbp),%edx
ffffffff80009954:	48 63 d2             	movslq %edx,%rdx
ffffffff80009957:	48 83 c2 08          	add    $0x8,%rdx
ffffffff8000995b:	8b 54 90 04          	mov    0x4(%rax,%rdx,4),%edx
ffffffff8000995f:	8b 45 d8             	mov    -0x28(%rbp),%eax
ffffffff80009962:	be 01 00 00 00       	mov    $0x1,%esi
ffffffff80009967:	89 c1                	mov    %eax,%ecx
ffffffff80009969:	d3 e6                	shl    %cl,%esi
ffffffff8000996b:	89 f0                	mov    %esi,%eax
ffffffff8000996d:	f7 d0                	not    %eax
ffffffff8000996f:	89 d1                	mov    %edx,%ecx
ffffffff80009971:	21 c1                	and    %eax,%ecx
ffffffff80009973:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80009977:	8b 55 dc             	mov    -0x24(%rbp),%edx
ffffffff8000997a:	48 63 d2             	movslq %edx,%rdx
ffffffff8000997d:	48 83 c2 08          	add    $0x8,%rdx
ffffffff80009981:	89 4c 90 04          	mov    %ecx,0x4(%rax,%rdx,4)
ffffffff80009985:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80009989:	8b 55 dc             	mov    -0x24(%rbp),%edx
ffffffff8000998c:	48 63 d2             	movslq %edx,%rdx
ffffffff8000998f:	48 83 c2 08          	add    $0x8,%rdx
ffffffff80009993:	8b 44 90 04          	mov    0x4(%rax,%rdx,4),%eax
ffffffff80009997:	85 c0                	test   %eax,%eax
ffffffff80009999:	75 20                	jne    ffffffff800099bb <remove_free_block+0x198>
ffffffff8000999b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000999f:	8b 50 20             	mov    0x20(%rax),%edx
ffffffff800099a2:	8b 45 dc             	mov    -0x24(%rbp),%eax
ffffffff800099a5:	be 01 00 00 00       	mov    $0x1,%esi
ffffffff800099aa:	89 c1                	mov    %eax,%ecx
ffffffff800099ac:	d3 e6                	shl    %cl,%esi
ffffffff800099ae:	89 f0                	mov    %esi,%eax
ffffffff800099b0:	f7 d0                	not    %eax
ffffffff800099b2:	21 c2                	and    %eax,%edx
ffffffff800099b4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800099b8:	89 50 20             	mov    %edx,0x20(%rax)
ffffffff800099bb:	90                   	nop
ffffffff800099bc:	c9                   	leave  
ffffffff800099bd:	c3                   	ret    

ffffffff800099be <insert_free_block>:
ffffffff800099be:	f3 0f 1e fa          	endbr64 
ffffffff800099c2:	55                   	push   %rbp
ffffffff800099c3:	48 89 e5             	mov    %rsp,%rbp
ffffffff800099c6:	53                   	push   %rbx
ffffffff800099c7:	48 83 ec 38          	sub    $0x38,%rsp
ffffffff800099cb:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
ffffffff800099cf:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
ffffffff800099d3:	89 55 cc             	mov    %edx,-0x34(%rbp)
ffffffff800099d6:	89 4d c8             	mov    %ecx,-0x38(%rbp)
ffffffff800099d9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff800099dd:	8b 55 c8             	mov    -0x38(%rbp),%edx
ffffffff800099e0:	48 63 ca             	movslq %edx,%rcx
ffffffff800099e3:	8b 55 cc             	mov    -0x34(%rbp),%edx
ffffffff800099e6:	48 63 d2             	movslq %edx,%rdx
ffffffff800099e9:	48 c1 e2 05          	shl    $0x5,%rdx
ffffffff800099ed:	48 01 ca             	add    %rcx,%rdx
ffffffff800099f0:	48 83 c2 10          	add    $0x10,%rdx
ffffffff800099f4:	48 8b 44 d0 08       	mov    0x8(%rax,%rdx,8),%rax
ffffffff800099f9:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff800099fd:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
ffffffff80009a02:	75 3d                	jne    ffffffff80009a41 <insert_free_block+0x83>
ffffffff80009a04:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80009a09:	e8 d3 d2 ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff80009a0e:	48 89 c6             	mov    %rax,%rsi
ffffffff80009a11:	41 b8 5f 02 00 00    	mov    $0x25f,%r8d
ffffffff80009a17:	48 8d 05 59 e9 02 00 	lea    0x2e959(%rip),%rax        # ffffffff80038377 <g_stivale2_header+0x1377>
ffffffff80009a1e:	48 89 c1             	mov    %rax,%rcx
ffffffff80009a21:	48 8d 05 a8 3b 03 00 	lea    0x33ba8(%rip),%rax        # ffffffff8003d5d0 <__FUNCTION__.14>
ffffffff80009a28:	48 89 c2             	mov    %rax,%rdx
ffffffff80009a2b:	48 8d 05 8e 2d 03 00 	lea    0x32d8e(%rip),%rax        # ffffffff8003c7c0 <g_stivale2_header+0x57c0>
ffffffff80009a32:	48 89 c7             	mov    %rax,%rdi
ffffffff80009a35:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80009a3a:	e8 01 9b 00 00       	call   ffffffff80013540 <printf_>
ffffffff80009a3f:	0f 0b                	ud2    
ffffffff80009a41:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
ffffffff80009a46:	75 3d                	jne    ffffffff80009a85 <insert_free_block+0xc7>
ffffffff80009a48:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80009a4d:	e8 8f d2 ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff80009a52:	48 89 c6             	mov    %rax,%rsi
ffffffff80009a55:	41 b8 60 02 00 00    	mov    $0x260,%r8d
ffffffff80009a5b:	48 8d 05 15 e9 02 00 	lea    0x2e915(%rip),%rax        # ffffffff80038377 <g_stivale2_header+0x1377>
ffffffff80009a62:	48 89 c1             	mov    %rax,%rcx
ffffffff80009a65:	48 8d 05 64 3b 03 00 	lea    0x33b64(%rip),%rax        # ffffffff8003d5d0 <__FUNCTION__.14>
ffffffff80009a6c:	48 89 c2             	mov    %rax,%rdx
ffffffff80009a6f:	48 8d 05 4a 2d 03 00 	lea    0x32d4a(%rip),%rax        # ffffffff8003c7c0 <g_stivale2_header+0x57c0>
ffffffff80009a76:	48 89 c7             	mov    %rax,%rdi
ffffffff80009a79:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80009a7e:	e8 bd 9a 00 00       	call   ffffffff80013540 <printf_>
ffffffff80009a83:	0f 0b                	ud2    
ffffffff80009a85:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff80009a89:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff80009a8d:	48 89 50 10          	mov    %rdx,0x10(%rax)
ffffffff80009a91:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff80009a95:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff80009a99:	48 89 50 18          	mov    %rdx,0x18(%rax)
ffffffff80009a9d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80009aa1:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
ffffffff80009aa5:	48 89 50 18          	mov    %rdx,0x18(%rax)
ffffffff80009aa9:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff80009aad:	48 89 c7             	mov    %rax,%rdi
ffffffff80009ab0:	e8 9c f7 ff ff       	call   ffffffff80009251 <block_to_ptr>
ffffffff80009ab5:	48 89 c3             	mov    %rax,%rbx
ffffffff80009ab8:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff80009abc:	48 89 c7             	mov    %rax,%rdi
ffffffff80009abf:	e8 8d f7 ff ff       	call   ffffffff80009251 <block_to_ptr>
ffffffff80009ac4:	be 08 00 00 00       	mov    $0x8,%esi
ffffffff80009ac9:	48 89 c7             	mov    %rax,%rdi
ffffffff80009acc:	e8 5a fa ff ff       	call   ffffffff8000952b <align_ptr>
ffffffff80009ad1:	48 39 c3             	cmp    %rax,%rbx
ffffffff80009ad4:	74 3d                	je     ffffffff80009b13 <insert_free_block+0x155>
ffffffff80009ad6:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80009adb:	e8 01 d2 ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff80009ae0:	48 89 c6             	mov    %rax,%rsi
ffffffff80009ae3:	41 b8 65 02 00 00    	mov    $0x265,%r8d
ffffffff80009ae9:	48 8d 05 87 e8 02 00 	lea    0x2e887(%rip),%rax        # ffffffff80038377 <g_stivale2_header+0x1377>
ffffffff80009af0:	48 89 c1             	mov    %rax,%rcx
ffffffff80009af3:	48 8d 05 d6 3a 03 00 	lea    0x33ad6(%rip),%rax        # ffffffff8003d5d0 <__FUNCTION__.14>
ffffffff80009afa:	48 89 c2             	mov    %rax,%rdx
ffffffff80009afd:	48 8d 05 bc 2c 03 00 	lea    0x32cbc(%rip),%rax        # ffffffff8003c7c0 <g_stivale2_header+0x57c0>
ffffffff80009b04:	48 89 c7             	mov    %rax,%rdi
ffffffff80009b07:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80009b0c:	e8 2f 9a 00 00       	call   ffffffff80013540 <printf_>
ffffffff80009b11:	0f 0b                	ud2    
ffffffff80009b13:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80009b17:	8b 55 c8             	mov    -0x38(%rbp),%edx
ffffffff80009b1a:	48 63 ca             	movslq %edx,%rcx
ffffffff80009b1d:	8b 55 cc             	mov    -0x34(%rbp),%edx
ffffffff80009b20:	48 63 d2             	movslq %edx,%rdx
ffffffff80009b23:	48 c1 e2 05          	shl    $0x5,%rdx
ffffffff80009b27:	48 01 ca             	add    %rcx,%rdx
ffffffff80009b2a:	48 83 c2 10          	add    $0x10,%rdx
ffffffff80009b2e:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
ffffffff80009b32:	48 89 4c d0 08       	mov    %rcx,0x8(%rax,%rdx,8)
ffffffff80009b37:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80009b3b:	8b 50 20             	mov    0x20(%rax),%edx
ffffffff80009b3e:	8b 45 cc             	mov    -0x34(%rbp),%eax
ffffffff80009b41:	be 01 00 00 00       	mov    $0x1,%esi
ffffffff80009b46:	89 c1                	mov    %eax,%ecx
ffffffff80009b48:	d3 e6                	shl    %cl,%esi
ffffffff80009b4a:	89 f0                	mov    %esi,%eax
ffffffff80009b4c:	09 c2                	or     %eax,%edx
ffffffff80009b4e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80009b52:	89 50 20             	mov    %edx,0x20(%rax)
ffffffff80009b55:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80009b59:	8b 55 cc             	mov    -0x34(%rbp),%edx
ffffffff80009b5c:	48 63 d2             	movslq %edx,%rdx
ffffffff80009b5f:	48 83 c2 08          	add    $0x8,%rdx
ffffffff80009b63:	8b 54 90 04          	mov    0x4(%rax,%rdx,4),%edx
ffffffff80009b67:	8b 45 c8             	mov    -0x38(%rbp),%eax
ffffffff80009b6a:	be 01 00 00 00       	mov    $0x1,%esi
ffffffff80009b6f:	89 c1                	mov    %eax,%ecx
ffffffff80009b71:	d3 e6                	shl    %cl,%esi
ffffffff80009b73:	89 f0                	mov    %esi,%eax
ffffffff80009b75:	89 d1                	mov    %edx,%ecx
ffffffff80009b77:	09 c1                	or     %eax,%ecx
ffffffff80009b79:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80009b7d:	8b 55 cc             	mov    -0x34(%rbp),%edx
ffffffff80009b80:	48 63 d2             	movslq %edx,%rdx
ffffffff80009b83:	48 83 c2 08          	add    $0x8,%rdx
ffffffff80009b87:	89 4c 90 04          	mov    %ecx,0x4(%rax,%rdx,4)
ffffffff80009b8b:	90                   	nop
ffffffff80009b8c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
ffffffff80009b90:	c9                   	leave  
ffffffff80009b91:	c3                   	ret    

ffffffff80009b92 <block_remove>:
ffffffff80009b92:	f3 0f 1e fa          	endbr64 
ffffffff80009b96:	55                   	push   %rbp
ffffffff80009b97:	48 89 e5             	mov    %rsp,%rbp
ffffffff80009b9a:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff80009b9e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff80009ba2:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
ffffffff80009ba6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80009baa:	48 89 c7             	mov    %rax,%rdi
ffffffff80009bad:	e8 ef f4 ff ff       	call   ffffffff800090a1 <block_size>
ffffffff80009bb2:	48 89 c1             	mov    %rax,%rcx
ffffffff80009bb5:	48 8d 55 f8          	lea    -0x8(%rbp),%rdx
ffffffff80009bb9:	48 8d 45 fc          	lea    -0x4(%rbp),%rax
ffffffff80009bbd:	48 89 c6             	mov    %rax,%rsi
ffffffff80009bc0:	48 89 cf             	mov    %rcx,%rdi
ffffffff80009bc3:	e8 4e fa ff ff       	call   ffffffff80009616 <mapping_insert>
ffffffff80009bc8:	8b 4d f8             	mov    -0x8(%rbp),%ecx
ffffffff80009bcb:	8b 55 fc             	mov    -0x4(%rbp),%edx
ffffffff80009bce:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
ffffffff80009bd2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80009bd6:	48 89 c7             	mov    %rax,%rdi
ffffffff80009bd9:	e8 45 fc ff ff       	call   ffffffff80009823 <remove_free_block>
ffffffff80009bde:	90                   	nop
ffffffff80009bdf:	c9                   	leave  
ffffffff80009be0:	c3                   	ret    

ffffffff80009be1 <block_insert>:
ffffffff80009be1:	f3 0f 1e fa          	endbr64 
ffffffff80009be5:	55                   	push   %rbp
ffffffff80009be6:	48 89 e5             	mov    %rsp,%rbp
ffffffff80009be9:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff80009bed:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff80009bf1:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
ffffffff80009bf5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80009bf9:	48 89 c7             	mov    %rax,%rdi
ffffffff80009bfc:	e8 a0 f4 ff ff       	call   ffffffff800090a1 <block_size>
ffffffff80009c01:	48 89 c1             	mov    %rax,%rcx
ffffffff80009c04:	48 8d 55 f8          	lea    -0x8(%rbp),%rdx
ffffffff80009c08:	48 8d 45 fc          	lea    -0x4(%rbp),%rax
ffffffff80009c0c:	48 89 c6             	mov    %rax,%rsi
ffffffff80009c0f:	48 89 cf             	mov    %rcx,%rdi
ffffffff80009c12:	e8 ff f9 ff ff       	call   ffffffff80009616 <mapping_insert>
ffffffff80009c17:	8b 4d f8             	mov    -0x8(%rbp),%ecx
ffffffff80009c1a:	8b 55 fc             	mov    -0x4(%rbp),%edx
ffffffff80009c1d:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
ffffffff80009c21:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80009c25:	48 89 c7             	mov    %rax,%rdi
ffffffff80009c28:	e8 91 fd ff ff       	call   ffffffff800099be <insert_free_block>
ffffffff80009c2d:	90                   	nop
ffffffff80009c2e:	c9                   	leave  
ffffffff80009c2f:	c3                   	ret    

ffffffff80009c30 <block_can_split>:
ffffffff80009c30:	f3 0f 1e fa          	endbr64 
ffffffff80009c34:	55                   	push   %rbp
ffffffff80009c35:	48 89 e5             	mov    %rsp,%rbp
ffffffff80009c38:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff80009c3c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff80009c40:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff80009c44:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80009c48:	48 89 c7             	mov    %rax,%rdi
ffffffff80009c4b:	e8 51 f4 ff ff       	call   ffffffff800090a1 <block_size>
ffffffff80009c50:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff80009c54:	48 83 c2 20          	add    $0x20,%rdx
ffffffff80009c58:	48 39 d0             	cmp    %rdx,%rax
ffffffff80009c5b:	0f 93 c0             	setae  %al
ffffffff80009c5e:	0f b6 c0             	movzbl %al,%eax
ffffffff80009c61:	c9                   	leave  
ffffffff80009c62:	c3                   	ret    

ffffffff80009c63 <block_split>:
ffffffff80009c63:	f3 0f 1e fa          	endbr64 
ffffffff80009c67:	55                   	push   %rbp
ffffffff80009c68:	48 89 e5             	mov    %rsp,%rbp
ffffffff80009c6b:	53                   	push   %rbx
ffffffff80009c6c:	48 83 ec 28          	sub    $0x28,%rsp
ffffffff80009c70:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
ffffffff80009c74:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
ffffffff80009c78:	ba 08 00 00 00       	mov    $0x8,%edx
ffffffff80009c7d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff80009c81:	48 29 d0             	sub    %rdx,%rax
ffffffff80009c84:	48 89 c3             	mov    %rax,%rbx
ffffffff80009c87:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80009c8b:	48 89 c7             	mov    %rax,%rdi
ffffffff80009c8e:	e8 be f5 ff ff       	call   ffffffff80009251 <block_to_ptr>
ffffffff80009c93:	48 89 de             	mov    %rbx,%rsi
ffffffff80009c96:	48 89 c7             	mov    %rax,%rdi
ffffffff80009c99:	e8 d1 f5 ff ff       	call   ffffffff8000926f <offset_to_block>
ffffffff80009c9e:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff80009ca2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80009ca6:	48 89 c7             	mov    %rax,%rdi
ffffffff80009ca9:	e8 f3 f3 ff ff       	call   ffffffff800090a1 <block_size>
ffffffff80009cae:	b9 08 00 00 00       	mov    $0x8,%ecx
ffffffff80009cb3:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
ffffffff80009cb7:	48 01 ca             	add    %rcx,%rdx
ffffffff80009cba:	48 29 d0             	sub    %rdx,%rax
ffffffff80009cbd:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff80009cc1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80009cc5:	48 89 c7             	mov    %rax,%rdi
ffffffff80009cc8:	e8 84 f5 ff ff       	call   ffffffff80009251 <block_to_ptr>
ffffffff80009ccd:	48 89 c3             	mov    %rax,%rbx
ffffffff80009cd0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80009cd4:	48 89 c7             	mov    %rax,%rdi
ffffffff80009cd7:	e8 75 f5 ff ff       	call   ffffffff80009251 <block_to_ptr>
ffffffff80009cdc:	be 08 00 00 00       	mov    $0x8,%esi
ffffffff80009ce1:	48 89 c7             	mov    %rax,%rdi
ffffffff80009ce4:	e8 42 f8 ff ff       	call   ffffffff8000952b <align_ptr>
ffffffff80009ce9:	48 39 c3             	cmp    %rax,%rbx
ffffffff80009cec:	74 3d                	je     ffffffff80009d2b <block_split+0xc8>
ffffffff80009cee:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80009cf3:	e8 e9 cf ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff80009cf8:	48 89 c6             	mov    %rax,%rsi
ffffffff80009cfb:	41 b8 8e 02 00 00    	mov    $0x28e,%r8d
ffffffff80009d01:	48 8d 05 6f e6 02 00 	lea    0x2e66f(%rip),%rax        # ffffffff80038377 <g_stivale2_header+0x1377>
ffffffff80009d08:	48 89 c1             	mov    %rax,%rcx
ffffffff80009d0b:	48 8d 05 d6 38 03 00 	lea    0x338d6(%rip),%rax        # ffffffff8003d5e8 <__FUNCTION__.13>
ffffffff80009d12:	48 89 c2             	mov    %rax,%rdx
ffffffff80009d15:	48 8d 05 a4 2a 03 00 	lea    0x32aa4(%rip),%rax        # ffffffff8003c7c0 <g_stivale2_header+0x57c0>
ffffffff80009d1c:	48 89 c7             	mov    %rax,%rdi
ffffffff80009d1f:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80009d24:	e8 17 98 00 00       	call   ffffffff80013540 <printf_>
ffffffff80009d29:	0f 0b                	ud2    
ffffffff80009d2b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80009d2f:	48 89 c7             	mov    %rax,%rdi
ffffffff80009d32:	e8 6a f3 ff ff       	call   ffffffff800090a1 <block_size>
ffffffff80009d37:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
ffffffff80009d3b:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
ffffffff80009d3f:	48 01 ca             	add    %rcx,%rdx
ffffffff80009d42:	b9 08 00 00 00       	mov    $0x8,%ecx
ffffffff80009d47:	48 01 ca             	add    %rcx,%rdx
ffffffff80009d4a:	48 39 d0             	cmp    %rdx,%rax
ffffffff80009d4d:	74 3d                	je     ffffffff80009d8c <block_split+0x129>
ffffffff80009d4f:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80009d54:	e8 88 cf ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff80009d59:	48 89 c6             	mov    %rax,%rsi
ffffffff80009d5c:	41 b8 91 02 00 00    	mov    $0x291,%r8d
ffffffff80009d62:	48 8d 05 0e e6 02 00 	lea    0x2e60e(%rip),%rax        # ffffffff80038377 <g_stivale2_header+0x1377>
ffffffff80009d69:	48 89 c1             	mov    %rax,%rcx
ffffffff80009d6c:	48 8d 05 75 38 03 00 	lea    0x33875(%rip),%rax        # ffffffff8003d5e8 <__FUNCTION__.13>
ffffffff80009d73:	48 89 c2             	mov    %rax,%rdx
ffffffff80009d76:	48 8d 05 43 2a 03 00 	lea    0x32a43(%rip),%rax        # ffffffff8003c7c0 <g_stivale2_header+0x57c0>
ffffffff80009d7d:	48 89 c7             	mov    %rax,%rdi
ffffffff80009d80:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80009d85:	e8 b6 97 00 00       	call   ffffffff80013540 <printf_>
ffffffff80009d8a:	0f 0b                	ud2    
ffffffff80009d8c:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff80009d90:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80009d94:	48 89 d6             	mov    %rdx,%rsi
ffffffff80009d97:	48 89 c7             	mov    %rax,%rdi
ffffffff80009d9a:	e8 2f f3 ff ff       	call   ffffffff800090ce <block_set_size>
ffffffff80009d9f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80009da3:	48 89 c7             	mov    %rax,%rdi
ffffffff80009da6:	e8 f6 f2 ff ff       	call   ffffffff800090a1 <block_size>
ffffffff80009dab:	ba 18 00 00 00       	mov    $0x18,%edx
ffffffff80009db0:	48 39 d0             	cmp    %rdx,%rax
ffffffff80009db3:	73 3d                	jae    ffffffff80009df2 <block_split+0x18f>
ffffffff80009db5:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80009dba:	e8 22 cf ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff80009dbf:	48 89 c6             	mov    %rax,%rsi
ffffffff80009dc2:	41 b8 93 02 00 00    	mov    $0x293,%r8d
ffffffff80009dc8:	48 8d 05 a8 e5 02 00 	lea    0x2e5a8(%rip),%rax        # ffffffff80038377 <g_stivale2_header+0x1377>
ffffffff80009dcf:	48 89 c1             	mov    %rax,%rcx
ffffffff80009dd2:	48 8d 05 0f 38 03 00 	lea    0x3380f(%rip),%rax        # ffffffff8003d5e8 <__FUNCTION__.13>
ffffffff80009dd9:	48 89 c2             	mov    %rax,%rdx
ffffffff80009ddc:	48 8d 05 dd 29 03 00 	lea    0x329dd(%rip),%rax        # ffffffff8003c7c0 <g_stivale2_header+0x57c0>
ffffffff80009de3:	48 89 c7             	mov    %rax,%rdi
ffffffff80009de6:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80009deb:	e8 50 97 00 00       	call   ffffffff80013540 <printf_>
ffffffff80009df0:	0f 0b                	ud2    
ffffffff80009df2:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
ffffffff80009df6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80009dfa:	48 89 d6             	mov    %rdx,%rsi
ffffffff80009dfd:	48 89 c7             	mov    %rax,%rdi
ffffffff80009e00:	e8 c9 f2 ff ff       	call   ffffffff800090ce <block_set_size>
ffffffff80009e05:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80009e09:	48 89 c7             	mov    %rax,%rdi
ffffffff80009e0c:	e8 b4 f5 ff ff       	call   ffffffff800093c5 <block_mark_as_free>
ffffffff80009e11:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80009e15:	90                   	nop
ffffffff80009e16:	90                   	nop
ffffffff80009e17:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
ffffffff80009e1b:	c9                   	leave  
ffffffff80009e1c:	c3                   	ret    

ffffffff80009e1d <block_absorb>:
ffffffff80009e1d:	f3 0f 1e fa          	endbr64 
ffffffff80009e21:	55                   	push   %rbp
ffffffff80009e22:	48 89 e5             	mov    %rsp,%rbp
ffffffff80009e25:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff80009e29:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff80009e2d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff80009e31:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80009e35:	48 89 c7             	mov    %rax,%rdi
ffffffff80009e38:	e8 d1 f2 ff ff       	call   ffffffff8000910e <block_is_last>
ffffffff80009e3d:	85 c0                	test   %eax,%eax
ffffffff80009e3f:	74 3d                	je     ffffffff80009e7e <block_absorb+0x61>
ffffffff80009e41:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80009e46:	e8 96 ce ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff80009e4b:	48 89 c6             	mov    %rax,%rsi
ffffffff80009e4e:	41 b8 9e 02 00 00    	mov    $0x29e,%r8d
ffffffff80009e54:	48 8d 05 1c e5 02 00 	lea    0x2e51c(%rip),%rax        # ffffffff80038377 <g_stivale2_header+0x1377>
ffffffff80009e5b:	48 89 c1             	mov    %rax,%rcx
ffffffff80009e5e:	48 8d 05 93 37 03 00 	lea    0x33793(%rip),%rax        # ffffffff8003d5f8 <__FUNCTION__.12>
ffffffff80009e65:	48 89 c2             	mov    %rax,%rdx
ffffffff80009e68:	48 8d 05 51 29 03 00 	lea    0x32951(%rip),%rax        # ffffffff8003c7c0 <g_stivale2_header+0x57c0>
ffffffff80009e6f:	48 89 c7             	mov    %rax,%rdi
ffffffff80009e72:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80009e77:	e8 c4 96 00 00       	call   ffffffff80013540 <printf_>
ffffffff80009e7c:	0f 0b                	ud2    
ffffffff80009e7e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80009e82:	48 89 c7             	mov    %rax,%rdi
ffffffff80009e85:	e8 17 f2 ff ff       	call   ffffffff800090a1 <block_size>
ffffffff80009e8a:	ba 08 00 00 00       	mov    $0x8,%edx
ffffffff80009e8f:	48 01 c2             	add    %rax,%rdx
ffffffff80009e92:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80009e96:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff80009e9a:	48 01 c2             	add    %rax,%rdx
ffffffff80009e9d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80009ea1:	48 89 50 08          	mov    %rdx,0x8(%rax)
ffffffff80009ea5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80009ea9:	48 89 c7             	mov    %rax,%rdi
ffffffff80009eac:	e8 e3 f4 ff ff       	call   ffffffff80009394 <block_link_next>
ffffffff80009eb1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80009eb5:	90                   	nop
ffffffff80009eb6:	90                   	nop
ffffffff80009eb7:	c9                   	leave  
ffffffff80009eb8:	c3                   	ret    

ffffffff80009eb9 <block_merge_prev>:
ffffffff80009eb9:	f3 0f 1e fa          	endbr64 
ffffffff80009ebd:	55                   	push   %rbp
ffffffff80009ebe:	48 89 e5             	mov    %rsp,%rbp
ffffffff80009ec1:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff80009ec5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff80009ec9:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
ffffffff80009ecd:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80009ed1:	48 89 c7             	mov    %rax,%rdi
ffffffff80009ed4:	e8 d8 f2 ff ff       	call   ffffffff800091b1 <block_is_prev_free>
ffffffff80009ed9:	85 c0                	test   %eax,%eax
ffffffff80009edb:	0f 84 cb 00 00 00    	je     ffffffff80009fac <block_merge_prev+0xf3>
ffffffff80009ee1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80009ee5:	48 89 c7             	mov    %rax,%rdi
ffffffff80009ee8:	e8 a3 f3 ff ff       	call   ffffffff80009290 <block_prev>
ffffffff80009eed:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff80009ef1:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff80009ef6:	75 3d                	jne    ffffffff80009f35 <block_merge_prev+0x7c>
ffffffff80009ef8:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80009efd:	e8 df cd ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff80009f02:	48 89 c6             	mov    %rax,%rsi
ffffffff80009f05:	41 b8 ab 02 00 00    	mov    $0x2ab,%r8d
ffffffff80009f0b:	48 8d 05 65 e4 02 00 	lea    0x2e465(%rip),%rax        # ffffffff80038377 <g_stivale2_header+0x1377>
ffffffff80009f12:	48 89 c1             	mov    %rax,%rcx
ffffffff80009f15:	48 8d 05 f4 36 03 00 	lea    0x336f4(%rip),%rax        # ffffffff8003d610 <__FUNCTION__.11>
ffffffff80009f1c:	48 89 c2             	mov    %rax,%rdx
ffffffff80009f1f:	48 8d 05 9a 28 03 00 	lea    0x3289a(%rip),%rax        # ffffffff8003c7c0 <g_stivale2_header+0x57c0>
ffffffff80009f26:	48 89 c7             	mov    %rax,%rdi
ffffffff80009f29:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80009f2e:	e8 0d 96 00 00       	call   ffffffff80013540 <printf_>
ffffffff80009f33:	0f 0b                	ud2    
ffffffff80009f35:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80009f39:	48 89 c7             	mov    %rax,%rdi
ffffffff80009f3c:	e8 f4 f1 ff ff       	call   ffffffff80009135 <block_is_free>
ffffffff80009f41:	85 c0                	test   %eax,%eax
ffffffff80009f43:	75 3d                	jne    ffffffff80009f82 <block_merge_prev+0xc9>
ffffffff80009f45:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80009f4a:	e8 92 cd ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff80009f4f:	48 89 c6             	mov    %rax,%rsi
ffffffff80009f52:	41 b8 ac 02 00 00    	mov    $0x2ac,%r8d
ffffffff80009f58:	48 8d 05 18 e4 02 00 	lea    0x2e418(%rip),%rax        # ffffffff80038377 <g_stivale2_header+0x1377>
ffffffff80009f5f:	48 89 c1             	mov    %rax,%rcx
ffffffff80009f62:	48 8d 05 a7 36 03 00 	lea    0x336a7(%rip),%rax        # ffffffff8003d610 <__FUNCTION__.11>
ffffffff80009f69:	48 89 c2             	mov    %rax,%rdx
ffffffff80009f6c:	48 8d 05 4d 28 03 00 	lea    0x3284d(%rip),%rax        # ffffffff8003c7c0 <g_stivale2_header+0x57c0>
ffffffff80009f73:	48 89 c7             	mov    %rax,%rdi
ffffffff80009f76:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80009f7b:	e8 c0 95 00 00       	call   ffffffff80013540 <printf_>
ffffffff80009f80:	0f 0b                	ud2    
ffffffff80009f82:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff80009f86:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80009f8a:	48 89 d6             	mov    %rdx,%rsi
ffffffff80009f8d:	48 89 c7             	mov    %rax,%rdi
ffffffff80009f90:	e8 fd fb ff ff       	call   ffffffff80009b92 <block_remove>
ffffffff80009f95:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff80009f99:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80009f9d:	48 89 d6             	mov    %rdx,%rsi
ffffffff80009fa0:	48 89 c7             	mov    %rax,%rdi
ffffffff80009fa3:	e8 75 fe ff ff       	call   ffffffff80009e1d <block_absorb>
ffffffff80009fa8:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff80009fac:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80009fb0:	90                   	nop
ffffffff80009fb1:	90                   	nop
ffffffff80009fb2:	c9                   	leave  
ffffffff80009fb3:	c3                   	ret    

ffffffff80009fb4 <block_merge_next>:
ffffffff80009fb4:	f3 0f 1e fa          	endbr64 
ffffffff80009fb8:	55                   	push   %rbp
ffffffff80009fb9:	48 89 e5             	mov    %rsp,%rbp
ffffffff80009fbc:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff80009fc0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff80009fc4:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
ffffffff80009fc8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80009fcc:	48 89 c7             	mov    %rax,%rdi
ffffffff80009fcf:	e8 24 f3 ff ff       	call   ffffffff800092f8 <block_next>
ffffffff80009fd4:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff80009fd8:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff80009fdd:	75 3d                	jne    ffffffff8000a01c <block_merge_next+0x68>
ffffffff80009fdf:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80009fe4:	e8 f8 cc ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff80009fe9:	48 89 c6             	mov    %rax,%rsi
ffffffff80009fec:	41 b8 b8 02 00 00    	mov    $0x2b8,%r8d
ffffffff80009ff2:	48 8d 05 7e e3 02 00 	lea    0x2e37e(%rip),%rax        # ffffffff80038377 <g_stivale2_header+0x1377>
ffffffff80009ff9:	48 89 c1             	mov    %rax,%rcx
ffffffff80009ffc:	48 8d 05 2d 36 03 00 	lea    0x3362d(%rip),%rax        # ffffffff8003d630 <__FUNCTION__.10.lto_priv.0>
ffffffff8000a003:	48 89 c2             	mov    %rax,%rdx
ffffffff8000a006:	48 8d 05 b3 27 03 00 	lea    0x327b3(%rip),%rax        # ffffffff8003c7c0 <g_stivale2_header+0x57c0>
ffffffff8000a00d:	48 89 c7             	mov    %rax,%rdi
ffffffff8000a010:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000a015:	e8 26 95 00 00       	call   ffffffff80013540 <printf_>
ffffffff8000a01a:	0f 0b                	ud2    
ffffffff8000a01c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000a020:	48 89 c7             	mov    %rax,%rdi
ffffffff8000a023:	e8 0d f1 ff ff       	call   ffffffff80009135 <block_is_free>
ffffffff8000a028:	85 c0                	test   %eax,%eax
ffffffff8000a02a:	74 77                	je     ffffffff8000a0a3 <block_merge_next+0xef>
ffffffff8000a02c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8000a030:	48 89 c7             	mov    %rax,%rdi
ffffffff8000a033:	e8 d6 f0 ff ff       	call   ffffffff8000910e <block_is_last>
ffffffff8000a038:	85 c0                	test   %eax,%eax
ffffffff8000a03a:	74 3d                	je     ffffffff8000a079 <block_merge_next+0xc5>
ffffffff8000a03c:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000a041:	e8 9b cc ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff8000a046:	48 89 c6             	mov    %rax,%rsi
ffffffff8000a049:	41 b8 bc 02 00 00    	mov    $0x2bc,%r8d
ffffffff8000a04f:	48 8d 05 21 e3 02 00 	lea    0x2e321(%rip),%rax        # ffffffff80038377 <g_stivale2_header+0x1377>
ffffffff8000a056:	48 89 c1             	mov    %rax,%rcx
ffffffff8000a059:	48 8d 05 d0 35 03 00 	lea    0x335d0(%rip),%rax        # ffffffff8003d630 <__FUNCTION__.10.lto_priv.0>
ffffffff8000a060:	48 89 c2             	mov    %rax,%rdx
ffffffff8000a063:	48 8d 05 56 27 03 00 	lea    0x32756(%rip),%rax        # ffffffff8003c7c0 <g_stivale2_header+0x57c0>
ffffffff8000a06a:	48 89 c7             	mov    %rax,%rdi
ffffffff8000a06d:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000a072:	e8 c9 94 00 00       	call   ffffffff80013540 <printf_>
ffffffff8000a077:	0f 0b                	ud2    
ffffffff8000a079:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff8000a07d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000a081:	48 89 d6             	mov    %rdx,%rsi
ffffffff8000a084:	48 89 c7             	mov    %rax,%rdi
ffffffff8000a087:	e8 06 fb ff ff       	call   ffffffff80009b92 <block_remove>
ffffffff8000a08c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff8000a090:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8000a094:	48 89 d6             	mov    %rdx,%rsi
ffffffff8000a097:	48 89 c7             	mov    %rax,%rdi
ffffffff8000a09a:	e8 7e fd ff ff       	call   ffffffff80009e1d <block_absorb>
ffffffff8000a09f:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff8000a0a3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8000a0a7:	90                   	nop
ffffffff8000a0a8:	90                   	nop
ffffffff8000a0a9:	c9                   	leave  
ffffffff8000a0aa:	c3                   	ret    

ffffffff8000a0ab <block_trim_free>:
ffffffff8000a0ab:	f3 0f 1e fa          	endbr64 
ffffffff8000a0af:	55                   	push   %rbp
ffffffff8000a0b0:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000a0b3:	48 83 ec 30          	sub    $0x30,%rsp
ffffffff8000a0b7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff8000a0bb:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
ffffffff8000a0bf:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
ffffffff8000a0c3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8000a0c7:	48 89 c7             	mov    %rax,%rdi
ffffffff8000a0ca:	e8 66 f0 ff ff       	call   ffffffff80009135 <block_is_free>
ffffffff8000a0cf:	85 c0                	test   %eax,%eax
ffffffff8000a0d1:	75 3d                	jne    ffffffff8000a110 <block_trim_free+0x65>
ffffffff8000a0d3:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000a0d8:	e8 04 cc ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff8000a0dd:	48 89 c6             	mov    %rax,%rsi
ffffffff8000a0e0:	41 b8 c7 02 00 00    	mov    $0x2c7,%r8d
ffffffff8000a0e6:	48 8d 05 8a e2 02 00 	lea    0x2e28a(%rip),%rax        # ffffffff80038377 <g_stivale2_header+0x1377>
ffffffff8000a0ed:	48 89 c1             	mov    %rax,%rcx
ffffffff8000a0f0:	48 8d 05 59 35 03 00 	lea    0x33559(%rip),%rax        # ffffffff8003d650 <__FUNCTION__.9.lto_priv.0>
ffffffff8000a0f7:	48 89 c2             	mov    %rax,%rdx
ffffffff8000a0fa:	48 8d 05 bf 26 03 00 	lea    0x326bf(%rip),%rax        # ffffffff8003c7c0 <g_stivale2_header+0x57c0>
ffffffff8000a101:	48 89 c7             	mov    %rax,%rdi
ffffffff8000a104:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000a109:	e8 32 94 00 00       	call   ffffffff80013540 <printf_>
ffffffff8000a10e:	0f 0b                	ud2    
ffffffff8000a110:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff8000a114:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8000a118:	48 89 d6             	mov    %rdx,%rsi
ffffffff8000a11b:	48 89 c7             	mov    %rax,%rdi
ffffffff8000a11e:	e8 0d fb ff ff       	call   ffffffff80009c30 <block_can_split>
ffffffff8000a123:	85 c0                	test   %eax,%eax
ffffffff8000a125:	74 42                	je     ffffffff8000a169 <block_trim_free+0xbe>
ffffffff8000a127:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff8000a12b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8000a12f:	48 89 d6             	mov    %rdx,%rsi
ffffffff8000a132:	48 89 c7             	mov    %rax,%rdi
ffffffff8000a135:	e8 29 fb ff ff       	call   ffffffff80009c63 <block_split>
ffffffff8000a13a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8000a13e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8000a142:	48 89 c7             	mov    %rax,%rdi
ffffffff8000a145:	e8 4a f2 ff ff       	call   ffffffff80009394 <block_link_next>
ffffffff8000a14a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000a14e:	48 89 c7             	mov    %rax,%rdi
ffffffff8000a151:	e8 7e f0 ff ff       	call   ffffffff800091d4 <block_set_prev_free>
ffffffff8000a156:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff8000a15a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000a15e:	48 89 d6             	mov    %rdx,%rsi
ffffffff8000a161:	48 89 c7             	mov    %rax,%rdi
ffffffff8000a164:	e8 78 fa ff ff       	call   ffffffff80009be1 <block_insert>
ffffffff8000a169:	90                   	nop
ffffffff8000a16a:	c9                   	leave  
ffffffff8000a16b:	c3                   	ret    

ffffffff8000a16c <block_trim_used>:
ffffffff8000a16c:	f3 0f 1e fa          	endbr64 
ffffffff8000a170:	55                   	push   %rbp
ffffffff8000a171:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000a174:	48 83 ec 30          	sub    $0x30,%rsp
ffffffff8000a178:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff8000a17c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
ffffffff8000a180:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
ffffffff8000a184:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8000a188:	48 89 c7             	mov    %rax,%rdi
ffffffff8000a18b:	e8 a5 ef ff ff       	call   ffffffff80009135 <block_is_free>
ffffffff8000a190:	85 c0                	test   %eax,%eax
ffffffff8000a192:	74 3d                	je     ffffffff8000a1d1 <block_trim_used+0x65>
ffffffff8000a194:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000a199:	e8 43 cb ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff8000a19e:	48 89 c6             	mov    %rax,%rsi
ffffffff8000a1a1:	41 b8 d4 02 00 00    	mov    $0x2d4,%r8d
ffffffff8000a1a7:	48 8d 05 c9 e1 02 00 	lea    0x2e1c9(%rip),%rax        # ffffffff80038377 <g_stivale2_header+0x1377>
ffffffff8000a1ae:	48 89 c1             	mov    %rax,%rcx
ffffffff8000a1b1:	48 8d 05 a8 34 03 00 	lea    0x334a8(%rip),%rax        # ffffffff8003d660 <__FUNCTION__.8.lto_priv.0>
ffffffff8000a1b8:	48 89 c2             	mov    %rax,%rdx
ffffffff8000a1bb:	48 8d 05 fe 25 03 00 	lea    0x325fe(%rip),%rax        # ffffffff8003c7c0 <g_stivale2_header+0x57c0>
ffffffff8000a1c2:	48 89 c7             	mov    %rax,%rdi
ffffffff8000a1c5:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000a1ca:	e8 71 93 00 00       	call   ffffffff80013540 <printf_>
ffffffff8000a1cf:	0f 0b                	ud2    
ffffffff8000a1d1:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff8000a1d5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8000a1d9:	48 89 d6             	mov    %rdx,%rsi
ffffffff8000a1dc:	48 89 c7             	mov    %rax,%rdi
ffffffff8000a1df:	e8 4c fa ff ff       	call   ffffffff80009c30 <block_can_split>
ffffffff8000a1e4:	85 c0                	test   %eax,%eax
ffffffff8000a1e6:	74 4d                	je     ffffffff8000a235 <block_trim_used+0xc9>
ffffffff8000a1e8:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff8000a1ec:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8000a1f0:	48 89 d6             	mov    %rdx,%rsi
ffffffff8000a1f3:	48 89 c7             	mov    %rax,%rdi
ffffffff8000a1f6:	e8 68 fa ff ff       	call   ffffffff80009c63 <block_split>
ffffffff8000a1fb:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8000a1ff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000a203:	48 89 c7             	mov    %rax,%rdi
ffffffff8000a206:	e8 f4 ef ff ff       	call   ffffffff800091ff <block_set_prev_used>
ffffffff8000a20b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff8000a20f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000a213:	48 89 d6             	mov    %rdx,%rsi
ffffffff8000a216:	48 89 c7             	mov    %rax,%rdi
ffffffff8000a219:	e8 96 fd ff ff       	call   ffffffff80009fb4 <block_merge_next>
ffffffff8000a21e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8000a222:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff8000a226:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000a22a:	48 89 d6             	mov    %rdx,%rsi
ffffffff8000a22d:	48 89 c7             	mov    %rax,%rdi
ffffffff8000a230:	e8 ac f9 ff ff       	call   ffffffff80009be1 <block_insert>
ffffffff8000a235:	90                   	nop
ffffffff8000a236:	c9                   	leave  
ffffffff8000a237:	c3                   	ret    

ffffffff8000a238 <block_trim_free_leading>:
ffffffff8000a238:	f3 0f 1e fa          	endbr64 
ffffffff8000a23c:	55                   	push   %rbp
ffffffff8000a23d:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000a240:	48 83 ec 30          	sub    $0x30,%rsp
ffffffff8000a244:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff8000a248:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
ffffffff8000a24c:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
ffffffff8000a250:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8000a254:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8000a258:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff8000a25c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8000a260:	48 89 d6             	mov    %rdx,%rsi
ffffffff8000a263:	48 89 c7             	mov    %rax,%rdi
ffffffff8000a266:	e8 c5 f9 ff ff       	call   ffffffff80009c30 <block_can_split>
ffffffff8000a26b:	85 c0                	test   %eax,%eax
ffffffff8000a26d:	74 4d                	je     ffffffff8000a2bc <block_trim_free_leading+0x84>
ffffffff8000a26f:	b9 08 00 00 00       	mov    $0x8,%ecx
ffffffff8000a274:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8000a278:	48 29 c8             	sub    %rcx,%rax
ffffffff8000a27b:	48 89 c2             	mov    %rax,%rdx
ffffffff8000a27e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8000a282:	48 89 d6             	mov    %rdx,%rsi
ffffffff8000a285:	48 89 c7             	mov    %rax,%rdi
ffffffff8000a288:	e8 d6 f9 ff ff       	call   ffffffff80009c63 <block_split>
ffffffff8000a28d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8000a291:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000a295:	48 89 c7             	mov    %rax,%rdi
ffffffff8000a298:	e8 37 ef ff ff       	call   ffffffff800091d4 <block_set_prev_free>
ffffffff8000a29d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8000a2a1:	48 89 c7             	mov    %rax,%rdi
ffffffff8000a2a4:	e8 eb f0 ff ff       	call   ffffffff80009394 <block_link_next>
ffffffff8000a2a9:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff8000a2ad:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000a2b1:	48 89 d6             	mov    %rdx,%rsi
ffffffff8000a2b4:	48 89 c7             	mov    %rax,%rdi
ffffffff8000a2b7:	e8 25 f9 ff ff       	call   ffffffff80009be1 <block_insert>
ffffffff8000a2bc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000a2c0:	c9                   	leave  
ffffffff8000a2c1:	c3                   	ret    

ffffffff8000a2c2 <block_locate_free>:
ffffffff8000a2c2:	f3 0f 1e fa          	endbr64 
ffffffff8000a2c6:	55                   	push   %rbp
ffffffff8000a2c7:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000a2ca:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff8000a2ce:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff8000a2d2:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
ffffffff8000a2d6:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
ffffffff8000a2dd:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
ffffffff8000a2e4:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
ffffffff8000a2eb:	00 
ffffffff8000a2ec:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
ffffffff8000a2f1:	74 3a                	je     ffffffff8000a32d <block_locate_free+0x6b>
ffffffff8000a2f3:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
ffffffff8000a2f7:	48 8d 45 f4          	lea    -0xc(%rbp),%rax
ffffffff8000a2fb:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
ffffffff8000a2ff:	48 89 c6             	mov    %rax,%rsi
ffffffff8000a302:	48 89 cf             	mov    %rcx,%rdi
ffffffff8000a305:	e8 89 f3 ff ff       	call   ffffffff80009693 <mapping_search>
ffffffff8000a30a:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff8000a30d:	83 f8 18             	cmp    $0x18,%eax
ffffffff8000a310:	7f 1b                	jg     ffffffff8000a32d <block_locate_free+0x6b>
ffffffff8000a312:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
ffffffff8000a316:	48 8d 45 f4          	lea    -0xc(%rbp),%rax
ffffffff8000a31a:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
ffffffff8000a31e:	48 89 c6             	mov    %rax,%rsi
ffffffff8000a321:	48 89 cf             	mov    %rcx,%rdi
ffffffff8000a324:	e8 d1 f3 ff ff       	call   ffffffff800096fa <search_suitable_block>
ffffffff8000a329:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8000a32d:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff8000a332:	74 65                	je     ffffffff8000a399 <block_locate_free+0xd7>
ffffffff8000a334:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000a338:	48 89 c7             	mov    %rax,%rdi
ffffffff8000a33b:	e8 61 ed ff ff       	call   ffffffff800090a1 <block_size>
ffffffff8000a340:	48 39 45 e0          	cmp    %rax,-0x20(%rbp)
ffffffff8000a344:	76 3d                	jbe    ffffffff8000a383 <block_locate_free+0xc1>
ffffffff8000a346:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000a34b:	e8 91 c9 ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff8000a350:	48 89 c6             	mov    %rax,%rsi
ffffffff8000a353:	41 b8 07 03 00 00    	mov    $0x307,%r8d
ffffffff8000a359:	48 8d 05 17 e0 02 00 	lea    0x2e017(%rip),%rax        # ffffffff80038377 <g_stivale2_header+0x1377>
ffffffff8000a360:	48 89 c1             	mov    %rax,%rcx
ffffffff8000a363:	48 8d 05 06 33 03 00 	lea    0x33306(%rip),%rax        # ffffffff8003d670 <__FUNCTION__.7.lto_priv.0>
ffffffff8000a36a:	48 89 c2             	mov    %rax,%rdx
ffffffff8000a36d:	48 8d 05 4c 24 03 00 	lea    0x3244c(%rip),%rax        # ffffffff8003c7c0 <g_stivale2_header+0x57c0>
ffffffff8000a374:	48 89 c7             	mov    %rax,%rdi
ffffffff8000a377:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000a37c:	e8 bf 91 00 00       	call   ffffffff80013540 <printf_>
ffffffff8000a381:	0f 0b                	ud2    
ffffffff8000a383:	8b 4d f0             	mov    -0x10(%rbp),%ecx
ffffffff8000a386:	8b 55 f4             	mov    -0xc(%rbp),%edx
ffffffff8000a389:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
ffffffff8000a38d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000a391:	48 89 c7             	mov    %rax,%rdi
ffffffff8000a394:	e8 8a f4 ff ff       	call   ffffffff80009823 <remove_free_block>
ffffffff8000a399:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000a39d:	90                   	nop
ffffffff8000a39e:	c9                   	leave  
ffffffff8000a39f:	c3                   	ret    

ffffffff8000a3a0 <block_prepare_used>:
ffffffff8000a3a0:	f3 0f 1e fa          	endbr64 
ffffffff8000a3a4:	55                   	push   %rbp
ffffffff8000a3a5:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000a3a8:	48 83 ec 30          	sub    $0x30,%rsp
ffffffff8000a3ac:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff8000a3b0:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
ffffffff8000a3b4:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
ffffffff8000a3b8:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
ffffffff8000a3bf:	00 
ffffffff8000a3c0:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
ffffffff8000a3c5:	74 77                	je     ffffffff8000a43e <block_prepare_used+0x9e>
ffffffff8000a3c7:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
ffffffff8000a3cc:	75 3d                	jne    ffffffff8000a40b <block_prepare_used+0x6b>
ffffffff8000a3ce:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000a3d3:	e8 09 c9 ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff8000a3d8:	48 89 c6             	mov    %rax,%rsi
ffffffff8000a3db:	41 b8 13 03 00 00    	mov    $0x313,%r8d
ffffffff8000a3e1:	48 8d 05 8f df 02 00 	lea    0x2df8f(%rip),%rax        # ffffffff80038377 <g_stivale2_header+0x1377>
ffffffff8000a3e8:	48 89 c1             	mov    %rax,%rcx
ffffffff8000a3eb:	48 8d 05 9e 32 03 00 	lea    0x3329e(%rip),%rax        # ffffffff8003d690 <__FUNCTION__.6.lto_priv.1>
ffffffff8000a3f2:	48 89 c2             	mov    %rax,%rdx
ffffffff8000a3f5:	48 8d 05 c4 23 03 00 	lea    0x323c4(%rip),%rax        # ffffffff8003c7c0 <g_stivale2_header+0x57c0>
ffffffff8000a3fc:	48 89 c7             	mov    %rax,%rdi
ffffffff8000a3ff:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000a404:	e8 37 91 00 00       	call   ffffffff80013540 <printf_>
ffffffff8000a409:	0f 0b                	ud2    
ffffffff8000a40b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff8000a40f:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
ffffffff8000a413:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000a417:	48 89 ce             	mov    %rcx,%rsi
ffffffff8000a41a:	48 89 c7             	mov    %rax,%rdi
ffffffff8000a41d:	e8 89 fc ff ff       	call   ffffffff8000a0ab <block_trim_free>
ffffffff8000a422:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8000a426:	48 89 c7             	mov    %rax,%rdi
ffffffff8000a429:	e8 d2 ef ff ff       	call   ffffffff80009400 <block_mark_as_used>
ffffffff8000a42e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8000a432:	48 89 c7             	mov    %rax,%rdi
ffffffff8000a435:	e8 17 ee ff ff       	call   ffffffff80009251 <block_to_ptr>
ffffffff8000a43a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8000a43e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000a442:	90                   	nop
ffffffff8000a443:	90                   	nop
ffffffff8000a444:	c9                   	leave  
ffffffff8000a445:	c3                   	ret    

ffffffff8000a446 <control_construct>:
ffffffff8000a446:	f3 0f 1e fa          	endbr64 
ffffffff8000a44a:	55                   	push   %rbp
ffffffff8000a44b:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000a44e:	48 83 ec 18          	sub    $0x18,%rsp
ffffffff8000a452:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff8000a456:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff8000a45a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000a45e:	48 89 50 10          	mov    %rdx,0x10(%rax)
ffffffff8000a462:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff8000a466:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000a46a:	48 89 50 18          	mov    %rdx,0x18(%rax)
ffffffff8000a46e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000a472:	c7 40 20 00 00 00 00 	movl   $0x0,0x20(%rax)
ffffffff8000a479:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
ffffffff8000a480:	eb 51                	jmp    ffffffff8000a4d3 <control_construct+0x8d>
ffffffff8000a482:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000a486:	8b 55 fc             	mov    -0x4(%rbp),%edx
ffffffff8000a489:	48 63 d2             	movslq %edx,%rdx
ffffffff8000a48c:	48 83 c2 08          	add    $0x8,%rdx
ffffffff8000a490:	c7 44 90 04 00 00 00 	movl   $0x0,0x4(%rax,%rdx,4)
ffffffff8000a497:	00 
ffffffff8000a498:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
ffffffff8000a49f:	eb 28                	jmp    ffffffff8000a4c9 <control_construct+0x83>
ffffffff8000a4a1:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
ffffffff8000a4a5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000a4a9:	8b 55 f8             	mov    -0x8(%rbp),%edx
ffffffff8000a4ac:	48 63 f2             	movslq %edx,%rsi
ffffffff8000a4af:	8b 55 fc             	mov    -0x4(%rbp),%edx
ffffffff8000a4b2:	48 63 d2             	movslq %edx,%rdx
ffffffff8000a4b5:	48 c1 e2 05          	shl    $0x5,%rdx
ffffffff8000a4b9:	48 01 f2             	add    %rsi,%rdx
ffffffff8000a4bc:	48 83 c2 10          	add    $0x10,%rdx
ffffffff8000a4c0:	48 89 4c d0 08       	mov    %rcx,0x8(%rax,%rdx,8)
ffffffff8000a4c5:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)
ffffffff8000a4c9:	83 7d f8 1f          	cmpl   $0x1f,-0x8(%rbp)
ffffffff8000a4cd:	7e d2                	jle    ffffffff8000a4a1 <control_construct+0x5b>
ffffffff8000a4cf:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
ffffffff8000a4d3:	83 7d fc 18          	cmpl   $0x18,-0x4(%rbp)
ffffffff8000a4d7:	7e a9                	jle    ffffffff8000a482 <control_construct+0x3c>
ffffffff8000a4d9:	90                   	nop
ffffffff8000a4da:	90                   	nop
ffffffff8000a4db:	c9                   	leave  
ffffffff8000a4dc:	c3                   	ret    

ffffffff8000a4dd <integrity_walker>:
ffffffff8000a4dd:	f3 0f 1e fa          	endbr64 
ffffffff8000a4e1:	55                   	push   %rbp
ffffffff8000a4e2:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000a4e5:	48 83 ec 50          	sub    $0x50,%rsp
ffffffff8000a4e9:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
ffffffff8000a4ed:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
ffffffff8000a4f1:	89 55 bc             	mov    %edx,-0x44(%rbp)
ffffffff8000a4f4:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
ffffffff8000a4f8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8000a4fc:	48 89 c7             	mov    %rax,%rdi
ffffffff8000a4ff:	e8 29 ed ff ff       	call   ffffffff8000922d <block_from_ptr>
ffffffff8000a504:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff8000a508:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
ffffffff8000a50c:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff8000a510:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8000a514:	48 89 c7             	mov    %rax,%rdi
ffffffff8000a517:	e8 95 ec ff ff       	call   ffffffff800091b1 <block_is_prev_free>
ffffffff8000a51c:	85 c0                	test   %eax,%eax
ffffffff8000a51e:	0f 95 c0             	setne  %al
ffffffff8000a521:	0f b6 c0             	movzbl %al,%eax
ffffffff8000a524:	89 45 e4             	mov    %eax,-0x1c(%rbp)
ffffffff8000a527:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8000a52b:	48 89 c7             	mov    %rax,%rdi
ffffffff8000a52e:	e8 02 ec ff ff       	call   ffffffff80009135 <block_is_free>
ffffffff8000a533:	85 c0                	test   %eax,%eax
ffffffff8000a535:	0f 95 c0             	setne  %al
ffffffff8000a538:	0f b6 c0             	movzbl %al,%eax
ffffffff8000a53b:	89 45 e0             	mov    %eax,-0x20(%rbp)
ffffffff8000a53e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8000a542:	48 89 c7             	mov    %rax,%rdi
ffffffff8000a545:	e8 57 eb ff ff       	call   ffffffff800090a1 <block_size>
ffffffff8000a54a:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
ffffffff8000a54e:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
ffffffff8000a555:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000a559:	8b 00                	mov    (%rax),%eax
ffffffff8000a55b:	39 45 e4             	cmp    %eax,-0x1c(%rbp)
ffffffff8000a55e:	74 3d                	je     ffffffff8000a59d <integrity_walker+0xc0>
ffffffff8000a560:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000a565:	e8 77 c7 ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff8000a56a:	48 89 c6             	mov    %rax,%rsi
ffffffff8000a56d:	41 b8 44 03 00 00    	mov    $0x344,%r8d
ffffffff8000a573:	48 8d 05 fd dd 02 00 	lea    0x2ddfd(%rip),%rax        # ffffffff80038377 <g_stivale2_header+0x1377>
ffffffff8000a57a:	48 89 c1             	mov    %rax,%rcx
ffffffff8000a57d:	48 8d 05 2c 31 03 00 	lea    0x3312c(%rip),%rax        # ffffffff8003d6b0 <__FUNCTION__.5.lto_priv.1>
ffffffff8000a584:	48 89 c2             	mov    %rax,%rdx
ffffffff8000a587:	48 8d 05 32 22 03 00 	lea    0x32232(%rip),%rax        # ffffffff8003c7c0 <g_stivale2_header+0x57c0>
ffffffff8000a58e:	48 89 c7             	mov    %rax,%rdi
ffffffff8000a591:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000a596:	e8 a5 8f 00 00       	call   ffffffff80013540 <printf_>
ffffffff8000a59b:	0f 0b                	ud2    
ffffffff8000a59d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000a5a1:	8b 00                	mov    (%rax),%eax
ffffffff8000a5a3:	39 45 e4             	cmp    %eax,-0x1c(%rbp)
ffffffff8000a5a6:	74 04                	je     ffffffff8000a5ac <integrity_walker+0xcf>
ffffffff8000a5a8:	83 6d fc 01          	subl   $0x1,-0x4(%rbp)
ffffffff8000a5ac:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8000a5b0:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
ffffffff8000a5b4:	74 3d                	je     ffffffff8000a5f3 <integrity_walker+0x116>
ffffffff8000a5b6:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000a5bb:	e8 21 c7 ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff8000a5c0:	48 89 c6             	mov    %rax,%rsi
ffffffff8000a5c3:	41 b8 45 03 00 00    	mov    $0x345,%r8d
ffffffff8000a5c9:	48 8d 05 a7 dd 02 00 	lea    0x2dda7(%rip),%rax        # ffffffff80038377 <g_stivale2_header+0x1377>
ffffffff8000a5d0:	48 89 c1             	mov    %rax,%rcx
ffffffff8000a5d3:	48 8d 05 d6 30 03 00 	lea    0x330d6(%rip),%rax        # ffffffff8003d6b0 <__FUNCTION__.5.lto_priv.1>
ffffffff8000a5da:	48 89 c2             	mov    %rax,%rdx
ffffffff8000a5dd:	48 8d 05 dc 21 03 00 	lea    0x321dc(%rip),%rax        # ffffffff8003c7c0 <g_stivale2_header+0x57c0>
ffffffff8000a5e4:	48 89 c7             	mov    %rax,%rdi
ffffffff8000a5e7:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000a5ec:	e8 4f 8f 00 00       	call   ffffffff80013540 <printf_>
ffffffff8000a5f1:	0f 0b                	ud2    
ffffffff8000a5f3:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8000a5f7:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
ffffffff8000a5fb:	74 04                	je     ffffffff8000a601 <integrity_walker+0x124>
ffffffff8000a5fd:	83 6d fc 01          	subl   $0x1,-0x4(%rbp)
ffffffff8000a601:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000a605:	8b 55 e0             	mov    -0x20(%rbp),%edx
ffffffff8000a608:	89 10                	mov    %edx,(%rax)
ffffffff8000a60a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000a60e:	8b 50 04             	mov    0x4(%rax),%edx
ffffffff8000a611:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8000a614:	01 c2                	add    %eax,%edx
ffffffff8000a616:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000a61a:	89 50 04             	mov    %edx,0x4(%rax)
ffffffff8000a61d:	90                   	nop
ffffffff8000a61e:	c9                   	leave  
ffffffff8000a61f:	c3                   	ret    

ffffffff8000a620 <tlsf_check>:
ffffffff8000a620:	f3 0f 1e fa          	endbr64 
ffffffff8000a624:	55                   	push   %rbp
ffffffff8000a625:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000a628:	48 83 ec 50          	sub    $0x50,%rsp
ffffffff8000a62c:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
ffffffff8000a630:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff8000a634:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff8000a638:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
ffffffff8000a63f:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
ffffffff8000a646:	e9 98 04 00 00       	jmp    ffffffff8000aae3 <tlsf_check+0x4c3>
ffffffff8000a64b:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
ffffffff8000a652:	e9 7e 04 00 00       	jmp    ffffffff8000aad5 <tlsf_check+0x4b5>
ffffffff8000a657:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8000a65b:	8b 50 20             	mov    0x20(%rax),%edx
ffffffff8000a65e:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8000a661:	be 01 00 00 00       	mov    $0x1,%esi
ffffffff8000a666:	89 c1                	mov    %eax,%ecx
ffffffff8000a668:	d3 e6                	shl    %cl,%esi
ffffffff8000a66a:	89 f0                	mov    %esi,%eax
ffffffff8000a66c:	21 d0                	and    %edx,%eax
ffffffff8000a66e:	89 45 dc             	mov    %eax,-0x24(%rbp)
ffffffff8000a671:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8000a675:	8b 55 fc             	mov    -0x4(%rbp),%edx
ffffffff8000a678:	48 63 d2             	movslq %edx,%rdx
ffffffff8000a67b:	48 83 c2 08          	add    $0x8,%rdx
ffffffff8000a67f:	8b 44 90 04          	mov    0x4(%rax,%rdx,4),%eax
ffffffff8000a683:	89 45 d8             	mov    %eax,-0x28(%rbp)
ffffffff8000a686:	8b 45 f8             	mov    -0x8(%rbp),%eax
ffffffff8000a689:	ba 01 00 00 00       	mov    $0x1,%edx
ffffffff8000a68e:	89 c1                	mov    %eax,%ecx
ffffffff8000a690:	d3 e2                	shl    %cl,%edx
ffffffff8000a692:	8b 45 d8             	mov    -0x28(%rbp),%eax
ffffffff8000a695:	21 d0                	and    %edx,%eax
ffffffff8000a697:	89 45 d4             	mov    %eax,-0x2c(%rbp)
ffffffff8000a69a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8000a69e:	8b 55 f8             	mov    -0x8(%rbp),%edx
ffffffff8000a6a1:	48 63 ca             	movslq %edx,%rcx
ffffffff8000a6a4:	8b 55 fc             	mov    -0x4(%rbp),%edx
ffffffff8000a6a7:	48 63 d2             	movslq %edx,%rdx
ffffffff8000a6aa:	48 c1 e2 05          	shl    $0x5,%rdx
ffffffff8000a6ae:	48 01 ca             	add    %rcx,%rdx
ffffffff8000a6b1:	48 83 c2 10          	add    $0x10,%rdx
ffffffff8000a6b5:	48 8b 44 d0 08       	mov    0x8(%rax,%rdx,8),%rax
ffffffff8000a6ba:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff8000a6be:	83 7d dc 00          	cmpl   $0x0,-0x24(%rbp)
ffffffff8000a6c2:	75 4d                	jne    ffffffff8000a711 <tlsf_check+0xf1>
ffffffff8000a6c4:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
ffffffff8000a6c8:	74 3d                	je     ffffffff8000a707 <tlsf_check+0xe7>
ffffffff8000a6ca:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000a6cf:	e8 0d c6 ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff8000a6d4:	48 89 c6             	mov    %rax,%rsi
ffffffff8000a6d7:	41 b8 5f 03 00 00    	mov    $0x35f,%r8d
ffffffff8000a6dd:	48 8d 05 93 dc 02 00 	lea    0x2dc93(%rip),%rax        # ffffffff80038377 <g_stivale2_header+0x1377>
ffffffff8000a6e4:	48 89 c1             	mov    %rax,%rcx
ffffffff8000a6e7:	48 8d 05 da 2f 03 00 	lea    0x32fda(%rip),%rax        # ffffffff8003d6c8 <__FUNCTION__.4.lto_priv.1>
ffffffff8000a6ee:	48 89 c2             	mov    %rax,%rdx
ffffffff8000a6f1:	48 8d 05 c8 20 03 00 	lea    0x320c8(%rip),%rax        # ffffffff8003c7c0 <g_stivale2_header+0x57c0>
ffffffff8000a6f8:	48 89 c7             	mov    %rax,%rdi
ffffffff8000a6fb:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000a700:	e8 3b 8e 00 00       	call   ffffffff80013540 <printf_>
ffffffff8000a705:	0f 0b                	ud2    
ffffffff8000a707:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
ffffffff8000a70b:	74 04                	je     ffffffff8000a711 <tlsf_check+0xf1>
ffffffff8000a70d:	83 6d f4 01          	subl   $0x1,-0xc(%rbp)
ffffffff8000a711:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
ffffffff8000a715:	75 5e                	jne    ffffffff8000a775 <tlsf_check+0x155>
ffffffff8000a717:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8000a71b:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
ffffffff8000a71f:	74 3d                	je     ffffffff8000a75e <tlsf_check+0x13e>
ffffffff8000a721:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000a726:	e8 b6 c5 ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff8000a72b:	48 89 c6             	mov    %rax,%rsi
ffffffff8000a72e:	41 b8 64 03 00 00    	mov    $0x364,%r8d
ffffffff8000a734:	48 8d 05 3c dc 02 00 	lea    0x2dc3c(%rip),%rax        # ffffffff80038377 <g_stivale2_header+0x1377>
ffffffff8000a73b:	48 89 c1             	mov    %rax,%rcx
ffffffff8000a73e:	48 8d 05 83 2f 03 00 	lea    0x32f83(%rip),%rax        # ffffffff8003d6c8 <__FUNCTION__.4.lto_priv.1>
ffffffff8000a745:	48 89 c2             	mov    %rax,%rdx
ffffffff8000a748:	48 8d 05 71 20 03 00 	lea    0x32071(%rip),%rax        # ffffffff8003c7c0 <g_stivale2_header+0x57c0>
ffffffff8000a74f:	48 89 c7             	mov    %rax,%rdi
ffffffff8000a752:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000a757:	e8 e4 8d 00 00       	call   ffffffff80013540 <printf_>
ffffffff8000a75c:	0f 0b                	ud2    
ffffffff8000a75e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8000a762:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
ffffffff8000a766:	0f 84 64 03 00 00    	je     ffffffff8000aad0 <tlsf_check+0x4b0>
ffffffff8000a76c:	83 6d f4 01          	subl   $0x1,-0xc(%rbp)
ffffffff8000a770:	e9 5b 03 00 00       	jmp    ffffffff8000aad0 <tlsf_check+0x4b0>
ffffffff8000a775:	83 7d d8 00          	cmpl   $0x0,-0x28(%rbp)
ffffffff8000a779:	75 3d                	jne    ffffffff8000a7b8 <tlsf_check+0x198>
ffffffff8000a77b:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000a780:	e8 5c c5 ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff8000a785:	48 89 c6             	mov    %rax,%rsi
ffffffff8000a788:	41 b8 69 03 00 00    	mov    $0x369,%r8d
ffffffff8000a78e:	48 8d 05 e2 db 02 00 	lea    0x2dbe2(%rip),%rax        # ffffffff80038377 <g_stivale2_header+0x1377>
ffffffff8000a795:	48 89 c1             	mov    %rax,%rcx
ffffffff8000a798:	48 8d 05 29 2f 03 00 	lea    0x32f29(%rip),%rax        # ffffffff8003d6c8 <__FUNCTION__.4.lto_priv.1>
ffffffff8000a79f:	48 89 c2             	mov    %rax,%rdx
ffffffff8000a7a2:	48 8d 05 17 20 03 00 	lea    0x32017(%rip),%rax        # ffffffff8003c7c0 <g_stivale2_header+0x57c0>
ffffffff8000a7a9:	48 89 c7             	mov    %rax,%rdi
ffffffff8000a7ac:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000a7b1:	e8 8a 8d 00 00       	call   ffffffff80013540 <printf_>
ffffffff8000a7b6:	0f 0b                	ud2    
ffffffff8000a7b8:	83 7d d8 00          	cmpl   $0x0,-0x28(%rbp)
ffffffff8000a7bc:	75 04                	jne    ffffffff8000a7c2 <tlsf_check+0x1a2>
ffffffff8000a7be:	83 6d f4 01          	subl   $0x1,-0xc(%rbp)
ffffffff8000a7c2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8000a7c6:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
ffffffff8000a7ca:	75 3d                	jne    ffffffff8000a809 <tlsf_check+0x1e9>
ffffffff8000a7cc:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000a7d1:	e8 0b c5 ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff8000a7d6:	48 89 c6             	mov    %rax,%rsi
ffffffff8000a7d9:	41 b8 6a 03 00 00    	mov    $0x36a,%r8d
ffffffff8000a7df:	48 8d 05 91 db 02 00 	lea    0x2db91(%rip),%rax        # ffffffff80038377 <g_stivale2_header+0x1377>
ffffffff8000a7e6:	48 89 c1             	mov    %rax,%rcx
ffffffff8000a7e9:	48 8d 05 d8 2e 03 00 	lea    0x32ed8(%rip),%rax        # ffffffff8003d6c8 <__FUNCTION__.4.lto_priv.1>
ffffffff8000a7f0:	48 89 c2             	mov    %rax,%rdx
ffffffff8000a7f3:	48 8d 05 c6 1f 03 00 	lea    0x31fc6(%rip),%rax        # ffffffff8003c7c0 <g_stivale2_header+0x57c0>
ffffffff8000a7fa:	48 89 c7             	mov    %rax,%rdi
ffffffff8000a7fd:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000a802:	e8 39 8d 00 00       	call   ffffffff80013540 <printf_>
ffffffff8000a807:	0f 0b                	ud2    
ffffffff8000a809:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8000a80d:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
ffffffff8000a811:	0f 85 a9 02 00 00    	jne    ffffffff8000aac0 <tlsf_check+0x4a0>
ffffffff8000a817:	83 6d f4 01          	subl   $0x1,-0xc(%rbp)
ffffffff8000a81b:	e9 a0 02 00 00       	jmp    ffffffff8000aac0 <tlsf_check+0x4a0>
ffffffff8000a820:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000a824:	48 89 c7             	mov    %rax,%rdi
ffffffff8000a827:	e8 09 e9 ff ff       	call   ffffffff80009135 <block_is_free>
ffffffff8000a82c:	85 c0                	test   %eax,%eax
ffffffff8000a82e:	75 3d                	jne    ffffffff8000a86d <tlsf_check+0x24d>
ffffffff8000a830:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000a835:	e8 a7 c4 ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff8000a83a:	48 89 c6             	mov    %rax,%rsi
ffffffff8000a83d:	41 b8 6f 03 00 00    	mov    $0x36f,%r8d
ffffffff8000a843:	48 8d 05 2d db 02 00 	lea    0x2db2d(%rip),%rax        # ffffffff80038377 <g_stivale2_header+0x1377>
ffffffff8000a84a:	48 89 c1             	mov    %rax,%rcx
ffffffff8000a84d:	48 8d 05 74 2e 03 00 	lea    0x32e74(%rip),%rax        # ffffffff8003d6c8 <__FUNCTION__.4.lto_priv.1>
ffffffff8000a854:	48 89 c2             	mov    %rax,%rdx
ffffffff8000a857:	48 8d 05 62 1f 03 00 	lea    0x31f62(%rip),%rax        # ffffffff8003c7c0 <g_stivale2_header+0x57c0>
ffffffff8000a85e:	48 89 c7             	mov    %rax,%rdi
ffffffff8000a861:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000a866:	e8 d5 8c 00 00       	call   ffffffff80013540 <printf_>
ffffffff8000a86b:	0f 0b                	ud2    
ffffffff8000a86d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000a871:	48 89 c7             	mov    %rax,%rdi
ffffffff8000a874:	e8 bc e8 ff ff       	call   ffffffff80009135 <block_is_free>
ffffffff8000a879:	85 c0                	test   %eax,%eax
ffffffff8000a87b:	75 04                	jne    ffffffff8000a881 <tlsf_check+0x261>
ffffffff8000a87d:	83 6d f4 01          	subl   $0x1,-0xc(%rbp)
ffffffff8000a881:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000a885:	48 89 c7             	mov    %rax,%rdi
ffffffff8000a888:	e8 24 e9 ff ff       	call   ffffffff800091b1 <block_is_prev_free>
ffffffff8000a88d:	85 c0                	test   %eax,%eax
ffffffff8000a88f:	74 3d                	je     ffffffff8000a8ce <tlsf_check+0x2ae>
ffffffff8000a891:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000a896:	e8 46 c4 ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff8000a89b:	48 89 c6             	mov    %rax,%rsi
ffffffff8000a89e:	41 b8 70 03 00 00    	mov    $0x370,%r8d
ffffffff8000a8a4:	48 8d 05 cc da 02 00 	lea    0x2dacc(%rip),%rax        # ffffffff80038377 <g_stivale2_header+0x1377>
ffffffff8000a8ab:	48 89 c1             	mov    %rax,%rcx
ffffffff8000a8ae:	48 8d 05 13 2e 03 00 	lea    0x32e13(%rip),%rax        # ffffffff8003d6c8 <__FUNCTION__.4.lto_priv.1>
ffffffff8000a8b5:	48 89 c2             	mov    %rax,%rdx
ffffffff8000a8b8:	48 8d 05 01 1f 03 00 	lea    0x31f01(%rip),%rax        # ffffffff8003c7c0 <g_stivale2_header+0x57c0>
ffffffff8000a8bf:	48 89 c7             	mov    %rax,%rdi
ffffffff8000a8c2:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000a8c7:	e8 74 8c 00 00       	call   ffffffff80013540 <printf_>
ffffffff8000a8cc:	0f 0b                	ud2    
ffffffff8000a8ce:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000a8d2:	48 89 c7             	mov    %rax,%rdi
ffffffff8000a8d5:	e8 d7 e8 ff ff       	call   ffffffff800091b1 <block_is_prev_free>
ffffffff8000a8da:	85 c0                	test   %eax,%eax
ffffffff8000a8dc:	74 04                	je     ffffffff8000a8e2 <tlsf_check+0x2c2>
ffffffff8000a8de:	83 6d f4 01          	subl   $0x1,-0xc(%rbp)
ffffffff8000a8e2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000a8e6:	48 89 c7             	mov    %rax,%rdi
ffffffff8000a8e9:	e8 0a ea ff ff       	call   ffffffff800092f8 <block_next>
ffffffff8000a8ee:	48 89 c7             	mov    %rax,%rdi
ffffffff8000a8f1:	e8 3f e8 ff ff       	call   ffffffff80009135 <block_is_free>
ffffffff8000a8f6:	85 c0                	test   %eax,%eax
ffffffff8000a8f8:	74 3d                	je     ffffffff8000a937 <tlsf_check+0x317>
ffffffff8000a8fa:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000a8ff:	e8 dd c3 ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff8000a904:	48 89 c6             	mov    %rax,%rsi
ffffffff8000a907:	41 b8 71 03 00 00    	mov    $0x371,%r8d
ffffffff8000a90d:	48 8d 05 63 da 02 00 	lea    0x2da63(%rip),%rax        # ffffffff80038377 <g_stivale2_header+0x1377>
ffffffff8000a914:	48 89 c1             	mov    %rax,%rcx
ffffffff8000a917:	48 8d 05 aa 2d 03 00 	lea    0x32daa(%rip),%rax        # ffffffff8003d6c8 <__FUNCTION__.4.lto_priv.1>
ffffffff8000a91e:	48 89 c2             	mov    %rax,%rdx
ffffffff8000a921:	48 8d 05 98 1e 03 00 	lea    0x31e98(%rip),%rax        # ffffffff8003c7c0 <g_stivale2_header+0x57c0>
ffffffff8000a928:	48 89 c7             	mov    %rax,%rdi
ffffffff8000a92b:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000a930:	e8 0b 8c 00 00       	call   ffffffff80013540 <printf_>
ffffffff8000a935:	0f 0b                	ud2    
ffffffff8000a937:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000a93b:	48 89 c7             	mov    %rax,%rdi
ffffffff8000a93e:	e8 b5 e9 ff ff       	call   ffffffff800092f8 <block_next>
ffffffff8000a943:	48 89 c7             	mov    %rax,%rdi
ffffffff8000a946:	e8 ea e7 ff ff       	call   ffffffff80009135 <block_is_free>
ffffffff8000a94b:	85 c0                	test   %eax,%eax
ffffffff8000a94d:	74 04                	je     ffffffff8000a953 <tlsf_check+0x333>
ffffffff8000a94f:	83 6d f4 01          	subl   $0x1,-0xc(%rbp)
ffffffff8000a953:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000a957:	48 89 c7             	mov    %rax,%rdi
ffffffff8000a95a:	e8 99 e9 ff ff       	call   ffffffff800092f8 <block_next>
ffffffff8000a95f:	48 89 c7             	mov    %rax,%rdi
ffffffff8000a962:	e8 4a e8 ff ff       	call   ffffffff800091b1 <block_is_prev_free>
ffffffff8000a967:	85 c0                	test   %eax,%eax
ffffffff8000a969:	75 3d                	jne    ffffffff8000a9a8 <tlsf_check+0x388>
ffffffff8000a96b:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000a970:	e8 6c c3 ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff8000a975:	48 89 c6             	mov    %rax,%rsi
ffffffff8000a978:	41 b8 72 03 00 00    	mov    $0x372,%r8d
ffffffff8000a97e:	48 8d 05 f2 d9 02 00 	lea    0x2d9f2(%rip),%rax        # ffffffff80038377 <g_stivale2_header+0x1377>
ffffffff8000a985:	48 89 c1             	mov    %rax,%rcx
ffffffff8000a988:	48 8d 05 39 2d 03 00 	lea    0x32d39(%rip),%rax        # ffffffff8003d6c8 <__FUNCTION__.4.lto_priv.1>
ffffffff8000a98f:	48 89 c2             	mov    %rax,%rdx
ffffffff8000a992:	48 8d 05 27 1e 03 00 	lea    0x31e27(%rip),%rax        # ffffffff8003c7c0 <g_stivale2_header+0x57c0>
ffffffff8000a999:	48 89 c7             	mov    %rax,%rdi
ffffffff8000a99c:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000a9a1:	e8 9a 8b 00 00       	call   ffffffff80013540 <printf_>
ffffffff8000a9a6:	0f 0b                	ud2    
ffffffff8000a9a8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000a9ac:	48 89 c7             	mov    %rax,%rdi
ffffffff8000a9af:	e8 44 e9 ff ff       	call   ffffffff800092f8 <block_next>
ffffffff8000a9b4:	48 89 c7             	mov    %rax,%rdi
ffffffff8000a9b7:	e8 f5 e7 ff ff       	call   ffffffff800091b1 <block_is_prev_free>
ffffffff8000a9bc:	85 c0                	test   %eax,%eax
ffffffff8000a9be:	75 04                	jne    ffffffff8000a9c4 <tlsf_check+0x3a4>
ffffffff8000a9c0:	83 6d f4 01          	subl   $0x1,-0xc(%rbp)
ffffffff8000a9c4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000a9c8:	48 89 c7             	mov    %rax,%rdi
ffffffff8000a9cb:	e8 d1 e6 ff ff       	call   ffffffff800090a1 <block_size>
ffffffff8000a9d0:	ba 18 00 00 00       	mov    $0x18,%edx
ffffffff8000a9d5:	48 39 d0             	cmp    %rdx,%rax
ffffffff8000a9d8:	73 3d                	jae    ffffffff8000aa17 <tlsf_check+0x3f7>
ffffffff8000a9da:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000a9df:	e8 fd c2 ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff8000a9e4:	48 89 c6             	mov    %rax,%rsi
ffffffff8000a9e7:	41 b8 73 03 00 00    	mov    $0x373,%r8d
ffffffff8000a9ed:	48 8d 05 83 d9 02 00 	lea    0x2d983(%rip),%rax        # ffffffff80038377 <g_stivale2_header+0x1377>
ffffffff8000a9f4:	48 89 c1             	mov    %rax,%rcx
ffffffff8000a9f7:	48 8d 05 ca 2c 03 00 	lea    0x32cca(%rip),%rax        # ffffffff8003d6c8 <__FUNCTION__.4.lto_priv.1>
ffffffff8000a9fe:	48 89 c2             	mov    %rax,%rdx
ffffffff8000aa01:	48 8d 05 b8 1d 03 00 	lea    0x31db8(%rip),%rax        # ffffffff8003c7c0 <g_stivale2_header+0x57c0>
ffffffff8000aa08:	48 89 c7             	mov    %rax,%rdi
ffffffff8000aa0b:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000aa10:	e8 2b 8b 00 00       	call   ffffffff80013540 <printf_>
ffffffff8000aa15:	0f 0b                	ud2    
ffffffff8000aa17:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000aa1b:	48 89 c7             	mov    %rax,%rdi
ffffffff8000aa1e:	e8 7e e6 ff ff       	call   ffffffff800090a1 <block_size>
ffffffff8000aa23:	ba 18 00 00 00       	mov    $0x18,%edx
ffffffff8000aa28:	48 39 d0             	cmp    %rdx,%rax
ffffffff8000aa2b:	73 04                	jae    ffffffff8000aa31 <tlsf_check+0x411>
ffffffff8000aa2d:	83 6d f4 01          	subl   $0x1,-0xc(%rbp)
ffffffff8000aa31:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000aa35:	48 89 c7             	mov    %rax,%rdi
ffffffff8000aa38:	e8 64 e6 ff ff       	call   ffffffff800090a1 <block_size>
ffffffff8000aa3d:	48 89 c1             	mov    %rax,%rcx
ffffffff8000aa40:	48 8d 55 cc          	lea    -0x34(%rbp),%rdx
ffffffff8000aa44:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
ffffffff8000aa48:	48 89 c6             	mov    %rax,%rsi
ffffffff8000aa4b:	48 89 cf             	mov    %rcx,%rdi
ffffffff8000aa4e:	e8 c3 eb ff ff       	call   ffffffff80009616 <mapping_insert>
ffffffff8000aa53:	8b 45 d0             	mov    -0x30(%rbp),%eax
ffffffff8000aa56:	39 45 fc             	cmp    %eax,-0x4(%rbp)
ffffffff8000aa59:	75 08                	jne    ffffffff8000aa63 <tlsf_check+0x443>
ffffffff8000aa5b:	8b 45 cc             	mov    -0x34(%rbp),%eax
ffffffff8000aa5e:	39 45 f8             	cmp    %eax,-0x8(%rbp)
ffffffff8000aa61:	74 3d                	je     ffffffff8000aaa0 <tlsf_check+0x480>
ffffffff8000aa63:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000aa68:	e8 74 c2 ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff8000aa6d:	48 89 c6             	mov    %rax,%rsi
ffffffff8000aa70:	41 b8 76 03 00 00    	mov    $0x376,%r8d
ffffffff8000aa76:	48 8d 05 fa d8 02 00 	lea    0x2d8fa(%rip),%rax        # ffffffff80038377 <g_stivale2_header+0x1377>
ffffffff8000aa7d:	48 89 c1             	mov    %rax,%rcx
ffffffff8000aa80:	48 8d 05 41 2c 03 00 	lea    0x32c41(%rip),%rax        # ffffffff8003d6c8 <__FUNCTION__.4.lto_priv.1>
ffffffff8000aa87:	48 89 c2             	mov    %rax,%rdx
ffffffff8000aa8a:	48 8d 05 2f 1d 03 00 	lea    0x31d2f(%rip),%rax        # ffffffff8003c7c0 <g_stivale2_header+0x57c0>
ffffffff8000aa91:	48 89 c7             	mov    %rax,%rdi
ffffffff8000aa94:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000aa99:	e8 a2 8a 00 00       	call   ffffffff80013540 <printf_>
ffffffff8000aa9e:	0f 0b                	ud2    
ffffffff8000aaa0:	8b 45 d0             	mov    -0x30(%rbp),%eax
ffffffff8000aaa3:	39 45 fc             	cmp    %eax,-0x4(%rbp)
ffffffff8000aaa6:	75 08                	jne    ffffffff8000aab0 <tlsf_check+0x490>
ffffffff8000aaa8:	8b 45 cc             	mov    -0x34(%rbp),%eax
ffffffff8000aaab:	39 45 f8             	cmp    %eax,-0x8(%rbp)
ffffffff8000aaae:	74 04                	je     ffffffff8000aab4 <tlsf_check+0x494>
ffffffff8000aab0:	83 6d f4 01          	subl   $0x1,-0xc(%rbp)
ffffffff8000aab4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000aab8:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff8000aabc:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff8000aac0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8000aac4:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
ffffffff8000aac8:	0f 85 52 fd ff ff    	jne    ffffffff8000a820 <tlsf_check+0x200>
ffffffff8000aace:	eb 01                	jmp    ffffffff8000aad1 <tlsf_check+0x4b1>
ffffffff8000aad0:	90                   	nop
ffffffff8000aad1:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)
ffffffff8000aad5:	83 7d f8 1f          	cmpl   $0x1f,-0x8(%rbp)
ffffffff8000aad9:	0f 8e 78 fb ff ff    	jle    ffffffff8000a657 <tlsf_check+0x37>
ffffffff8000aadf:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
ffffffff8000aae3:	83 7d fc 18          	cmpl   $0x18,-0x4(%rbp)
ffffffff8000aae7:	0f 8e 5e fb ff ff    	jle    ffffffff8000a64b <tlsf_check+0x2b>
ffffffff8000aaed:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff8000aaf0:	90                   	nop
ffffffff8000aaf1:	90                   	nop
ffffffff8000aaf2:	c9                   	leave  
ffffffff8000aaf3:	c3                   	ret    

ffffffff8000aaf4 <default_walker>:
ffffffff8000aaf4:	f3 0f 1e fa          	endbr64 
ffffffff8000aaf8:	55                   	push   %rbp
ffffffff8000aaf9:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000aafc:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff8000ab00:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8000ab04:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff8000ab08:	89 55 ec             	mov    %edx,-0x14(%rbp)
ffffffff8000ab0b:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
ffffffff8000ab0f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000ab13:	48 89 c7             	mov    %rax,%rdi
ffffffff8000ab16:	e8 12 e7 ff ff       	call   ffffffff8000922d <block_from_ptr>
ffffffff8000ab1b:	48 89 c2             	mov    %rax,%rdx
ffffffff8000ab1e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8000ab22:	89 c1                	mov    %eax,%ecx
ffffffff8000ab24:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
ffffffff8000ab28:	74 09                	je     ffffffff8000ab33 <default_walker+0x3f>
ffffffff8000ab2a:	48 8d 05 58 d8 02 00 	lea    0x2d858(%rip),%rax        # ffffffff80038389 <g_stivale2_header+0x1389>
ffffffff8000ab31:	eb 07                	jmp    ffffffff8000ab3a <default_walker+0x46>
ffffffff8000ab33:	48 8d 05 5c ed 02 00 	lea    0x2ed5c(%rip),%rax        # ffffffff80039896 <g_stivale2_header+0x2896>
ffffffff8000ab3a:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
ffffffff8000ab3e:	49 89 d0             	mov    %rdx,%r8
ffffffff8000ab41:	48 89 c2             	mov    %rax,%rdx
ffffffff8000ab44:	48 8d 05 43 d8 02 00 	lea    0x2d843(%rip),%rax        # ffffffff8003838e <g_stivale2_header+0x138e>
ffffffff8000ab4b:	48 89 c7             	mov    %rax,%rdi
ffffffff8000ab4e:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000ab53:	e8 e8 89 00 00       	call   ffffffff80013540 <printf_>
ffffffff8000ab58:	90                   	nop
ffffffff8000ab59:	c9                   	leave  
ffffffff8000ab5a:	c3                   	ret    

ffffffff8000ab5b <tlsf_walk_pool>:
ffffffff8000ab5b:	f3 0f 1e fa          	endbr64 
ffffffff8000ab5f:	55                   	push   %rbp
ffffffff8000ab60:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000ab63:	41 54                	push   %r12
ffffffff8000ab65:	53                   	push   %rbx
ffffffff8000ab66:	48 83 ec 30          	sub    $0x30,%rsp
ffffffff8000ab6a:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
ffffffff8000ab6e:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
ffffffff8000ab72:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
ffffffff8000ab76:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
ffffffff8000ab7b:	74 06                	je     ffffffff8000ab83 <tlsf_walk_pool+0x28>
ffffffff8000ab7d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8000ab81:	eb 07                	jmp    ffffffff8000ab8a <tlsf_walk_pool+0x2f>
ffffffff8000ab83:	48 8d 05 6a ff ff ff 	lea    -0x96(%rip),%rax        # ffffffff8000aaf4 <default_walker>
ffffffff8000ab8a:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff8000ab8e:	b8 08 00 00 00       	mov    $0x8,%eax
ffffffff8000ab93:	f7 d8                	neg    %eax
ffffffff8000ab95:	48 98                	cltq   
ffffffff8000ab97:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff8000ab9b:	48 89 c6             	mov    %rax,%rsi
ffffffff8000ab9e:	48 89 d7             	mov    %rdx,%rdi
ffffffff8000aba1:	e8 c9 e6 ff ff       	call   ffffffff8000926f <offset_to_block>
ffffffff8000aba6:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff8000abaa:	eb 55                	jmp    ffffffff8000ac01 <tlsf_walk_pool+0xa6>
ffffffff8000abac:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000abb0:	48 89 c7             	mov    %rax,%rdi
ffffffff8000abb3:	e8 7d e5 ff ff       	call   ffffffff80009135 <block_is_free>
ffffffff8000abb8:	85 c0                	test   %eax,%eax
ffffffff8000abba:	0f 94 c0             	sete   %al
ffffffff8000abbd:	0f b6 d8             	movzbl %al,%ebx
ffffffff8000abc0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000abc4:	48 89 c7             	mov    %rax,%rdi
ffffffff8000abc7:	e8 d5 e4 ff ff       	call   ffffffff800090a1 <block_size>
ffffffff8000abcc:	49 89 c4             	mov    %rax,%r12
ffffffff8000abcf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000abd3:	48 89 c7             	mov    %rax,%rdi
ffffffff8000abd6:	e8 76 e6 ff ff       	call   ffffffff80009251 <block_to_ptr>
ffffffff8000abdb:	48 89 c7             	mov    %rax,%rdi
ffffffff8000abde:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8000abe2:	4c 8b 45 e0          	mov    -0x20(%rbp),%r8
ffffffff8000abe6:	48 89 c1             	mov    %rax,%rcx
ffffffff8000abe9:	89 da                	mov    %ebx,%edx
ffffffff8000abeb:	4c 89 e6             	mov    %r12,%rsi
ffffffff8000abee:	41 ff d0             	call   *%r8
ffffffff8000abf1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000abf5:	48 89 c7             	mov    %rax,%rdi
ffffffff8000abf8:	e8 fb e6 ff ff       	call   ffffffff800092f8 <block_next>
ffffffff8000abfd:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff8000ac01:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
ffffffff8000ac06:	74 10                	je     ffffffff8000ac18 <tlsf_walk_pool+0xbd>
ffffffff8000ac08:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000ac0c:	48 89 c7             	mov    %rax,%rdi
ffffffff8000ac0f:	e8 fa e4 ff ff       	call   ffffffff8000910e <block_is_last>
ffffffff8000ac14:	85 c0                	test   %eax,%eax
ffffffff8000ac16:	74 94                	je     ffffffff8000abac <tlsf_walk_pool+0x51>
ffffffff8000ac18:	90                   	nop
ffffffff8000ac19:	48 83 c4 30          	add    $0x30,%rsp
ffffffff8000ac1d:	5b                   	pop    %rbx
ffffffff8000ac1e:	41 5c                	pop    %r12
ffffffff8000ac20:	5d                   	pop    %rbp
ffffffff8000ac21:	c3                   	ret    

ffffffff8000ac22 <tlsf_block_size>:
ffffffff8000ac22:	f3 0f 1e fa          	endbr64 
ffffffff8000ac26:	55                   	push   %rbp
ffffffff8000ac27:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000ac2a:	48 83 ec 18          	sub    $0x18,%rsp
ffffffff8000ac2e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff8000ac32:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
ffffffff8000ac39:	00 
ffffffff8000ac3a:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
ffffffff8000ac3f:	74 20                	je     ffffffff8000ac61 <tlsf_block_size+0x3f>
ffffffff8000ac41:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000ac45:	48 89 c7             	mov    %rax,%rdi
ffffffff8000ac48:	e8 e0 e5 ff ff       	call   ffffffff8000922d <block_from_ptr>
ffffffff8000ac4d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff8000ac51:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8000ac55:	48 89 c7             	mov    %rax,%rdi
ffffffff8000ac58:	e8 44 e4 ff ff       	call   ffffffff800090a1 <block_size>
ffffffff8000ac5d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8000ac61:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000ac65:	c9                   	leave  
ffffffff8000ac66:	c3                   	ret    

ffffffff8000ac67 <tlsf_check_pool>:
ffffffff8000ac67:	f3 0f 1e fa          	endbr64 
ffffffff8000ac6b:	55                   	push   %rbp
ffffffff8000ac6c:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000ac6f:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff8000ac73:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff8000ac77:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
ffffffff8000ac7e:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
ffffffff8000ac85:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
ffffffff8000ac89:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
ffffffff8000ac8d:	48 89 c2             	mov    %rax,%rdx
ffffffff8000ac90:	48 8d 05 46 f8 ff ff 	lea    -0x7ba(%rip),%rax        # ffffffff8000a4dd <integrity_walker>
ffffffff8000ac97:	48 89 c6             	mov    %rax,%rsi
ffffffff8000ac9a:	48 89 cf             	mov    %rcx,%rdi
ffffffff8000ac9d:	e8 b9 fe ff ff       	call   ffffffff8000ab5b <tlsf_walk_pool>
ffffffff8000aca2:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8000aca5:	90                   	nop
ffffffff8000aca6:	c9                   	leave  
ffffffff8000aca7:	c3                   	ret    

ffffffff8000aca8 <tlsf_size>:
ffffffff8000aca8:	f3 0f 1e fa          	endbr64 
ffffffff8000acac:	55                   	push   %rbp
ffffffff8000acad:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000acb0:	b8 88 19 00 00       	mov    $0x1988,%eax
ffffffff8000acb5:	5d                   	pop    %rbp
ffffffff8000acb6:	c3                   	ret    

ffffffff8000acb7 <tlsf_align_size>:
ffffffff8000acb7:	f3 0f 1e fa          	endbr64 
ffffffff8000acbb:	55                   	push   %rbp
ffffffff8000acbc:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000acbf:	b8 08 00 00 00       	mov    $0x8,%eax
ffffffff8000acc4:	5d                   	pop    %rbp
ffffffff8000acc5:	c3                   	ret    

ffffffff8000acc6 <tlsf_block_size_min>:
ffffffff8000acc6:	f3 0f 1e fa          	endbr64 
ffffffff8000acca:	55                   	push   %rbp
ffffffff8000accb:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000acce:	b8 18 00 00 00       	mov    $0x18,%eax
ffffffff8000acd3:	5d                   	pop    %rbp
ffffffff8000acd4:	c3                   	ret    

ffffffff8000acd5 <tlsf_block_size_max>:
ffffffff8000acd5:	f3 0f 1e fa          	endbr64 
ffffffff8000acd9:	55                   	push   %rbp
ffffffff8000acda:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000acdd:	48 b8 00 00 00 00 01 	movabs $0x100000000,%rax
ffffffff8000ace4:	00 00 00 
ffffffff8000ace7:	5d                   	pop    %rbp
ffffffff8000ace8:	c3                   	ret    

ffffffff8000ace9 <tlsf_pool_overhead>:
ffffffff8000ace9:	f3 0f 1e fa          	endbr64 
ffffffff8000aced:	55                   	push   %rbp
ffffffff8000acee:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000acf1:	b8 08 00 00 00       	mov    $0x8,%eax
ffffffff8000acf6:	48 01 c0             	add    %rax,%rax
ffffffff8000acf9:	5d                   	pop    %rbp
ffffffff8000acfa:	c3                   	ret    

ffffffff8000acfb <tlsf_alloc_overhead>:
ffffffff8000acfb:	f3 0f 1e fa          	endbr64 
ffffffff8000acff:	55                   	push   %rbp
ffffffff8000ad00:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000ad03:	b8 08 00 00 00       	mov    $0x8,%eax
ffffffff8000ad08:	5d                   	pop    %rbp
ffffffff8000ad09:	c3                   	ret    

ffffffff8000ad0a <tlsf_add_pool>:
ffffffff8000ad0a:	f3 0f 1e fa          	endbr64 
ffffffff8000ad0e:	55                   	push   %rbp
ffffffff8000ad0f:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000ad12:	48 83 ec 40          	sub    $0x40,%rsp
ffffffff8000ad16:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
ffffffff8000ad1a:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
ffffffff8000ad1e:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
ffffffff8000ad22:	e8 c2 ff ff ff       	call   ffffffff8000ace9 <tlsf_pool_overhead>
ffffffff8000ad27:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8000ad2b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8000ad2f:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
ffffffff8000ad33:	be 08 00 00 00       	mov    $0x8,%esi
ffffffff8000ad38:	48 89 c7             	mov    %rax,%rdi
ffffffff8000ad3b:	e8 7a e7 ff ff       	call   ffffffff800094ba <align_down>
ffffffff8000ad40:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff8000ad44:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8000ad48:	83 e0 07             	and    $0x7,%eax
ffffffff8000ad4b:	48 85 c0             	test   %rax,%rax
ffffffff8000ad4e:	74 23                	je     ffffffff8000ad73 <tlsf_add_pool+0x69>
ffffffff8000ad50:	be 08 00 00 00       	mov    $0x8,%esi
ffffffff8000ad55:	48 8d 05 bc 23 03 00 	lea    0x323bc(%rip),%rax        # ffffffff8003d118 <g_stivale2_header+0x6118>
ffffffff8000ad5c:	48 89 c7             	mov    %rax,%rdi
ffffffff8000ad5f:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000ad64:	e8 d7 87 00 00       	call   ffffffff80013540 <printf_>
ffffffff8000ad69:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000ad6e:	e9 f9 00 00 00       	jmp    ffffffff8000ae6c <tlsf_add_pool+0x162>
ffffffff8000ad73:	b8 18 00 00 00       	mov    $0x18,%eax
ffffffff8000ad78:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
ffffffff8000ad7c:	72 10                	jb     ffffffff8000ad8e <tlsf_add_pool+0x84>
ffffffff8000ad7e:	48 b8 00 00 00 00 01 	movabs $0x100000000,%rax
ffffffff8000ad85:	00 00 00 
ffffffff8000ad88:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
ffffffff8000ad8c:	76 44                	jbe    ffffffff8000add2 <tlsf_add_pool+0xc8>
ffffffff8000ad8e:	48 ba 00 00 00 00 01 	movabs $0x100000000,%rdx
ffffffff8000ad95:	00 00 00 
ffffffff8000ad98:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000ad9c:	48 01 d0             	add    %rdx,%rax
ffffffff8000ad9f:	48 c1 e8 08          	shr    $0x8,%rax
ffffffff8000ada3:	89 c2                	mov    %eax,%edx
ffffffff8000ada5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000ada9:	89 c1                	mov    %eax,%ecx
ffffffff8000adab:	b8 18 00 00 00       	mov    $0x18,%eax
ffffffff8000adb0:	01 c8                	add    %ecx,%eax
ffffffff8000adb2:	89 c6                	mov    %eax,%esi
ffffffff8000adb4:	48 8d 05 95 23 03 00 	lea    0x32395(%rip),%rax        # ffffffff8003d150 <g_stivale2_header+0x6150>
ffffffff8000adbb:	48 89 c7             	mov    %rax,%rdi
ffffffff8000adbe:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000adc3:	e8 78 87 00 00       	call   ffffffff80013540 <printf_>
ffffffff8000adc8:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000adcd:	e9 9a 00 00 00       	jmp    ffffffff8000ae6c <tlsf_add_pool+0x162>
ffffffff8000add2:	b8 08 00 00 00       	mov    $0x8,%eax
ffffffff8000add7:	48 f7 d8             	neg    %rax
ffffffff8000adda:	48 89 c2             	mov    %rax,%rdx
ffffffff8000addd:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8000ade1:	48 89 d6             	mov    %rdx,%rsi
ffffffff8000ade4:	48 89 c7             	mov    %rax,%rdi
ffffffff8000ade7:	e8 83 e4 ff ff       	call   ffffffff8000926f <offset_to_block>
ffffffff8000adec:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff8000adf0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff8000adf4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000adf8:	48 89 d6             	mov    %rdx,%rsi
ffffffff8000adfb:	48 89 c7             	mov    %rax,%rdi
ffffffff8000adfe:	e8 cb e2 ff ff       	call   ffffffff800090ce <block_set_size>
ffffffff8000ae03:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000ae07:	48 89 c7             	mov    %rax,%rdi
ffffffff8000ae0a:	e8 49 e3 ff ff       	call   ffffffff80009158 <block_set_free>
ffffffff8000ae0f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000ae13:	48 89 c7             	mov    %rax,%rdi
ffffffff8000ae16:	e8 e4 e3 ff ff       	call   ffffffff800091ff <block_set_prev_used>
ffffffff8000ae1b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff8000ae1f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8000ae23:	48 89 d6             	mov    %rdx,%rsi
ffffffff8000ae26:	48 89 c7             	mov    %rax,%rdi
ffffffff8000ae29:	e8 b3 ed ff ff       	call   ffffffff80009be1 <block_insert>
ffffffff8000ae2e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000ae32:	48 89 c7             	mov    %rax,%rdi
ffffffff8000ae35:	e8 5a e5 ff ff       	call   ffffffff80009394 <block_link_next>
ffffffff8000ae3a:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff8000ae3e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8000ae42:	be 00 00 00 00       	mov    $0x0,%esi
ffffffff8000ae47:	48 89 c7             	mov    %rax,%rdi
ffffffff8000ae4a:	e8 7f e2 ff ff       	call   ffffffff800090ce <block_set_size>
ffffffff8000ae4f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8000ae53:	48 89 c7             	mov    %rax,%rdi
ffffffff8000ae56:	e8 28 e3 ff ff       	call   ffffffff80009183 <block_set_used>
ffffffff8000ae5b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8000ae5f:	48 89 c7             	mov    %rax,%rdi
ffffffff8000ae62:	e8 6d e3 ff ff       	call   ffffffff800091d4 <block_set_prev_free>
ffffffff8000ae67:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8000ae6b:	90                   	nop
ffffffff8000ae6c:	c9                   	leave  
ffffffff8000ae6d:	c3                   	ret    

ffffffff8000ae6e <tlsf_remove_pool>:
ffffffff8000ae6e:	f3 0f 1e fa          	endbr64 
ffffffff8000ae72:	55                   	push   %rbp
ffffffff8000ae73:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000ae76:	48 83 ec 30          	sub    $0x30,%rsp
ffffffff8000ae7a:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
ffffffff8000ae7e:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
ffffffff8000ae82:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8000ae86:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8000ae8a:	b8 08 00 00 00       	mov    $0x8,%eax
ffffffff8000ae8f:	f7 d8                	neg    %eax
ffffffff8000ae91:	48 98                	cltq   
ffffffff8000ae93:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
ffffffff8000ae97:	48 89 c6             	mov    %rax,%rsi
ffffffff8000ae9a:	48 89 d7             	mov    %rdx,%rdi
ffffffff8000ae9d:	e8 cd e3 ff ff       	call   ffffffff8000926f <offset_to_block>
ffffffff8000aea2:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff8000aea6:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
ffffffff8000aead:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%rbp)
ffffffff8000aeb4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8000aeb8:	48 89 c7             	mov    %rax,%rdi
ffffffff8000aebb:	e8 75 e2 ff ff       	call   ffffffff80009135 <block_is_free>
ffffffff8000aec0:	85 c0                	test   %eax,%eax
ffffffff8000aec2:	75 3d                	jne    ffffffff8000af01 <tlsf_remove_pool+0x93>
ffffffff8000aec4:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000aec9:	e8 13 be ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff8000aece:	48 89 c6             	mov    %rax,%rsi
ffffffff8000aed1:	41 b8 0b 04 00 00    	mov    $0x40b,%r8d
ffffffff8000aed7:	48 8d 05 99 d4 02 00 	lea    0x2d499(%rip),%rax        # ffffffff80038377 <g_stivale2_header+0x1377>
ffffffff8000aede:	48 89 c1             	mov    %rax,%rcx
ffffffff8000aee1:	48 8d 05 f8 27 03 00 	lea    0x327f8(%rip),%rax        # ffffffff8003d6e0 <__FUNCTION__.3.lto_priv.1>
ffffffff8000aee8:	48 89 c2             	mov    %rax,%rdx
ffffffff8000aeeb:	48 8d 05 ce 18 03 00 	lea    0x318ce(%rip),%rax        # ffffffff8003c7c0 <g_stivale2_header+0x57c0>
ffffffff8000aef2:	48 89 c7             	mov    %rax,%rdi
ffffffff8000aef5:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000aefa:	e8 41 86 00 00       	call   ffffffff80013540 <printf_>
ffffffff8000aeff:	0f 0b                	ud2    
ffffffff8000af01:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8000af05:	48 89 c7             	mov    %rax,%rdi
ffffffff8000af08:	e8 eb e3 ff ff       	call   ffffffff800092f8 <block_next>
ffffffff8000af0d:	48 89 c7             	mov    %rax,%rdi
ffffffff8000af10:	e8 20 e2 ff ff       	call   ffffffff80009135 <block_is_free>
ffffffff8000af15:	85 c0                	test   %eax,%eax
ffffffff8000af17:	74 3d                	je     ffffffff8000af56 <tlsf_remove_pool+0xe8>
ffffffff8000af19:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000af1e:	e8 be bd ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff8000af23:	48 89 c6             	mov    %rax,%rsi
ffffffff8000af26:	41 b8 0c 04 00 00    	mov    $0x40c,%r8d
ffffffff8000af2c:	48 8d 05 44 d4 02 00 	lea    0x2d444(%rip),%rax        # ffffffff80038377 <g_stivale2_header+0x1377>
ffffffff8000af33:	48 89 c1             	mov    %rax,%rcx
ffffffff8000af36:	48 8d 05 a3 27 03 00 	lea    0x327a3(%rip),%rax        # ffffffff8003d6e0 <__FUNCTION__.3.lto_priv.1>
ffffffff8000af3d:	48 89 c2             	mov    %rax,%rdx
ffffffff8000af40:	48 8d 05 79 18 03 00 	lea    0x31879(%rip),%rax        # ffffffff8003c7c0 <g_stivale2_header+0x57c0>
ffffffff8000af47:	48 89 c7             	mov    %rax,%rdi
ffffffff8000af4a:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000af4f:	e8 ec 85 00 00       	call   ffffffff80013540 <printf_>
ffffffff8000af54:	0f 0b                	ud2    
ffffffff8000af56:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8000af5a:	48 89 c7             	mov    %rax,%rdi
ffffffff8000af5d:	e8 96 e3 ff ff       	call   ffffffff800092f8 <block_next>
ffffffff8000af62:	48 89 c7             	mov    %rax,%rdi
ffffffff8000af65:	e8 37 e1 ff ff       	call   ffffffff800090a1 <block_size>
ffffffff8000af6a:	48 85 c0             	test   %rax,%rax
ffffffff8000af6d:	74 3d                	je     ffffffff8000afac <tlsf_remove_pool+0x13e>
ffffffff8000af6f:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000af74:	e8 68 bd ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff8000af79:	48 89 c6             	mov    %rax,%rsi
ffffffff8000af7c:	41 b8 0d 04 00 00    	mov    $0x40d,%r8d
ffffffff8000af82:	48 8d 05 ee d3 02 00 	lea    0x2d3ee(%rip),%rax        # ffffffff80038377 <g_stivale2_header+0x1377>
ffffffff8000af89:	48 89 c1             	mov    %rax,%rcx
ffffffff8000af8c:	48 8d 05 4d 27 03 00 	lea    0x3274d(%rip),%rax        # ffffffff8003d6e0 <__FUNCTION__.3.lto_priv.1>
ffffffff8000af93:	48 89 c2             	mov    %rax,%rdx
ffffffff8000af96:	48 8d 05 23 18 03 00 	lea    0x31823(%rip),%rax        # ffffffff8003c7c0 <g_stivale2_header+0x57c0>
ffffffff8000af9d:	48 89 c7             	mov    %rax,%rdi
ffffffff8000afa0:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000afa5:	e8 96 85 00 00       	call   ffffffff80013540 <printf_>
ffffffff8000afaa:	0f 0b                	ud2    
ffffffff8000afac:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8000afb0:	48 89 c7             	mov    %rax,%rdi
ffffffff8000afb3:	e8 e9 e0 ff ff       	call   ffffffff800090a1 <block_size>
ffffffff8000afb8:	48 89 c1             	mov    %rax,%rcx
ffffffff8000afbb:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
ffffffff8000afbf:	48 8d 45 ec          	lea    -0x14(%rbp),%rax
ffffffff8000afc3:	48 89 c6             	mov    %rax,%rsi
ffffffff8000afc6:	48 89 cf             	mov    %rcx,%rdi
ffffffff8000afc9:	e8 48 e6 ff ff       	call   ffffffff80009616 <mapping_insert>
ffffffff8000afce:	8b 4d e8             	mov    -0x18(%rbp),%ecx
ffffffff8000afd1:	8b 55 ec             	mov    -0x14(%rbp),%edx
ffffffff8000afd4:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
ffffffff8000afd8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000afdc:	48 89 c7             	mov    %rax,%rdi
ffffffff8000afdf:	e8 3f e8 ff ff       	call   ffffffff80009823 <remove_free_block>
ffffffff8000afe4:	90                   	nop
ffffffff8000afe5:	c9                   	leave  
ffffffff8000afe6:	c3                   	ret    

ffffffff8000afe7 <tlsf_create>:
ffffffff8000afe7:	f3 0f 1e fa          	endbr64 
ffffffff8000afeb:	55                   	push   %rbp
ffffffff8000afec:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000afef:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff8000aff3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8000aff7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000affb:	83 e0 07             	and    $0x7,%eax
ffffffff8000affe:	48 85 c0             	test   %rax,%rax
ffffffff8000b001:	74 20                	je     ffffffff8000b023 <tlsf_create+0x3c>
ffffffff8000b003:	be 08 00 00 00       	mov    $0x8,%esi
ffffffff8000b008:	48 8d 05 89 21 03 00 	lea    0x32189(%rip),%rax        # ffffffff8003d198 <g_stivale2_header+0x6198>
ffffffff8000b00f:	48 89 c7             	mov    %rax,%rdi
ffffffff8000b012:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000b017:	e8 24 85 00 00       	call   ffffffff80013540 <printf_>
ffffffff8000b01c:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000b021:	eb 11                	jmp    ffffffff8000b034 <tlsf_create+0x4d>
ffffffff8000b023:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000b027:	48 89 c7             	mov    %rax,%rdi
ffffffff8000b02a:	e8 17 f4 ff ff       	call   ffffffff8000a446 <control_construct>
ffffffff8000b02f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000b033:	90                   	nop
ffffffff8000b034:	c9                   	leave  
ffffffff8000b035:	c3                   	ret    

ffffffff8000b036 <tlsf_create_with_pool>:
ffffffff8000b036:	f3 0f 1e fa          	endbr64 
ffffffff8000b03a:	55                   	push   %rbp
ffffffff8000b03b:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000b03e:	53                   	push   %rbx
ffffffff8000b03f:	48 83 ec 28          	sub    $0x28,%rsp
ffffffff8000b043:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
ffffffff8000b047:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
ffffffff8000b04b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8000b04f:	48 89 c7             	mov    %rax,%rdi
ffffffff8000b052:	e8 90 ff ff ff       	call   ffffffff8000afe7 <tlsf_create>
ffffffff8000b057:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff8000b05b:	e8 48 fc ff ff       	call   ffffffff8000aca8 <tlsf_size>
ffffffff8000b060:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
ffffffff8000b064:	48 89 d3             	mov    %rdx,%rbx
ffffffff8000b067:	48 29 c3             	sub    %rax,%rbx
ffffffff8000b06a:	e8 39 fc ff ff       	call   ffffffff8000aca8 <tlsf_size>
ffffffff8000b06f:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff8000b073:	48 8d 0c 10          	lea    (%rax,%rdx,1),%rcx
ffffffff8000b077:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000b07b:	48 89 da             	mov    %rbx,%rdx
ffffffff8000b07e:	48 89 ce             	mov    %rcx,%rsi
ffffffff8000b081:	48 89 c7             	mov    %rax,%rdi
ffffffff8000b084:	e8 81 fc ff ff       	call   ffffffff8000ad0a <tlsf_add_pool>
ffffffff8000b089:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000b08d:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
ffffffff8000b091:	c9                   	leave  
ffffffff8000b092:	c3                   	ret    

ffffffff8000b093 <tlsf_destroy>:
ffffffff8000b093:	f3 0f 1e fa          	endbr64 
ffffffff8000b097:	55                   	push   %rbp
ffffffff8000b098:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000b09b:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff8000b09f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8000b0a3:	90                   	nop
ffffffff8000b0a4:	c9                   	leave  
ffffffff8000b0a5:	c3                   	ret    

ffffffff8000b0a6 <tlsf_get_pool>:
ffffffff8000b0a6:	f3 0f 1e fa          	endbr64 
ffffffff8000b0aa:	55                   	push   %rbp
ffffffff8000b0ab:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000b0ae:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff8000b0b2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8000b0b6:	e8 ed fb ff ff       	call   ffffffff8000aca8 <tlsf_size>
ffffffff8000b0bb:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff8000b0bf:	48 01 d0             	add    %rdx,%rax
ffffffff8000b0c2:	c9                   	leave  
ffffffff8000b0c3:	c3                   	ret    

ffffffff8000b0c4 <tlsf_malloc>:
ffffffff8000b0c4:	f3 0f 1e fa          	endbr64 
ffffffff8000b0c8:	55                   	push   %rbp
ffffffff8000b0c9:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000b0cc:	48 83 ec 30          	sub    $0x30,%rsp
ffffffff8000b0d0:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
ffffffff8000b0d4:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
ffffffff8000b0d8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8000b0dc:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8000b0e0:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8000b0e4:	be 08 00 00 00       	mov    $0x8,%esi
ffffffff8000b0e9:	48 89 c7             	mov    %rax,%rdi
ffffffff8000b0ec:	e8 c1 e4 ff ff       	call   ffffffff800095b2 <adjust_request_size>
ffffffff8000b0f1:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff8000b0f5:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff8000b0f9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000b0fd:	48 89 d6             	mov    %rdx,%rsi
ffffffff8000b100:	48 89 c7             	mov    %rax,%rdi
ffffffff8000b103:	e8 ba f1 ff ff       	call   ffffffff8000a2c2 <block_locate_free>
ffffffff8000b108:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff8000b10c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff8000b110:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
ffffffff8000b114:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000b118:	48 89 ce             	mov    %rcx,%rsi
ffffffff8000b11b:	48 89 c7             	mov    %rax,%rdi
ffffffff8000b11e:	e8 7d f2 ff ff       	call   ffffffff8000a3a0 <block_prepare_used>
ffffffff8000b123:	c9                   	leave  
ffffffff8000b124:	c3                   	ret    

ffffffff8000b125 <tlsf_memalign>:
ffffffff8000b125:	f3 0f 1e fa          	endbr64 
ffffffff8000b129:	55                   	push   %rbp
ffffffff8000b12a:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000b12d:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
ffffffff8000b131:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
ffffffff8000b135:	48 89 75 90          	mov    %rsi,-0x70(%rbp)
ffffffff8000b139:	48 89 55 88          	mov    %rdx,-0x78(%rbp)
ffffffff8000b13d:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff8000b141:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff8000b145:	48 8b 45 88          	mov    -0x78(%rbp),%rax
ffffffff8000b149:	be 08 00 00 00       	mov    $0x8,%esi
ffffffff8000b14e:	48 89 c7             	mov    %rax,%rdi
ffffffff8000b151:	e8 5c e4 ff ff       	call   ffffffff800095b2 <adjust_request_size>
ffffffff8000b156:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff8000b15a:	48 c7 45 d8 20 00 00 	movq   $0x20,-0x28(%rbp)
ffffffff8000b161:	00 
ffffffff8000b162:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff8000b166:	48 8b 45 90          	mov    -0x70(%rbp),%rax
ffffffff8000b16a:	48 01 c2             	add    %rax,%rdx
ffffffff8000b16d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8000b171:	48 01 d0             	add    %rdx,%rax
ffffffff8000b174:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
ffffffff8000b178:	48 89 d6             	mov    %rdx,%rsi
ffffffff8000b17b:	48 89 c7             	mov    %rax,%rdi
ffffffff8000b17e:	e8 2f e4 ff ff       	call   ffffffff800095b2 <adjust_request_size>
ffffffff8000b183:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
ffffffff8000b187:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
ffffffff8000b18c:	74 0d                	je     ffffffff8000b19b <tlsf_memalign+0x76>
ffffffff8000b18e:	48 83 7d 90 08       	cmpq   $0x8,-0x70(%rbp)
ffffffff8000b193:	76 06                	jbe    ffffffff8000b19b <tlsf_memalign+0x76>
ffffffff8000b195:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8000b199:	eb 04                	jmp    ffffffff8000b19f <tlsf_memalign+0x7a>
ffffffff8000b19b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8000b19f:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
ffffffff8000b1a3:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
ffffffff8000b1a7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000b1ab:	48 89 d6             	mov    %rdx,%rsi
ffffffff8000b1ae:	48 89 c7             	mov    %rax,%rdi
ffffffff8000b1b1:	e8 0c f1 ff ff       	call   ffffffff8000a2c2 <block_locate_free>
ffffffff8000b1b6:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8000b1ba:	ba 18 00 00 00       	mov    $0x18,%edx
ffffffff8000b1bf:	b8 08 00 00 00       	mov    $0x8,%eax
ffffffff8000b1c4:	48 01 d0             	add    %rdx,%rax
ffffffff8000b1c7:	48 83 f8 20          	cmp    $0x20,%rax
ffffffff8000b1cb:	74 3d                	je     ffffffff8000b20a <tlsf_memalign+0xe5>
ffffffff8000b1cd:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000b1d2:	e8 0a bb ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff8000b1d7:	48 89 c6             	mov    %rax,%rsi
ffffffff8000b1da:	41 b8 7b 04 00 00    	mov    $0x47b,%r8d
ffffffff8000b1e0:	48 8d 05 90 d1 02 00 	lea    0x2d190(%rip),%rax        # ffffffff80038377 <g_stivale2_header+0x1377>
ffffffff8000b1e7:	48 89 c1             	mov    %rax,%rcx
ffffffff8000b1ea:	48 8d 05 07 25 03 00 	lea    0x32507(%rip),%rax        # ffffffff8003d6f8 <__FUNCTION__.2.lto_priv.2>
ffffffff8000b1f1:	48 89 c2             	mov    %rax,%rdx
ffffffff8000b1f4:	48 8d 05 c5 15 03 00 	lea    0x315c5(%rip),%rax        # ffffffff8003c7c0 <g_stivale2_header+0x57c0>
ffffffff8000b1fb:	48 89 c7             	mov    %rax,%rdi
ffffffff8000b1fe:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000b203:	e8 38 83 00 00       	call   ffffffff80013540 <printf_>
ffffffff8000b208:	0f 0b                	ud2    
ffffffff8000b20a:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff8000b20f:	0f 84 04 01 00 00    	je     ffffffff8000b319 <tlsf_memalign+0x1f4>
ffffffff8000b215:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000b219:	48 89 c7             	mov    %rax,%rdi
ffffffff8000b21c:	e8 30 e0 ff ff       	call   ffffffff80009251 <block_to_ptr>
ffffffff8000b221:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
ffffffff8000b225:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
ffffffff8000b229:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8000b22d:	48 89 d6             	mov    %rdx,%rsi
ffffffff8000b230:	48 89 c7             	mov    %rax,%rdi
ffffffff8000b233:	e8 f3 e2 ff ff       	call   ffffffff8000952b <align_ptr>
ffffffff8000b238:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
ffffffff8000b23c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff8000b240:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
ffffffff8000b244:	48 29 d0             	sub    %rdx,%rax
ffffffff8000b247:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff8000b24b:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
ffffffff8000b250:	74 5e                	je     ffffffff8000b2b0 <tlsf_memalign+0x18b>
ffffffff8000b252:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8000b256:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
ffffffff8000b25a:	73 54                	jae    ffffffff8000b2b0 <tlsf_memalign+0x18b>
ffffffff8000b25c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8000b260:	48 2b 45 f0          	sub    -0x10(%rbp),%rax
ffffffff8000b264:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
ffffffff8000b268:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
ffffffff8000b26c:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
ffffffff8000b270:	48 39 c2             	cmp    %rax,%rdx
ffffffff8000b273:	48 0f 43 c2          	cmovae %rdx,%rax
ffffffff8000b277:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
ffffffff8000b27b:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
ffffffff8000b27f:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff8000b283:	48 01 d0             	add    %rdx,%rax
ffffffff8000b286:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
ffffffff8000b28a:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
ffffffff8000b28e:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff8000b292:	48 89 d6             	mov    %rdx,%rsi
ffffffff8000b295:	48 89 c7             	mov    %rax,%rdi
ffffffff8000b298:	e8 8e e2 ff ff       	call   ffffffff8000952b <align_ptr>
ffffffff8000b29d:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
ffffffff8000b2a1:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff8000b2a5:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
ffffffff8000b2a9:	48 29 d0             	sub    %rdx,%rax
ffffffff8000b2ac:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff8000b2b0:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
ffffffff8000b2b5:	74 62                	je     ffffffff8000b319 <tlsf_memalign+0x1f4>
ffffffff8000b2b7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8000b2bb:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
ffffffff8000b2bf:	73 3d                	jae    ffffffff8000b2fe <tlsf_memalign+0x1d9>
ffffffff8000b2c1:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000b2c6:	e8 16 ba ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff8000b2cb:	48 89 c6             	mov    %rax,%rsi
ffffffff8000b2ce:	41 b8 93 04 00 00    	mov    $0x493,%r8d
ffffffff8000b2d4:	48 8d 05 9c d0 02 00 	lea    0x2d09c(%rip),%rax        # ffffffff80038377 <g_stivale2_header+0x1377>
ffffffff8000b2db:	48 89 c1             	mov    %rax,%rcx
ffffffff8000b2de:	48 8d 05 13 24 03 00 	lea    0x32413(%rip),%rax        # ffffffff8003d6f8 <__FUNCTION__.2.lto_priv.2>
ffffffff8000b2e5:	48 89 c2             	mov    %rax,%rdx
ffffffff8000b2e8:	48 8d 05 d1 14 03 00 	lea    0x314d1(%rip),%rax        # ffffffff8003c7c0 <g_stivale2_header+0x57c0>
ffffffff8000b2ef:	48 89 c7             	mov    %rax,%rdi
ffffffff8000b2f2:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000b2f7:	e8 44 82 00 00       	call   ffffffff80013540 <printf_>
ffffffff8000b2fc:	0f 0b                	ud2    
ffffffff8000b2fe:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff8000b302:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
ffffffff8000b306:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000b30a:	48 89 ce             	mov    %rcx,%rsi
ffffffff8000b30d:	48 89 c7             	mov    %rax,%rdi
ffffffff8000b310:	e8 23 ef ff ff       	call   ffffffff8000a238 <block_trim_free_leading>
ffffffff8000b315:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8000b319:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff8000b31d:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
ffffffff8000b321:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000b325:	48 89 ce             	mov    %rcx,%rsi
ffffffff8000b328:	48 89 c7             	mov    %rax,%rdi
ffffffff8000b32b:	e8 70 f0 ff ff       	call   ffffffff8000a3a0 <block_prepare_used>
ffffffff8000b330:	90                   	nop
ffffffff8000b331:	90                   	nop
ffffffff8000b332:	c9                   	leave  
ffffffff8000b333:	c3                   	ret    

ffffffff8000b334 <tlsf_free>:
ffffffff8000b334:	f3 0f 1e fa          	endbr64 
ffffffff8000b338:	55                   	push   %rbp
ffffffff8000b339:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000b33c:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff8000b340:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff8000b344:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
ffffffff8000b348:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
ffffffff8000b34d:	0f 84 b2 00 00 00    	je     ffffffff8000b405 <tlsf_free+0xd1>
ffffffff8000b353:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000b357:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8000b35b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8000b35f:	48 89 c7             	mov    %rax,%rdi
ffffffff8000b362:	e8 c6 de ff ff       	call   ffffffff8000922d <block_from_ptr>
ffffffff8000b367:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff8000b36b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8000b36f:	48 89 c7             	mov    %rax,%rdi
ffffffff8000b372:	e8 be dd ff ff       	call   ffffffff80009135 <block_is_free>
ffffffff8000b377:	85 c0                	test   %eax,%eax
ffffffff8000b379:	74 3d                	je     ffffffff8000b3b8 <tlsf_free+0x84>
ffffffff8000b37b:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000b380:	e8 5c b9 ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff8000b385:	48 89 c6             	mov    %rax,%rsi
ffffffff8000b388:	41 b8 a2 04 00 00    	mov    $0x4a2,%r8d
ffffffff8000b38e:	48 8d 05 e2 cf 02 00 	lea    0x2cfe2(%rip),%rax        # ffffffff80038377 <g_stivale2_header+0x1377>
ffffffff8000b395:	48 89 c1             	mov    %rax,%rcx
ffffffff8000b398:	48 8d 05 69 23 03 00 	lea    0x32369(%rip),%rax        # ffffffff8003d708 <__FUNCTION__.1.lto_priv.4>
ffffffff8000b39f:	48 89 c2             	mov    %rax,%rdx
ffffffff8000b3a2:	48 8d 05 17 14 03 00 	lea    0x31417(%rip),%rax        # ffffffff8003c7c0 <g_stivale2_header+0x57c0>
ffffffff8000b3a9:	48 89 c7             	mov    %rax,%rdi
ffffffff8000b3ac:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000b3b1:	e8 8a 81 00 00       	call   ffffffff80013540 <printf_>
ffffffff8000b3b6:	0f 0b                	ud2    
ffffffff8000b3b8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8000b3bc:	48 89 c7             	mov    %rax,%rdi
ffffffff8000b3bf:	e8 01 e0 ff ff       	call   ffffffff800093c5 <block_mark_as_free>
ffffffff8000b3c4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff8000b3c8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000b3cc:	48 89 d6             	mov    %rdx,%rsi
ffffffff8000b3cf:	48 89 c7             	mov    %rax,%rdi
ffffffff8000b3d2:	e8 e2 ea ff ff       	call   ffffffff80009eb9 <block_merge_prev>
ffffffff8000b3d7:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff8000b3db:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff8000b3df:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000b3e3:	48 89 d6             	mov    %rdx,%rsi
ffffffff8000b3e6:	48 89 c7             	mov    %rax,%rdi
ffffffff8000b3e9:	e8 c6 eb ff ff       	call   ffffffff80009fb4 <block_merge_next>
ffffffff8000b3ee:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff8000b3f2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff8000b3f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000b3fa:	48 89 d6             	mov    %rdx,%rsi
ffffffff8000b3fd:	48 89 c7             	mov    %rax,%rdi
ffffffff8000b400:	e8 dc e7 ff ff       	call   ffffffff80009be1 <block_insert>
ffffffff8000b405:	90                   	nop
ffffffff8000b406:	c9                   	leave  
ffffffff8000b407:	c3                   	ret    

ffffffff8000b408 <tlsf_realloc>:
ffffffff8000b408:	f3 0f 1e fa          	endbr64 
ffffffff8000b40c:	55                   	push   %rbp
ffffffff8000b40d:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000b410:	48 83 ec 60          	sub    $0x60,%rsp
ffffffff8000b414:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
ffffffff8000b418:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
ffffffff8000b41c:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
ffffffff8000b420:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff8000b424:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff8000b428:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
ffffffff8000b42f:	00 
ffffffff8000b430:	48 83 7d b0 00       	cmpq   $0x0,-0x50(%rbp)
ffffffff8000b435:	74 1f                	je     ffffffff8000b456 <tlsf_realloc+0x4e>
ffffffff8000b437:	48 83 7d a8 00       	cmpq   $0x0,-0x58(%rbp)
ffffffff8000b43c:	75 18                	jne    ffffffff8000b456 <tlsf_realloc+0x4e>
ffffffff8000b43e:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
ffffffff8000b442:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff8000b446:	48 89 d6             	mov    %rdx,%rsi
ffffffff8000b449:	48 89 c7             	mov    %rax,%rdi
ffffffff8000b44c:	e8 e3 fe ff ff       	call   ffffffff8000b334 <tlsf_free>
ffffffff8000b451:	e9 ae 01 00 00       	jmp    ffffffff8000b604 <tlsf_realloc+0x1fc>
ffffffff8000b456:	48 83 7d b0 00       	cmpq   $0x0,-0x50(%rbp)
ffffffff8000b45b:	75 1c                	jne    ffffffff8000b479 <tlsf_realloc+0x71>
ffffffff8000b45d:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
ffffffff8000b461:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff8000b465:	48 89 d6             	mov    %rdx,%rsi
ffffffff8000b468:	48 89 c7             	mov    %rax,%rdi
ffffffff8000b46b:	e8 54 fc ff ff       	call   ffffffff8000b0c4 <tlsf_malloc>
ffffffff8000b470:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8000b474:	e9 8b 01 00 00       	jmp    ffffffff8000b604 <tlsf_realloc+0x1fc>
ffffffff8000b479:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
ffffffff8000b47d:	48 89 c7             	mov    %rax,%rdi
ffffffff8000b480:	e8 a8 dd ff ff       	call   ffffffff8000922d <block_from_ptr>
ffffffff8000b485:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff8000b489:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000b48d:	48 89 c7             	mov    %rax,%rdi
ffffffff8000b490:	e8 63 de ff ff       	call   ffffffff800092f8 <block_next>
ffffffff8000b495:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff8000b499:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000b49d:	48 89 c7             	mov    %rax,%rdi
ffffffff8000b4a0:	e8 fc db ff ff       	call   ffffffff800090a1 <block_size>
ffffffff8000b4a5:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
ffffffff8000b4a9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8000b4ad:	48 89 c7             	mov    %rax,%rdi
ffffffff8000b4b0:	e8 ec db ff ff       	call   ffffffff800090a1 <block_size>
ffffffff8000b4b5:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff8000b4b9:	48 01 d0             	add    %rdx,%rax
ffffffff8000b4bc:	ba 08 00 00 00       	mov    $0x8,%edx
ffffffff8000b4c1:	48 01 d0             	add    %rdx,%rax
ffffffff8000b4c4:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
ffffffff8000b4c8:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff8000b4cc:	be 08 00 00 00       	mov    $0x8,%esi
ffffffff8000b4d1:	48 89 c7             	mov    %rax,%rdi
ffffffff8000b4d4:	e8 d9 e0 ff ff       	call   ffffffff800095b2 <adjust_request_size>
ffffffff8000b4d9:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
ffffffff8000b4dd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000b4e1:	48 89 c7             	mov    %rax,%rdi
ffffffff8000b4e4:	e8 4c dc ff ff       	call   ffffffff80009135 <block_is_free>
ffffffff8000b4e9:	85 c0                	test   %eax,%eax
ffffffff8000b4eb:	74 3d                	je     ffffffff8000b52a <tlsf_realloc+0x122>
ffffffff8000b4ed:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000b4f2:	e8 ea b7 ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff8000b4f7:	48 89 c6             	mov    %rax,%rsi
ffffffff8000b4fa:	41 b8 cf 04 00 00    	mov    $0x4cf,%r8d
ffffffff8000b500:	48 8d 05 70 ce 02 00 	lea    0x2ce70(%rip),%rax        # ffffffff80038377 <g_stivale2_header+0x1377>
ffffffff8000b507:	48 89 c1             	mov    %rax,%rcx
ffffffff8000b50a:	48 8d 05 07 22 03 00 	lea    0x32207(%rip),%rax        # ffffffff8003d718 <__FUNCTION__.0.lto_priv.6>
ffffffff8000b511:	48 89 c2             	mov    %rax,%rdx
ffffffff8000b514:	48 8d 05 a5 12 03 00 	lea    0x312a5(%rip),%rax        # ffffffff8003c7c0 <g_stivale2_header+0x57c0>
ffffffff8000b51b:	48 89 c7             	mov    %rax,%rdi
ffffffff8000b51e:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000b523:	e8 18 80 00 00       	call   ffffffff80013540 <printf_>
ffffffff8000b528:	0f 0b                	ud2    
ffffffff8000b52a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8000b52e:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
ffffffff8000b532:	0f 86 81 00 00 00    	jbe    ffffffff8000b5b9 <tlsf_realloc+0x1b1>
ffffffff8000b538:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8000b53c:	48 89 c7             	mov    %rax,%rdi
ffffffff8000b53f:	e8 f1 db ff ff       	call   ffffffff80009135 <block_is_free>
ffffffff8000b544:	85 c0                	test   %eax,%eax
ffffffff8000b546:	74 0a                	je     ffffffff8000b552 <tlsf_realloc+0x14a>
ffffffff8000b548:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8000b54c:	48 3b 45 d0          	cmp    -0x30(%rbp),%rax
ffffffff8000b550:	76 67                	jbe    ffffffff8000b5b9 <tlsf_realloc+0x1b1>
ffffffff8000b552:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
ffffffff8000b556:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff8000b55a:	48 89 d6             	mov    %rdx,%rsi
ffffffff8000b55d:	48 89 c7             	mov    %rax,%rdi
ffffffff8000b560:	e8 5f fb ff ff       	call   ffffffff8000b0c4 <tlsf_malloc>
ffffffff8000b565:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8000b569:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff8000b56e:	0f 84 8f 00 00 00    	je     ffffffff8000b603 <tlsf_realloc+0x1fb>
ffffffff8000b574:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
ffffffff8000b578:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8000b57c:	48 39 c2             	cmp    %rax,%rdx
ffffffff8000b57f:	48 0f 46 c2          	cmovbe %rdx,%rax
ffffffff8000b583:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
ffffffff8000b587:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff8000b58b:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
ffffffff8000b58f:	48 89 d1             	mov    %rdx,%rcx
ffffffff8000b592:	48 89 c6             	mov    %rax,%rsi
ffffffff8000b595:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8000b599:	48 89 c2             	mov    %rax,%rdx
ffffffff8000b59c:	48 89 cf             	mov    %rcx,%rdi
ffffffff8000b59f:	e8 cb 2a 00 00       	call   ffffffff8000e06f <memcpy>
ffffffff8000b5a4:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
ffffffff8000b5a8:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff8000b5ac:	48 89 d6             	mov    %rdx,%rsi
ffffffff8000b5af:	48 89 c7             	mov    %rax,%rdi
ffffffff8000b5b2:	e8 7d fd ff ff       	call   ffffffff8000b334 <tlsf_free>
ffffffff8000b5b7:	eb 4a                	jmp    ffffffff8000b603 <tlsf_realloc+0x1fb>
ffffffff8000b5b9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8000b5bd:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
ffffffff8000b5c1:	76 1f                	jbe    ffffffff8000b5e2 <tlsf_realloc+0x1da>
ffffffff8000b5c3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff8000b5c7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8000b5cb:	48 89 d6             	mov    %rdx,%rsi
ffffffff8000b5ce:	48 89 c7             	mov    %rax,%rdi
ffffffff8000b5d1:	e8 de e9 ff ff       	call   ffffffff80009fb4 <block_merge_next>
ffffffff8000b5d6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000b5da:	48 89 c7             	mov    %rax,%rdi
ffffffff8000b5dd:	e8 1e de ff ff       	call   ffffffff80009400 <block_mark_as_used>
ffffffff8000b5e2:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
ffffffff8000b5e6:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
ffffffff8000b5ea:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8000b5ee:	48 89 ce             	mov    %rcx,%rsi
ffffffff8000b5f1:	48 89 c7             	mov    %rax,%rdi
ffffffff8000b5f4:	e8 73 eb ff ff       	call   ffffffff8000a16c <block_trim_used>
ffffffff8000b5f9:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
ffffffff8000b5fd:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8000b601:	eb 01                	jmp    ffffffff8000b604 <tlsf_realloc+0x1fc>
ffffffff8000b603:	90                   	nop
ffffffff8000b604:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000b608:	90                   	nop
ffffffff8000b609:	90                   	nop
ffffffff8000b60a:	c9                   	leave  
ffffffff8000b60b:	c3                   	ret    

ffffffff8000b60c <early_alloc_page_phys>:
ffffffff8000b60c:	f3 0f 1e fa          	endbr64 
ffffffff8000b610:	55                   	push   %rbp
ffffffff8000b611:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000b614:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff8000b618:	48 8b 05 a9 5a 2a 00 	mov    0x2a5aa9(%rip),%rax        # ffffffff802b10c8 <m_early_alloc_mmap>
ffffffff8000b61f:	48 85 c0             	test   %rax,%rax
ffffffff8000b622:	75 62                	jne    ffffffff8000b686 <early_alloc_page_phys+0x7a>
ffffffff8000b624:	48 b8 07 de 12 86 9e 	movabs $0x2187f79e8612de07,%rax
ffffffff8000b62b:	f7 87 21 
ffffffff8000b62e:	48 89 c7             	mov    %rax,%rdi
ffffffff8000b631:	e8 0c 69 ff ff       	call   ffffffff80001f42 <get_stivale2_tag>
ffffffff8000b636:	48 89 05 8b 5a 2a 00 	mov    %rax,0x2a5a8b(%rip)        # ffffffff802b10c8 <m_early_alloc_mmap>
ffffffff8000b63d:	48 8b 05 84 5a 2a 00 	mov    0x2a5a84(%rip),%rax        # ffffffff802b10c8 <m_early_alloc_mmap>
ffffffff8000b644:	48 85 c0             	test   %rax,%rax
ffffffff8000b647:	75 3d                	jne    ffffffff8000b686 <early_alloc_page_phys+0x7a>
ffffffff8000b649:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000b64e:	e8 8e b6 ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff8000b653:	48 89 c6             	mov    %rax,%rsi
ffffffff8000b656:	41 b8 0d 00 00 00    	mov    $0xd,%r8d
ffffffff8000b65c:	48 8d 05 41 cd 02 00 	lea    0x2cd41(%rip),%rax        # ffffffff800383a4 <g_stivale2_header+0x13a4>
ffffffff8000b663:	48 89 c1             	mov    %rax,%rcx
ffffffff8000b666:	48 8d 05 c3 20 03 00 	lea    0x320c3(%rip),%rax        # ffffffff8003d730 <__FUNCTION__.0.lto_priv.7>
ffffffff8000b66d:	48 89 c2             	mov    %rax,%rdx
ffffffff8000b670:	48 8d 05 49 11 03 00 	lea    0x31149(%rip),%rax        # ffffffff8003c7c0 <g_stivale2_header+0x57c0>
ffffffff8000b677:	48 89 c7             	mov    %rax,%rdi
ffffffff8000b67a:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000b67f:	e8 bc 7e 00 00       	call   ffffffff80013540 <printf_>
ffffffff8000b684:	0f 0b                	ud2    
ffffffff8000b686:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
ffffffff8000b68d:	e9 86 00 00 00       	jmp    ffffffff8000b718 <early_alloc_page_phys+0x10c>
ffffffff8000b692:	48 8b 0d 2f 5a 2a 00 	mov    0x2a5a2f(%rip),%rcx        # ffffffff802b10c8 <m_early_alloc_mmap>
ffffffff8000b699:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8000b69c:	48 63 d0             	movslq %eax,%rdx
ffffffff8000b69f:	48 89 d0             	mov    %rdx,%rax
ffffffff8000b6a2:	48 01 c0             	add    %rax,%rax
ffffffff8000b6a5:	48 01 d0             	add    %rdx,%rax
ffffffff8000b6a8:	48 c1 e0 03          	shl    $0x3,%rax
ffffffff8000b6ac:	48 83 c0 10          	add    $0x10,%rax
ffffffff8000b6b0:	48 01 c8             	add    %rcx,%rax
ffffffff8000b6b3:	48 83 c0 08          	add    $0x8,%rax
ffffffff8000b6b7:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff8000b6bb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8000b6bf:	8b 40 10             	mov    0x10(%rax),%eax
ffffffff8000b6c2:	83 f8 01             	cmp    $0x1,%eax
ffffffff8000b6c5:	75 4d                	jne    ffffffff8000b714 <early_alloc_page_phys+0x108>
ffffffff8000b6c7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8000b6cb:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff8000b6cf:	48 3d ff 0f 00 00    	cmp    $0xfff,%rax
ffffffff8000b6d5:	76 3d                	jbe    ffffffff8000b714 <early_alloc_page_phys+0x108>
ffffffff8000b6d7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8000b6db:	48 8b 00             	mov    (%rax),%rax
ffffffff8000b6de:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff8000b6e2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8000b6e6:	48 8b 00             	mov    (%rax),%rax
ffffffff8000b6e9:	48 8d 90 00 10 00 00 	lea    0x1000(%rax),%rdx
ffffffff8000b6f0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8000b6f4:	48 89 10             	mov    %rdx,(%rax)
ffffffff8000b6f7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8000b6fb:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff8000b6ff:	48 8d 90 00 f0 ff ff 	lea    -0x1000(%rax),%rdx
ffffffff8000b706:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8000b70a:	48 89 50 08          	mov    %rdx,0x8(%rax)
ffffffff8000b70e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000b712:	eb 5a                	jmp    ffffffff8000b76e <early_alloc_page_phys+0x162>
ffffffff8000b714:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
ffffffff8000b718:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8000b71b:	48 98                	cltq   
ffffffff8000b71d:	48 8b 15 a4 59 2a 00 	mov    0x2a59a4(%rip),%rdx        # ffffffff802b10c8 <m_early_alloc_mmap>
ffffffff8000b724:	48 8b 52 10          	mov    0x10(%rdx),%rdx
ffffffff8000b728:	48 39 d0             	cmp    %rdx,%rax
ffffffff8000b72b:	0f 82 61 ff ff ff    	jb     ffffffff8000b692 <early_alloc_page_phys+0x86>
ffffffff8000b731:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000b736:	e8 a6 b5 ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff8000b73b:	48 89 c6             	mov    %rax,%rsi
ffffffff8000b73e:	41 b8 1f 00 00 00    	mov    $0x1f,%r8d
ffffffff8000b744:	48 8d 05 59 cc 02 00 	lea    0x2cc59(%rip),%rax        # ffffffff800383a4 <g_stivale2_header+0x13a4>
ffffffff8000b74b:	48 89 c1             	mov    %rax,%rcx
ffffffff8000b74e:	48 8d 05 db 1f 03 00 	lea    0x31fdb(%rip),%rax        # ffffffff8003d730 <__FUNCTION__.0.lto_priv.7>
ffffffff8000b755:	48 89 c2             	mov    %rax,%rdx
ffffffff8000b758:	48 8d 05 61 10 03 00 	lea    0x31061(%rip),%rax        # ffffffff8003c7c0 <g_stivale2_header+0x57c0>
ffffffff8000b75f:	48 89 c7             	mov    %rax,%rdi
ffffffff8000b762:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000b767:	e8 d4 7d 00 00       	call   ffffffff80013540 <printf_>
ffffffff8000b76c:	0f 0b                	ud2    
ffffffff8000b76e:	90                   	nop
ffffffff8000b76f:	c9                   	leave  
ffffffff8000b770:	c3                   	ret    

ffffffff8000b771 <init_malloc>:
ffffffff8000b771:	f3 0f 1e fa          	endbr64 
ffffffff8000b775:	55                   	push   %rbp
ffffffff8000b776:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000b779:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff8000b77d:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
ffffffff8000b784:	48 b8 00 00 00 00 01 	movabs $0x100000000,%rax
ffffffff8000b78b:	00 00 00 
ffffffff8000b78e:	48 89 c6             	mov    %rax,%rsi
ffffffff8000b791:	48 b8 00 00 00 80 b0 	movabs $0xffffffb080000000,%rax
ffffffff8000b798:	ff ff ff 
ffffffff8000b79b:	48 89 c7             	mov    %rax,%rdi
ffffffff8000b79e:	e8 93 f8 ff ff       	call   ffffffff8000b036 <tlsf_create_with_pool>
ffffffff8000b7a3:	48 89 05 26 59 2a 00 	mov    %rax,0x2a5926(%rip)        # ffffffff802b10d0 <m_tlsf>
ffffffff8000b7aa:	48 8b 05 1f 59 2a 00 	mov    0x2a591f(%rip),%rax        # ffffffff802b10d0 <m_tlsf>
ffffffff8000b7b1:	48 85 c0             	test   %rax,%rax
ffffffff8000b7b4:	75 46                	jne    ffffffff8000b7fc <init_malloc+0x8b>
ffffffff8000b7b6:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)
ffffffff8000b7bd:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000b7c2:	e8 1a b5 ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff8000b7c7:	48 89 c6             	mov    %rax,%rsi
ffffffff8000b7ca:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8000b7cd:	41 b9 11 00 00 00    	mov    $0x11,%r9d
ffffffff8000b7d3:	4c 8d 05 dd cb 02 00 	lea    0x2cbdd(%rip),%r8        # ffffffff800383b7 <g_stivale2_header+0x13b7>
ffffffff8000b7da:	48 8d 15 67 1f 03 00 	lea    0x31f67(%rip),%rdx        # ffffffff8003d748 <__FUNCTION__.0.lto_priv.8>
ffffffff8000b7e1:	48 89 d1             	mov    %rdx,%rcx
ffffffff8000b7e4:	89 c2                	mov    %eax,%edx
ffffffff8000b7e6:	48 8d 05 8b 0f 03 00 	lea    0x30f8b(%rip),%rax        # ffffffff8003c778 <g_stivale2_header+0x5778>
ffffffff8000b7ed:	48 89 c7             	mov    %rax,%rdi
ffffffff8000b7f0:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000b7f5:	e8 46 7d 00 00       	call   ffffffff80013540 <printf_>
ffffffff8000b7fa:	eb 01                	jmp    ffffffff8000b7fd <init_malloc+0x8c>
ffffffff8000b7fc:	90                   	nop
ffffffff8000b7fd:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8000b800:	90                   	nop
ffffffff8000b801:	90                   	nop
ffffffff8000b802:	c9                   	leave  
ffffffff8000b803:	c3                   	ret    

ffffffff8000b804 <check_malloc>:
ffffffff8000b804:	f3 0f 1e fa          	endbr64 
ffffffff8000b808:	55                   	push   %rbp
ffffffff8000b809:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000b80c:	48 8d 05 c5 58 2a 00 	lea    0x2a58c5(%rip),%rax        # ffffffff802b10d8 <m_tlsf_lock>
ffffffff8000b813:	48 89 c7             	mov    %rax,%rdi
ffffffff8000b816:	e8 f3 65 ff ff       	call   ffffffff80001e0e <spinlock_lock>
ffffffff8000b81b:	48 8b 05 ae 58 2a 00 	mov    0x2a58ae(%rip),%rax        # ffffffff802b10d0 <m_tlsf>
ffffffff8000b822:	48 89 c7             	mov    %rax,%rdi
ffffffff8000b825:	e8 f6 ed ff ff       	call   ffffffff8000a620 <tlsf_check>
ffffffff8000b82a:	48 8d 05 a7 58 2a 00 	lea    0x2a58a7(%rip),%rax        # ffffffff802b10d8 <m_tlsf_lock>
ffffffff8000b831:	48 89 c7             	mov    %rax,%rdi
ffffffff8000b834:	e8 a4 66 ff ff       	call   ffffffff80001edd <spinlock_unlock>
ffffffff8000b839:	90                   	nop
ffffffff8000b83a:	5d                   	pop    %rbp
ffffffff8000b83b:	c3                   	ret    

ffffffff8000b83c <malloc>:
ffffffff8000b83c:	f3 0f 1e fa          	endbr64 
ffffffff8000b840:	55                   	push   %rbp
ffffffff8000b841:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000b844:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff8000b848:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff8000b84c:	48 8d 05 85 58 2a 00 	lea    0x2a5885(%rip),%rax        # ffffffff802b10d8 <m_tlsf_lock>
ffffffff8000b853:	48 89 c7             	mov    %rax,%rdi
ffffffff8000b856:	e8 b3 65 ff ff       	call   ffffffff80001e0e <spinlock_lock>
ffffffff8000b85b:	48 8b 05 6e 58 2a 00 	mov    0x2a586e(%rip),%rax        # ffffffff802b10d0 <m_tlsf>
ffffffff8000b862:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff8000b866:	48 89 d6             	mov    %rdx,%rsi
ffffffff8000b869:	48 89 c7             	mov    %rax,%rdi
ffffffff8000b86c:	e8 53 f8 ff ff       	call   ffffffff8000b0c4 <tlsf_malloc>
ffffffff8000b871:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8000b875:	48 8d 05 5c 58 2a 00 	lea    0x2a585c(%rip),%rax        # ffffffff802b10d8 <m_tlsf_lock>
ffffffff8000b87c:	48 89 c7             	mov    %rax,%rdi
ffffffff8000b87f:	e8 59 66 ff ff       	call   ffffffff80001edd <spinlock_unlock>
ffffffff8000b884:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff8000b889:	74 1b                	je     ffffffff8000b8a6 <malloc+0x6a>
ffffffff8000b88b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000b88f:	48 89 c1             	mov    %rax,%rcx
ffffffff8000b892:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000b896:	48 89 c2             	mov    %rax,%rdx
ffffffff8000b899:	be 00 00 00 00       	mov    $0x0,%esi
ffffffff8000b89e:	48 89 cf             	mov    %rcx,%rdi
ffffffff8000b8a1:	e8 a2 2c 00 00       	call   ffffffff8000e548 <memset>
ffffffff8000b8a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000b8aa:	90                   	nop
ffffffff8000b8ab:	90                   	nop
ffffffff8000b8ac:	c9                   	leave  
ffffffff8000b8ad:	c3                   	ret    

ffffffff8000b8ae <realloc>:
ffffffff8000b8ae:	f3 0f 1e fa          	endbr64 
ffffffff8000b8b2:	55                   	push   %rbp
ffffffff8000b8b3:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000b8b6:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff8000b8ba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8000b8be:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff8000b8c2:	48 8d 05 0f 58 2a 00 	lea    0x2a580f(%rip),%rax        # ffffffff802b10d8 <m_tlsf_lock>
ffffffff8000b8c9:	48 89 c7             	mov    %rax,%rdi
ffffffff8000b8cc:	e8 3d 65 ff ff       	call   ffffffff80001e0e <spinlock_lock>
ffffffff8000b8d1:	48 8b 05 f8 57 2a 00 	mov    0x2a57f8(%rip),%rax        # ffffffff802b10d0 <m_tlsf>
ffffffff8000b8d8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff8000b8dc:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
ffffffff8000b8e0:	48 89 ce             	mov    %rcx,%rsi
ffffffff8000b8e3:	48 89 c7             	mov    %rax,%rdi
ffffffff8000b8e6:	e8 1d fb ff ff       	call   ffffffff8000b408 <tlsf_realloc>
ffffffff8000b8eb:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8000b8ef:	48 8d 05 e2 57 2a 00 	lea    0x2a57e2(%rip),%rax        # ffffffff802b10d8 <m_tlsf_lock>
ffffffff8000b8f6:	48 89 c7             	mov    %rax,%rdi
ffffffff8000b8f9:	e8 df 65 ff ff       	call   ffffffff80001edd <spinlock_unlock>
ffffffff8000b8fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000b902:	90                   	nop
ffffffff8000b903:	90                   	nop
ffffffff8000b904:	c9                   	leave  
ffffffff8000b905:	c3                   	ret    

ffffffff8000b906 <free>:
ffffffff8000b906:	f3 0f 1e fa          	endbr64 
ffffffff8000b90a:	55                   	push   %rbp
ffffffff8000b90b:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000b90e:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff8000b912:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8000b916:	48 8d 05 bb 57 2a 00 	lea    0x2a57bb(%rip),%rax        # ffffffff802b10d8 <m_tlsf_lock>
ffffffff8000b91d:	48 89 c7             	mov    %rax,%rdi
ffffffff8000b920:	e8 e9 64 ff ff       	call   ffffffff80001e0e <spinlock_lock>
ffffffff8000b925:	48 8b 05 a4 57 2a 00 	mov    0x2a57a4(%rip),%rax        # ffffffff802b10d0 <m_tlsf>
ffffffff8000b92c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff8000b930:	48 89 d6             	mov    %rdx,%rsi
ffffffff8000b933:	48 89 c7             	mov    %rax,%rdi
ffffffff8000b936:	e8 f9 f9 ff ff       	call   ffffffff8000b334 <tlsf_free>
ffffffff8000b93b:	48 8d 05 96 57 2a 00 	lea    0x2a5796(%rip),%rax        # ffffffff802b10d8 <m_tlsf_lock>
ffffffff8000b942:	48 89 c7             	mov    %rax,%rdi
ffffffff8000b945:	e8 93 65 ff ff       	call   ffffffff80001edd <spinlock_unlock>
ffffffff8000b94a:	90                   	nop
ffffffff8000b94b:	c9                   	leave  
ffffffff8000b94c:	c3                   	ret    

ffffffff8000b94d <popcount_byte>:
ffffffff8000b94d:	f3 0f 1e fa          	endbr64 
ffffffff8000b951:	55                   	push   %rbp
ffffffff8000b952:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000b955:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff8000b959:	89 f8                	mov    %edi,%eax
ffffffff8000b95b:	88 45 fc             	mov    %al,-0x4(%rbp)
ffffffff8000b95e:	0f b6 45 fc          	movzbl -0x4(%rbp),%eax
ffffffff8000b962:	83 e0 0f             	and    $0xf,%eax
ffffffff8000b965:	48 98                	cltq   
ffffffff8000b967:	48 8d 15 f2 1d 03 00 	lea    0x31df2(%rip),%rdx        # ffffffff8003d760 <m_popcount_lookup>
ffffffff8000b96e:	0f b6 04 10          	movzbl (%rax,%rdx,1),%eax
ffffffff8000b972:	0f b6 c8             	movzbl %al,%ecx
ffffffff8000b975:	0f b6 45 fc          	movzbl -0x4(%rbp),%eax
ffffffff8000b979:	c0 e8 04             	shr    $0x4,%al
ffffffff8000b97c:	0f b6 c0             	movzbl %al,%eax
ffffffff8000b97f:	48 98                	cltq   
ffffffff8000b981:	48 8d 15 d8 1d 03 00 	lea    0x31dd8(%rip),%rdx        # ffffffff8003d760 <m_popcount_lookup>
ffffffff8000b988:	0f b6 04 10          	movzbl (%rax,%rdx,1),%eax
ffffffff8000b98c:	0f b6 c0             	movzbl %al,%eax
ffffffff8000b98f:	01 c8                	add    %ecx,%eax
ffffffff8000b991:	c9                   	leave  
ffffffff8000b992:	c3                   	ret    

ffffffff8000b993 <highest_bit_position>:
ffffffff8000b993:	f3 0f 1e fa          	endbr64 
ffffffff8000b997:	55                   	push   %rbp
ffffffff8000b998:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000b99b:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff8000b99f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8000b9a3:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff8000b9a8:	74 16                	je     ffffffff8000b9c0 <highest_bit_position+0x2d>
ffffffff8000b9aa:	48 0f bd 45 f8       	bsr    -0x8(%rbp),%rax
ffffffff8000b9af:	48 83 f0 3f          	xor    $0x3f,%rax
ffffffff8000b9b3:	89 c2                	mov    %eax,%edx
ffffffff8000b9b5:	b8 40 00 00 00       	mov    $0x40,%eax
ffffffff8000b9ba:	29 d0                	sub    %edx,%eax
ffffffff8000b9bc:	48 98                	cltq   
ffffffff8000b9be:	eb 05                	jmp    ffffffff8000b9c5 <highest_bit_position+0x32>
ffffffff8000b9c0:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000b9c5:	c9                   	leave  
ffffffff8000b9c6:	c3                   	ret    

ffffffff8000b9c7 <ceiling_power_of_two>:
ffffffff8000b9c7:	f3 0f 1e fa          	endbr64 
ffffffff8000b9cb:	55                   	push   %rbp
ffffffff8000b9cc:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000b9cf:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff8000b9d3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8000b9d7:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff8000b9dc:	0f 94 c0             	sete   %al
ffffffff8000b9df:	0f b6 c0             	movzbl %al,%eax
ffffffff8000b9e2:	48 01 45 f8          	add    %rax,-0x8(%rbp)
ffffffff8000b9e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000b9ea:	48 01 c0             	add    %rax,%rax
ffffffff8000b9ed:	48 83 e8 01          	sub    $0x1,%rax
ffffffff8000b9f1:	48 89 c7             	mov    %rax,%rdi
ffffffff8000b9f4:	e8 9a ff ff ff       	call   ffffffff8000b993 <highest_bit_position>
ffffffff8000b9f9:	83 e8 01             	sub    $0x1,%eax
ffffffff8000b9fc:	ba 01 00 00 00       	mov    $0x1,%edx
ffffffff8000ba01:	89 c1                	mov    %eax,%ecx
ffffffff8000ba03:	48 d3 e2             	shl    %cl,%rdx
ffffffff8000ba06:	48 89 d0             	mov    %rdx,%rax
ffffffff8000ba09:	c9                   	leave  
ffffffff8000ba0a:	c3                   	ret    

ffffffff8000ba0b <size_for_order>:
ffffffff8000ba0b:	f3 0f 1e fa          	endbr64 
ffffffff8000ba0f:	55                   	push   %rbp
ffffffff8000ba10:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000ba13:	48 83 ec 18          	sub    $0x18,%rsp
ffffffff8000ba17:	89 fa                	mov    %edi,%edx
ffffffff8000ba19:	89 f0                	mov    %esi,%eax
ffffffff8000ba1b:	88 55 ec             	mov    %dl,-0x14(%rbp)
ffffffff8000ba1e:	88 45 e8             	mov    %al,-0x18(%rbp)
ffffffff8000ba21:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
ffffffff8000ba28:	00 
ffffffff8000ba29:	48 c7 45 f0 01 00 00 	movq   $0x1,-0x10(%rbp)
ffffffff8000ba30:	00 
ffffffff8000ba31:	eb 1b                	jmp    ffffffff8000ba4e <size_for_order+0x43>
ffffffff8000ba33:	0f b6 45 ec          	movzbl -0x14(%rbp),%eax
ffffffff8000ba37:	48 0f af 45 f0       	imul   -0x10(%rbp),%rax
ffffffff8000ba3c:	48 01 45 f8          	add    %rax,-0x8(%rbp)
ffffffff8000ba40:	0f b6 45 ec          	movzbl -0x14(%rbp),%eax
ffffffff8000ba44:	83 e8 01             	sub    $0x1,%eax
ffffffff8000ba47:	88 45 ec             	mov    %al,-0x14(%rbp)
ffffffff8000ba4a:	48 d1 65 f0          	shlq   -0x10(%rbp)
ffffffff8000ba4e:	0f b6 45 ec          	movzbl -0x14(%rbp),%eax
ffffffff8000ba52:	3a 45 e8             	cmp    -0x18(%rbp),%al
ffffffff8000ba55:	75 dc                	jne    ffffffff8000ba33 <size_for_order+0x28>
ffffffff8000ba57:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000ba5b:	c9                   	leave  
ffffffff8000ba5c:	c3                   	ret    

ffffffff8000ba5d <bitset_sizeof>:
ffffffff8000ba5d:	f3 0f 1e fa          	endbr64 
ffffffff8000ba61:	55                   	push   %rbp
ffffffff8000ba62:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000ba65:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff8000ba69:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8000ba6d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000ba71:	48 83 c0 07          	add    $0x7,%rax
ffffffff8000ba75:	48 c1 e8 03          	shr    $0x3,%rax
ffffffff8000ba79:	c9                   	leave  
ffffffff8000ba7a:	c3                   	ret    

ffffffff8000ba7b <bitset_set>:
ffffffff8000ba7b:	f3 0f 1e fa          	endbr64 
ffffffff8000ba7f:	55                   	push   %rbp
ffffffff8000ba80:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000ba83:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff8000ba87:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff8000ba8b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
ffffffff8000ba8f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8000ba93:	48 c1 e8 03          	shr    $0x3,%rax
ffffffff8000ba97:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8000ba9b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8000ba9f:	83 e0 07             	and    $0x7,%eax
ffffffff8000baa2:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff8000baa6:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff8000baaa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000baae:	48 01 d0             	add    %rdx,%rax
ffffffff8000bab1:	0f b6 08             	movzbl (%rax),%ecx
ffffffff8000bab4:	48 8d 15 ad b5 09 00 	lea    0x9b5ad(%rip),%rdx        # ffffffff800a7068 <m_bitset_index_mask>
ffffffff8000babb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8000babf:	48 01 d0             	add    %rdx,%rax
ffffffff8000bac2:	0f b6 00             	movzbl (%rax),%eax
ffffffff8000bac5:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
ffffffff8000bac9:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff8000bacd:	48 01 f2             	add    %rsi,%rdx
ffffffff8000bad0:	09 c8                	or     %ecx,%eax
ffffffff8000bad2:	88 02                	mov    %al,(%rdx)
ffffffff8000bad4:	90                   	nop
ffffffff8000bad5:	c9                   	leave  
ffffffff8000bad6:	c3                   	ret    

ffffffff8000bad7 <bitset_clear>:
ffffffff8000bad7:	f3 0f 1e fa          	endbr64 
ffffffff8000badb:	55                   	push   %rbp
ffffffff8000badc:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000badf:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff8000bae3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff8000bae7:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
ffffffff8000baeb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8000baef:	48 c1 e8 03          	shr    $0x3,%rax
ffffffff8000baf3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8000baf7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8000bafb:	83 e0 07             	and    $0x7,%eax
ffffffff8000bafe:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff8000bb02:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff8000bb06:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000bb0a:	48 01 d0             	add    %rdx,%rax
ffffffff8000bb0d:	0f b6 00             	movzbl (%rax),%eax
ffffffff8000bb10:	89 c1                	mov    %eax,%ecx
ffffffff8000bb12:	48 8d 15 4f b5 09 00 	lea    0x9b54f(%rip),%rdx        # ffffffff800a7068 <m_bitset_index_mask>
ffffffff8000bb19:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8000bb1d:	48 01 d0             	add    %rdx,%rax
ffffffff8000bb20:	0f b6 00             	movzbl (%rax),%eax
ffffffff8000bb23:	f7 d0                	not    %eax
ffffffff8000bb25:	21 c1                	and    %eax,%ecx
ffffffff8000bb27:	89 ca                	mov    %ecx,%edx
ffffffff8000bb29:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
ffffffff8000bb2d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000bb31:	48 01 c8             	add    %rcx,%rax
ffffffff8000bb34:	88 10                	mov    %dl,(%rax)
ffffffff8000bb36:	90                   	nop
ffffffff8000bb37:	c9                   	leave  
ffffffff8000bb38:	c3                   	ret    

ffffffff8000bb39 <bitset_test>:
ffffffff8000bb39:	f3 0f 1e fa          	endbr64 
ffffffff8000bb3d:	55                   	push   %rbp
ffffffff8000bb3e:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000bb41:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff8000bb45:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff8000bb49:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
ffffffff8000bb4d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8000bb51:	48 c1 e8 03          	shr    $0x3,%rax
ffffffff8000bb55:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8000bb59:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8000bb5d:	83 e0 07             	and    $0x7,%eax
ffffffff8000bb60:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff8000bb64:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff8000bb68:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000bb6c:	48 01 d0             	add    %rdx,%rax
ffffffff8000bb6f:	0f b6 10             	movzbl (%rax),%edx
ffffffff8000bb72:	48 8d 0d ef b4 09 00 	lea    0x9b4ef(%rip),%rcx        # ffffffff800a7068 <m_bitset_index_mask>
ffffffff8000bb79:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8000bb7d:	48 01 c8             	add    %rcx,%rax
ffffffff8000bb80:	0f b6 00             	movzbl (%rax),%eax
ffffffff8000bb83:	21 d0                	and    %edx,%eax
ffffffff8000bb85:	0f b6 c0             	movzbl %al,%eax
ffffffff8000bb88:	c9                   	leave  
ffffffff8000bb89:	c3                   	ret    

ffffffff8000bb8a <bitset_clear_range>:
ffffffff8000bb8a:	f3 0f 1e fa          	endbr64 
ffffffff8000bb8e:	55                   	push   %rbp
ffffffff8000bb8f:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000bb92:	48 83 ec 38          	sub    $0x38,%rsp
ffffffff8000bb96:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
ffffffff8000bb9a:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
ffffffff8000bb9e:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
ffffffff8000bba2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8000bba6:	48 c1 e8 03          	shr    $0x3,%rax
ffffffff8000bbaa:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8000bbae:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8000bbb2:	48 c1 e8 03          	shr    $0x3,%rax
ffffffff8000bbb6:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff8000bbba:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8000bbbe:	83 e0 07             	and    $0x7,%eax
ffffffff8000bbc1:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff8000bbc5:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8000bbc9:	83 e0 07             	and    $0x7,%eax
ffffffff8000bbcc:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff8000bbd0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000bbd4:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
ffffffff8000bbd8:	75 48                	jne    ffffffff8000bc22 <bitset_clear_range+0x98>
ffffffff8000bbda:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff8000bbde:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000bbe2:	48 01 d0             	add    %rdx,%rax
ffffffff8000bbe5:	0f b6 00             	movzbl (%rax),%eax
ffffffff8000bbe8:	89 c1                	mov    %eax,%ecx
ffffffff8000bbea:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000bbee:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
ffffffff8000bbf5:	00 
ffffffff8000bbf6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8000bbfa:	48 01 c2             	add    %rax,%rdx
ffffffff8000bbfd:	48 8d 05 7c 1b 03 00 	lea    0x31b7c(%rip),%rax        # ffffffff8003d780 <bitset_char_mask>
ffffffff8000bc04:	48 01 d0             	add    %rdx,%rax
ffffffff8000bc07:	0f b6 00             	movzbl (%rax),%eax
ffffffff8000bc0a:	f7 d0                	not    %eax
ffffffff8000bc0c:	21 c1                	and    %eax,%ecx
ffffffff8000bc0e:	89 ca                	mov    %ecx,%edx
ffffffff8000bc10:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
ffffffff8000bc14:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000bc18:	48 01 c8             	add    %rcx,%rax
ffffffff8000bc1b:	88 10                	mov    %dl,(%rax)
ffffffff8000bc1d:	e9 8d 00 00 00       	jmp    ffffffff8000bcaf <bitset_clear_range+0x125>
ffffffff8000bc22:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff8000bc26:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000bc2a:	48 01 d0             	add    %rdx,%rax
ffffffff8000bc2d:	0f b6 00             	movzbl (%rax),%eax
ffffffff8000bc30:	89 c1                	mov    %eax,%ecx
ffffffff8000bc32:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000bc36:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
ffffffff8000bc3d:	00 
ffffffff8000bc3e:	48 8d 05 42 1b 03 00 	lea    0x31b42(%rip),%rax        # ffffffff8003d787 <bitset_char_mask+0x7>
ffffffff8000bc45:	0f b6 04 02          	movzbl (%rdx,%rax,1),%eax
ffffffff8000bc49:	f7 d0                	not    %eax
ffffffff8000bc4b:	21 c1                	and    %eax,%ecx
ffffffff8000bc4d:	89 ca                	mov    %ecx,%edx
ffffffff8000bc4f:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
ffffffff8000bc53:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000bc57:	48 01 c8             	add    %rcx,%rax
ffffffff8000bc5a:	88 10                	mov    %dl,(%rax)
ffffffff8000bc5c:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff8000bc60:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8000bc64:	48 01 d0             	add    %rdx,%rax
ffffffff8000bc67:	0f b6 00             	movzbl (%rax),%eax
ffffffff8000bc6a:	89 c1                	mov    %eax,%ecx
ffffffff8000bc6c:	48 8d 15 0d 1b 03 00 	lea    0x31b0d(%rip),%rdx        # ffffffff8003d780 <bitset_char_mask>
ffffffff8000bc73:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8000bc77:	48 01 d0             	add    %rdx,%rax
ffffffff8000bc7a:	0f b6 00             	movzbl (%rax),%eax
ffffffff8000bc7d:	f7 d0                	not    %eax
ffffffff8000bc7f:	21 c1                	and    %eax,%ecx
ffffffff8000bc81:	89 ca                	mov    %ecx,%edx
ffffffff8000bc83:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
ffffffff8000bc87:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8000bc8b:	48 01 c8             	add    %rcx,%rax
ffffffff8000bc8e:	88 10                	mov    %dl,(%rax)
ffffffff8000bc90:	eb 0e                	jmp    ffffffff8000bca0 <bitset_clear_range+0x116>
ffffffff8000bc92:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff8000bc96:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000bc9a:	48 01 d0             	add    %rdx,%rax
ffffffff8000bc9d:	c6 00 00             	movb   $0x0,(%rax)
ffffffff8000bca0:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
ffffffff8000bca5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000bca9:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
ffffffff8000bcad:	75 e3                	jne    ffffffff8000bc92 <bitset_clear_range+0x108>
ffffffff8000bcaf:	90                   	nop
ffffffff8000bcb0:	c9                   	leave  
ffffffff8000bcb1:	c3                   	ret    

ffffffff8000bcb2 <bitset_set_range>:
ffffffff8000bcb2:	f3 0f 1e fa          	endbr64 
ffffffff8000bcb6:	55                   	push   %rbp
ffffffff8000bcb7:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000bcba:	48 83 ec 38          	sub    $0x38,%rsp
ffffffff8000bcbe:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
ffffffff8000bcc2:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
ffffffff8000bcc6:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
ffffffff8000bcca:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8000bcce:	48 c1 e8 03          	shr    $0x3,%rax
ffffffff8000bcd2:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8000bcd6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8000bcda:	48 c1 e8 03          	shr    $0x3,%rax
ffffffff8000bcde:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff8000bce2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8000bce6:	83 e0 07             	and    $0x7,%eax
ffffffff8000bce9:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff8000bced:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8000bcf1:	83 e0 07             	and    $0x7,%eax
ffffffff8000bcf4:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff8000bcf8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000bcfc:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
ffffffff8000bd00:	75 42                	jne    ffffffff8000bd44 <bitset_set_range+0x92>
ffffffff8000bd02:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff8000bd06:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000bd0a:	48 01 d0             	add    %rdx,%rax
ffffffff8000bd0d:	0f b6 08             	movzbl (%rax),%ecx
ffffffff8000bd10:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000bd14:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
ffffffff8000bd1b:	00 
ffffffff8000bd1c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8000bd20:	48 01 c2             	add    %rax,%rdx
ffffffff8000bd23:	48 8d 05 56 1a 03 00 	lea    0x31a56(%rip),%rax        # ffffffff8003d780 <bitset_char_mask>
ffffffff8000bd2a:	48 01 d0             	add    %rdx,%rax
ffffffff8000bd2d:	0f b6 00             	movzbl (%rax),%eax
ffffffff8000bd30:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
ffffffff8000bd34:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff8000bd38:	48 01 f2             	add    %rsi,%rdx
ffffffff8000bd3b:	09 c8                	or     %ecx,%eax
ffffffff8000bd3d:	88 02                	mov    %al,(%rdx)
ffffffff8000bd3f:	e9 81 00 00 00       	jmp    ffffffff8000bdc5 <bitset_set_range+0x113>
ffffffff8000bd44:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff8000bd48:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000bd4c:	48 01 d0             	add    %rdx,%rax
ffffffff8000bd4f:	0f b6 08             	movzbl (%rax),%ecx
ffffffff8000bd52:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000bd56:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
ffffffff8000bd5d:	00 
ffffffff8000bd5e:	48 8d 05 22 1a 03 00 	lea    0x31a22(%rip),%rax        # ffffffff8003d787 <bitset_char_mask+0x7>
ffffffff8000bd65:	0f b6 04 02          	movzbl (%rdx,%rax,1),%eax
ffffffff8000bd69:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
ffffffff8000bd6d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff8000bd71:	48 01 f2             	add    %rsi,%rdx
ffffffff8000bd74:	09 c8                	or     %ecx,%eax
ffffffff8000bd76:	88 02                	mov    %al,(%rdx)
ffffffff8000bd78:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff8000bd7c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8000bd80:	48 01 d0             	add    %rdx,%rax
ffffffff8000bd83:	0f b6 08             	movzbl (%rax),%ecx
ffffffff8000bd86:	48 8d 15 f3 19 03 00 	lea    0x319f3(%rip),%rdx        # ffffffff8003d780 <bitset_char_mask>
ffffffff8000bd8d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8000bd91:	48 01 d0             	add    %rdx,%rax
ffffffff8000bd94:	0f b6 00             	movzbl (%rax),%eax
ffffffff8000bd97:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
ffffffff8000bd9b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff8000bd9f:	48 01 f2             	add    %rsi,%rdx
ffffffff8000bda2:	09 c8                	or     %ecx,%eax
ffffffff8000bda4:	88 02                	mov    %al,(%rdx)
ffffffff8000bda6:	eb 0e                	jmp    ffffffff8000bdb6 <bitset_set_range+0x104>
ffffffff8000bda8:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff8000bdac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000bdb0:	48 01 d0             	add    %rdx,%rax
ffffffff8000bdb3:	c6 00 ff             	movb   $0xff,(%rax)
ffffffff8000bdb6:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
ffffffff8000bdbb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000bdbf:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
ffffffff8000bdc3:	75 e3                	jne    ffffffff8000bda8 <bitset_set_range+0xf6>
ffffffff8000bdc5:	90                   	nop
ffffffff8000bdc6:	c9                   	leave  
ffffffff8000bdc7:	c3                   	ret    

ffffffff8000bdc8 <bitset_count_range>:
ffffffff8000bdc8:	f3 0f 1e fa          	endbr64 
ffffffff8000bdcc:	55                   	push   %rbp
ffffffff8000bdcd:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000bdd0:	53                   	push   %rbx
ffffffff8000bdd1:	48 83 ec 48          	sub    $0x48,%rsp
ffffffff8000bdd5:	48 89 7d c0          	mov    %rdi,-0x40(%rbp)
ffffffff8000bdd9:	48 89 75 b8          	mov    %rsi,-0x48(%rbp)
ffffffff8000bddd:	48 89 55 b0          	mov    %rdx,-0x50(%rbp)
ffffffff8000bde1:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff8000bde5:	48 c1 e8 03          	shr    $0x3,%rax
ffffffff8000bde9:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff8000bded:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
ffffffff8000bdf1:	48 c1 e8 03          	shr    $0x3,%rax
ffffffff8000bdf5:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff8000bdf9:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff8000bdfd:	83 e0 07             	and    $0x7,%eax
ffffffff8000be00:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
ffffffff8000be04:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
ffffffff8000be08:	83 e0 07             	and    $0x7,%eax
ffffffff8000be0b:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
ffffffff8000be0f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8000be13:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
ffffffff8000be17:	75 41                	jne    ffffffff8000be5a <bitset_count_range+0x92>
ffffffff8000be19:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
ffffffff8000be1d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8000be21:	48 01 d0             	add    %rdx,%rax
ffffffff8000be24:	0f b6 10             	movzbl (%rax),%edx
ffffffff8000be27:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8000be2b:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
ffffffff8000be32:	00 
ffffffff8000be33:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8000be37:	48 01 c1             	add    %rax,%rcx
ffffffff8000be3a:	48 8d 05 3f 19 03 00 	lea    0x3193f(%rip),%rax        # ffffffff8003d780 <bitset_char_mask>
ffffffff8000be41:	48 01 c8             	add    %rcx,%rax
ffffffff8000be44:	0f b6 00             	movzbl (%rax),%eax
ffffffff8000be47:	21 d0                	and    %edx,%eax
ffffffff8000be49:	0f b6 c0             	movzbl %al,%eax
ffffffff8000be4c:	89 c7                	mov    %eax,%edi
ffffffff8000be4e:	e8 fa fa ff ff       	call   ffffffff8000b94d <popcount_byte>
ffffffff8000be53:	89 c0                	mov    %eax,%eax
ffffffff8000be55:	e9 99 00 00 00       	jmp    ffffffff8000bef3 <bitset_count_range+0x12b>
ffffffff8000be5a:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
ffffffff8000be5e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8000be62:	48 01 d0             	add    %rdx,%rax
ffffffff8000be65:	0f b6 08             	movzbl (%rax),%ecx
ffffffff8000be68:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8000be6c:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
ffffffff8000be73:	00 
ffffffff8000be74:	48 8d 05 0c 19 03 00 	lea    0x3190c(%rip),%rax        # ffffffff8003d787 <bitset_char_mask+0x7>
ffffffff8000be7b:	0f b6 04 02          	movzbl (%rdx,%rax,1),%eax
ffffffff8000be7f:	21 c8                	and    %ecx,%eax
ffffffff8000be81:	0f b6 c0             	movzbl %al,%eax
ffffffff8000be84:	89 c7                	mov    %eax,%edi
ffffffff8000be86:	e8 c2 fa ff ff       	call   ffffffff8000b94d <popcount_byte>
ffffffff8000be8b:	89 c3                	mov    %eax,%ebx
ffffffff8000be8d:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
ffffffff8000be91:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8000be95:	48 01 d0             	add    %rdx,%rax
ffffffff8000be98:	0f b6 10             	movzbl (%rax),%edx
ffffffff8000be9b:	48 8d 0d de 18 03 00 	lea    0x318de(%rip),%rcx        # ffffffff8003d780 <bitset_char_mask>
ffffffff8000bea2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8000bea6:	48 01 c8             	add    %rcx,%rax
ffffffff8000bea9:	0f b6 00             	movzbl (%rax),%eax
ffffffff8000beac:	21 d0                	and    %edx,%eax
ffffffff8000beae:	0f b6 c0             	movzbl %al,%eax
ffffffff8000beb1:	89 c7                	mov    %eax,%edi
ffffffff8000beb3:	e8 95 fa ff ff       	call   ffffffff8000b94d <popcount_byte>
ffffffff8000beb8:	01 d8                	add    %ebx,%eax
ffffffff8000beba:	89 c0                	mov    %eax,%eax
ffffffff8000bebc:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff8000bec0:	eb 1e                	jmp    ffffffff8000bee0 <bitset_count_range+0x118>
ffffffff8000bec2:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
ffffffff8000bec6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8000beca:	48 01 d0             	add    %rdx,%rax
ffffffff8000becd:	0f b6 00             	movzbl (%rax),%eax
ffffffff8000bed0:	0f b6 c0             	movzbl %al,%eax
ffffffff8000bed3:	89 c7                	mov    %eax,%edi
ffffffff8000bed5:	e8 73 fa ff ff       	call   ffffffff8000b94d <popcount_byte>
ffffffff8000beda:	89 c0                	mov    %eax,%eax
ffffffff8000bedc:	48 01 45 e8          	add    %rax,-0x18(%rbp)
ffffffff8000bee0:	48 83 45 f0 01       	addq   $0x1,-0x10(%rbp)
ffffffff8000bee5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8000bee9:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
ffffffff8000beed:	75 d3                	jne    ffffffff8000bec2 <bitset_count_range+0xfa>
ffffffff8000beef:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000bef3:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
ffffffff8000bef7:	c9                   	leave  
ffffffff8000bef8:	c3                   	ret    

ffffffff8000bef9 <bitset_shift_left>:
ffffffff8000bef9:	f3 0f 1e fa          	endbr64 
ffffffff8000befd:	55                   	push   %rbp
ffffffff8000befe:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000bf01:	48 83 ec 40          	sub    $0x40,%rsp
ffffffff8000bf05:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
ffffffff8000bf09:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
ffffffff8000bf0d:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
ffffffff8000bf11:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
ffffffff8000bf15:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8000bf19:	48 2b 45 d0          	sub    -0x30(%rbp),%rax
ffffffff8000bf1d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff8000bf21:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
ffffffff8000bf28:	00 
ffffffff8000bf29:	eb 5b                	jmp    ffffffff8000bf86 <bitset_shift_left+0x8d>
ffffffff8000bf2b:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
ffffffff8000bf2f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000bf33:	48 01 d0             	add    %rdx,%rax
ffffffff8000bf36:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff8000bf3a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff8000bf3e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8000bf42:	48 89 d6             	mov    %rdx,%rsi
ffffffff8000bf45:	48 89 c7             	mov    %rax,%rdi
ffffffff8000bf48:	e8 ec fb ff ff       	call   ffffffff8000bb39 <bitset_test>
ffffffff8000bf4d:	85 c0                	test   %eax,%eax
ffffffff8000bf4f:	74 19                	je     ffffffff8000bf6a <bitset_shift_left+0x71>
ffffffff8000bf51:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000bf55:	48 2b 45 c0          	sub    -0x40(%rbp),%rax
ffffffff8000bf59:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff8000bf5d:	48 89 c6             	mov    %rax,%rsi
ffffffff8000bf60:	48 89 d7             	mov    %rdx,%rdi
ffffffff8000bf63:	e8 13 fb ff ff       	call   ffffffff8000ba7b <bitset_set>
ffffffff8000bf68:	eb 17                	jmp    ffffffff8000bf81 <bitset_shift_left+0x88>
ffffffff8000bf6a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000bf6e:	48 2b 45 c0          	sub    -0x40(%rbp),%rax
ffffffff8000bf72:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff8000bf76:	48 89 c6             	mov    %rax,%rsi
ffffffff8000bf79:	48 89 d7             	mov    %rdx,%rdi
ffffffff8000bf7c:	e8 56 fb ff ff       	call   ffffffff8000bad7 <bitset_clear>
ffffffff8000bf81:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
ffffffff8000bf86:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000bf8a:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
ffffffff8000bf8e:	72 9b                	jb     ffffffff8000bf2b <bitset_shift_left+0x32>
ffffffff8000bf90:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff8000bf94:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8000bf98:	48 01 d0             	add    %rdx,%rax
ffffffff8000bf9b:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
ffffffff8000bf9f:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
ffffffff8000bfa3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8000bfa7:	48 89 ce             	mov    %rcx,%rsi
ffffffff8000bfaa:	48 89 c7             	mov    %rax,%rdi
ffffffff8000bfad:	e8 d8 fb ff ff       	call   ffffffff8000bb8a <bitset_clear_range>
ffffffff8000bfb2:	90                   	nop
ffffffff8000bfb3:	c9                   	leave  
ffffffff8000bfb4:	c3                   	ret    

ffffffff8000bfb5 <bitset_shift_right>:
ffffffff8000bfb5:	f3 0f 1e fa          	endbr64 
ffffffff8000bfb9:	55                   	push   %rbp
ffffffff8000bfba:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000bfbd:	48 83 ec 30          	sub    $0x30,%rsp
ffffffff8000bfc1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff8000bfc5:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
ffffffff8000bfc9:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
ffffffff8000bfcd:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
ffffffff8000bfd1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8000bfd5:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
ffffffff8000bfd9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8000bfdd:	eb 61                	jmp    ffffffff8000c040 <bitset_shift_right+0x8b>
ffffffff8000bfdf:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff8000bfe3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8000bfe7:	48 01 d0             	add    %rdx,%rax
ffffffff8000bfea:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff8000bfee:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff8000bff2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000bff6:	48 89 d6             	mov    %rdx,%rsi
ffffffff8000bff9:	48 89 c7             	mov    %rax,%rdi
ffffffff8000bffc:	e8 38 fb ff ff       	call   ffffffff8000bb39 <bitset_test>
ffffffff8000c001:	85 c0                	test   %eax,%eax
ffffffff8000c003:	74 1c                	je     ffffffff8000c021 <bitset_shift_right+0x6c>
ffffffff8000c005:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff8000c009:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8000c00d:	48 01 c2             	add    %rax,%rdx
ffffffff8000c010:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000c014:	48 89 d6             	mov    %rdx,%rsi
ffffffff8000c017:	48 89 c7             	mov    %rax,%rdi
ffffffff8000c01a:	e8 5c fa ff ff       	call   ffffffff8000ba7b <bitset_set>
ffffffff8000c01f:	eb 1a                	jmp    ffffffff8000c03b <bitset_shift_right+0x86>
ffffffff8000c021:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff8000c025:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8000c029:	48 01 c2             	add    %rax,%rdx
ffffffff8000c02c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000c030:	48 89 d6             	mov    %rdx,%rsi
ffffffff8000c033:	48 89 c7             	mov    %rax,%rdi
ffffffff8000c036:	e8 9c fa ff ff       	call   ffffffff8000bad7 <bitset_clear>
ffffffff8000c03b:	48 83 6d f8 01       	subq   $0x1,-0x8(%rbp)
ffffffff8000c040:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff8000c045:	79 98                	jns    ffffffff8000bfdf <bitset_shift_right+0x2a>
ffffffff8000c047:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff8000c04b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8000c04f:	48 01 d0             	add    %rdx,%rax
ffffffff8000c052:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
ffffffff8000c056:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
ffffffff8000c05a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000c05e:	48 89 ce             	mov    %rcx,%rsi
ffffffff8000c061:	48 89 c7             	mov    %rax,%rdi
ffffffff8000c064:	e8 21 fb ff ff       	call   ffffffff8000bb8a <bitset_clear_range>
ffffffff8000c069:	90                   	nop
ffffffff8000c06a:	c9                   	leave  
ffffffff8000c06b:	c3                   	ret    

ffffffff8000c06c <bitset_debug>:
ffffffff8000c06c:	f3 0f 1e fa          	endbr64 
ffffffff8000c070:	55                   	push   %rbp
ffffffff8000c071:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000c074:	53                   	push   %rbx
ffffffff8000c075:	48 83 ec 28          	sub    $0x28,%rsp
ffffffff8000c079:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
ffffffff8000c07d:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
ffffffff8000c081:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
ffffffff8000c088:	00 
ffffffff8000c089:	eb 52                	jmp    ffffffff8000c0dd <bitset_debug+0x71>
ffffffff8000c08b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff8000c08f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8000c093:	48 89 d6             	mov    %rdx,%rsi
ffffffff8000c096:	48 89 c7             	mov    %rax,%rdi
ffffffff8000c099:	e8 9b fa ff ff       	call   ffffffff8000bb39 <bitset_test>
ffffffff8000c09e:	85 c0                	test   %eax,%eax
ffffffff8000c0a0:	74 07                	je     ffffffff8000c0a9 <bitset_debug+0x3d>
ffffffff8000c0a2:	bb 01 00 00 00       	mov    $0x1,%ebx
ffffffff8000c0a7:	eb 05                	jmp    ffffffff8000c0ae <bitset_debug+0x42>
ffffffff8000c0a9:	bb 00 00 00 00       	mov    $0x0,%ebx
ffffffff8000c0ae:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000c0b3:	e8 29 ac ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff8000c0b8:	48 89 c6             	mov    %rax,%rsi
ffffffff8000c0bb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000c0bf:	89 d9                	mov    %ebx,%ecx
ffffffff8000c0c1:	48 89 c2             	mov    %rax,%rdx
ffffffff8000c0c4:	48 8d 05 00 c3 02 00 	lea    0x2c300(%rip),%rax        # ffffffff800383cb <g_stivale2_header+0x13cb>
ffffffff8000c0cb:	48 89 c7             	mov    %rax,%rdi
ffffffff8000c0ce:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000c0d3:	e8 68 74 00 00       	call   ffffffff80013540 <printf_>
ffffffff8000c0d8:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
ffffffff8000c0dd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000c0e1:	48 3b 45 d0          	cmp    -0x30(%rbp),%rax
ffffffff8000c0e5:	72 a4                	jb     ffffffff8000c08b <bitset_debug+0x1f>
ffffffff8000c0e7:	90                   	nop
ffffffff8000c0e8:	90                   	nop
ffffffff8000c0e9:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
ffffffff8000c0ed:	c9                   	leave  
ffffffff8000c0ee:	c3                   	ret    

ffffffff8000c0ef <buddy_tree_depth>:
ffffffff8000c0ef:	f3 0f 1e fa          	endbr64 
ffffffff8000c0f3:	55                   	push   %rbp
ffffffff8000c0f4:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000c0f7:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff8000c0fb:	48 89 f8             	mov    %rdi,%rax
ffffffff8000c0fe:	48 89 f1             	mov    %rsi,%rcx
ffffffff8000c101:	48 89 ca             	mov    %rcx,%rdx
ffffffff8000c104:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff8000c108:	48 89 55 f8          	mov    %rdx,-0x8(%rbp)
ffffffff8000c10c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000c110:	c9                   	leave  
ffffffff8000c111:	c3                   	ret    

ffffffff8000c112 <buddy_tree_order_for_memory>:
ffffffff8000c112:	f3 0f 1e fa          	endbr64 
ffffffff8000c116:	55                   	push   %rbp
ffffffff8000c117:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000c11a:	48 83 ec 18          	sub    $0x18,%rsp
ffffffff8000c11e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff8000c122:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000c126:	48 c1 e8 06          	shr    $0x6,%rax
ffffffff8000c12a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8000c12e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000c132:	48 89 c7             	mov    %rax,%rdi
ffffffff8000c135:	e8 8d f8 ff ff       	call   ffffffff8000b9c7 <ceiling_power_of_two>
ffffffff8000c13a:	48 89 c7             	mov    %rax,%rdi
ffffffff8000c13d:	e8 51 f8 ff ff       	call   ffffffff8000b993 <highest_bit_position>
ffffffff8000c142:	c9                   	leave  
ffffffff8000c143:	c3                   	ret    

ffffffff8000c144 <buddy_tree_sizeof>:
ffffffff8000c144:	f3 0f 1e fa          	endbr64 
ffffffff8000c148:	55                   	push   %rbp
ffffffff8000c149:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000c14c:	48 83 ec 18          	sub    $0x18,%rsp
ffffffff8000c150:	89 f8                	mov    %edi,%eax
ffffffff8000c152:	88 45 ec             	mov    %al,-0x14(%rbp)
ffffffff8000c155:	0f b6 45 ec          	movzbl -0x14(%rbp),%eax
ffffffff8000c159:	be 00 00 00 00       	mov    $0x0,%esi
ffffffff8000c15e:	89 c7                	mov    %eax,%edi
ffffffff8000c160:	e8 a6 f8 ff ff       	call   ffffffff8000ba0b <size_for_order>
ffffffff8000c165:	48 89 c7             	mov    %rax,%rdi
ffffffff8000c168:	e8 f0 f8 ff ff       	call   ffffffff8000ba5d <bitset_sizeof>
ffffffff8000c16d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8000c171:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000c175:	83 e0 07             	and    $0x7,%eax
ffffffff8000c178:	48 85 c0             	test   %rax,%rax
ffffffff8000c17b:	74 0b                	je     ffffffff8000c188 <buddy_tree_sizeof+0x44>
ffffffff8000c17d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000c181:	83 e0 07             	and    $0x7,%eax
ffffffff8000c184:	48 01 45 f8          	add    %rax,-0x8(%rbp)
ffffffff8000c188:	0f b6 45 ec          	movzbl -0x14(%rbp),%eax
ffffffff8000c18c:	83 c0 02             	add    $0x2,%eax
ffffffff8000c18f:	48 98                	cltq   
ffffffff8000c191:	48 c1 e0 03          	shl    $0x3,%rax
ffffffff8000c195:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff8000c199:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff8000c19d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8000c1a1:	48 01 d0             	add    %rdx,%rax
ffffffff8000c1a4:	c9                   	leave  
ffffffff8000c1a5:	c3                   	ret    

ffffffff8000c1a6 <buddy_tree_root>:
ffffffff8000c1a6:	f3 0f 1e fa          	endbr64 
ffffffff8000c1aa:	55                   	push   %rbp
ffffffff8000c1ab:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000c1ae:	53                   	push   %rbx
ffffffff8000c1af:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8000c1b4:	ba 01 00 00 00       	mov    $0x1,%edx
ffffffff8000c1b9:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
ffffffff8000c1bd:	c9                   	leave  
ffffffff8000c1be:	c3                   	ret    

ffffffff8000c1bf <buddy_tree_leftmost_child_internal>:
ffffffff8000c1bf:	f3 0f 1e fa          	endbr64 
ffffffff8000c1c3:	55                   	push   %rbp
ffffffff8000c1c4:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000c1c7:	53                   	push   %rbx
ffffffff8000c1c8:	48 83 ec 18          	sub    $0x18,%rsp
ffffffff8000c1cc:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff8000c1d0:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
ffffffff8000c1d4:	83 e9 01             	sub    $0x1,%ecx
ffffffff8000c1d7:	be 01 00 00 00       	mov    $0x1,%esi
ffffffff8000c1dc:	d3 e6                	shl    %cl,%esi
ffffffff8000c1de:	89 f1                	mov    %esi,%ecx
ffffffff8000c1e0:	48 63 c9             	movslq %ecx,%rcx
ffffffff8000c1e3:	48 89 c8             	mov    %rcx,%rax
ffffffff8000c1e6:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff8000c1ea:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
ffffffff8000c1ee:	c9                   	leave  
ffffffff8000c1ef:	c3                   	ret    

ffffffff8000c1f0 <buddy_tree_leftmost_child>:
ffffffff8000c1f0:	f3 0f 1e fa          	endbr64 
ffffffff8000c1f4:	55                   	push   %rbp
ffffffff8000c1f5:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000c1f8:	0f b6 05 db 4e 2a 00 	movzbl 0x2a4edb(%rip),%eax        # ffffffff802b10da <m_buddy_tree_order>
ffffffff8000c1ff:	0f b6 c0             	movzbl %al,%eax
ffffffff8000c202:	48 89 c7             	mov    %rax,%rdi
ffffffff8000c205:	e8 b5 ff ff ff       	call   ffffffff8000c1bf <buddy_tree_leftmost_child_internal>
ffffffff8000c20a:	5d                   	pop    %rbp
ffffffff8000c20b:	c3                   	ret    

ffffffff8000c20c <buddy_tree_left_child>:
ffffffff8000c20c:	f3 0f 1e fa          	endbr64 
ffffffff8000c210:	55                   	push   %rbp
ffffffff8000c211:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000c214:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff8000c218:	48 89 f8             	mov    %rdi,%rax
ffffffff8000c21b:	48 89 f1             	mov    %rsi,%rcx
ffffffff8000c21e:	48 89 ca             	mov    %rcx,%rdx
ffffffff8000c221:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff8000c225:	48 89 55 f8          	mov    %rdx,-0x8(%rbp)
ffffffff8000c229:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8000c22d:	48 01 c0             	add    %rax,%rax
ffffffff8000c230:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff8000c234:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000c238:	48 83 c0 01          	add    $0x1,%rax
ffffffff8000c23c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8000c240:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8000c244:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff8000c248:	c9                   	leave  
ffffffff8000c249:	c3                   	ret    

ffffffff8000c24a <buddy_tree_right_child>:
ffffffff8000c24a:	f3 0f 1e fa          	endbr64 
ffffffff8000c24e:	55                   	push   %rbp
ffffffff8000c24f:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000c252:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff8000c256:	48 89 f8             	mov    %rdi,%rax
ffffffff8000c259:	48 89 f1             	mov    %rsi,%rcx
ffffffff8000c25c:	48 89 ca             	mov    %rcx,%rdx
ffffffff8000c25f:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff8000c263:	48 89 55 f8          	mov    %rdx,-0x8(%rbp)
ffffffff8000c267:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8000c26b:	48 01 c0             	add    %rax,%rax
ffffffff8000c26e:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff8000c272:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8000c276:	48 83 c0 01          	add    $0x1,%rax
ffffffff8000c27a:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff8000c27e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000c282:	48 83 c0 01          	add    $0x1,%rax
ffffffff8000c286:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8000c28a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8000c28e:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff8000c292:	c9                   	leave  
ffffffff8000c293:	c3                   	ret    

ffffffff8000c294 <buddy_tree_sibling>:
ffffffff8000c294:	f3 0f 1e fa          	endbr64 
ffffffff8000c298:	55                   	push   %rbp
ffffffff8000c299:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000c29c:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff8000c2a0:	48 89 f8             	mov    %rdi,%rax
ffffffff8000c2a3:	48 89 f1             	mov    %rsi,%rcx
ffffffff8000c2a6:	48 89 ca             	mov    %rcx,%rdx
ffffffff8000c2a9:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff8000c2ad:	48 89 55 f8          	mov    %rdx,-0x8(%rbp)
ffffffff8000c2b1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8000c2b5:	48 83 f0 01          	xor    $0x1,%rax
ffffffff8000c2b9:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff8000c2bd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8000c2c1:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff8000c2c5:	c9                   	leave  
ffffffff8000c2c6:	c3                   	ret    

ffffffff8000c2c7 <buddy_tree_parent>:
ffffffff8000c2c7:	f3 0f 1e fa          	endbr64 
ffffffff8000c2cb:	55                   	push   %rbp
ffffffff8000c2cc:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000c2cf:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff8000c2d3:	48 89 f8             	mov    %rdi,%rax
ffffffff8000c2d6:	48 89 f1             	mov    %rsi,%rcx
ffffffff8000c2d9:	48 89 ca             	mov    %rcx,%rdx
ffffffff8000c2dc:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff8000c2e0:	48 89 55 f8          	mov    %rdx,-0x8(%rbp)
ffffffff8000c2e4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8000c2e8:	48 d1 e8             	shr    %rax
ffffffff8000c2eb:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff8000c2ef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000c2f3:	48 83 e8 01          	sub    $0x1,%rax
ffffffff8000c2f7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8000c2fb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8000c2ff:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff8000c303:	c9                   	leave  
ffffffff8000c304:	c3                   	ret    

ffffffff8000c305 <buddy_tree_right_adjacent>:
ffffffff8000c305:	f3 0f 1e fa          	endbr64 
ffffffff8000c309:	55                   	push   %rbp
ffffffff8000c30a:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000c30d:	53                   	push   %rbx
ffffffff8000c30e:	48 83 ec 18          	sub    $0x18,%rsp
ffffffff8000c312:	48 89 f9             	mov    %rdi,%rcx
ffffffff8000c315:	48 89 f3             	mov    %rsi,%rbx
ffffffff8000c318:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
ffffffff8000c31c:	48 89 5d e8          	mov    %rbx,-0x18(%rbp)
ffffffff8000c320:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
ffffffff8000c324:	48 8d 71 01          	lea    0x1(%rcx),%rsi
ffffffff8000c328:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
ffffffff8000c32c:	48 31 ce             	xor    %rcx,%rsi
ffffffff8000c32f:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
ffffffff8000c333:	48 39 ce             	cmp    %rcx,%rsi
ffffffff8000c336:	76 0c                	jbe    ffffffff8000c344 <buddy_tree_right_adjacent+0x3f>
ffffffff8000c338:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000c33d:	ba 00 00 00 00       	mov    $0x0,%edx
ffffffff8000c342:	eb 14                	jmp    ffffffff8000c358 <buddy_tree_right_adjacent+0x53>
ffffffff8000c344:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8000c348:	48 83 c0 01          	add    $0x1,%rax
ffffffff8000c34c:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff8000c350:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8000c354:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff8000c358:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
ffffffff8000c35c:	c9                   	leave  
ffffffff8000c35d:	c3                   	ret    

ffffffff8000c35e <buddy_tree_index_internal>:
ffffffff8000c35e:	f3 0f 1e fa          	endbr64 
ffffffff8000c362:	55                   	push   %rbp
ffffffff8000c363:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000c366:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff8000c36a:	48 89 f8             	mov    %rdi,%rax
ffffffff8000c36d:	48 89 f1             	mov    %rsi,%rcx
ffffffff8000c370:	48 89 ca             	mov    %rcx,%rdx
ffffffff8000c373:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff8000c377:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
ffffffff8000c37b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000c37f:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
ffffffff8000c383:	48 ba 11 04 41 10 04 	movabs $0x410410410410411,%rdx
ffffffff8000c38a:	41 10 04 
ffffffff8000c38d:	48 89 c8             	mov    %rcx,%rax
ffffffff8000c390:	48 f7 e2             	mul    %rdx
ffffffff8000c393:	48 89 c8             	mov    %rcx,%rax
ffffffff8000c396:	48 29 d0             	sub    %rdx,%rax
ffffffff8000c399:	48 d1 e8             	shr    %rax
ffffffff8000c39c:	48 01 d0             	add    %rdx,%rax
ffffffff8000c39f:	48 c1 e8 05          	shr    $0x5,%rax
ffffffff8000c3a3:	48 89 c2             	mov    %rax,%rdx
ffffffff8000c3a6:	48 c1 e2 06          	shl    $0x6,%rdx
ffffffff8000c3aa:	48 29 c2             	sub    %rax,%rdx
ffffffff8000c3ad:	48 89 c8             	mov    %rcx,%rax
ffffffff8000c3b0:	48 29 d0             	sub    %rdx,%rax
ffffffff8000c3b3:	ba 01 00 00 00       	mov    $0x1,%edx
ffffffff8000c3b8:	89 c1                	mov    %eax,%ecx
ffffffff8000c3ba:	d3 e2                	shl    %cl,%edx
ffffffff8000c3bc:	89 d0                	mov    %edx,%eax
ffffffff8000c3be:	89 c0                	mov    %eax,%eax
ffffffff8000c3c0:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8000c3c4:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff8000c3c8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000c3cc:	48 f7 d0             	not    %rax
ffffffff8000c3cf:	48 21 d0             	and    %rdx,%rax
ffffffff8000c3d2:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff8000c3d6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8000c3da:	c9                   	leave  
ffffffff8000c3db:	c3                   	ret    

ffffffff8000c3dc <buddy_tree_index>:
ffffffff8000c3dc:	f3 0f 1e fa          	endbr64 
ffffffff8000c3e0:	55                   	push   %rbp
ffffffff8000c3e1:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000c3e4:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff8000c3e8:	48 89 f8             	mov    %rdi,%rax
ffffffff8000c3eb:	48 89 f1             	mov    %rsi,%rcx
ffffffff8000c3ee:	48 89 ca             	mov    %rcx,%rdx
ffffffff8000c3f1:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff8000c3f5:	48 89 55 f8          	mov    %rdx,-0x8(%rbp)
ffffffff8000c3f9:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff8000c3fd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000c401:	48 89 d7             	mov    %rdx,%rdi
ffffffff8000c404:	48 89 c6             	mov    %rax,%rsi
ffffffff8000c407:	e8 52 ff ff ff       	call   ffffffff8000c35e <buddy_tree_index_internal>
ffffffff8000c40c:	c9                   	leave  
ffffffff8000c40d:	c3                   	ret    

ffffffff8000c40e <buddy_tree_populate_size_for_order>:
ffffffff8000c40e:	f3 0f 1e fa          	endbr64 
ffffffff8000c412:	55                   	push   %rbp
ffffffff8000c413:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000c416:	53                   	push   %rbx
ffffffff8000c417:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff8000c41b:	0f b6 05 b8 4c 2a 00 	movzbl 0x2a4cb8(%rip),%eax        # ffffffff802b10da <m_buddy_tree_order>
ffffffff8000c422:	0f b6 c0             	movzbl %al,%eax
ffffffff8000c425:	be 00 00 00 00       	mov    $0x0,%esi
ffffffff8000c42a:	89 c7                	mov    %eax,%edi
ffffffff8000c42c:	e8 da f5 ff ff       	call   ffffffff8000ba0b <size_for_order>
ffffffff8000c431:	48 89 c7             	mov    %rax,%rdi
ffffffff8000c434:	e8 24 f6 ff ff       	call   ffffffff8000ba5d <bitset_sizeof>
ffffffff8000c439:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff8000c43d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8000c441:	83 e0 07             	and    $0x7,%eax
ffffffff8000c444:	48 85 c0             	test   %rax,%rax
ffffffff8000c447:	74 0b                	je     ffffffff8000c454 <buddy_tree_populate_size_for_order+0x46>
ffffffff8000c449:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8000c44d:	83 e0 07             	and    $0x7,%eax
ffffffff8000c450:	48 01 45 f0          	add    %rax,-0x10(%rbp)
ffffffff8000c454:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8000c458:	48 c1 e8 03          	shr    $0x3,%rax
ffffffff8000c45c:	48 89 05 85 4c 2a 00 	mov    %rax,0x2a4c85(%rip)        # ffffffff802b10e8 <m_buddy_tree_size_for_order_offset>
ffffffff8000c463:	48 8b 05 7e 4c 2a 00 	mov    0x2a4c7e(%rip),%rax        # ffffffff802b10e8 <m_buddy_tree_size_for_order_offset>
ffffffff8000c46a:	48 83 c0 01          	add    $0x1,%rax
ffffffff8000c46e:	48 89 05 73 4c 2a 00 	mov    %rax,0x2a4c73(%rip)        # ffffffff802b10e8 <m_buddy_tree_size_for_order_offset>
ffffffff8000c475:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
ffffffff8000c47c:	00 
ffffffff8000c47d:	eb 46                	jmp    ffffffff8000c4c5 <buddy_tree_populate_size_for_order+0xb7>
ffffffff8000c47f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000c483:	0f b6 d0             	movzbl %al,%edx
ffffffff8000c486:	0f b6 05 4d 4c 2a 00 	movzbl 0x2a4c4d(%rip),%eax        # ffffffff802b10da <m_buddy_tree_order>
ffffffff8000c48d:	0f b6 c0             	movzbl %al,%eax
ffffffff8000c490:	48 8b 35 51 4c 2a 00 	mov    0x2a4c51(%rip),%rsi        # ffffffff802b10e8 <m_buddy_tree_size_for_order_offset>
ffffffff8000c497:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
ffffffff8000c49b:	48 01 f1             	add    %rsi,%rcx
ffffffff8000c49e:	48 8d 34 cd 00 00 00 	lea    0x0(,%rcx,8),%rsi
ffffffff8000c4a5:	00 
ffffffff8000c4a6:	48 b9 00 00 00 40 80 	movabs $0xffff808040000000,%rcx
ffffffff8000c4ad:	80 ff ff 
ffffffff8000c4b0:	48 8d 1c 0e          	lea    (%rsi,%rcx,1),%rbx
ffffffff8000c4b4:	89 d6                	mov    %edx,%esi
ffffffff8000c4b6:	89 c7                	mov    %eax,%edi
ffffffff8000c4b8:	e8 4e f5 ff ff       	call   ffffffff8000ba0b <size_for_order>
ffffffff8000c4bd:	48 89 03             	mov    %rax,(%rbx)
ffffffff8000c4c0:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
ffffffff8000c4c5:	0f b6 05 0e 4c 2a 00 	movzbl 0x2a4c0e(%rip),%eax        # ffffffff802b10da <m_buddy_tree_order>
ffffffff8000c4cc:	0f b6 c0             	movzbl %al,%eax
ffffffff8000c4cf:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
ffffffff8000c4d3:	76 aa                	jbe    ffffffff8000c47f <buddy_tree_populate_size_for_order+0x71>
ffffffff8000c4d5:	90                   	nop
ffffffff8000c4d6:	90                   	nop
ffffffff8000c4d7:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
ffffffff8000c4db:	c9                   	leave  
ffffffff8000c4dc:	c3                   	ret    

ffffffff8000c4dd <buddy_tree_size_for_order>:
ffffffff8000c4dd:	f3 0f 1e fa          	endbr64 
ffffffff8000c4e1:	55                   	push   %rbp
ffffffff8000c4e2:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000c4e5:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff8000c4e9:	89 f8                	mov    %edi,%eax
ffffffff8000c4eb:	88 45 fc             	mov    %al,-0x4(%rbp)
ffffffff8000c4ee:	0f b6 45 fc          	movzbl -0x4(%rbp),%eax
ffffffff8000c4f2:	48 8b 15 ef 4b 2a 00 	mov    0x2a4bef(%rip),%rdx        # ffffffff802b10e8 <m_buddy_tree_size_for_order_offset>
ffffffff8000c4f9:	48 01 d0             	add    %rdx,%rax
ffffffff8000c4fc:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
ffffffff8000c503:	00 
ffffffff8000c504:	48 b8 00 00 00 40 80 	movabs $0xffff808040000000,%rax
ffffffff8000c50b:	80 ff ff 
ffffffff8000c50e:	48 01 d0             	add    %rdx,%rax
ffffffff8000c511:	48 8b 00             	mov    (%rax),%rax
ffffffff8000c514:	c9                   	leave  
ffffffff8000c515:	c3                   	ret    

ffffffff8000c516 <buddy_tree_internal_position_tree>:
ffffffff8000c516:	f3 0f 1e fa          	endbr64 
ffffffff8000c51a:	55                   	push   %rbp
ffffffff8000c51b:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000c51e:	53                   	push   %rbx
ffffffff8000c51f:	48 83 ec 38          	sub    $0x38,%rsp
ffffffff8000c523:	48 89 f8             	mov    %rdi,%rax
ffffffff8000c526:	48 89 f1             	mov    %rsi,%rcx
ffffffff8000c529:	48 89 ca             	mov    %rcx,%rdx
ffffffff8000c52c:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
ffffffff8000c530:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
ffffffff8000c534:	48 c7 45 d0 00 00 00 	movq   $0x0,-0x30(%rbp)
ffffffff8000c53b:	00 
ffffffff8000c53c:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
ffffffff8000c543:	00 
ffffffff8000c544:	0f b6 05 8f 4b 2a 00 	movzbl 0x2a4b8f(%rip),%eax        # ffffffff802b10da <m_buddy_tree_order>
ffffffff8000c54b:	0f b6 d8             	movzbl %al,%ebx
ffffffff8000c54e:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
ffffffff8000c552:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8000c556:	48 89 d7             	mov    %rdx,%rdi
ffffffff8000c559:	48 89 c6             	mov    %rax,%rsi
ffffffff8000c55c:	e8 8e fb ff ff       	call   ffffffff8000c0ef <buddy_tree_depth>
ffffffff8000c561:	48 89 c2             	mov    %rax,%rdx
ffffffff8000c564:	48 89 d8             	mov    %rbx,%rax
ffffffff8000c567:	48 29 d0             	sub    %rdx,%rax
ffffffff8000c56a:	48 83 c0 01          	add    $0x1,%rax
ffffffff8000c56e:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
ffffffff8000c572:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8000c576:	0f b6 c0             	movzbl %al,%eax
ffffffff8000c579:	89 c7                	mov    %eax,%edi
ffffffff8000c57b:	e8 5d ff ff ff       	call   ffffffff8000c4dd <buddy_tree_size_for_order>
ffffffff8000c580:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff8000c584:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
ffffffff8000c588:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8000c58c:	48 89 d7             	mov    %rdx,%rdi
ffffffff8000c58f:	48 89 c6             	mov    %rax,%rsi
ffffffff8000c592:	e8 c7 fd ff ff       	call   ffffffff8000c35e <buddy_tree_index_internal>
ffffffff8000c597:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff8000c59b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8000c59f:	48 0f af 45 e0       	imul   -0x20(%rbp),%rax
ffffffff8000c5a4:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff8000c5a8:	48 01 d0             	add    %rdx,%rax
ffffffff8000c5ab:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
ffffffff8000c5af:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8000c5b3:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff8000c5b7:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
ffffffff8000c5bb:	c9                   	leave  
ffffffff8000c5bc:	c3                   	ret    

ffffffff8000c5bd <write_to_internal_position>:
ffffffff8000c5bd:	f3 0f 1e fa          	endbr64 
ffffffff8000c5c1:	55                   	push   %rbp
ffffffff8000c5c2:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000c5c5:	53                   	push   %rbx
ffffffff8000c5c6:	48 83 ec 28          	sub    $0x28,%rsp
ffffffff8000c5ca:	48 89 f8             	mov    %rdi,%rax
ffffffff8000c5cd:	48 89 c1             	mov    %rax,%rcx
ffffffff8000c5d0:	48 89 d3             	mov    %rdx,%rbx
ffffffff8000c5d3:	48 89 f3             	mov    %rsi,%rbx
ffffffff8000c5d6:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
ffffffff8000c5da:	48 89 5d e8          	mov    %rbx,-0x18(%rbp)
ffffffff8000c5de:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
ffffffff8000c5e2:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
ffffffff8000c5e7:	75 1b                	jne    ffffffff8000c604 <write_to_internal_position+0x47>
ffffffff8000c5e9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000c5ed:	48 89 c6             	mov    %rax,%rsi
ffffffff8000c5f0:	48 b8 00 00 00 40 80 	movabs $0xffff808040000000,%rax
ffffffff8000c5f7:	80 ff ff 
ffffffff8000c5fa:	48 89 c7             	mov    %rax,%rdi
ffffffff8000c5fd:	e8 d5 f4 ff ff       	call   ffffffff8000bad7 <bitset_clear>
ffffffff8000c602:	eb 50                	jmp    ffffffff8000c654 <write_to_internal_position+0x97>
ffffffff8000c604:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff8000c608:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8000c60c:	48 01 d0             	add    %rdx,%rax
ffffffff8000c60f:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
ffffffff8000c613:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000c617:	48 89 c6             	mov    %rax,%rsi
ffffffff8000c61a:	48 b8 00 00 00 40 80 	movabs $0xffff808040000000,%rax
ffffffff8000c621:	80 ff ff 
ffffffff8000c624:	48 89 c7             	mov    %rax,%rdi
ffffffff8000c627:	e8 5e f5 ff ff       	call   ffffffff8000bb8a <bitset_clear_range>
ffffffff8000c62c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff8000c630:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8000c634:	48 01 d0             	add    %rdx,%rax
ffffffff8000c637:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
ffffffff8000c63b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000c63f:	48 89 c6             	mov    %rax,%rsi
ffffffff8000c642:	48 b8 00 00 00 40 80 	movabs $0xffff808040000000,%rax
ffffffff8000c649:	80 ff ff 
ffffffff8000c64c:	48 89 c7             	mov    %rax,%rdi
ffffffff8000c64f:	e8 5e f6 ff ff       	call   ffffffff8000bcb2 <bitset_set_range>
ffffffff8000c654:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
ffffffff8000c658:	c9                   	leave  
ffffffff8000c659:	c3                   	ret    

ffffffff8000c65a <read_from_internal_position>:
ffffffff8000c65a:	f3 0f 1e fa          	endbr64 
ffffffff8000c65e:	55                   	push   %rbp
ffffffff8000c65f:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000c662:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff8000c666:	48 89 f8             	mov    %rdi,%rax
ffffffff8000c669:	48 89 f1             	mov    %rsi,%rcx
ffffffff8000c66c:	48 89 ca             	mov    %rcx,%rdx
ffffffff8000c66f:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff8000c673:	48 89 55 f8          	mov    %rdx,-0x8(%rbp)
ffffffff8000c677:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000c67b:	48 89 c6             	mov    %rax,%rsi
ffffffff8000c67e:	48 b8 00 00 00 40 80 	movabs $0xffff808040000000,%rax
ffffffff8000c685:	80 ff ff 
ffffffff8000c688:	48 89 c7             	mov    %rax,%rdi
ffffffff8000c68b:	e8 a9 f4 ff ff       	call   ffffffff8000bb39 <bitset_test>
ffffffff8000c690:	85 c0                	test   %eax,%eax
ffffffff8000c692:	75 07                	jne    ffffffff8000c69b <read_from_internal_position+0x41>
ffffffff8000c694:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000c699:	eb 28                	jmp    ffffffff8000c6c3 <read_from_internal_position+0x69>
ffffffff8000c69b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff8000c69f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8000c6a3:	48 01 d0             	add    %rdx,%rax
ffffffff8000c6a6:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
ffffffff8000c6aa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000c6ae:	48 89 c6             	mov    %rax,%rsi
ffffffff8000c6b1:	48 b8 00 00 00 40 80 	movabs $0xffff808040000000,%rax
ffffffff8000c6b8:	80 ff ff 
ffffffff8000c6bb:	48 89 c7             	mov    %rax,%rdi
ffffffff8000c6be:	e8 05 f7 ff ff       	call   ffffffff8000bdc8 <bitset_count_range>
ffffffff8000c6c3:	c9                   	leave  
ffffffff8000c6c4:	c3                   	ret    

ffffffff8000c6c5 <buddy_tree_status>:
ffffffff8000c6c5:	f3 0f 1e fa          	endbr64 
ffffffff8000c6c9:	55                   	push   %rbp
ffffffff8000c6ca:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000c6cd:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff8000c6d1:	48 89 f8             	mov    %rdi,%rax
ffffffff8000c6d4:	48 89 f1             	mov    %rsi,%rcx
ffffffff8000c6d7:	48 89 ca             	mov    %rcx,%rdx
ffffffff8000c6da:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff8000c6de:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
ffffffff8000c6e2:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff8000c6e6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000c6ea:	48 89 d7             	mov    %rdx,%rdi
ffffffff8000c6ed:	48 89 c6             	mov    %rax,%rsi
ffffffff8000c6f0:	e8 21 fe ff ff       	call   ffffffff8000c516 <buddy_tree_internal_position_tree>
ffffffff8000c6f5:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff8000c6f9:	48 89 55 f8          	mov    %rdx,-0x8(%rbp)
ffffffff8000c6fd:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff8000c701:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000c705:	48 89 d7             	mov    %rdx,%rdi
ffffffff8000c708:	48 89 c6             	mov    %rax,%rsi
ffffffff8000c70b:	e8 4a ff ff ff       	call   ffffffff8000c65a <read_from_internal_position>
ffffffff8000c710:	c9                   	leave  
ffffffff8000c711:	c3                   	ret    

ffffffff8000c712 <update_parent_chain>:
ffffffff8000c712:	f3 0f 1e fa          	endbr64 
ffffffff8000c716:	55                   	push   %rbp
ffffffff8000c717:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000c71a:	48 83 ec 50          	sub    $0x50,%rsp
ffffffff8000c71e:	48 89 f8             	mov    %rdi,%rax
ffffffff8000c721:	49 89 f1             	mov    %rsi,%r9
ffffffff8000c724:	48 89 c6             	mov    %rax,%rsi
ffffffff8000c727:	48 89 d7             	mov    %rdx,%rdi
ffffffff8000c72a:	4c 89 cf             	mov    %r9,%rdi
ffffffff8000c72d:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
ffffffff8000c731:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
ffffffff8000c735:	48 89 55 c0          	mov    %rdx,-0x40(%rbp)
ffffffff8000c739:	48 89 4d c8          	mov    %rcx,-0x38(%rbp)
ffffffff8000c73d:	4c 89 45 b8          	mov    %r8,-0x48(%rbp)
ffffffff8000c741:	e9 ed 00 00 00       	jmp    ffffffff8000c833 <update_parent_chain+0x121>
ffffffff8000c746:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
ffffffff8000c74a:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
ffffffff8000c74e:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
ffffffff8000c752:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8000c756:	83 e0 01             	and    $0x1,%eax
ffffffff8000c759:	48 0f af c1          	imul   %rcx,%rax
ffffffff8000c75d:	48 8d 0c 00          	lea    (%rax,%rax,1),%rcx
ffffffff8000c761:	48 89 d0             	mov    %rdx,%rax
ffffffff8000c764:	48 29 c8             	sub    %rcx,%rax
ffffffff8000c767:	48 01 f0             	add    %rsi,%rax
ffffffff8000c76a:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
ffffffff8000c76e:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
ffffffff8000c772:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8000c776:	48 89 d7             	mov    %rdx,%rdi
ffffffff8000c779:	48 89 c6             	mov    %rax,%rsi
ffffffff8000c77c:	e8 d9 fe ff ff       	call   ffffffff8000c65a <read_from_internal_position>
ffffffff8000c781:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8000c785:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
ffffffff8000c789:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8000c78d:	48 89 d7             	mov    %rdx,%rdi
ffffffff8000c790:	48 89 c6             	mov    %rax,%rsi
ffffffff8000c793:	e8 2f fb ff ff       	call   ffffffff8000c2c7 <buddy_tree_parent>
ffffffff8000c798:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
ffffffff8000c79c:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
ffffffff8000c7a0:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
ffffffff8000c7a4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8000c7a8:	48 89 d7             	mov    %rdx,%rdi
ffffffff8000c7ab:	48 89 c6             	mov    %rax,%rsi
ffffffff8000c7ae:	e8 63 fd ff ff       	call   ffffffff8000c516 <buddy_tree_internal_position_tree>
ffffffff8000c7b3:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
ffffffff8000c7b7:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
ffffffff8000c7bb:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
ffffffff8000c7bf:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8000c7c3:	48 89 d7             	mov    %rdx,%rdi
ffffffff8000c7c6:	48 89 c6             	mov    %rax,%rsi
ffffffff8000c7c9:	e8 8c fe ff ff       	call   ffffffff8000c65a <read_from_internal_position>
ffffffff8000c7ce:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff8000c7d2:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
ffffffff8000c7d7:	75 07                	jne    ffffffff8000c7e0 <update_parent_chain+0xce>
ffffffff8000c7d9:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff8000c7de:	74 07                	je     ffffffff8000c7e7 <update_parent_chain+0xd5>
ffffffff8000c7e0:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8000c7e5:	eb 05                	jmp    ffffffff8000c7ec <update_parent_chain+0xda>
ffffffff8000c7e7:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000c7ec:	48 63 c8             	movslq %eax,%rcx
ffffffff8000c7ef:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
ffffffff8000c7f3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000c7f7:	48 39 c2             	cmp    %rax,%rdx
ffffffff8000c7fa:	48 0f 46 c2          	cmovbe %rdx,%rax
ffffffff8000c7fe:	48 83 c0 01          	add    $0x1,%rax
ffffffff8000c802:	48 0f af c1          	imul   %rcx,%rax
ffffffff8000c806:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff8000c80a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000c80e:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
ffffffff8000c812:	74 2f                	je     ffffffff8000c843 <update_parent_chain+0x131>
ffffffff8000c814:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff8000c818:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
ffffffff8000c81c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8000c820:	48 89 cf             	mov    %rcx,%rdi
ffffffff8000c823:	48 89 c6             	mov    %rax,%rsi
ffffffff8000c826:	e8 92 fd ff ff       	call   ffffffff8000c5bd <write_to_internal_position>
ffffffff8000c82b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000c82f:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
ffffffff8000c833:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8000c837:	48 83 f8 01          	cmp    $0x1,%rax
ffffffff8000c83b:	0f 85 05 ff ff ff    	jne    ffffffff8000c746 <update_parent_chain+0x34>
ffffffff8000c841:	eb 01                	jmp    ffffffff8000c844 <update_parent_chain+0x132>
ffffffff8000c843:	90                   	nop
ffffffff8000c844:	c9                   	leave  
ffffffff8000c845:	c3                   	ret    

ffffffff8000c846 <buddy_tree_mark>:
ffffffff8000c846:	f3 0f 1e fa          	endbr64 
ffffffff8000c84a:	55                   	push   %rbp
ffffffff8000c84b:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000c84e:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff8000c852:	48 89 f8             	mov    %rdi,%rax
ffffffff8000c855:	48 89 f1             	mov    %rsi,%rcx
ffffffff8000c858:	48 89 ca             	mov    %rcx,%rdx
ffffffff8000c85b:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff8000c85f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
ffffffff8000c863:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff8000c867:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000c86b:	48 89 d7             	mov    %rdx,%rdi
ffffffff8000c86e:	48 89 c6             	mov    %rax,%rsi
ffffffff8000c871:	e8 a0 fc ff ff       	call   ffffffff8000c516 <buddy_tree_internal_position_tree>
ffffffff8000c876:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff8000c87a:	48 89 55 f8          	mov    %rdx,-0x8(%rbp)
ffffffff8000c87e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff8000c882:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
ffffffff8000c886:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000c88a:	48 89 cf             	mov    %rcx,%rdi
ffffffff8000c88d:	48 89 c6             	mov    %rax,%rsi
ffffffff8000c890:	e8 28 fd ff ff       	call   ffffffff8000c5bd <write_to_internal_position>
ffffffff8000c895:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
ffffffff8000c899:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8000c89d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff8000c8a1:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
ffffffff8000c8a5:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
ffffffff8000c8a9:	49 89 c8             	mov    %rcx,%r8
ffffffff8000c8ac:	48 89 d1             	mov    %rdx,%rcx
ffffffff8000c8af:	48 89 c2             	mov    %rax,%rdx
ffffffff8000c8b2:	e8 5b fe ff ff       	call   ffffffff8000c712 <update_parent_chain>
ffffffff8000c8b7:	90                   	nop
ffffffff8000c8b8:	c9                   	leave  
ffffffff8000c8b9:	c3                   	ret    

ffffffff8000c8ba <buddy_tree_release>:
ffffffff8000c8ba:	f3 0f 1e fa          	endbr64 
ffffffff8000c8be:	55                   	push   %rbp
ffffffff8000c8bf:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000c8c2:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff8000c8c6:	48 89 f8             	mov    %rdi,%rax
ffffffff8000c8c9:	48 89 f1             	mov    %rsi,%rcx
ffffffff8000c8cc:	48 89 ca             	mov    %rcx,%rdx
ffffffff8000c8cf:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff8000c8d3:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
ffffffff8000c8d7:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff8000c8db:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000c8df:	48 89 d7             	mov    %rdx,%rdi
ffffffff8000c8e2:	48 89 c6             	mov    %rax,%rsi
ffffffff8000c8e5:	e8 2c fc ff ff       	call   ffffffff8000c516 <buddy_tree_internal_position_tree>
ffffffff8000c8ea:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff8000c8ee:	48 89 55 f8          	mov    %rdx,-0x8(%rbp)
ffffffff8000c8f2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff8000c8f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000c8fa:	48 89 d7             	mov    %rdx,%rdi
ffffffff8000c8fd:	48 89 c6             	mov    %rax,%rsi
ffffffff8000c900:	e8 55 fd ff ff       	call   ffffffff8000c65a <read_from_internal_position>
ffffffff8000c905:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff8000c909:	48 39 d0             	cmp    %rdx,%rax
ffffffff8000c90c:	75 3b                	jne    ffffffff8000c949 <buddy_tree_release+0x8f>
ffffffff8000c90e:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
ffffffff8000c912:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000c916:	ba 00 00 00 00       	mov    $0x0,%edx
ffffffff8000c91b:	48 89 cf             	mov    %rcx,%rdi
ffffffff8000c91e:	48 89 c6             	mov    %rax,%rsi
ffffffff8000c921:	e8 97 fc ff ff       	call   ffffffff8000c5bd <write_to_internal_position>
ffffffff8000c926:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8000c92a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff8000c92e:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
ffffffff8000c932:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
ffffffff8000c936:	41 b8 00 00 00 00    	mov    $0x0,%r8d
ffffffff8000c93c:	48 89 d1             	mov    %rdx,%rcx
ffffffff8000c93f:	48 89 c2             	mov    %rax,%rdx
ffffffff8000c942:	e8 cb fd ff ff       	call   ffffffff8000c712 <update_parent_chain>
ffffffff8000c947:	eb 01                	jmp    ffffffff8000c94a <buddy_tree_release+0x90>
ffffffff8000c949:	90                   	nop
ffffffff8000c94a:	c9                   	leave  
ffffffff8000c94b:	c3                   	ret    

ffffffff8000c94c <buddy_tree_find_free>:
ffffffff8000c94c:	f3 0f 1e fa          	endbr64 
ffffffff8000c950:	55                   	push   %rbp
ffffffff8000c951:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000c954:	41 55                	push   %r13
ffffffff8000c956:	41 54                	push   %r12
ffffffff8000c958:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
ffffffff8000c95c:	89 f8                	mov    %edi,%eax
ffffffff8000c95e:	88 85 7c ff ff ff    	mov    %al,-0x84(%rbp)
ffffffff8000c964:	0f b6 05 6f 47 2a 00 	movzbl 0x2a476f(%rip),%eax        # ffffffff802b10da <m_buddy_tree_order>
ffffffff8000c96b:	38 85 7c ff ff ff    	cmp    %al,-0x84(%rbp)
ffffffff8000c971:	76 3d                	jbe    ffffffff8000c9b0 <buddy_tree_find_free+0x64>
ffffffff8000c973:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000c978:	e8 64 a3 ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff8000c97d:	48 89 c6             	mov    %rax,%rsi
ffffffff8000c980:	41 b8 a3 01 00 00    	mov    $0x1a3,%r8d
ffffffff8000c986:	48 8d 05 55 ba 02 00 	lea    0x2ba55(%rip),%rax        # ffffffff800383e2 <g_stivale2_header+0x13e2>
ffffffff8000c98d:	48 89 c1             	mov    %rax,%rcx
ffffffff8000c990:	48 8d 05 29 0e 03 00 	lea    0x30e29(%rip),%rax        # ffffffff8003d7c0 <__FUNCTION__.9.lto_priv.1>
ffffffff8000c997:	48 89 c2             	mov    %rax,%rdx
ffffffff8000c99a:	48 8d 05 1f fe 02 00 	lea    0x2fe1f(%rip),%rax        # ffffffff8003c7c0 <g_stivale2_header+0x57c0>
ffffffff8000c9a1:	48 89 c7             	mov    %rax,%rdi
ffffffff8000c9a4:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000c9a9:	e8 92 6b 00 00       	call   ffffffff80013540 <printf_>
ffffffff8000c9ae:	0f 0b                	ud2    
ffffffff8000c9b0:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000c9b5:	e8 ec f7 ff ff       	call   ffffffff8000c1a6 <buddy_tree_root>
ffffffff8000c9ba:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
ffffffff8000c9be:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
ffffffff8000c9c2:	0f b6 85 7c ff ff ff 	movzbl -0x84(%rbp),%eax
ffffffff8000c9c9:	83 e8 01             	sub    $0x1,%eax
ffffffff8000c9cc:	88 45 ef             	mov    %al,-0x11(%rbp)
ffffffff8000c9cf:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
ffffffff8000c9d3:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff8000c9d7:	48 89 d7             	mov    %rdx,%rdi
ffffffff8000c9da:	48 89 c6             	mov    %rax,%rsi
ffffffff8000c9dd:	e8 0d f7 ff ff       	call   ffffffff8000c0ef <buddy_tree_depth>
ffffffff8000c9e2:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff8000c9e6:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
ffffffff8000c9ea:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff8000c9ee:	48 89 d7             	mov    %rdx,%rdi
ffffffff8000c9f1:	48 89 c6             	mov    %rax,%rsi
ffffffff8000c9f4:	e8 cc fc ff ff       	call   ffffffff8000c6c5 <buddy_tree_status>
ffffffff8000c9f9:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
ffffffff8000c9fd:	0f b6 85 7c ff ff ff 	movzbl -0x84(%rbp),%eax
ffffffff8000ca04:	48 39 45 e0          	cmp    %rax,-0x20(%rbp)
ffffffff8000ca08:	75 25                	jne    ffffffff8000ca2f <buddy_tree_find_free+0xe3>
ffffffff8000ca0a:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
ffffffff8000ca0f:	74 11                	je     ffffffff8000ca22 <buddy_tree_find_free+0xd6>
ffffffff8000ca11:	41 bc 00 00 00 00    	mov    $0x0,%r12d
ffffffff8000ca17:	41 bd 00 00 00 00    	mov    $0x0,%r13d
ffffffff8000ca1d:	e9 4b 01 00 00       	jmp    ffffffff8000cb6d <buddy_tree_find_free+0x221>
ffffffff8000ca22:	4c 8b 65 b0          	mov    -0x50(%rbp),%r12
ffffffff8000ca26:	4c 8b 6d b8          	mov    -0x48(%rbp),%r13
ffffffff8000ca2a:	e9 3e 01 00 00       	jmp    ffffffff8000cb6d <buddy_tree_find_free+0x221>
ffffffff8000ca2f:	0f b6 45 ef          	movzbl -0x11(%rbp),%eax
ffffffff8000ca33:	48 39 45 d8          	cmp    %rax,-0x28(%rbp)
ffffffff8000ca37:	76 11                	jbe    ffffffff8000ca4a <buddy_tree_find_free+0xfe>
ffffffff8000ca39:	41 bc 00 00 00 00    	mov    $0x0,%r12d
ffffffff8000ca3f:	41 bd 00 00 00 00    	mov    $0x0,%r13d
ffffffff8000ca45:	e9 23 01 00 00       	jmp    ffffffff8000cb6d <buddy_tree_find_free+0x221>
ffffffff8000ca4a:	80 6d ef 01          	subb   $0x1,-0x11(%rbp)
ffffffff8000ca4e:	48 83 45 e0 01       	addq   $0x1,-0x20(%rbp)
ffffffff8000ca53:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
ffffffff8000ca57:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff8000ca5b:	48 89 d7             	mov    %rdx,%rdi
ffffffff8000ca5e:	48 89 c6             	mov    %rax,%rsi
ffffffff8000ca61:	e8 a6 f7 ff ff       	call   ffffffff8000c20c <buddy_tree_left_child>
ffffffff8000ca66:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
ffffffff8000ca6a:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
ffffffff8000ca6e:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
ffffffff8000ca72:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff8000ca76:	48 89 d7             	mov    %rdx,%rdi
ffffffff8000ca79:	48 89 c6             	mov    %rax,%rsi
ffffffff8000ca7c:	e8 13 f8 ff ff       	call   ffffffff8000c294 <buddy_tree_sibling>
ffffffff8000ca81:	48 89 45 90          	mov    %rax,-0x70(%rbp)
ffffffff8000ca85:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
ffffffff8000ca89:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
ffffffff8000ca8d:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff8000ca91:	48 89 d7             	mov    %rdx,%rdi
ffffffff8000ca94:	48 89 c6             	mov    %rax,%rsi
ffffffff8000ca97:	e8 7a fa ff ff       	call   ffffffff8000c516 <buddy_tree_internal_position_tree>
ffffffff8000ca9c:	48 89 45 80          	mov    %rax,-0x80(%rbp)
ffffffff8000caa0:	48 89 55 88          	mov    %rdx,-0x78(%rbp)
ffffffff8000caa4:	48 8b 55 80          	mov    -0x80(%rbp),%rdx
ffffffff8000caa8:	48 8b 45 88          	mov    -0x78(%rbp),%rax
ffffffff8000caac:	48 89 d7             	mov    %rdx,%rdi
ffffffff8000caaf:	48 89 c6             	mov    %rax,%rsi
ffffffff8000cab2:	e8 a3 fb ff ff       	call   ffffffff8000c65a <read_from_internal_position>
ffffffff8000cab7:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
ffffffff8000cabb:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
ffffffff8000cabf:	48 8b 45 80          	mov    -0x80(%rbp),%rax
ffffffff8000cac3:	48 01 d0             	add    %rdx,%rax
ffffffff8000cac6:	48 89 45 88          	mov    %rax,-0x78(%rbp)
ffffffff8000caca:	48 8b 55 80          	mov    -0x80(%rbp),%rdx
ffffffff8000cace:	48 8b 45 88          	mov    -0x78(%rbp),%rax
ffffffff8000cad2:	48 89 d7             	mov    %rdx,%rdi
ffffffff8000cad5:	48 89 c6             	mov    %rax,%rsi
ffffffff8000cad8:	e8 7d fb ff ff       	call   ffffffff8000c65a <read_from_internal_position>
ffffffff8000cadd:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
ffffffff8000cae1:	0f b6 45 ef          	movzbl -0x11(%rbp),%eax
ffffffff8000cae5:	48 39 45 d0          	cmp    %rax,-0x30(%rbp)
ffffffff8000cae9:	76 1a                	jbe    ffffffff8000cb05 <buddy_tree_find_free+0x1b9>
ffffffff8000caeb:	48 8b 45 90          	mov    -0x70(%rbp),%rax
ffffffff8000caef:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
ffffffff8000caf3:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
ffffffff8000caf7:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
ffffffff8000cafb:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8000caff:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
ffffffff8000cb03:	eb 63                	jmp    ffffffff8000cb68 <buddy_tree_find_free+0x21c>
ffffffff8000cb05:	0f b6 45 ef          	movzbl -0x11(%rbp),%eax
ffffffff8000cb09:	48 39 45 c8          	cmp    %rax,-0x38(%rbp)
ffffffff8000cb0d:	76 1a                	jbe    ffffffff8000cb29 <buddy_tree_find_free+0x1dd>
ffffffff8000cb0f:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff8000cb13:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
ffffffff8000cb17:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
ffffffff8000cb1b:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
ffffffff8000cb1f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8000cb23:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
ffffffff8000cb27:	eb 3f                	jmp    ffffffff8000cb68 <buddy_tree_find_free+0x21c>
ffffffff8000cb29:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8000cb2d:	48 3b 45 c8          	cmp    -0x38(%rbp),%rax
ffffffff8000cb31:	72 1d                	jb     ffffffff8000cb50 <buddy_tree_find_free+0x204>
ffffffff8000cb33:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff8000cb37:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
ffffffff8000cb3b:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
ffffffff8000cb3f:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
ffffffff8000cb43:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8000cb47:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
ffffffff8000cb4b:	e9 ad fe ff ff       	jmp    ffffffff8000c9fd <buddy_tree_find_free+0xb1>
ffffffff8000cb50:	48 8b 45 90          	mov    -0x70(%rbp),%rax
ffffffff8000cb54:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
ffffffff8000cb58:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
ffffffff8000cb5c:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
ffffffff8000cb60:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8000cb64:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
ffffffff8000cb68:	e9 90 fe ff ff       	jmp    ffffffff8000c9fd <buddy_tree_find_free+0xb1>
ffffffff8000cb6d:	4c 89 e0             	mov    %r12,%rax
ffffffff8000cb70:	4c 89 ea             	mov    %r13,%rdx
ffffffff8000cb73:	48 83 ec 80          	sub    $0xffffffffffffff80,%rsp
ffffffff8000cb77:	41 5c                	pop    %r12
ffffffff8000cb79:	41 5d                	pop    %r13
ffffffff8000cb7b:	5d                   	pop    %rbp
ffffffff8000cb7c:	c3                   	ret    

ffffffff8000cb7d <buddy_tree_valid>:
ffffffff8000cb7d:	f3 0f 1e fa          	endbr64 
ffffffff8000cb81:	55                   	push   %rbp
ffffffff8000cb82:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000cb85:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff8000cb89:	48 89 f8             	mov    %rdi,%rax
ffffffff8000cb8c:	48 89 f1             	mov    %rsi,%rcx
ffffffff8000cb8f:	48 89 ca             	mov    %rcx,%rdx
ffffffff8000cb92:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff8000cb96:	48 89 55 f8          	mov    %rdx,-0x8(%rbp)
ffffffff8000cb9a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8000cb9e:	48 85 c0             	test   %rax,%rax
ffffffff8000cba1:	74 17                	je     ffffffff8000cbba <buddy_tree_valid+0x3d>
ffffffff8000cba3:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff8000cba7:	48 8b 05 32 45 2a 00 	mov    0x2a4532(%rip),%rax        # ffffffff802b10e0 <m_buddy_tree_upper_pos_bound>
ffffffff8000cbae:	48 39 c2             	cmp    %rax,%rdx
ffffffff8000cbb1:	73 07                	jae    ffffffff8000cbba <buddy_tree_valid+0x3d>
ffffffff8000cbb3:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8000cbb8:	eb 05                	jmp    ffffffff8000cbbf <buddy_tree_valid+0x42>
ffffffff8000cbba:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000cbbf:	c9                   	leave  
ffffffff8000cbc0:	c3                   	ret    

ffffffff8000cbc1 <buddy_sizeof>:
ffffffff8000cbc1:	f3 0f 1e fa          	endbr64 
ffffffff8000cbc5:	55                   	push   %rbp
ffffffff8000cbc6:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000cbc9:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff8000cbcd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8000cbd1:	48 83 7d f8 3f       	cmpq   $0x3f,-0x8(%rbp)
ffffffff8000cbd6:	77 3d                	ja     ffffffff8000cc15 <buddy_sizeof+0x54>
ffffffff8000cbd8:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000cbdd:	e8 ff a0 ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff8000cbe2:	48 89 c6             	mov    %rax,%rsi
ffffffff8000cbe5:	41 b8 e5 01 00 00    	mov    $0x1e5,%r8d
ffffffff8000cbeb:	48 8d 05 f0 b7 02 00 	lea    0x2b7f0(%rip),%rax        # ffffffff800383e2 <g_stivale2_header+0x13e2>
ffffffff8000cbf2:	48 89 c1             	mov    %rax,%rcx
ffffffff8000cbf5:	48 8d 05 dc 0b 03 00 	lea    0x30bdc(%rip),%rax        # ffffffff8003d7d8 <__FUNCTION__.8.lto_priv.1>
ffffffff8000cbfc:	48 89 c2             	mov    %rax,%rdx
ffffffff8000cbff:	48 8d 05 ba fb 02 00 	lea    0x2fbba(%rip),%rax        # ffffffff8003c7c0 <g_stivale2_header+0x57c0>
ffffffff8000cc06:	48 89 c7             	mov    %rax,%rdi
ffffffff8000cc09:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000cc0e:	e8 2d 69 00 00       	call   ffffffff80013540 <printf_>
ffffffff8000cc13:	0f 0b                	ud2    
ffffffff8000cc15:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000cc19:	48 89 c7             	mov    %rax,%rdi
ffffffff8000cc1c:	e8 f1 f4 ff ff       	call   ffffffff8000c112 <buddy_tree_order_for_memory>
ffffffff8000cc21:	0f b6 c0             	movzbl %al,%eax
ffffffff8000cc24:	89 c7                	mov    %eax,%edi
ffffffff8000cc26:	e8 19 f5 ff ff       	call   ffffffff8000c144 <buddy_tree_sizeof>
ffffffff8000cc2b:	90                   	nop
ffffffff8000cc2c:	90                   	nop
ffffffff8000cc2d:	c9                   	leave  
ffffffff8000cc2e:	c3                   	ret    

ffffffff8000cc2f <buddy_effective_memory_size>:
ffffffff8000cc2f:	f3 0f 1e fa          	endbr64 
ffffffff8000cc33:	55                   	push   %rbp
ffffffff8000cc34:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000cc37:	48 8b 05 b2 44 2a 00 	mov    0x2a44b2(%rip),%rax        # ffffffff802b10f0 <m_buddy_memory_size>
ffffffff8000cc3e:	48 89 c7             	mov    %rax,%rdi
ffffffff8000cc41:	e8 81 ed ff ff       	call   ffffffff8000b9c7 <ceiling_power_of_two>
ffffffff8000cc46:	5d                   	pop    %rbp
ffffffff8000cc47:	c3                   	ret    

ffffffff8000cc48 <depth_for_size>:
ffffffff8000cc48:	f3 0f 1e fa          	endbr64 
ffffffff8000cc4c:	55                   	push   %rbp
ffffffff8000cc4d:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000cc50:	48 83 ec 18          	sub    $0x18,%rsp
ffffffff8000cc54:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff8000cc58:	48 83 7d e8 3f       	cmpq   $0x3f,-0x18(%rbp)
ffffffff8000cc5d:	77 08                	ja     ffffffff8000cc67 <depth_for_size+0x1f>
ffffffff8000cc5f:	48 c7 45 e8 40 00 00 	movq   $0x40,-0x18(%rbp)
ffffffff8000cc66:	00 
ffffffff8000cc67:	48 c7 45 f8 01 00 00 	movq   $0x1,-0x8(%rbp)
ffffffff8000cc6e:	00 
ffffffff8000cc6f:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000cc74:	e8 b6 ff ff ff       	call   ffffffff8000cc2f <buddy_effective_memory_size>
ffffffff8000cc79:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff8000cc7d:	eb 09                	jmp    ffffffff8000cc88 <depth_for_size+0x40>
ffffffff8000cc7f:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
ffffffff8000cc84:	48 d1 6d f0          	shrq   -0x10(%rbp)
ffffffff8000cc88:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8000cc8c:	ba 00 00 00 00       	mov    $0x0,%edx
ffffffff8000cc91:	48 f7 75 e8          	divq   -0x18(%rbp)
ffffffff8000cc95:	48 d1 e8             	shr    %rax
ffffffff8000cc98:	48 85 c0             	test   %rax,%rax
ffffffff8000cc9b:	75 e2                	jne    ffffffff8000cc7f <depth_for_size+0x37>
ffffffff8000cc9d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000cca1:	c9                   	leave  
ffffffff8000cca2:	c3                   	ret    

ffffffff8000cca3 <size_for_depth>:
ffffffff8000cca3:	f3 0f 1e fa          	endbr64 
ffffffff8000cca7:	55                   	push   %rbp
ffffffff8000cca8:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000ccab:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff8000ccaf:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8000ccb3:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff8000ccb8:	0f 94 c0             	sete   %al
ffffffff8000ccbb:	0f b6 c0             	movzbl %al,%eax
ffffffff8000ccbe:	48 01 45 f8          	add    %rax,-0x8(%rbp)
ffffffff8000ccc2:	48 8b 05 27 44 2a 00 	mov    0x2a4427(%rip),%rax        # ffffffff802b10f0 <m_buddy_memory_size>
ffffffff8000ccc9:	48 89 c7             	mov    %rax,%rdi
ffffffff8000cccc:	e8 f6 ec ff ff       	call   ffffffff8000b9c7 <ceiling_power_of_two>
ffffffff8000ccd1:	48 89 c2             	mov    %rax,%rdx
ffffffff8000ccd4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000ccd8:	83 e8 01             	sub    $0x1,%eax
ffffffff8000ccdb:	89 c1                	mov    %eax,%ecx
ffffffff8000ccdd:	48 d3 ea             	shr    %cl,%rdx
ffffffff8000cce0:	48 89 d0             	mov    %rdx,%rax
ffffffff8000cce3:	c9                   	leave  
ffffffff8000cce4:	c3                   	ret    

ffffffff8000cce5 <buddy_toggle_virtual_slots>:
ffffffff8000cce5:	f3 0f 1e fa          	endbr64 
ffffffff8000cce9:	55                   	push   %rbp
ffffffff8000ccea:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000cced:	53                   	push   %rbx
ffffffff8000ccee:	48 83 ec 38          	sub    $0x38,%rsp
ffffffff8000ccf2:	48 8b 05 f7 43 2a 00 	mov    0x2a43f7(%rip),%rax        # ffffffff802b10f0 <m_buddy_memory_size>
ffffffff8000ccf9:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff8000ccfd:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000cd02:	e8 28 ff ff ff       	call   ffffffff8000cc2f <buddy_effective_memory_size>
ffffffff8000cd07:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
ffffffff8000cd0b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8000cd0f:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
ffffffff8000cd13:	75 10                	jne    ffffffff8000cd25 <buddy_toggle_virtual_slots+0x40>
ffffffff8000cd15:	48 c7 05 d8 43 2a 00 	movq   $0x0,0x2a43d8(%rip)        # ffffffff802b10f8 <m_buddy_virtual_slots>
ffffffff8000cd1c:	00 00 00 00 
ffffffff8000cd20:	e9 0a 01 00 00       	jmp    ffffffff8000ce2f <buddy_toggle_virtual_slots+0x14a>
ffffffff8000cd25:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8000cd29:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
ffffffff8000cd2d:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff8000cd31:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000cd35:	48 c1 e8 06          	shr    $0x6,%rax
ffffffff8000cd39:	48 89 05 b8 43 2a 00 	mov    %rax,0x2a43b8(%rip)        # ffffffff802b10f8 <m_buddy_virtual_slots>
ffffffff8000cd40:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000cd45:	e8 5c f4 ff ff       	call   ffffffff8000c1a6 <buddy_tree_root>
ffffffff8000cd4a:	48 89 c1             	mov    %rax,%rcx
ffffffff8000cd4d:	48 89 d3             	mov    %rdx,%rbx
ffffffff8000cd50:	48 89 d0             	mov    %rdx,%rax
ffffffff8000cd53:	48 89 cf             	mov    %rcx,%rdi
ffffffff8000cd56:	48 89 c6             	mov    %rax,%rsi
ffffffff8000cd59:	e8 ec f4 ff ff       	call   ffffffff8000c24a <buddy_tree_right_child>
ffffffff8000cd5e:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
ffffffff8000cd62:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
ffffffff8000cd66:	e9 b9 00 00 00       	jmp    ffffffff8000ce24 <buddy_toggle_virtual_slots+0x13f>
ffffffff8000cd6b:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
ffffffff8000cd6f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8000cd73:	48 89 d7             	mov    %rdx,%rdi
ffffffff8000cd76:	48 89 c6             	mov    %rax,%rsi
ffffffff8000cd79:	e8 71 f3 ff ff       	call   ffffffff8000c0ef <buddy_tree_depth>
ffffffff8000cd7e:	48 89 c7             	mov    %rax,%rdi
ffffffff8000cd81:	e8 1d ff ff ff       	call   ffffffff8000cca3 <size_for_depth>
ffffffff8000cd86:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
ffffffff8000cd8a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000cd8e:	48 3b 45 d0          	cmp    -0x30(%rbp),%rax
ffffffff8000cd92:	75 18                	jne    ffffffff8000cdac <buddy_toggle_virtual_slots+0xc7>
ffffffff8000cd94:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
ffffffff8000cd98:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8000cd9c:	48 89 d7             	mov    %rdx,%rdi
ffffffff8000cd9f:	48 89 c6             	mov    %rax,%rsi
ffffffff8000cda2:	e8 9f fa ff ff       	call   ffffffff8000c846 <buddy_tree_mark>
ffffffff8000cda7:	e9 83 00 00 00       	jmp    ffffffff8000ce2f <buddy_toggle_virtual_slots+0x14a>
ffffffff8000cdac:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8000cdb0:	48 d1 e8             	shr    %rax
ffffffff8000cdb3:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
ffffffff8000cdb7:	77 1d                	ja     ffffffff8000cdd6 <buddy_toggle_virtual_slots+0xf1>
ffffffff8000cdb9:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
ffffffff8000cdbd:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8000cdc1:	48 89 d7             	mov    %rdx,%rdi
ffffffff8000cdc4:	48 89 c6             	mov    %rax,%rsi
ffffffff8000cdc7:	e8 7e f4 ff ff       	call   ffffffff8000c24a <buddy_tree_right_child>
ffffffff8000cdcc:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
ffffffff8000cdd0:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
ffffffff8000cdd4:	eb 4e                	jmp    ffffffff8000ce24 <buddy_toggle_virtual_slots+0x13f>
ffffffff8000cdd6:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
ffffffff8000cdda:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8000cdde:	48 89 d7             	mov    %rdx,%rdi
ffffffff8000cde1:	48 89 c6             	mov    %rax,%rsi
ffffffff8000cde4:	e8 61 f4 ff ff       	call   ffffffff8000c24a <buddy_tree_right_child>
ffffffff8000cde9:	48 89 c1             	mov    %rax,%rcx
ffffffff8000cdec:	48 89 d3             	mov    %rdx,%rbx
ffffffff8000cdef:	48 89 d0             	mov    %rdx,%rax
ffffffff8000cdf2:	48 89 cf             	mov    %rcx,%rdi
ffffffff8000cdf5:	48 89 c6             	mov    %rax,%rsi
ffffffff8000cdf8:	e8 49 fa ff ff       	call   ffffffff8000c846 <buddy_tree_mark>
ffffffff8000cdfd:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8000ce01:	48 d1 e8             	shr    %rax
ffffffff8000ce04:	48 29 45 e8          	sub    %rax,-0x18(%rbp)
ffffffff8000ce08:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
ffffffff8000ce0c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8000ce10:	48 89 d7             	mov    %rdx,%rdi
ffffffff8000ce13:	48 89 c6             	mov    %rax,%rsi
ffffffff8000ce16:	e8 f1 f3 ff ff       	call   ffffffff8000c20c <buddy_tree_left_child>
ffffffff8000ce1b:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
ffffffff8000ce1f:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
ffffffff8000ce23:	90                   	nop
ffffffff8000ce24:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
ffffffff8000ce29:	0f 85 3c ff ff ff    	jne    ffffffff8000cd6b <buddy_toggle_virtual_slots+0x86>
ffffffff8000ce2f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
ffffffff8000ce33:	c9                   	leave  
ffffffff8000ce34:	c3                   	ret    

ffffffff8000ce35 <offset_for_position>:
ffffffff8000ce35:	f3 0f 1e fa          	endbr64 
ffffffff8000ce39:	55                   	push   %rbp
ffffffff8000ce3a:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000ce3d:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff8000ce41:	48 89 f8             	mov    %rdi,%rax
ffffffff8000ce44:	48 89 f1             	mov    %rsi,%rcx
ffffffff8000ce47:	48 89 ca             	mov    %rcx,%rdx
ffffffff8000ce4a:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff8000ce4e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
ffffffff8000ce52:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff8000ce56:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000ce5a:	48 89 d7             	mov    %rdx,%rdi
ffffffff8000ce5d:	48 89 c6             	mov    %rax,%rsi
ffffffff8000ce60:	e8 8a f2 ff ff       	call   ffffffff8000c0ef <buddy_tree_depth>
ffffffff8000ce65:	48 89 c7             	mov    %rax,%rdi
ffffffff8000ce68:	e8 36 fe ff ff       	call   ffffffff8000cca3 <size_for_depth>
ffffffff8000ce6d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8000ce71:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff8000ce75:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000ce79:	48 89 d7             	mov    %rdx,%rdi
ffffffff8000ce7c:	48 89 c6             	mov    %rax,%rsi
ffffffff8000ce7f:	e8 58 f5 ff ff       	call   ffffffff8000c3dc <buddy_tree_index>
ffffffff8000ce84:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff8000ce88:	48 0f af c2          	imul   %rdx,%rax
ffffffff8000ce8c:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff8000ce90:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8000ce94:	c9                   	leave  
ffffffff8000ce95:	c3                   	ret    

ffffffff8000ce96 <address_for_position>:
ffffffff8000ce96:	f3 0f 1e fa          	endbr64 
ffffffff8000ce9a:	55                   	push   %rbp
ffffffff8000ce9b:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000ce9e:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff8000cea2:	48 89 f8             	mov    %rdi,%rax
ffffffff8000cea5:	48 89 f1             	mov    %rsi,%rcx
ffffffff8000cea8:	48 89 ca             	mov    %rcx,%rdx
ffffffff8000ceab:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff8000ceaf:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
ffffffff8000ceb3:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff8000ceb7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000cebb:	48 89 d7             	mov    %rdx,%rdi
ffffffff8000cebe:	48 89 c6             	mov    %rax,%rsi
ffffffff8000cec1:	e8 6f ff ff ff       	call   ffffffff8000ce35 <offset_for_position>
ffffffff8000cec6:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8000ceca:	48 b8 00 00 00 00 80 	movabs $0x8000000000,%rax
ffffffff8000ced1:	00 00 00 
ffffffff8000ced4:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
ffffffff8000ced8:	76 3d                	jbe    ffffffff8000cf17 <address_for_position+0x81>
ffffffff8000ceda:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000cedf:	e8 fd 9d ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff8000cee4:	48 89 c6             	mov    %rax,%rsi
ffffffff8000cee7:	41 b8 32 02 00 00    	mov    $0x232,%r8d
ffffffff8000ceed:	48 8d 05 ee b4 02 00 	lea    0x2b4ee(%rip),%rax        # ffffffff800383e2 <g_stivale2_header+0x13e2>
ffffffff8000cef4:	48 89 c1             	mov    %rax,%rcx
ffffffff8000cef7:	48 8d 05 f2 08 03 00 	lea    0x308f2(%rip),%rax        # ffffffff8003d7f0 <__FUNCTION__.7.lto_priv.1>
ffffffff8000cefe:	48 89 c2             	mov    %rax,%rdx
ffffffff8000cf01:	48 8d 05 b8 f8 02 00 	lea    0x2f8b8(%rip),%rax        # ffffffff8003c7c0 <g_stivale2_header+0x57c0>
ffffffff8000cf08:	48 89 c7             	mov    %rax,%rdi
ffffffff8000cf0b:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000cf10:	e8 2b 66 00 00       	call   ffffffff80013540 <printf_>
ffffffff8000cf15:	0f 0b                	ud2    
ffffffff8000cf17:	48 ba 00 00 00 00 00 	movabs $0xffff800000000000,%rdx
ffffffff8000cf1e:	80 ff ff 
ffffffff8000cf21:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000cf25:	48 01 d0             	add    %rdx,%rax
ffffffff8000cf28:	90                   	nop
ffffffff8000cf29:	90                   	nop
ffffffff8000cf2a:	c9                   	leave  
ffffffff8000cf2b:	c3                   	ret    

ffffffff8000cf2c <deepest_position_for_offset>:
ffffffff8000cf2c:	f3 0f 1e fa          	endbr64 
ffffffff8000cf30:	55                   	push   %rbp
ffffffff8000cf31:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000cf34:	48 83 ec 30          	sub    $0x30,%rsp
ffffffff8000cf38:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
ffffffff8000cf3c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8000cf40:	48 c1 e8 06          	shr    $0x6,%rax
ffffffff8000cf44:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8000cf48:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000cf4d:	e8 9e f2 ff ff       	call   ffffffff8000c1f0 <buddy_tree_leftmost_child>
ffffffff8000cf52:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff8000cf56:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
ffffffff8000cf5a:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff8000cf5e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000cf62:	48 01 d0             	add    %rdx,%rax
ffffffff8000cf65:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff8000cf69:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8000cf6d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff8000cf71:	c9                   	leave  
ffffffff8000cf72:	c3                   	ret    

ffffffff8000cf73 <position_for_address>:
ffffffff8000cf73:	f3 0f 1e fa          	endbr64 
ffffffff8000cf77:	55                   	push   %rbp
ffffffff8000cf78:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000cf7b:	41 55                	push   %r13
ffffffff8000cf7d:	41 54                	push   %r12
ffffffff8000cf7f:	48 83 ec 30          	sub    $0x30,%rsp
ffffffff8000cf83:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
ffffffff8000cf87:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8000cf8b:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff8000cf8f:	48 b8 ff ff ff ff ff 	movabs $0xffff7fffffffffff,%rax
ffffffff8000cf96:	7f ff ff 
ffffffff8000cf99:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
ffffffff8000cf9d:	76 10                	jbe    ffffffff8000cfaf <position_for_address+0x3c>
ffffffff8000cf9f:	48 b8 00 00 00 00 80 	movabs $0xffff808000000000,%rax
ffffffff8000cfa6:	80 ff ff 
ffffffff8000cfa9:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
ffffffff8000cfad:	76 3d                	jbe    ffffffff8000cfec <position_for_address+0x79>
ffffffff8000cfaf:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000cfb4:	e8 28 9d ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff8000cfb9:	48 89 c6             	mov    %rax,%rsi
ffffffff8000cfbc:	41 b8 3e 02 00 00    	mov    $0x23e,%r8d
ffffffff8000cfc2:	48 8d 05 19 b4 02 00 	lea    0x2b419(%rip),%rax        # ffffffff800383e2 <g_stivale2_header+0x13e2>
ffffffff8000cfc9:	48 89 c1             	mov    %rax,%rcx
ffffffff8000cfcc:	48 8d 05 3d 08 03 00 	lea    0x3083d(%rip),%rax        # ffffffff8003d810 <__FUNCTION__.6.lto_priv.2>
ffffffff8000cfd3:	48 89 c2             	mov    %rax,%rdx
ffffffff8000cfd6:	48 8d 05 e3 f7 02 00 	lea    0x2f7e3(%rip),%rax        # ffffffff8003c7c0 <g_stivale2_header+0x57c0>
ffffffff8000cfdd:	48 89 c7             	mov    %rax,%rdi
ffffffff8000cfe0:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000cfe5:	e8 56 65 00 00       	call   ffffffff80013540 <printf_>
ffffffff8000cfea:	0f 0b                	ud2    
ffffffff8000cfec:	48 ba 00 00 00 00 00 	movabs $0x800000000000,%rdx
ffffffff8000cff3:	80 00 00 
ffffffff8000cff6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000cffa:	48 01 d0             	add    %rdx,%rax
ffffffff8000cffd:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff8000d001:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8000d005:	83 e0 3f             	and    $0x3f,%eax
ffffffff8000d008:	48 85 c0             	test   %rax,%rax
ffffffff8000d00b:	74 11                	je     ffffffff8000d01e <position_for_address+0xab>
ffffffff8000d00d:	41 bc 00 00 00 00    	mov    $0x0,%r12d
ffffffff8000d013:	41 bd 00 00 00 00    	mov    $0x0,%r13d
ffffffff8000d019:	e9 90 00 00 00       	jmp    ffffffff8000d0ae <position_for_address+0x13b>
ffffffff8000d01e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8000d022:	48 89 c7             	mov    %rax,%rdi
ffffffff8000d025:	e8 02 ff ff ff       	call   ffffffff8000cf2c <deepest_position_for_offset>
ffffffff8000d02a:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
ffffffff8000d02e:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
ffffffff8000d032:	eb 1b                	jmp    ffffffff8000d04f <position_for_address+0xdc>
ffffffff8000d034:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
ffffffff8000d038:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8000d03c:	48 89 d7             	mov    %rdx,%rdi
ffffffff8000d03f:	48 89 c6             	mov    %rax,%rsi
ffffffff8000d042:	e8 80 f2 ff ff       	call   ffffffff8000c2c7 <buddy_tree_parent>
ffffffff8000d047:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
ffffffff8000d04b:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
ffffffff8000d04f:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
ffffffff8000d053:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8000d057:	48 89 d7             	mov    %rdx,%rdi
ffffffff8000d05a:	48 89 c6             	mov    %rax,%rsi
ffffffff8000d05d:	e8 1b fb ff ff       	call   ffffffff8000cb7d <buddy_tree_valid>
ffffffff8000d062:	85 c0                	test   %eax,%eax
ffffffff8000d064:	74 18                	je     ffffffff8000d07e <position_for_address+0x10b>
ffffffff8000d066:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
ffffffff8000d06a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8000d06e:	48 89 d7             	mov    %rdx,%rdi
ffffffff8000d071:	48 89 c6             	mov    %rax,%rsi
ffffffff8000d074:	e8 4c f6 ff ff       	call   ffffffff8000c6c5 <buddy_tree_status>
ffffffff8000d079:	48 85 c0             	test   %rax,%rax
ffffffff8000d07c:	74 b6                	je     ffffffff8000d034 <position_for_address+0xc1>
ffffffff8000d07e:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
ffffffff8000d082:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8000d086:	48 89 d7             	mov    %rdx,%rdi
ffffffff8000d089:	48 89 c6             	mov    %rax,%rsi
ffffffff8000d08c:	e8 05 fe ff ff       	call   ffffffff8000ce96 <address_for_position>
ffffffff8000d091:	48 39 45 c8          	cmp    %rax,-0x38(%rbp)
ffffffff8000d095:	74 0e                	je     ffffffff8000d0a5 <position_for_address+0x132>
ffffffff8000d097:	41 bc 00 00 00 00    	mov    $0x0,%r12d
ffffffff8000d09d:	41 bd 00 00 00 00    	mov    $0x0,%r13d
ffffffff8000d0a3:	eb 09                	jmp    ffffffff8000d0ae <position_for_address+0x13b>
ffffffff8000d0a5:	4c 8b 65 d0          	mov    -0x30(%rbp),%r12
ffffffff8000d0a9:	4c 8b 6d d8          	mov    -0x28(%rbp),%r13
ffffffff8000d0ad:	90                   	nop
ffffffff8000d0ae:	4c 89 e0             	mov    %r12,%rax
ffffffff8000d0b1:	4c 89 ea             	mov    %r13,%rdx
ffffffff8000d0b4:	48 83 c4 30          	add    $0x30,%rsp
ffffffff8000d0b8:	41 5c                	pop    %r12
ffffffff8000d0ba:	41 5d                	pop    %r13
ffffffff8000d0bc:	5d                   	pop    %rbp
ffffffff8000d0bd:	c3                   	ret    

ffffffff8000d0be <mark_range>:
ffffffff8000d0be:	f3 0f 1e fa          	endbr64 
ffffffff8000d0c2:	55                   	push   %rbp
ffffffff8000d0c3:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000d0c6:	48 83 ec 50          	sub    $0x50,%rsp
ffffffff8000d0ca:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
ffffffff8000d0ce:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
ffffffff8000d0d2:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
ffffffff8000d0d9:	e9 52 01 00 00       	jmp    ffffffff8000d230 <mark_range+0x172>
ffffffff8000d0de:	48 c7 45 d0 00 00 00 	movq   $0x0,-0x30(%rbp)
ffffffff8000d0e5:	00 
ffffffff8000d0e6:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
ffffffff8000d0ed:	00 
ffffffff8000d0ee:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff8000d0f2:	48 89 c7             	mov    %rax,%rdi
ffffffff8000d0f5:	e8 32 fe ff ff       	call   ffffffff8000cf2c <deepest_position_for_offset>
ffffffff8000d0fa:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
ffffffff8000d0fe:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
ffffffff8000d102:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8000d106:	48 89 c7             	mov    %rax,%rdi
ffffffff8000d109:	e8 95 fb ff ff       	call   ffffffff8000cca3 <size_for_depth>
ffffffff8000d10e:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff8000d112:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
ffffffff8000d116:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8000d11a:	48 89 d7             	mov    %rdx,%rdi
ffffffff8000d11d:	48 89 c6             	mov    %rax,%rsi
ffffffff8000d120:	e8 10 fd ff ff       	call   ffffffff8000ce35 <offset_for_position>
ffffffff8000d125:	48 39 45 b8          	cmp    %rax,-0x48(%rbp)
ffffffff8000d129:	75 6e                	jne    ffffffff8000d199 <mark_range+0xdb>
ffffffff8000d12b:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
ffffffff8000d12f:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
ffffffff8000d133:	75 12                	jne    ffffffff8000d147 <mark_range+0x89>
ffffffff8000d135:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8000d139:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
ffffffff8000d13d:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
ffffffff8000d141:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
ffffffff8000d145:	eb 56                	jmp    ffffffff8000d19d <mark_range+0xdf>
ffffffff8000d147:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
ffffffff8000d14b:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
ffffffff8000d14f:	72 4b                	jb     ffffffff8000d19c <mark_range+0xde>
ffffffff8000d151:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8000d155:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
ffffffff8000d159:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
ffffffff8000d15d:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
ffffffff8000d161:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
ffffffff8000d165:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8000d169:	48 89 d7             	mov    %rdx,%rdi
ffffffff8000d16c:	48 89 c6             	mov    %rax,%rsi
ffffffff8000d16f:	e8 53 f1 ff ff       	call   ffffffff8000c2c7 <buddy_tree_parent>
ffffffff8000d174:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
ffffffff8000d178:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
ffffffff8000d17c:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
ffffffff8000d180:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8000d184:	48 89 d7             	mov    %rdx,%rdi
ffffffff8000d187:	48 89 c6             	mov    %rax,%rsi
ffffffff8000d18a:	e8 ee f9 ff ff       	call   ffffffff8000cb7d <buddy_tree_valid>
ffffffff8000d18f:	85 c0                	test   %eax,%eax
ffffffff8000d191:	0f 85 6b ff ff ff    	jne    ffffffff8000d102 <mark_range+0x44>
ffffffff8000d197:	eb 04                	jmp    ffffffff8000d19d <mark_range+0xdf>
ffffffff8000d199:	90                   	nop
ffffffff8000d19a:	eb 01                	jmp    ffffffff8000d19d <mark_range+0xdf>
ffffffff8000d19c:	90                   	nop
ffffffff8000d19d:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
ffffffff8000d1a1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8000d1a5:	48 89 d7             	mov    %rdx,%rdi
ffffffff8000d1a8:	48 89 c6             	mov    %rax,%rsi
ffffffff8000d1ab:	e8 cd f9 ff ff       	call   ffffffff8000cb7d <buddy_tree_valid>
ffffffff8000d1b0:	85 c0                	test   %eax,%eax
ffffffff8000d1b2:	75 49                	jne    ffffffff8000d1fd <mark_range+0x13f>
ffffffff8000d1b4:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)
ffffffff8000d1bb:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000d1c0:	e8 1c 9b ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff8000d1c5:	48 89 c6             	mov    %rax,%rsi
ffffffff8000d1c8:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8000d1cb:	41 b9 7f 02 00 00    	mov    $0x27f,%r9d
ffffffff8000d1d1:	4c 8d 05 0a b2 02 00 	lea    0x2b20a(%rip),%r8        # ffffffff800383e2 <g_stivale2_header+0x13e2>
ffffffff8000d1d8:	48 8d 15 49 06 03 00 	lea    0x30649(%rip),%rdx        # ffffffff8003d828 <__FUNCTION__.5.lto_priv.2>
ffffffff8000d1df:	48 89 d1             	mov    %rdx,%rcx
ffffffff8000d1e2:	89 c2                	mov    %eax,%edx
ffffffff8000d1e4:	48 8d 05 8d f5 02 00 	lea    0x2f58d(%rip),%rax        # ffffffff8003c778 <g_stivale2_header+0x5778>
ffffffff8000d1eb:	48 89 c7             	mov    %rax,%rdi
ffffffff8000d1ee:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000d1f3:	e8 48 63 00 00       	call   ffffffff80013540 <printf_>
ffffffff8000d1f8:	e9 8c 00 00 00       	jmp    ffffffff8000d289 <mark_range+0x1cb>
ffffffff8000d1fd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8000d201:	48 89 c7             	mov    %rax,%rdi
ffffffff8000d204:	e8 9a fa ff ff       	call   ffffffff8000cca3 <size_for_depth>
ffffffff8000d209:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff8000d20d:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
ffffffff8000d211:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8000d215:	48 89 d7             	mov    %rdx,%rdi
ffffffff8000d218:	48 89 c6             	mov    %rax,%rsi
ffffffff8000d21b:	e8 26 f6 ff ff       	call   ffffffff8000c846 <buddy_tree_mark>
ffffffff8000d220:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000d224:	48 01 45 b8          	add    %rax,-0x48(%rbp)
ffffffff8000d228:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000d22c:	48 29 45 b0          	sub    %rax,-0x50(%rbp)
ffffffff8000d230:	48 83 7d b0 00       	cmpq   $0x0,-0x50(%rbp)
ffffffff8000d235:	0f 85 a3 fe ff ff    	jne    ffffffff8000d0de <mark_range+0x20>
ffffffff8000d23b:	48 83 7d b0 00       	cmpq   $0x0,-0x50(%rbp)
ffffffff8000d240:	74 46                	je     ffffffff8000d288 <mark_range+0x1ca>
ffffffff8000d242:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)
ffffffff8000d249:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000d24e:	e8 8e 9a ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff8000d253:	48 89 c6             	mov    %rax,%rsi
ffffffff8000d256:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8000d259:	41 b9 89 02 00 00    	mov    $0x289,%r9d
ffffffff8000d25f:	4c 8d 05 7c b1 02 00 	lea    0x2b17c(%rip),%r8        # ffffffff800383e2 <g_stivale2_header+0x13e2>
ffffffff8000d266:	48 8d 15 bb 05 03 00 	lea    0x305bb(%rip),%rdx        # ffffffff8003d828 <__FUNCTION__.5.lto_priv.2>
ffffffff8000d26d:	48 89 d1             	mov    %rdx,%rcx
ffffffff8000d270:	89 c2                	mov    %eax,%edx
ffffffff8000d272:	48 8d 05 ff f4 02 00 	lea    0x2f4ff(%rip),%rax        # ffffffff8003c778 <g_stivale2_header+0x5778>
ffffffff8000d279:	48 89 c7             	mov    %rax,%rdi
ffffffff8000d27c:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000d281:	e8 ba 62 00 00       	call   ffffffff80013540 <printf_>
ffffffff8000d286:	eb 01                	jmp    ffffffff8000d289 <mark_range+0x1cb>
ffffffff8000d288:	90                   	nop
ffffffff8000d289:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8000d28c:	90                   	nop
ffffffff8000d28d:	90                   	nop
ffffffff8000d28e:	c9                   	leave  
ffffffff8000d28f:	c3                   	ret    

ffffffff8000d290 <mark_unusable_ranges>:
ffffffff8000d290:	f3 0f 1e fa          	endbr64 
ffffffff8000d294:	55                   	push   %rbp
ffffffff8000d295:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000d298:	48 83 ec 30          	sub    $0x30,%rsp
ffffffff8000d29c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
ffffffff8000d2a0:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
ffffffff8000d2a7:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
ffffffff8000d2ae:	00 
ffffffff8000d2af:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
ffffffff8000d2b6:	e9 ba 00 00 00       	jmp    ffffffff8000d375 <mark_unusable_ranges+0xe5>
ffffffff8000d2bb:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff8000d2be:	48 63 d0             	movslq %eax,%rdx
ffffffff8000d2c1:	48 89 d0             	mov    %rdx,%rax
ffffffff8000d2c4:	48 01 c0             	add    %rax,%rax
ffffffff8000d2c7:	48 01 d0             	add    %rdx,%rax
ffffffff8000d2ca:	48 c1 e0 03          	shl    $0x3,%rax
ffffffff8000d2ce:	48 8d 50 10          	lea    0x10(%rax),%rdx
ffffffff8000d2d2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8000d2d6:	48 01 d0             	add    %rdx,%rax
ffffffff8000d2d9:	48 83 c0 08          	add    $0x8,%rax
ffffffff8000d2dd:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff8000d2e1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8000d2e5:	8b 40 10             	mov    0x10(%rax),%eax
ffffffff8000d2e8:	3d 00 10 00 00       	cmp    $0x1000,%eax
ffffffff8000d2ed:	74 0c                	je     ffffffff8000d2fb <mark_unusable_ranges+0x6b>
ffffffff8000d2ef:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8000d2f3:	8b 40 10             	mov    0x10(%rax),%eax
ffffffff8000d2f6:	83 f8 01             	cmp    $0x1,%eax
ffffffff8000d2f9:	75 76                	jne    ffffffff8000d371 <mark_unusable_ranges+0xe1>
ffffffff8000d2fb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8000d2ff:	48 8b 00             	mov    (%rax),%rax
ffffffff8000d302:	48 2b 45 f0          	sub    -0x10(%rbp),%rax
ffffffff8000d306:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff8000d30a:	48 89 c6             	mov    %rax,%rsi
ffffffff8000d30d:	48 89 d7             	mov    %rdx,%rdi
ffffffff8000d310:	e8 a9 fd ff ff       	call   ffffffff8000d0be <mark_range>
ffffffff8000d315:	89 45 fc             	mov    %eax,-0x4(%rbp)
ffffffff8000d318:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
ffffffff8000d31c:	74 3d                	je     ffffffff8000d35b <mark_unusable_ranges+0xcb>
ffffffff8000d31e:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000d323:	e8 b9 99 ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff8000d328:	48 89 c6             	mov    %rax,%rsi
ffffffff8000d32b:	41 b8 9a 02 00 00    	mov    $0x29a,%r8d
ffffffff8000d331:	48 8d 05 aa b0 02 00 	lea    0x2b0aa(%rip),%rax        # ffffffff800383e2 <g_stivale2_header+0x13e2>
ffffffff8000d338:	48 89 c1             	mov    %rax,%rcx
ffffffff8000d33b:	48 8d 05 fe 04 03 00 	lea    0x304fe(%rip),%rax        # ffffffff8003d840 <__FUNCTION__.4.lto_priv.2>
ffffffff8000d342:	48 89 c2             	mov    %rax,%rdx
ffffffff8000d345:	48 8d 05 a4 f4 02 00 	lea    0x2f4a4(%rip),%rax        # ffffffff8003c7f0 <g_stivale2_header+0x57f0>
ffffffff8000d34c:	48 89 c7             	mov    %rax,%rdi
ffffffff8000d34f:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000d354:	e8 e7 61 00 00       	call   ffffffff80013540 <printf_>
ffffffff8000d359:	eb 31                	jmp    ffffffff8000d38c <mark_unusable_ranges+0xfc>
ffffffff8000d35b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8000d35f:	48 8b 10             	mov    (%rax),%rdx
ffffffff8000d362:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8000d366:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff8000d36a:	48 01 d0             	add    %rdx,%rax
ffffffff8000d36d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff8000d371:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
ffffffff8000d375:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff8000d378:	48 98                	cltq   
ffffffff8000d37a:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff8000d37e:	48 8b 52 10          	mov    0x10(%rdx),%rdx
ffffffff8000d382:	48 39 d0             	cmp    %rdx,%rax
ffffffff8000d385:	0f 82 30 ff ff ff    	jb     ffffffff8000d2bb <mark_unusable_ranges+0x2b>
ffffffff8000d38b:	90                   	nop
ffffffff8000d38c:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8000d38f:	90                   	nop
ffffffff8000d390:	90                   	nop
ffffffff8000d391:	c9                   	leave  
ffffffff8000d392:	c3                   	ret    

ffffffff8000d393 <mark_bootloader_reclaim>:
ffffffff8000d393:	f3 0f 1e fa          	endbr64 
ffffffff8000d397:	55                   	push   %rbp
ffffffff8000d398:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000d39b:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff8000d39f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff8000d3a3:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
ffffffff8000d3aa:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
ffffffff8000d3b1:	e9 98 00 00 00       	jmp    ffffffff8000d44e <mark_bootloader_reclaim+0xbb>
ffffffff8000d3b6:	8b 45 f8             	mov    -0x8(%rbp),%eax
ffffffff8000d3b9:	48 63 d0             	movslq %eax,%rdx
ffffffff8000d3bc:	48 89 d0             	mov    %rdx,%rax
ffffffff8000d3bf:	48 01 c0             	add    %rax,%rax
ffffffff8000d3c2:	48 01 d0             	add    %rdx,%rax
ffffffff8000d3c5:	48 c1 e0 03          	shl    $0x3,%rax
ffffffff8000d3c9:	48 8d 50 10          	lea    0x10(%rax),%rdx
ffffffff8000d3cd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000d3d1:	48 01 d0             	add    %rdx,%rax
ffffffff8000d3d4:	48 83 c0 08          	add    $0x8,%rax
ffffffff8000d3d8:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff8000d3dc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8000d3e0:	8b 40 10             	mov    0x10(%rax),%eax
ffffffff8000d3e3:	3d 00 10 00 00       	cmp    $0x1000,%eax
ffffffff8000d3e8:	75 60                	jne    ffffffff8000d44a <mark_bootloader_reclaim+0xb7>
ffffffff8000d3ea:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8000d3ee:	48 8b 50 08          	mov    0x8(%rax),%rdx
ffffffff8000d3f2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8000d3f6:	48 8b 00             	mov    (%rax),%rax
ffffffff8000d3f9:	48 89 d6             	mov    %rdx,%rsi
ffffffff8000d3fc:	48 89 c7             	mov    %rax,%rdi
ffffffff8000d3ff:	e8 ba fc ff ff       	call   ffffffff8000d0be <mark_range>
ffffffff8000d404:	89 45 fc             	mov    %eax,-0x4(%rbp)
ffffffff8000d407:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
ffffffff8000d40b:	74 3d                	je     ffffffff8000d44a <mark_bootloader_reclaim+0xb7>
ffffffff8000d40d:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000d412:	e8 ca 98 ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff8000d417:	48 89 c6             	mov    %rax,%rsi
ffffffff8000d41a:	41 b8 b3 02 00 00    	mov    $0x2b3,%r8d
ffffffff8000d420:	48 8d 05 bb af 02 00 	lea    0x2afbb(%rip),%rax        # ffffffff800383e2 <g_stivale2_header+0x13e2>
ffffffff8000d427:	48 89 c1             	mov    %rax,%rcx
ffffffff8000d42a:	48 8d 05 2f 04 03 00 	lea    0x3042f(%rip),%rax        # ffffffff8003d860 <__FUNCTION__.3.lto_priv.2>
ffffffff8000d431:	48 89 c2             	mov    %rax,%rdx
ffffffff8000d434:	48 8d 05 b5 f3 02 00 	lea    0x2f3b5(%rip),%rax        # ffffffff8003c7f0 <g_stivale2_header+0x57f0>
ffffffff8000d43b:	48 89 c7             	mov    %rax,%rdi
ffffffff8000d43e:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000d443:	e8 f8 60 00 00       	call   ffffffff80013540 <printf_>
ffffffff8000d448:	eb 1b                	jmp    ffffffff8000d465 <mark_bootloader_reclaim+0xd2>
ffffffff8000d44a:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)
ffffffff8000d44e:	8b 45 f8             	mov    -0x8(%rbp),%eax
ffffffff8000d451:	48 98                	cltq   
ffffffff8000d453:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff8000d457:	48 8b 52 10          	mov    0x10(%rdx),%rdx
ffffffff8000d45b:	48 39 d0             	cmp    %rdx,%rax
ffffffff8000d45e:	0f 82 52 ff ff ff    	jb     ffffffff8000d3b6 <mark_bootloader_reclaim+0x23>
ffffffff8000d464:	90                   	nop
ffffffff8000d465:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8000d468:	90                   	nop
ffffffff8000d469:	90                   	nop
ffffffff8000d46a:	c9                   	leave  
ffffffff8000d46b:	c3                   	ret    

ffffffff8000d46c <init_palloc>:
ffffffff8000d46c:	f3 0f 1e fa          	endbr64 
ffffffff8000d470:	55                   	push   %rbp
ffffffff8000d471:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000d474:	48 83 ec 60          	sub    $0x60,%rsp
ffffffff8000d478:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
ffffffff8000d47f:	48 b8 07 de 12 86 9e 	movabs $0x2187f79e8612de07,%rax
ffffffff8000d486:	f7 87 21 
ffffffff8000d489:	48 89 c7             	mov    %rax,%rdi
ffffffff8000d48c:	e8 b1 4a ff ff       	call   ffffffff80001f42 <get_stivale2_tag>
ffffffff8000d491:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff8000d495:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
ffffffff8000d49a:	75 49                	jne    ffffffff8000d4e5 <init_palloc+0x79>
ffffffff8000d49c:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)
ffffffff8000d4a3:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000d4a8:	e8 34 98 ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff8000d4ad:	48 89 c6             	mov    %rax,%rsi
ffffffff8000d4b0:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8000d4b3:	41 b9 c0 02 00 00    	mov    $0x2c0,%r9d
ffffffff8000d4b9:	4c 8d 05 22 af 02 00 	lea    0x2af22(%rip),%r8        # ffffffff800383e2 <g_stivale2_header+0x13e2>
ffffffff8000d4c0:	48 8d 15 b1 03 03 00 	lea    0x303b1(%rip),%rdx        # ffffffff8003d878 <__FUNCTION__.2.lto_priv.3>
ffffffff8000d4c7:	48 89 d1             	mov    %rdx,%rcx
ffffffff8000d4ca:	89 c2                	mov    %eax,%edx
ffffffff8000d4cc:	48 8d 05 a5 f2 02 00 	lea    0x2f2a5(%rip),%rax        # ffffffff8003c778 <g_stivale2_header+0x5778>
ffffffff8000d4d3:	48 89 c7             	mov    %rax,%rdi
ffffffff8000d4d6:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000d4db:	e8 60 60 00 00       	call   ffffffff80013540 <printf_>
ffffffff8000d4e0:	e9 76 03 00 00       	jmp    ffffffff8000d85b <init_palloc+0x3ef>
ffffffff8000d4e5:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
ffffffff8000d4ec:	00 
ffffffff8000d4ed:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
ffffffff8000d4f4:	e9 a0 00 00 00       	jmp    ffffffff8000d599 <init_palloc+0x12d>
ffffffff8000d4f9:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
ffffffff8000d4fd:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff8000d500:	48 63 d0             	movslq %eax,%rdx
ffffffff8000d503:	48 89 d0             	mov    %rdx,%rax
ffffffff8000d506:	48 01 c0             	add    %rax,%rax
ffffffff8000d509:	48 01 d0             	add    %rdx,%rax
ffffffff8000d50c:	48 c1 e0 03          	shl    $0x3,%rax
ffffffff8000d510:	48 01 c8             	add    %rcx,%rax
ffffffff8000d513:	48 83 c0 18          	add    $0x18,%rax
ffffffff8000d517:	48 8b 00             	mov    (%rax),%rax
ffffffff8000d51a:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
ffffffff8000d51e:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
ffffffff8000d522:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff8000d525:	48 63 d0             	movslq %eax,%rdx
ffffffff8000d528:	48 89 d0             	mov    %rdx,%rax
ffffffff8000d52b:	48 01 c0             	add    %rax,%rax
ffffffff8000d52e:	48 01 d0             	add    %rdx,%rax
ffffffff8000d531:	48 c1 e0 03          	shl    $0x3,%rax
ffffffff8000d535:	48 01 c8             	add    %rcx,%rax
ffffffff8000d538:	48 83 c0 20          	add    $0x20,%rax
ffffffff8000d53c:	48 8b 00             	mov    (%rax),%rax
ffffffff8000d53f:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
ffffffff8000d543:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
ffffffff8000d547:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff8000d54a:	48 63 d0             	movslq %eax,%rdx
ffffffff8000d54d:	48 89 d0             	mov    %rdx,%rax
ffffffff8000d550:	48 01 c0             	add    %rax,%rax
ffffffff8000d553:	48 01 d0             	add    %rdx,%rax
ffffffff8000d556:	48 c1 e0 03          	shl    $0x3,%rax
ffffffff8000d55a:	48 01 c8             	add    %rcx,%rax
ffffffff8000d55d:	48 83 c0 28          	add    $0x28,%rax
ffffffff8000d561:	8b 00                	mov    (%rax),%eax
ffffffff8000d563:	89 45 a4             	mov    %eax,-0x5c(%rbp)
ffffffff8000d566:	83 7d a4 01          	cmpl   $0x1,-0x5c(%rbp)
ffffffff8000d56a:	74 09                	je     ffffffff8000d575 <init_palloc+0x109>
ffffffff8000d56c:	81 7d a4 00 10 00 00 	cmpl   $0x1000,-0x5c(%rbp)
ffffffff8000d573:	75 20                	jne    ffffffff8000d595 <init_palloc+0x129>
ffffffff8000d575:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
ffffffff8000d579:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff8000d57d:	48 01 d0             	add    %rdx,%rax
ffffffff8000d580:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
ffffffff8000d584:	73 0f                	jae    ffffffff8000d595 <init_palloc+0x129>
ffffffff8000d586:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
ffffffff8000d58a:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff8000d58e:	48 01 d0             	add    %rdx,%rax
ffffffff8000d591:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff8000d595:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
ffffffff8000d599:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff8000d59c:	48 98                	cltq   
ffffffff8000d59e:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff8000d5a2:	48 8b 52 10          	mov    0x10(%rdx),%rdx
ffffffff8000d5a6:	48 39 d0             	cmp    %rdx,%rax
ffffffff8000d5a9:	0f 82 4a ff ff ff    	jb     ffffffff8000d4f9 <init_palloc+0x8d>
ffffffff8000d5af:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8000d5b3:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
ffffffff8000d5b7:	48 c7 45 d0 40 00 00 	movq   $0x40,-0x30(%rbp)
ffffffff8000d5be:	00 
ffffffff8000d5bf:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8000d5c3:	48 f7 d8             	neg    %rax
ffffffff8000d5c6:	48 23 45 d8          	and    -0x28(%rbp),%rax
ffffffff8000d5ca:	48 89 05 1f 3b 2a 00 	mov    %rax,0x2a3b1f(%rip)        # ffffffff802b10f0 <m_buddy_memory_size>
ffffffff8000d5d1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8000d5d5:	48 89 c7             	mov    %rax,%rdi
ffffffff8000d5d8:	e8 e4 f5 ff ff       	call   ffffffff8000cbc1 <buddy_sizeof>
ffffffff8000d5dd:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
ffffffff8000d5e1:	48 c7 45 c0 00 10 00 	movq   $0x1000,-0x40(%rbp)
ffffffff8000d5e8:	00 
ffffffff8000d5e9:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
ffffffff8000d5ed:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8000d5f1:	48 01 d0             	add    %rdx,%rax
ffffffff8000d5f4:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
ffffffff8000d5f8:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8000d5fc:	48 f7 d8             	neg    %rax
ffffffff8000d5ff:	48 21 d0             	and    %rdx,%rax
ffffffff8000d602:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
ffffffff8000d606:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8000d60a:	48 89 c7             	mov    %rax,%rdi
ffffffff8000d60d:	e8 00 eb ff ff       	call   ffffffff8000c112 <buddy_tree_order_for_memory>
ffffffff8000d612:	88 05 c2 3a 2a 00    	mov    %al,0x2a3ac2(%rip)        # ffffffff802b10da <m_buddy_tree_order>
ffffffff8000d618:	0f b6 05 bb 3a 2a 00 	movzbl 0x2a3abb(%rip),%eax        # ffffffff802b10da <m_buddy_tree_order>
ffffffff8000d61f:	0f b6 c0             	movzbl %al,%eax
ffffffff8000d622:	ba 01 00 00 00       	mov    $0x1,%edx
ffffffff8000d627:	89 c1                	mov    %eax,%ecx
ffffffff8000d629:	d3 e2                	shl    %cl,%edx
ffffffff8000d62b:	89 d0                	mov    %edx,%eax
ffffffff8000d62d:	48 98                	cltq   
ffffffff8000d62f:	48 89 05 aa 3a 2a 00 	mov    %rax,0x2a3aaa(%rip)        # ffffffff802b10e0 <m_buddy_tree_upper_pos_bound>
ffffffff8000d636:	48 8b 15 b3 3a 2a 00 	mov    0x2a3ab3(%rip),%rdx        # ffffffff802b10f0 <m_buddy_memory_size>
ffffffff8000d63d:	48 b8 00 00 00 00 80 	movabs $0x8000000000,%rax
ffffffff8000d644:	00 00 00 
ffffffff8000d647:	48 39 c2             	cmp    %rax,%rdx
ffffffff8000d64a:	76 49                	jbe    ffffffff8000d695 <init_palloc+0x229>
ffffffff8000d64c:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)
ffffffff8000d653:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000d658:	e8 84 96 ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff8000d65d:	48 89 c6             	mov    %rax,%rsi
ffffffff8000d660:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8000d663:	41 b9 d8 02 00 00    	mov    $0x2d8,%r9d
ffffffff8000d669:	4c 8d 05 72 ad 02 00 	lea    0x2ad72(%rip),%r8        # ffffffff800383e2 <g_stivale2_header+0x13e2>
ffffffff8000d670:	48 8d 15 01 02 03 00 	lea    0x30201(%rip),%rdx        # ffffffff8003d878 <__FUNCTION__.2.lto_priv.3>
ffffffff8000d677:	48 89 d1             	mov    %rdx,%rcx
ffffffff8000d67a:	89 c2                	mov    %eax,%edx
ffffffff8000d67c:	48 8d 05 f5 f0 02 00 	lea    0x2f0f5(%rip),%rax        # ffffffff8003c778 <g_stivale2_header+0x5778>
ffffffff8000d683:	48 89 c7             	mov    %rax,%rdi
ffffffff8000d686:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000d68b:	e8 b0 5e 00 00       	call   ffffffff80013540 <printf_>
ffffffff8000d690:	e9 c6 01 00 00       	jmp    ffffffff8000d85b <init_palloc+0x3ef>
ffffffff8000d695:	48 b8 00 00 00 00 02 	movabs $0x200000000,%rax
ffffffff8000d69c:	00 00 00 
ffffffff8000d69f:	48 39 45 b8          	cmp    %rax,-0x48(%rbp)
ffffffff8000d6a3:	76 49                	jbe    ffffffff8000d6ee <init_palloc+0x282>
ffffffff8000d6a5:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)
ffffffff8000d6ac:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000d6b1:	e8 2b 96 ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff8000d6b6:	48 89 c6             	mov    %rax,%rsi
ffffffff8000d6b9:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8000d6bc:	41 b9 d9 02 00 00    	mov    $0x2d9,%r9d
ffffffff8000d6c2:	4c 8d 05 19 ad 02 00 	lea    0x2ad19(%rip),%r8        # ffffffff800383e2 <g_stivale2_header+0x13e2>
ffffffff8000d6c9:	48 8d 15 a8 01 03 00 	lea    0x301a8(%rip),%rdx        # ffffffff8003d878 <__FUNCTION__.2.lto_priv.3>
ffffffff8000d6d0:	48 89 d1             	mov    %rdx,%rcx
ffffffff8000d6d3:	89 c2                	mov    %eax,%edx
ffffffff8000d6d5:	48 8d 05 9c f0 02 00 	lea    0x2f09c(%rip),%rax        # ffffffff8003c778 <g_stivale2_header+0x5778>
ffffffff8000d6dc:	48 89 c7             	mov    %rax,%rdi
ffffffff8000d6df:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000d6e4:	e8 57 5e 00 00       	call   ffffffff80013540 <printf_>
ffffffff8000d6e9:	e9 6d 01 00 00       	jmp    ffffffff8000d85b <init_palloc+0x3ef>
ffffffff8000d6ee:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000d6f3:	e8 e9 95 ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff8000d6f8:	48 89 c1             	mov    %rax,%rcx
ffffffff8000d6fb:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff8000d6ff:	48 89 c2             	mov    %rax,%rdx
ffffffff8000d702:	48 89 ce             	mov    %rcx,%rsi
ffffffff8000d705:	48 8d 05 c4 fa 02 00 	lea    0x2fac4(%rip),%rax        # ffffffff8003d1d0 <g_stivale2_header+0x61d0>
ffffffff8000d70c:	48 89 c7             	mov    %rax,%rdi
ffffffff8000d70f:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000d714:	e8 27 5e 00 00       	call   ffffffff80013540 <printf_>
ffffffff8000d719:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff8000d71d:	48 c1 e8 0c          	shr    $0xc,%rax
ffffffff8000d721:	ba 05 00 00 00       	mov    $0x5,%edx
ffffffff8000d726:	48 89 c6             	mov    %rax,%rsi
ffffffff8000d729:	48 b8 00 00 00 40 80 	movabs $0xffff808040000000,%rax
ffffffff8000d730:	80 ff ff 
ffffffff8000d733:	48 89 c7             	mov    %rax,%rdi
ffffffff8000d736:	e8 3a ad ff ff       	call   ffffffff80008475 <vmm_alloc>
ffffffff8000d73b:	89 45 fc             	mov    %eax,-0x4(%rbp)
ffffffff8000d73e:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
ffffffff8000d742:	74 40                	je     ffffffff8000d784 <init_palloc+0x318>
ffffffff8000d744:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000d749:	e8 93 95 ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff8000d74e:	48 89 c6             	mov    %rax,%rsi
ffffffff8000d751:	41 b8 dd 02 00 00    	mov    $0x2dd,%r8d
ffffffff8000d757:	48 8d 05 84 ac 02 00 	lea    0x2ac84(%rip),%rax        # ffffffff800383e2 <g_stivale2_header+0x13e2>
ffffffff8000d75e:	48 89 c1             	mov    %rax,%rcx
ffffffff8000d761:	48 8d 05 10 01 03 00 	lea    0x30110(%rip),%rax        # ffffffff8003d878 <__FUNCTION__.2.lto_priv.3>
ffffffff8000d768:	48 89 c2             	mov    %rax,%rdx
ffffffff8000d76b:	48 8d 05 7e f0 02 00 	lea    0x2f07e(%rip),%rax        # ffffffff8003c7f0 <g_stivale2_header+0x57f0>
ffffffff8000d772:	48 89 c7             	mov    %rax,%rdi
ffffffff8000d775:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000d77a:	e8 c1 5d 00 00       	call   ffffffff80013540 <printf_>
ffffffff8000d77f:	e9 d7 00 00 00       	jmp    ffffffff8000d85b <init_palloc+0x3ef>
ffffffff8000d784:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff8000d788:	48 89 c2             	mov    %rax,%rdx
ffffffff8000d78b:	be 00 00 00 00       	mov    $0x0,%esi
ffffffff8000d790:	48 b8 00 00 00 40 80 	movabs $0xffff808040000000,%rax
ffffffff8000d797:	80 ff ff 
ffffffff8000d79a:	48 89 c7             	mov    %rax,%rdi
ffffffff8000d79d:	e8 a6 0d 00 00       	call   ffffffff8000e548 <memset>
ffffffff8000d7a2:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000d7a7:	e8 62 ec ff ff       	call   ffffffff8000c40e <buddy_tree_populate_size_for_order>
ffffffff8000d7ac:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000d7b1:	e8 2f f5 ff ff       	call   ffffffff8000cce5 <buddy_toggle_virtual_slots>
ffffffff8000d7b6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8000d7ba:	48 89 c7             	mov    %rax,%rdi
ffffffff8000d7bd:	e8 ce fa ff ff       	call   ffffffff8000d290 <mark_unusable_ranges>
ffffffff8000d7c2:	89 45 fc             	mov    %eax,-0x4(%rbp)
ffffffff8000d7c5:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
ffffffff8000d7c9:	74 3d                	je     ffffffff8000d808 <init_palloc+0x39c>
ffffffff8000d7cb:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000d7d0:	e8 0c 95 ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff8000d7d5:	48 89 c6             	mov    %rax,%rsi
ffffffff8000d7d8:	41 b8 e7 02 00 00    	mov    $0x2e7,%r8d
ffffffff8000d7de:	48 8d 05 fd ab 02 00 	lea    0x2abfd(%rip),%rax        # ffffffff800383e2 <g_stivale2_header+0x13e2>
ffffffff8000d7e5:	48 89 c1             	mov    %rax,%rcx
ffffffff8000d7e8:	48 8d 05 89 00 03 00 	lea    0x30089(%rip),%rax        # ffffffff8003d878 <__FUNCTION__.2.lto_priv.3>
ffffffff8000d7ef:	48 89 c2             	mov    %rax,%rdx
ffffffff8000d7f2:	48 8d 05 f7 ef 02 00 	lea    0x2eff7(%rip),%rax        # ffffffff8003c7f0 <g_stivale2_header+0x57f0>
ffffffff8000d7f9:	48 89 c7             	mov    %rax,%rdi
ffffffff8000d7fc:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000d801:	e8 3a 5d 00 00       	call   ffffffff80013540 <printf_>
ffffffff8000d806:	eb 53                	jmp    ffffffff8000d85b <init_palloc+0x3ef>
ffffffff8000d808:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8000d80c:	48 89 c7             	mov    %rax,%rdi
ffffffff8000d80f:	e8 7f fb ff ff       	call   ffffffff8000d393 <mark_bootloader_reclaim>
ffffffff8000d814:	89 45 fc             	mov    %eax,-0x4(%rbp)
ffffffff8000d817:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
ffffffff8000d81b:	74 3d                	je     ffffffff8000d85a <init_palloc+0x3ee>
ffffffff8000d81d:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000d822:	e8 ba 94 ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff8000d827:	48 89 c6             	mov    %rax,%rsi
ffffffff8000d82a:	41 b8 e8 02 00 00    	mov    $0x2e8,%r8d
ffffffff8000d830:	48 8d 05 ab ab 02 00 	lea    0x2abab(%rip),%rax        # ffffffff800383e2 <g_stivale2_header+0x13e2>
ffffffff8000d837:	48 89 c1             	mov    %rax,%rcx
ffffffff8000d83a:	48 8d 05 37 00 03 00 	lea    0x30037(%rip),%rax        # ffffffff8003d878 <__FUNCTION__.2.lto_priv.3>
ffffffff8000d841:	48 89 c2             	mov    %rax,%rdx
ffffffff8000d844:	48 8d 05 a5 ef 02 00 	lea    0x2efa5(%rip),%rax        # ffffffff8003c7f0 <g_stivale2_header+0x57f0>
ffffffff8000d84b:	48 89 c7             	mov    %rax,%rdi
ffffffff8000d84e:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000d853:	e8 e8 5c 00 00       	call   ffffffff80013540 <printf_>
ffffffff8000d858:	eb 01                	jmp    ffffffff8000d85b <init_palloc+0x3ef>
ffffffff8000d85a:	90                   	nop
ffffffff8000d85b:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8000d85e:	90                   	nop
ffffffff8000d85f:	90                   	nop
ffffffff8000d860:	c9                   	leave  
ffffffff8000d861:	c3                   	ret    

ffffffff8000d862 <palloc_reclaim>:
ffffffff8000d862:	f3 0f 1e fa          	endbr64 
ffffffff8000d866:	55                   	push   %rbp
ffffffff8000d867:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000d86a:	41 55                	push   %r13
ffffffff8000d86c:	41 54                	push   %r12
ffffffff8000d86e:	53                   	push   %rbx
ffffffff8000d86f:	48 83 ec 68          	sub    $0x68,%rsp
ffffffff8000d873:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%rbp)
ffffffff8000d87a:	48 c7 45 d0 00 00 00 	movq   $0x0,-0x30(%rbp)
ffffffff8000d881:	00 
ffffffff8000d882:	48 b8 07 de 12 86 9e 	movabs $0x2187f79e8612de07,%rax
ffffffff8000d889:	f7 87 21 
ffffffff8000d88c:	48 89 c7             	mov    %rax,%rdi
ffffffff8000d88f:	e8 ae 46 ff ff       	call   ffffffff80001f42 <get_stivale2_tag>
ffffffff8000d894:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
ffffffff8000d898:	48 83 7d b0 00       	cmpq   $0x0,-0x50(%rbp)
ffffffff8000d89d:	75 49                	jne    ffffffff8000d8e8 <palloc_reclaim+0x86>
ffffffff8000d89f:	c7 45 dc 01 00 00 00 	movl   $0x1,-0x24(%rbp)
ffffffff8000d8a6:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000d8ab:	e8 31 94 ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff8000d8b0:	48 89 c6             	mov    %rax,%rsi
ffffffff8000d8b3:	8b 45 dc             	mov    -0x24(%rbp),%eax
ffffffff8000d8b6:	41 b9 f5 02 00 00    	mov    $0x2f5,%r9d
ffffffff8000d8bc:	4c 8d 05 1f ab 02 00 	lea    0x2ab1f(%rip),%r8        # ffffffff800383e2 <g_stivale2_header+0x13e2>
ffffffff8000d8c3:	48 8d 15 be ff 02 00 	lea    0x2ffbe(%rip),%rdx        # ffffffff8003d888 <__FUNCTION__.1.lto_priv.5>
ffffffff8000d8ca:	48 89 d1             	mov    %rdx,%rcx
ffffffff8000d8cd:	89 c2                	mov    %eax,%edx
ffffffff8000d8cf:	48 8d 05 a2 ee 02 00 	lea    0x2eea2(%rip),%rax        # ffffffff8003c778 <g_stivale2_header+0x5778>
ffffffff8000d8d6:	48 89 c7             	mov    %rax,%rdi
ffffffff8000d8d9:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000d8de:	e8 5d 5c 00 00       	call   ffffffff80013540 <printf_>
ffffffff8000d8e3:	e9 ea 02 00 00       	jmp    ffffffff8000dbd2 <palloc_reclaim+0x370>
ffffffff8000d8e8:	c7 45 cc 00 00 00 00 	movl   $0x0,-0x34(%rbp)
ffffffff8000d8ef:	e9 d5 00 00 00       	jmp    ffffffff8000d9c9 <palloc_reclaim+0x167>
ffffffff8000d8f4:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
ffffffff8000d8f8:	8b 45 cc             	mov    -0x34(%rbp),%eax
ffffffff8000d8fb:	48 63 d0             	movslq %eax,%rdx
ffffffff8000d8fe:	48 89 d0             	mov    %rdx,%rax
ffffffff8000d901:	48 01 c0             	add    %rax,%rax
ffffffff8000d904:	48 01 d0             	add    %rdx,%rax
ffffffff8000d907:	48 c1 e0 03          	shl    $0x3,%rax
ffffffff8000d90b:	48 01 c8             	add    %rcx,%rax
ffffffff8000d90e:	48 83 c0 28          	add    $0x28,%rax
ffffffff8000d912:	8b 00                	mov    (%rax),%eax
ffffffff8000d914:	3d 00 10 00 00       	cmp    $0x1000,%eax
ffffffff8000d919:	0f 85 a6 00 00 00    	jne    ffffffff8000d9c5 <palloc_reclaim+0x163>
ffffffff8000d91f:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
ffffffff8000d924:	74 20                	je     ffffffff8000d946 <palloc_reclaim+0xe4>
ffffffff8000d926:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8000d92a:	48 83 e8 20          	sub    $0x20,%rax
ffffffff8000d92e:	48 8b 00             	mov    (%rax),%rax
ffffffff8000d931:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffff8000d935:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8000d939:	48 83 e8 20          	sub    $0x20,%rax
ffffffff8000d93d:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff8000d941:	48 39 c2             	cmp    %rax,%rdx
ffffffff8000d944:	76 20                	jbe    ffffffff8000d966 <palloc_reclaim+0x104>
ffffffff8000d946:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8000d94a:	b9 00 00 00 00       	mov    $0x0,%ecx
ffffffff8000d94f:	ba 01 00 00 00       	mov    $0x1,%edx
ffffffff8000d954:	be 18 00 00 00       	mov    $0x18,%esi
ffffffff8000d959:	48 89 c7             	mov    %rax,%rdi
ffffffff8000d95c:	e8 07 16 00 00       	call   ffffffff8000ef68 <stbds_arrgrowf>
ffffffff8000d961:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
ffffffff8000d965:	90                   	nop
ffffffff8000d966:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8000d96a:	48 83 e8 20          	sub    $0x20,%rax
ffffffff8000d96e:	48 8b 10             	mov    (%rax),%rdx
ffffffff8000d971:	48 8d 4a 01          	lea    0x1(%rdx),%rcx
ffffffff8000d975:	48 89 08             	mov    %rcx,(%rax)
ffffffff8000d978:	48 89 d0             	mov    %rdx,%rax
ffffffff8000d97b:	48 01 c0             	add    %rax,%rax
ffffffff8000d97e:	48 01 d0             	add    %rdx,%rax
ffffffff8000d981:	48 c1 e0 03          	shl    $0x3,%rax
ffffffff8000d985:	48 89 c2             	mov    %rax,%rdx
ffffffff8000d988:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8000d98c:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
ffffffff8000d990:	48 8b 75 b0          	mov    -0x50(%rbp),%rsi
ffffffff8000d994:	8b 45 cc             	mov    -0x34(%rbp),%eax
ffffffff8000d997:	48 63 d0             	movslq %eax,%rdx
ffffffff8000d99a:	48 89 d0             	mov    %rdx,%rax
ffffffff8000d99d:	48 01 c0             	add    %rax,%rax
ffffffff8000d9a0:	48 01 d0             	add    %rdx,%rax
ffffffff8000d9a3:	48 c1 e0 03          	shl    $0x3,%rax
ffffffff8000d9a7:	48 01 f0             	add    %rsi,%rax
ffffffff8000d9aa:	48 8d 70 10          	lea    0x10(%rax),%rsi
ffffffff8000d9ae:	48 8b 46 08          	mov    0x8(%rsi),%rax
ffffffff8000d9b2:	48 8b 56 10          	mov    0x10(%rsi),%rdx
ffffffff8000d9b6:	48 89 01             	mov    %rax,(%rcx)
ffffffff8000d9b9:	48 89 51 08          	mov    %rdx,0x8(%rcx)
ffffffff8000d9bd:	48 8b 46 18          	mov    0x18(%rsi),%rax
ffffffff8000d9c1:	48 89 41 10          	mov    %rax,0x10(%rcx)
ffffffff8000d9c5:	83 45 cc 01          	addl   $0x1,-0x34(%rbp)
ffffffff8000d9c9:	8b 45 cc             	mov    -0x34(%rbp),%eax
ffffffff8000d9cc:	48 98                	cltq   
ffffffff8000d9ce:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
ffffffff8000d9d2:	48 8b 52 10          	mov    0x10(%rdx),%rdx
ffffffff8000d9d6:	48 39 d0             	cmp    %rdx,%rax
ffffffff8000d9d9:	0f 82 15 ff ff ff    	jb     ffffffff8000d8f4 <palloc_reclaim+0x92>
ffffffff8000d9df:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000d9e4:	e8 f8 92 ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff8000d9e9:	48 89 c6             	mov    %rax,%rsi
ffffffff8000d9ec:	48 8d 05 0d f8 02 00 	lea    0x2f80d(%rip),%rax        # ffffffff8003d200 <g_stivale2_header+0x6200>
ffffffff8000d9f3:	48 89 c7             	mov    %rax,%rdi
ffffffff8000d9f6:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000d9fb:	e8 40 5b 00 00       	call   ffffffff80013540 <printf_>
ffffffff8000da00:	c7 45 c8 00 00 00 00 	movl   $0x0,-0x38(%rbp)
ffffffff8000da07:	e9 9e 01 00 00       	jmp    ffffffff8000dbaa <palloc_reclaim+0x348>
ffffffff8000da0c:	8b 45 c8             	mov    -0x38(%rbp),%eax
ffffffff8000da0f:	48 63 d0             	movslq %eax,%rdx
ffffffff8000da12:	48 89 d0             	mov    %rdx,%rax
ffffffff8000da15:	48 01 c0             	add    %rax,%rax
ffffffff8000da18:	48 01 d0             	add    %rdx,%rax
ffffffff8000da1b:	48 c1 e0 03          	shl    $0x3,%rax
ffffffff8000da1f:	48 89 c2             	mov    %rax,%rdx
ffffffff8000da22:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8000da26:	48 01 d0             	add    %rdx,%rax
ffffffff8000da29:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
ffffffff8000da2d:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff8000da31:	4c 8b 68 08          	mov    0x8(%rax),%r13
ffffffff8000da35:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff8000da39:	48 8b 10             	mov    (%rax),%rdx
ffffffff8000da3c:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff8000da40:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff8000da44:	4c 8d 24 02          	lea    (%rdx,%rax,1),%r12
ffffffff8000da48:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff8000da4c:	48 8b 18             	mov    (%rax),%rbx
ffffffff8000da4f:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000da54:	e8 88 92 ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff8000da59:	4d 89 e8             	mov    %r13,%r8
ffffffff8000da5c:	4c 89 e1             	mov    %r12,%rcx
ffffffff8000da5f:	48 89 da             	mov    %rbx,%rdx
ffffffff8000da62:	48 89 c6             	mov    %rax,%rsi
ffffffff8000da65:	48 8d 05 bc f7 02 00 	lea    0x2f7bc(%rip),%rax        # ffffffff8003d228 <g_stivale2_header+0x6228>
ffffffff8000da6c:	48 89 c7             	mov    %rax,%rdi
ffffffff8000da6f:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000da74:	e8 c7 5a 00 00       	call   ffffffff80013540 <printf_>
ffffffff8000da79:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff8000da7d:	48 8b 00             	mov    (%rax),%rax
ffffffff8000da80:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
ffffffff8000da84:	48 b8 00 00 00 00 80 	movabs $0x8000000000,%rax
ffffffff8000da8b:	00 00 00 
ffffffff8000da8e:	48 39 45 a0          	cmp    %rax,-0x60(%rbp)
ffffffff8000da92:	76 3d                	jbe    ffffffff8000dad1 <palloc_reclaim+0x26f>
ffffffff8000da94:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000da99:	e8 43 92 ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff8000da9e:	48 89 c6             	mov    %rax,%rsi
ffffffff8000daa1:	41 b8 02 03 00 00    	mov    $0x302,%r8d
ffffffff8000daa7:	48 8d 05 34 a9 02 00 	lea    0x2a934(%rip),%rax        # ffffffff800383e2 <g_stivale2_header+0x13e2>
ffffffff8000daae:	48 89 c1             	mov    %rax,%rcx
ffffffff8000dab1:	48 8d 05 d0 fd 02 00 	lea    0x2fdd0(%rip),%rax        # ffffffff8003d888 <__FUNCTION__.1.lto_priv.5>
ffffffff8000dab8:	48 89 c2             	mov    %rax,%rdx
ffffffff8000dabb:	48 8d 05 fe ec 02 00 	lea    0x2ecfe(%rip),%rax        # ffffffff8003c7c0 <g_stivale2_header+0x57c0>
ffffffff8000dac2:	48 89 c7             	mov    %rax,%rdi
ffffffff8000dac5:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000daca:	e8 71 5a 00 00       	call   ffffffff80013540 <printf_>
ffffffff8000dacf:	0f 0b                	ud2    
ffffffff8000dad1:	48 ba 00 00 00 00 00 	movabs $0xffff800000000000,%rdx
ffffffff8000dad8:	80 ff ff 
ffffffff8000dadb:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff8000dadf:	48 01 d0             	add    %rdx,%rax
ffffffff8000dae2:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
ffffffff8000dae6:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff8000daea:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff8000daee:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
ffffffff8000daf2:	e9 a4 00 00 00       	jmp    ffffffff8000db9b <palloc_reclaim+0x339>
ffffffff8000daf7:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8000dafb:	48 89 c7             	mov    %rax,%rdi
ffffffff8000dafe:	e8 70 f4 ff ff       	call   ffffffff8000cf73 <position_for_address>
ffffffff8000db03:	48 89 45 80          	mov    %rax,-0x80(%rbp)
ffffffff8000db07:	48 89 55 88          	mov    %rdx,-0x78(%rbp)
ffffffff8000db0b:	48 8b 55 80          	mov    -0x80(%rbp),%rdx
ffffffff8000db0f:	48 8b 45 88          	mov    -0x78(%rbp),%rax
ffffffff8000db13:	48 89 d7             	mov    %rdx,%rdi
ffffffff8000db16:	48 89 c6             	mov    %rax,%rsi
ffffffff8000db19:	e8 5f f0 ff ff       	call   ffffffff8000cb7d <buddy_tree_valid>
ffffffff8000db1e:	85 c0                	test   %eax,%eax
ffffffff8000db20:	75 46                	jne    ffffffff8000db68 <palloc_reclaim+0x306>
ffffffff8000db22:	c7 45 dc 01 00 00 00 	movl   $0x1,-0x24(%rbp)
ffffffff8000db29:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000db2e:	e8 ae 91 ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff8000db33:	48 89 c6             	mov    %rax,%rsi
ffffffff8000db36:	8b 45 dc             	mov    -0x24(%rbp),%eax
ffffffff8000db39:	41 b9 07 03 00 00    	mov    $0x307,%r9d
ffffffff8000db3f:	4c 8d 05 9c a8 02 00 	lea    0x2a89c(%rip),%r8        # ffffffff800383e2 <g_stivale2_header+0x13e2>
ffffffff8000db46:	48 8d 15 3b fd 02 00 	lea    0x2fd3b(%rip),%rdx        # ffffffff8003d888 <__FUNCTION__.1.lto_priv.5>
ffffffff8000db4d:	48 89 d1             	mov    %rdx,%rcx
ffffffff8000db50:	89 c2                	mov    %eax,%edx
ffffffff8000db52:	48 8d 05 1f ec 02 00 	lea    0x2ec1f(%rip),%rax        # ffffffff8003c778 <g_stivale2_header+0x5778>
ffffffff8000db59:	48 89 c7             	mov    %rax,%rdi
ffffffff8000db5c:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000db61:	e8 da 59 00 00       	call   ffffffff80013540 <printf_>
ffffffff8000db66:	eb 6a                	jmp    ffffffff8000dbd2 <palloc_reclaim+0x370>
ffffffff8000db68:	48 8b 55 80          	mov    -0x80(%rbp),%rdx
ffffffff8000db6c:	48 8b 45 88          	mov    -0x78(%rbp),%rax
ffffffff8000db70:	48 89 d7             	mov    %rdx,%rdi
ffffffff8000db73:	48 89 c6             	mov    %rax,%rsi
ffffffff8000db76:	e8 3f ed ff ff       	call   ffffffff8000c8ba <buddy_tree_release>
ffffffff8000db7b:	48 8b 45 88          	mov    -0x78(%rbp),%rax
ffffffff8000db7f:	48 89 c7             	mov    %rax,%rdi
ffffffff8000db82:	e8 1c f1 ff ff       	call   ffffffff8000cca3 <size_for_depth>
ffffffff8000db87:	48 89 45 98          	mov    %rax,-0x68(%rbp)
ffffffff8000db8b:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff8000db8f:	48 01 45 c0          	add    %rax,-0x40(%rbp)
ffffffff8000db93:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff8000db97:	48 29 45 b8          	sub    %rax,-0x48(%rbp)
ffffffff8000db9b:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
ffffffff8000dba0:	0f 85 51 ff ff ff    	jne    ffffffff8000daf7 <palloc_reclaim+0x295>
ffffffff8000dba6:	83 45 c8 01          	addl   $0x1,-0x38(%rbp)
ffffffff8000dbaa:	8b 45 c8             	mov    -0x38(%rbp),%eax
ffffffff8000dbad:	48 98                	cltq   
ffffffff8000dbaf:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
ffffffff8000dbb4:	74 0d                	je     ffffffff8000dbc3 <palloc_reclaim+0x361>
ffffffff8000dbb6:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
ffffffff8000dbba:	48 83 ea 20          	sub    $0x20,%rdx
ffffffff8000dbbe:	48 8b 12             	mov    (%rdx),%rdx
ffffffff8000dbc1:	eb 05                	jmp    ffffffff8000dbc8 <palloc_reclaim+0x366>
ffffffff8000dbc3:	ba 00 00 00 00       	mov    $0x0,%edx
ffffffff8000dbc8:	48 39 c2             	cmp    %rax,%rdx
ffffffff8000dbcb:	0f 8f 3b fe ff ff    	jg     ffffffff8000da0c <palloc_reclaim+0x1aa>
ffffffff8000dbd1:	90                   	nop
ffffffff8000dbd2:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
ffffffff8000dbd7:	74 10                	je     ffffffff8000dbe9 <palloc_reclaim+0x387>
ffffffff8000dbd9:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8000dbdd:	48 83 e8 20          	sub    $0x20,%rax
ffffffff8000dbe1:	48 89 c7             	mov    %rax,%rdi
ffffffff8000dbe4:	e8 1d dd ff ff       	call   ffffffff8000b906 <free>
ffffffff8000dbe9:	48 c7 45 d0 00 00 00 	movq   $0x0,-0x30(%rbp)
ffffffff8000dbf0:	00 
ffffffff8000dbf1:	8b 45 dc             	mov    -0x24(%rbp),%eax
ffffffff8000dbf4:	90                   	nop
ffffffff8000dbf5:	90                   	nop
ffffffff8000dbf6:	48 83 c4 68          	add    $0x68,%rsp
ffffffff8000dbfa:	5b                   	pop    %rbx
ffffffff8000dbfb:	41 5c                	pop    %r12
ffffffff8000dbfd:	41 5d                	pop    %r13
ffffffff8000dbff:	5d                   	pop    %rbp
ffffffff8000dc00:	c3                   	ret    

ffffffff8000dc01 <palloc>:
ffffffff8000dc01:	f3 0f 1e fa          	endbr64 
ffffffff8000dc05:	55                   	push   %rbp
ffffffff8000dc06:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000dc09:	48 83 ec 30          	sub    $0x30,%rsp
ffffffff8000dc0d:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
ffffffff8000dc11:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
ffffffff8000dc16:	75 08                	jne    ffffffff8000dc20 <palloc+0x1f>
ffffffff8000dc18:	48 c7 45 d8 01 00 00 	movq   $0x1,-0x28(%rbp)
ffffffff8000dc1f:	00 
ffffffff8000dc20:	48 8b 05 c9 34 2a 00 	mov    0x2a34c9(%rip),%rax        # ffffffff802b10f0 <m_buddy_memory_size>
ffffffff8000dc27:	48 39 45 d8          	cmp    %rax,-0x28(%rbp)
ffffffff8000dc2b:	76 0a                	jbe    ffffffff8000dc37 <palloc+0x36>
ffffffff8000dc2d:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000dc32:	e9 b5 00 00 00       	jmp    ffffffff8000dcec <palloc+0xeb>
ffffffff8000dc37:	48 8d 05 c2 34 2a 00 	lea    0x2a34c2(%rip),%rax        # ffffffff802b1100 <m_palloc_lock>
ffffffff8000dc3e:	48 89 c7             	mov    %rax,%rdi
ffffffff8000dc41:	e8 c8 41 ff ff       	call   ffffffff80001e0e <spinlock_lock>
ffffffff8000dc46:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8000dc4a:	48 89 c7             	mov    %rax,%rdi
ffffffff8000dc4d:	e8 f6 ef ff ff       	call   ffffffff8000cc48 <depth_for_size>
ffffffff8000dc52:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8000dc56:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000dc5a:	0f b6 c0             	movzbl %al,%eax
ffffffff8000dc5d:	89 c7                	mov    %eax,%edi
ffffffff8000dc5f:	e8 e8 ec ff ff       	call   ffffffff8000c94c <buddy_tree_find_free>
ffffffff8000dc64:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff8000dc68:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
ffffffff8000dc6c:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff8000dc70:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000dc74:	48 89 d7             	mov    %rdx,%rdi
ffffffff8000dc77:	48 89 c6             	mov    %rax,%rsi
ffffffff8000dc7a:	e8 fe ee ff ff       	call   ffffffff8000cb7d <buddy_tree_valid>
ffffffff8000dc7f:	85 c0                	test   %eax,%eax
ffffffff8000dc81:	75 16                	jne    ffffffff8000dc99 <palloc+0x98>
ffffffff8000dc83:	48 8d 05 76 34 2a 00 	lea    0x2a3476(%rip),%rax        # ffffffff802b1100 <m_palloc_lock>
ffffffff8000dc8a:	48 89 c7             	mov    %rax,%rdi
ffffffff8000dc8d:	e8 4b 42 ff ff       	call   ffffffff80001edd <spinlock_unlock>
ffffffff8000dc92:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000dc97:	eb 53                	jmp    ffffffff8000dcec <palloc+0xeb>
ffffffff8000dc99:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff8000dc9d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000dca1:	48 89 d7             	mov    %rdx,%rdi
ffffffff8000dca4:	48 89 c6             	mov    %rax,%rsi
ffffffff8000dca7:	e8 9a eb ff ff       	call   ffffffff8000c846 <buddy_tree_mark>
ffffffff8000dcac:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff8000dcb0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000dcb4:	48 89 d7             	mov    %rdx,%rdi
ffffffff8000dcb7:	48 89 c6             	mov    %rax,%rsi
ffffffff8000dcba:	e8 d7 f1 ff ff       	call   ffffffff8000ce96 <address_for_position>
ffffffff8000dcbf:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff8000dcc3:	48 8d 05 36 34 2a 00 	lea    0x2a3436(%rip),%rax        # ffffffff802b1100 <m_palloc_lock>
ffffffff8000dcca:	48 89 c7             	mov    %rax,%rdi
ffffffff8000dccd:	e8 0b 42 ff ff       	call   ffffffff80001edd <spinlock_unlock>
ffffffff8000dcd2:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff8000dcd6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8000dcda:	be 00 00 00 00       	mov    $0x0,%esi
ffffffff8000dcdf:	48 89 c7             	mov    %rax,%rdi
ffffffff8000dce2:	e8 61 08 00 00       	call   ffffffff8000e548 <memset>
ffffffff8000dce7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8000dceb:	90                   	nop
ffffffff8000dcec:	c9                   	leave  
ffffffff8000dced:	c3                   	ret    

ffffffff8000dcee <pfree>:
ffffffff8000dcee:	f3 0f 1e fa          	endbr64 
ffffffff8000dcf2:	55                   	push   %rbp
ffffffff8000dcf3:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000dcf6:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff8000dcfa:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff8000dcfe:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
ffffffff8000dd03:	0f 84 9b 00 00 00    	je     ffffffff8000dda4 <pfree+0xb6>
ffffffff8000dd09:	48 8d 05 f0 33 2a 00 	lea    0x2a33f0(%rip),%rax        # ffffffff802b1100 <m_palloc_lock>
ffffffff8000dd10:	48 89 c7             	mov    %rax,%rdi
ffffffff8000dd13:	e8 f6 40 ff ff       	call   ffffffff80001e0e <spinlock_lock>
ffffffff8000dd18:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000dd1c:	48 89 c7             	mov    %rax,%rdi
ffffffff8000dd1f:	e8 4f f2 ff ff       	call   ffffffff8000cf73 <position_for_address>
ffffffff8000dd24:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff8000dd28:	48 89 55 f8          	mov    %rdx,-0x8(%rbp)
ffffffff8000dd2c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff8000dd30:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000dd34:	48 89 d7             	mov    %rdx,%rdi
ffffffff8000dd37:	48 89 c6             	mov    %rax,%rsi
ffffffff8000dd3a:	e8 3e ee ff ff       	call   ffffffff8000cb7d <buddy_tree_valid>
ffffffff8000dd3f:	85 c0                	test   %eax,%eax
ffffffff8000dd41:	75 3d                	jne    ffffffff8000dd80 <pfree+0x92>
ffffffff8000dd43:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000dd48:	e8 94 8f ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff8000dd4d:	48 89 c6             	mov    %rax,%rsi
ffffffff8000dd50:	41 b8 42 03 00 00    	mov    $0x342,%r8d
ffffffff8000dd56:	48 8d 05 85 a6 02 00 	lea    0x2a685(%rip),%rax        # ffffffff800383e2 <g_stivale2_header+0x13e2>
ffffffff8000dd5d:	48 89 c1             	mov    %rax,%rcx
ffffffff8000dd60:	48 8d 05 30 fb 02 00 	lea    0x2fb30(%rip),%rax        # ffffffff8003d897 <__FUNCTION__.0.lto_priv.9>
ffffffff8000dd67:	48 89 c2             	mov    %rax,%rdx
ffffffff8000dd6a:	48 8d 05 4f ea 02 00 	lea    0x2ea4f(%rip),%rax        # ffffffff8003c7c0 <g_stivale2_header+0x57c0>
ffffffff8000dd71:	48 89 c7             	mov    %rax,%rdi
ffffffff8000dd74:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000dd79:	e8 c2 57 00 00       	call   ffffffff80013540 <printf_>
ffffffff8000dd7e:	0f 0b                	ud2    
ffffffff8000dd80:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff8000dd84:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000dd88:	48 89 d7             	mov    %rdx,%rdi
ffffffff8000dd8b:	48 89 c6             	mov    %rax,%rsi
ffffffff8000dd8e:	e8 27 eb ff ff       	call   ffffffff8000c8ba <buddy_tree_release>
ffffffff8000dd93:	48 8d 05 66 33 2a 00 	lea    0x2a3366(%rip),%rax        # ffffffff802b1100 <m_palloc_lock>
ffffffff8000dd9a:	48 89 c7             	mov    %rax,%rdi
ffffffff8000dd9d:	e8 3b 41 ff ff       	call   ffffffff80001edd <spinlock_unlock>
ffffffff8000dda2:	eb 01                	jmp    ffffffff8000dda5 <pfree+0xb7>
ffffffff8000dda4:	90                   	nop
ffffffff8000dda5:	c9                   	leave  
ffffffff8000dda6:	c3                   	ret    

ffffffff8000dda7 <trace_init>:
ffffffff8000dda7:	f3 0f 1e fa          	endbr64 
ffffffff8000ddab:	55                   	push   %rbp
ffffffff8000ddac:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000ddaf:	ba f9 03 00 00       	mov    $0x3f9,%edx
ffffffff8000ddb4:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000ddb9:	ee                   	out    %al,(%dx)
ffffffff8000ddba:	90                   	nop
ffffffff8000ddbb:	ba fb 03 00 00       	mov    $0x3fb,%edx
ffffffff8000ddc0:	b8 80 ff ff ff       	mov    $0xffffff80,%eax
ffffffff8000ddc5:	ee                   	out    %al,(%dx)
ffffffff8000ddc6:	90                   	nop
ffffffff8000ddc7:	ba f8 03 00 00       	mov    $0x3f8,%edx
ffffffff8000ddcc:	b8 03 00 00 00       	mov    $0x3,%eax
ffffffff8000ddd1:	ee                   	out    %al,(%dx)
ffffffff8000ddd2:	90                   	nop
ffffffff8000ddd3:	ba f9 03 00 00       	mov    $0x3f9,%edx
ffffffff8000ddd8:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000dddd:	ee                   	out    %al,(%dx)
ffffffff8000ddde:	90                   	nop
ffffffff8000dddf:	ba fb 03 00 00       	mov    $0x3fb,%edx
ffffffff8000dde4:	b8 03 00 00 00       	mov    $0x3,%eax
ffffffff8000dde9:	ee                   	out    %al,(%dx)
ffffffff8000ddea:	90                   	nop
ffffffff8000ddeb:	ba fa 03 00 00       	mov    $0x3fa,%edx
ffffffff8000ddf0:	b8 c7 ff ff ff       	mov    $0xffffffc7,%eax
ffffffff8000ddf5:	ee                   	out    %al,(%dx)
ffffffff8000ddf6:	90                   	nop
ffffffff8000ddf7:	ba fc 03 00 00       	mov    $0x3fc,%edx
ffffffff8000ddfc:	b8 0b 00 00 00       	mov    $0xb,%eax
ffffffff8000de01:	ee                   	out    %al,(%dx)
ffffffff8000de02:	90                   	nop
ffffffff8000de03:	ba fc 03 00 00       	mov    $0x3fc,%edx
ffffffff8000de08:	b8 0f 00 00 00       	mov    $0xf,%eax
ffffffff8000de0d:	ee                   	out    %al,(%dx)
ffffffff8000de0e:	90                   	nop
ffffffff8000de0f:	90                   	nop
ffffffff8000de10:	5d                   	pop    %rbp
ffffffff8000de11:	c3                   	ret    

ffffffff8000de12 <trace_hex>:
ffffffff8000de12:	f3 0f 1e fa          	endbr64 
ffffffff8000de16:	55                   	push   %rbp
ffffffff8000de17:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000de1a:	48 83 ec 40          	sub    $0x40,%rsp
ffffffff8000de1e:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
ffffffff8000de22:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
ffffffff8000de26:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8000de2a:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff8000de2e:	48 c7 45 d0 00 00 00 	movq   $0x0,-0x30(%rbp)
ffffffff8000de35:	00 
ffffffff8000de36:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
ffffffff8000de3d:	00 
ffffffff8000de3e:	c6 45 e0 00          	movb   $0x0,-0x20(%rbp)
ffffffff8000de42:	48 8d 05 ab a5 02 00 	lea    0x2a5ab(%rip),%rax        # ffffffff800383f4 <g_stivale2_header+0x13f4>
ffffffff8000de49:	48 89 c7             	mov    %rax,%rdi
ffffffff8000de4c:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000de51:	e8 ea 56 00 00       	call   ffffffff80013540 <printf_>
ffffffff8000de56:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
ffffffff8000de5d:	e9 b7 01 00 00       	jmp    ffffffff8000e019 <trace_hex+0x207>
ffffffff8000de62:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8000de65:	48 98                	cltq   
ffffffff8000de67:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff8000de6b:	48 01 d0             	add    %rdx,%rax
ffffffff8000de6e:	0f b6 00             	movzbl (%rax),%eax
ffffffff8000de71:	0f b6 c0             	movzbl %al,%eax
ffffffff8000de74:	89 c6                	mov    %eax,%esi
ffffffff8000de76:	48 8d 05 7c a5 02 00 	lea    0x2a57c(%rip),%rax        # ffffffff800383f9 <g_stivale2_header+0x13f9>
ffffffff8000de7d:	48 89 c7             	mov    %rax,%rdi
ffffffff8000de80:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000de85:	e8 b6 56 00 00       	call   ffffffff80013540 <printf_>
ffffffff8000de8a:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8000de8d:	48 98                	cltq   
ffffffff8000de8f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff8000de93:	48 01 d0             	add    %rdx,%rax
ffffffff8000de96:	0f b6 00             	movzbl (%rax),%eax
ffffffff8000de99:	3c 1f                	cmp    $0x1f,%al
ffffffff8000de9b:	76 3a                	jbe    ffffffff8000ded7 <trace_hex+0xc5>
ffffffff8000de9d:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8000dea0:	48 98                	cltq   
ffffffff8000dea2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff8000dea6:	48 01 d0             	add    %rdx,%rax
ffffffff8000dea9:	0f b6 00             	movzbl (%rax),%eax
ffffffff8000deac:	3c 7e                	cmp    $0x7e,%al
ffffffff8000deae:	77 27                	ja     ffffffff8000ded7 <trace_hex+0xc5>
ffffffff8000deb0:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8000deb3:	48 98                	cltq   
ffffffff8000deb5:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff8000deb9:	48 01 d0             	add    %rdx,%rax
ffffffff8000debc:	0f b6 08             	movzbl (%rax),%ecx
ffffffff8000debf:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8000dec2:	99                   	cltd   
ffffffff8000dec3:	c1 ea 1c             	shr    $0x1c,%edx
ffffffff8000dec6:	01 d0                	add    %edx,%eax
ffffffff8000dec8:	83 e0 0f             	and    $0xf,%eax
ffffffff8000decb:	29 d0                	sub    %edx,%eax
ffffffff8000decd:	89 ca                	mov    %ecx,%edx
ffffffff8000decf:	48 98                	cltq   
ffffffff8000ded1:	88 54 05 d0          	mov    %dl,-0x30(%rbp,%rax,1)
ffffffff8000ded5:	eb 15                	jmp    ffffffff8000deec <trace_hex+0xda>
ffffffff8000ded7:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8000deda:	99                   	cltd   
ffffffff8000dedb:	c1 ea 1c             	shr    $0x1c,%edx
ffffffff8000dede:	01 d0                	add    %edx,%eax
ffffffff8000dee0:	83 e0 0f             	and    $0xf,%eax
ffffffff8000dee3:	29 d0                	sub    %edx,%eax
ffffffff8000dee5:	48 98                	cltq   
ffffffff8000dee7:	c6 44 05 d0 2e       	movb   $0x2e,-0x30(%rbp,%rax,1)
ffffffff8000deec:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8000deef:	83 c0 01             	add    $0x1,%eax
ffffffff8000def2:	83 e0 07             	and    $0x7,%eax
ffffffff8000def5:	85 c0                	test   %eax,%eax
ffffffff8000def7:	74 12                	je     ffffffff8000df0b <trace_hex+0xf9>
ffffffff8000def9:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8000defc:	83 c0 01             	add    $0x1,%eax
ffffffff8000deff:	48 98                	cltq   
ffffffff8000df01:	48 39 45 c0          	cmp    %rax,-0x40(%rbp)
ffffffff8000df05:	0f 85 0a 01 00 00    	jne    ffffffff8000e015 <trace_hex+0x203>
ffffffff8000df0b:	48 8d 05 f7 a4 02 00 	lea    0x2a4f7(%rip),%rax        # ffffffff80038409 <g_stivale2_header+0x1409>
ffffffff8000df12:	48 89 c7             	mov    %rax,%rdi
ffffffff8000df15:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000df1a:	e8 21 56 00 00       	call   ffffffff80013540 <printf_>
ffffffff8000df1f:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8000df22:	83 c0 01             	add    $0x1,%eax
ffffffff8000df25:	83 e0 0f             	and    $0xf,%eax
ffffffff8000df28:	85 c0                	test   %eax,%eax
ffffffff8000df2a:	75 46                	jne    ffffffff8000df72 <trace_hex+0x160>
ffffffff8000df2c:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
ffffffff8000df30:	48 89 c6             	mov    %rax,%rsi
ffffffff8000df33:	48 8d 05 c5 a4 02 00 	lea    0x2a4c5(%rip),%rax        # ffffffff800383ff <g_stivale2_header+0x13ff>
ffffffff8000df3a:	48 89 c7             	mov    %rax,%rdi
ffffffff8000df3d:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000df42:	e8 f9 55 00 00       	call   ffffffff80013540 <printf_>
ffffffff8000df47:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8000df4a:	83 c0 01             	add    $0x1,%eax
ffffffff8000df4d:	48 98                	cltq   
ffffffff8000df4f:	48 39 45 c0          	cmp    %rax,-0x40(%rbp)
ffffffff8000df53:	0f 84 bc 00 00 00    	je     ffffffff8000e015 <trace_hex+0x203>
ffffffff8000df59:	48 8d 05 94 a4 02 00 	lea    0x2a494(%rip),%rax        # ffffffff800383f4 <g_stivale2_header+0x13f4>
ffffffff8000df60:	48 89 c7             	mov    %rax,%rdi
ffffffff8000df63:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000df68:	e8 d3 55 00 00       	call   ffffffff80013540 <printf_>
ffffffff8000df6d:	e9 a3 00 00 00       	jmp    ffffffff8000e015 <trace_hex+0x203>
ffffffff8000df72:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8000df75:	83 c0 01             	add    $0x1,%eax
ffffffff8000df78:	48 98                	cltq   
ffffffff8000df7a:	48 39 45 c0          	cmp    %rax,-0x40(%rbp)
ffffffff8000df7e:	0f 85 91 00 00 00    	jne    ffffffff8000e015 <trace_hex+0x203>
ffffffff8000df84:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8000df87:	83 c0 01             	add    $0x1,%eax
ffffffff8000df8a:	99                   	cltd   
ffffffff8000df8b:	c1 ea 1c             	shr    $0x1c,%edx
ffffffff8000df8e:	01 d0                	add    %edx,%eax
ffffffff8000df90:	83 e0 0f             	and    $0xf,%eax
ffffffff8000df93:	29 d0                	sub    %edx,%eax
ffffffff8000df95:	48 98                	cltq   
ffffffff8000df97:	c6 44 05 d0 00       	movb   $0x0,-0x30(%rbp,%rax,1)
ffffffff8000df9c:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8000df9f:	83 c0 01             	add    $0x1,%eax
ffffffff8000dfa2:	99                   	cltd   
ffffffff8000dfa3:	c1 ea 1c             	shr    $0x1c,%edx
ffffffff8000dfa6:	01 d0                	add    %edx,%eax
ffffffff8000dfa8:	83 e0 0f             	and    $0xf,%eax
ffffffff8000dfab:	29 d0                	sub    %edx,%eax
ffffffff8000dfad:	83 f8 08             	cmp    $0x8,%eax
ffffffff8000dfb0:	7f 14                	jg     ffffffff8000dfc6 <trace_hex+0x1b4>
ffffffff8000dfb2:	48 8d 05 50 a4 02 00 	lea    0x2a450(%rip),%rax        # ffffffff80038409 <g_stivale2_header+0x1409>
ffffffff8000dfb9:	48 89 c7             	mov    %rax,%rdi
ffffffff8000dfbc:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000dfc1:	e8 7a 55 00 00       	call   ffffffff80013540 <printf_>
ffffffff8000dfc6:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8000dfc9:	83 c0 01             	add    $0x1,%eax
ffffffff8000dfcc:	99                   	cltd   
ffffffff8000dfcd:	c1 ea 1c             	shr    $0x1c,%edx
ffffffff8000dfd0:	01 d0                	add    %edx,%eax
ffffffff8000dfd2:	83 e0 0f             	and    $0xf,%eax
ffffffff8000dfd5:	29 d0                	sub    %edx,%eax
ffffffff8000dfd7:	89 45 f8             	mov    %eax,-0x8(%rbp)
ffffffff8000dfda:	eb 18                	jmp    ffffffff8000dff4 <trace_hex+0x1e2>
ffffffff8000dfdc:	48 8d 05 24 a4 02 00 	lea    0x2a424(%rip),%rax        # ffffffff80038407 <g_stivale2_header+0x1407>
ffffffff8000dfe3:	48 89 c7             	mov    %rax,%rdi
ffffffff8000dfe6:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000dfeb:	e8 50 55 00 00       	call   ffffffff80013540 <printf_>
ffffffff8000dff0:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)
ffffffff8000dff4:	83 7d f8 0f          	cmpl   $0xf,-0x8(%rbp)
ffffffff8000dff8:	7e e2                	jle    ffffffff8000dfdc <trace_hex+0x1ca>
ffffffff8000dffa:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
ffffffff8000dffe:	48 89 c6             	mov    %rax,%rsi
ffffffff8000e001:	48 8d 05 f7 a3 02 00 	lea    0x2a3f7(%rip),%rax        # ffffffff800383ff <g_stivale2_header+0x13ff>
ffffffff8000e008:	48 89 c7             	mov    %rax,%rdi
ffffffff8000e00b:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000e010:	e8 2b 55 00 00       	call   ffffffff80013540 <printf_>
ffffffff8000e015:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
ffffffff8000e019:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8000e01c:	48 98                	cltq   
ffffffff8000e01e:	48 39 45 c0          	cmp    %rax,-0x40(%rbp)
ffffffff8000e022:	0f 87 3a fe ff ff    	ja     ffffffff8000de62 <trace_hex+0x50>
ffffffff8000e028:	90                   	nop
ffffffff8000e029:	90                   	nop
ffffffff8000e02a:	c9                   	leave  
ffffffff8000e02b:	c3                   	ret    

ffffffff8000e02c <_putchar>:
ffffffff8000e02c:	f3 0f 1e fa          	endbr64 
ffffffff8000e030:	55                   	push   %rbp
ffffffff8000e031:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000e034:	48 83 ec 18          	sub    $0x18,%rsp
ffffffff8000e038:	89 f8                	mov    %edi,%eax
ffffffff8000e03a:	88 45 ec             	mov    %al,-0x14(%rbp)
ffffffff8000e03d:	90                   	nop
ffffffff8000e03e:	b8 fd 03 00 00       	mov    $0x3fd,%eax
ffffffff8000e043:	89 c2                	mov    %eax,%edx
ffffffff8000e045:	ec                   	in     (%dx),%al
ffffffff8000e046:	88 45 ff             	mov    %al,-0x1(%rbp)
ffffffff8000e049:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
ffffffff8000e04d:	0f b6 c0             	movzbl %al,%eax
ffffffff8000e050:	83 e0 20             	and    $0x20,%eax
ffffffff8000e053:	85 c0                	test   %eax,%eax
ffffffff8000e055:	74 e7                	je     ffffffff8000e03e <_putchar+0x12>
ffffffff8000e057:	0f b6 45 ec          	movzbl -0x14(%rbp),%eax
ffffffff8000e05b:	0f b6 c0             	movzbl %al,%eax
ffffffff8000e05e:	88 45 fe             	mov    %al,-0x2(%rbp)
ffffffff8000e061:	ba f8 03 00 00       	mov    $0x3f8,%edx
ffffffff8000e066:	0f b6 45 fe          	movzbl -0x2(%rbp),%eax
ffffffff8000e06a:	ee                   	out    %al,(%dx)
ffffffff8000e06b:	90                   	nop
ffffffff8000e06c:	90                   	nop
ffffffff8000e06d:	c9                   	leave  
ffffffff8000e06e:	c3                   	ret    

ffffffff8000e06f <memcpy>:
ffffffff8000e06f:	f3 0f 1e fa          	endbr64 
ffffffff8000e073:	55                   	push   %rbp
ffffffff8000e074:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000e077:	48 81 ec a8 01 00 00 	sub    $0x1a8,%rsp
ffffffff8000e07e:	48 89 bd 68 fe ff ff 	mov    %rdi,-0x198(%rbp)
ffffffff8000e085:	48 89 b5 60 fe ff ff 	mov    %rsi,-0x1a0(%rbp)
ffffffff8000e08c:	48 89 95 58 fe ff ff 	mov    %rdx,-0x1a8(%rbp)
ffffffff8000e093:	48 8b 85 68 fe ff ff 	mov    -0x198(%rbp),%rax
ffffffff8000e09a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8000e09e:	48 8b 85 60 fe ff ff 	mov    -0x1a0(%rbp),%rax
ffffffff8000e0a5:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff8000e0a9:	e9 f4 01 00 00       	jmp    ffffffff8000e2a2 <memcpy+0x233>
ffffffff8000e0ae:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8000e0b2:	48 8b 00             	mov    (%rax),%rax
ffffffff8000e0b5:	48 89 85 70 fe ff ff 	mov    %rax,-0x190(%rbp)
ffffffff8000e0bc:	48 83 45 f0 08       	addq   $0x8,-0x10(%rbp)
ffffffff8000e0c1:	48 8b 85 70 fe ff ff 	mov    -0x190(%rbp),%rax
ffffffff8000e0c8:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
ffffffff8000e0cc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8000e0d0:	48 8b 00             	mov    (%rax),%rax
ffffffff8000e0d3:	48 89 85 78 fe ff ff 	mov    %rax,-0x188(%rbp)
ffffffff8000e0da:	48 83 45 f0 08       	addq   $0x8,-0x10(%rbp)
ffffffff8000e0df:	48 8b 85 78 fe ff ff 	mov    -0x188(%rbp),%rax
ffffffff8000e0e6:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
ffffffff8000e0ea:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8000e0ee:	48 8b 00             	mov    (%rax),%rax
ffffffff8000e0f1:	48 89 85 80 fe ff ff 	mov    %rax,-0x180(%rbp)
ffffffff8000e0f8:	48 83 45 f0 08       	addq   $0x8,-0x10(%rbp)
ffffffff8000e0fd:	48 8b 85 80 fe ff ff 	mov    -0x180(%rbp),%rax
ffffffff8000e104:	48 89 45 98          	mov    %rax,-0x68(%rbp)
ffffffff8000e108:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8000e10c:	48 8b 00             	mov    (%rax),%rax
ffffffff8000e10f:	48 89 85 88 fe ff ff 	mov    %rax,-0x178(%rbp)
ffffffff8000e116:	48 83 45 f0 08       	addq   $0x8,-0x10(%rbp)
ffffffff8000e11b:	48 8b 85 88 fe ff ff 	mov    -0x178(%rbp),%rax
ffffffff8000e122:	48 89 45 90          	mov    %rax,-0x70(%rbp)
ffffffff8000e126:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8000e12a:	48 8b 00             	mov    (%rax),%rax
ffffffff8000e12d:	48 89 85 90 fe ff ff 	mov    %rax,-0x170(%rbp)
ffffffff8000e134:	48 83 45 f0 08       	addq   $0x8,-0x10(%rbp)
ffffffff8000e139:	48 8b 85 90 fe ff ff 	mov    -0x170(%rbp),%rax
ffffffff8000e140:	48 89 45 88          	mov    %rax,-0x78(%rbp)
ffffffff8000e144:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8000e148:	48 8b 00             	mov    (%rax),%rax
ffffffff8000e14b:	48 89 85 98 fe ff ff 	mov    %rax,-0x168(%rbp)
ffffffff8000e152:	48 83 45 f0 08       	addq   $0x8,-0x10(%rbp)
ffffffff8000e157:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
ffffffff8000e15e:	48 89 45 80          	mov    %rax,-0x80(%rbp)
ffffffff8000e162:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8000e166:	48 8b 00             	mov    (%rax),%rax
ffffffff8000e169:	48 89 85 a0 fe ff ff 	mov    %rax,-0x160(%rbp)
ffffffff8000e170:	48 83 45 f0 08       	addq   $0x8,-0x10(%rbp)
ffffffff8000e175:	48 8b 85 a0 fe ff ff 	mov    -0x160(%rbp),%rax
ffffffff8000e17c:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
ffffffff8000e183:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8000e187:	48 8b 00             	mov    (%rax),%rax
ffffffff8000e18a:	48 89 85 a8 fe ff ff 	mov    %rax,-0x158(%rbp)
ffffffff8000e191:	48 83 45 f0 08       	addq   $0x8,-0x10(%rbp)
ffffffff8000e196:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
ffffffff8000e19d:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
ffffffff8000e1a4:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff8000e1a8:	48 89 85 b0 fe ff ff 	mov    %rax,-0x150(%rbp)
ffffffff8000e1af:	48 8b 95 b0 fe ff ff 	mov    -0x150(%rbp),%rdx
ffffffff8000e1b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000e1ba:	48 89 10             	mov    %rdx,(%rax)
ffffffff8000e1bd:	48 83 45 f8 08       	addq   $0x8,-0x8(%rbp)
ffffffff8000e1c2:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff8000e1c6:	48 89 85 b8 fe ff ff 	mov    %rax,-0x148(%rbp)
ffffffff8000e1cd:	48 8b 95 b8 fe ff ff 	mov    -0x148(%rbp),%rdx
ffffffff8000e1d4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000e1d8:	48 89 10             	mov    %rdx,(%rax)
ffffffff8000e1db:	48 83 45 f8 08       	addq   $0x8,-0x8(%rbp)
ffffffff8000e1e0:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff8000e1e4:	48 89 85 c0 fe ff ff 	mov    %rax,-0x140(%rbp)
ffffffff8000e1eb:	48 8b 95 c0 fe ff ff 	mov    -0x140(%rbp),%rdx
ffffffff8000e1f2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000e1f6:	48 89 10             	mov    %rdx,(%rax)
ffffffff8000e1f9:	48 83 45 f8 08       	addq   $0x8,-0x8(%rbp)
ffffffff8000e1fe:	48 8b 45 90          	mov    -0x70(%rbp),%rax
ffffffff8000e202:	48 89 85 c8 fe ff ff 	mov    %rax,-0x138(%rbp)
ffffffff8000e209:	48 8b 95 c8 fe ff ff 	mov    -0x138(%rbp),%rdx
ffffffff8000e210:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000e214:	48 89 10             	mov    %rdx,(%rax)
ffffffff8000e217:	48 83 45 f8 08       	addq   $0x8,-0x8(%rbp)
ffffffff8000e21c:	48 8b 45 88          	mov    -0x78(%rbp),%rax
ffffffff8000e220:	48 89 85 d0 fe ff ff 	mov    %rax,-0x130(%rbp)
ffffffff8000e227:	48 8b 95 d0 fe ff ff 	mov    -0x130(%rbp),%rdx
ffffffff8000e22e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000e232:	48 89 10             	mov    %rdx,(%rax)
ffffffff8000e235:	48 83 45 f8 08       	addq   $0x8,-0x8(%rbp)
ffffffff8000e23a:	48 8b 45 80          	mov    -0x80(%rbp),%rax
ffffffff8000e23e:	48 89 85 d8 fe ff ff 	mov    %rax,-0x128(%rbp)
ffffffff8000e245:	48 8b 95 d8 fe ff ff 	mov    -0x128(%rbp),%rdx
ffffffff8000e24c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000e250:	48 89 10             	mov    %rdx,(%rax)
ffffffff8000e253:	48 83 45 f8 08       	addq   $0x8,-0x8(%rbp)
ffffffff8000e258:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
ffffffff8000e25f:	48 89 85 e0 fe ff ff 	mov    %rax,-0x120(%rbp)
ffffffff8000e266:	48 8b 95 e0 fe ff ff 	mov    -0x120(%rbp),%rdx
ffffffff8000e26d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000e271:	48 89 10             	mov    %rdx,(%rax)
ffffffff8000e274:	48 83 45 f8 08       	addq   $0x8,-0x8(%rbp)
ffffffff8000e279:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
ffffffff8000e280:	48 89 85 e8 fe ff ff 	mov    %rax,-0x118(%rbp)
ffffffff8000e287:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
ffffffff8000e28e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000e292:	48 89 10             	mov    %rdx,(%rax)
ffffffff8000e295:	48 83 45 f8 08       	addq   $0x8,-0x8(%rbp)
ffffffff8000e29a:	48 83 ad 58 fe ff ff 	subq   $0x40,-0x1a8(%rbp)
ffffffff8000e2a1:	40 
ffffffff8000e2a2:	48 83 bd 58 fe ff ff 	cmpq   $0x3f,-0x1a8(%rbp)
ffffffff8000e2a9:	3f 
ffffffff8000e2aa:	0f 87 fe fd ff ff    	ja     ffffffff8000e0ae <memcpy+0x3f>
ffffffff8000e2b0:	48 83 bd 58 fe ff ff 	cmpq   $0x1f,-0x1a8(%rbp)
ffffffff8000e2b7:	1f 
ffffffff8000e2b8:	0f 86 f8 00 00 00    	jbe    ffffffff8000e3b6 <memcpy+0x347>
ffffffff8000e2be:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8000e2c2:	48 8b 00             	mov    (%rax),%rax
ffffffff8000e2c5:	48 89 85 f0 fe ff ff 	mov    %rax,-0x110(%rbp)
ffffffff8000e2cc:	48 83 45 f0 08       	addq   $0x8,-0x10(%rbp)
ffffffff8000e2d1:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
ffffffff8000e2d8:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff8000e2dc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8000e2e0:	48 8b 00             	mov    (%rax),%rax
ffffffff8000e2e3:	48 89 85 f8 fe ff ff 	mov    %rax,-0x108(%rbp)
ffffffff8000e2ea:	48 83 45 f0 08       	addq   $0x8,-0x10(%rbp)
ffffffff8000e2ef:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
ffffffff8000e2f6:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff8000e2fa:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8000e2fe:	48 8b 00             	mov    (%rax),%rax
ffffffff8000e301:	48 89 85 00 ff ff ff 	mov    %rax,-0x100(%rbp)
ffffffff8000e308:	48 83 45 f0 08       	addq   $0x8,-0x10(%rbp)
ffffffff8000e30d:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
ffffffff8000e314:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
ffffffff8000e318:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8000e31c:	48 8b 00             	mov    (%rax),%rax
ffffffff8000e31f:	48 89 85 08 ff ff ff 	mov    %rax,-0xf8(%rbp)
ffffffff8000e326:	48 83 45 f0 08       	addq   $0x8,-0x10(%rbp)
ffffffff8000e32b:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
ffffffff8000e332:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
ffffffff8000e336:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000e33a:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
ffffffff8000e341:	48 8b 95 10 ff ff ff 	mov    -0xf0(%rbp),%rdx
ffffffff8000e348:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000e34c:	48 89 10             	mov    %rdx,(%rax)
ffffffff8000e34f:	48 83 45 f8 08       	addq   $0x8,-0x8(%rbp)
ffffffff8000e354:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8000e358:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)
ffffffff8000e35f:	48 8b 95 18 ff ff ff 	mov    -0xe8(%rbp),%rdx
ffffffff8000e366:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000e36a:	48 89 10             	mov    %rdx,(%rax)
ffffffff8000e36d:	48 83 45 f8 08       	addq   $0x8,-0x8(%rbp)
ffffffff8000e372:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8000e376:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
ffffffff8000e37d:	48 8b 95 20 ff ff ff 	mov    -0xe0(%rbp),%rdx
ffffffff8000e384:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000e388:	48 89 10             	mov    %rdx,(%rax)
ffffffff8000e38b:	48 83 45 f8 08       	addq   $0x8,-0x8(%rbp)
ffffffff8000e390:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8000e394:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
ffffffff8000e39b:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
ffffffff8000e3a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000e3a6:	48 89 10             	mov    %rdx,(%rax)
ffffffff8000e3a9:	48 83 45 f8 08       	addq   $0x8,-0x8(%rbp)
ffffffff8000e3ae:	48 83 ad 58 fe ff ff 	subq   $0x20,-0x1a8(%rbp)
ffffffff8000e3b5:	20 
ffffffff8000e3b6:	48 83 bd 58 fe ff ff 	cmpq   $0xf,-0x1a8(%rbp)
ffffffff8000e3bd:	0f 
ffffffff8000e3be:	0f 86 80 00 00 00    	jbe    ffffffff8000e444 <memcpy+0x3d5>
ffffffff8000e3c4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8000e3c8:	48 8b 00             	mov    (%rax),%rax
ffffffff8000e3cb:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)
ffffffff8000e3d2:	48 83 45 f0 08       	addq   $0x8,-0x10(%rbp)
ffffffff8000e3d7:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
ffffffff8000e3de:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
ffffffff8000e3e2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8000e3e6:	48 8b 00             	mov    (%rax),%rax
ffffffff8000e3e9:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
ffffffff8000e3f0:	48 83 45 f0 08       	addq   $0x8,-0x10(%rbp)
ffffffff8000e3f5:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
ffffffff8000e3fc:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
ffffffff8000e400:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8000e404:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
ffffffff8000e40b:	48 8b 95 40 ff ff ff 	mov    -0xc0(%rbp),%rdx
ffffffff8000e412:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000e416:	48 89 10             	mov    %rdx,(%rax)
ffffffff8000e419:	48 83 45 f8 08       	addq   $0x8,-0x8(%rbp)
ffffffff8000e41e:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8000e422:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
ffffffff8000e429:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
ffffffff8000e430:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000e434:	48 89 10             	mov    %rdx,(%rax)
ffffffff8000e437:	48 83 45 f8 08       	addq   $0x8,-0x8(%rbp)
ffffffff8000e43c:	48 83 ad 58 fe ff ff 	subq   $0x10,-0x1a8(%rbp)
ffffffff8000e443:	10 
ffffffff8000e444:	48 83 bd 58 fe ff ff 	cmpq   $0x7,-0x1a8(%rbp)
ffffffff8000e44b:	07 
ffffffff8000e44c:	76 44                	jbe    ffffffff8000e492 <memcpy+0x423>
ffffffff8000e44e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8000e452:	48 8b 00             	mov    (%rax),%rax
ffffffff8000e455:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
ffffffff8000e45c:	48 83 45 f0 08       	addq   $0x8,-0x10(%rbp)
ffffffff8000e461:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
ffffffff8000e468:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
ffffffff8000e46c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff8000e470:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
ffffffff8000e477:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
ffffffff8000e47e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000e482:	48 89 10             	mov    %rdx,(%rax)
ffffffff8000e485:	48 83 45 f8 08       	addq   $0x8,-0x8(%rbp)
ffffffff8000e48a:	48 83 ad 58 fe ff ff 	subq   $0x8,-0x1a8(%rbp)
ffffffff8000e491:	08 
ffffffff8000e492:	48 83 bd 58 fe ff ff 	cmpq   $0x3,-0x1a8(%rbp)
ffffffff8000e499:	03 
ffffffff8000e49a:	76 3c                	jbe    ffffffff8000e4d8 <memcpy+0x469>
ffffffff8000e49c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8000e4a0:	8b 00                	mov    (%rax),%eax
ffffffff8000e4a2:	89 85 64 ff ff ff    	mov    %eax,-0x9c(%rbp)
ffffffff8000e4a8:	48 83 45 f0 04       	addq   $0x4,-0x10(%rbp)
ffffffff8000e4ad:	8b 85 64 ff ff ff    	mov    -0x9c(%rbp),%eax
ffffffff8000e4b3:	89 45 b4             	mov    %eax,-0x4c(%rbp)
ffffffff8000e4b6:	8b 45 b4             	mov    -0x4c(%rbp),%eax
ffffffff8000e4b9:	89 85 68 ff ff ff    	mov    %eax,-0x98(%rbp)
ffffffff8000e4bf:	8b 95 68 ff ff ff    	mov    -0x98(%rbp),%edx
ffffffff8000e4c5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000e4c9:	89 10                	mov    %edx,(%rax)
ffffffff8000e4cb:	48 83 45 f8 04       	addq   $0x4,-0x8(%rbp)
ffffffff8000e4d0:	48 83 ad 58 fe ff ff 	subq   $0x4,-0x1a8(%rbp)
ffffffff8000e4d7:	04 
ffffffff8000e4d8:	48 83 bd 58 fe ff ff 	cmpq   $0x1,-0x1a8(%rbp)
ffffffff8000e4df:	01 
ffffffff8000e4e0:	76 44                	jbe    ffffffff8000e526 <memcpy+0x4b7>
ffffffff8000e4e2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8000e4e6:	0f b7 00             	movzwl (%rax),%eax
ffffffff8000e4e9:	66 89 85 6c ff ff ff 	mov    %ax,-0x94(%rbp)
ffffffff8000e4f0:	48 83 45 f0 02       	addq   $0x2,-0x10(%rbp)
ffffffff8000e4f5:	0f b7 85 6c ff ff ff 	movzwl -0x94(%rbp),%eax
ffffffff8000e4fc:	66 89 45 b2          	mov    %ax,-0x4e(%rbp)
ffffffff8000e500:	0f b7 45 b2          	movzwl -0x4e(%rbp),%eax
ffffffff8000e504:	66 89 85 6e ff ff ff 	mov    %ax,-0x92(%rbp)
ffffffff8000e50b:	0f b7 95 6e ff ff ff 	movzwl -0x92(%rbp),%edx
ffffffff8000e512:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000e516:	66 89 10             	mov    %dx,(%rax)
ffffffff8000e519:	48 83 45 f8 02       	addq   $0x2,-0x8(%rbp)
ffffffff8000e51e:	48 83 ad 58 fe ff ff 	subq   $0x2,-0x1a8(%rbp)
ffffffff8000e525:	02 
ffffffff8000e526:	48 83 bd 58 fe ff ff 	cmpq   $0x0,-0x1a8(%rbp)
ffffffff8000e52d:	00 
ffffffff8000e52e:	74 0d                	je     ffffffff8000e53d <memcpy+0x4ce>
ffffffff8000e530:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8000e534:	0f b6 00             	movzbl (%rax),%eax
ffffffff8000e537:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff8000e53b:	88 02                	mov    %al,(%rdx)
ffffffff8000e53d:	48 8b 85 68 fe ff ff 	mov    -0x198(%rbp),%rax
ffffffff8000e544:	90                   	nop
ffffffff8000e545:	90                   	nop
ffffffff8000e546:	c9                   	leave  
ffffffff8000e547:	c3                   	ret    

ffffffff8000e548 <memset>:
ffffffff8000e548:	f3 0f 1e fa          	endbr64 
ffffffff8000e54c:	55                   	push   %rbp
ffffffff8000e54d:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000e550:	48 81 ec b8 00 00 00 	sub    $0xb8,%rsp
ffffffff8000e557:	48 89 bd 58 ff ff ff 	mov    %rdi,-0xa8(%rbp)
ffffffff8000e55e:	89 b5 54 ff ff ff    	mov    %esi,-0xac(%rbp)
ffffffff8000e564:	48 89 95 48 ff ff ff 	mov    %rdx,-0xb8(%rbp)
ffffffff8000e56b:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
ffffffff8000e572:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8000e576:	8b 85 54 ff ff ff    	mov    -0xac(%rbp),%eax
ffffffff8000e57c:	88 45 f7             	mov    %al,-0x9(%rbp)
ffffffff8000e57f:	eb 1a                	jmp    ffffffff8000e59b <memset+0x53>
ffffffff8000e581:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000e585:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffff8000e589:	48 89 55 f8          	mov    %rdx,-0x8(%rbp)
ffffffff8000e58d:	0f b6 55 f7          	movzbl -0x9(%rbp),%edx
ffffffff8000e591:	88 10                	mov    %dl,(%rax)
ffffffff8000e593:	48 83 ad 48 ff ff ff 	subq   $0x1,-0xb8(%rbp)
ffffffff8000e59a:	01 
ffffffff8000e59b:	48 83 bd 48 ff ff ff 	cmpq   $0x0,-0xb8(%rbp)
ffffffff8000e5a2:	00 
ffffffff8000e5a3:	74 0c                	je     ffffffff8000e5b1 <memset+0x69>
ffffffff8000e5a5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000e5a9:	83 e0 07             	and    $0x7,%eax
ffffffff8000e5ac:	48 85 c0             	test   %rax,%rax
ffffffff8000e5af:	75 d0                	jne    ffffffff8000e581 <memset+0x39>
ffffffff8000e5b1:	0f b6 55 f7          	movzbl -0x9(%rbp),%edx
ffffffff8000e5b5:	0f b6 45 f7          	movzbl -0x9(%rbp),%eax
ffffffff8000e5b9:	48 c1 e0 08          	shl    $0x8,%rax
ffffffff8000e5bd:	48 09 c2             	or     %rax,%rdx
ffffffff8000e5c0:	0f b6 45 f7          	movzbl -0x9(%rbp),%eax
ffffffff8000e5c4:	48 c1 e0 10          	shl    $0x10,%rax
ffffffff8000e5c8:	48 09 c2             	or     %rax,%rdx
ffffffff8000e5cb:	0f b6 45 f7          	movzbl -0x9(%rbp),%eax
ffffffff8000e5cf:	48 c1 e0 18          	shl    $0x18,%rax
ffffffff8000e5d3:	48 09 c2             	or     %rax,%rdx
ffffffff8000e5d6:	0f b6 45 f7          	movzbl -0x9(%rbp),%eax
ffffffff8000e5da:	48 c1 e0 20          	shl    $0x20,%rax
ffffffff8000e5de:	48 09 c2             	or     %rax,%rdx
ffffffff8000e5e1:	0f b6 45 f7          	movzbl -0x9(%rbp),%eax
ffffffff8000e5e5:	48 c1 e0 28          	shl    $0x28,%rax
ffffffff8000e5e9:	48 09 c2             	or     %rax,%rdx
ffffffff8000e5ec:	0f b6 45 f7          	movzbl -0x9(%rbp),%eax
ffffffff8000e5f0:	48 c1 e0 30          	shl    $0x30,%rax
ffffffff8000e5f4:	48 09 c2             	or     %rax,%rdx
ffffffff8000e5f7:	0f b6 45 f7          	movzbl -0x9(%rbp),%eax
ffffffff8000e5fb:	48 c1 e0 38          	shl    $0x38,%rax
ffffffff8000e5ff:	48 09 d0             	or     %rdx,%rax
ffffffff8000e602:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff8000e606:	0f b6 55 f7          	movzbl -0x9(%rbp),%edx
ffffffff8000e60a:	0f b6 45 f7          	movzbl -0x9(%rbp),%eax
ffffffff8000e60e:	c1 e0 08             	shl    $0x8,%eax
ffffffff8000e611:	09 c2                	or     %eax,%edx
ffffffff8000e613:	0f b6 45 f7          	movzbl -0x9(%rbp),%eax
ffffffff8000e617:	c1 e0 10             	shl    $0x10,%eax
ffffffff8000e61a:	09 c2                	or     %eax,%edx
ffffffff8000e61c:	0f b6 45 f7          	movzbl -0x9(%rbp),%eax
ffffffff8000e620:	c1 e0 18             	shl    $0x18,%eax
ffffffff8000e623:	09 d0                	or     %edx,%eax
ffffffff8000e625:	89 45 e4             	mov    %eax,-0x1c(%rbp)
ffffffff8000e628:	0f b6 55 f7          	movzbl -0x9(%rbp),%edx
ffffffff8000e62c:	0f b6 45 f7          	movzbl -0x9(%rbp),%eax
ffffffff8000e630:	c1 e0 08             	shl    $0x8,%eax
ffffffff8000e633:	09 d0                	or     %edx,%eax
ffffffff8000e635:	66 89 45 e2          	mov    %ax,-0x1e(%rbp)
ffffffff8000e639:	e9 e0 00 00 00       	jmp    ffffffff8000e71e <memset+0x1d6>
ffffffff8000e63e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000e642:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
ffffffff8000e649:	48 8b 95 60 ff ff ff 	mov    -0xa0(%rbp),%rdx
ffffffff8000e650:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000e654:	48 89 10             	mov    %rdx,(%rax)
ffffffff8000e657:	48 83 45 f8 08       	addq   $0x8,-0x8(%rbp)
ffffffff8000e65c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000e660:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
ffffffff8000e667:	48 8b 95 68 ff ff ff 	mov    -0x98(%rbp),%rdx
ffffffff8000e66e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000e672:	48 89 10             	mov    %rdx,(%rax)
ffffffff8000e675:	48 83 45 f8 08       	addq   $0x8,-0x8(%rbp)
ffffffff8000e67a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000e67e:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
ffffffff8000e685:	48 8b 95 70 ff ff ff 	mov    -0x90(%rbp),%rdx
ffffffff8000e68c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000e690:	48 89 10             	mov    %rdx,(%rax)
ffffffff8000e693:	48 83 45 f8 08       	addq   $0x8,-0x8(%rbp)
ffffffff8000e698:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000e69c:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
ffffffff8000e6a3:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
ffffffff8000e6aa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000e6ae:	48 89 10             	mov    %rdx,(%rax)
ffffffff8000e6b1:	48 83 45 f8 08       	addq   $0x8,-0x8(%rbp)
ffffffff8000e6b6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000e6ba:	48 89 45 80          	mov    %rax,-0x80(%rbp)
ffffffff8000e6be:	48 8b 55 80          	mov    -0x80(%rbp),%rdx
ffffffff8000e6c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000e6c6:	48 89 10             	mov    %rdx,(%rax)
ffffffff8000e6c9:	48 83 45 f8 08       	addq   $0x8,-0x8(%rbp)
ffffffff8000e6ce:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000e6d2:	48 89 45 88          	mov    %rax,-0x78(%rbp)
ffffffff8000e6d6:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
ffffffff8000e6da:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000e6de:	48 89 10             	mov    %rdx,(%rax)
ffffffff8000e6e1:	48 83 45 f8 08       	addq   $0x8,-0x8(%rbp)
ffffffff8000e6e6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000e6ea:	48 89 45 90          	mov    %rax,-0x70(%rbp)
ffffffff8000e6ee:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
ffffffff8000e6f2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000e6f6:	48 89 10             	mov    %rdx,(%rax)
ffffffff8000e6f9:	48 83 45 f8 08       	addq   $0x8,-0x8(%rbp)
ffffffff8000e6fe:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000e702:	48 89 45 98          	mov    %rax,-0x68(%rbp)
ffffffff8000e706:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
ffffffff8000e70a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000e70e:	48 89 10             	mov    %rdx,(%rax)
ffffffff8000e711:	48 83 45 f8 08       	addq   $0x8,-0x8(%rbp)
ffffffff8000e716:	48 83 ad 48 ff ff ff 	subq   $0x40,-0xb8(%rbp)
ffffffff8000e71d:	40 
ffffffff8000e71e:	48 83 bd 48 ff ff ff 	cmpq   $0x3f,-0xb8(%rbp)
ffffffff8000e725:	3f 
ffffffff8000e726:	0f 87 12 ff ff ff    	ja     ffffffff8000e63e <memset+0xf6>
ffffffff8000e72c:	48 83 bd 48 ff ff ff 	cmpq   $0x1f,-0xb8(%rbp)
ffffffff8000e733:	1f 
ffffffff8000e734:	76 68                	jbe    ffffffff8000e79e <memset+0x256>
ffffffff8000e736:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000e73a:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
ffffffff8000e73e:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
ffffffff8000e742:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000e746:	48 89 10             	mov    %rdx,(%rax)
ffffffff8000e749:	48 83 45 f8 08       	addq   $0x8,-0x8(%rbp)
ffffffff8000e74e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000e752:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
ffffffff8000e756:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
ffffffff8000e75a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000e75e:	48 89 10             	mov    %rdx,(%rax)
ffffffff8000e761:	48 83 45 f8 08       	addq   $0x8,-0x8(%rbp)
ffffffff8000e766:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000e76a:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
ffffffff8000e76e:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
ffffffff8000e772:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000e776:	48 89 10             	mov    %rdx,(%rax)
ffffffff8000e779:	48 83 45 f8 08       	addq   $0x8,-0x8(%rbp)
ffffffff8000e77e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000e782:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
ffffffff8000e786:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
ffffffff8000e78a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000e78e:	48 89 10             	mov    %rdx,(%rax)
ffffffff8000e791:	48 83 45 f8 08       	addq   $0x8,-0x8(%rbp)
ffffffff8000e796:	48 83 ad 48 ff ff ff 	subq   $0x20,-0xb8(%rbp)
ffffffff8000e79d:	20 
ffffffff8000e79e:	48 83 bd 48 ff ff ff 	cmpq   $0xf,-0xb8(%rbp)
ffffffff8000e7a5:	0f 
ffffffff8000e7a6:	76 38                	jbe    ffffffff8000e7e0 <memset+0x298>
ffffffff8000e7a8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000e7ac:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
ffffffff8000e7b0:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
ffffffff8000e7b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000e7b8:	48 89 10             	mov    %rdx,(%rax)
ffffffff8000e7bb:	48 83 45 f8 08       	addq   $0x8,-0x8(%rbp)
ffffffff8000e7c0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000e7c4:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
ffffffff8000e7c8:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
ffffffff8000e7cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000e7d0:	48 89 10             	mov    %rdx,(%rax)
ffffffff8000e7d3:	48 83 45 f8 08       	addq   $0x8,-0x8(%rbp)
ffffffff8000e7d8:	48 83 ad 48 ff ff ff 	subq   $0x10,-0xb8(%rbp)
ffffffff8000e7df:	10 
ffffffff8000e7e0:	48 83 bd 48 ff ff ff 	cmpq   $0x7,-0xb8(%rbp)
ffffffff8000e7e7:	07 
ffffffff8000e7e8:	76 20                	jbe    ffffffff8000e80a <memset+0x2c2>
ffffffff8000e7ea:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000e7ee:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
ffffffff8000e7f2:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
ffffffff8000e7f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000e7fa:	48 89 10             	mov    %rdx,(%rax)
ffffffff8000e7fd:	48 83 45 f8 08       	addq   $0x8,-0x8(%rbp)
ffffffff8000e802:	48 83 ad 48 ff ff ff 	subq   $0x8,-0xb8(%rbp)
ffffffff8000e809:	08 
ffffffff8000e80a:	48 83 bd 48 ff ff ff 	cmpq   $0x3,-0xb8(%rbp)
ffffffff8000e811:	03 
ffffffff8000e812:	76 1c                	jbe    ffffffff8000e830 <memset+0x2e8>
ffffffff8000e814:	8b 45 e4             	mov    -0x1c(%rbp),%eax
ffffffff8000e817:	89 45 dc             	mov    %eax,-0x24(%rbp)
ffffffff8000e81a:	8b 55 dc             	mov    -0x24(%rbp),%edx
ffffffff8000e81d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000e821:	89 10                	mov    %edx,(%rax)
ffffffff8000e823:	48 83 45 f8 04       	addq   $0x4,-0x8(%rbp)
ffffffff8000e828:	48 83 ad 48 ff ff ff 	subq   $0x4,-0xb8(%rbp)
ffffffff8000e82f:	04 
ffffffff8000e830:	48 83 bd 48 ff ff ff 	cmpq   $0x1,-0xb8(%rbp)
ffffffff8000e837:	01 
ffffffff8000e838:	76 20                	jbe    ffffffff8000e85a <memset+0x312>
ffffffff8000e83a:	0f b7 45 e2          	movzwl -0x1e(%rbp),%eax
ffffffff8000e83e:	66 89 45 e0          	mov    %ax,-0x20(%rbp)
ffffffff8000e842:	0f b7 55 e0          	movzwl -0x20(%rbp),%edx
ffffffff8000e846:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000e84a:	66 89 10             	mov    %dx,(%rax)
ffffffff8000e84d:	48 83 45 f8 02       	addq   $0x2,-0x8(%rbp)
ffffffff8000e852:	48 83 ad 48 ff ff ff 	subq   $0x2,-0xb8(%rbp)
ffffffff8000e859:	02 
ffffffff8000e85a:	48 83 bd 48 ff ff ff 	cmpq   $0x0,-0xb8(%rbp)
ffffffff8000e861:	00 
ffffffff8000e862:	74 0a                	je     ffffffff8000e86e <memset+0x326>
ffffffff8000e864:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff8000e868:	0f b6 45 f7          	movzbl -0x9(%rbp),%eax
ffffffff8000e86c:	88 02                	mov    %al,(%rdx)
ffffffff8000e86e:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
ffffffff8000e875:	90                   	nop
ffffffff8000e876:	90                   	nop
ffffffff8000e877:	c9                   	leave  
ffffffff8000e878:	c3                   	ret    

ffffffff8000e879 <memmove>:
ffffffff8000e879:	f3 0f 1e fa          	endbr64 
ffffffff8000e87d:	55                   	push   %rbp
ffffffff8000e87e:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000e881:	48 83 ec 38          	sub    $0x38,%rsp
ffffffff8000e885:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
ffffffff8000e889:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
ffffffff8000e88d:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
ffffffff8000e891:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8000e895:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff8000e899:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8000e89d:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff8000e8a1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000e8a5:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
ffffffff8000e8a9:	73 19                	jae    ffffffff8000e8c4 <memmove+0x4b>
ffffffff8000e8ab:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
ffffffff8000e8af:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
ffffffff8000e8b3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8000e8b7:	48 89 ce             	mov    %rcx,%rsi
ffffffff8000e8ba:	48 89 c7             	mov    %rax,%rdi
ffffffff8000e8bd:	e8 ad f7 ff ff       	call   ffffffff8000e06f <memcpy>
ffffffff8000e8c2:	eb 56                	jmp    ffffffff8000e91a <memmove+0xa1>
ffffffff8000e8c4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8000e8c8:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
ffffffff8000e8cc:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8000e8d0:	48 01 d0             	add    %rdx,%rax
ffffffff8000e8d3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8000e8d7:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8000e8db:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
ffffffff8000e8df:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000e8e3:	48 01 d0             	add    %rdx,%rax
ffffffff8000e8e6:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff8000e8ea:	eb 1d                	jmp    ffffffff8000e909 <memmove+0x90>
ffffffff8000e8ec:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff8000e8f0:	48 8d 42 ff          	lea    -0x1(%rdx),%rax
ffffffff8000e8f4:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8000e8f8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8000e8fc:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
ffffffff8000e900:	48 89 4d f0          	mov    %rcx,-0x10(%rbp)
ffffffff8000e904:	0f b6 12             	movzbl (%rdx),%edx
ffffffff8000e907:	88 10                	mov    %dl,(%rax)
ffffffff8000e909:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8000e90d:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
ffffffff8000e911:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
ffffffff8000e915:	48 85 c0             	test   %rax,%rax
ffffffff8000e918:	75 d2                	jne    ffffffff8000e8ec <memmove+0x73>
ffffffff8000e91a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8000e91e:	c9                   	leave  
ffffffff8000e91f:	c3                   	ret    

ffffffff8000e920 <memcmp>:
ffffffff8000e920:	f3 0f 1e fa          	endbr64 
ffffffff8000e924:	55                   	push   %rbp
ffffffff8000e925:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000e928:	48 83 ec 38          	sub    $0x38,%rsp
ffffffff8000e92c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
ffffffff8000e930:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
ffffffff8000e934:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
ffffffff8000e938:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8000e93c:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff8000e940:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8000e944:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff8000e948:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
ffffffff8000e94f:	00 
ffffffff8000e950:	eb 53                	jmp    ffffffff8000e9a5 <memcmp+0x85>
ffffffff8000e952:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff8000e956:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000e95a:	48 01 d0             	add    %rdx,%rax
ffffffff8000e95d:	0f b6 10             	movzbl (%rax),%edx
ffffffff8000e960:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
ffffffff8000e964:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000e968:	48 01 c8             	add    %rcx,%rax
ffffffff8000e96b:	0f b6 00             	movzbl (%rax),%eax
ffffffff8000e96e:	38 c2                	cmp    %al,%dl
ffffffff8000e970:	73 07                	jae    ffffffff8000e979 <memcmp+0x59>
ffffffff8000e972:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
ffffffff8000e977:	eb 3b                	jmp    ffffffff8000e9b4 <memcmp+0x94>
ffffffff8000e979:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff8000e97d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000e981:	48 01 d0             	add    %rdx,%rax
ffffffff8000e984:	0f b6 10             	movzbl (%rax),%edx
ffffffff8000e987:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
ffffffff8000e98b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000e98f:	48 01 c8             	add    %rcx,%rax
ffffffff8000e992:	0f b6 00             	movzbl (%rax),%eax
ffffffff8000e995:	38 c2                	cmp    %al,%dl
ffffffff8000e997:	76 07                	jbe    ffffffff8000e9a0 <memcmp+0x80>
ffffffff8000e999:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8000e99e:	eb 14                	jmp    ffffffff8000e9b4 <memcmp+0x94>
ffffffff8000e9a0:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
ffffffff8000e9a5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000e9a9:	48 3b 45 c8          	cmp    -0x38(%rbp),%rax
ffffffff8000e9ad:	72 a3                	jb     ffffffff8000e952 <memcmp+0x32>
ffffffff8000e9af:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000e9b4:	c9                   	leave  
ffffffff8000e9b5:	c3                   	ret    

ffffffff8000e9b6 <strcmp>:
ffffffff8000e9b6:	f3 0f 1e fa          	endbr64 
ffffffff8000e9ba:	55                   	push   %rbp
ffffffff8000e9bb:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000e9be:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff8000e9c2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff8000e9c6:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
ffffffff8000e9ca:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
ffffffff8000e9d1:	00 
ffffffff8000e9d2:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff8000e9d6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000e9da:	48 01 d0             	add    %rdx,%rax
ffffffff8000e9dd:	0f b6 00             	movzbl (%rax),%eax
ffffffff8000e9e0:	88 45 f7             	mov    %al,-0x9(%rbp)
ffffffff8000e9e3:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff8000e9e7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000e9eb:	48 01 d0             	add    %rdx,%rax
ffffffff8000e9ee:	0f b6 00             	movzbl (%rax),%eax
ffffffff8000e9f1:	88 45 f6             	mov    %al,-0xa(%rbp)
ffffffff8000e9f4:	80 7d f7 00          	cmpb   $0x0,-0x9(%rbp)
ffffffff8000e9f8:	75 0d                	jne    ffffffff8000ea07 <strcmp+0x51>
ffffffff8000e9fa:	80 7d f6 00          	cmpb   $0x0,-0xa(%rbp)
ffffffff8000e9fe:	75 07                	jne    ffffffff8000ea07 <strcmp+0x51>
ffffffff8000ea00:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000ea05:	eb 27                	jmp    ffffffff8000ea2e <strcmp+0x78>
ffffffff8000ea07:	0f b6 45 f7          	movzbl -0x9(%rbp),%eax
ffffffff8000ea0b:	3a 45 f6             	cmp    -0xa(%rbp),%al
ffffffff8000ea0e:	73 07                	jae    ffffffff8000ea17 <strcmp+0x61>
ffffffff8000ea10:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
ffffffff8000ea15:	eb 17                	jmp    ffffffff8000ea2e <strcmp+0x78>
ffffffff8000ea17:	0f b6 45 f7          	movzbl -0x9(%rbp),%eax
ffffffff8000ea1b:	3a 45 f6             	cmp    -0xa(%rbp),%al
ffffffff8000ea1e:	76 07                	jbe    ffffffff8000ea27 <strcmp+0x71>
ffffffff8000ea20:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8000ea25:	eb 07                	jmp    ffffffff8000ea2e <strcmp+0x78>
ffffffff8000ea27:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
ffffffff8000ea2c:	eb a4                	jmp    ffffffff8000e9d2 <strcmp+0x1c>
ffffffff8000ea2e:	c9                   	leave  
ffffffff8000ea2f:	c3                   	ret    

ffffffff8000ea30 <strlen>:
ffffffff8000ea30:	f3 0f 1e fa          	endbr64 
ffffffff8000ea34:	55                   	push   %rbp
ffffffff8000ea35:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000ea38:	48 83 ec 18          	sub    $0x18,%rsp
ffffffff8000ea3c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff8000ea40:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
ffffffff8000ea47:	00 
ffffffff8000ea48:	eb 05                	jmp    ffffffff8000ea4f <strlen+0x1f>
ffffffff8000ea4a:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
ffffffff8000ea4f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000ea53:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffff8000ea57:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
ffffffff8000ea5b:	0f b6 00             	movzbl (%rax),%eax
ffffffff8000ea5e:	84 c0                	test   %al,%al
ffffffff8000ea60:	75 e8                	jne    ffffffff8000ea4a <strlen+0x1a>
ffffffff8000ea62:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000ea66:	c9                   	leave  
ffffffff8000ea67:	c3                   	ret    

ffffffff8000ea68 <strcpy>:
ffffffff8000ea68:	f3 0f 1e fa          	endbr64 
ffffffff8000ea6c:	55                   	push   %rbp
ffffffff8000ea6d:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000ea70:	53                   	push   %rbx
ffffffff8000ea71:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff8000ea75:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
ffffffff8000ea79:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
ffffffff8000ea7d:	48 8b 5d f0          	mov    -0x10(%rbp),%rbx
ffffffff8000ea81:	90                   	nop
ffffffff8000ea82:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff8000ea86:	48 8d 42 01          	lea    0x1(%rdx),%rax
ffffffff8000ea8a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff8000ea8e:	48 89 d8             	mov    %rbx,%rax
ffffffff8000ea91:	48 8d 58 01          	lea    0x1(%rax),%rbx
ffffffff8000ea95:	0f b6 12             	movzbl (%rdx),%edx
ffffffff8000ea98:	88 10                	mov    %dl,(%rax)
ffffffff8000ea9a:	0f b6 00             	movzbl (%rax),%eax
ffffffff8000ea9d:	84 c0                	test   %al,%al
ffffffff8000ea9f:	75 e1                	jne    ffffffff8000ea82 <strcpy+0x1a>
ffffffff8000eaa1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8000eaa5:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
ffffffff8000eaa9:	c9                   	leave  
ffffffff8000eaaa:	c3                   	ret    

ffffffff8000eaab <isspace>:
ffffffff8000eaab:	f3 0f 1e fa          	endbr64 
ffffffff8000eaaf:	55                   	push   %rbp
ffffffff8000eab0:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000eab3:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff8000eab7:	89 7d fc             	mov    %edi,-0x4(%rbp)
ffffffff8000eaba:	83 7d fc 20          	cmpl   $0x20,-0x4(%rbp)
ffffffff8000eabe:	74 1e                	je     ffffffff8000eade <isspace+0x33>
ffffffff8000eac0:	83 7d fc 0c          	cmpl   $0xc,-0x4(%rbp)
ffffffff8000eac4:	74 18                	je     ffffffff8000eade <isspace+0x33>
ffffffff8000eac6:	83 7d fc 0a          	cmpl   $0xa,-0x4(%rbp)
ffffffff8000eaca:	74 12                	je     ffffffff8000eade <isspace+0x33>
ffffffff8000eacc:	83 7d fc 0d          	cmpl   $0xd,-0x4(%rbp)
ffffffff8000ead0:	74 0c                	je     ffffffff8000eade <isspace+0x33>
ffffffff8000ead2:	83 7d fc 09          	cmpl   $0x9,-0x4(%rbp)
ffffffff8000ead6:	74 06                	je     ffffffff8000eade <isspace+0x33>
ffffffff8000ead8:	83 7d fc 0b          	cmpl   $0xb,-0x4(%rbp)
ffffffff8000eadc:	75 07                	jne    ffffffff8000eae5 <isspace+0x3a>
ffffffff8000eade:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8000eae3:	eb 05                	jmp    ffffffff8000eaea <isspace+0x3f>
ffffffff8000eae5:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000eaea:	83 e0 01             	and    $0x1,%eax
ffffffff8000eaed:	c9                   	leave  
ffffffff8000eaee:	c3                   	ret    

ffffffff8000eaef <isdigit>:
ffffffff8000eaef:	f3 0f 1e fa          	endbr64 
ffffffff8000eaf3:	55                   	push   %rbp
ffffffff8000eaf4:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000eaf7:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff8000eafb:	89 7d fc             	mov    %edi,-0x4(%rbp)
ffffffff8000eafe:	83 7d fc 2f          	cmpl   $0x2f,-0x4(%rbp)
ffffffff8000eb02:	7e 0d                	jle    ffffffff8000eb11 <isdigit+0x22>
ffffffff8000eb04:	83 7d fc 39          	cmpl   $0x39,-0x4(%rbp)
ffffffff8000eb08:	7f 07                	jg     ffffffff8000eb11 <isdigit+0x22>
ffffffff8000eb0a:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8000eb0f:	eb 05                	jmp    ffffffff8000eb16 <isdigit+0x27>
ffffffff8000eb11:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000eb16:	83 e0 01             	and    $0x1,%eax
ffffffff8000eb19:	c9                   	leave  
ffffffff8000eb1a:	c3                   	ret    

ffffffff8000eb1b <isupper>:
ffffffff8000eb1b:	f3 0f 1e fa          	endbr64 
ffffffff8000eb1f:	55                   	push   %rbp
ffffffff8000eb20:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000eb23:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff8000eb27:	89 7d fc             	mov    %edi,-0x4(%rbp)
ffffffff8000eb2a:	83 7d fc 40          	cmpl   $0x40,-0x4(%rbp)
ffffffff8000eb2e:	7e 0d                	jle    ffffffff8000eb3d <isupper+0x22>
ffffffff8000eb30:	83 7d fc 5a          	cmpl   $0x5a,-0x4(%rbp)
ffffffff8000eb34:	7f 07                	jg     ffffffff8000eb3d <isupper+0x22>
ffffffff8000eb36:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8000eb3b:	eb 05                	jmp    ffffffff8000eb42 <isupper+0x27>
ffffffff8000eb3d:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000eb42:	83 e0 01             	and    $0x1,%eax
ffffffff8000eb45:	c9                   	leave  
ffffffff8000eb46:	c3                   	ret    

ffffffff8000eb47 <isalpha>:
ffffffff8000eb47:	f3 0f 1e fa          	endbr64 
ffffffff8000eb4b:	55                   	push   %rbp
ffffffff8000eb4c:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000eb4f:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff8000eb53:	89 7d fc             	mov    %edi,-0x4(%rbp)
ffffffff8000eb56:	83 7d fc 60          	cmpl   $0x60,-0x4(%rbp)
ffffffff8000eb5a:	7e 06                	jle    ffffffff8000eb62 <isalpha+0x1b>
ffffffff8000eb5c:	83 7d fc 7a          	cmpl   $0x7a,-0x4(%rbp)
ffffffff8000eb60:	7e 0e                	jle    ffffffff8000eb70 <isalpha+0x29>
ffffffff8000eb62:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8000eb65:	89 c7                	mov    %eax,%edi
ffffffff8000eb67:	e8 af ff ff ff       	call   ffffffff8000eb1b <isupper>
ffffffff8000eb6c:	84 c0                	test   %al,%al
ffffffff8000eb6e:	74 07                	je     ffffffff8000eb77 <isalpha+0x30>
ffffffff8000eb70:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8000eb75:	eb 05                	jmp    ffffffff8000eb7c <isalpha+0x35>
ffffffff8000eb77:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000eb7c:	83 e0 01             	and    $0x1,%eax
ffffffff8000eb7f:	c9                   	leave  
ffffffff8000eb80:	c3                   	ret    

ffffffff8000eb81 <strtoul>:
ffffffff8000eb81:	f3 0f 1e fa          	endbr64 
ffffffff8000eb85:	55                   	push   %rbp
ffffffff8000eb86:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000eb89:	48 83 ec 48          	sub    $0x48,%rsp
ffffffff8000eb8d:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
ffffffff8000eb91:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
ffffffff8000eb95:	89 55 bc             	mov    %edx,-0x44(%rbp)
ffffffff8000eb98:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8000eb9c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8000eba0:	c6 45 f7 00          	movb   $0x0,-0x9(%rbp)
ffffffff8000eba4:	c6 45 f6 00          	movb   $0x0,-0xa(%rbp)
ffffffff8000eba8:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
ffffffff8000ebaf:	00 
ffffffff8000ebb0:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
ffffffff8000ebb7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000ebbb:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffff8000ebbf:	48 89 55 f8          	mov    %rdx,-0x8(%rbp)
ffffffff8000ebc3:	0f b6 00             	movzbl (%rax),%eax
ffffffff8000ebc6:	88 45 f6             	mov    %al,-0xa(%rbp)
ffffffff8000ebc9:	0f be 45 f6          	movsbl -0xa(%rbp),%eax
ffffffff8000ebcd:	89 c7                	mov    %eax,%edi
ffffffff8000ebcf:	e8 d7 fe ff ff       	call   ffffffff8000eaab <isspace>
ffffffff8000ebd4:	84 c0                	test   %al,%al
ffffffff8000ebd6:	75 df                	jne    ffffffff8000ebb7 <strtoul+0x36>
ffffffff8000ebd8:	80 7d f6 2d          	cmpb   $0x2d,-0xa(%rbp)
ffffffff8000ebdc:	75 18                	jne    ffffffff8000ebf6 <strtoul+0x75>
ffffffff8000ebde:	c6 45 f7 01          	movb   $0x1,-0x9(%rbp)
ffffffff8000ebe2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000ebe6:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffff8000ebea:	48 89 55 f8          	mov    %rdx,-0x8(%rbp)
ffffffff8000ebee:	0f b6 00             	movzbl (%rax),%eax
ffffffff8000ebf1:	88 45 f6             	mov    %al,-0xa(%rbp)
ffffffff8000ebf4:	eb 18                	jmp    ffffffff8000ec0e <strtoul+0x8d>
ffffffff8000ebf6:	80 7d f6 2b          	cmpb   $0x2b,-0xa(%rbp)
ffffffff8000ebfa:	75 12                	jne    ffffffff8000ec0e <strtoul+0x8d>
ffffffff8000ebfc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000ec00:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffff8000ec04:	48 89 55 f8          	mov    %rdx,-0x8(%rbp)
ffffffff8000ec08:	0f b6 00             	movzbl (%rax),%eax
ffffffff8000ec0b:	88 45 f6             	mov    %al,-0xa(%rbp)
ffffffff8000ec0e:	83 7d bc 00          	cmpl   $0x0,-0x44(%rbp)
ffffffff8000ec12:	74 06                	je     ffffffff8000ec1a <strtoul+0x99>
ffffffff8000ec14:	83 7d bc 10          	cmpl   $0x10,-0x44(%rbp)
ffffffff8000ec18:	75 36                	jne    ffffffff8000ec50 <strtoul+0xcf>
ffffffff8000ec1a:	80 7d f6 30          	cmpb   $0x30,-0xa(%rbp)
ffffffff8000ec1e:	75 30                	jne    ffffffff8000ec50 <strtoul+0xcf>
ffffffff8000ec20:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000ec24:	0f b6 00             	movzbl (%rax),%eax
ffffffff8000ec27:	3c 78                	cmp    $0x78,%al
ffffffff8000ec29:	74 0b                	je     ffffffff8000ec36 <strtoul+0xb5>
ffffffff8000ec2b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000ec2f:	0f b6 00             	movzbl (%rax),%eax
ffffffff8000ec32:	3c 58                	cmp    $0x58,%al
ffffffff8000ec34:	75 1a                	jne    ffffffff8000ec50 <strtoul+0xcf>
ffffffff8000ec36:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000ec3a:	48 83 c0 01          	add    $0x1,%rax
ffffffff8000ec3e:	0f b6 00             	movzbl (%rax),%eax
ffffffff8000ec41:	88 45 f6             	mov    %al,-0xa(%rbp)
ffffffff8000ec44:	48 83 45 f8 02       	addq   $0x2,-0x8(%rbp)
ffffffff8000ec49:	c7 45 bc 10 00 00 00 	movl   $0x10,-0x44(%rbp)
ffffffff8000ec50:	83 7d bc 00          	cmpl   $0x0,-0x44(%rbp)
ffffffff8000ec54:	75 15                	jne    ffffffff8000ec6b <strtoul+0xea>
ffffffff8000ec56:	80 7d f6 30          	cmpb   $0x30,-0xa(%rbp)
ffffffff8000ec5a:	75 07                	jne    ffffffff8000ec63 <strtoul+0xe2>
ffffffff8000ec5c:	b8 08 00 00 00       	mov    $0x8,%eax
ffffffff8000ec61:	eb 05                	jmp    ffffffff8000ec68 <strtoul+0xe7>
ffffffff8000ec63:	b8 0a 00 00 00       	mov    $0xa,%eax
ffffffff8000ec68:	89 45 bc             	mov    %eax,-0x44(%rbp)
ffffffff8000ec6b:	8b 45 bc             	mov    -0x44(%rbp),%eax
ffffffff8000ec6e:	48 63 f0             	movslq %eax,%rsi
ffffffff8000ec71:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
ffffffff8000ec78:	ba 00 00 00 00       	mov    $0x0,%edx
ffffffff8000ec7d:	48 f7 f6             	div    %rsi
ffffffff8000ec80:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
ffffffff8000ec84:	8b 45 bc             	mov    -0x44(%rbp),%eax
ffffffff8000ec87:	48 63 c8             	movslq %eax,%rcx
ffffffff8000ec8a:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
ffffffff8000ec91:	ba 00 00 00 00       	mov    $0x0,%edx
ffffffff8000ec96:	48 f7 f1             	div    %rcx
ffffffff8000ec99:	48 89 55 d0          	mov    %rdx,-0x30(%rbp)
ffffffff8000ec9d:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
ffffffff8000eca4:	00 
ffffffff8000eca5:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
ffffffff8000ecac:	0f be 45 f6          	movsbl -0xa(%rbp),%eax
ffffffff8000ecb0:	89 c7                	mov    %eax,%edi
ffffffff8000ecb2:	e8 38 fe ff ff       	call   ffffffff8000eaef <isdigit>
ffffffff8000ecb7:	84 c0                	test   %al,%al
ffffffff8000ecb9:	74 0c                	je     ffffffff8000ecc7 <strtoul+0x146>
ffffffff8000ecbb:	0f b6 45 f6          	movzbl -0xa(%rbp),%eax
ffffffff8000ecbf:	83 e8 30             	sub    $0x30,%eax
ffffffff8000ecc2:	88 45 f6             	mov    %al,-0xa(%rbp)
ffffffff8000ecc5:	eb 37                	jmp    ffffffff8000ecfe <strtoul+0x17d>
ffffffff8000ecc7:	0f be 45 f6          	movsbl -0xa(%rbp),%eax
ffffffff8000eccb:	89 c7                	mov    %eax,%edi
ffffffff8000eccd:	e8 75 fe ff ff       	call   ffffffff8000eb47 <isalpha>
ffffffff8000ecd2:	84 c0                	test   %al,%al
ffffffff8000ecd4:	0f 84 93 00 00 00    	je     ffffffff8000ed6d <strtoul+0x1ec>
ffffffff8000ecda:	0f be 45 f6          	movsbl -0xa(%rbp),%eax
ffffffff8000ecde:	89 c7                	mov    %eax,%edi
ffffffff8000ece0:	e8 36 fe ff ff       	call   ffffffff8000eb1b <isupper>
ffffffff8000ece5:	84 c0                	test   %al,%al
ffffffff8000ece7:	74 07                	je     ffffffff8000ecf0 <strtoul+0x16f>
ffffffff8000ece9:	ba 37 00 00 00       	mov    $0x37,%edx
ffffffff8000ecee:	eb 05                	jmp    ffffffff8000ecf5 <strtoul+0x174>
ffffffff8000ecf0:	ba 57 00 00 00       	mov    $0x57,%edx
ffffffff8000ecf5:	0f b6 45 f6          	movzbl -0xa(%rbp),%eax
ffffffff8000ecf9:	29 d0                	sub    %edx,%eax
ffffffff8000ecfb:	88 45 f6             	mov    %al,-0xa(%rbp)
ffffffff8000ecfe:	0f be 45 f6          	movsbl -0xa(%rbp),%eax
ffffffff8000ed02:	39 45 bc             	cmp    %eax,-0x44(%rbp)
ffffffff8000ed05:	7e 69                	jle    ffffffff8000ed70 <strtoul+0x1ef>
ffffffff8000ed07:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
ffffffff8000ed0b:	78 1f                	js     ffffffff8000ed2c <strtoul+0x1ab>
ffffffff8000ed0d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000ed11:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
ffffffff8000ed15:	77 15                	ja     ffffffff8000ed2c <strtoul+0x1ab>
ffffffff8000ed17:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000ed1b:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
ffffffff8000ed1f:	75 14                	jne    ffffffff8000ed35 <strtoul+0x1b4>
ffffffff8000ed21:	48 0f be 45 f6       	movsbq -0xa(%rbp),%rax
ffffffff8000ed26:	48 39 45 d0          	cmp    %rax,-0x30(%rbp)
ffffffff8000ed2a:	73 09                	jae    ffffffff8000ed35 <strtoul+0x1b4>
ffffffff8000ed2c:	c7 45 e4 ff ff ff ff 	movl   $0xffffffff,-0x1c(%rbp)
ffffffff8000ed33:	eb 21                	jmp    ffffffff8000ed56 <strtoul+0x1d5>
ffffffff8000ed35:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%rbp)
ffffffff8000ed3c:	8b 45 bc             	mov    -0x44(%rbp),%eax
ffffffff8000ed3f:	48 98                	cltq   
ffffffff8000ed41:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff8000ed45:	48 0f af c2          	imul   %rdx,%rax
ffffffff8000ed49:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff8000ed4d:	48 0f be 45 f6       	movsbq -0xa(%rbp),%rax
ffffffff8000ed52:	48 01 45 e8          	add    %rax,-0x18(%rbp)
ffffffff8000ed56:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000ed5a:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffff8000ed5e:	48 89 55 f8          	mov    %rdx,-0x8(%rbp)
ffffffff8000ed62:	0f b6 00             	movzbl (%rax),%eax
ffffffff8000ed65:	88 45 f6             	mov    %al,-0xa(%rbp)
ffffffff8000ed68:	e9 3f ff ff ff       	jmp    ffffffff8000ecac <strtoul+0x12b>
ffffffff8000ed6d:	90                   	nop
ffffffff8000ed6e:	eb 01                	jmp    ffffffff8000ed71 <strtoul+0x1f0>
ffffffff8000ed70:	90                   	nop
ffffffff8000ed71:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
ffffffff8000ed75:	79 0a                	jns    ffffffff8000ed81 <strtoul+0x200>
ffffffff8000ed77:	48 c7 45 e8 ff ff ff 	movq   $0xffffffffffffffff,-0x18(%rbp)
ffffffff8000ed7e:	ff 
ffffffff8000ed7f:	eb 0a                	jmp    ffffffff8000ed8b <strtoul+0x20a>
ffffffff8000ed81:	80 7d f7 00          	cmpb   $0x0,-0x9(%rbp)
ffffffff8000ed85:	74 04                	je     ffffffff8000ed8b <strtoul+0x20a>
ffffffff8000ed87:	48 f7 5d e8          	negq   -0x18(%rbp)
ffffffff8000ed8b:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
ffffffff8000ed90:	74 1b                	je     ffffffff8000edad <strtoul+0x22c>
ffffffff8000ed92:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
ffffffff8000ed96:	74 0a                	je     ffffffff8000eda2 <strtoul+0x221>
ffffffff8000ed98:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000ed9c:	48 83 e8 01          	sub    $0x1,%rax
ffffffff8000eda0:	eb 04                	jmp    ffffffff8000eda6 <strtoul+0x225>
ffffffff8000eda2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8000eda6:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
ffffffff8000edaa:	48 89 02             	mov    %rax,(%rdx)
ffffffff8000edad:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000edb1:	c9                   	leave  
ffffffff8000edb2:	c3                   	ret    

ffffffff8000edb3 <strncmp>:
ffffffff8000edb3:	f3 0f 1e fa          	endbr64 
ffffffff8000edb7:	55                   	push   %rbp
ffffffff8000edb8:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000edbb:	48 83 ec 18          	sub    $0x18,%rsp
ffffffff8000edbf:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8000edc3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff8000edc7:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
ffffffff8000edcb:	eb 0f                	jmp    ffffffff8000eddc <strncmp+0x29>
ffffffff8000edcd:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
ffffffff8000edd2:	48 83 45 f0 01       	addq   $0x1,-0x10(%rbp)
ffffffff8000edd7:	48 83 6d e8 01       	subq   $0x1,-0x18(%rbp)
ffffffff8000eddc:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
ffffffff8000ede1:	74 1d                	je     ffffffff8000ee00 <strncmp+0x4d>
ffffffff8000ede3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000ede7:	0f b6 00             	movzbl (%rax),%eax
ffffffff8000edea:	84 c0                	test   %al,%al
ffffffff8000edec:	74 12                	je     ffffffff8000ee00 <strncmp+0x4d>
ffffffff8000edee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000edf2:	0f b6 10             	movzbl (%rax),%edx
ffffffff8000edf5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8000edf9:	0f b6 00             	movzbl (%rax),%eax
ffffffff8000edfc:	38 c2                	cmp    %al,%dl
ffffffff8000edfe:	74 cd                	je     ffffffff8000edcd <strncmp+0x1a>
ffffffff8000ee00:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
ffffffff8000ee05:	75 07                	jne    ffffffff8000ee0e <strncmp+0x5b>
ffffffff8000ee07:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000ee0c:	eb 18                	jmp    ffffffff8000ee26 <strncmp+0x73>
ffffffff8000ee0e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000ee12:	0f b6 00             	movzbl (%rax),%eax
ffffffff8000ee15:	0f b6 d0             	movzbl %al,%edx
ffffffff8000ee18:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8000ee1c:	0f b6 00             	movzbl (%rax),%eax
ffffffff8000ee1f:	0f b6 c8             	movzbl %al,%ecx
ffffffff8000ee22:	89 d0                	mov    %edx,%eax
ffffffff8000ee24:	29 c8                	sub    %ecx,%eax
ffffffff8000ee26:	c9                   	leave  
ffffffff8000ee27:	c3                   	ret    

ffffffff8000ee28 <tolower>:
ffffffff8000ee28:	f3 0f 1e fa          	endbr64 
ffffffff8000ee2c:	55                   	push   %rbp
ffffffff8000ee2d:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000ee30:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff8000ee34:	89 7d fc             	mov    %edi,-0x4(%rbp)
ffffffff8000ee37:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8000ee3a:	89 c7                	mov    %eax,%edi
ffffffff8000ee3c:	e8 da fc ff ff       	call   ffffffff8000eb1b <isupper>
ffffffff8000ee41:	84 c0                	test   %al,%al
ffffffff8000ee43:	74 08                	je     ffffffff8000ee4d <tolower+0x25>
ffffffff8000ee45:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8000ee48:	83 c8 20             	or     $0x20,%eax
ffffffff8000ee4b:	eb 03                	jmp    ffffffff8000ee50 <tolower+0x28>
ffffffff8000ee4d:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8000ee50:	c9                   	leave  
ffffffff8000ee51:	c3                   	ret    

ffffffff8000ee52 <strcasecmp>:
ffffffff8000ee52:	f3 0f 1e fa          	endbr64 
ffffffff8000ee56:	55                   	push   %rbp
ffffffff8000ee57:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000ee5a:	53                   	push   %rbx
ffffffff8000ee5b:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff8000ee5f:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
ffffffff8000ee63:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
ffffffff8000ee67:	eb 0a                	jmp    ffffffff8000ee73 <strcasecmp+0x21>
ffffffff8000ee69:	48 83 45 f0 01       	addq   $0x1,-0x10(%rbp)
ffffffff8000ee6e:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
ffffffff8000ee73:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8000ee77:	0f b6 00             	movzbl (%rax),%eax
ffffffff8000ee7a:	84 c0                	test   %al,%al
ffffffff8000ee7c:	74 28                	je     ffffffff8000eea6 <strcasecmp+0x54>
ffffffff8000ee7e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8000ee82:	0f b6 00             	movzbl (%rax),%eax
ffffffff8000ee85:	0f be c0             	movsbl %al,%eax
ffffffff8000ee88:	89 c7                	mov    %eax,%edi
ffffffff8000ee8a:	e8 99 ff ff ff       	call   ffffffff8000ee28 <tolower>
ffffffff8000ee8f:	89 c3                	mov    %eax,%ebx
ffffffff8000ee91:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000ee95:	0f b6 00             	movzbl (%rax),%eax
ffffffff8000ee98:	0f be c0             	movsbl %al,%eax
ffffffff8000ee9b:	89 c7                	mov    %eax,%edi
ffffffff8000ee9d:	e8 86 ff ff ff       	call   ffffffff8000ee28 <tolower>
ffffffff8000eea2:	39 c3                	cmp    %eax,%ebx
ffffffff8000eea4:	74 c3                	je     ffffffff8000ee69 <strcasecmp+0x17>
ffffffff8000eea6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8000eeaa:	0f b6 00             	movzbl (%rax),%eax
ffffffff8000eead:	0f b6 d0             	movzbl %al,%edx
ffffffff8000eeb0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000eeb4:	0f b6 00             	movzbl (%rax),%eax
ffffffff8000eeb7:	0f b6 c8             	movzbl %al,%ecx
ffffffff8000eeba:	89 d0                	mov    %edx,%eax
ffffffff8000eebc:	29 c8                	sub    %ecx,%eax
ffffffff8000eebe:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
ffffffff8000eec2:	c9                   	leave  
ffffffff8000eec3:	c3                   	ret    

ffffffff8000eec4 <strchr>:
ffffffff8000eec4:	f3 0f 1e fa          	endbr64 
ffffffff8000eec8:	55                   	push   %rbp
ffffffff8000eec9:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000eecc:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff8000eed0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8000eed4:	89 75 f4             	mov    %esi,-0xc(%rbp)
ffffffff8000eed7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000eedb:	0f b6 00             	movzbl (%rax),%eax
ffffffff8000eede:	0f be c0             	movsbl %al,%eax
ffffffff8000eee1:	39 45 f4             	cmp    %eax,-0xc(%rbp)
ffffffff8000eee4:	75 06                	jne    ffffffff8000eeec <strchr+0x28>
ffffffff8000eee6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000eeea:	eb 18                	jmp    ffffffff8000ef04 <strchr+0x40>
ffffffff8000eeec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000eef0:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffff8000eef4:	48 89 55 f8          	mov    %rdx,-0x8(%rbp)
ffffffff8000eef8:	0f b6 00             	movzbl (%rax),%eax
ffffffff8000eefb:	84 c0                	test   %al,%al
ffffffff8000eefd:	75 d8                	jne    ffffffff8000eed7 <strchr+0x13>
ffffffff8000eeff:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000ef04:	c9                   	leave  
ffffffff8000ef05:	c3                   	ret    

ffffffff8000ef06 <strcat>:
ffffffff8000ef06:	f3 0f 1e fa          	endbr64 
ffffffff8000ef0a:	55                   	push   %rbp
ffffffff8000ef0b:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000ef0e:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff8000ef12:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff8000ef16:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
ffffffff8000ef1a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000ef1e:	48 89 c7             	mov    %rax,%rdi
ffffffff8000ef21:	e8 0a fb ff ff       	call   ffffffff8000ea30 <strlen>
ffffffff8000ef26:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff8000ef2a:	48 01 d0             	add    %rdx,%rax
ffffffff8000ef2d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8000ef31:	eb 1d                	jmp    ffffffff8000ef50 <strcat+0x4a>
ffffffff8000ef33:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff8000ef37:	48 8d 42 01          	lea    0x1(%rdx),%rax
ffffffff8000ef3b:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff8000ef3f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000ef43:	48 8d 48 01          	lea    0x1(%rax),%rcx
ffffffff8000ef47:	48 89 4d f8          	mov    %rcx,-0x8(%rbp)
ffffffff8000ef4b:	0f b6 12             	movzbl (%rdx),%edx
ffffffff8000ef4e:	88 10                	mov    %dl,(%rax)
ffffffff8000ef50:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8000ef54:	0f b6 00             	movzbl (%rax),%eax
ffffffff8000ef57:	84 c0                	test   %al,%al
ffffffff8000ef59:	75 d8                	jne    ffffffff8000ef33 <strcat+0x2d>
ffffffff8000ef5b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000ef5f:	c6 00 00             	movb   $0x0,(%rax)
ffffffff8000ef62:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000ef66:	c9                   	leave  
ffffffff8000ef67:	c3                   	ret    

ffffffff8000ef68 <stbds_arrgrowf>:
ffffffff8000ef68:	f3 0f 1e fa          	endbr64 
ffffffff8000ef6c:	55                   	push   %rbp
ffffffff8000ef6d:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000ef70:	48 83 ec 50          	sub    $0x50,%rsp
ffffffff8000ef74:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
ffffffff8000ef78:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
ffffffff8000ef7c:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
ffffffff8000ef80:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
ffffffff8000ef84:	48 c7 45 d0 00 00 00 	movq   $0x0,-0x30(%rbp)
ffffffff8000ef8b:	00 
ffffffff8000ef8c:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
ffffffff8000ef93:	00 
ffffffff8000ef94:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
ffffffff8000ef9b:	00 
ffffffff8000ef9c:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
ffffffff8000efa3:	00 
ffffffff8000efa4:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
ffffffff8000efa9:	74 0d                	je     ffffffff8000efb8 <stbds_arrgrowf+0x50>
ffffffff8000efab:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8000efaf:	48 83 e8 20          	sub    $0x20,%rax
ffffffff8000efb3:	48 8b 00             	mov    (%rax),%rax
ffffffff8000efb6:	eb 05                	jmp    ffffffff8000efbd <stbds_arrgrowf+0x55>
ffffffff8000efb8:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000efbd:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
ffffffff8000efc1:	48 01 d0             	add    %rdx,%rax
ffffffff8000efc4:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8000efc8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000efcc:	48 3b 45 b0          	cmp    -0x50(%rbp),%rax
ffffffff8000efd0:	76 08                	jbe    ffffffff8000efda <stbds_arrgrowf+0x72>
ffffffff8000efd2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000efd6:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
ffffffff8000efda:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
ffffffff8000efdf:	74 0e                	je     ffffffff8000efef <stbds_arrgrowf+0x87>
ffffffff8000efe1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8000efe5:	48 83 e8 20          	sub    $0x20,%rax
ffffffff8000efe9:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff8000efed:	eb 05                	jmp    ffffffff8000eff4 <stbds_arrgrowf+0x8c>
ffffffff8000efef:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000eff4:	48 3b 45 b0          	cmp    -0x50(%rbp),%rax
ffffffff8000eff8:	72 09                	jb     ffffffff8000f003 <stbds_arrgrowf+0x9b>
ffffffff8000effa:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8000effe:	e9 d6 00 00 00       	jmp    ffffffff8000f0d9 <stbds_arrgrowf+0x171>
ffffffff8000f003:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
ffffffff8000f008:	74 11                	je     ffffffff8000f01b <stbds_arrgrowf+0xb3>
ffffffff8000f00a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8000f00e:	48 83 e8 20          	sub    $0x20,%rax
ffffffff8000f012:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff8000f016:	48 01 c0             	add    %rax,%rax
ffffffff8000f019:	eb 05                	jmp    ffffffff8000f020 <stbds_arrgrowf+0xb8>
ffffffff8000f01b:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000f020:	48 3b 45 b0          	cmp    -0x50(%rbp),%rax
ffffffff8000f024:	76 23                	jbe    ffffffff8000f049 <stbds_arrgrowf+0xe1>
ffffffff8000f026:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
ffffffff8000f02b:	74 11                	je     ffffffff8000f03e <stbds_arrgrowf+0xd6>
ffffffff8000f02d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8000f031:	48 83 e8 20          	sub    $0x20,%rax
ffffffff8000f035:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff8000f039:	48 01 c0             	add    %rax,%rax
ffffffff8000f03c:	eb 05                	jmp    ffffffff8000f043 <stbds_arrgrowf+0xdb>
ffffffff8000f03e:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000f043:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
ffffffff8000f047:	eb 0f                	jmp    ffffffff8000f058 <stbds_arrgrowf+0xf0>
ffffffff8000f049:	48 83 7d b0 03       	cmpq   $0x3,-0x50(%rbp)
ffffffff8000f04e:	77 08                	ja     ffffffff8000f058 <stbds_arrgrowf+0xf0>
ffffffff8000f050:	48 c7 45 b0 04 00 00 	movq   $0x4,-0x50(%rbp)
ffffffff8000f057:	00 
ffffffff8000f058:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8000f05c:	48 0f af 45 b0       	imul   -0x50(%rbp),%rax
ffffffff8000f061:	48 8d 50 20          	lea    0x20(%rax),%rdx
ffffffff8000f065:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
ffffffff8000f06a:	74 0a                	je     ffffffff8000f076 <stbds_arrgrowf+0x10e>
ffffffff8000f06c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8000f070:	48 83 e8 20          	sub    $0x20,%rax
ffffffff8000f074:	eb 05                	jmp    ffffffff8000f07b <stbds_arrgrowf+0x113>
ffffffff8000f076:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8000f07b:	48 89 d6             	mov    %rdx,%rsi
ffffffff8000f07e:	48 89 c7             	mov    %rax,%rdi
ffffffff8000f081:	e8 28 c8 ff ff       	call   ffffffff8000b8ae <realloc>
ffffffff8000f086:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff8000f08a:	48 83 45 f0 20       	addq   $0x20,-0x10(%rbp)
ffffffff8000f08f:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
ffffffff8000f094:	75 2f                	jne    ffffffff8000f0c5 <stbds_arrgrowf+0x15d>
ffffffff8000f096:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8000f09a:	48 83 e8 20          	sub    $0x20,%rax
ffffffff8000f09e:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
ffffffff8000f0a5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8000f0a9:	48 83 e8 20          	sub    $0x20,%rax
ffffffff8000f0ad:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
ffffffff8000f0b4:	00 
ffffffff8000f0b5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8000f0b9:	48 83 e8 20          	sub    $0x20,%rax
ffffffff8000f0bd:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)
ffffffff8000f0c4:	00 
ffffffff8000f0c5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8000f0c9:	48 83 e8 20          	sub    $0x20,%rax
ffffffff8000f0cd:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
ffffffff8000f0d1:	48 89 50 08          	mov    %rdx,0x8(%rax)
ffffffff8000f0d5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8000f0d9:	c9                   	leave  
ffffffff8000f0da:	c3                   	ret    

ffffffff8000f0db <stbds_arrfreef>:
ffffffff8000f0db:	f3 0f 1e fa          	endbr64 
ffffffff8000f0df:	55                   	push   %rbp
ffffffff8000f0e0:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000f0e3:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff8000f0e7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8000f0eb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000f0ef:	48 83 e8 20          	sub    $0x20,%rax
ffffffff8000f0f3:	48 89 c7             	mov    %rax,%rdi
ffffffff8000f0f6:	e8 0b c8 ff ff       	call   ffffffff8000b906 <free>
ffffffff8000f0fb:	90                   	nop
ffffffff8000f0fc:	c9                   	leave  
ffffffff8000f0fd:	c3                   	ret    

ffffffff8000f0fe <stbds_rand_seed>:
ffffffff8000f0fe:	f3 0f 1e fa          	endbr64 
ffffffff8000f102:	55                   	push   %rbp
ffffffff8000f103:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000f106:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff8000f10a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8000f10e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000f112:	48 89 05 57 7f 09 00 	mov    %rax,0x97f57(%rip)        # ffffffff800a7070 <stbds_hash_seed>
ffffffff8000f119:	90                   	nop
ffffffff8000f11a:	c9                   	leave  
ffffffff8000f11b:	c3                   	ret    

ffffffff8000f11c <stbds_probe_position>:
ffffffff8000f11c:	f3 0f 1e fa          	endbr64 
ffffffff8000f120:	55                   	push   %rbp
ffffffff8000f121:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000f124:	48 83 ec 28          	sub    $0x28,%rsp
ffffffff8000f128:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff8000f12c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
ffffffff8000f130:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
ffffffff8000f134:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8000f138:	48 83 e8 01          	sub    $0x1,%rax
ffffffff8000f13c:	48 23 45 e8          	and    -0x18(%rbp),%rax
ffffffff8000f140:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8000f144:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000f148:	c9                   	leave  
ffffffff8000f149:	c3                   	ret    

ffffffff8000f14a <stbds_log2>:
ffffffff8000f14a:	f3 0f 1e fa          	endbr64 
ffffffff8000f14e:	55                   	push   %rbp
ffffffff8000f14f:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000f152:	48 83 ec 18          	sub    $0x18,%rsp
ffffffff8000f156:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff8000f15a:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
ffffffff8000f161:	00 
ffffffff8000f162:	eb 09                	jmp    ffffffff8000f16d <stbds_log2+0x23>
ffffffff8000f164:	48 d1 6d e8          	shrq   -0x18(%rbp)
ffffffff8000f168:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
ffffffff8000f16d:	48 83 7d e8 01       	cmpq   $0x1,-0x18(%rbp)
ffffffff8000f172:	77 f0                	ja     ffffffff8000f164 <stbds_log2+0x1a>
ffffffff8000f174:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000f178:	c9                   	leave  
ffffffff8000f179:	c3                   	ret    

ffffffff8000f17a <stbds_make_hash_index>:
ffffffff8000f17a:	f3 0f 1e fa          	endbr64 
ffffffff8000f17e:	55                   	push   %rbp
ffffffff8000f17f:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000f182:	48 81 ec 90 00 00 00 	sub    $0x90,%rsp
ffffffff8000f189:	48 89 bd 78 ff ff ff 	mov    %rdi,-0x88(%rbp)
ffffffff8000f190:	48 89 b5 70 ff ff ff 	mov    %rsi,-0x90(%rbp)
ffffffff8000f197:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
ffffffff8000f19e:	48 c1 e8 03          	shr    $0x3,%rax
ffffffff8000f1a2:	48 c1 e0 07          	shl    $0x7,%rax
ffffffff8000f1a6:	48 05 a7 00 00 00    	add    $0xa7,%rax
ffffffff8000f1ac:	48 89 c6             	mov    %rax,%rsi
ffffffff8000f1af:	bf 00 00 00 00       	mov    $0x0,%edi
ffffffff8000f1b4:	e8 f5 c6 ff ff       	call   ffffffff8000b8ae <realloc>
ffffffff8000f1b9:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
ffffffff8000f1bd:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8000f1c1:	48 05 a7 00 00 00    	add    $0xa7,%rax
ffffffff8000f1c7:	48 83 e0 c0          	and    $0xffffffffffffffc0,%rax
ffffffff8000f1cb:	48 89 c2             	mov    %rax,%rdx
ffffffff8000f1ce:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8000f1d2:	48 89 50 60          	mov    %rdx,0x60(%rax)
ffffffff8000f1d6:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8000f1da:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
ffffffff8000f1e1:	48 89 50 08          	mov    %rdx,0x8(%rax)
ffffffff8000f1e5:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
ffffffff8000f1ec:	48 89 c7             	mov    %rax,%rdi
ffffffff8000f1ef:	e8 56 ff ff ff       	call   ffffffff8000f14a <stbds_log2>
ffffffff8000f1f4:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
ffffffff8000f1f8:	48 89 42 40          	mov    %rax,0x40(%rdx)
ffffffff8000f1fc:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8000f200:	48 c7 40 28 00 00 00 	movq   $0x0,0x28(%rax)
ffffffff8000f207:	00 
ffffffff8000f208:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8000f20c:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
ffffffff8000f213:	00 
ffffffff8000f214:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
ffffffff8000f21b:	48 c1 e8 02          	shr    $0x2,%rax
ffffffff8000f21f:	48 89 c1             	mov    %rax,%rcx
ffffffff8000f222:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
ffffffff8000f229:	48 29 c8             	sub    %rcx,%rax
ffffffff8000f22c:	48 89 c2             	mov    %rax,%rdx
ffffffff8000f22f:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8000f233:	48 89 50 18          	mov    %rdx,0x18(%rax)
ffffffff8000f237:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
ffffffff8000f23e:	48 c1 e8 03          	shr    $0x3,%rax
ffffffff8000f242:	48 89 c2             	mov    %rax,%rdx
ffffffff8000f245:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
ffffffff8000f24c:	48 c1 e8 04          	shr    $0x4,%rax
ffffffff8000f250:	48 01 c2             	add    %rax,%rdx
ffffffff8000f253:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8000f257:	48 89 50 30          	mov    %rdx,0x30(%rax)
ffffffff8000f25b:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
ffffffff8000f262:	48 c1 e8 02          	shr    $0x2,%rax
ffffffff8000f266:	48 89 c2             	mov    %rax,%rdx
ffffffff8000f269:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8000f26d:	48 89 50 20          	mov    %rdx,0x20(%rax)
ffffffff8000f271:	48 83 bd 78 ff ff ff 	cmpq   $0x8,-0x88(%rbp)
ffffffff8000f278:	08 
ffffffff8000f279:	77 0c                	ja     ffffffff8000f287 <stbds_make_hash_index+0x10d>
ffffffff8000f27b:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8000f27f:	48 c7 40 20 00 00 00 	movq   $0x0,0x20(%rax)
ffffffff8000f286:	00 
ffffffff8000f287:	48 83 bd 70 ff ff ff 	cmpq   $0x0,-0x90(%rbp)
ffffffff8000f28e:	00 
ffffffff8000f28f:	74 3b                	je     ffffffff8000f2cc <stbds_make_hash_index+0x152>
ffffffff8000f291:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
ffffffff8000f295:	48 8b b5 70 ff ff ff 	mov    -0x90(%rbp),%rsi
ffffffff8000f29c:	48 8b 46 48          	mov    0x48(%rsi),%rax
ffffffff8000f2a0:	48 8b 56 50          	mov    0x50(%rsi),%rdx
ffffffff8000f2a4:	48 89 41 48          	mov    %rax,0x48(%rcx)
ffffffff8000f2a8:	48 89 51 50          	mov    %rdx,0x50(%rcx)
ffffffff8000f2ac:	48 8b 46 58          	mov    0x58(%rsi),%rax
ffffffff8000f2b0:	48 89 41 58          	mov    %rax,0x58(%rcx)
ffffffff8000f2b4:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
ffffffff8000f2bb:	48 8b 50 38          	mov    0x38(%rax),%rdx
ffffffff8000f2bf:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8000f2c3:	48 89 50 38          	mov    %rdx,0x38(%rax)
ffffffff8000f2c7:	e9 ca 00 00 00       	jmp    ffffffff8000f396 <stbds_make_hash_index+0x21c>
ffffffff8000f2cc:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8000f2d0:	48 83 c0 48          	add    $0x48,%rax
ffffffff8000f2d4:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
ffffffff8000f2db:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
ffffffff8000f2e2:	00 
ffffffff8000f2e3:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
ffffffff8000f2ea:	00 
ffffffff8000f2eb:	48 8b 15 7e 7d 09 00 	mov    0x97d7e(%rip),%rdx        # ffffffff800a7070 <stbds_hash_seed>
ffffffff8000f2f2:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8000f2f6:	48 89 50 38          	mov    %rdx,0x38(%rax)
ffffffff8000f2fa:	b8 10 13 48 f8       	mov    $0xf8481310,%eax
ffffffff8000f2ff:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
ffffffff8000f303:	48 c1 65 b8 10       	shlq   $0x10,-0x48(%rbp)
ffffffff8000f308:	48 c1 65 b8 10       	shlq   $0x10,-0x48(%rbp)
ffffffff8000f30d:	48 c1 6d b8 10       	shrq   $0x10,-0x48(%rbp)
ffffffff8000f312:	48 c1 6d b8 10       	shrq   $0x10,-0x48(%rbp)
ffffffff8000f317:	48 c7 45 b0 e6 2e bb 	movq   $0x27bb2ee6,-0x50(%rbp)
ffffffff8000f31e:	27 
ffffffff8000f31f:	48 c1 65 b0 10       	shlq   $0x10,-0x50(%rbp)
ffffffff8000f324:	48 c1 65 b0 10       	shlq   $0x10,-0x50(%rbp)
ffffffff8000f329:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff8000f32d:	48 33 45 b0          	xor    -0x50(%rbp),%rax
ffffffff8000f331:	48 35 ed a3 f8 7f    	xor    $0x7ff8a3ed,%rax
ffffffff8000f337:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
ffffffff8000f33b:	b8 1c ee a4 9f       	mov    $0x9fa4ee1c,%eax
ffffffff8000f340:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
ffffffff8000f344:	48 c1 65 b8 10       	shlq   $0x10,-0x48(%rbp)
ffffffff8000f349:	48 c1 65 b8 10       	shlq   $0x10,-0x48(%rbp)
ffffffff8000f34e:	48 c1 6d b8 10       	shrq   $0x10,-0x48(%rbp)
ffffffff8000f353:	48 c1 6d b8 10       	shrq   $0x10,-0x48(%rbp)
ffffffff8000f358:	48 c7 45 a8 00 00 00 	movq   $0x0,-0x58(%rbp)
ffffffff8000f35f:	00 
ffffffff8000f360:	48 c1 65 a8 10       	shlq   $0x10,-0x58(%rbp)
ffffffff8000f365:	48 c1 65 a8 10       	shlq   $0x10,-0x58(%rbp)
ffffffff8000f36a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff8000f36e:	48 33 45 a8          	xor    -0x58(%rbp),%rax
ffffffff8000f372:	48 35 31 1d a0 2a    	xor    $0x2aa01d31,%rax
ffffffff8000f378:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
ffffffff8000f37c:	48 8b 05 ed 7c 09 00 	mov    0x97ced(%rip),%rax        # ffffffff800a7070 <stbds_hash_seed>
ffffffff8000f383:	48 0f af 45 b0       	imul   -0x50(%rbp),%rax
ffffffff8000f388:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
ffffffff8000f38c:	48 01 d0             	add    %rdx,%rax
ffffffff8000f38f:	48 89 05 da 7c 09 00 	mov    %rax,0x97cda(%rip)        # ffffffff800a7070 <stbds_hash_seed>
ffffffff8000f396:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
ffffffff8000f39d:	00 
ffffffff8000f39e:	eb 6c                	jmp    ffffffff8000f40c <stbds_make_hash_index+0x292>
ffffffff8000f3a0:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8000f3a4:	48 8b 50 60          	mov    0x60(%rax),%rdx
ffffffff8000f3a8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000f3ac:	48 c1 e0 07          	shl    $0x7,%rax
ffffffff8000f3b0:	48 01 d0             	add    %rdx,%rax
ffffffff8000f3b3:	48 89 45 80          	mov    %rax,-0x80(%rbp)
ffffffff8000f3b7:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
ffffffff8000f3be:	00 
ffffffff8000f3bf:	eb 15                	jmp    ffffffff8000f3d6 <stbds_make_hash_index+0x25c>
ffffffff8000f3c1:	48 8b 45 80          	mov    -0x80(%rbp),%rax
ffffffff8000f3c5:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff8000f3c9:	48 c7 04 d0 00 00 00 	movq   $0x0,(%rax,%rdx,8)
ffffffff8000f3d0:	00 
ffffffff8000f3d1:	48 83 45 f0 01       	addq   $0x1,-0x10(%rbp)
ffffffff8000f3d6:	48 83 7d f0 07       	cmpq   $0x7,-0x10(%rbp)
ffffffff8000f3db:	76 e4                	jbe    ffffffff8000f3c1 <stbds_make_hash_index+0x247>
ffffffff8000f3dd:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
ffffffff8000f3e4:	00 
ffffffff8000f3e5:	eb 19                	jmp    ffffffff8000f400 <stbds_make_hash_index+0x286>
ffffffff8000f3e7:	48 8b 45 80          	mov    -0x80(%rbp),%rax
ffffffff8000f3eb:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff8000f3ef:	48 83 c2 08          	add    $0x8,%rdx
ffffffff8000f3f3:	48 c7 04 d0 ff ff ff 	movq   $0xffffffffffffffff,(%rax,%rdx,8)
ffffffff8000f3fa:	ff 
ffffffff8000f3fb:	48 83 45 f0 01       	addq   $0x1,-0x10(%rbp)
ffffffff8000f400:	48 83 7d f0 07       	cmpq   $0x7,-0x10(%rbp)
ffffffff8000f405:	76 e0                	jbe    ffffffff8000f3e7 <stbds_make_hash_index+0x26d>
ffffffff8000f407:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
ffffffff8000f40c:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
ffffffff8000f413:	48 c1 e8 03          	shr    $0x3,%rax
ffffffff8000f417:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
ffffffff8000f41b:	72 83                	jb     ffffffff8000f3a0 <stbds_make_hash_index+0x226>
ffffffff8000f41d:	48 83 bd 70 ff ff ff 	cmpq   $0x0,-0x90(%rbp)
ffffffff8000f424:	00 
ffffffff8000f425:	0f 84 cd 01 00 00    	je     ffffffff8000f5f8 <stbds_make_hash_index+0x47e>
ffffffff8000f42b:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
ffffffff8000f432:	48 8b 50 10          	mov    0x10(%rax),%rdx
ffffffff8000f436:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8000f43a:	48 89 50 10          	mov    %rdx,0x10(%rax)
ffffffff8000f43e:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
ffffffff8000f445:	00 
ffffffff8000f446:	e9 94 01 00 00       	jmp    ffffffff8000f5df <stbds_make_hash_index+0x465>
ffffffff8000f44b:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
ffffffff8000f452:	48 8b 50 60          	mov    0x60(%rax),%rdx
ffffffff8000f456:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000f45a:	48 c1 e0 07          	shl    $0x7,%rax
ffffffff8000f45e:	48 01 d0             	add    %rdx,%rax
ffffffff8000f461:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
ffffffff8000f465:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
ffffffff8000f46c:	00 
ffffffff8000f46d:	e9 5d 01 00 00       	jmp    ffffffff8000f5cf <stbds_make_hash_index+0x455>
ffffffff8000f472:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff8000f476:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff8000f47a:	48 83 c2 08          	add    $0x8,%rdx
ffffffff8000f47e:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
ffffffff8000f482:	48 85 c0             	test   %rax,%rax
ffffffff8000f485:	0f 88 3e 01 00 00    	js     ffffffff8000f5c9 <stbds_make_hash_index+0x44f>
ffffffff8000f48b:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff8000f48f:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff8000f493:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
ffffffff8000f497:	48 89 45 98          	mov    %rax,-0x68(%rbp)
ffffffff8000f49b:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8000f49f:	48 8b 50 40          	mov    0x40(%rax),%rdx
ffffffff8000f4a3:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8000f4a7:	48 8b 48 08          	mov    0x8(%rax),%rcx
ffffffff8000f4ab:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff8000f4af:	48 89 ce             	mov    %rcx,%rsi
ffffffff8000f4b2:	48 89 c7             	mov    %rax,%rdi
ffffffff8000f4b5:	e8 62 fc ff ff       	call   ffffffff8000f11c <stbds_probe_position>
ffffffff8000f4ba:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
ffffffff8000f4be:	48 c7 45 d0 08 00 00 	movq   $0x8,-0x30(%rbp)
ffffffff8000f4c5:	00 
ffffffff8000f4c6:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8000f4ca:	48 8b 50 60          	mov    0x60(%rax),%rdx
ffffffff8000f4ce:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8000f4d2:	48 c1 e8 03          	shr    $0x3,%rax
ffffffff8000f4d6:	48 c1 e0 07          	shl    $0x7,%rax
ffffffff8000f4da:	48 01 d0             	add    %rdx,%rax
ffffffff8000f4dd:	48 89 45 90          	mov    %rax,-0x70(%rbp)
ffffffff8000f4e1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8000f4e5:	83 e0 07             	and    $0x7,%eax
ffffffff8000f4e8:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
ffffffff8000f4ec:	eb 4b                	jmp    ffffffff8000f539 <stbds_make_hash_index+0x3bf>
ffffffff8000f4ee:	48 8b 45 90          	mov    -0x70(%rbp),%rax
ffffffff8000f4f2:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
ffffffff8000f4f6:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
ffffffff8000f4fa:	48 85 c0             	test   %rax,%rax
ffffffff8000f4fd:	75 35                	jne    ffffffff8000f534 <stbds_make_hash_index+0x3ba>
ffffffff8000f4ff:	48 8b 45 90          	mov    -0x70(%rbp),%rax
ffffffff8000f503:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
ffffffff8000f507:	48 8b 4d 98          	mov    -0x68(%rbp),%rcx
ffffffff8000f50b:	48 89 0c d0          	mov    %rcx,(%rax,%rdx,8)
ffffffff8000f50f:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff8000f513:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff8000f517:	48 83 c2 08          	add    $0x8,%rdx
ffffffff8000f51b:	48 8b 0c d0          	mov    (%rax,%rdx,8),%rcx
ffffffff8000f51f:	48 8b 45 90          	mov    -0x70(%rbp),%rax
ffffffff8000f523:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
ffffffff8000f527:	48 83 c2 08          	add    $0x8,%rdx
ffffffff8000f52b:	48 89 0c d0          	mov    %rcx,(%rax,%rdx,8)
ffffffff8000f52f:	e9 96 00 00 00       	jmp    ffffffff8000f5ca <stbds_make_hash_index+0x450>
ffffffff8000f534:	48 83 45 c8 01       	addq   $0x1,-0x38(%rbp)
ffffffff8000f539:	48 83 7d c8 07       	cmpq   $0x7,-0x38(%rbp)
ffffffff8000f53e:	76 ae                	jbe    ffffffff8000f4ee <stbds_make_hash_index+0x374>
ffffffff8000f540:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8000f544:	83 e0 07             	and    $0x7,%eax
ffffffff8000f547:	48 89 45 88          	mov    %rax,-0x78(%rbp)
ffffffff8000f54b:	48 c7 45 c8 00 00 00 	movq   $0x0,-0x38(%rbp)
ffffffff8000f552:	00 
ffffffff8000f553:	eb 48                	jmp    ffffffff8000f59d <stbds_make_hash_index+0x423>
ffffffff8000f555:	48 8b 45 90          	mov    -0x70(%rbp),%rax
ffffffff8000f559:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
ffffffff8000f55d:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
ffffffff8000f561:	48 85 c0             	test   %rax,%rax
ffffffff8000f564:	75 32                	jne    ffffffff8000f598 <stbds_make_hash_index+0x41e>
ffffffff8000f566:	48 8b 45 90          	mov    -0x70(%rbp),%rax
ffffffff8000f56a:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
ffffffff8000f56e:	48 8b 4d 98          	mov    -0x68(%rbp),%rcx
ffffffff8000f572:	48 89 0c d0          	mov    %rcx,(%rax,%rdx,8)
ffffffff8000f576:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff8000f57a:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff8000f57e:	48 83 c2 08          	add    $0x8,%rdx
ffffffff8000f582:	48 8b 0c d0          	mov    (%rax,%rdx,8),%rcx
ffffffff8000f586:	48 8b 45 90          	mov    -0x70(%rbp),%rax
ffffffff8000f58a:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
ffffffff8000f58e:	48 83 c2 08          	add    $0x8,%rdx
ffffffff8000f592:	48 89 0c d0          	mov    %rcx,(%rax,%rdx,8)
ffffffff8000f596:	eb 32                	jmp    ffffffff8000f5ca <stbds_make_hash_index+0x450>
ffffffff8000f598:	48 83 45 c8 01       	addq   $0x1,-0x38(%rbp)
ffffffff8000f59d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8000f5a1:	48 3b 45 88          	cmp    -0x78(%rbp),%rax
ffffffff8000f5a5:	72 ae                	jb     ffffffff8000f555 <stbds_make_hash_index+0x3db>
ffffffff8000f5a7:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8000f5ab:	48 01 45 d8          	add    %rax,-0x28(%rbp)
ffffffff8000f5af:	48 83 45 d0 08       	addq   $0x8,-0x30(%rbp)
ffffffff8000f5b4:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8000f5b8:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff8000f5bc:	48 83 e8 01          	sub    $0x1,%rax
ffffffff8000f5c0:	48 21 45 d8          	and    %rax,-0x28(%rbp)
ffffffff8000f5c4:	e9 fd fe ff ff       	jmp    ffffffff8000f4c6 <stbds_make_hash_index+0x34c>
ffffffff8000f5c9:	90                   	nop
ffffffff8000f5ca:	48 83 45 e0 01       	addq   $0x1,-0x20(%rbp)
ffffffff8000f5cf:	48 83 7d e0 07       	cmpq   $0x7,-0x20(%rbp)
ffffffff8000f5d4:	0f 86 98 fe ff ff    	jbe    ffffffff8000f472 <stbds_make_hash_index+0x2f8>
ffffffff8000f5da:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
ffffffff8000f5df:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
ffffffff8000f5e6:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff8000f5ea:	48 c1 e8 03          	shr    $0x3,%rax
ffffffff8000f5ee:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
ffffffff8000f5f2:	0f 82 53 fe ff ff    	jb     ffffffff8000f44b <stbds_make_hash_index+0x2d1>
ffffffff8000f5f8:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8000f5fc:	c9                   	leave  
ffffffff8000f5fd:	c3                   	ret    

ffffffff8000f5fe <stbds_hash_string>:
ffffffff8000f5fe:	f3 0f 1e fa          	endbr64 
ffffffff8000f602:	55                   	push   %rbp
ffffffff8000f603:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000f606:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff8000f60a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff8000f60e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
ffffffff8000f612:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8000f616:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8000f61a:	eb 24                	jmp    ffffffff8000f640 <stbds_hash_string+0x42>
ffffffff8000f61c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000f620:	48 c1 c0 09          	rol    $0x9,%rax
ffffffff8000f624:	48 89 c1             	mov    %rax,%rcx
ffffffff8000f627:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000f62b:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffff8000f62f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
ffffffff8000f633:	0f b6 00             	movzbl (%rax),%eax
ffffffff8000f636:	0f b6 c0             	movzbl %al,%eax
ffffffff8000f639:	48 01 c8             	add    %rcx,%rax
ffffffff8000f63c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8000f640:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000f644:	0f b6 00             	movzbl (%rax),%eax
ffffffff8000f647:	84 c0                	test   %al,%al
ffffffff8000f649:	75 d1                	jne    ffffffff8000f61c <stbds_hash_string+0x1e>
ffffffff8000f64b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8000f64f:	48 31 45 f8          	xor    %rax,-0x8(%rbp)
ffffffff8000f653:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000f657:	48 c1 e0 12          	shl    $0x12,%rax
ffffffff8000f65b:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
ffffffff8000f65f:	48 83 e8 01          	sub    $0x1,%rax
ffffffff8000f663:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8000f667:	48 c1 4d f8 1f       	rorq   $0x1f,-0x8(%rbp)
ffffffff8000f66c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff8000f670:	48 89 d0             	mov    %rdx,%rax
ffffffff8000f673:	48 c1 e0 02          	shl    $0x2,%rax
ffffffff8000f677:	48 01 d0             	add    %rdx,%rax
ffffffff8000f67a:	48 c1 e0 02          	shl    $0x2,%rax
ffffffff8000f67e:	48 01 d0             	add    %rdx,%rax
ffffffff8000f681:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8000f685:	48 c1 4d f8 0b       	rorq   $0xb,-0x8(%rbp)
ffffffff8000f68a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000f68e:	48 c1 e0 06          	shl    $0x6,%rax
ffffffff8000f692:	48 01 45 f8          	add    %rax,-0x8(%rbp)
ffffffff8000f696:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000f69a:	48 c1 c8 16          	ror    $0x16,%rax
ffffffff8000f69e:	48 31 45 f8          	xor    %rax,-0x8(%rbp)
ffffffff8000f6a2:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff8000f6a6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8000f6aa:	48 01 d0             	add    %rdx,%rax
ffffffff8000f6ad:	c9                   	leave  
ffffffff8000f6ae:	c3                   	ret    

ffffffff8000f6af <stbds_siphash_bytes>:
ffffffff8000f6af:	f3 0f 1e fa          	endbr64 
ffffffff8000f6b3:	55                   	push   %rbp
ffffffff8000f6b4:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000f6b7:	48 83 ec 58          	sub    $0x58,%rsp
ffffffff8000f6bb:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
ffffffff8000f6bf:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
ffffffff8000f6c3:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
ffffffff8000f6c7:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff8000f6cb:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8000f6cf:	48 b8 75 65 73 70 65 	movabs $0x736f6d6570736575,%rax
ffffffff8000f6d6:	6d 6f 73 
ffffffff8000f6d9:	48 33 45 a8          	xor    -0x58(%rbp),%rax
ffffffff8000f6dd:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff8000f6e1:	48 b8 92 90 9b 91 9e 	movabs $0x9b908d9e919b9092,%rax
ffffffff8000f6e8:	8d 90 9b 
ffffffff8000f6eb:	48 33 45 a8          	xor    -0x58(%rbp),%rax
ffffffff8000f6ef:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
ffffffff8000f6f3:	48 b8 61 72 65 6e 65 	movabs $0x6c7967656e657261,%rax
ffffffff8000f6fa:	67 79 6c 
ffffffff8000f6fd:	48 33 45 a8          	xor    -0x58(%rbp),%rax
ffffffff8000f701:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
ffffffff8000f705:	48 b8 8c 9a 8b 86 9d 	movabs $0x8b9a9b9d868b9a8c,%rax
ffffffff8000f70c:	9b 9a 8b 
ffffffff8000f70f:	48 33 45 a8          	xor    -0x58(%rbp),%rax
ffffffff8000f713:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
ffffffff8000f717:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
ffffffff8000f71e:	00 
ffffffff8000f71f:	e9 28 01 00 00       	jmp    ffffffff8000f84c <stbds_siphash_bytes+0x19d>
ffffffff8000f724:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000f728:	0f b6 00             	movzbl (%rax),%eax
ffffffff8000f72b:	0f b6 d0             	movzbl %al,%edx
ffffffff8000f72e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000f732:	48 83 c0 01          	add    $0x1,%rax
ffffffff8000f736:	0f b6 00             	movzbl (%rax),%eax
ffffffff8000f739:	0f b6 c0             	movzbl %al,%eax
ffffffff8000f73c:	c1 e0 08             	shl    $0x8,%eax
ffffffff8000f73f:	09 c2                	or     %eax,%edx
ffffffff8000f741:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000f745:	48 83 c0 02          	add    $0x2,%rax
ffffffff8000f749:	0f b6 00             	movzbl (%rax),%eax
ffffffff8000f74c:	0f b6 c0             	movzbl %al,%eax
ffffffff8000f74f:	c1 e0 10             	shl    $0x10,%eax
ffffffff8000f752:	09 c2                	or     %eax,%edx
ffffffff8000f754:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000f758:	48 83 c0 03          	add    $0x3,%rax
ffffffff8000f75c:	0f b6 00             	movzbl (%rax),%eax
ffffffff8000f75f:	0f b6 c0             	movzbl %al,%eax
ffffffff8000f762:	c1 e0 18             	shl    $0x18,%eax
ffffffff8000f765:	09 d0                	or     %edx,%eax
ffffffff8000f767:	48 98                	cltq   
ffffffff8000f769:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
ffffffff8000f76d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000f771:	48 83 c0 04          	add    $0x4,%rax
ffffffff8000f775:	0f b6 00             	movzbl (%rax),%eax
ffffffff8000f778:	0f b6 d0             	movzbl %al,%edx
ffffffff8000f77b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000f77f:	48 83 c0 05          	add    $0x5,%rax
ffffffff8000f783:	0f b6 00             	movzbl (%rax),%eax
ffffffff8000f786:	0f b6 c0             	movzbl %al,%eax
ffffffff8000f789:	c1 e0 08             	shl    $0x8,%eax
ffffffff8000f78c:	09 c2                	or     %eax,%edx
ffffffff8000f78e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000f792:	48 83 c0 06          	add    $0x6,%rax
ffffffff8000f796:	0f b6 00             	movzbl (%rax),%eax
ffffffff8000f799:	0f b6 c0             	movzbl %al,%eax
ffffffff8000f79c:	c1 e0 10             	shl    $0x10,%eax
ffffffff8000f79f:	09 c2                	or     %eax,%edx
ffffffff8000f7a1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000f7a5:	48 83 c0 07          	add    $0x7,%rax
ffffffff8000f7a9:	0f b6 00             	movzbl (%rax),%eax
ffffffff8000f7ac:	0f b6 c0             	movzbl %al,%eax
ffffffff8000f7af:	c1 e0 18             	shl    $0x18,%eax
ffffffff8000f7b2:	09 d0                	or     %edx,%eax
ffffffff8000f7b4:	48 98                	cltq   
ffffffff8000f7b6:	48 c1 e0 20          	shl    $0x20,%rax
ffffffff8000f7ba:	48 09 45 c0          	or     %rax,-0x40(%rbp)
ffffffff8000f7be:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8000f7c2:	48 31 45 c8          	xor    %rax,-0x38(%rbp)
ffffffff8000f7c6:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
ffffffff8000f7cd:	00 
ffffffff8000f7ce:	eb 63                	jmp    ffffffff8000f833 <stbds_siphash_bytes+0x184>
ffffffff8000f7d0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8000f7d4:	48 01 45 e0          	add    %rax,-0x20(%rbp)
ffffffff8000f7d8:	48 c1 45 d8 0d       	rolq   $0xd,-0x28(%rbp)
ffffffff8000f7dd:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8000f7e1:	48 31 45 d8          	xor    %rax,-0x28(%rbp)
ffffffff8000f7e5:	48 c1 45 e0 20       	rolq   $0x20,-0x20(%rbp)
ffffffff8000f7ea:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8000f7ee:	48 01 45 d0          	add    %rax,-0x30(%rbp)
ffffffff8000f7f2:	48 c1 45 c8 10       	rolq   $0x10,-0x38(%rbp)
ffffffff8000f7f7:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8000f7fb:	48 31 45 c8          	xor    %rax,-0x38(%rbp)
ffffffff8000f7ff:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8000f803:	48 01 45 d0          	add    %rax,-0x30(%rbp)
ffffffff8000f807:	48 c1 45 d8 11       	rolq   $0x11,-0x28(%rbp)
ffffffff8000f80c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8000f810:	48 31 45 d8          	xor    %rax,-0x28(%rbp)
ffffffff8000f814:	48 c1 45 d0 20       	rolq   $0x20,-0x30(%rbp)
ffffffff8000f819:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8000f81d:	48 01 45 e0          	add    %rax,-0x20(%rbp)
ffffffff8000f821:	48 c1 45 c8 15       	rolq   $0x15,-0x38(%rbp)
ffffffff8000f826:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8000f82a:	48 31 45 c8          	xor    %rax,-0x38(%rbp)
ffffffff8000f82e:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
ffffffff8000f833:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
ffffffff8000f838:	74 96                	je     ffffffff8000f7d0 <stbds_siphash_bytes+0x121>
ffffffff8000f83a:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8000f83e:	48 31 45 e0          	xor    %rax,-0x20(%rbp)
ffffffff8000f842:	48 83 45 f0 08       	addq   $0x8,-0x10(%rbp)
ffffffff8000f847:	48 83 45 f8 08       	addq   $0x8,-0x8(%rbp)
ffffffff8000f84c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8000f850:	48 83 c0 08          	add    $0x8,%rax
ffffffff8000f854:	48 39 45 b0          	cmp    %rax,-0x50(%rbp)
ffffffff8000f858:	0f 83 c6 fe ff ff    	jae    ffffffff8000f724 <stbds_siphash_bytes+0x75>
ffffffff8000f85e:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
ffffffff8000f862:	48 c1 e0 38          	shl    $0x38,%rax
ffffffff8000f866:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
ffffffff8000f86a:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
ffffffff8000f86e:	48 2b 45 f0          	sub    -0x10(%rbp),%rax
ffffffff8000f872:	48 83 f8 07          	cmp    $0x7,%rax
ffffffff8000f876:	0f 87 b7 00 00 00    	ja     ffffffff8000f933 <stbds_siphash_bytes+0x284>
ffffffff8000f87c:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
ffffffff8000f883:	00 
ffffffff8000f884:	48 8d 05 15 e0 02 00 	lea    0x2e015(%rip),%rax        # ffffffff8003d8a0 <__FUNCTION__.0.lto_priv.9+0x9>
ffffffff8000f88b:	8b 04 02             	mov    (%rdx,%rax,1),%eax
ffffffff8000f88e:	48 98                	cltq   
ffffffff8000f890:	48 8d 15 09 e0 02 00 	lea    0x2e009(%rip),%rdx        # ffffffff8003d8a0 <__FUNCTION__.0.lto_priv.9+0x9>
ffffffff8000f897:	48 01 d0             	add    %rdx,%rax
ffffffff8000f89a:	3e ff e0             	notrack jmp *%rax
ffffffff8000f89d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000f8a1:	48 83 c0 06          	add    $0x6,%rax
ffffffff8000f8a5:	0f b6 00             	movzbl (%rax),%eax
ffffffff8000f8a8:	0f b6 c0             	movzbl %al,%eax
ffffffff8000f8ab:	48 c1 e0 30          	shl    $0x30,%rax
ffffffff8000f8af:	48 09 45 c0          	or     %rax,-0x40(%rbp)
ffffffff8000f8b3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000f8b7:	48 83 c0 05          	add    $0x5,%rax
ffffffff8000f8bb:	0f b6 00             	movzbl (%rax),%eax
ffffffff8000f8be:	0f b6 c0             	movzbl %al,%eax
ffffffff8000f8c1:	48 c1 e0 28          	shl    $0x28,%rax
ffffffff8000f8c5:	48 09 45 c0          	or     %rax,-0x40(%rbp)
ffffffff8000f8c9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000f8cd:	48 83 c0 04          	add    $0x4,%rax
ffffffff8000f8d1:	0f b6 00             	movzbl (%rax),%eax
ffffffff8000f8d4:	0f b6 c0             	movzbl %al,%eax
ffffffff8000f8d7:	48 c1 e0 20          	shl    $0x20,%rax
ffffffff8000f8db:	48 09 45 c0          	or     %rax,-0x40(%rbp)
ffffffff8000f8df:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000f8e3:	48 83 c0 03          	add    $0x3,%rax
ffffffff8000f8e7:	0f b6 00             	movzbl (%rax),%eax
ffffffff8000f8ea:	0f b6 c0             	movzbl %al,%eax
ffffffff8000f8ed:	c1 e0 18             	shl    $0x18,%eax
ffffffff8000f8f0:	48 98                	cltq   
ffffffff8000f8f2:	48 09 45 c0          	or     %rax,-0x40(%rbp)
ffffffff8000f8f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000f8fa:	48 83 c0 02          	add    $0x2,%rax
ffffffff8000f8fe:	0f b6 00             	movzbl (%rax),%eax
ffffffff8000f901:	0f b6 c0             	movzbl %al,%eax
ffffffff8000f904:	c1 e0 10             	shl    $0x10,%eax
ffffffff8000f907:	48 98                	cltq   
ffffffff8000f909:	48 09 45 c0          	or     %rax,-0x40(%rbp)
ffffffff8000f90d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000f911:	48 83 c0 01          	add    $0x1,%rax
ffffffff8000f915:	0f b6 00             	movzbl (%rax),%eax
ffffffff8000f918:	0f b6 c0             	movzbl %al,%eax
ffffffff8000f91b:	c1 e0 08             	shl    $0x8,%eax
ffffffff8000f91e:	48 98                	cltq   
ffffffff8000f920:	48 09 45 c0          	or     %rax,-0x40(%rbp)
ffffffff8000f924:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000f928:	0f b6 00             	movzbl (%rax),%eax
ffffffff8000f92b:	0f b6 c0             	movzbl %al,%eax
ffffffff8000f92e:	48 09 45 c0          	or     %rax,-0x40(%rbp)
ffffffff8000f932:	90                   	nop
ffffffff8000f933:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8000f937:	48 31 45 c8          	xor    %rax,-0x38(%rbp)
ffffffff8000f93b:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
ffffffff8000f942:	00 
ffffffff8000f943:	eb 63                	jmp    ffffffff8000f9a8 <stbds_siphash_bytes+0x2f9>
ffffffff8000f945:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8000f949:	48 01 45 e0          	add    %rax,-0x20(%rbp)
ffffffff8000f94d:	48 c1 45 d8 0d       	rolq   $0xd,-0x28(%rbp)
ffffffff8000f952:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8000f956:	48 31 45 d8          	xor    %rax,-0x28(%rbp)
ffffffff8000f95a:	48 c1 45 e0 20       	rolq   $0x20,-0x20(%rbp)
ffffffff8000f95f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8000f963:	48 01 45 d0          	add    %rax,-0x30(%rbp)
ffffffff8000f967:	48 c1 45 c8 10       	rolq   $0x10,-0x38(%rbp)
ffffffff8000f96c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8000f970:	48 31 45 c8          	xor    %rax,-0x38(%rbp)
ffffffff8000f974:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8000f978:	48 01 45 d0          	add    %rax,-0x30(%rbp)
ffffffff8000f97c:	48 c1 45 d8 11       	rolq   $0x11,-0x28(%rbp)
ffffffff8000f981:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8000f985:	48 31 45 d8          	xor    %rax,-0x28(%rbp)
ffffffff8000f989:	48 c1 45 d0 20       	rolq   $0x20,-0x30(%rbp)
ffffffff8000f98e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8000f992:	48 01 45 e0          	add    %rax,-0x20(%rbp)
ffffffff8000f996:	48 c1 45 c8 15       	rolq   $0x15,-0x38(%rbp)
ffffffff8000f99b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8000f99f:	48 31 45 c8          	xor    %rax,-0x38(%rbp)
ffffffff8000f9a3:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
ffffffff8000f9a8:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
ffffffff8000f9ad:	74 96                	je     ffffffff8000f945 <stbds_siphash_bytes+0x296>
ffffffff8000f9af:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8000f9b3:	48 31 45 e0          	xor    %rax,-0x20(%rbp)
ffffffff8000f9b7:	48 81 75 d0 ff 00 00 	xorq   $0xff,-0x30(%rbp)
ffffffff8000f9be:	00 
ffffffff8000f9bf:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
ffffffff8000f9c6:	00 
ffffffff8000f9c7:	eb 63                	jmp    ffffffff8000fa2c <stbds_siphash_bytes+0x37d>
ffffffff8000f9c9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8000f9cd:	48 01 45 e0          	add    %rax,-0x20(%rbp)
ffffffff8000f9d1:	48 c1 45 d8 0d       	rolq   $0xd,-0x28(%rbp)
ffffffff8000f9d6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8000f9da:	48 31 45 d8          	xor    %rax,-0x28(%rbp)
ffffffff8000f9de:	48 c1 45 e0 20       	rolq   $0x20,-0x20(%rbp)
ffffffff8000f9e3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8000f9e7:	48 01 45 d0          	add    %rax,-0x30(%rbp)
ffffffff8000f9eb:	48 c1 45 c8 10       	rolq   $0x10,-0x38(%rbp)
ffffffff8000f9f0:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8000f9f4:	48 31 45 c8          	xor    %rax,-0x38(%rbp)
ffffffff8000f9f8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8000f9fc:	48 01 45 d0          	add    %rax,-0x30(%rbp)
ffffffff8000fa00:	48 c1 45 d8 11       	rolq   $0x11,-0x28(%rbp)
ffffffff8000fa05:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8000fa09:	48 31 45 d8          	xor    %rax,-0x28(%rbp)
ffffffff8000fa0d:	48 c1 45 d0 20       	rolq   $0x20,-0x30(%rbp)
ffffffff8000fa12:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8000fa16:	48 01 45 e0          	add    %rax,-0x20(%rbp)
ffffffff8000fa1a:	48 c1 45 c8 15       	rolq   $0x15,-0x38(%rbp)
ffffffff8000fa1f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8000fa23:	48 31 45 c8          	xor    %rax,-0x38(%rbp)
ffffffff8000fa27:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
ffffffff8000fa2c:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
ffffffff8000fa31:	74 96                	je     ffffffff8000f9c9 <stbds_siphash_bytes+0x31a>
ffffffff8000fa33:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8000fa37:	48 33 45 d0          	xor    -0x30(%rbp),%rax
ffffffff8000fa3b:	48 33 45 c8          	xor    -0x38(%rbp),%rax
ffffffff8000fa3f:	c9                   	leave  
ffffffff8000fa40:	c3                   	ret    

ffffffff8000fa41 <stbds_hash_bytes>:
ffffffff8000fa41:	f3 0f 1e fa          	endbr64 
ffffffff8000fa45:	55                   	push   %rbp
ffffffff8000fa46:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000fa49:	48 83 ec 38          	sub    $0x38,%rsp
ffffffff8000fa4d:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
ffffffff8000fa51:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
ffffffff8000fa55:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
ffffffff8000fa59:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8000fa5d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8000fa61:	48 83 7d d0 04       	cmpq   $0x4,-0x30(%rbp)
ffffffff8000fa66:	0f 85 a3 00 00 00    	jne    ffffffff8000fb0f <stbds_hash_bytes+0xce>
ffffffff8000fa6c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000fa70:	0f b6 00             	movzbl (%rax),%eax
ffffffff8000fa73:	0f b6 d0             	movzbl %al,%edx
ffffffff8000fa76:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000fa7a:	48 83 c0 01          	add    $0x1,%rax
ffffffff8000fa7e:	0f b6 00             	movzbl (%rax),%eax
ffffffff8000fa81:	0f b6 c0             	movzbl %al,%eax
ffffffff8000fa84:	c1 e0 08             	shl    $0x8,%eax
ffffffff8000fa87:	09 c2                	or     %eax,%edx
ffffffff8000fa89:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000fa8d:	48 83 c0 02          	add    $0x2,%rax
ffffffff8000fa91:	0f b6 00             	movzbl (%rax),%eax
ffffffff8000fa94:	0f b6 c0             	movzbl %al,%eax
ffffffff8000fa97:	c1 e0 10             	shl    $0x10,%eax
ffffffff8000fa9a:	09 c2                	or     %eax,%edx
ffffffff8000fa9c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000faa0:	48 83 c0 03          	add    $0x3,%rax
ffffffff8000faa4:	0f b6 00             	movzbl (%rax),%eax
ffffffff8000faa7:	0f b6 c0             	movzbl %al,%eax
ffffffff8000faaa:	c1 e0 18             	shl    $0x18,%eax
ffffffff8000faad:	09 d0                	or     %edx,%eax
ffffffff8000faaf:	89 45 ec             	mov    %eax,-0x14(%rbp)
ffffffff8000fab2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8000fab6:	31 45 ec             	xor    %eax,-0x14(%rbp)
ffffffff8000fab9:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff8000fabc:	c1 e8 10             	shr    $0x10,%eax
ffffffff8000fabf:	33 45 ec             	xor    -0x14(%rbp),%eax
ffffffff8000fac2:	83 f0 3d             	xor    $0x3d,%eax
ffffffff8000fac5:	89 45 ec             	mov    %eax,-0x14(%rbp)
ffffffff8000fac8:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff8000facb:	c1 e0 03             	shl    $0x3,%eax
ffffffff8000face:	01 45 ec             	add    %eax,-0x14(%rbp)
ffffffff8000fad1:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff8000fad4:	c1 e8 04             	shr    $0x4,%eax
ffffffff8000fad7:	31 45 ec             	xor    %eax,-0x14(%rbp)
ffffffff8000fada:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff8000fadd:	69 c0 2d eb d4 27    	imul   $0x27d4eb2d,%eax,%eax
ffffffff8000fae3:	89 45 ec             	mov    %eax,-0x14(%rbp)
ffffffff8000fae6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8000faea:	31 45 ec             	xor    %eax,-0x14(%rbp)
ffffffff8000faed:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff8000faf0:	c1 e8 0f             	shr    $0xf,%eax
ffffffff8000faf3:	31 45 ec             	xor    %eax,-0x14(%rbp)
ffffffff8000faf6:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff8000faf9:	48 c1 e0 20          	shl    $0x20,%rax
ffffffff8000fafd:	48 89 c2             	mov    %rax,%rdx
ffffffff8000fb00:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff8000fb03:	48 09 d0             	or     %rdx,%rax
ffffffff8000fb06:	48 33 45 c8          	xor    -0x38(%rbp),%rax
ffffffff8000fb0a:	e9 52 01 00 00       	jmp    ffffffff8000fc61 <stbds_hash_bytes+0x220>
ffffffff8000fb0f:	48 83 7d d0 08       	cmpq   $0x8,-0x30(%rbp)
ffffffff8000fb14:	0f 85 30 01 00 00    	jne    ffffffff8000fc4a <stbds_hash_bytes+0x209>
ffffffff8000fb1a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000fb1e:	0f b6 00             	movzbl (%rax),%eax
ffffffff8000fb21:	0f b6 d0             	movzbl %al,%edx
ffffffff8000fb24:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000fb28:	48 83 c0 01          	add    $0x1,%rax
ffffffff8000fb2c:	0f b6 00             	movzbl (%rax),%eax
ffffffff8000fb2f:	0f b6 c0             	movzbl %al,%eax
ffffffff8000fb32:	c1 e0 08             	shl    $0x8,%eax
ffffffff8000fb35:	09 c2                	or     %eax,%edx
ffffffff8000fb37:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000fb3b:	48 83 c0 02          	add    $0x2,%rax
ffffffff8000fb3f:	0f b6 00             	movzbl (%rax),%eax
ffffffff8000fb42:	0f b6 c0             	movzbl %al,%eax
ffffffff8000fb45:	c1 e0 10             	shl    $0x10,%eax
ffffffff8000fb48:	09 c2                	or     %eax,%edx
ffffffff8000fb4a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000fb4e:	48 83 c0 03          	add    $0x3,%rax
ffffffff8000fb52:	0f b6 00             	movzbl (%rax),%eax
ffffffff8000fb55:	0f b6 c0             	movzbl %al,%eax
ffffffff8000fb58:	c1 e0 18             	shl    $0x18,%eax
ffffffff8000fb5b:	09 d0                	or     %edx,%eax
ffffffff8000fb5d:	48 98                	cltq   
ffffffff8000fb5f:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff8000fb63:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000fb67:	48 83 c0 04          	add    $0x4,%rax
ffffffff8000fb6b:	0f b6 00             	movzbl (%rax),%eax
ffffffff8000fb6e:	0f b6 d0             	movzbl %al,%edx
ffffffff8000fb71:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000fb75:	48 83 c0 05          	add    $0x5,%rax
ffffffff8000fb79:	0f b6 00             	movzbl (%rax),%eax
ffffffff8000fb7c:	0f b6 c0             	movzbl %al,%eax
ffffffff8000fb7f:	c1 e0 08             	shl    $0x8,%eax
ffffffff8000fb82:	09 c2                	or     %eax,%edx
ffffffff8000fb84:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000fb88:	48 83 c0 06          	add    $0x6,%rax
ffffffff8000fb8c:	0f b6 00             	movzbl (%rax),%eax
ffffffff8000fb8f:	0f b6 c0             	movzbl %al,%eax
ffffffff8000fb92:	c1 e0 10             	shl    $0x10,%eax
ffffffff8000fb95:	09 c2                	or     %eax,%edx
ffffffff8000fb97:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000fb9b:	48 83 c0 07          	add    $0x7,%rax
ffffffff8000fb9f:	0f b6 00             	movzbl (%rax),%eax
ffffffff8000fba2:	0f b6 c0             	movzbl %al,%eax
ffffffff8000fba5:	c1 e0 18             	shl    $0x18,%eax
ffffffff8000fba8:	09 d0                	or     %edx,%eax
ffffffff8000fbaa:	48 98                	cltq   
ffffffff8000fbac:	48 c1 e0 20          	shl    $0x20,%rax
ffffffff8000fbb0:	48 09 45 f0          	or     %rax,-0x10(%rbp)
ffffffff8000fbb4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8000fbb8:	48 31 45 f0          	xor    %rax,-0x10(%rbp)
ffffffff8000fbbc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8000fbc0:	48 c1 e0 15          	shl    $0x15,%rax
ffffffff8000fbc4:	48 2b 45 f0          	sub    -0x10(%rbp),%rax
ffffffff8000fbc8:	48 83 e8 01          	sub    $0x1,%rax
ffffffff8000fbcc:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff8000fbd0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8000fbd4:	48 c1 c8 18          	ror    $0x18,%rax
ffffffff8000fbd8:	48 31 45 f0          	xor    %rax,-0x10(%rbp)
ffffffff8000fbdc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8000fbe0:	48 69 c0 09 01 00 00 	imul   $0x109,%rax,%rax
ffffffff8000fbe7:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff8000fbeb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8000fbef:	48 c1 c8 0e          	ror    $0xe,%rax
ffffffff8000fbf3:	48 31 45 f0          	xor    %rax,-0x10(%rbp)
ffffffff8000fbf7:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8000fbfb:	48 31 45 f0          	xor    %rax,-0x10(%rbp)
ffffffff8000fbff:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff8000fc03:	48 89 d0             	mov    %rdx,%rax
ffffffff8000fc06:	48 c1 e0 02          	shl    $0x2,%rax
ffffffff8000fc0a:	48 01 d0             	add    %rdx,%rax
ffffffff8000fc0d:	48 c1 e0 02          	shl    $0x2,%rax
ffffffff8000fc11:	48 01 d0             	add    %rdx,%rax
ffffffff8000fc14:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff8000fc18:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8000fc1c:	48 c1 c8 1c          	ror    $0x1c,%rax
ffffffff8000fc20:	48 31 45 f0          	xor    %rax,-0x10(%rbp)
ffffffff8000fc24:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8000fc28:	48 c1 e0 1f          	shl    $0x1f,%rax
ffffffff8000fc2c:	48 01 45 f0          	add    %rax,-0x10(%rbp)
ffffffff8000fc30:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8000fc34:	48 c1 e0 12          	shl    $0x12,%rax
ffffffff8000fc38:	48 2b 45 f0          	sub    -0x10(%rbp),%rax
ffffffff8000fc3c:	48 83 e8 01          	sub    $0x1,%rax
ffffffff8000fc40:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff8000fc44:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8000fc48:	eb 17                	jmp    ffffffff8000fc61 <stbds_hash_bytes+0x220>
ffffffff8000fc4a:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
ffffffff8000fc4e:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
ffffffff8000fc52:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8000fc56:	48 89 ce             	mov    %rcx,%rsi
ffffffff8000fc59:	48 89 c7             	mov    %rax,%rdi
ffffffff8000fc5c:	e8 4e fa ff ff       	call   ffffffff8000f6af <stbds_siphash_bytes>
ffffffff8000fc61:	c9                   	leave  
ffffffff8000fc62:	c3                   	ret    

ffffffff8000fc63 <stbds_is_key_equal>:
ffffffff8000fc63:	f3 0f 1e fa          	endbr64 
ffffffff8000fc67:	55                   	push   %rbp
ffffffff8000fc68:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000fc6b:	48 83 ec 30          	sub    $0x30,%rsp
ffffffff8000fc6f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8000fc73:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff8000fc77:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
ffffffff8000fc7b:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
ffffffff8000fc7f:	4c 89 45 d8          	mov    %r8,-0x28(%rbp)
ffffffff8000fc83:	44 89 4d d4          	mov    %r9d,-0x2c(%rbp)
ffffffff8000fc87:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
ffffffff8000fc8b:	7e 33                	jle    ffffffff8000fcc0 <stbds_is_key_equal+0x5d>
ffffffff8000fc8d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8000fc91:	48 0f af 45 10       	imul   0x10(%rbp),%rax
ffffffff8000fc96:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff8000fc9a:	48 01 c2             	add    %rax,%rdx
ffffffff8000fc9d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000fca1:	48 01 d0             	add    %rdx,%rax
ffffffff8000fca4:	48 8b 10             	mov    (%rax),%rdx
ffffffff8000fca7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000fcab:	48 89 d6             	mov    %rdx,%rsi
ffffffff8000fcae:	48 89 c7             	mov    %rax,%rdi
ffffffff8000fcb1:	e8 00 ed ff ff       	call   ffffffff8000e9b6 <strcmp>
ffffffff8000fcb6:	85 c0                	test   %eax,%eax
ffffffff8000fcb8:	0f 94 c0             	sete   %al
ffffffff8000fcbb:	0f b6 c0             	movzbl %al,%eax
ffffffff8000fcbe:	eb 33                	jmp    ffffffff8000fcf3 <stbds_is_key_equal+0x90>
ffffffff8000fcc0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8000fcc4:	48 0f af 45 10       	imul   0x10(%rbp),%rax
ffffffff8000fcc9:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff8000fccd:	48 01 c2             	add    %rax,%rdx
ffffffff8000fcd0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000fcd4:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
ffffffff8000fcd8:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff8000fcdc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000fce0:	48 89 ce             	mov    %rcx,%rsi
ffffffff8000fce3:	48 89 c7             	mov    %rax,%rdi
ffffffff8000fce6:	e8 35 ec ff ff       	call   ffffffff8000e920 <memcmp>
ffffffff8000fceb:	85 c0                	test   %eax,%eax
ffffffff8000fced:	0f 94 c0             	sete   %al
ffffffff8000fcf0:	0f b6 c0             	movzbl %al,%eax
ffffffff8000fcf3:	c9                   	leave  
ffffffff8000fcf4:	c3                   	ret    

ffffffff8000fcf5 <stbds_hmfree_func>:
ffffffff8000fcf5:	f3 0f 1e fa          	endbr64 
ffffffff8000fcf9:	55                   	push   %rbp
ffffffff8000fcfa:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000fcfd:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff8000fd01:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff8000fd05:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
ffffffff8000fd09:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
ffffffff8000fd0e:	0f 84 9e 00 00 00    	je     ffffffff8000fdb2 <stbds_hmfree_func+0xbd>
ffffffff8000fd14:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000fd18:	48 83 e8 20          	sub    $0x20,%rax
ffffffff8000fd1c:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff8000fd20:	48 85 c0             	test   %rax,%rax
ffffffff8000fd23:	74 67                	je     ffffffff8000fd8c <stbds_hmfree_func+0x97>
ffffffff8000fd25:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000fd29:	48 83 e8 20          	sub    $0x20,%rax
ffffffff8000fd2d:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff8000fd31:	0f b6 40 59          	movzbl 0x59(%rax),%eax
ffffffff8000fd35:	3c 02                	cmp    $0x2,%al
ffffffff8000fd37:	75 3b                	jne    ffffffff8000fd74 <stbds_hmfree_func+0x7f>
ffffffff8000fd39:	48 c7 45 f8 01 00 00 	movq   $0x1,-0x8(%rbp)
ffffffff8000fd40:	00 
ffffffff8000fd41:	eb 20                	jmp    ffffffff8000fd63 <stbds_hmfree_func+0x6e>
ffffffff8000fd43:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8000fd47:	48 0f af 45 f8       	imul   -0x8(%rbp),%rax
ffffffff8000fd4c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff8000fd50:	48 01 d0             	add    %rdx,%rax
ffffffff8000fd53:	48 8b 00             	mov    (%rax),%rax
ffffffff8000fd56:	48 89 c7             	mov    %rax,%rdi
ffffffff8000fd59:	e8 a8 bb ff ff       	call   ffffffff8000b906 <free>
ffffffff8000fd5e:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
ffffffff8000fd63:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000fd67:	48 83 e8 20          	sub    $0x20,%rax
ffffffff8000fd6b:	48 8b 00             	mov    (%rax),%rax
ffffffff8000fd6e:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
ffffffff8000fd72:	72 cf                	jb     ffffffff8000fd43 <stbds_hmfree_func+0x4e>
ffffffff8000fd74:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000fd78:	48 83 e8 20          	sub    $0x20,%rax
ffffffff8000fd7c:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff8000fd80:	48 83 c0 48          	add    $0x48,%rax
ffffffff8000fd84:	48 89 c7             	mov    %rax,%rdi
ffffffff8000fd87:	e8 47 12 00 00       	call   ffffffff80010fd3 <stbds_strreset>
ffffffff8000fd8c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000fd90:	48 83 e8 20          	sub    $0x20,%rax
ffffffff8000fd94:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff8000fd98:	48 89 c7             	mov    %rax,%rdi
ffffffff8000fd9b:	e8 66 bb ff ff       	call   ffffffff8000b906 <free>
ffffffff8000fda0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000fda4:	48 83 e8 20          	sub    $0x20,%rax
ffffffff8000fda8:	48 89 c7             	mov    %rax,%rdi
ffffffff8000fdab:	e8 56 bb ff ff       	call   ffffffff8000b906 <free>
ffffffff8000fdb0:	eb 01                	jmp    ffffffff8000fdb3 <stbds_hmfree_func+0xbe>
ffffffff8000fdb2:	90                   	nop
ffffffff8000fdb3:	c9                   	leave  
ffffffff8000fdb4:	c3                   	ret    

ffffffff8000fdb5 <stbds_hm_find_slot>:
ffffffff8000fdb5:	f3 0f 1e fa          	endbr64 
ffffffff8000fdb9:	55                   	push   %rbp
ffffffff8000fdba:	48 89 e5             	mov    %rsp,%rbp
ffffffff8000fdbd:	48 83 ec 70          	sub    $0x70,%rsp
ffffffff8000fdc1:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
ffffffff8000fdc5:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
ffffffff8000fdc9:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
ffffffff8000fdcd:	48 89 4d a0          	mov    %rcx,-0x60(%rbp)
ffffffff8000fdd1:	4c 89 45 98          	mov    %r8,-0x68(%rbp)
ffffffff8000fdd5:	44 89 4d 94          	mov    %r9d,-0x6c(%rbp)
ffffffff8000fdd9:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
ffffffff8000fddd:	48 f7 d8             	neg    %rax
ffffffff8000fde0:	48 89 c2             	mov    %rax,%rdx
ffffffff8000fde3:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff8000fde7:	48 01 d0             	add    %rdx,%rax
ffffffff8000fdea:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
ffffffff8000fdee:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8000fdf2:	48 83 e8 20          	sub    $0x20,%rax
ffffffff8000fdf6:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff8000fdfa:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
ffffffff8000fdfe:	83 7d 94 00          	cmpl   $0x0,-0x6c(%rbp)
ffffffff8000fe02:	7e 19                	jle    ffffffff8000fe1d <stbds_hm_find_slot+0x68>
ffffffff8000fe04:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8000fe08:	48 8b 50 38          	mov    0x38(%rax),%rdx
ffffffff8000fe0c:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff8000fe10:	48 89 d6             	mov    %rdx,%rsi
ffffffff8000fe13:	48 89 c7             	mov    %rax,%rdi
ffffffff8000fe16:	e8 e3 f7 ff ff       	call   ffffffff8000f5fe <stbds_hash_string>
ffffffff8000fe1b:	eb 1b                	jmp    ffffffff8000fe38 <stbds_hm_find_slot+0x83>
ffffffff8000fe1d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8000fe21:	48 8b 50 38          	mov    0x38(%rax),%rdx
ffffffff8000fe25:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
ffffffff8000fe29:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff8000fe2d:	48 89 ce             	mov    %rcx,%rsi
ffffffff8000fe30:	48 89 c7             	mov    %rax,%rdi
ffffffff8000fe33:	e8 09 fc ff ff       	call   ffffffff8000fa41 <stbds_hash_bytes>
ffffffff8000fe38:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8000fe3c:	48 c7 45 f0 08 00 00 	movq   $0x8,-0x10(%rbp)
ffffffff8000fe43:	00 
ffffffff8000fe44:	48 83 7d f8 01       	cmpq   $0x1,-0x8(%rbp)
ffffffff8000fe49:	77 05                	ja     ffffffff8000fe50 <stbds_hm_find_slot+0x9b>
ffffffff8000fe4b:	48 83 45 f8 02       	addq   $0x2,-0x8(%rbp)
ffffffff8000fe50:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8000fe54:	48 8b 50 40          	mov    0x40(%rax),%rdx
ffffffff8000fe58:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8000fe5c:	48 8b 48 08          	mov    0x8(%rax),%rcx
ffffffff8000fe60:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8000fe64:	48 89 ce             	mov    %rcx,%rsi
ffffffff8000fe67:	48 89 c7             	mov    %rax,%rdi
ffffffff8000fe6a:	e8 ad f2 ff ff       	call   ffffffff8000f11c <stbds_probe_position>
ffffffff8000fe6f:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff8000fe73:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8000fe77:	48 8b 50 60          	mov    0x60(%rax),%rdx
ffffffff8000fe7b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8000fe7f:	48 c1 e8 03          	shr    $0x3,%rax
ffffffff8000fe83:	48 c1 e0 07          	shl    $0x7,%rax
ffffffff8000fe87:	48 01 d0             	add    %rdx,%rax
ffffffff8000fe8a:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
ffffffff8000fe8e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8000fe92:	83 e0 07             	and    $0x7,%eax
ffffffff8000fe95:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff8000fe99:	e9 8e 00 00 00       	jmp    ffffffff8000ff2c <stbds_hm_find_slot+0x177>
ffffffff8000fe9e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8000fea2:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff8000fea6:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
ffffffff8000feaa:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
ffffffff8000feae:	75 5a                	jne    ffffffff8000ff0a <stbds_hm_find_slot+0x155>
ffffffff8000feb0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8000feb4:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff8000feb8:	48 83 c2 08          	add    $0x8,%rdx
ffffffff8000febc:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
ffffffff8000fec0:	49 89 c1             	mov    %rax,%r9
ffffffff8000fec3:	44 8b 45 94          	mov    -0x6c(%rbp),%r8d
ffffffff8000fec7:	48 8b 7d 98          	mov    -0x68(%rbp),%rdi
ffffffff8000fecb:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
ffffffff8000fecf:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
ffffffff8000fed3:	48 8b 75 b0          	mov    -0x50(%rbp),%rsi
ffffffff8000fed7:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff8000fedb:	41 51                	push   %r9
ffffffff8000fedd:	45 89 c1             	mov    %r8d,%r9d
ffffffff8000fee0:	49 89 f8             	mov    %rdi,%r8
ffffffff8000fee3:	48 89 c7             	mov    %rax,%rdi
ffffffff8000fee6:	e8 78 fd ff ff       	call   ffffffff8000fc63 <stbds_is_key_equal>
ffffffff8000feeb:	48 83 c4 08          	add    $0x8,%rsp
ffffffff8000feef:	85 c0                	test   %eax,%eax
ffffffff8000fef1:	74 34                	je     ffffffff8000ff27 <stbds_hm_find_slot+0x172>
ffffffff8000fef3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8000fef7:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
ffffffff8000fefb:	48 89 c2             	mov    %rax,%rdx
ffffffff8000fefe:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000ff02:	48 01 d0             	add    %rdx,%rax
ffffffff8000ff05:	e9 fd 00 00 00       	jmp    ffffffff80010007 <stbds_hm_find_slot+0x252>
ffffffff8000ff0a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8000ff0e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff8000ff12:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
ffffffff8000ff16:	48 85 c0             	test   %rax,%rax
ffffffff8000ff19:	75 0c                	jne    ffffffff8000ff27 <stbds_hm_find_slot+0x172>
ffffffff8000ff1b:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
ffffffff8000ff22:	e9 e0 00 00 00       	jmp    ffffffff80010007 <stbds_hm_find_slot+0x252>
ffffffff8000ff27:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
ffffffff8000ff2c:	48 83 7d e8 07       	cmpq   $0x7,-0x18(%rbp)
ffffffff8000ff31:	0f 86 67 ff ff ff    	jbe    ffffffff8000fe9e <stbds_hm_find_slot+0xe9>
ffffffff8000ff37:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8000ff3b:	83 e0 07             	and    $0x7,%eax
ffffffff8000ff3e:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
ffffffff8000ff42:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
ffffffff8000ff49:	00 
ffffffff8000ff4a:	e9 88 00 00 00       	jmp    ffffffff8000ffd7 <stbds_hm_find_slot+0x222>
ffffffff8000ff4f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8000ff53:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff8000ff57:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
ffffffff8000ff5b:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
ffffffff8000ff5f:	75 57                	jne    ffffffff8000ffb8 <stbds_hm_find_slot+0x203>
ffffffff8000ff61:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8000ff65:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff8000ff69:	48 83 c2 08          	add    $0x8,%rdx
ffffffff8000ff6d:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
ffffffff8000ff71:	49 89 c1             	mov    %rax,%r9
ffffffff8000ff74:	44 8b 45 94          	mov    -0x6c(%rbp),%r8d
ffffffff8000ff78:	48 8b 7d 98          	mov    -0x68(%rbp),%rdi
ffffffff8000ff7c:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
ffffffff8000ff80:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
ffffffff8000ff84:	48 8b 75 b0          	mov    -0x50(%rbp),%rsi
ffffffff8000ff88:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff8000ff8c:	41 51                	push   %r9
ffffffff8000ff8e:	45 89 c1             	mov    %r8d,%r9d
ffffffff8000ff91:	49 89 f8             	mov    %rdi,%r8
ffffffff8000ff94:	48 89 c7             	mov    %rax,%rdi
ffffffff8000ff97:	e8 c7 fc ff ff       	call   ffffffff8000fc63 <stbds_is_key_equal>
ffffffff8000ff9c:	48 83 c4 08          	add    $0x8,%rsp
ffffffff8000ffa0:	85 c0                	test   %eax,%eax
ffffffff8000ffa2:	74 2e                	je     ffffffff8000ffd2 <stbds_hm_find_slot+0x21d>
ffffffff8000ffa4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8000ffa8:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
ffffffff8000ffac:	48 89 c2             	mov    %rax,%rdx
ffffffff8000ffaf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000ffb3:	48 01 d0             	add    %rdx,%rax
ffffffff8000ffb6:	eb 4f                	jmp    ffffffff80010007 <stbds_hm_find_slot+0x252>
ffffffff8000ffb8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8000ffbc:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff8000ffc0:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
ffffffff8000ffc4:	48 85 c0             	test   %rax,%rax
ffffffff8000ffc7:	75 09                	jne    ffffffff8000ffd2 <stbds_hm_find_slot+0x21d>
ffffffff8000ffc9:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
ffffffff8000ffd0:	eb 35                	jmp    ffffffff80010007 <stbds_hm_find_slot+0x252>
ffffffff8000ffd2:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
ffffffff8000ffd7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8000ffdb:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
ffffffff8000ffdf:	0f 82 6a ff ff ff    	jb     ffffffff8000ff4f <stbds_hm_find_slot+0x19a>
ffffffff8000ffe5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8000ffe9:	48 01 45 e0          	add    %rax,-0x20(%rbp)
ffffffff8000ffed:	48 83 45 f0 08       	addq   $0x8,-0x10(%rbp)
ffffffff8000fff2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8000fff6:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff8000fffa:	48 83 e8 01          	sub    $0x1,%rax
ffffffff8000fffe:	48 21 45 e0          	and    %rax,-0x20(%rbp)
ffffffff80010002:	e9 6c fe ff ff       	jmp    ffffffff8000fe73 <stbds_hm_find_slot+0xbe>
ffffffff80010007:	c9                   	leave  
ffffffff80010008:	c3                   	ret    

ffffffff80010009 <stbds_hmget_key_ts>:
ffffffff80010009:	f3 0f 1e fa          	endbr64 
ffffffff8001000d:	55                   	push   %rbp
ffffffff8001000e:	48 89 e5             	mov    %rsp,%rbp
ffffffff80010011:	48 83 ec 60          	sub    $0x60,%rsp
ffffffff80010015:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
ffffffff80010019:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
ffffffff8001001d:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
ffffffff80010021:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
ffffffff80010025:	4c 89 45 a8          	mov    %r8,-0x58(%rbp)
ffffffff80010029:	44 89 4d a4          	mov    %r9d,-0x5c(%rbp)
ffffffff8001002d:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
ffffffff80010034:	00 
ffffffff80010035:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
ffffffff8001003a:	75 6f                	jne    ffffffff800100ab <stbds_hmget_key_ts+0xa2>
ffffffff8001003c:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff80010040:	b9 01 00 00 00       	mov    $0x1,%ecx
ffffffff80010045:	ba 00 00 00 00       	mov    $0x0,%edx
ffffffff8001004a:	48 89 c6             	mov    %rax,%rsi
ffffffff8001004d:	bf 00 00 00 00       	mov    $0x0,%edi
ffffffff80010052:	e8 11 ef ff ff       	call   ffffffff8000ef68 <stbds_arrgrowf>
ffffffff80010057:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
ffffffff8001005b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8001005f:	48 83 e8 20          	sub    $0x20,%rax
ffffffff80010063:	48 8b 10             	mov    (%rax),%rdx
ffffffff80010066:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8001006a:	48 83 e8 20          	sub    $0x20,%rax
ffffffff8001006e:	48 83 c2 01          	add    $0x1,%rdx
ffffffff80010072:	48 89 10             	mov    %rdx,(%rax)
ffffffff80010075:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80010079:	48 89 c1             	mov    %rax,%rcx
ffffffff8001007c:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff80010080:	48 89 c2             	mov    %rax,%rdx
ffffffff80010083:	be 00 00 00 00       	mov    $0x0,%esi
ffffffff80010088:	48 89 cf             	mov    %rcx,%rdi
ffffffff8001008b:	e8 b8 e4 ff ff       	call   ffffffff8000e548 <memset>
ffffffff80010090:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff80010094:	48 c7 00 ff ff ff ff 	movq   $0xffffffffffffffff,(%rax)
ffffffff8001009b:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
ffffffff8001009f:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff800100a3:	48 01 d0             	add    %rdx,%rax
ffffffff800100a6:	e9 b3 00 00 00       	jmp    ffffffff8001015e <stbds_hmget_key_ts+0x155>
ffffffff800100ab:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff800100af:	48 f7 d8             	neg    %rax
ffffffff800100b2:	48 89 c2             	mov    %rax,%rdx
ffffffff800100b5:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff800100b9:	48 01 d0             	add    %rdx,%rax
ffffffff800100bc:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff800100c0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff800100c4:	48 83 e8 20          	sub    $0x20,%rax
ffffffff800100c8:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff800100cc:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff800100d0:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
ffffffff800100d5:	75 0d                	jne    ffffffff800100e4 <stbds_hmget_key_ts+0xdb>
ffffffff800100d7:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff800100db:	48 c7 00 ff ff ff ff 	movq   $0xffffffffffffffff,(%rax)
ffffffff800100e2:	eb 76                	jmp    ffffffff8001015a <stbds_hmget_key_ts+0x151>
ffffffff800100e4:	44 8b 45 a4          	mov    -0x5c(%rbp),%r8d
ffffffff800100e8:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff800100ec:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
ffffffff800100f0:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
ffffffff800100f4:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
ffffffff800100f8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff800100fc:	45 89 c1             	mov    %r8d,%r9d
ffffffff800100ff:	49 89 f8             	mov    %rdi,%r8
ffffffff80010102:	48 89 c7             	mov    %rax,%rdi
ffffffff80010105:	e8 ab fc ff ff       	call   ffffffff8000fdb5 <stbds_hm_find_slot>
ffffffff8001010a:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff8001010e:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
ffffffff80010113:	79 0d                	jns    ffffffff80010122 <stbds_hmget_key_ts+0x119>
ffffffff80010115:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff80010119:	48 c7 00 ff ff ff ff 	movq   $0xffffffffffffffff,(%rax)
ffffffff80010120:	eb 38                	jmp    ffffffff8001015a <stbds_hmget_key_ts+0x151>
ffffffff80010122:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80010126:	48 8b 50 60          	mov    0x60(%rax),%rdx
ffffffff8001012a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8001012e:	48 c1 f8 03          	sar    $0x3,%rax
ffffffff80010132:	48 c1 e0 07          	shl    $0x7,%rax
ffffffff80010136:	48 01 d0             	add    %rdx,%rax
ffffffff80010139:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
ffffffff8001013d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80010141:	83 e0 07             	and    $0x7,%eax
ffffffff80010144:	48 89 c2             	mov    %rax,%rdx
ffffffff80010147:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8001014b:	48 83 c2 08          	add    $0x8,%rdx
ffffffff8001014f:	48 8b 14 d0          	mov    (%rax,%rdx,8),%rdx
ffffffff80010153:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff80010157:	48 89 10             	mov    %rdx,(%rax)
ffffffff8001015a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8001015e:	c9                   	leave  
ffffffff8001015f:	c3                   	ret    

ffffffff80010160 <stbds_hmget_key>:
ffffffff80010160:	f3 0f 1e fa          	endbr64 
ffffffff80010164:	55                   	push   %rbp
ffffffff80010165:	48 89 e5             	mov    %rsp,%rbp
ffffffff80010168:	48 83 ec 40          	sub    $0x40,%rsp
ffffffff8001016c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff80010170:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
ffffffff80010174:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
ffffffff80010178:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
ffffffff8001017c:	44 89 45 cc          	mov    %r8d,-0x34(%rbp)
ffffffff80010180:	44 8b 45 cc          	mov    -0x34(%rbp),%r8d
ffffffff80010184:	48 8d 7d f0          	lea    -0x10(%rbp),%rdi
ffffffff80010188:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
ffffffff8001018c:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff80010190:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
ffffffff80010194:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80010198:	45 89 c1             	mov    %r8d,%r9d
ffffffff8001019b:	49 89 f8             	mov    %rdi,%r8
ffffffff8001019e:	48 89 c7             	mov    %rax,%rdi
ffffffff800101a1:	e8 63 fe ff ff       	call   ffffffff80010009 <stbds_hmget_key_ts>
ffffffff800101a6:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff800101aa:	48 c7 c0 e0 ff ff ff 	mov    $0xffffffffffffffe0,%rax
ffffffff800101b1:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
ffffffff800101b5:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff800101b9:	48 01 d0             	add    %rdx,%rax
ffffffff800101bc:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff800101c0:	48 89 50 18          	mov    %rdx,0x18(%rax)
ffffffff800101c4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff800101c8:	90                   	nop
ffffffff800101c9:	c9                   	leave  
ffffffff800101ca:	c3                   	ret    

ffffffff800101cb <stbds_hmput_default>:
ffffffff800101cb:	f3 0f 1e fa          	endbr64 
ffffffff800101cf:	55                   	push   %rbp
ffffffff800101d0:	48 89 e5             	mov    %rsp,%rbp
ffffffff800101d3:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff800101d7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff800101db:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff800101df:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff800101e4:	74 1a                	je     ffffffff80010200 <stbds_hmput_default+0x35>
ffffffff800101e6:	48 c7 c0 e0 ff ff ff 	mov    $0xffffffffffffffe0,%rax
ffffffff800101ed:	48 2b 45 f0          	sub    -0x10(%rbp),%rax
ffffffff800101f1:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff800101f5:	48 01 d0             	add    %rdx,%rax
ffffffff800101f8:	48 8b 00             	mov    (%rax),%rax
ffffffff800101fb:	48 85 c0             	test   %rax,%rax
ffffffff800101fe:	75 76                	jne    ffffffff80010276 <stbds_hmput_default+0xab>
ffffffff80010200:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff80010205:	74 13                	je     ffffffff8001021a <stbds_hmput_default+0x4f>
ffffffff80010207:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8001020b:	48 f7 d8             	neg    %rax
ffffffff8001020e:	48 89 c2             	mov    %rax,%rdx
ffffffff80010211:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80010215:	48 01 d0             	add    %rdx,%rax
ffffffff80010218:	eb 05                	jmp    ffffffff8001021f <stbds_hmput_default+0x54>
ffffffff8001021a:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001021f:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
ffffffff80010223:	b9 01 00 00 00       	mov    $0x1,%ecx
ffffffff80010228:	ba 00 00 00 00       	mov    $0x0,%edx
ffffffff8001022d:	48 89 c7             	mov    %rax,%rdi
ffffffff80010230:	e8 33 ed ff ff       	call   ffffffff8000ef68 <stbds_arrgrowf>
ffffffff80010235:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff80010239:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001023d:	48 83 e8 20          	sub    $0x20,%rax
ffffffff80010241:	48 8b 10             	mov    (%rax),%rdx
ffffffff80010244:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80010248:	48 83 e8 20          	sub    $0x20,%rax
ffffffff8001024c:	48 83 c2 01          	add    $0x1,%rdx
ffffffff80010250:	48 89 10             	mov    %rdx,(%rax)
ffffffff80010253:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80010257:	48 89 c1             	mov    %rax,%rcx
ffffffff8001025a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8001025e:	48 89 c2             	mov    %rax,%rdx
ffffffff80010261:	be 00 00 00 00       	mov    $0x0,%esi
ffffffff80010266:	48 89 cf             	mov    %rcx,%rdi
ffffffff80010269:	e8 da e2 ff ff       	call   ffffffff8000e548 <memset>
ffffffff8001026e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80010272:	48 01 45 f8          	add    %rax,-0x8(%rbp)
ffffffff80010276:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001027a:	c9                   	leave  
ffffffff8001027b:	c3                   	ret    

ffffffff8001027c <stbds_hmput_key>:
ffffffff8001027c:	f3 0f 1e fa          	endbr64 
ffffffff80010280:	55                   	push   %rbp
ffffffff80010281:	48 89 e5             	mov    %rsp,%rbp
ffffffff80010284:	53                   	push   %rbx
ffffffff80010285:	48 81 ec a8 00 00 00 	sub    $0xa8,%rsp
ffffffff8001028c:	48 89 bd 78 ff ff ff 	mov    %rdi,-0x88(%rbp)
ffffffff80010293:	48 89 b5 70 ff ff ff 	mov    %rsi,-0x90(%rbp)
ffffffff8001029a:	48 89 95 68 ff ff ff 	mov    %rdx,-0x98(%rbp)
ffffffff800102a1:	48 89 8d 60 ff ff ff 	mov    %rcx,-0xa0(%rbp)
ffffffff800102a8:	44 89 85 5c ff ff ff 	mov    %r8d,-0xa4(%rbp)
ffffffff800102af:	48 c7 45 b8 00 00 00 	movq   $0x0,-0x48(%rbp)
ffffffff800102b6:	00 
ffffffff800102b7:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
ffffffff800102be:	48 85 c0             	test   %rax,%rax
ffffffff800102c1:	75 7e                	jne    ffffffff80010341 <stbds_hmput_key+0xc5>
ffffffff800102c3:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
ffffffff800102ca:	b9 01 00 00 00       	mov    $0x1,%ecx
ffffffff800102cf:	ba 00 00 00 00       	mov    $0x0,%edx
ffffffff800102d4:	48 89 c6             	mov    %rax,%rsi
ffffffff800102d7:	bf 00 00 00 00       	mov    $0x0,%edi
ffffffff800102dc:	e8 87 ec ff ff       	call   ffffffff8000ef68 <stbds_arrgrowf>
ffffffff800102e1:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
ffffffff800102e8:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
ffffffff800102ef:	48 89 c1             	mov    %rax,%rcx
ffffffff800102f2:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
ffffffff800102f9:	48 89 c2             	mov    %rax,%rdx
ffffffff800102fc:	be 00 00 00 00       	mov    $0x0,%esi
ffffffff80010301:	48 89 cf             	mov    %rcx,%rdi
ffffffff80010304:	e8 3f e2 ff ff       	call   ffffffff8000e548 <memset>
ffffffff80010309:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
ffffffff80010310:	48 83 e8 20          	sub    $0x20,%rax
ffffffff80010314:	48 8b 10             	mov    (%rax),%rdx
ffffffff80010317:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
ffffffff8001031e:	48 83 e8 20          	sub    $0x20,%rax
ffffffff80010322:	48 83 c2 01          	add    $0x1,%rdx
ffffffff80010326:	48 89 10             	mov    %rdx,(%rax)
ffffffff80010329:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
ffffffff80010330:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
ffffffff80010337:	48 01 d0             	add    %rdx,%rax
ffffffff8001033a:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
ffffffff80010341:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
ffffffff80010348:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
ffffffff8001034c:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
ffffffff80010353:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
ffffffff8001035a:	48 f7 d8             	neg    %rax
ffffffff8001035d:	48 01 d0             	add    %rdx,%rax
ffffffff80010360:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
ffffffff80010367:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
ffffffff8001036e:	48 83 e8 20          	sub    $0x20,%rax
ffffffff80010372:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff80010376:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff8001037a:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
ffffffff8001037f:	74 15                	je     ffffffff80010396 <stbds_hmput_key+0x11a>
ffffffff80010381:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80010385:	48 8b 50 10          	mov    0x10(%rax),%rdx
ffffffff80010389:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001038d:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff80010391:	48 39 c2             	cmp    %rax,%rdx
ffffffff80010394:	72 77                	jb     ffffffff8001040d <stbds_hmput_key+0x191>
ffffffff80010396:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
ffffffff8001039b:	74 0d                	je     ffffffff800103aa <stbds_hmput_key+0x12e>
ffffffff8001039d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800103a1:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff800103a5:	48 01 c0             	add    %rax,%rax
ffffffff800103a8:	eb 05                	jmp    ffffffff800103af <stbds_hmput_key+0x133>
ffffffff800103aa:	b8 08 00 00 00       	mov    $0x8,%eax
ffffffff800103af:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
ffffffff800103b3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff800103b7:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff800103bb:	48 89 d6             	mov    %rdx,%rsi
ffffffff800103be:	48 89 c7             	mov    %rax,%rdi
ffffffff800103c1:	e8 b4 ed ff ff       	call   ffffffff8000f17a <stbds_make_hash_index>
ffffffff800103c6:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
ffffffff800103ca:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
ffffffff800103cf:	74 0e                	je     ffffffff800103df <stbds_hmput_key+0x163>
ffffffff800103d1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800103d5:	48 89 c7             	mov    %rax,%rdi
ffffffff800103d8:	e8 29 b5 ff ff       	call   ffffffff8000b906 <free>
ffffffff800103dd:	eb 13                	jmp    ffffffff800103f2 <stbds_hmput_key+0x176>
ffffffff800103df:	83 bd 5c ff ff ff 00 	cmpl   $0x0,-0xa4(%rbp)
ffffffff800103e6:	0f 9f c0             	setg   %al
ffffffff800103e9:	89 c2                	mov    %eax,%edx
ffffffff800103eb:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff800103ef:	88 50 59             	mov    %dl,0x59(%rax)
ffffffff800103f2:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff800103f6:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff800103fa:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
ffffffff80010401:	48 83 e8 20          	sub    $0x20,%rax
ffffffff80010405:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff80010409:	48 89 50 10          	mov    %rdx,0x10(%rax)
ffffffff8001040d:	83 bd 5c ff ff ff 00 	cmpl   $0x0,-0xa4(%rbp)
ffffffff80010414:	7e 1c                	jle    ffffffff80010432 <stbds_hmput_key+0x1b6>
ffffffff80010416:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001041a:	48 8b 50 38          	mov    0x38(%rax),%rdx
ffffffff8001041e:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
ffffffff80010425:	48 89 d6             	mov    %rdx,%rsi
ffffffff80010428:	48 89 c7             	mov    %rax,%rdi
ffffffff8001042b:	e8 ce f1 ff ff       	call   ffffffff8000f5fe <stbds_hash_string>
ffffffff80010430:	eb 21                	jmp    ffffffff80010453 <stbds_hmput_key+0x1d7>
ffffffff80010432:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80010436:	48 8b 50 38          	mov    0x38(%rax),%rdx
ffffffff8001043a:	48 8b 8d 60 ff ff ff 	mov    -0xa0(%rbp),%rcx
ffffffff80010441:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
ffffffff80010448:	48 89 ce             	mov    %rcx,%rsi
ffffffff8001044b:	48 89 c7             	mov    %rax,%rdi
ffffffff8001044e:	e8 ee f5 ff ff       	call   ffffffff8000fa41 <stbds_hash_bytes>
ffffffff80010453:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff80010457:	48 c7 45 d8 08 00 00 	movq   $0x8,-0x28(%rbp)
ffffffff8001045e:	00 
ffffffff8001045f:	48 c7 45 c8 ff ff ff 	movq   $0xffffffffffffffff,-0x38(%rbp)
ffffffff80010466:	ff 
ffffffff80010467:	48 83 7d e0 01       	cmpq   $0x1,-0x20(%rbp)
ffffffff8001046c:	77 05                	ja     ffffffff80010473 <stbds_hmput_key+0x1f7>
ffffffff8001046e:	48 83 45 e0 02       	addq   $0x2,-0x20(%rbp)
ffffffff80010473:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80010477:	48 8b 50 40          	mov    0x40(%rax),%rdx
ffffffff8001047b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001047f:	48 8b 48 08          	mov    0x8(%rax),%rcx
ffffffff80010483:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80010487:	48 89 ce             	mov    %rcx,%rsi
ffffffff8001048a:	48 89 c7             	mov    %rax,%rdi
ffffffff8001048d:	e8 8a ec ff ff       	call   ffffffff8000f11c <stbds_probe_position>
ffffffff80010492:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
ffffffff80010496:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001049a:	48 8b 50 60          	mov    0x60(%rax),%rdx
ffffffff8001049e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff800104a2:	48 c1 e8 03          	shr    $0x3,%rax
ffffffff800104a6:	48 c1 e0 07          	shl    $0x7,%rax
ffffffff800104aa:	48 01 d0             	add    %rdx,%rax
ffffffff800104ad:	48 89 45 98          	mov    %rax,-0x68(%rbp)
ffffffff800104b1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff800104b5:	83 e0 07             	and    $0x7,%eax
ffffffff800104b8:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
ffffffff800104bc:	e9 4a 01 00 00       	jmp    ffffffff8001060b <stbds_hmput_key+0x38f>
ffffffff800104c1:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff800104c5:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
ffffffff800104c9:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
ffffffff800104cd:	48 39 45 e0          	cmp    %rax,-0x20(%rbp)
ffffffff800104d1:	0f 85 d0 00 00 00    	jne    ffffffff800105a7 <stbds_hmput_key+0x32b>
ffffffff800104d7:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff800104db:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
ffffffff800104df:	48 83 c2 08          	add    $0x8,%rdx
ffffffff800104e3:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
ffffffff800104e7:	49 89 c1             	mov    %rax,%r9
ffffffff800104ea:	44 8b 85 5c ff ff ff 	mov    -0xa4(%rbp),%r8d
ffffffff800104f1:	48 8b 7d b8          	mov    -0x48(%rbp),%rdi
ffffffff800104f5:	48 8b 8d 60 ff ff ff 	mov    -0xa0(%rbp),%rcx
ffffffff800104fc:	48 8b 95 68 ff ff ff 	mov    -0x98(%rbp),%rdx
ffffffff80010503:	48 8b b5 70 ff ff ff 	mov    -0x90(%rbp),%rsi
ffffffff8001050a:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
ffffffff8001050e:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80010512:	41 51                	push   %r9
ffffffff80010514:	45 89 c1             	mov    %r8d,%r9d
ffffffff80010517:	49 89 f8             	mov    %rdi,%r8
ffffffff8001051a:	48 89 c7             	mov    %rax,%rdi
ffffffff8001051d:	e8 41 f7 ff ff       	call   ffffffff8000fc63 <stbds_is_key_equal>
ffffffff80010522:	48 83 c4 10          	add    $0x10,%rsp
ffffffff80010526:	85 c0                	test   %eax,%eax
ffffffff80010528:	0f 84 d8 00 00 00    	je     ffffffff80010606 <stbds_hmput_key+0x38a>
ffffffff8001052e:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
ffffffff80010535:	48 83 e8 20          	sub    $0x20,%rax
ffffffff80010539:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
ffffffff8001053d:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
ffffffff80010541:	48 83 c1 08          	add    $0x8,%rcx
ffffffff80010545:	48 8b 14 ca          	mov    (%rdx,%rcx,8),%rdx
ffffffff80010549:	48 89 50 18          	mov    %rdx,0x18(%rax)
ffffffff8001054d:	83 bd 5c ff ff ff 00 	cmpl   $0x0,-0xa4(%rbp)
ffffffff80010554:	7e 3b                	jle    ffffffff80010591 <stbds_hmput_key+0x315>
ffffffff80010556:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff8001055a:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
ffffffff8001055e:	48 83 c2 08          	add    $0x8,%rdx
ffffffff80010562:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
ffffffff80010566:	48 0f af 85 70 ff ff 	imul   -0x90(%rbp),%rax
ffffffff8001056d:	ff 
ffffffff8001056e:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
ffffffff80010572:	48 01 c2             	add    %rax,%rdx
ffffffff80010575:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
ffffffff80010579:	48 01 c2             	add    %rax,%rdx
ffffffff8001057c:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
ffffffff80010583:	48 83 e8 20          	sub    $0x20,%rax
ffffffff80010587:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff8001058b:	48 8b 12             	mov    (%rdx),%rdx
ffffffff8001058e:	48 89 10             	mov    %rdx,(%rax)
ffffffff80010591:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
ffffffff80010598:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
ffffffff8001059f:	48 01 d0             	add    %rdx,%rax
ffffffff800105a2:	e9 34 04 00 00       	jmp    ffffffff800109db <stbds_hmput_key+0x75f>
ffffffff800105a7:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff800105ab:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
ffffffff800105af:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
ffffffff800105b3:	48 85 c0             	test   %rax,%rax
ffffffff800105b6:	75 1b                	jne    ffffffff800105d3 <stbds_hmput_key+0x357>
ffffffff800105b8:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff800105bc:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
ffffffff800105c0:	48 89 c2             	mov    %rax,%rdx
ffffffff800105c3:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff800105c7:	48 01 d0             	add    %rdx,%rax
ffffffff800105ca:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
ffffffff800105ce:	e9 8e 01 00 00       	jmp    ffffffff80010761 <stbds_hmput_key+0x4e5>
ffffffff800105d3:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
ffffffff800105d8:	79 2c                	jns    ffffffff80010606 <stbds_hmput_key+0x38a>
ffffffff800105da:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff800105de:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
ffffffff800105e2:	48 83 c2 08          	add    $0x8,%rdx
ffffffff800105e6:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
ffffffff800105ea:	48 83 f8 fe          	cmp    $0xfffffffffffffffe,%rax
ffffffff800105ee:	75 16                	jne    ffffffff80010606 <stbds_hmput_key+0x38a>
ffffffff800105f0:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff800105f4:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
ffffffff800105f8:	48 89 c2             	mov    %rax,%rdx
ffffffff800105fb:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff800105ff:	48 01 d0             	add    %rdx,%rax
ffffffff80010602:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
ffffffff80010606:	48 83 45 c0 01       	addq   $0x1,-0x40(%rbp)
ffffffff8001060b:	48 83 7d c0 07       	cmpq   $0x7,-0x40(%rbp)
ffffffff80010610:	0f 86 ab fe ff ff    	jbe    ffffffff800104c1 <stbds_hmput_key+0x245>
ffffffff80010616:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8001061a:	83 e0 07             	and    $0x7,%eax
ffffffff8001061d:	48 89 45 90          	mov    %rax,-0x70(%rbp)
ffffffff80010621:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
ffffffff80010628:	00 
ffffffff80010629:	e9 03 01 00 00       	jmp    ffffffff80010731 <stbds_hmput_key+0x4b5>
ffffffff8001062e:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff80010632:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
ffffffff80010636:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
ffffffff8001063a:	48 39 45 e0          	cmp    %rax,-0x20(%rbp)
ffffffff8001063e:	0f 85 8c 00 00 00    	jne    ffffffff800106d0 <stbds_hmput_key+0x454>
ffffffff80010644:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff80010648:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
ffffffff8001064c:	48 83 c2 08          	add    $0x8,%rdx
ffffffff80010650:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
ffffffff80010654:	49 89 c1             	mov    %rax,%r9
ffffffff80010657:	44 8b 85 5c ff ff ff 	mov    -0xa4(%rbp),%r8d
ffffffff8001065e:	48 8b 7d b8          	mov    -0x48(%rbp),%rdi
ffffffff80010662:	48 8b 8d 60 ff ff ff 	mov    -0xa0(%rbp),%rcx
ffffffff80010669:	48 8b 95 68 ff ff ff 	mov    -0x98(%rbp),%rdx
ffffffff80010670:	48 8b b5 70 ff ff ff 	mov    -0x90(%rbp),%rsi
ffffffff80010677:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
ffffffff8001067b:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff8001067f:	41 51                	push   %r9
ffffffff80010681:	45 89 c1             	mov    %r8d,%r9d
ffffffff80010684:	49 89 f8             	mov    %rdi,%r8
ffffffff80010687:	48 89 c7             	mov    %rax,%rdi
ffffffff8001068a:	e8 d4 f5 ff ff       	call   ffffffff8000fc63 <stbds_is_key_equal>
ffffffff8001068f:	48 83 c4 10          	add    $0x10,%rsp
ffffffff80010693:	85 c0                	test   %eax,%eax
ffffffff80010695:	0f 84 91 00 00 00    	je     ffffffff8001072c <stbds_hmput_key+0x4b0>
ffffffff8001069b:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
ffffffff800106a2:	48 83 e8 20          	sub    $0x20,%rax
ffffffff800106a6:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
ffffffff800106aa:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
ffffffff800106ae:	48 83 c1 08          	add    $0x8,%rcx
ffffffff800106b2:	48 8b 14 ca          	mov    (%rdx,%rcx,8),%rdx
ffffffff800106b6:	48 89 50 18          	mov    %rdx,0x18(%rax)
ffffffff800106ba:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
ffffffff800106c1:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
ffffffff800106c8:	48 01 d0             	add    %rdx,%rax
ffffffff800106cb:	e9 0b 03 00 00       	jmp    ffffffff800109db <stbds_hmput_key+0x75f>
ffffffff800106d0:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff800106d4:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
ffffffff800106d8:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
ffffffff800106dc:	48 85 c0             	test   %rax,%rax
ffffffff800106df:	75 18                	jne    ffffffff800106f9 <stbds_hmput_key+0x47d>
ffffffff800106e1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff800106e5:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
ffffffff800106e9:	48 89 c2             	mov    %rax,%rdx
ffffffff800106ec:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff800106f0:	48 01 d0             	add    %rdx,%rax
ffffffff800106f3:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
ffffffff800106f7:	eb 68                	jmp    ffffffff80010761 <stbds_hmput_key+0x4e5>
ffffffff800106f9:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
ffffffff800106fe:	79 2c                	jns    ffffffff8001072c <stbds_hmput_key+0x4b0>
ffffffff80010700:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff80010704:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
ffffffff80010708:	48 83 c2 08          	add    $0x8,%rdx
ffffffff8001070c:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
ffffffff80010710:	48 83 f8 fe          	cmp    $0xfffffffffffffffe,%rax
ffffffff80010714:	75 16                	jne    ffffffff8001072c <stbds_hmput_key+0x4b0>
ffffffff80010716:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8001071a:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
ffffffff8001071e:	48 89 c2             	mov    %rax,%rdx
ffffffff80010721:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff80010725:	48 01 d0             	add    %rdx,%rax
ffffffff80010728:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
ffffffff8001072c:	48 83 45 c0 01       	addq   $0x1,-0x40(%rbp)
ffffffff80010731:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff80010735:	48 3b 45 90          	cmp    -0x70(%rbp),%rax
ffffffff80010739:	0f 82 ef fe ff ff    	jb     ffffffff8001062e <stbds_hmput_key+0x3b2>
ffffffff8001073f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80010743:	48 01 45 d0          	add    %rax,-0x30(%rbp)
ffffffff80010747:	48 83 45 d8 08       	addq   $0x8,-0x28(%rbp)
ffffffff8001074c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80010750:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff80010754:	48 83 e8 01          	sub    $0x1,%rax
ffffffff80010758:	48 21 45 d0          	and    %rax,-0x30(%rbp)
ffffffff8001075c:	e9 35 fd ff ff       	jmp    ffffffff80010496 <stbds_hmput_key+0x21a>
ffffffff80010761:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
ffffffff80010766:	78 1c                	js     ffffffff80010784 <stbds_hmput_key+0x508>
ffffffff80010768:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8001076c:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
ffffffff80010770:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80010774:	48 8b 40 28          	mov    0x28(%rax),%rax
ffffffff80010778:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
ffffffff8001077c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80010780:	48 89 50 28          	mov    %rdx,0x28(%rax)
ffffffff80010784:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80010788:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff8001078c:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffff80010790:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80010794:	48 89 50 10          	mov    %rdx,0x10(%rax)
ffffffff80010798:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
ffffffff8001079f:	48 85 c0             	test   %rax,%rax
ffffffff800107a2:	74 10                	je     ffffffff800107b4 <stbds_hmput_key+0x538>
ffffffff800107a4:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
ffffffff800107ab:	48 83 e8 20          	sub    $0x20,%rax
ffffffff800107af:	48 8b 00             	mov    (%rax),%rax
ffffffff800107b2:	eb 05                	jmp    ffffffff800107b9 <stbds_hmput_key+0x53d>
ffffffff800107b4:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800107b9:	48 89 45 88          	mov    %rax,-0x78(%rbp)
ffffffff800107bd:	48 8b 45 88          	mov    -0x78(%rbp),%rax
ffffffff800107c1:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffff800107c5:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
ffffffff800107cc:	48 85 c0             	test   %rax,%rax
ffffffff800107cf:	74 11                	je     ffffffff800107e2 <stbds_hmput_key+0x566>
ffffffff800107d1:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
ffffffff800107d8:	48 83 e8 20          	sub    $0x20,%rax
ffffffff800107dc:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff800107e0:	eb 05                	jmp    ffffffff800107e7 <stbds_hmput_key+0x56b>
ffffffff800107e2:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800107e7:	48 39 d0             	cmp    %rdx,%rax
ffffffff800107ea:	73 27                	jae    ffffffff80010813 <stbds_hmput_key+0x597>
ffffffff800107ec:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
ffffffff800107f3:	48 8b b5 70 ff ff ff 	mov    -0x90(%rbp),%rsi
ffffffff800107fa:	b9 00 00 00 00       	mov    $0x0,%ecx
ffffffff800107ff:	ba 01 00 00 00       	mov    $0x1,%edx
ffffffff80010804:	48 89 c7             	mov    %rax,%rdi
ffffffff80010807:	e8 5c e7 ff ff       	call   ffffffff8000ef68 <stbds_arrgrowf>
ffffffff8001080c:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
ffffffff80010813:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
ffffffff8001081a:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
ffffffff80010821:	48 01 d0             	add    %rdx,%rax
ffffffff80010824:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
ffffffff80010828:	48 8b 45 88          	mov    -0x78(%rbp),%rax
ffffffff8001082c:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffff80010830:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
ffffffff80010837:	48 83 e8 20          	sub    $0x20,%rax
ffffffff8001083b:	48 89 10             	mov    %rdx,(%rax)
ffffffff8001083e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80010842:	48 8b 50 60          	mov    0x60(%rax),%rdx
ffffffff80010846:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8001084a:	48 c1 e8 03          	shr    $0x3,%rax
ffffffff8001084e:	48 c1 e0 07          	shl    $0x7,%rax
ffffffff80010852:	48 01 d0             	add    %rdx,%rax
ffffffff80010855:	48 89 45 98          	mov    %rax,-0x68(%rbp)
ffffffff80010859:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8001085d:	83 e0 07             	and    $0x7,%eax
ffffffff80010860:	48 89 c2             	mov    %rax,%rdx
ffffffff80010863:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff80010867:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
ffffffff8001086b:	48 89 0c d0          	mov    %rcx,(%rax,%rdx,8)
ffffffff8001086f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff80010873:	83 e0 07             	and    $0x7,%eax
ffffffff80010876:	48 89 c2             	mov    %rax,%rdx
ffffffff80010879:	48 8b 45 88          	mov    -0x78(%rbp),%rax
ffffffff8001087d:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
ffffffff80010881:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff80010885:	48 83 c2 08          	add    $0x8,%rdx
ffffffff80010889:	48 89 0c d0          	mov    %rcx,(%rax,%rdx,8)
ffffffff8001088d:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
ffffffff80010894:	48 83 e8 20          	sub    $0x20,%rax
ffffffff80010898:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
ffffffff8001089c:	48 83 ea 01          	sub    $0x1,%rdx
ffffffff800108a0:	48 89 50 18          	mov    %rdx,0x18(%rax)
ffffffff800108a4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800108a8:	0f b6 40 59          	movzbl 0x59(%rax),%eax
ffffffff800108ac:	0f b6 c0             	movzbl %al,%eax
ffffffff800108af:	83 f8 03             	cmp    $0x3,%eax
ffffffff800108b2:	74 5e                	je     ffffffff80010912 <stbds_hmput_key+0x696>
ffffffff800108b4:	83 f8 03             	cmp    $0x3,%eax
ffffffff800108b7:	0f 8f d7 00 00 00    	jg     ffffffff80010994 <stbds_hmput_key+0x718>
ffffffff800108bd:	83 f8 01             	cmp    $0x1,%eax
ffffffff800108c0:	0f 84 97 00 00 00    	je     ffffffff8001095d <stbds_hmput_key+0x6e1>
ffffffff800108c6:	83 f8 02             	cmp    $0x2,%eax
ffffffff800108c9:	0f 85 c5 00 00 00    	jne    ffffffff80010994 <stbds_hmput_key+0x718>
ffffffff800108cf:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
ffffffff800108d6:	48 8b 45 88          	mov    -0x78(%rbp),%rax
ffffffff800108da:	48 0f af 85 70 ff ff 	imul   -0x90(%rbp),%rax
ffffffff800108e1:	ff 
ffffffff800108e2:	48 8d 1c 02          	lea    (%rdx,%rax,1),%rbx
ffffffff800108e6:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
ffffffff800108ed:	48 89 c7             	mov    %rax,%rdi
ffffffff800108f0:	e8 e0 04 00 00       	call   ffffffff80010dd5 <stbds_strdup>
ffffffff800108f5:	48 89 03             	mov    %rax,(%rbx)
ffffffff800108f8:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
ffffffff800108ff:	48 83 e8 20          	sub    $0x20,%rax
ffffffff80010903:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff80010907:	48 8b 13             	mov    (%rbx),%rdx
ffffffff8001090a:	48 89 10             	mov    %rdx,(%rax)
ffffffff8001090d:	e9 b8 00 00 00       	jmp    ffffffff800109ca <stbds_hmput_key+0x74e>
ffffffff80010912:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80010916:	48 83 c0 48          	add    $0x48,%rax
ffffffff8001091a:	48 8b 8d 78 ff ff ff 	mov    -0x88(%rbp),%rcx
ffffffff80010921:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
ffffffff80010925:	48 0f af 95 70 ff ff 	imul   -0x90(%rbp),%rdx
ffffffff8001092c:	ff 
ffffffff8001092d:	48 8d 1c 11          	lea    (%rcx,%rdx,1),%rbx
ffffffff80010931:	48 8b 95 68 ff ff ff 	mov    -0x98(%rbp),%rdx
ffffffff80010938:	48 89 d6             	mov    %rdx,%rsi
ffffffff8001093b:	48 89 c7             	mov    %rax,%rdi
ffffffff8001093e:	e8 e8 04 00 00       	call   ffffffff80010e2b <stbds_stralloc>
ffffffff80010943:	48 89 03             	mov    %rax,(%rbx)
ffffffff80010946:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
ffffffff8001094d:	48 83 e8 20          	sub    $0x20,%rax
ffffffff80010951:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff80010955:	48 8b 13             	mov    (%rbx),%rdx
ffffffff80010958:	48 89 10             	mov    %rdx,(%rax)
ffffffff8001095b:	eb 6d                	jmp    ffffffff800109ca <stbds_hmput_key+0x74e>
ffffffff8001095d:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
ffffffff80010964:	48 8b 45 88          	mov    -0x78(%rbp),%rax
ffffffff80010968:	48 0f af 85 70 ff ff 	imul   -0x90(%rbp),%rax
ffffffff8001096f:	ff 
ffffffff80010970:	48 01 d0             	add    %rdx,%rax
ffffffff80010973:	48 8b 95 68 ff ff ff 	mov    -0x98(%rbp),%rdx
ffffffff8001097a:	48 89 10             	mov    %rdx,(%rax)
ffffffff8001097d:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
ffffffff80010984:	48 83 ea 20          	sub    $0x20,%rdx
ffffffff80010988:	48 8b 52 10          	mov    0x10(%rdx),%rdx
ffffffff8001098c:	48 8b 00             	mov    (%rax),%rax
ffffffff8001098f:	48 89 02             	mov    %rax,(%rdx)
ffffffff80010992:	eb 36                	jmp    ffffffff800109ca <stbds_hmput_key+0x74e>
ffffffff80010994:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
ffffffff8001099b:	48 8b 45 88          	mov    -0x78(%rbp),%rax
ffffffff8001099f:	48 0f af 85 70 ff ff 	imul   -0x90(%rbp),%rax
ffffffff800109a6:	ff 
ffffffff800109a7:	48 01 c2             	add    %rax,%rdx
ffffffff800109aa:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
ffffffff800109b1:	48 89 d1             	mov    %rdx,%rcx
ffffffff800109b4:	48 89 c6             	mov    %rax,%rsi
ffffffff800109b7:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
ffffffff800109be:	48 89 c2             	mov    %rax,%rdx
ffffffff800109c1:	48 89 cf             	mov    %rcx,%rdi
ffffffff800109c4:	e8 a6 d6 ff ff       	call   ffffffff8000e06f <memcpy>
ffffffff800109c9:	90                   	nop
ffffffff800109ca:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
ffffffff800109d1:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
ffffffff800109d8:	48 01 d0             	add    %rdx,%rax
ffffffff800109db:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
ffffffff800109df:	c9                   	leave  
ffffffff800109e0:	c3                   	ret    

ffffffff800109e1 <stbds_shmode_func>:
ffffffff800109e1:	f3 0f 1e fa          	endbr64 
ffffffff800109e5:	55                   	push   %rbp
ffffffff800109e6:	48 89 e5             	mov    %rsp,%rbp
ffffffff800109e9:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff800109ed:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff800109f1:	89 75 e4             	mov    %esi,-0x1c(%rbp)
ffffffff800109f4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800109f8:	b9 01 00 00 00       	mov    $0x1,%ecx
ffffffff800109fd:	ba 00 00 00 00       	mov    $0x0,%edx
ffffffff80010a02:	48 89 c6             	mov    %rax,%rsi
ffffffff80010a05:	bf 00 00 00 00       	mov    $0x0,%edi
ffffffff80010a0a:	e8 59 e5 ff ff       	call   ffffffff8000ef68 <stbds_arrgrowf>
ffffffff80010a0f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff80010a13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80010a17:	48 89 c1             	mov    %rax,%rcx
ffffffff80010a1a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80010a1e:	48 89 c2             	mov    %rax,%rdx
ffffffff80010a21:	be 00 00 00 00       	mov    $0x0,%esi
ffffffff80010a26:	48 89 cf             	mov    %rcx,%rdi
ffffffff80010a29:	e8 1a db ff ff       	call   ffffffff8000e548 <memset>
ffffffff80010a2e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80010a32:	48 83 e8 20          	sub    $0x20,%rax
ffffffff80010a36:	48 c7 00 01 00 00 00 	movq   $0x1,(%rax)
ffffffff80010a3d:	be 00 00 00 00       	mov    $0x0,%esi
ffffffff80010a42:	bf 08 00 00 00       	mov    $0x8,%edi
ffffffff80010a47:	e8 2e e7 ff ff       	call   ffffffff8000f17a <stbds_make_hash_index>
ffffffff80010a4c:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff80010a50:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80010a54:	48 83 e8 20          	sub    $0x20,%rax
ffffffff80010a58:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff80010a5c:	48 89 50 10          	mov    %rdx,0x10(%rax)
ffffffff80010a60:	8b 45 e4             	mov    -0x1c(%rbp),%eax
ffffffff80010a63:	89 c2                	mov    %eax,%edx
ffffffff80010a65:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80010a69:	88 50 59             	mov    %dl,0x59(%rax)
ffffffff80010a6c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff80010a70:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80010a74:	48 01 d0             	add    %rdx,%rax
ffffffff80010a77:	c9                   	leave  
ffffffff80010a78:	c3                   	ret    

ffffffff80010a79 <stbds_hmdel_key>:
ffffffff80010a79:	f3 0f 1e fa          	endbr64 
ffffffff80010a7d:	55                   	push   %rbp
ffffffff80010a7e:	48 89 e5             	mov    %rsp,%rbp
ffffffff80010a81:	53                   	push   %rbx
ffffffff80010a82:	48 83 ec 78          	sub    $0x78,%rsp
ffffffff80010a86:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
ffffffff80010a8a:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
ffffffff80010a8e:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
ffffffff80010a92:	48 89 4d 90          	mov    %rcx,-0x70(%rbp)
ffffffff80010a96:	4c 89 45 88          	mov    %r8,-0x78(%rbp)
ffffffff80010a9a:	44 89 4d 84          	mov    %r9d,-0x7c(%rbp)
ffffffff80010a9e:	48 83 7d a8 00       	cmpq   $0x0,-0x58(%rbp)
ffffffff80010aa3:	75 0a                	jne    ffffffff80010aaf <stbds_hmdel_key+0x36>
ffffffff80010aa5:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80010aaa:	e9 20 03 00 00       	jmp    ffffffff80010dcf <stbds_hmdel_key+0x356>
ffffffff80010aaf:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff80010ab3:	48 f7 d8             	neg    %rax
ffffffff80010ab6:	48 89 c2             	mov    %rax,%rdx
ffffffff80010ab9:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff80010abd:	48 01 d0             	add    %rdx,%rax
ffffffff80010ac0:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff80010ac4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80010ac8:	48 83 e8 20          	sub    $0x20,%rax
ffffffff80010acc:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff80010ad0:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
ffffffff80010ad4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80010ad8:	48 83 e8 20          	sub    $0x20,%rax
ffffffff80010adc:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)
ffffffff80010ae3:	00 
ffffffff80010ae4:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
ffffffff80010ae9:	75 09                	jne    ffffffff80010af4 <stbds_hmdel_key+0x7b>
ffffffff80010aeb:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff80010aef:	e9 db 02 00 00       	jmp    ffffffff80010dcf <stbds_hmdel_key+0x356>
ffffffff80010af4:	44 8b 45 84          	mov    -0x7c(%rbp),%r8d
ffffffff80010af8:	48 8b 7d 88          	mov    -0x78(%rbp),%rdi
ffffffff80010afc:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
ffffffff80010b00:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
ffffffff80010b04:	48 8b 75 a0          	mov    -0x60(%rbp),%rsi
ffffffff80010b08:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff80010b0c:	45 89 c1             	mov    %r8d,%r9d
ffffffff80010b0f:	49 89 f8             	mov    %rdi,%r8
ffffffff80010b12:	48 89 c7             	mov    %rax,%rdi
ffffffff80010b15:	e8 9b f2 ff ff       	call   ffffffff8000fdb5 <stbds_hm_find_slot>
ffffffff80010b1a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff80010b1e:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
ffffffff80010b23:	79 09                	jns    ffffffff80010b2e <stbds_hmdel_key+0xb5>
ffffffff80010b25:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff80010b29:	e9 a1 02 00 00       	jmp    ffffffff80010dcf <stbds_hmdel_key+0x356>
ffffffff80010b2e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80010b32:	48 8b 50 60          	mov    0x60(%rax),%rdx
ffffffff80010b36:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80010b3a:	48 c1 f8 03          	sar    $0x3,%rax
ffffffff80010b3e:	48 c1 e0 07          	shl    $0x7,%rax
ffffffff80010b42:	48 01 d0             	add    %rdx,%rax
ffffffff80010b45:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
ffffffff80010b49:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80010b4d:	83 e0 07             	and    $0x7,%eax
ffffffff80010b50:	89 45 cc             	mov    %eax,-0x34(%rbp)
ffffffff80010b53:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff80010b57:	8b 55 cc             	mov    -0x34(%rbp),%edx
ffffffff80010b5a:	48 63 d2             	movslq %edx,%rdx
ffffffff80010b5d:	48 83 c2 08          	add    $0x8,%rdx
ffffffff80010b61:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
ffffffff80010b65:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
ffffffff80010b69:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
ffffffff80010b6e:	74 11                	je     ffffffff80010b81 <stbds_hmdel_key+0x108>
ffffffff80010b70:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80010b74:	48 83 e8 20          	sub    $0x20,%rax
ffffffff80010b78:	48 8b 00             	mov    (%rax),%rax
ffffffff80010b7b:	48 83 e8 02          	sub    $0x2,%rax
ffffffff80010b7f:	eb 07                	jmp    ffffffff80010b88 <stbds_hmdel_key+0x10f>
ffffffff80010b81:	48 c7 c0 fe ff ff ff 	mov    $0xfffffffffffffffe,%rax
ffffffff80010b88:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
ffffffff80010b8c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80010b90:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff80010b94:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
ffffffff80010b98:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80010b9c:	48 89 50 10          	mov    %rdx,0x10(%rax)
ffffffff80010ba0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80010ba4:	48 8b 40 28          	mov    0x28(%rax),%rax
ffffffff80010ba8:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffff80010bac:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80010bb0:	48 89 50 28          	mov    %rdx,0x28(%rax)
ffffffff80010bb4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80010bb8:	48 83 e8 20          	sub    $0x20,%rax
ffffffff80010bbc:	48 c7 40 18 01 00 00 	movq   $0x1,0x18(%rax)
ffffffff80010bc3:	00 
ffffffff80010bc4:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
ffffffff80010bc8:	8b 45 cc             	mov    -0x34(%rbp),%eax
ffffffff80010bcb:	48 98                	cltq   
ffffffff80010bcd:	48 c7 04 c2 01 00 00 	movq   $0x1,(%rdx,%rax,8)
ffffffff80010bd4:	00 
ffffffff80010bd5:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff80010bd9:	8b 55 cc             	mov    -0x34(%rbp),%edx
ffffffff80010bdc:	48 63 d2             	movslq %edx,%rdx
ffffffff80010bdf:	48 83 c2 08          	add    $0x8,%rdx
ffffffff80010be3:	48 c7 04 d0 fe ff ff 	movq   $0xfffffffffffffffe,(%rax,%rdx,8)
ffffffff80010bea:	ff 
ffffffff80010beb:	83 7d 84 01          	cmpl   $0x1,-0x7c(%rbp)
ffffffff80010bef:	75 27                	jne    ffffffff80010c18 <stbds_hmdel_key+0x19f>
ffffffff80010bf1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80010bf5:	0f b6 40 59          	movzbl 0x59(%rax),%eax
ffffffff80010bf9:	3c 02                	cmp    $0x2,%al
ffffffff80010bfb:	75 1b                	jne    ffffffff80010c18 <stbds_hmdel_key+0x19f>
ffffffff80010bfd:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff80010c01:	48 0f af 45 a0       	imul   -0x60(%rbp),%rax
ffffffff80010c06:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
ffffffff80010c0a:	48 01 d0             	add    %rdx,%rax
ffffffff80010c0d:	48 8b 00             	mov    (%rax),%rax
ffffffff80010c10:	48 89 c7             	mov    %rax,%rdi
ffffffff80010c13:	e8 ee ac ff ff       	call   ffffffff8000b906 <free>
ffffffff80010c18:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff80010c1c:	48 3b 45 b8          	cmp    -0x48(%rbp),%rax
ffffffff80010c20:	0f 84 f0 00 00 00    	je     ffffffff80010d16 <stbds_hmdel_key+0x29d>
ffffffff80010c26:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff80010c2a:	48 0f af 45 a0       	imul   -0x60(%rbp),%rax
ffffffff80010c2f:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
ffffffff80010c33:	48 8d 0c 10          	lea    (%rax,%rdx,1),%rcx
ffffffff80010c37:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff80010c3b:	48 0f af 45 a0       	imul   -0x60(%rbp),%rax
ffffffff80010c40:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
ffffffff80010c44:	48 01 d0             	add    %rdx,%rax
ffffffff80010c47:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
ffffffff80010c4b:	48 89 ce             	mov    %rcx,%rsi
ffffffff80010c4e:	48 89 c7             	mov    %rax,%rdi
ffffffff80010c51:	e8 23 dc ff ff       	call   ffffffff8000e879 <memmove>
ffffffff80010c56:	83 7d 84 01          	cmpl   $0x1,-0x7c(%rbp)
ffffffff80010c5a:	75 42                	jne    ffffffff80010c9e <stbds_hmdel_key+0x225>
ffffffff80010c5c:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff80010c60:	48 0f af 45 a0       	imul   -0x60(%rbp),%rax
ffffffff80010c65:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
ffffffff80010c69:	48 01 c2             	add    %rax,%rdx
ffffffff80010c6c:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff80010c70:	48 01 d0             	add    %rdx,%rax
ffffffff80010c73:	48 8b 10             	mov    (%rax),%rdx
ffffffff80010c76:	44 8b 45 84          	mov    -0x7c(%rbp),%r8d
ffffffff80010c7a:	48 8b 7d 88          	mov    -0x78(%rbp),%rdi
ffffffff80010c7e:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
ffffffff80010c82:	48 8b 75 a0          	mov    -0x60(%rbp),%rsi
ffffffff80010c86:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff80010c8a:	45 89 c1             	mov    %r8d,%r9d
ffffffff80010c8d:	49 89 f8             	mov    %rdi,%r8
ffffffff80010c90:	48 89 c7             	mov    %rax,%rdi
ffffffff80010c93:	e8 1d f1 ff ff       	call   ffffffff8000fdb5 <stbds_hm_find_slot>
ffffffff80010c98:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff80010c9c:	eb 3d                	jmp    ffffffff80010cdb <stbds_hmdel_key+0x262>
ffffffff80010c9e:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff80010ca2:	48 0f af 45 a0       	imul   -0x60(%rbp),%rax
ffffffff80010ca7:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
ffffffff80010cab:	48 01 c2             	add    %rax,%rdx
ffffffff80010cae:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff80010cb2:	48 01 c2             	add    %rax,%rdx
ffffffff80010cb5:	44 8b 45 84          	mov    -0x7c(%rbp),%r8d
ffffffff80010cb9:	48 8b 7d 88          	mov    -0x78(%rbp),%rdi
ffffffff80010cbd:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
ffffffff80010cc1:	48 8b 75 a0          	mov    -0x60(%rbp),%rsi
ffffffff80010cc5:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff80010cc9:	45 89 c1             	mov    %r8d,%r9d
ffffffff80010ccc:	49 89 f8             	mov    %rdi,%r8
ffffffff80010ccf:	48 89 c7             	mov    %rax,%rdi
ffffffff80010cd2:	e8 de f0 ff ff       	call   ffffffff8000fdb5 <stbds_hm_find_slot>
ffffffff80010cd7:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff80010cdb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80010cdf:	48 8b 50 60          	mov    0x60(%rax),%rdx
ffffffff80010ce3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80010ce7:	48 c1 f8 03          	sar    $0x3,%rax
ffffffff80010ceb:	48 c1 e0 07          	shl    $0x7,%rax
ffffffff80010cef:	48 01 d0             	add    %rdx,%rax
ffffffff80010cf2:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
ffffffff80010cf6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80010cfa:	83 e0 07             	and    $0x7,%eax
ffffffff80010cfd:	89 45 cc             	mov    %eax,-0x34(%rbp)
ffffffff80010d00:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff80010d04:	8b 55 cc             	mov    -0x34(%rbp),%edx
ffffffff80010d07:	48 63 d2             	movslq %edx,%rdx
ffffffff80010d0a:	48 83 c2 08          	add    $0x8,%rdx
ffffffff80010d0e:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
ffffffff80010d12:	48 89 0c d0          	mov    %rcx,(%rax,%rdx,8)
ffffffff80010d16:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80010d1a:	48 83 e8 20          	sub    $0x20,%rax
ffffffff80010d1e:	48 8b 10             	mov    (%rax),%rdx
ffffffff80010d21:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80010d25:	48 83 e8 20          	sub    $0x20,%rax
ffffffff80010d29:	48 83 ea 01          	sub    $0x1,%rdx
ffffffff80010d2d:	48 89 10             	mov    %rdx,(%rax)
ffffffff80010d30:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80010d34:	48 8b 50 10          	mov    0x10(%rax),%rdx
ffffffff80010d38:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80010d3c:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff80010d40:	48 39 c2             	cmp    %rax,%rdx
ffffffff80010d43:	73 42                	jae    ffffffff80010d87 <stbds_hmdel_key+0x30e>
ffffffff80010d45:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80010d49:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff80010d4d:	48 83 f8 08          	cmp    $0x8,%rax
ffffffff80010d51:	76 34                	jbe    ffffffff80010d87 <stbds_hmdel_key+0x30e>
ffffffff80010d53:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80010d57:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff80010d5b:	48 d1 e8             	shr    %rax
ffffffff80010d5e:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff80010d62:	48 8d 5a e0          	lea    -0x20(%rdx),%rbx
ffffffff80010d66:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff80010d6a:	48 89 d6             	mov    %rdx,%rsi
ffffffff80010d6d:	48 89 c7             	mov    %rax,%rdi
ffffffff80010d70:	e8 05 e4 ff ff       	call   ffffffff8000f17a <stbds_make_hash_index>
ffffffff80010d75:	48 89 43 10          	mov    %rax,0x10(%rbx)
ffffffff80010d79:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80010d7d:	48 89 c7             	mov    %rax,%rdi
ffffffff80010d80:	e8 81 ab ff ff       	call   ffffffff8000b906 <free>
ffffffff80010d85:	eb 44                	jmp    ffffffff80010dcb <stbds_hmdel_key+0x352>
ffffffff80010d87:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80010d8b:	48 8b 50 28          	mov    0x28(%rax),%rdx
ffffffff80010d8f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80010d93:	48 8b 40 30          	mov    0x30(%rax),%rax
ffffffff80010d97:	48 39 c2             	cmp    %rax,%rdx
ffffffff80010d9a:	76 2f                	jbe    ffffffff80010dcb <stbds_hmdel_key+0x352>
ffffffff80010d9c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80010da0:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff80010da4:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff80010da8:	48 8d 5a e0          	lea    -0x20(%rdx),%rbx
ffffffff80010dac:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff80010db0:	48 89 d6             	mov    %rdx,%rsi
ffffffff80010db3:	48 89 c7             	mov    %rax,%rdi
ffffffff80010db6:	e8 bf e3 ff ff       	call   ffffffff8000f17a <stbds_make_hash_index>
ffffffff80010dbb:	48 89 43 10          	mov    %rax,0x10(%rbx)
ffffffff80010dbf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80010dc3:	48 89 c7             	mov    %rax,%rdi
ffffffff80010dc6:	e8 3b ab ff ff       	call   ffffffff8000b906 <free>
ffffffff80010dcb:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff80010dcf:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
ffffffff80010dd3:	c9                   	leave  
ffffffff80010dd4:	c3                   	ret    

ffffffff80010dd5 <stbds_strdup>:
ffffffff80010dd5:	f3 0f 1e fa          	endbr64 
ffffffff80010dd9:	55                   	push   %rbp
ffffffff80010dda:	48 89 e5             	mov    %rsp,%rbp
ffffffff80010ddd:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff80010de1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff80010de5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80010de9:	48 89 c7             	mov    %rax,%rdi
ffffffff80010dec:	e8 3f dc ff ff       	call   ffffffff8000ea30 <strlen>
ffffffff80010df1:	48 83 c0 01          	add    $0x1,%rax
ffffffff80010df5:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff80010df9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80010dfd:	48 89 c6             	mov    %rax,%rsi
ffffffff80010e00:	bf 00 00 00 00       	mov    $0x0,%edi
ffffffff80010e05:	e8 a4 aa ff ff       	call   ffffffff8000b8ae <realloc>
ffffffff80010e0a:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff80010e0e:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff80010e12:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
ffffffff80010e16:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80010e1a:	48 89 ce             	mov    %rcx,%rsi
ffffffff80010e1d:	48 89 c7             	mov    %rax,%rdi
ffffffff80010e20:	e8 54 da ff ff       	call   ffffffff8000e879 <memmove>
ffffffff80010e25:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80010e29:	c9                   	leave  
ffffffff80010e2a:	c3                   	ret    

ffffffff80010e2b <stbds_stralloc>:
ffffffff80010e2b:	f3 0f 1e fa          	endbr64 
ffffffff80010e2f:	55                   	push   %rbp
ffffffff80010e30:	48 89 e5             	mov    %rsp,%rbp
ffffffff80010e33:	48 83 ec 40          	sub    $0x40,%rsp
ffffffff80010e37:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
ffffffff80010e3b:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
ffffffff80010e3f:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff80010e43:	48 89 c7             	mov    %rax,%rdi
ffffffff80010e46:	e8 e5 db ff ff       	call   ffffffff8000ea30 <strlen>
ffffffff80010e4b:	48 83 c0 01          	add    $0x1,%rax
ffffffff80010e4f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff80010e53:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80010e57:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff80010e5b:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
ffffffff80010e5f:	0f 86 1f 01 00 00    	jbe    ffffffff80010f84 <stbds_stralloc+0x159>
ffffffff80010e65:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80010e69:	0f b6 40 10          	movzbl 0x10(%rax),%eax
ffffffff80010e6d:	0f b6 c0             	movzbl %al,%eax
ffffffff80010e70:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff80010e74:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80010e78:	48 d1 e8             	shr    %rax
ffffffff80010e7b:	ba 00 02 00 00       	mov    $0x200,%edx
ffffffff80010e80:	89 c1                	mov    %eax,%ecx
ffffffff80010e82:	48 d3 e2             	shl    %cl,%rdx
ffffffff80010e85:	48 89 d0             	mov    %rdx,%rax
ffffffff80010e88:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff80010e8c:	48 81 7d f0 ff ff 0f 	cmpq   $0xfffff,-0x10(%rbp)
ffffffff80010e93:	00 
ffffffff80010e94:	77 12                	ja     ffffffff80010ea8 <stbds_stralloc+0x7d>
ffffffff80010e96:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80010e9a:	0f b6 40 10          	movzbl 0x10(%rax),%eax
ffffffff80010e9e:	83 c0 01             	add    $0x1,%eax
ffffffff80010ea1:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
ffffffff80010ea5:	88 42 10             	mov    %al,0x10(%rdx)
ffffffff80010ea8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80010eac:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
ffffffff80010eb0:	0f 86 90 00 00 00    	jbe    ffffffff80010f46 <stbds_stralloc+0x11b>
ffffffff80010eb6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80010eba:	48 83 c0 08          	add    $0x8,%rax
ffffffff80010ebe:	48 89 c6             	mov    %rax,%rsi
ffffffff80010ec1:	bf 00 00 00 00       	mov    $0x0,%edi
ffffffff80010ec6:	e8 e3 a9 ff ff       	call   ffffffff8000b8ae <realloc>
ffffffff80010ecb:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff80010ecf:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80010ed3:	48 83 c0 08          	add    $0x8,%rax
ffffffff80010ed7:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff80010edb:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
ffffffff80010edf:	48 89 ce             	mov    %rcx,%rsi
ffffffff80010ee2:	48 89 c7             	mov    %rax,%rdi
ffffffff80010ee5:	e8 8f d9 ff ff       	call   ffffffff8000e879 <memmove>
ffffffff80010eea:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80010eee:	48 8b 00             	mov    (%rax),%rax
ffffffff80010ef1:	48 85 c0             	test   %rax,%rax
ffffffff80010ef4:	74 21                	je     ffffffff80010f17 <stbds_stralloc+0xec>
ffffffff80010ef6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80010efa:	48 8b 00             	mov    (%rax),%rax
ffffffff80010efd:	48 8b 10             	mov    (%rax),%rdx
ffffffff80010f00:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80010f04:	48 89 10             	mov    %rdx,(%rax)
ffffffff80010f07:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80010f0b:	48 8b 00             	mov    (%rax),%rax
ffffffff80010f0e:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff80010f12:	48 89 10             	mov    %rdx,(%rax)
ffffffff80010f15:	eb 22                	jmp    ffffffff80010f39 <stbds_stralloc+0x10e>
ffffffff80010f17:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80010f1b:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
ffffffff80010f22:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80010f26:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff80010f2a:	48 89 10             	mov    %rdx,(%rax)
ffffffff80010f2d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80010f31:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
ffffffff80010f38:	00 
ffffffff80010f39:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80010f3d:	48 83 c0 08          	add    $0x8,%rax
ffffffff80010f41:	e9 8b 00 00 00       	jmp    ffffffff80010fd1 <stbds_stralloc+0x1a6>
ffffffff80010f46:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80010f4a:	48 83 c0 08          	add    $0x8,%rax
ffffffff80010f4e:	48 89 c6             	mov    %rax,%rsi
ffffffff80010f51:	bf 00 00 00 00       	mov    $0x0,%edi
ffffffff80010f56:	e8 53 a9 ff ff       	call   ffffffff8000b8ae <realloc>
ffffffff80010f5b:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff80010f5f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80010f63:	48 8b 10             	mov    (%rax),%rdx
ffffffff80010f66:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80010f6a:	48 89 10             	mov    %rdx,(%rax)
ffffffff80010f6d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80010f71:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff80010f75:	48 89 10             	mov    %rdx,(%rax)
ffffffff80010f78:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80010f7c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff80010f80:	48 89 50 08          	mov    %rdx,0x8(%rax)
ffffffff80010f84:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80010f88:	48 8b 00             	mov    (%rax),%rax
ffffffff80010f8b:	48 8d 50 08          	lea    0x8(%rax),%rdx
ffffffff80010f8f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80010f93:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff80010f97:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
ffffffff80010f9b:	48 01 d0             	add    %rdx,%rax
ffffffff80010f9e:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
ffffffff80010fa2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80010fa6:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff80010faa:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
ffffffff80010fae:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
ffffffff80010fb2:	48 89 42 08          	mov    %rax,0x8(%rdx)
ffffffff80010fb6:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff80010fba:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
ffffffff80010fbe:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80010fc2:	48 89 ce             	mov    %rcx,%rsi
ffffffff80010fc5:	48 89 c7             	mov    %rax,%rdi
ffffffff80010fc8:	e8 ac d8 ff ff       	call   ffffffff8000e879 <memmove>
ffffffff80010fcd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80010fd1:	c9                   	leave  
ffffffff80010fd2:	c3                   	ret    

ffffffff80010fd3 <stbds_strreset>:
ffffffff80010fd3:	f3 0f 1e fa          	endbr64 
ffffffff80010fd7:	55                   	push   %rbp
ffffffff80010fd8:	48 89 e5             	mov    %rsp,%rbp
ffffffff80010fdb:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff80010fdf:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff80010fe3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80010fe7:	48 8b 00             	mov    (%rax),%rax
ffffffff80010fea:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff80010fee:	eb 1f                	jmp    ffffffff8001100f <stbds_strreset+0x3c>
ffffffff80010ff0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80010ff4:	48 8b 00             	mov    (%rax),%rax
ffffffff80010ff7:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff80010ffb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80010fff:	48 89 c7             	mov    %rax,%rdi
ffffffff80011002:	e8 ff a8 ff ff       	call   ffffffff8000b906 <free>
ffffffff80011007:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8001100b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8001100f:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff80011014:	75 da                	jne    ffffffff80010ff0 <stbds_strreset+0x1d>
ffffffff80011016:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001101a:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
ffffffff80011021:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
ffffffff80011028:	00 
ffffffff80011029:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
ffffffff80011030:	00 
ffffffff80011031:	90                   	nop
ffffffff80011032:	c9                   	leave  
ffffffff80011033:	c3                   	ret    

ffffffff80011034 <list_init>:
ffffffff80011034:	f3 0f 1e fa          	endbr64 
ffffffff80011038:	55                   	push   %rbp
ffffffff80011039:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001103c:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80011040:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff80011044:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80011048:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff8001104c:	48 89 50 08          	mov    %rdx,0x8(%rax)
ffffffff80011050:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80011054:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff80011058:	48 89 10             	mov    %rdx,(%rax)
ffffffff8001105b:	90                   	nop
ffffffff8001105c:	c9                   	leave  
ffffffff8001105d:	c3                   	ret    

ffffffff8001105e <list_add_internal>:
ffffffff8001105e:	f3 0f 1e fa          	endbr64 
ffffffff80011062:	55                   	push   %rbp
ffffffff80011063:	48 89 e5             	mov    %rsp,%rbp
ffffffff80011066:	48 83 ec 18          	sub    $0x18,%rsp
ffffffff8001106a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8001106e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff80011072:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
ffffffff80011076:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8001107a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff8001107e:	48 89 50 08          	mov    %rdx,0x8(%rax)
ffffffff80011082:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80011086:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff8001108a:	48 89 10             	mov    %rdx,(%rax)
ffffffff8001108d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80011091:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff80011095:	48 89 50 08          	mov    %rdx,0x8(%rax)
ffffffff80011099:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001109d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff800110a1:	48 89 10             	mov    %rdx,(%rax)
ffffffff800110a4:	90                   	nop
ffffffff800110a5:	c9                   	leave  
ffffffff800110a6:	c3                   	ret    

ffffffff800110a7 <list_add>:
ffffffff800110a7:	f3 0f 1e fa          	endbr64 
ffffffff800110ab:	55                   	push   %rbp
ffffffff800110ac:	48 89 e5             	mov    %rsp,%rbp
ffffffff800110af:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff800110b3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff800110b7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff800110bb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff800110bf:	48 8b 08             	mov    (%rax),%rcx
ffffffff800110c2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff800110c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff800110ca:	48 89 ce             	mov    %rcx,%rsi
ffffffff800110cd:	48 89 c7             	mov    %rax,%rdi
ffffffff800110d0:	e8 89 ff ff ff       	call   ffffffff8001105e <list_add_internal>
ffffffff800110d5:	90                   	nop
ffffffff800110d6:	c9                   	leave  
ffffffff800110d7:	c3                   	ret    

ffffffff800110d8 <list_add_tail>:
ffffffff800110d8:	f3 0f 1e fa          	endbr64 
ffffffff800110dc:	55                   	push   %rbp
ffffffff800110dd:	48 89 e5             	mov    %rsp,%rbp
ffffffff800110e0:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff800110e4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff800110e8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff800110ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff800110f0:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff800110f4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff800110f8:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
ffffffff800110fc:	48 89 ce             	mov    %rcx,%rsi
ffffffff800110ff:	48 89 c7             	mov    %rax,%rdi
ffffffff80011102:	e8 57 ff ff ff       	call   ffffffff8001105e <list_add_internal>
ffffffff80011107:	90                   	nop
ffffffff80011108:	c9                   	leave  
ffffffff80011109:	c3                   	ret    

ffffffff8001110a <list_del>:
ffffffff8001110a:	f3 0f 1e fa          	endbr64 
ffffffff8001110e:	55                   	push   %rbp
ffffffff8001110f:	48 89 e5             	mov    %rsp,%rbp
ffffffff80011112:	48 83 ec 18          	sub    $0x18,%rsp
ffffffff80011116:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff8001111a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001111e:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff80011122:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff80011126:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001112a:	48 8b 00             	mov    (%rax),%rax
ffffffff8001112d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff80011131:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80011135:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff80011139:	48 89 50 08          	mov    %rdx,0x8(%rax)
ffffffff8001113d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80011141:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff80011145:	48 89 10             	mov    %rdx,(%rax)
ffffffff80011148:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001114c:	48 b9 aa aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaaa,%rcx
ffffffff80011153:	aa aa aa 
ffffffff80011156:	48 89 08             	mov    %rcx,(%rax)
ffffffff80011159:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001115d:	48 be bb bb bb bb bb 	movabs $0xbbbbbbbbbbbbbbbb,%rsi
ffffffff80011164:	bb bb bb 
ffffffff80011167:	48 89 70 08          	mov    %rsi,0x8(%rax)
ffffffff8001116b:	90                   	nop
ffffffff8001116c:	c9                   	leave  
ffffffff8001116d:	c3                   	ret    

ffffffff8001116e <list_is_empty>:
ffffffff8001116e:	f3 0f 1e fa          	endbr64 
ffffffff80011172:	55                   	push   %rbp
ffffffff80011173:	48 89 e5             	mov    %rsp,%rbp
ffffffff80011176:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff8001117a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8001117e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80011182:	48 8b 00             	mov    (%rax),%rax
ffffffff80011185:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
ffffffff80011189:	0f 94 c0             	sete   %al
ffffffff8001118c:	c9                   	leave  
ffffffff8001118d:	c3                   	ret    

ffffffff8001118e <list_pop>:
ffffffff8001118e:	f3 0f 1e fa          	endbr64 
ffffffff80011192:	55                   	push   %rbp
ffffffff80011193:	48 89 e5             	mov    %rsp,%rbp
ffffffff80011196:	48 83 ec 18          	sub    $0x18,%rsp
ffffffff8001119a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff8001119e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800111a2:	48 89 c7             	mov    %rax,%rdi
ffffffff800111a5:	e8 c4 ff ff ff       	call   ffffffff8001116e <list_is_empty>
ffffffff800111aa:	84 c0                	test   %al,%al
ffffffff800111ac:	74 07                	je     ffffffff800111b5 <list_pop+0x27>
ffffffff800111ae:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800111b3:	eb 1c                	jmp    ffffffff800111d1 <list_pop+0x43>
ffffffff800111b5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800111b9:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff800111bd:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff800111c1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff800111c5:	48 89 c7             	mov    %rax,%rdi
ffffffff800111c8:	e8 3d ff ff ff       	call   ffffffff8001110a <list_del>
ffffffff800111cd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff800111d1:	c9                   	leave  
ffffffff800111d2:	c3                   	ret    

ffffffff800111d3 <create_buffer>:
ffffffff800111d3:	f3 0f 1e fa          	endbr64 
ffffffff800111d7:	55                   	push   %rbp
ffffffff800111d8:	48 89 e5             	mov    %rsp,%rbp
ffffffff800111db:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff800111df:	bf 10 00 00 00       	mov    $0x10,%edi
ffffffff800111e4:	e8 53 a6 ff ff       	call   ffffffff8000b83c <malloc>
ffffffff800111e9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff800111ed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff800111f1:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
ffffffff800111f8:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
ffffffff800111ff:	00 
ffffffff80011200:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80011204:	c9                   	leave  
ffffffff80011205:	c3                   	ret    

ffffffff80011206 <destroy_buffer>:
ffffffff80011206:	f3 0f 1e fa          	endbr64 
ffffffff8001120a:	55                   	push   %rbp
ffffffff8001120b:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001120e:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff80011212:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff80011216:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff8001121b:	74 36                	je     ffffffff80011253 <destroy_buffer+0x4d>
ffffffff8001121d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80011221:	48 8b 00             	mov    (%rax),%rax
ffffffff80011224:	48 85 c0             	test   %rax,%rax
ffffffff80011227:	74 13                	je     ffffffff8001123c <destroy_buffer+0x36>
ffffffff80011229:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001122d:	48 8b 00             	mov    (%rax),%rax
ffffffff80011230:	48 83 e8 20          	sub    $0x20,%rax
ffffffff80011234:	48 89 c7             	mov    %rax,%rdi
ffffffff80011237:	e8 ca a6 ff ff       	call   ffffffff8000b906 <free>
ffffffff8001123c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80011240:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
ffffffff80011247:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001124b:	48 89 c7             	mov    %rax,%rdi
ffffffff8001124e:	e8 b3 a6 ff ff       	call   ffffffff8000b906 <free>
ffffffff80011253:	90                   	nop
ffffffff80011254:	c9                   	leave  
ffffffff80011255:	c3                   	ret    

ffffffff80011256 <bputc>:
ffffffff80011256:	f3 0f 1e fa          	endbr64 
ffffffff8001125a:	55                   	push   %rbp
ffffffff8001125b:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001125e:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff80011262:	89 7d fc             	mov    %edi,-0x4(%rbp)
ffffffff80011265:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff80011269:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8001126d:	48 8b 00             	mov    (%rax),%rax
ffffffff80011270:	48 85 c0             	test   %rax,%rax
ffffffff80011273:	74 26                	je     ffffffff8001129b <bputc+0x45>
ffffffff80011275:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80011279:	48 8b 00             	mov    (%rax),%rax
ffffffff8001127c:	48 83 e8 20          	sub    $0x20,%rax
ffffffff80011280:	48 8b 00             	mov    (%rax),%rax
ffffffff80011283:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffff80011287:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8001128b:	48 8b 00             	mov    (%rax),%rax
ffffffff8001128e:	48 83 e8 20          	sub    $0x20,%rax
ffffffff80011292:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff80011296:	48 39 c2             	cmp    %rax,%rdx
ffffffff80011299:	76 25                	jbe    ffffffff800112c0 <bputc+0x6a>
ffffffff8001129b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8001129f:	48 8b 00             	mov    (%rax),%rax
ffffffff800112a2:	b9 00 00 00 00       	mov    $0x0,%ecx
ffffffff800112a7:	ba 01 00 00 00       	mov    $0x1,%edx
ffffffff800112ac:	be 01 00 00 00       	mov    $0x1,%esi
ffffffff800112b1:	48 89 c7             	mov    %rax,%rdi
ffffffff800112b4:	e8 af dc ff ff       	call   ffffffff8000ef68 <stbds_arrgrowf>
ffffffff800112b9:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff800112bd:	48 89 02             	mov    %rax,(%rdx)
ffffffff800112c0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff800112c4:	48 8b 30             	mov    (%rax),%rsi
ffffffff800112c7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff800112cb:	48 8b 00             	mov    (%rax),%rax
ffffffff800112ce:	48 83 e8 20          	sub    $0x20,%rax
ffffffff800112d2:	48 8b 10             	mov    (%rax),%rdx
ffffffff800112d5:	48 8d 4a 01          	lea    0x1(%rdx),%rcx
ffffffff800112d9:	48 89 08             	mov    %rcx,(%rax)
ffffffff800112dc:	48 8d 04 16          	lea    (%rsi,%rdx,1),%rax
ffffffff800112e0:	8b 55 fc             	mov    -0x4(%rbp),%edx
ffffffff800112e3:	88 10                	mov    %dl,(%rax)
ffffffff800112e5:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff800112e8:	0f b6 c0             	movzbl %al,%eax
ffffffff800112eb:	c9                   	leave  
ffffffff800112ec:	c3                   	ret    

ffffffff800112ed <bgetc>:
ffffffff800112ed:	f3 0f 1e fa          	endbr64 
ffffffff800112f1:	55                   	push   %rbp
ffffffff800112f2:	48 89 e5             	mov    %rsp,%rbp
ffffffff800112f5:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff800112f9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff800112fd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80011301:	8b 40 08             	mov    0x8(%rax),%eax
ffffffff80011304:	48 98                	cltq   
ffffffff80011306:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff8001130a:	48 8b 12             	mov    (%rdx),%rdx
ffffffff8001130d:	48 85 d2             	test   %rdx,%rdx
ffffffff80011310:	74 10                	je     ffffffff80011322 <bgetc+0x35>
ffffffff80011312:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff80011316:	48 8b 12             	mov    (%rdx),%rdx
ffffffff80011319:	48 83 ea 20          	sub    $0x20,%rdx
ffffffff8001131d:	48 8b 12             	mov    (%rdx),%rdx
ffffffff80011320:	eb 05                	jmp    ffffffff80011327 <bgetc+0x3a>
ffffffff80011322:	ba 00 00 00 00       	mov    $0x0,%edx
ffffffff80011327:	48 39 c2             	cmp    %rax,%rdx
ffffffff8001132a:	7e 25                	jle    ffffffff80011351 <bgetc+0x64>
ffffffff8001132c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80011330:	48 8b 30             	mov    (%rax),%rsi
ffffffff80011333:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80011337:	8b 40 08             	mov    0x8(%rax),%eax
ffffffff8001133a:	8d 50 01             	lea    0x1(%rax),%edx
ffffffff8001133d:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
ffffffff80011341:	89 51 08             	mov    %edx,0x8(%rcx)
ffffffff80011344:	48 98                	cltq   
ffffffff80011346:	48 01 f0             	add    %rsi,%rax
ffffffff80011349:	0f b6 00             	movzbl (%rax),%eax
ffffffff8001134c:	0f be c0             	movsbl %al,%eax
ffffffff8001134f:	eb 05                	jmp    ffffffff80011356 <bgetc+0x69>
ffffffff80011351:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
ffffffff80011356:	c9                   	leave  
ffffffff80011357:	c3                   	ret    

ffffffff80011358 <bprintf>:
ffffffff80011358:	f3 0f 1e fa          	endbr64 
ffffffff8001135c:	55                   	push   %rbp
ffffffff8001135d:	48 89 e5             	mov    %rsp,%rbp
ffffffff80011360:	48 81 ec e0 00 00 00 	sub    $0xe0,%rsp
ffffffff80011367:	48 89 bd 28 ff ff ff 	mov    %rdi,-0xd8(%rbp)
ffffffff8001136e:	48 89 b5 20 ff ff ff 	mov    %rsi,-0xe0(%rbp)
ffffffff80011375:	48 89 95 60 ff ff ff 	mov    %rdx,-0xa0(%rbp)
ffffffff8001137c:	48 89 8d 68 ff ff ff 	mov    %rcx,-0x98(%rbp)
ffffffff80011383:	4c 89 85 70 ff ff ff 	mov    %r8,-0x90(%rbp)
ffffffff8001138a:	4c 89 8d 78 ff ff ff 	mov    %r9,-0x88(%rbp)
ffffffff80011391:	84 c0                	test   %al,%al
ffffffff80011393:	74 20                	je     ffffffff800113b5 <bprintf+0x5d>
ffffffff80011395:	0f 29 45 80          	movaps %xmm0,-0x80(%rbp)
ffffffff80011399:	0f 29 4d 90          	movaps %xmm1,-0x70(%rbp)
ffffffff8001139d:	0f 29 55 a0          	movaps %xmm2,-0x60(%rbp)
ffffffff800113a1:	0f 29 5d b0          	movaps %xmm3,-0x50(%rbp)
ffffffff800113a5:	0f 29 65 c0          	movaps %xmm4,-0x40(%rbp)
ffffffff800113a9:	0f 29 6d d0          	movaps %xmm5,-0x30(%rbp)
ffffffff800113ad:	0f 29 75 e0          	movaps %xmm6,-0x20(%rbp)
ffffffff800113b1:	0f 29 7d f0          	movaps %xmm7,-0x10(%rbp)
ffffffff800113b5:	c7 85 30 ff ff ff 10 	movl   $0x10,-0xd0(%rbp)
ffffffff800113bc:	00 00 00 
ffffffff800113bf:	c7 85 34 ff ff ff 30 	movl   $0x30,-0xcc(%rbp)
ffffffff800113c6:	00 00 00 
ffffffff800113c9:	48 8d 45 10          	lea    0x10(%rbp),%rax
ffffffff800113cd:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
ffffffff800113d4:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
ffffffff800113db:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
ffffffff800113e2:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
ffffffff800113e9:	48 8b 95 20 ff ff ff 	mov    -0xe0(%rbp),%rdx
ffffffff800113f0:	48 8b b5 28 ff ff ff 	mov    -0xd8(%rbp),%rsi
ffffffff800113f7:	48 89 c1             	mov    %rax,%rcx
ffffffff800113fa:	48 8d 05 55 fe ff ff 	lea    -0x1ab(%rip),%rax        # ffffffff80011256 <bputc>
ffffffff80011401:	48 89 c7             	mov    %rax,%rdi
ffffffff80011404:	e8 20 25 00 00       	call   ffffffff80013929 <vfctprintf>
ffffffff80011409:	89 85 4c ff ff ff    	mov    %eax,-0xb4(%rbp)
ffffffff8001140f:	8b 85 4c ff ff ff    	mov    -0xb4(%rbp),%eax
ffffffff80011415:	90                   	nop
ffffffff80011416:	c9                   	leave  
ffffffff80011417:	c3                   	ret    

ffffffff80011418 <_out_buffer>:
ffffffff80011418:	f3 0f 1e fa          	endbr64 
ffffffff8001141c:	55                   	push   %rbp
ffffffff8001141d:	48 89 e5             	mov    %rsp,%rbp
ffffffff80011420:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff80011424:	89 f8                	mov    %edi,%eax
ffffffff80011426:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff8001142a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
ffffffff8001142e:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
ffffffff80011432:	88 45 fc             	mov    %al,-0x4(%rbp)
ffffffff80011435:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80011439:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
ffffffff8001143d:	73 11                	jae    ffffffff80011450 <_out_buffer+0x38>
ffffffff8001143f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff80011443:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80011447:	48 01 c2             	add    %rax,%rdx
ffffffff8001144a:	0f b6 45 fc          	movzbl -0x4(%rbp),%eax
ffffffff8001144e:	88 02                	mov    %al,(%rdx)
ffffffff80011450:	90                   	nop
ffffffff80011451:	c9                   	leave  
ffffffff80011452:	c3                   	ret    

ffffffff80011453 <_out_null>:
ffffffff80011453:	f3 0f 1e fa          	endbr64 
ffffffff80011457:	55                   	push   %rbp
ffffffff80011458:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001145b:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff8001145f:	89 f8                	mov    %edi,%eax
ffffffff80011461:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff80011465:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
ffffffff80011469:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
ffffffff8001146d:	88 45 fc             	mov    %al,-0x4(%rbp)
ffffffff80011470:	90                   	nop
ffffffff80011471:	c9                   	leave  
ffffffff80011472:	c3                   	ret    

ffffffff80011473 <_out_char>:
ffffffff80011473:	f3 0f 1e fa          	endbr64 
ffffffff80011477:	55                   	push   %rbp
ffffffff80011478:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001147b:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff8001147f:	89 f8                	mov    %edi,%eax
ffffffff80011481:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff80011485:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
ffffffff80011489:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
ffffffff8001148d:	88 45 fc             	mov    %al,-0x4(%rbp)
ffffffff80011490:	80 7d fc 00          	cmpb   $0x0,-0x4(%rbp)
ffffffff80011494:	74 0b                	je     ffffffff800114a1 <_out_char+0x2e>
ffffffff80011496:	0f be 45 fc          	movsbl -0x4(%rbp),%eax
ffffffff8001149a:	89 c7                	mov    %eax,%edi
ffffffff8001149c:	e8 8b cb ff ff       	call   ffffffff8000e02c <_putchar>
ffffffff800114a1:	90                   	nop
ffffffff800114a2:	c9                   	leave  
ffffffff800114a3:	c3                   	ret    

ffffffff800114a4 <_out_fct>:
ffffffff800114a4:	f3 0f 1e fa          	endbr64 
ffffffff800114a8:	55                   	push   %rbp
ffffffff800114a9:	48 89 e5             	mov    %rsp,%rbp
ffffffff800114ac:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff800114b0:	89 f8                	mov    %edi,%eax
ffffffff800114b2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff800114b6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
ffffffff800114ba:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
ffffffff800114be:	88 45 fc             	mov    %al,-0x4(%rbp)
ffffffff800114c1:	80 7d fc 00          	cmpb   $0x0,-0x4(%rbp)
ffffffff800114c5:	74 1a                	je     ffffffff800114e1 <_out_fct+0x3d>
ffffffff800114c7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff800114cb:	48 8b 08             	mov    (%rax),%rcx
ffffffff800114ce:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff800114d2:	48 8b 50 08          	mov    0x8(%rax),%rdx
ffffffff800114d6:	0f be 45 fc          	movsbl -0x4(%rbp),%eax
ffffffff800114da:	48 89 d6             	mov    %rdx,%rsi
ffffffff800114dd:	89 c7                	mov    %eax,%edi
ffffffff800114df:	ff d1                	call   *%rcx
ffffffff800114e1:	90                   	nop
ffffffff800114e2:	c9                   	leave  
ffffffff800114e3:	c3                   	ret    

ffffffff800114e4 <_strnlen_s>:
ffffffff800114e4:	55                   	push   %rbp
ffffffff800114e5:	48 89 e5             	mov    %rsp,%rbp
ffffffff800114e8:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff800114ec:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff800114f0:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
ffffffff800114f4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800114f8:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff800114fc:	eb 05                	jmp    ffffffff80011503 <_strnlen_s+0x1f>
ffffffff800114fe:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
ffffffff80011503:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80011507:	0f b6 00             	movzbl (%rax),%eax
ffffffff8001150a:	84 c0                	test   %al,%al
ffffffff8001150c:	74 11                	je     ffffffff8001151f <_strnlen_s+0x3b>
ffffffff8001150e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80011512:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
ffffffff80011516:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)
ffffffff8001151a:	48 85 c0             	test   %rax,%rax
ffffffff8001151d:	75 df                	jne    ffffffff800114fe <_strnlen_s+0x1a>
ffffffff8001151f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80011523:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
ffffffff80011527:	c9                   	leave  
ffffffff80011528:	c3                   	ret    

ffffffff80011529 <_wstrnlen_s>:
ffffffff80011529:	55                   	push   %rbp
ffffffff8001152a:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001152d:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff80011531:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff80011535:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
ffffffff80011539:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001153d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff80011541:	eb 05                	jmp    ffffffff80011548 <_wstrnlen_s+0x1f>
ffffffff80011543:	48 83 45 f8 02       	addq   $0x2,-0x8(%rbp)
ffffffff80011548:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001154c:	0f b7 00             	movzwl (%rax),%eax
ffffffff8001154f:	66 85 c0             	test   %ax,%ax
ffffffff80011552:	74 11                	je     ffffffff80011565 <_wstrnlen_s+0x3c>
ffffffff80011554:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80011558:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
ffffffff8001155c:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)
ffffffff80011560:	48 85 c0             	test   %rax,%rax
ffffffff80011563:	75 de                	jne    ffffffff80011543 <_wstrnlen_s+0x1a>
ffffffff80011565:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80011569:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
ffffffff8001156d:	48 d1 f8             	sar    %rax
ffffffff80011570:	c9                   	leave  
ffffffff80011571:	c3                   	ret    

ffffffff80011572 <_is_digit>:
ffffffff80011572:	55                   	push   %rbp
ffffffff80011573:	48 89 e5             	mov    %rsp,%rbp
ffffffff80011576:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff8001157a:	89 f8                	mov    %edi,%eax
ffffffff8001157c:	88 45 fc             	mov    %al,-0x4(%rbp)
ffffffff8001157f:	80 7d fc 2f          	cmpb   $0x2f,-0x4(%rbp)
ffffffff80011583:	7e 0d                	jle    ffffffff80011592 <_is_digit+0x20>
ffffffff80011585:	80 7d fc 39          	cmpb   $0x39,-0x4(%rbp)
ffffffff80011589:	7f 07                	jg     ffffffff80011592 <_is_digit+0x20>
ffffffff8001158b:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff80011590:	eb 05                	jmp    ffffffff80011597 <_is_digit+0x25>
ffffffff80011592:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80011597:	83 e0 01             	and    $0x1,%eax
ffffffff8001159a:	c9                   	leave  
ffffffff8001159b:	c3                   	ret    

ffffffff8001159c <_atoi>:
ffffffff8001159c:	f3 0f 1e fa          	endbr64 
ffffffff800115a0:	55                   	push   %rbp
ffffffff800115a1:	48 89 e5             	mov    %rsp,%rbp
ffffffff800115a4:	48 83 ec 18          	sub    $0x18,%rsp
ffffffff800115a8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff800115ac:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
ffffffff800115b3:	eb 2e                	jmp    ffffffff800115e3 <_atoi+0x47>
ffffffff800115b5:	8b 55 fc             	mov    -0x4(%rbp),%edx
ffffffff800115b8:	89 d0                	mov    %edx,%eax
ffffffff800115ba:	c1 e0 02             	shl    $0x2,%eax
ffffffff800115bd:	01 d0                	add    %edx,%eax
ffffffff800115bf:	01 c0                	add    %eax,%eax
ffffffff800115c1:	89 c6                	mov    %eax,%esi
ffffffff800115c3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800115c7:	48 8b 00             	mov    (%rax),%rax
ffffffff800115ca:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffff800115ce:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
ffffffff800115d2:	48 89 11             	mov    %rdx,(%rcx)
ffffffff800115d5:	0f b6 00             	movzbl (%rax),%eax
ffffffff800115d8:	0f be c0             	movsbl %al,%eax
ffffffff800115db:	01 f0                	add    %esi,%eax
ffffffff800115dd:	83 e8 30             	sub    $0x30,%eax
ffffffff800115e0:	89 45 fc             	mov    %eax,-0x4(%rbp)
ffffffff800115e3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800115e7:	48 8b 00             	mov    (%rax),%rax
ffffffff800115ea:	0f b6 00             	movzbl (%rax),%eax
ffffffff800115ed:	0f be c0             	movsbl %al,%eax
ffffffff800115f0:	89 c7                	mov    %eax,%edi
ffffffff800115f2:	e8 7b ff ff ff       	call   ffffffff80011572 <_is_digit>
ffffffff800115f7:	84 c0                	test   %al,%al
ffffffff800115f9:	75 ba                	jne    ffffffff800115b5 <_atoi+0x19>
ffffffff800115fb:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff800115fe:	c9                   	leave  
ffffffff800115ff:	c3                   	ret    

ffffffff80011600 <_out_rev>:
ffffffff80011600:	f3 0f 1e fa          	endbr64 
ffffffff80011604:	55                   	push   %rbp
ffffffff80011605:	48 89 e5             	mov    %rsp,%rbp
ffffffff80011608:	48 83 ec 40          	sub    $0x40,%rsp
ffffffff8001160c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff80011610:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
ffffffff80011614:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
ffffffff80011618:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
ffffffff8001161c:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
ffffffff80011620:	4c 89 4d c0          	mov    %r9,-0x40(%rbp)
ffffffff80011624:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80011628:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff8001162c:	8b 45 18             	mov    0x18(%rbp),%eax
ffffffff8001162f:	83 e0 02             	and    $0x2,%eax
ffffffff80011632:	85 c0                	test   %eax,%eax
ffffffff80011634:	0f 85 81 00 00 00    	jne    ffffffff800116bb <_out_rev+0xbb>
ffffffff8001163a:	8b 45 18             	mov    0x18(%rbp),%eax
ffffffff8001163d:	83 e0 01             	and    $0x1,%eax
ffffffff80011640:	85 c0                	test   %eax,%eax
ffffffff80011642:	75 77                	jne    ffffffff800116bb <_out_rev+0xbb>
ffffffff80011644:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff80011648:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8001164c:	eb 2b                	jmp    ffffffff80011679 <_out_rev+0x79>
ffffffff8001164e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80011652:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffff80011656:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
ffffffff8001165a:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
ffffffff8001165e:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
ffffffff80011662:	4c 8b 45 e8          	mov    -0x18(%rbp),%r8
ffffffff80011666:	48 89 d1             	mov    %rdx,%rcx
ffffffff80011669:	48 89 c2             	mov    %rax,%rdx
ffffffff8001166c:	bf 20 00 00 00       	mov    $0x20,%edi
ffffffff80011671:	41 ff d0             	call   *%r8
ffffffff80011674:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
ffffffff80011679:	8b 45 10             	mov    0x10(%rbp),%eax
ffffffff8001167c:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
ffffffff80011680:	72 cc                	jb     ffffffff8001164e <_out_rev+0x4e>
ffffffff80011682:	eb 37                	jmp    ffffffff800116bb <_out_rev+0xbb>
ffffffff80011684:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80011688:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffff8001168c:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
ffffffff80011690:	48 83 6d c0 01       	subq   $0x1,-0x40(%rbp)
ffffffff80011695:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
ffffffff80011699:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
ffffffff8001169d:	48 01 ca             	add    %rcx,%rdx
ffffffff800116a0:	0f b6 12             	movzbl (%rdx),%edx
ffffffff800116a3:	0f be fa             	movsbl %dl,%edi
ffffffff800116a6:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
ffffffff800116aa:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
ffffffff800116ae:	4c 8b 45 e8          	mov    -0x18(%rbp),%r8
ffffffff800116b2:	48 89 d1             	mov    %rdx,%rcx
ffffffff800116b5:	48 89 c2             	mov    %rax,%rdx
ffffffff800116b8:	41 ff d0             	call   *%r8
ffffffff800116bb:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
ffffffff800116c0:	75 c2                	jne    ffffffff80011684 <_out_rev+0x84>
ffffffff800116c2:	8b 45 18             	mov    0x18(%rbp),%eax
ffffffff800116c5:	83 e0 02             	and    $0x2,%eax
ffffffff800116c8:	85 c0                	test   %eax,%eax
ffffffff800116ca:	74 3b                	je     ffffffff80011707 <_out_rev+0x107>
ffffffff800116cc:	eb 26                	jmp    ffffffff800116f4 <_out_rev+0xf4>
ffffffff800116ce:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff800116d2:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffff800116d6:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
ffffffff800116da:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
ffffffff800116de:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
ffffffff800116e2:	4c 8b 45 e8          	mov    -0x18(%rbp),%r8
ffffffff800116e6:	48 89 d1             	mov    %rdx,%rcx
ffffffff800116e9:	48 89 c2             	mov    %rax,%rdx
ffffffff800116ec:	bf 20 00 00 00       	mov    $0x20,%edi
ffffffff800116f1:	41 ff d0             	call   *%r8
ffffffff800116f4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff800116f8:	48 2b 45 f0          	sub    -0x10(%rbp),%rax
ffffffff800116fc:	48 89 c2             	mov    %rax,%rdx
ffffffff800116ff:	8b 45 10             	mov    0x10(%rbp),%eax
ffffffff80011702:	48 39 c2             	cmp    %rax,%rdx
ffffffff80011705:	72 c7                	jb     ffffffff800116ce <_out_rev+0xce>
ffffffff80011707:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8001170b:	c9                   	leave  
ffffffff8001170c:	c3                   	ret    

ffffffff8001170d <_ntoa_format>:
ffffffff8001170d:	f3 0f 1e fa          	endbr64 
ffffffff80011711:	55                   	push   %rbp
ffffffff80011712:	48 89 e5             	mov    %rsp,%rbp
ffffffff80011715:	48 83 ec 40          	sub    $0x40,%rsp
ffffffff80011719:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8001171d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff80011721:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
ffffffff80011725:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
ffffffff80011729:	4c 89 45 d8          	mov    %r8,-0x28(%rbp)
ffffffff8001172d:	4c 89 4d d0          	mov    %r9,-0x30(%rbp)
ffffffff80011731:	8b 45 10             	mov    0x10(%rbp),%eax
ffffffff80011734:	88 45 cc             	mov    %al,-0x34(%rbp)
ffffffff80011737:	8b 45 30             	mov    0x30(%rbp),%eax
ffffffff8001173a:	83 e0 02             	and    $0x2,%eax
ffffffff8001173d:	85 c0                	test   %eax,%eax
ffffffff8001173f:	75 7e                	jne    ffffffff800117bf <_ntoa_format+0xb2>
ffffffff80011741:	83 7d 28 00          	cmpl   $0x0,0x28(%rbp)
ffffffff80011745:	74 36                	je     ffffffff8001177d <_ntoa_format+0x70>
ffffffff80011747:	8b 45 30             	mov    0x30(%rbp),%eax
ffffffff8001174a:	83 e0 01             	and    $0x1,%eax
ffffffff8001174d:	85 c0                	test   %eax,%eax
ffffffff8001174f:	74 2c                	je     ffffffff8001177d <_ntoa_format+0x70>
ffffffff80011751:	80 7d cc 00          	cmpb   $0x0,-0x34(%rbp)
ffffffff80011755:	75 0a                	jne    ffffffff80011761 <_ntoa_format+0x54>
ffffffff80011757:	8b 45 30             	mov    0x30(%rbp),%eax
ffffffff8001175a:	83 e0 0c             	and    $0xc,%eax
ffffffff8001175d:	85 c0                	test   %eax,%eax
ffffffff8001175f:	74 1c                	je     ffffffff8001177d <_ntoa_format+0x70>
ffffffff80011761:	83 6d 28 01          	subl   $0x1,0x28(%rbp)
ffffffff80011765:	eb 16                	jmp    ffffffff8001177d <_ntoa_format+0x70>
ffffffff80011767:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8001176b:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffff8001176f:	48 89 55 d0          	mov    %rdx,-0x30(%rbp)
ffffffff80011773:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff80011777:	48 01 d0             	add    %rdx,%rax
ffffffff8001177a:	c6 00 30             	movb   $0x30,(%rax)
ffffffff8001177d:	8b 45 20             	mov    0x20(%rbp),%eax
ffffffff80011780:	48 39 45 d0          	cmp    %rax,-0x30(%rbp)
ffffffff80011784:	73 1f                	jae    ffffffff800117a5 <_ntoa_format+0x98>
ffffffff80011786:	48 83 7d d0 3f       	cmpq   $0x3f,-0x30(%rbp)
ffffffff8001178b:	76 da                	jbe    ffffffff80011767 <_ntoa_format+0x5a>
ffffffff8001178d:	eb 16                	jmp    ffffffff800117a5 <_ntoa_format+0x98>
ffffffff8001178f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff80011793:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffff80011797:	48 89 55 d0          	mov    %rdx,-0x30(%rbp)
ffffffff8001179b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff8001179f:	48 01 d0             	add    %rdx,%rax
ffffffff800117a2:	c6 00 30             	movb   $0x30,(%rax)
ffffffff800117a5:	8b 45 30             	mov    0x30(%rbp),%eax
ffffffff800117a8:	83 e0 01             	and    $0x1,%eax
ffffffff800117ab:	85 c0                	test   %eax,%eax
ffffffff800117ad:	74 10                	je     ffffffff800117bf <_ntoa_format+0xb2>
ffffffff800117af:	8b 45 28             	mov    0x28(%rbp),%eax
ffffffff800117b2:	48 39 45 d0          	cmp    %rax,-0x30(%rbp)
ffffffff800117b6:	73 07                	jae    ffffffff800117bf <_ntoa_format+0xb2>
ffffffff800117b8:	48 83 7d d0 3f       	cmpq   $0x3f,-0x30(%rbp)
ffffffff800117bd:	76 d0                	jbe    ffffffff8001178f <_ntoa_format+0x82>
ffffffff800117bf:	8b 45 30             	mov    0x30(%rbp),%eax
ffffffff800117c2:	83 e0 10             	and    $0x10,%eax
ffffffff800117c5:	85 c0                	test   %eax,%eax
ffffffff800117c7:	0f 84 da 00 00 00    	je     ffffffff800118a7 <_ntoa_format+0x19a>
ffffffff800117cd:	8b 45 30             	mov    0x30(%rbp),%eax
ffffffff800117d0:	25 00 04 00 00       	and    $0x400,%eax
ffffffff800117d5:	85 c0                	test   %eax,%eax
ffffffff800117d7:	75 30                	jne    ffffffff80011809 <_ntoa_format+0xfc>
ffffffff800117d9:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
ffffffff800117de:	74 29                	je     ffffffff80011809 <_ntoa_format+0xfc>
ffffffff800117e0:	8b 45 20             	mov    0x20(%rbp),%eax
ffffffff800117e3:	48 39 45 d0          	cmp    %rax,-0x30(%rbp)
ffffffff800117e7:	74 09                	je     ffffffff800117f2 <_ntoa_format+0xe5>
ffffffff800117e9:	8b 45 28             	mov    0x28(%rbp),%eax
ffffffff800117ec:	48 39 45 d0          	cmp    %rax,-0x30(%rbp)
ffffffff800117f0:	75 17                	jne    ffffffff80011809 <_ntoa_format+0xfc>
ffffffff800117f2:	48 83 6d d0 01       	subq   $0x1,-0x30(%rbp)
ffffffff800117f7:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
ffffffff800117fc:	74 0b                	je     ffffffff80011809 <_ntoa_format+0xfc>
ffffffff800117fe:	83 7d 18 10          	cmpl   $0x10,0x18(%rbp)
ffffffff80011802:	75 05                	jne    ffffffff80011809 <_ntoa_format+0xfc>
ffffffff80011804:	48 83 6d d0 01       	subq   $0x1,-0x30(%rbp)
ffffffff80011809:	83 7d 18 10          	cmpl   $0x10,0x18(%rbp)
ffffffff8001180d:	75 29                	jne    ffffffff80011838 <_ntoa_format+0x12b>
ffffffff8001180f:	8b 45 30             	mov    0x30(%rbp),%eax
ffffffff80011812:	83 e0 20             	and    $0x20,%eax
ffffffff80011815:	85 c0                	test   %eax,%eax
ffffffff80011817:	75 1f                	jne    ffffffff80011838 <_ntoa_format+0x12b>
ffffffff80011819:	48 83 7d d0 3f       	cmpq   $0x3f,-0x30(%rbp)
ffffffff8001181e:	77 18                	ja     ffffffff80011838 <_ntoa_format+0x12b>
ffffffff80011820:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff80011824:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffff80011828:	48 89 55 d0          	mov    %rdx,-0x30(%rbp)
ffffffff8001182c:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff80011830:	48 01 d0             	add    %rdx,%rax
ffffffff80011833:	c6 00 78             	movb   $0x78,(%rax)
ffffffff80011836:	eb 52                	jmp    ffffffff8001188a <_ntoa_format+0x17d>
ffffffff80011838:	83 7d 18 10          	cmpl   $0x10,0x18(%rbp)
ffffffff8001183c:	75 29                	jne    ffffffff80011867 <_ntoa_format+0x15a>
ffffffff8001183e:	8b 45 30             	mov    0x30(%rbp),%eax
ffffffff80011841:	83 e0 20             	and    $0x20,%eax
ffffffff80011844:	85 c0                	test   %eax,%eax
ffffffff80011846:	74 1f                	je     ffffffff80011867 <_ntoa_format+0x15a>
ffffffff80011848:	48 83 7d d0 3f       	cmpq   $0x3f,-0x30(%rbp)
ffffffff8001184d:	77 18                	ja     ffffffff80011867 <_ntoa_format+0x15a>
ffffffff8001184f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff80011853:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffff80011857:	48 89 55 d0          	mov    %rdx,-0x30(%rbp)
ffffffff8001185b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff8001185f:	48 01 d0             	add    %rdx,%rax
ffffffff80011862:	c6 00 58             	movb   $0x58,(%rax)
ffffffff80011865:	eb 23                	jmp    ffffffff8001188a <_ntoa_format+0x17d>
ffffffff80011867:	83 7d 18 02          	cmpl   $0x2,0x18(%rbp)
ffffffff8001186b:	75 1d                	jne    ffffffff8001188a <_ntoa_format+0x17d>
ffffffff8001186d:	48 83 7d d0 3f       	cmpq   $0x3f,-0x30(%rbp)
ffffffff80011872:	77 16                	ja     ffffffff8001188a <_ntoa_format+0x17d>
ffffffff80011874:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff80011878:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffff8001187c:	48 89 55 d0          	mov    %rdx,-0x30(%rbp)
ffffffff80011880:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff80011884:	48 01 d0             	add    %rdx,%rax
ffffffff80011887:	c6 00 62             	movb   $0x62,(%rax)
ffffffff8001188a:	48 83 7d d0 3f       	cmpq   $0x3f,-0x30(%rbp)
ffffffff8001188f:	77 16                	ja     ffffffff800118a7 <_ntoa_format+0x19a>
ffffffff80011891:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff80011895:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffff80011899:	48 89 55 d0          	mov    %rdx,-0x30(%rbp)
ffffffff8001189d:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff800118a1:	48 01 d0             	add    %rdx,%rax
ffffffff800118a4:	c6 00 30             	movb   $0x30,(%rax)
ffffffff800118a7:	48 83 7d d0 3f       	cmpq   $0x3f,-0x30(%rbp)
ffffffff800118ac:	77 60                	ja     ffffffff8001190e <_ntoa_format+0x201>
ffffffff800118ae:	80 7d cc 00          	cmpb   $0x0,-0x34(%rbp)
ffffffff800118b2:	74 18                	je     ffffffff800118cc <_ntoa_format+0x1bf>
ffffffff800118b4:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff800118b8:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffff800118bc:	48 89 55 d0          	mov    %rdx,-0x30(%rbp)
ffffffff800118c0:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff800118c4:	48 01 d0             	add    %rdx,%rax
ffffffff800118c7:	c6 00 2d             	movb   $0x2d,(%rax)
ffffffff800118ca:	eb 42                	jmp    ffffffff8001190e <_ntoa_format+0x201>
ffffffff800118cc:	8b 45 30             	mov    0x30(%rbp),%eax
ffffffff800118cf:	83 e0 04             	and    $0x4,%eax
ffffffff800118d2:	85 c0                	test   %eax,%eax
ffffffff800118d4:	74 18                	je     ffffffff800118ee <_ntoa_format+0x1e1>
ffffffff800118d6:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff800118da:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffff800118de:	48 89 55 d0          	mov    %rdx,-0x30(%rbp)
ffffffff800118e2:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff800118e6:	48 01 d0             	add    %rdx,%rax
ffffffff800118e9:	c6 00 2b             	movb   $0x2b,(%rax)
ffffffff800118ec:	eb 20                	jmp    ffffffff8001190e <_ntoa_format+0x201>
ffffffff800118ee:	8b 45 30             	mov    0x30(%rbp),%eax
ffffffff800118f1:	83 e0 08             	and    $0x8,%eax
ffffffff800118f4:	85 c0                	test   %eax,%eax
ffffffff800118f6:	74 16                	je     ffffffff8001190e <_ntoa_format+0x201>
ffffffff800118f8:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff800118fc:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffff80011900:	48 89 55 d0          	mov    %rdx,-0x30(%rbp)
ffffffff80011904:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff80011908:	48 01 d0             	add    %rdx,%rax
ffffffff8001190b:	c6 00 20             	movb   $0x20,(%rax)
ffffffff8001190e:	4c 8b 4d d0          	mov    -0x30(%rbp),%r9
ffffffff80011912:	4c 8b 45 d8          	mov    -0x28(%rbp),%r8
ffffffff80011916:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
ffffffff8001191a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff8001191e:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
ffffffff80011922:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80011926:	8b 7d 30             	mov    0x30(%rbp),%edi
ffffffff80011929:	57                   	push   %rdi
ffffffff8001192a:	8b 7d 28             	mov    0x28(%rbp),%edi
ffffffff8001192d:	57                   	push   %rdi
ffffffff8001192e:	48 89 c7             	mov    %rax,%rdi
ffffffff80011931:	e8 ca fc ff ff       	call   ffffffff80011600 <_out_rev>
ffffffff80011936:	48 83 c4 10          	add    $0x10,%rsp
ffffffff8001193a:	c9                   	leave  
ffffffff8001193b:	c3                   	ret    

ffffffff8001193c <_ntoa_long>:
ffffffff8001193c:	f3 0f 1e fa          	endbr64 
ffffffff80011940:	55                   	push   %rbp
ffffffff80011941:	48 89 e5             	mov    %rsp,%rbp
ffffffff80011944:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
ffffffff80011948:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
ffffffff8001194c:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
ffffffff80011950:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
ffffffff80011954:	48 89 4d 90          	mov    %rcx,-0x70(%rbp)
ffffffff80011958:	4c 89 45 88          	mov    %r8,-0x78(%rbp)
ffffffff8001195c:	44 89 c8             	mov    %r9d,%eax
ffffffff8001195f:	88 45 84             	mov    %al,-0x7c(%rbp)
ffffffff80011962:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
ffffffff80011969:	00 
ffffffff8001196a:	48 83 7d 88 00       	cmpq   $0x0,-0x78(%rbp)
ffffffff8001196f:	75 04                	jne    ffffffff80011975 <_ntoa_long+0x39>
ffffffff80011971:	83 65 28 ef          	andl   $0xffffffef,0x28(%rbp)
ffffffff80011975:	8b 45 28             	mov    0x28(%rbp),%eax
ffffffff80011978:	25 00 04 00 00       	and    $0x400,%eax
ffffffff8001197d:	85 c0                	test   %eax,%eax
ffffffff8001197f:	74 07                	je     ffffffff80011988 <_ntoa_long+0x4c>
ffffffff80011981:	48 83 7d 88 00       	cmpq   $0x0,-0x78(%rbp)
ffffffff80011986:	74 74                	je     ffffffff800119fc <_ntoa_long+0xc0>
ffffffff80011988:	48 8b 45 88          	mov    -0x78(%rbp),%rax
ffffffff8001198c:	ba 00 00 00 00       	mov    $0x0,%edx
ffffffff80011991:	48 f7 75 10          	divq   0x10(%rbp)
ffffffff80011995:	48 89 d0             	mov    %rdx,%rax
ffffffff80011998:	88 45 f7             	mov    %al,-0x9(%rbp)
ffffffff8001199b:	80 7d f7 09          	cmpb   $0x9,-0x9(%rbp)
ffffffff8001199f:	7f 0b                	jg     ffffffff800119ac <_ntoa_long+0x70>
ffffffff800119a1:	0f b6 45 f7          	movzbl -0x9(%rbp),%eax
ffffffff800119a5:	83 c0 30             	add    $0x30,%eax
ffffffff800119a8:	89 c1                	mov    %eax,%ecx
ffffffff800119aa:	eb 21                	jmp    ffffffff800119cd <_ntoa_long+0x91>
ffffffff800119ac:	8b 45 28             	mov    0x28(%rbp),%eax
ffffffff800119af:	83 e0 20             	and    $0x20,%eax
ffffffff800119b2:	85 c0                	test   %eax,%eax
ffffffff800119b4:	74 07                	je     ffffffff800119bd <_ntoa_long+0x81>
ffffffff800119b6:	ba 41 00 00 00       	mov    $0x41,%edx
ffffffff800119bb:	eb 05                	jmp    ffffffff800119c2 <_ntoa_long+0x86>
ffffffff800119bd:	ba 61 00 00 00       	mov    $0x61,%edx
ffffffff800119c2:	0f b6 45 f7          	movzbl -0x9(%rbp),%eax
ffffffff800119c6:	01 d0                	add    %edx,%eax
ffffffff800119c8:	83 e8 0a             	sub    $0xa,%eax
ffffffff800119cb:	89 c1                	mov    %eax,%ecx
ffffffff800119cd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff800119d1:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffff800119d5:	48 89 55 f8          	mov    %rdx,-0x8(%rbp)
ffffffff800119d9:	88 4c 05 b0          	mov    %cl,-0x50(%rbp,%rax,1)
ffffffff800119dd:	48 8b 45 88          	mov    -0x78(%rbp),%rax
ffffffff800119e1:	ba 00 00 00 00       	mov    $0x0,%edx
ffffffff800119e6:	48 f7 75 10          	divq   0x10(%rbp)
ffffffff800119ea:	48 89 45 88          	mov    %rax,-0x78(%rbp)
ffffffff800119ee:	48 83 7d 88 00       	cmpq   $0x0,-0x78(%rbp)
ffffffff800119f3:	74 07                	je     ffffffff800119fc <_ntoa_long+0xc0>
ffffffff800119f5:	48 83 7d f8 3f       	cmpq   $0x3f,-0x8(%rbp)
ffffffff800119fa:	76 8c                	jbe    ffffffff80011988 <_ntoa_long+0x4c>
ffffffff800119fc:	48 8b 45 10          	mov    0x10(%rbp),%rax
ffffffff80011a00:	41 89 c3             	mov    %eax,%r11d
ffffffff80011a03:	0f b6 7d 84          	movzbl -0x7c(%rbp),%edi
ffffffff80011a07:	4c 8b 4d f8          	mov    -0x8(%rbp),%r9
ffffffff80011a0b:	4c 8d 55 b0          	lea    -0x50(%rbp),%r10
ffffffff80011a0f:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
ffffffff80011a13:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
ffffffff80011a17:	48 8b 75 a0          	mov    -0x60(%rbp),%rsi
ffffffff80011a1b:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff80011a1f:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80011a23:	44 8b 45 28          	mov    0x28(%rbp),%r8d
ffffffff80011a27:	41 50                	push   %r8
ffffffff80011a29:	44 8b 45 20          	mov    0x20(%rbp),%r8d
ffffffff80011a2d:	41 50                	push   %r8
ffffffff80011a2f:	44 8b 45 18          	mov    0x18(%rbp),%r8d
ffffffff80011a33:	41 50                	push   %r8
ffffffff80011a35:	41 53                	push   %r11
ffffffff80011a37:	57                   	push   %rdi
ffffffff80011a38:	4d 89 d0             	mov    %r10,%r8
ffffffff80011a3b:	48 89 c7             	mov    %rax,%rdi
ffffffff80011a3e:	e8 ca fc ff ff       	call   ffffffff8001170d <_ntoa_format>
ffffffff80011a43:	48 83 c4 30          	add    $0x30,%rsp
ffffffff80011a47:	90                   	nop
ffffffff80011a48:	c9                   	leave  
ffffffff80011a49:	c3                   	ret    

ffffffff80011a4a <_ntoa_long_long>:
ffffffff80011a4a:	f3 0f 1e fa          	endbr64 
ffffffff80011a4e:	55                   	push   %rbp
ffffffff80011a4f:	48 89 e5             	mov    %rsp,%rbp
ffffffff80011a52:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
ffffffff80011a56:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
ffffffff80011a5a:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
ffffffff80011a5e:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
ffffffff80011a62:	48 89 4d 90          	mov    %rcx,-0x70(%rbp)
ffffffff80011a66:	4c 89 45 88          	mov    %r8,-0x78(%rbp)
ffffffff80011a6a:	44 89 c8             	mov    %r9d,%eax
ffffffff80011a6d:	88 45 84             	mov    %al,-0x7c(%rbp)
ffffffff80011a70:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
ffffffff80011a77:	00 
ffffffff80011a78:	48 83 7d 88 00       	cmpq   $0x0,-0x78(%rbp)
ffffffff80011a7d:	75 04                	jne    ffffffff80011a83 <_ntoa_long_long+0x39>
ffffffff80011a7f:	83 65 28 ef          	andl   $0xffffffef,0x28(%rbp)
ffffffff80011a83:	8b 45 28             	mov    0x28(%rbp),%eax
ffffffff80011a86:	25 00 04 00 00       	and    $0x400,%eax
ffffffff80011a8b:	85 c0                	test   %eax,%eax
ffffffff80011a8d:	74 07                	je     ffffffff80011a96 <_ntoa_long_long+0x4c>
ffffffff80011a8f:	48 83 7d 88 00       	cmpq   $0x0,-0x78(%rbp)
ffffffff80011a94:	74 74                	je     ffffffff80011b0a <_ntoa_long_long+0xc0>
ffffffff80011a96:	48 8b 45 88          	mov    -0x78(%rbp),%rax
ffffffff80011a9a:	ba 00 00 00 00       	mov    $0x0,%edx
ffffffff80011a9f:	48 f7 75 10          	divq   0x10(%rbp)
ffffffff80011aa3:	48 89 d0             	mov    %rdx,%rax
ffffffff80011aa6:	88 45 f7             	mov    %al,-0x9(%rbp)
ffffffff80011aa9:	80 7d f7 09          	cmpb   $0x9,-0x9(%rbp)
ffffffff80011aad:	7f 0b                	jg     ffffffff80011aba <_ntoa_long_long+0x70>
ffffffff80011aaf:	0f b6 45 f7          	movzbl -0x9(%rbp),%eax
ffffffff80011ab3:	83 c0 30             	add    $0x30,%eax
ffffffff80011ab6:	89 c1                	mov    %eax,%ecx
ffffffff80011ab8:	eb 21                	jmp    ffffffff80011adb <_ntoa_long_long+0x91>
ffffffff80011aba:	8b 45 28             	mov    0x28(%rbp),%eax
ffffffff80011abd:	83 e0 20             	and    $0x20,%eax
ffffffff80011ac0:	85 c0                	test   %eax,%eax
ffffffff80011ac2:	74 07                	je     ffffffff80011acb <_ntoa_long_long+0x81>
ffffffff80011ac4:	ba 41 00 00 00       	mov    $0x41,%edx
ffffffff80011ac9:	eb 05                	jmp    ffffffff80011ad0 <_ntoa_long_long+0x86>
ffffffff80011acb:	ba 61 00 00 00       	mov    $0x61,%edx
ffffffff80011ad0:	0f b6 45 f7          	movzbl -0x9(%rbp),%eax
ffffffff80011ad4:	01 d0                	add    %edx,%eax
ffffffff80011ad6:	83 e8 0a             	sub    $0xa,%eax
ffffffff80011ad9:	89 c1                	mov    %eax,%ecx
ffffffff80011adb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80011adf:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffff80011ae3:	48 89 55 f8          	mov    %rdx,-0x8(%rbp)
ffffffff80011ae7:	88 4c 05 b0          	mov    %cl,-0x50(%rbp,%rax,1)
ffffffff80011aeb:	48 8b 45 88          	mov    -0x78(%rbp),%rax
ffffffff80011aef:	ba 00 00 00 00       	mov    $0x0,%edx
ffffffff80011af4:	48 f7 75 10          	divq   0x10(%rbp)
ffffffff80011af8:	48 89 45 88          	mov    %rax,-0x78(%rbp)
ffffffff80011afc:	48 83 7d 88 00       	cmpq   $0x0,-0x78(%rbp)
ffffffff80011b01:	74 07                	je     ffffffff80011b0a <_ntoa_long_long+0xc0>
ffffffff80011b03:	48 83 7d f8 3f       	cmpq   $0x3f,-0x8(%rbp)
ffffffff80011b08:	76 8c                	jbe    ffffffff80011a96 <_ntoa_long_long+0x4c>
ffffffff80011b0a:	48 8b 45 10          	mov    0x10(%rbp),%rax
ffffffff80011b0e:	41 89 c3             	mov    %eax,%r11d
ffffffff80011b11:	0f b6 7d 84          	movzbl -0x7c(%rbp),%edi
ffffffff80011b15:	4c 8b 4d f8          	mov    -0x8(%rbp),%r9
ffffffff80011b19:	4c 8d 55 b0          	lea    -0x50(%rbp),%r10
ffffffff80011b1d:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
ffffffff80011b21:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
ffffffff80011b25:	48 8b 75 a0          	mov    -0x60(%rbp),%rsi
ffffffff80011b29:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff80011b2d:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80011b31:	44 8b 45 28          	mov    0x28(%rbp),%r8d
ffffffff80011b35:	41 50                	push   %r8
ffffffff80011b37:	44 8b 45 20          	mov    0x20(%rbp),%r8d
ffffffff80011b3b:	41 50                	push   %r8
ffffffff80011b3d:	44 8b 45 18          	mov    0x18(%rbp),%r8d
ffffffff80011b41:	41 50                	push   %r8
ffffffff80011b43:	41 53                	push   %r11
ffffffff80011b45:	57                   	push   %rdi
ffffffff80011b46:	4d 89 d0             	mov    %r10,%r8
ffffffff80011b49:	48 89 c7             	mov    %rax,%rdi
ffffffff80011b4c:	e8 bc fb ff ff       	call   ffffffff8001170d <_ntoa_format>
ffffffff80011b51:	48 83 c4 30          	add    $0x30,%rsp
ffffffff80011b55:	90                   	nop
ffffffff80011b56:	c9                   	leave  
ffffffff80011b57:	c3                   	ret    

ffffffff80011b58 <_vsnprintf>:
ffffffff80011b58:	f3 0f 1e fa          	endbr64 
ffffffff80011b5c:	55                   	push   %rbp
ffffffff80011b5d:	48 89 e5             	mov    %rsp,%rbp
ffffffff80011b60:	48 81 ec f0 00 00 00 	sub    $0xf0,%rsp
ffffffff80011b67:	48 89 bd 38 ff ff ff 	mov    %rdi,-0xc8(%rbp)
ffffffff80011b6e:	48 89 b5 30 ff ff ff 	mov    %rsi,-0xd0(%rbp)
ffffffff80011b75:	48 89 95 28 ff ff ff 	mov    %rdx,-0xd8(%rbp)
ffffffff80011b7c:	48 89 8d 20 ff ff ff 	mov    %rcx,-0xe0(%rbp)
ffffffff80011b83:	4c 89 85 18 ff ff ff 	mov    %r8,-0xe8(%rbp)
ffffffff80011b8a:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
ffffffff80011b91:	00 
ffffffff80011b92:	48 83 bd 30 ff ff ff 	cmpq   $0x0,-0xd0(%rbp)
ffffffff80011b99:	00 
ffffffff80011b9a:	0f 85 2c 19 00 00    	jne    ffffffff800134cc <_vsnprintf+0x1974>
ffffffff80011ba0:	48 8d 05 ac f8 ff ff 	lea    -0x754(%rip),%rax        # ffffffff80011453 <_out_null>
ffffffff80011ba7:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
ffffffff80011bae:	e9 19 19 00 00       	jmp    ffffffff800134cc <_vsnprintf+0x1974>
ffffffff80011bb3:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
ffffffff80011bba:	0f b6 00             	movzbl (%rax),%eax
ffffffff80011bbd:	3c 25                	cmp    $0x25,%al
ffffffff80011bbf:	74 4e                	je     ffffffff80011c0f <_vsnprintf+0xb7>
ffffffff80011bc1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80011bc5:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffff80011bc9:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
ffffffff80011bcd:	48 8b 95 20 ff ff ff 	mov    -0xe0(%rbp),%rdx
ffffffff80011bd4:	0f b6 12             	movzbl (%rdx),%edx
ffffffff80011bd7:	0f be fa             	movsbl %dl,%edi
ffffffff80011bda:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
ffffffff80011be1:	48 8b b5 30 ff ff ff 	mov    -0xd0(%rbp),%rsi
ffffffff80011be8:	4c 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%r8
ffffffff80011bef:	48 89 d1             	mov    %rdx,%rcx
ffffffff80011bf2:	48 89 c2             	mov    %rax,%rdx
ffffffff80011bf5:	41 ff d0             	call   *%r8
ffffffff80011bf8:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
ffffffff80011bff:	48 83 c0 01          	add    $0x1,%rax
ffffffff80011c03:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
ffffffff80011c0a:	e9 bd 18 00 00       	jmp    ffffffff800134cc <_vsnprintf+0x1974>
ffffffff80011c0f:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
ffffffff80011c16:	48 83 c0 01          	add    $0x1,%rax
ffffffff80011c1a:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
ffffffff80011c21:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
ffffffff80011c28:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
ffffffff80011c2f:	0f b6 00             	movzbl (%rax),%eax
ffffffff80011c32:	0f be c0             	movsbl %al,%eax
ffffffff80011c35:	83 e8 20             	sub    $0x20,%eax
ffffffff80011c38:	83 f8 10             	cmp    $0x10,%eax
ffffffff80011c3b:	0f 87 c1 00 00 00    	ja     ffffffff80011d02 <_vsnprintf+0x1aa>
ffffffff80011c41:	89 c0                	mov    %eax,%eax
ffffffff80011c43:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
ffffffff80011c4a:	00 
ffffffff80011c4b:	48 8d 05 6e bc 02 00 	lea    0x2bc6e(%rip),%rax        # ffffffff8003d8c0 <__FUNCTION__.0.lto_priv.9+0x29>
ffffffff80011c52:	8b 04 02             	mov    (%rdx,%rax,1),%eax
ffffffff80011c55:	48 98                	cltq   
ffffffff80011c57:	48 8d 15 62 bc 02 00 	lea    0x2bc62(%rip),%rdx        # ffffffff8003d8c0 <__FUNCTION__.0.lto_priv.9+0x29>
ffffffff80011c5e:	48 01 d0             	add    %rdx,%rax
ffffffff80011c61:	3e ff e0             	notrack jmp *%rax
ffffffff80011c64:	83 4d fc 01          	orl    $0x1,-0x4(%rbp)
ffffffff80011c68:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
ffffffff80011c6f:	48 83 c0 01          	add    $0x1,%rax
ffffffff80011c73:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
ffffffff80011c7a:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%rbp)
ffffffff80011c81:	e9 84 00 00 00       	jmp    ffffffff80011d0a <_vsnprintf+0x1b2>
ffffffff80011c86:	83 4d fc 02          	orl    $0x2,-0x4(%rbp)
ffffffff80011c8a:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
ffffffff80011c91:	48 83 c0 01          	add    $0x1,%rax
ffffffff80011c95:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
ffffffff80011c9c:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%rbp)
ffffffff80011ca3:	eb 65                	jmp    ffffffff80011d0a <_vsnprintf+0x1b2>
ffffffff80011ca5:	83 4d fc 04          	orl    $0x4,-0x4(%rbp)
ffffffff80011ca9:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
ffffffff80011cb0:	48 83 c0 01          	add    $0x1,%rax
ffffffff80011cb4:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
ffffffff80011cbb:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%rbp)
ffffffff80011cc2:	eb 46                	jmp    ffffffff80011d0a <_vsnprintf+0x1b2>
ffffffff80011cc4:	83 4d fc 08          	orl    $0x8,-0x4(%rbp)
ffffffff80011cc8:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
ffffffff80011ccf:	48 83 c0 01          	add    $0x1,%rax
ffffffff80011cd3:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
ffffffff80011cda:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%rbp)
ffffffff80011ce1:	eb 27                	jmp    ffffffff80011d0a <_vsnprintf+0x1b2>
ffffffff80011ce3:	83 4d fc 10          	orl    $0x10,-0x4(%rbp)
ffffffff80011ce7:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
ffffffff80011cee:	48 83 c0 01          	add    $0x1,%rax
ffffffff80011cf2:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
ffffffff80011cf9:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%rbp)
ffffffff80011d00:	eb 08                	jmp    ffffffff80011d0a <_vsnprintf+0x1b2>
ffffffff80011d02:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
ffffffff80011d09:	90                   	nop
ffffffff80011d0a:	83 7d f0 00          	cmpl   $0x0,-0x10(%rbp)
ffffffff80011d0e:	0f 85 14 ff ff ff    	jne    ffffffff80011c28 <_vsnprintf+0xd0>
ffffffff80011d14:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
ffffffff80011d1b:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
ffffffff80011d22:	0f b6 00             	movzbl (%rax),%eax
ffffffff80011d25:	0f be c0             	movsbl %al,%eax
ffffffff80011d28:	89 c7                	mov    %eax,%edi
ffffffff80011d2a:	e8 43 f8 ff ff       	call   ffffffff80011572 <_is_digit>
ffffffff80011d2f:	84 c0                	test   %al,%al
ffffffff80011d31:	74 17                	je     ffffffff80011d4a <_vsnprintf+0x1f2>
ffffffff80011d33:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
ffffffff80011d3a:	48 89 c7             	mov    %rax,%rdi
ffffffff80011d3d:	e8 5a f8 ff ff       	call   ffffffff8001159c <_atoi>
ffffffff80011d42:	89 45 f8             	mov    %eax,-0x8(%rbp)
ffffffff80011d45:	e9 9b 00 00 00       	jmp    ffffffff80011de5 <_vsnprintf+0x28d>
ffffffff80011d4a:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
ffffffff80011d51:	0f b6 00             	movzbl (%rax),%eax
ffffffff80011d54:	3c 2a                	cmp    $0x2a,%al
ffffffff80011d56:	0f 85 89 00 00 00    	jne    ffffffff80011de5 <_vsnprintf+0x28d>
ffffffff80011d5c:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
ffffffff80011d63:	8b 00                	mov    (%rax),%eax
ffffffff80011d65:	83 f8 2f             	cmp    $0x2f,%eax
ffffffff80011d68:	77 30                	ja     ffffffff80011d9a <_vsnprintf+0x242>
ffffffff80011d6a:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
ffffffff80011d71:	48 8b 50 10          	mov    0x10(%rax),%rdx
ffffffff80011d75:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
ffffffff80011d7c:	8b 00                	mov    (%rax),%eax
ffffffff80011d7e:	89 c0                	mov    %eax,%eax
ffffffff80011d80:	48 01 d0             	add    %rdx,%rax
ffffffff80011d83:	48 8b 95 18 ff ff ff 	mov    -0xe8(%rbp),%rdx
ffffffff80011d8a:	8b 12                	mov    (%rdx),%edx
ffffffff80011d8c:	8d 4a 08             	lea    0x8(%rdx),%ecx
ffffffff80011d8f:	48 8b 95 18 ff ff ff 	mov    -0xe8(%rbp),%rdx
ffffffff80011d96:	89 0a                	mov    %ecx,(%rdx)
ffffffff80011d98:	eb 1a                	jmp    ffffffff80011db4 <_vsnprintf+0x25c>
ffffffff80011d9a:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
ffffffff80011da1:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff80011da5:	48 8d 50 08          	lea    0x8(%rax),%rdx
ffffffff80011da9:	48 8b 8d 18 ff ff ff 	mov    -0xe8(%rbp),%rcx
ffffffff80011db0:	48 89 51 08          	mov    %rdx,0x8(%rcx)
ffffffff80011db4:	8b 00                	mov    (%rax),%eax
ffffffff80011db6:	89 45 80             	mov    %eax,-0x80(%rbp)
ffffffff80011db9:	83 7d 80 00          	cmpl   $0x0,-0x80(%rbp)
ffffffff80011dbd:	79 0e                	jns    ffffffff80011dcd <_vsnprintf+0x275>
ffffffff80011dbf:	83 4d fc 02          	orl    $0x2,-0x4(%rbp)
ffffffff80011dc3:	8b 45 80             	mov    -0x80(%rbp),%eax
ffffffff80011dc6:	f7 d8                	neg    %eax
ffffffff80011dc8:	89 45 f8             	mov    %eax,-0x8(%rbp)
ffffffff80011dcb:	eb 06                	jmp    ffffffff80011dd3 <_vsnprintf+0x27b>
ffffffff80011dcd:	8b 45 80             	mov    -0x80(%rbp),%eax
ffffffff80011dd0:	89 45 f8             	mov    %eax,-0x8(%rbp)
ffffffff80011dd3:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
ffffffff80011dda:	48 83 c0 01          	add    $0x1,%rax
ffffffff80011dde:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
ffffffff80011de5:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
ffffffff80011dec:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
ffffffff80011df3:	0f b6 00             	movzbl (%rax),%eax
ffffffff80011df6:	3c 2e                	cmp    $0x2e,%al
ffffffff80011df8:	0f 85 df 00 00 00    	jne    ffffffff80011edd <_vsnprintf+0x385>
ffffffff80011dfe:	81 4d fc 00 04 00 00 	orl    $0x400,-0x4(%rbp)
ffffffff80011e05:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
ffffffff80011e0c:	48 83 c0 01          	add    $0x1,%rax
ffffffff80011e10:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
ffffffff80011e17:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
ffffffff80011e1e:	0f b6 00             	movzbl (%rax),%eax
ffffffff80011e21:	0f be c0             	movsbl %al,%eax
ffffffff80011e24:	89 c7                	mov    %eax,%edi
ffffffff80011e26:	e8 47 f7 ff ff       	call   ffffffff80011572 <_is_digit>
ffffffff80011e2b:	84 c0                	test   %al,%al
ffffffff80011e2d:	74 17                	je     ffffffff80011e46 <_vsnprintf+0x2ee>
ffffffff80011e2f:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
ffffffff80011e36:	48 89 c7             	mov    %rax,%rdi
ffffffff80011e39:	e8 5e f7 ff ff       	call   ffffffff8001159c <_atoi>
ffffffff80011e3e:	89 45 f4             	mov    %eax,-0xc(%rbp)
ffffffff80011e41:	e9 97 00 00 00       	jmp    ffffffff80011edd <_vsnprintf+0x385>
ffffffff80011e46:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
ffffffff80011e4d:	0f b6 00             	movzbl (%rax),%eax
ffffffff80011e50:	3c 2a                	cmp    $0x2a,%al
ffffffff80011e52:	0f 85 85 00 00 00    	jne    ffffffff80011edd <_vsnprintf+0x385>
ffffffff80011e58:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
ffffffff80011e5f:	8b 00                	mov    (%rax),%eax
ffffffff80011e61:	83 f8 2f             	cmp    $0x2f,%eax
ffffffff80011e64:	77 30                	ja     ffffffff80011e96 <_vsnprintf+0x33e>
ffffffff80011e66:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
ffffffff80011e6d:	48 8b 50 10          	mov    0x10(%rax),%rdx
ffffffff80011e71:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
ffffffff80011e78:	8b 00                	mov    (%rax),%eax
ffffffff80011e7a:	89 c0                	mov    %eax,%eax
ffffffff80011e7c:	48 01 d0             	add    %rdx,%rax
ffffffff80011e7f:	48 8b 95 18 ff ff ff 	mov    -0xe8(%rbp),%rdx
ffffffff80011e86:	8b 12                	mov    (%rdx),%edx
ffffffff80011e88:	8d 4a 08             	lea    0x8(%rdx),%ecx
ffffffff80011e8b:	48 8b 95 18 ff ff ff 	mov    -0xe8(%rbp),%rdx
ffffffff80011e92:	89 0a                	mov    %ecx,(%rdx)
ffffffff80011e94:	eb 1a                	jmp    ffffffff80011eb0 <_vsnprintf+0x358>
ffffffff80011e96:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
ffffffff80011e9d:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff80011ea1:	48 8d 50 08          	lea    0x8(%rax),%rdx
ffffffff80011ea5:	48 8b 8d 18 ff ff ff 	mov    -0xe8(%rbp),%rcx
ffffffff80011eac:	48 89 51 08          	mov    %rdx,0x8(%rcx)
ffffffff80011eb0:	8b 00                	mov    (%rax),%eax
ffffffff80011eb2:	89 85 7c ff ff ff    	mov    %eax,-0x84(%rbp)
ffffffff80011eb8:	8b 85 7c ff ff ff    	mov    -0x84(%rbp),%eax
ffffffff80011ebe:	ba 00 00 00 00       	mov    $0x0,%edx
ffffffff80011ec3:	85 c0                	test   %eax,%eax
ffffffff80011ec5:	0f 48 c2             	cmovs  %edx,%eax
ffffffff80011ec8:	89 45 f4             	mov    %eax,-0xc(%rbp)
ffffffff80011ecb:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
ffffffff80011ed2:	48 83 c0 01          	add    $0x1,%rax
ffffffff80011ed6:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
ffffffff80011edd:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
ffffffff80011ee4:	0f b6 00             	movzbl (%rax),%eax
ffffffff80011ee7:	0f be c0             	movsbl %al,%eax
ffffffff80011eea:	83 e8 68             	sub    $0x68,%eax
ffffffff80011eed:	83 f8 12             	cmp    $0x12,%eax
ffffffff80011ef0:	0f 87 fc 00 00 00    	ja     ffffffff80011ff2 <_vsnprintf+0x49a>
ffffffff80011ef6:	89 c0                	mov    %eax,%eax
ffffffff80011ef8:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
ffffffff80011eff:	00 
ffffffff80011f00:	48 8d 05 fd b9 02 00 	lea    0x2b9fd(%rip),%rax        # ffffffff8003d904 <__FUNCTION__.0.lto_priv.9+0x6d>
ffffffff80011f07:	8b 04 02             	mov    (%rdx,%rax,1),%eax
ffffffff80011f0a:	48 98                	cltq   
ffffffff80011f0c:	48 8d 15 f1 b9 02 00 	lea    0x2b9f1(%rip),%rdx        # ffffffff8003d904 <__FUNCTION__.0.lto_priv.9+0x6d>
ffffffff80011f13:	48 01 d0             	add    %rdx,%rax
ffffffff80011f16:	3e ff e0             	notrack jmp *%rax
ffffffff80011f19:	81 4d fc 00 01 00 00 	orl    $0x100,-0x4(%rbp)
ffffffff80011f20:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
ffffffff80011f27:	48 83 c0 01          	add    $0x1,%rax
ffffffff80011f2b:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
ffffffff80011f32:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
ffffffff80011f39:	0f b6 00             	movzbl (%rax),%eax
ffffffff80011f3c:	3c 6c                	cmp    $0x6c,%al
ffffffff80011f3e:	0f 85 b1 00 00 00    	jne    ffffffff80011ff5 <_vsnprintf+0x49d>
ffffffff80011f44:	81 4d fc 00 02 00 00 	orl    $0x200,-0x4(%rbp)
ffffffff80011f4b:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
ffffffff80011f52:	48 83 c0 01          	add    $0x1,%rax
ffffffff80011f56:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
ffffffff80011f5d:	e9 93 00 00 00       	jmp    ffffffff80011ff5 <_vsnprintf+0x49d>
ffffffff80011f62:	81 4d fc 80 00 00 00 	orl    $0x80,-0x4(%rbp)
ffffffff80011f69:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
ffffffff80011f70:	48 83 c0 01          	add    $0x1,%rax
ffffffff80011f74:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
ffffffff80011f7b:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
ffffffff80011f82:	0f b6 00             	movzbl (%rax),%eax
ffffffff80011f85:	3c 68                	cmp    $0x68,%al
ffffffff80011f87:	75 6f                	jne    ffffffff80011ff8 <_vsnprintf+0x4a0>
ffffffff80011f89:	83 4d fc 40          	orl    $0x40,-0x4(%rbp)
ffffffff80011f8d:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
ffffffff80011f94:	48 83 c0 01          	add    $0x1,%rax
ffffffff80011f98:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
ffffffff80011f9f:	eb 57                	jmp    ffffffff80011ff8 <_vsnprintf+0x4a0>
ffffffff80011fa1:	81 4d fc 00 01 00 00 	orl    $0x100,-0x4(%rbp)
ffffffff80011fa8:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
ffffffff80011faf:	48 83 c0 01          	add    $0x1,%rax
ffffffff80011fb3:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
ffffffff80011fba:	eb 3d                	jmp    ffffffff80011ff9 <_vsnprintf+0x4a1>
ffffffff80011fbc:	81 4d fc 00 01 00 00 	orl    $0x100,-0x4(%rbp)
ffffffff80011fc3:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
ffffffff80011fca:	48 83 c0 01          	add    $0x1,%rax
ffffffff80011fce:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
ffffffff80011fd5:	eb 22                	jmp    ffffffff80011ff9 <_vsnprintf+0x4a1>
ffffffff80011fd7:	81 4d fc 00 01 00 00 	orl    $0x100,-0x4(%rbp)
ffffffff80011fde:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
ffffffff80011fe5:	48 83 c0 01          	add    $0x1,%rax
ffffffff80011fe9:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
ffffffff80011ff0:	eb 07                	jmp    ffffffff80011ff9 <_vsnprintf+0x4a1>
ffffffff80011ff2:	90                   	nop
ffffffff80011ff3:	eb 04                	jmp    ffffffff80011ff9 <_vsnprintf+0x4a1>
ffffffff80011ff5:	90                   	nop
ffffffff80011ff6:	eb 01                	jmp    ffffffff80011ff9 <_vsnprintf+0x4a1>
ffffffff80011ff8:	90                   	nop
ffffffff80011ff9:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
ffffffff80012000:	0f b6 00             	movzbl (%rax),%eax
ffffffff80012003:	0f be c0             	movsbl %al,%eax
ffffffff80012006:	83 f8 63             	cmp    $0x63,%eax
ffffffff80012009:	0f 8f 8d 00 00 00    	jg     ffffffff8001209c <_vsnprintf+0x544>
ffffffff8001200f:	83 f8 25             	cmp    $0x25,%eax
ffffffff80012012:	7d 59                	jge    ffffffff8001206d <_vsnprintf+0x515>
ffffffff80012014:	e9 69 14 00 00       	jmp    ffffffff80013482 <_vsnprintf+0x192a>
ffffffff80012019:	83 e8 64             	sub    $0x64,%eax
ffffffff8001201c:	89 c0                	mov    %eax,%eax
ffffffff8001201e:	ba 01 00 00 00       	mov    $0x1,%edx
ffffffff80012023:	89 c1                	mov    %eax,%ecx
ffffffff80012025:	48 d3 e2             	shl    %cl,%rdx
ffffffff80012028:	48 89 d0             	mov    %rdx,%rax
ffffffff8001202b:	48 89 c2             	mov    %rax,%rdx
ffffffff8001202e:	81 e2 21 08 12 00    	and    $0x120821,%edx
ffffffff80012034:	48 85 d2             	test   %rdx,%rdx
ffffffff80012037:	0f 95 c2             	setne  %dl
ffffffff8001203a:	84 d2                	test   %dl,%dl
ffffffff8001203c:	75 75                	jne    ffffffff800120b3 <_vsnprintf+0x55b>
ffffffff8001203e:	48 89 c2             	mov    %rax,%rdx
ffffffff80012041:	81 e2 00 10 00 00    	and    $0x1000,%edx
ffffffff80012047:	48 85 d2             	test   %rdx,%rdx
ffffffff8001204a:	0f 95 c2             	setne  %dl
ffffffff8001204d:	84 d2                	test   %dl,%dl
ffffffff8001204f:	0f 85 3c 10 00 00    	jne    ffffffff80013091 <_vsnprintf+0x1539>
ffffffff80012055:	25 00 80 00 00       	and    $0x8000,%eax
ffffffff8001205a:	48 85 c0             	test   %rax,%rax
ffffffff8001205d:	0f 95 c0             	setne  %al
ffffffff80012060:	84 c0                	test   %al,%al
ffffffff80012062:	0f 85 b4 0c 00 00    	jne    ffffffff80012d1c <_vsnprintf+0x11c4>
ffffffff80012068:	e9 15 14 00 00       	jmp    ffffffff80013482 <_vsnprintf+0x192a>
ffffffff8001206d:	83 e8 25             	sub    $0x25,%eax
ffffffff80012070:	83 f8 3e             	cmp    $0x3e,%eax
ffffffff80012073:	0f 87 09 14 00 00    	ja     ffffffff80013482 <_vsnprintf+0x192a>
ffffffff80012079:	89 c0                	mov    %eax,%eax
ffffffff8001207b:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
ffffffff80012082:	00 
ffffffff80012083:	48 8d 05 c6 b8 02 00 	lea    0x2b8c6(%rip),%rax        # ffffffff8003d950 <__FUNCTION__.0.lto_priv.9+0xb9>
ffffffff8001208a:	8b 04 02             	mov    (%rdx,%rax,1),%eax
ffffffff8001208d:	48 98                	cltq   
ffffffff8001208f:	48 8d 15 ba b8 02 00 	lea    0x2b8ba(%rip),%rdx        # ffffffff8003d950 <__FUNCTION__.0.lto_priv.9+0xb9>
ffffffff80012096:	48 01 d0             	add    %rdx,%rax
ffffffff80012099:	3e ff e0             	notrack jmp *%rax
ffffffff8001209c:	83 f8 78             	cmp    $0x78,%eax
ffffffff8001209f:	0f 8f dd 13 00 00    	jg     ffffffff80013482 <_vsnprintf+0x192a>
ffffffff800120a5:	83 f8 64             	cmp    $0x64,%eax
ffffffff800120a8:	0f 8d 6b ff ff ff    	jge    ffffffff80012019 <_vsnprintf+0x4c1>
ffffffff800120ae:	e9 cf 13 00 00       	jmp    ffffffff80013482 <_vsnprintf+0x192a>
ffffffff800120b3:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
ffffffff800120ba:	0f b6 00             	movzbl (%rax),%eax
ffffffff800120bd:	3c 78                	cmp    $0x78,%al
ffffffff800120bf:	74 0e                	je     ffffffff800120cf <_vsnprintf+0x577>
ffffffff800120c1:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
ffffffff800120c8:	0f b6 00             	movzbl (%rax),%eax
ffffffff800120cb:	3c 58                	cmp    $0x58,%al
ffffffff800120cd:	75 09                	jne    ffffffff800120d8 <_vsnprintf+0x580>
ffffffff800120cf:	c7 45 e4 10 00 00 00 	movl   $0x10,-0x1c(%rbp)
ffffffff800120d6:	eb 39                	jmp    ffffffff80012111 <_vsnprintf+0x5b9>
ffffffff800120d8:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
ffffffff800120df:	0f b6 00             	movzbl (%rax),%eax
ffffffff800120e2:	3c 6f                	cmp    $0x6f,%al
ffffffff800120e4:	75 09                	jne    ffffffff800120ef <_vsnprintf+0x597>
ffffffff800120e6:	c7 45 e4 08 00 00 00 	movl   $0x8,-0x1c(%rbp)
ffffffff800120ed:	eb 22                	jmp    ffffffff80012111 <_vsnprintf+0x5b9>
ffffffff800120ef:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
ffffffff800120f6:	0f b6 00             	movzbl (%rax),%eax
ffffffff800120f9:	3c 62                	cmp    $0x62,%al
ffffffff800120fb:	75 09                	jne    ffffffff80012106 <_vsnprintf+0x5ae>
ffffffff800120fd:	c7 45 e4 02 00 00 00 	movl   $0x2,-0x1c(%rbp)
ffffffff80012104:	eb 0b                	jmp    ffffffff80012111 <_vsnprintf+0x5b9>
ffffffff80012106:	c7 45 e4 0a 00 00 00 	movl   $0xa,-0x1c(%rbp)
ffffffff8001210d:	83 65 fc ef          	andl   $0xffffffef,-0x4(%rbp)
ffffffff80012111:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
ffffffff80012118:	0f b6 00             	movzbl (%rax),%eax
ffffffff8001211b:	3c 58                	cmp    $0x58,%al
ffffffff8001211d:	75 04                	jne    ffffffff80012123 <_vsnprintf+0x5cb>
ffffffff8001211f:	83 4d fc 20          	orl    $0x20,-0x4(%rbp)
ffffffff80012123:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
ffffffff8001212a:	0f b6 00             	movzbl (%rax),%eax
ffffffff8001212d:	3c 69                	cmp    $0x69,%al
ffffffff8001212f:	74 12                	je     ffffffff80012143 <_vsnprintf+0x5eb>
ffffffff80012131:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
ffffffff80012138:	0f b6 00             	movzbl (%rax),%eax
ffffffff8001213b:	3c 64                	cmp    $0x64,%al
ffffffff8001213d:	74 04                	je     ffffffff80012143 <_vsnprintf+0x5eb>
ffffffff8001213f:	83 65 fc f3          	andl   $0xfffffff3,-0x4(%rbp)
ffffffff80012143:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff80012146:	25 00 04 00 00       	and    $0x400,%eax
ffffffff8001214b:	85 c0                	test   %eax,%eax
ffffffff8001214d:	74 04                	je     ffffffff80012153 <_vsnprintf+0x5fb>
ffffffff8001214f:	83 65 fc fe          	andl   $0xfffffffe,-0x4(%rbp)
ffffffff80012153:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
ffffffff8001215a:	0f b6 00             	movzbl (%rax),%eax
ffffffff8001215d:	3c 69                	cmp    $0x69,%al
ffffffff8001215f:	74 12                	je     ffffffff80012173 <_vsnprintf+0x61b>
ffffffff80012161:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
ffffffff80012168:	0f b6 00             	movzbl (%rax),%eax
ffffffff8001216b:	3c 64                	cmp    $0x64,%al
ffffffff8001216d:	0f 85 4b 03 00 00    	jne    ffffffff800124be <_vsnprintf+0x966>
ffffffff80012173:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff80012176:	25 00 02 00 00       	and    $0x200,%eax
ffffffff8001217b:	85 c0                	test   %eax,%eax
ffffffff8001217d:	0f 84 ca 00 00 00    	je     ffffffff8001224d <_vsnprintf+0x6f5>
ffffffff80012183:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
ffffffff8001218a:	8b 00                	mov    (%rax),%eax
ffffffff8001218c:	83 f8 2f             	cmp    $0x2f,%eax
ffffffff8001218f:	77 30                	ja     ffffffff800121c1 <_vsnprintf+0x669>
ffffffff80012191:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
ffffffff80012198:	48 8b 50 10          	mov    0x10(%rax),%rdx
ffffffff8001219c:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
ffffffff800121a3:	8b 00                	mov    (%rax),%eax
ffffffff800121a5:	89 c0                	mov    %eax,%eax
ffffffff800121a7:	48 01 d0             	add    %rdx,%rax
ffffffff800121aa:	48 8b 95 18 ff ff ff 	mov    -0xe8(%rbp),%rdx
ffffffff800121b1:	8b 12                	mov    (%rdx),%edx
ffffffff800121b3:	8d 4a 08             	lea    0x8(%rdx),%ecx
ffffffff800121b6:	48 8b 95 18 ff ff ff 	mov    -0xe8(%rbp),%rdx
ffffffff800121bd:	89 0a                	mov    %ecx,(%rdx)
ffffffff800121bf:	eb 1a                	jmp    ffffffff800121db <_vsnprintf+0x683>
ffffffff800121c1:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
ffffffff800121c8:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff800121cc:	48 8d 50 08          	lea    0x8(%rax),%rdx
ffffffff800121d0:	48 8b 8d 18 ff ff ff 	mov    -0xe8(%rbp),%rcx
ffffffff800121d7:	48 89 51 08          	mov    %rdx,0x8(%rcx)
ffffffff800121db:	48 8b 00             	mov    (%rax),%rax
ffffffff800121de:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
ffffffff800121e5:	8b 7d e4             	mov    -0x1c(%rbp),%edi
ffffffff800121e8:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
ffffffff800121ef:	48 c1 e8 3f          	shr    $0x3f,%rax
ffffffff800121f3:	44 0f b6 c8          	movzbl %al,%r9d
ffffffff800121f7:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
ffffffff800121fe:	48 99                	cqto   
ffffffff80012200:	48 31 d0             	xor    %rdx,%rax
ffffffff80012203:	48 29 d0             	sub    %rdx,%rax
ffffffff80012206:	49 89 c2             	mov    %rax,%r10
ffffffff80012209:	48 8b 8d 28 ff ff ff 	mov    -0xd8(%rbp),%rcx
ffffffff80012210:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff80012214:	48 8b b5 30 ff ff ff 	mov    -0xd0(%rbp),%rsi
ffffffff8001221b:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
ffffffff80012222:	44 8b 45 fc          	mov    -0x4(%rbp),%r8d
ffffffff80012226:	41 50                	push   %r8
ffffffff80012228:	44 8b 45 f8          	mov    -0x8(%rbp),%r8d
ffffffff8001222c:	41 50                	push   %r8
ffffffff8001222e:	44 8b 45 f4          	mov    -0xc(%rbp),%r8d
ffffffff80012232:	41 50                	push   %r8
ffffffff80012234:	57                   	push   %rdi
ffffffff80012235:	4d 89 d0             	mov    %r10,%r8
ffffffff80012238:	48 89 c7             	mov    %rax,%rdi
ffffffff8001223b:	e8 0a f8 ff ff       	call   ffffffff80011a4a <_ntoa_long_long>
ffffffff80012240:	48 83 c4 20          	add    $0x20,%rsp
ffffffff80012244:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff80012248:	e9 67 05 00 00       	jmp    ffffffff800127b4 <_vsnprintf+0xc5c>
ffffffff8001224d:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff80012250:	25 00 01 00 00       	and    $0x100,%eax
ffffffff80012255:	85 c0                	test   %eax,%eax
ffffffff80012257:	0f 84 ca 00 00 00    	je     ffffffff80012327 <_vsnprintf+0x7cf>
ffffffff8001225d:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
ffffffff80012264:	8b 00                	mov    (%rax),%eax
ffffffff80012266:	83 f8 2f             	cmp    $0x2f,%eax
ffffffff80012269:	77 30                	ja     ffffffff8001229b <_vsnprintf+0x743>
ffffffff8001226b:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
ffffffff80012272:	48 8b 50 10          	mov    0x10(%rax),%rdx
ffffffff80012276:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
ffffffff8001227d:	8b 00                	mov    (%rax),%eax
ffffffff8001227f:	89 c0                	mov    %eax,%eax
ffffffff80012281:	48 01 d0             	add    %rdx,%rax
ffffffff80012284:	48 8b 95 18 ff ff ff 	mov    -0xe8(%rbp),%rdx
ffffffff8001228b:	8b 12                	mov    (%rdx),%edx
ffffffff8001228d:	8d 4a 08             	lea    0x8(%rdx),%ecx
ffffffff80012290:	48 8b 95 18 ff ff ff 	mov    -0xe8(%rbp),%rdx
ffffffff80012297:	89 0a                	mov    %ecx,(%rdx)
ffffffff80012299:	eb 1a                	jmp    ffffffff800122b5 <_vsnprintf+0x75d>
ffffffff8001229b:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
ffffffff800122a2:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff800122a6:	48 8d 50 08          	lea    0x8(%rax),%rdx
ffffffff800122aa:	48 8b 8d 18 ff ff ff 	mov    -0xe8(%rbp),%rcx
ffffffff800122b1:	48 89 51 08          	mov    %rdx,0x8(%rcx)
ffffffff800122b5:	48 8b 00             	mov    (%rax),%rax
ffffffff800122b8:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
ffffffff800122bf:	8b 7d e4             	mov    -0x1c(%rbp),%edi
ffffffff800122c2:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
ffffffff800122c9:	48 c1 e8 3f          	shr    $0x3f,%rax
ffffffff800122cd:	44 0f b6 c8          	movzbl %al,%r9d
ffffffff800122d1:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
ffffffff800122d8:	48 99                	cqto   
ffffffff800122da:	48 31 d0             	xor    %rdx,%rax
ffffffff800122dd:	48 29 d0             	sub    %rdx,%rax
ffffffff800122e0:	49 89 c2             	mov    %rax,%r10
ffffffff800122e3:	48 8b 8d 28 ff ff ff 	mov    -0xd8(%rbp),%rcx
ffffffff800122ea:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff800122ee:	48 8b b5 30 ff ff ff 	mov    -0xd0(%rbp),%rsi
ffffffff800122f5:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
ffffffff800122fc:	44 8b 45 fc          	mov    -0x4(%rbp),%r8d
ffffffff80012300:	41 50                	push   %r8
ffffffff80012302:	44 8b 45 f8          	mov    -0x8(%rbp),%r8d
ffffffff80012306:	41 50                	push   %r8
ffffffff80012308:	44 8b 45 f4          	mov    -0xc(%rbp),%r8d
ffffffff8001230c:	41 50                	push   %r8
ffffffff8001230e:	57                   	push   %rdi
ffffffff8001230f:	4d 89 d0             	mov    %r10,%r8
ffffffff80012312:	48 89 c7             	mov    %rax,%rdi
ffffffff80012315:	e8 22 f6 ff ff       	call   ffffffff8001193c <_ntoa_long>
ffffffff8001231a:	48 83 c4 20          	add    $0x20,%rsp
ffffffff8001231e:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff80012322:	e9 8d 04 00 00       	jmp    ffffffff800127b4 <_vsnprintf+0xc5c>
ffffffff80012327:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8001232a:	83 e0 40             	and    $0x40,%eax
ffffffff8001232d:	85 c0                	test   %eax,%eax
ffffffff8001232f:	74 62                	je     ffffffff80012393 <_vsnprintf+0x83b>
ffffffff80012331:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
ffffffff80012338:	8b 00                	mov    (%rax),%eax
ffffffff8001233a:	83 f8 2f             	cmp    $0x2f,%eax
ffffffff8001233d:	77 30                	ja     ffffffff8001236f <_vsnprintf+0x817>
ffffffff8001233f:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
ffffffff80012346:	48 8b 50 10          	mov    0x10(%rax),%rdx
ffffffff8001234a:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
ffffffff80012351:	8b 00                	mov    (%rax),%eax
ffffffff80012353:	89 c0                	mov    %eax,%eax
ffffffff80012355:	48 01 d0             	add    %rdx,%rax
ffffffff80012358:	48 8b 95 18 ff ff ff 	mov    -0xe8(%rbp),%rdx
ffffffff8001235f:	8b 12                	mov    (%rdx),%edx
ffffffff80012361:	8d 4a 08             	lea    0x8(%rdx),%ecx
ffffffff80012364:	48 8b 95 18 ff ff ff 	mov    -0xe8(%rbp),%rdx
ffffffff8001236b:	89 0a                	mov    %ecx,(%rdx)
ffffffff8001236d:	eb 1a                	jmp    ffffffff80012389 <_vsnprintf+0x831>
ffffffff8001236f:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
ffffffff80012376:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff8001237a:	48 8d 50 08          	lea    0x8(%rax),%rdx
ffffffff8001237e:	48 8b 8d 18 ff ff ff 	mov    -0xe8(%rbp),%rcx
ffffffff80012385:	48 89 51 08          	mov    %rdx,0x8(%rcx)
ffffffff80012389:	8b 00                	mov    (%rax),%eax
ffffffff8001238b:	0f be c0             	movsbl %al,%eax
ffffffff8001238e:	e9 c3 00 00 00       	jmp    ffffffff80012456 <_vsnprintf+0x8fe>
ffffffff80012393:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff80012396:	25 80 00 00 00       	and    $0x80,%eax
ffffffff8001239b:	85 c0                	test   %eax,%eax
ffffffff8001239d:	74 5d                	je     ffffffff800123fc <_vsnprintf+0x8a4>
ffffffff8001239f:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
ffffffff800123a6:	8b 00                	mov    (%rax),%eax
ffffffff800123a8:	83 f8 2f             	cmp    $0x2f,%eax
ffffffff800123ab:	77 30                	ja     ffffffff800123dd <_vsnprintf+0x885>
ffffffff800123ad:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
ffffffff800123b4:	48 8b 50 10          	mov    0x10(%rax),%rdx
ffffffff800123b8:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
ffffffff800123bf:	8b 00                	mov    (%rax),%eax
ffffffff800123c1:	89 c0                	mov    %eax,%eax
ffffffff800123c3:	48 01 d0             	add    %rdx,%rax
ffffffff800123c6:	48 8b 95 18 ff ff ff 	mov    -0xe8(%rbp),%rdx
ffffffff800123cd:	8b 12                	mov    (%rdx),%edx
ffffffff800123cf:	8d 4a 08             	lea    0x8(%rdx),%ecx
ffffffff800123d2:	48 8b 95 18 ff ff ff 	mov    -0xe8(%rbp),%rdx
ffffffff800123d9:	89 0a                	mov    %ecx,(%rdx)
ffffffff800123db:	eb 1a                	jmp    ffffffff800123f7 <_vsnprintf+0x89f>
ffffffff800123dd:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
ffffffff800123e4:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff800123e8:	48 8d 50 08          	lea    0x8(%rax),%rdx
ffffffff800123ec:	48 8b 8d 18 ff ff ff 	mov    -0xe8(%rbp),%rcx
ffffffff800123f3:	48 89 51 08          	mov    %rdx,0x8(%rcx)
ffffffff800123f7:	8b 00                	mov    (%rax),%eax
ffffffff800123f9:	98                   	cwtl   
ffffffff800123fa:	eb 5a                	jmp    ffffffff80012456 <_vsnprintf+0x8fe>
ffffffff800123fc:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
ffffffff80012403:	8b 00                	mov    (%rax),%eax
ffffffff80012405:	83 f8 2f             	cmp    $0x2f,%eax
ffffffff80012408:	77 30                	ja     ffffffff8001243a <_vsnprintf+0x8e2>
ffffffff8001240a:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
ffffffff80012411:	48 8b 50 10          	mov    0x10(%rax),%rdx
ffffffff80012415:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
ffffffff8001241c:	8b 00                	mov    (%rax),%eax
ffffffff8001241e:	89 c0                	mov    %eax,%eax
ffffffff80012420:	48 01 d0             	add    %rdx,%rax
ffffffff80012423:	48 8b 95 18 ff ff ff 	mov    -0xe8(%rbp),%rdx
ffffffff8001242a:	8b 12                	mov    (%rdx),%edx
ffffffff8001242c:	8d 4a 08             	lea    0x8(%rdx),%ecx
ffffffff8001242f:	48 8b 95 18 ff ff ff 	mov    -0xe8(%rbp),%rdx
ffffffff80012436:	89 0a                	mov    %ecx,(%rdx)
ffffffff80012438:	eb 1a                	jmp    ffffffff80012454 <_vsnprintf+0x8fc>
ffffffff8001243a:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
ffffffff80012441:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff80012445:	48 8d 50 08          	lea    0x8(%rax),%rdx
ffffffff80012449:	48 8b 8d 18 ff ff ff 	mov    -0xe8(%rbp),%rcx
ffffffff80012450:	48 89 51 08          	mov    %rdx,0x8(%rcx)
ffffffff80012454:	8b 00                	mov    (%rax),%eax
ffffffff80012456:	89 85 70 ff ff ff    	mov    %eax,-0x90(%rbp)
ffffffff8001245c:	8b 7d e4             	mov    -0x1c(%rbp),%edi
ffffffff8001245f:	8b 85 70 ff ff ff    	mov    -0x90(%rbp),%eax
ffffffff80012465:	c1 e8 1f             	shr    $0x1f,%eax
ffffffff80012468:	44 0f b6 c8          	movzbl %al,%r9d
ffffffff8001246c:	8b 85 70 ff ff ff    	mov    -0x90(%rbp),%eax
ffffffff80012472:	99                   	cltd   
ffffffff80012473:	31 d0                	xor    %edx,%eax
ffffffff80012475:	29 d0                	sub    %edx,%eax
ffffffff80012477:	41 89 c2             	mov    %eax,%r10d
ffffffff8001247a:	48 8b 8d 28 ff ff ff 	mov    -0xd8(%rbp),%rcx
ffffffff80012481:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff80012485:	48 8b b5 30 ff ff ff 	mov    -0xd0(%rbp),%rsi
ffffffff8001248c:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
ffffffff80012493:	44 8b 45 fc          	mov    -0x4(%rbp),%r8d
ffffffff80012497:	41 50                	push   %r8
ffffffff80012499:	44 8b 45 f8          	mov    -0x8(%rbp),%r8d
ffffffff8001249d:	41 50                	push   %r8
ffffffff8001249f:	44 8b 45 f4          	mov    -0xc(%rbp),%r8d
ffffffff800124a3:	41 50                	push   %r8
ffffffff800124a5:	57                   	push   %rdi
ffffffff800124a6:	4d 89 d0             	mov    %r10,%r8
ffffffff800124a9:	48 89 c7             	mov    %rax,%rdi
ffffffff800124ac:	e8 8b f4 ff ff       	call   ffffffff8001193c <_ntoa_long>
ffffffff800124b1:	48 83 c4 20          	add    $0x20,%rsp
ffffffff800124b5:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff800124b9:	e9 f6 02 00 00       	jmp    ffffffff800127b4 <_vsnprintf+0xc5c>
ffffffff800124be:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff800124c1:	25 00 02 00 00       	and    $0x200,%eax
ffffffff800124c6:	85 c0                	test   %eax,%eax
ffffffff800124c8:	0f 84 a8 00 00 00    	je     ffffffff80012576 <_vsnprintf+0xa1e>
ffffffff800124ce:	8b 7d e4             	mov    -0x1c(%rbp),%edi
ffffffff800124d1:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
ffffffff800124d8:	8b 00                	mov    (%rax),%eax
ffffffff800124da:	83 f8 2f             	cmp    $0x2f,%eax
ffffffff800124dd:	77 30                	ja     ffffffff8001250f <_vsnprintf+0x9b7>
ffffffff800124df:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
ffffffff800124e6:	48 8b 50 10          	mov    0x10(%rax),%rdx
ffffffff800124ea:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
ffffffff800124f1:	8b 00                	mov    (%rax),%eax
ffffffff800124f3:	89 c0                	mov    %eax,%eax
ffffffff800124f5:	48 01 d0             	add    %rdx,%rax
ffffffff800124f8:	48 8b 95 18 ff ff ff 	mov    -0xe8(%rbp),%rdx
ffffffff800124ff:	8b 12                	mov    (%rdx),%edx
ffffffff80012501:	8d 4a 08             	lea    0x8(%rdx),%ecx
ffffffff80012504:	48 8b 95 18 ff ff ff 	mov    -0xe8(%rbp),%rdx
ffffffff8001250b:	89 0a                	mov    %ecx,(%rdx)
ffffffff8001250d:	eb 1a                	jmp    ffffffff80012529 <_vsnprintf+0x9d1>
ffffffff8001250f:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
ffffffff80012516:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff8001251a:	48 8d 50 08          	lea    0x8(%rax),%rdx
ffffffff8001251e:	48 8b 8d 18 ff ff ff 	mov    -0xe8(%rbp),%rcx
ffffffff80012525:	48 89 51 08          	mov    %rdx,0x8(%rcx)
ffffffff80012529:	4c 8b 10             	mov    (%rax),%r10
ffffffff8001252c:	48 8b 8d 28 ff ff ff 	mov    -0xd8(%rbp),%rcx
ffffffff80012533:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff80012537:	48 8b b5 30 ff ff ff 	mov    -0xd0(%rbp),%rsi
ffffffff8001253e:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
ffffffff80012545:	44 8b 45 fc          	mov    -0x4(%rbp),%r8d
ffffffff80012549:	41 50                	push   %r8
ffffffff8001254b:	44 8b 45 f8          	mov    -0x8(%rbp),%r8d
ffffffff8001254f:	41 50                	push   %r8
ffffffff80012551:	44 8b 45 f4          	mov    -0xc(%rbp),%r8d
ffffffff80012555:	41 50                	push   %r8
ffffffff80012557:	57                   	push   %rdi
ffffffff80012558:	41 b9 00 00 00 00    	mov    $0x0,%r9d
ffffffff8001255e:	4d 89 d0             	mov    %r10,%r8
ffffffff80012561:	48 89 c7             	mov    %rax,%rdi
ffffffff80012564:	e8 e1 f4 ff ff       	call   ffffffff80011a4a <_ntoa_long_long>
ffffffff80012569:	48 83 c4 20          	add    $0x20,%rsp
ffffffff8001256d:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff80012571:	e9 3e 02 00 00       	jmp    ffffffff800127b4 <_vsnprintf+0xc5c>
ffffffff80012576:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff80012579:	25 00 01 00 00       	and    $0x100,%eax
ffffffff8001257e:	85 c0                	test   %eax,%eax
ffffffff80012580:	0f 84 a8 00 00 00    	je     ffffffff8001262e <_vsnprintf+0xad6>
ffffffff80012586:	8b 7d e4             	mov    -0x1c(%rbp),%edi
ffffffff80012589:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
ffffffff80012590:	8b 00                	mov    (%rax),%eax
ffffffff80012592:	83 f8 2f             	cmp    $0x2f,%eax
ffffffff80012595:	77 30                	ja     ffffffff800125c7 <_vsnprintf+0xa6f>
ffffffff80012597:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
ffffffff8001259e:	48 8b 50 10          	mov    0x10(%rax),%rdx
ffffffff800125a2:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
ffffffff800125a9:	8b 00                	mov    (%rax),%eax
ffffffff800125ab:	89 c0                	mov    %eax,%eax
ffffffff800125ad:	48 01 d0             	add    %rdx,%rax
ffffffff800125b0:	48 8b 95 18 ff ff ff 	mov    -0xe8(%rbp),%rdx
ffffffff800125b7:	8b 12                	mov    (%rdx),%edx
ffffffff800125b9:	8d 4a 08             	lea    0x8(%rdx),%ecx
ffffffff800125bc:	48 8b 95 18 ff ff ff 	mov    -0xe8(%rbp),%rdx
ffffffff800125c3:	89 0a                	mov    %ecx,(%rdx)
ffffffff800125c5:	eb 1a                	jmp    ffffffff800125e1 <_vsnprintf+0xa89>
ffffffff800125c7:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
ffffffff800125ce:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff800125d2:	48 8d 50 08          	lea    0x8(%rax),%rdx
ffffffff800125d6:	48 8b 8d 18 ff ff ff 	mov    -0xe8(%rbp),%rcx
ffffffff800125dd:	48 89 51 08          	mov    %rdx,0x8(%rcx)
ffffffff800125e1:	4c 8b 10             	mov    (%rax),%r10
ffffffff800125e4:	48 8b 8d 28 ff ff ff 	mov    -0xd8(%rbp),%rcx
ffffffff800125eb:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff800125ef:	48 8b b5 30 ff ff ff 	mov    -0xd0(%rbp),%rsi
ffffffff800125f6:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
ffffffff800125fd:	44 8b 45 fc          	mov    -0x4(%rbp),%r8d
ffffffff80012601:	41 50                	push   %r8
ffffffff80012603:	44 8b 45 f8          	mov    -0x8(%rbp),%r8d
ffffffff80012607:	41 50                	push   %r8
ffffffff80012609:	44 8b 45 f4          	mov    -0xc(%rbp),%r8d
ffffffff8001260d:	41 50                	push   %r8
ffffffff8001260f:	57                   	push   %rdi
ffffffff80012610:	41 b9 00 00 00 00    	mov    $0x0,%r9d
ffffffff80012616:	4d 89 d0             	mov    %r10,%r8
ffffffff80012619:	48 89 c7             	mov    %rax,%rdi
ffffffff8001261c:	e8 1b f3 ff ff       	call   ffffffff8001193c <_ntoa_long>
ffffffff80012621:	48 83 c4 20          	add    $0x20,%rsp
ffffffff80012625:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff80012629:	e9 86 01 00 00       	jmp    ffffffff800127b4 <_vsnprintf+0xc5c>
ffffffff8001262e:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff80012631:	83 e0 40             	and    $0x40,%eax
ffffffff80012634:	85 c0                	test   %eax,%eax
ffffffff80012636:	74 62                	je     ffffffff8001269a <_vsnprintf+0xb42>
ffffffff80012638:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
ffffffff8001263f:	8b 00                	mov    (%rax),%eax
ffffffff80012641:	83 f8 2f             	cmp    $0x2f,%eax
ffffffff80012644:	77 30                	ja     ffffffff80012676 <_vsnprintf+0xb1e>
ffffffff80012646:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
ffffffff8001264d:	48 8b 50 10          	mov    0x10(%rax),%rdx
ffffffff80012651:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
ffffffff80012658:	8b 00                	mov    (%rax),%eax
ffffffff8001265a:	89 c0                	mov    %eax,%eax
ffffffff8001265c:	48 01 d0             	add    %rdx,%rax
ffffffff8001265f:	48 8b 95 18 ff ff ff 	mov    -0xe8(%rbp),%rdx
ffffffff80012666:	8b 12                	mov    (%rdx),%edx
ffffffff80012668:	8d 4a 08             	lea    0x8(%rdx),%ecx
ffffffff8001266b:	48 8b 95 18 ff ff ff 	mov    -0xe8(%rbp),%rdx
ffffffff80012672:	89 0a                	mov    %ecx,(%rdx)
ffffffff80012674:	eb 1a                	jmp    ffffffff80012690 <_vsnprintf+0xb38>
ffffffff80012676:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
ffffffff8001267d:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff80012681:	48 8d 50 08          	lea    0x8(%rax),%rdx
ffffffff80012685:	48 8b 8d 18 ff ff ff 	mov    -0xe8(%rbp),%rcx
ffffffff8001268c:	48 89 51 08          	mov    %rdx,0x8(%rcx)
ffffffff80012690:	8b 00                	mov    (%rax),%eax
ffffffff80012692:	0f b6 c0             	movzbl %al,%eax
ffffffff80012695:	e9 c5 00 00 00       	jmp    ffffffff8001275f <_vsnprintf+0xc07>
ffffffff8001269a:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8001269d:	25 80 00 00 00       	and    $0x80,%eax
ffffffff800126a2:	85 c0                	test   %eax,%eax
ffffffff800126a4:	74 5f                	je     ffffffff80012705 <_vsnprintf+0xbad>
ffffffff800126a6:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
ffffffff800126ad:	8b 00                	mov    (%rax),%eax
ffffffff800126af:	83 f8 2f             	cmp    $0x2f,%eax
ffffffff800126b2:	77 30                	ja     ffffffff800126e4 <_vsnprintf+0xb8c>
ffffffff800126b4:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
ffffffff800126bb:	48 8b 50 10          	mov    0x10(%rax),%rdx
ffffffff800126bf:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
ffffffff800126c6:	8b 00                	mov    (%rax),%eax
ffffffff800126c8:	89 c0                	mov    %eax,%eax
ffffffff800126ca:	48 01 d0             	add    %rdx,%rax
ffffffff800126cd:	48 8b 95 18 ff ff ff 	mov    -0xe8(%rbp),%rdx
ffffffff800126d4:	8b 12                	mov    (%rdx),%edx
ffffffff800126d6:	8d 4a 08             	lea    0x8(%rdx),%ecx
ffffffff800126d9:	48 8b 95 18 ff ff ff 	mov    -0xe8(%rbp),%rdx
ffffffff800126e0:	89 0a                	mov    %ecx,(%rdx)
ffffffff800126e2:	eb 1a                	jmp    ffffffff800126fe <_vsnprintf+0xba6>
ffffffff800126e4:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
ffffffff800126eb:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff800126ef:	48 8d 50 08          	lea    0x8(%rax),%rdx
ffffffff800126f3:	48 8b 8d 18 ff ff ff 	mov    -0xe8(%rbp),%rcx
ffffffff800126fa:	48 89 51 08          	mov    %rdx,0x8(%rcx)
ffffffff800126fe:	8b 00                	mov    (%rax),%eax
ffffffff80012700:	0f b7 c0             	movzwl %ax,%eax
ffffffff80012703:	eb 5a                	jmp    ffffffff8001275f <_vsnprintf+0xc07>
ffffffff80012705:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
ffffffff8001270c:	8b 00                	mov    (%rax),%eax
ffffffff8001270e:	83 f8 2f             	cmp    $0x2f,%eax
ffffffff80012711:	77 30                	ja     ffffffff80012743 <_vsnprintf+0xbeb>
ffffffff80012713:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
ffffffff8001271a:	48 8b 50 10          	mov    0x10(%rax),%rdx
ffffffff8001271e:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
ffffffff80012725:	8b 00                	mov    (%rax),%eax
ffffffff80012727:	89 c0                	mov    %eax,%eax
ffffffff80012729:	48 01 d0             	add    %rdx,%rax
ffffffff8001272c:	48 8b 95 18 ff ff ff 	mov    -0xe8(%rbp),%rdx
ffffffff80012733:	8b 12                	mov    (%rdx),%edx
ffffffff80012735:	8d 4a 08             	lea    0x8(%rdx),%ecx
ffffffff80012738:	48 8b 95 18 ff ff ff 	mov    -0xe8(%rbp),%rdx
ffffffff8001273f:	89 0a                	mov    %ecx,(%rdx)
ffffffff80012741:	eb 1a                	jmp    ffffffff8001275d <_vsnprintf+0xc05>
ffffffff80012743:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
ffffffff8001274a:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff8001274e:	48 8d 50 08          	lea    0x8(%rax),%rdx
ffffffff80012752:	48 8b 8d 18 ff ff ff 	mov    -0xe8(%rbp),%rcx
ffffffff80012759:	48 89 51 08          	mov    %rdx,0x8(%rcx)
ffffffff8001275d:	8b 00                	mov    (%rax),%eax
ffffffff8001275f:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%rbp)
ffffffff80012765:	8b 7d e4             	mov    -0x1c(%rbp),%edi
ffffffff80012768:	44 8b 95 74 ff ff ff 	mov    -0x8c(%rbp),%r10d
ffffffff8001276f:	48 8b 8d 28 ff ff ff 	mov    -0xd8(%rbp),%rcx
ffffffff80012776:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff8001277a:	48 8b b5 30 ff ff ff 	mov    -0xd0(%rbp),%rsi
ffffffff80012781:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
ffffffff80012788:	44 8b 45 fc          	mov    -0x4(%rbp),%r8d
ffffffff8001278c:	41 50                	push   %r8
ffffffff8001278e:	44 8b 45 f8          	mov    -0x8(%rbp),%r8d
ffffffff80012792:	41 50                	push   %r8
ffffffff80012794:	44 8b 45 f4          	mov    -0xc(%rbp),%r8d
ffffffff80012798:	41 50                	push   %r8
ffffffff8001279a:	57                   	push   %rdi
ffffffff8001279b:	41 b9 00 00 00 00    	mov    $0x0,%r9d
ffffffff800127a1:	4d 89 d0             	mov    %r10,%r8
ffffffff800127a4:	48 89 c7             	mov    %rax,%rdi
ffffffff800127a7:	e8 90 f1 ff ff       	call   ffffffff8001193c <_ntoa_long>
ffffffff800127ac:	48 83 c4 20          	add    $0x20,%rsp
ffffffff800127b0:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff800127b4:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
ffffffff800127bb:	48 83 c0 01          	add    $0x1,%rax
ffffffff800127bf:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
ffffffff800127c6:	e9 01 0d 00 00       	jmp    ffffffff800134cc <_vsnprintf+0x1974>
ffffffff800127cb:	c7 45 e0 01 00 00 00 	movl   $0x1,-0x20(%rbp)
ffffffff800127d2:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff800127d5:	83 e0 02             	and    $0x2,%eax
ffffffff800127d8:	85 c0                	test   %eax,%eax
ffffffff800127da:	75 3f                	jne    ffffffff8001281b <_vsnprintf+0xcc3>
ffffffff800127dc:	eb 2f                	jmp    ffffffff8001280d <_vsnprintf+0xcb5>
ffffffff800127de:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800127e2:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffff800127e6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
ffffffff800127ea:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
ffffffff800127f1:	48 8b b5 30 ff ff ff 	mov    -0xd0(%rbp),%rsi
ffffffff800127f8:	4c 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%r8
ffffffff800127ff:	48 89 d1             	mov    %rdx,%rcx
ffffffff80012802:	48 89 c2             	mov    %rax,%rdx
ffffffff80012805:	bf 20 00 00 00       	mov    $0x20,%edi
ffffffff8001280a:	41 ff d0             	call   *%r8
ffffffff8001280d:	8b 45 e0             	mov    -0x20(%rbp),%eax
ffffffff80012810:	8d 50 01             	lea    0x1(%rax),%edx
ffffffff80012813:	89 55 e0             	mov    %edx,-0x20(%rbp)
ffffffff80012816:	39 45 f8             	cmp    %eax,-0x8(%rbp)
ffffffff80012819:	77 c3                	ja     ffffffff800127de <_vsnprintf+0xc86>
ffffffff8001281b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff8001281f:	48 8d 42 01          	lea    0x1(%rdx),%rax
ffffffff80012823:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff80012827:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
ffffffff8001282e:	8b 00                	mov    (%rax),%eax
ffffffff80012830:	83 f8 2f             	cmp    $0x2f,%eax
ffffffff80012833:	77 30                	ja     ffffffff80012865 <_vsnprintf+0xd0d>
ffffffff80012835:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
ffffffff8001283c:	48 8b 48 10          	mov    0x10(%rax),%rcx
ffffffff80012840:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
ffffffff80012847:	8b 00                	mov    (%rax),%eax
ffffffff80012849:	89 c0                	mov    %eax,%eax
ffffffff8001284b:	48 01 c8             	add    %rcx,%rax
ffffffff8001284e:	48 8b 8d 18 ff ff ff 	mov    -0xe8(%rbp),%rcx
ffffffff80012855:	8b 09                	mov    (%rcx),%ecx
ffffffff80012857:	8d 71 08             	lea    0x8(%rcx),%esi
ffffffff8001285a:	48 8b 8d 18 ff ff ff 	mov    -0xe8(%rbp),%rcx
ffffffff80012861:	89 31                	mov    %esi,(%rcx)
ffffffff80012863:	eb 1a                	jmp    ffffffff8001287f <_vsnprintf+0xd27>
ffffffff80012865:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
ffffffff8001286c:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff80012870:	48 8d 48 08          	lea    0x8(%rax),%rcx
ffffffff80012874:	48 8b b5 18 ff ff ff 	mov    -0xe8(%rbp),%rsi
ffffffff8001287b:	48 89 4e 08          	mov    %rcx,0x8(%rsi)
ffffffff8001287f:	8b 00                	mov    (%rax),%eax
ffffffff80012881:	0f be c0             	movsbl %al,%eax
ffffffff80012884:	48 8b 8d 28 ff ff ff 	mov    -0xd8(%rbp),%rcx
ffffffff8001288b:	48 8b b5 30 ff ff ff 	mov    -0xd0(%rbp),%rsi
ffffffff80012892:	4c 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%r8
ffffffff80012899:	89 c7                	mov    %eax,%edi
ffffffff8001289b:	41 ff d0             	call   *%r8
ffffffff8001289e:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff800128a1:	83 e0 02             	and    $0x2,%eax
ffffffff800128a4:	85 c0                	test   %eax,%eax
ffffffff800128a6:	74 3f                	je     ffffffff800128e7 <_vsnprintf+0xd8f>
ffffffff800128a8:	eb 2f                	jmp    ffffffff800128d9 <_vsnprintf+0xd81>
ffffffff800128aa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800128ae:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffff800128b2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
ffffffff800128b6:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
ffffffff800128bd:	48 8b b5 30 ff ff ff 	mov    -0xd0(%rbp),%rsi
ffffffff800128c4:	4c 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%r8
ffffffff800128cb:	48 89 d1             	mov    %rdx,%rcx
ffffffff800128ce:	48 89 c2             	mov    %rax,%rdx
ffffffff800128d1:	bf 20 00 00 00       	mov    $0x20,%edi
ffffffff800128d6:	41 ff d0             	call   *%r8
ffffffff800128d9:	8b 45 e0             	mov    -0x20(%rbp),%eax
ffffffff800128dc:	8d 50 01             	lea    0x1(%rax),%edx
ffffffff800128df:	89 55 e0             	mov    %edx,-0x20(%rbp)
ffffffff800128e2:	39 45 f8             	cmp    %eax,-0x8(%rbp)
ffffffff800128e5:	77 c3                	ja     ffffffff800128aa <_vsnprintf+0xd52>
ffffffff800128e7:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
ffffffff800128ee:	48 83 c0 01          	add    $0x1,%rax
ffffffff800128f2:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
ffffffff800128f9:	e9 ce 0b 00 00       	jmp    ffffffff800134cc <_vsnprintf+0x1974>
ffffffff800128fe:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
ffffffff80012905:	8b 00                	mov    (%rax),%eax
ffffffff80012907:	83 f8 2f             	cmp    $0x2f,%eax
ffffffff8001290a:	77 30                	ja     ffffffff8001293c <_vsnprintf+0xde4>
ffffffff8001290c:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
ffffffff80012913:	48 8b 50 10          	mov    0x10(%rax),%rdx
ffffffff80012917:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
ffffffff8001291e:	8b 00                	mov    (%rax),%eax
ffffffff80012920:	89 c0                	mov    %eax,%eax
ffffffff80012922:	48 01 d0             	add    %rdx,%rax
ffffffff80012925:	48 8b 95 18 ff ff ff 	mov    -0xe8(%rbp),%rdx
ffffffff8001292c:	8b 12                	mov    (%rdx),%edx
ffffffff8001292e:	8d 4a 08             	lea    0x8(%rdx),%ecx
ffffffff80012931:	48 8b 95 18 ff ff ff 	mov    -0xe8(%rbp),%rdx
ffffffff80012938:	89 0a                	mov    %ecx,(%rdx)
ffffffff8001293a:	eb 1a                	jmp    ffffffff80012956 <_vsnprintf+0xdfe>
ffffffff8001293c:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
ffffffff80012943:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff80012947:	48 8d 50 08          	lea    0x8(%rax),%rdx
ffffffff8001294b:	48 8b 8d 18 ff ff ff 	mov    -0xe8(%rbp),%rcx
ffffffff80012952:	48 89 51 08          	mov    %rdx,0x8(%rcx)
ffffffff80012956:	48 8b 00             	mov    (%rax),%rax
ffffffff80012959:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
ffffffff8001295d:	48 c7 45 d0 00 00 00 	movq   $0x0,-0x30(%rbp)
ffffffff80012964:	00 
ffffffff80012965:	48 c7 45 c8 00 00 00 	movq   $0x0,-0x38(%rbp)
ffffffff8001296c:	00 
ffffffff8001296d:	eb 1e                	jmp    ffffffff8001298d <_vsnprintf+0xe35>
ffffffff8001296f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80012973:	25 ff 03 00 00       	and    $0x3ff,%eax
ffffffff80012978:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
ffffffff8001297c:	48 83 45 d0 01       	addq   $0x1,-0x30(%rbp)
ffffffff80012981:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80012985:	48 c1 e8 0a          	shr    $0xa,%rax
ffffffff80012989:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
ffffffff8001298d:	48 81 7d d8 ff 03 00 	cmpq   $0x3ff,-0x28(%rbp)
ffffffff80012994:	00 
ffffffff80012995:	76 07                	jbe    ffffffff8001299e <_vsnprintf+0xe46>
ffffffff80012997:	48 83 7d d0 04       	cmpq   $0x4,-0x30(%rbp)
ffffffff8001299c:	76 d1                	jbe    ffffffff8001296f <_vsnprintf+0xe17>
ffffffff8001299e:	4c 8b 45 d8          	mov    -0x28(%rbp),%r8
ffffffff800129a2:	48 8b 8d 28 ff ff ff 	mov    -0xd8(%rbp),%rcx
ffffffff800129a9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff800129ad:	48 8b b5 30 ff ff ff 	mov    -0xd0(%rbp),%rsi
ffffffff800129b4:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
ffffffff800129bb:	8b 7d fc             	mov    -0x4(%rbp),%edi
ffffffff800129be:	57                   	push   %rdi
ffffffff800129bf:	8b 7d f8             	mov    -0x8(%rbp),%edi
ffffffff800129c2:	57                   	push   %rdi
ffffffff800129c3:	8b 7d f4             	mov    -0xc(%rbp),%edi
ffffffff800129c6:	57                   	push   %rdi
ffffffff800129c7:	6a 0a                	push   $0xa
ffffffff800129c9:	41 b9 00 00 00 00    	mov    $0x0,%r9d
ffffffff800129cf:	48 89 c7             	mov    %rax,%rdi
ffffffff800129d2:	e8 65 ef ff ff       	call   ffffffff8001193c <_ntoa_long>
ffffffff800129d7:	48 83 c4 20          	add    $0x20,%rsp
ffffffff800129db:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff800129df:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff800129e3:	48 6b c0 64          	imul   $0x64,%rax,%rax
ffffffff800129e7:	48 3d ff 03 00 00    	cmp    $0x3ff,%rax
ffffffff800129ed:	76 70                	jbe    ffffffff80012a5f <_vsnprintf+0xf07>
ffffffff800129ef:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800129f3:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffff800129f7:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
ffffffff800129fb:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
ffffffff80012a02:	48 8b b5 30 ff ff ff 	mov    -0xd0(%rbp),%rsi
ffffffff80012a09:	4c 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%r8
ffffffff80012a10:	48 89 d1             	mov    %rdx,%rcx
ffffffff80012a13:	48 89 c2             	mov    %rax,%rdx
ffffffff80012a16:	bf 2e 00 00 00       	mov    $0x2e,%edi
ffffffff80012a1b:	41 ff d0             	call   *%r8
ffffffff80012a1e:	4c 8b 45 d8          	mov    -0x28(%rbp),%r8
ffffffff80012a22:	48 8b 8d 28 ff ff ff 	mov    -0xd8(%rbp),%rcx
ffffffff80012a29:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff80012a2d:	48 8b b5 30 ff ff ff 	mov    -0xd0(%rbp),%rsi
ffffffff80012a34:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
ffffffff80012a3b:	8b 7d fc             	mov    -0x4(%rbp),%edi
ffffffff80012a3e:	57                   	push   %rdi
ffffffff80012a3f:	8b 7d f8             	mov    -0x8(%rbp),%edi
ffffffff80012a42:	57                   	push   %rdi
ffffffff80012a43:	8b 7d f4             	mov    -0xc(%rbp),%edi
ffffffff80012a46:	57                   	push   %rdi
ffffffff80012a47:	6a 0a                	push   $0xa
ffffffff80012a49:	41 b9 00 00 00 00    	mov    $0x0,%r9d
ffffffff80012a4f:	48 89 c7             	mov    %rax,%rdi
ffffffff80012a52:	e8 e5 ee ff ff       	call   ffffffff8001193c <_ntoa_long>
ffffffff80012a57:	48 83 c4 20          	add    $0x20,%rsp
ffffffff80012a5b:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff80012a5f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff80012a63:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
ffffffff80012a6a:	00 
ffffffff80012a6b:	48 8d 05 8e 47 09 00 	lea    0x9478e(%rip),%rax        # ffffffff800a7200 <sizes.0>
ffffffff80012a72:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
ffffffff80012a76:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
ffffffff80012a7a:	eb 3c                	jmp    ffffffff80012ab8 <_vsnprintf+0xf60>
ffffffff80012a7c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80012a80:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffff80012a84:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
ffffffff80012a88:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
ffffffff80012a8c:	48 8d 4a 01          	lea    0x1(%rdx),%rcx
ffffffff80012a90:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
ffffffff80012a94:	0f b6 12             	movzbl (%rdx),%edx
ffffffff80012a97:	0f be fa             	movsbl %dl,%edi
ffffffff80012a9a:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
ffffffff80012aa1:	48 8b b5 30 ff ff ff 	mov    -0xd0(%rbp),%rsi
ffffffff80012aa8:	4c 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%r8
ffffffff80012aaf:	48 89 d1             	mov    %rdx,%rcx
ffffffff80012ab2:	48 89 c2             	mov    %rax,%rdx
ffffffff80012ab5:	41 ff d0             	call   *%r8
ffffffff80012ab8:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff80012abc:	0f b6 00             	movzbl (%rax),%eax
ffffffff80012abf:	84 c0                	test   %al,%al
ffffffff80012ac1:	74 19                	je     ffffffff80012adc <_vsnprintf+0xf84>
ffffffff80012ac3:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff80012ac6:	25 00 04 00 00       	and    $0x400,%eax
ffffffff80012acb:	85 c0                	test   %eax,%eax
ffffffff80012acd:	74 ad                	je     ffffffff80012a7c <_vsnprintf+0xf24>
ffffffff80012acf:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff80012ad2:	8d 50 ff             	lea    -0x1(%rax),%edx
ffffffff80012ad5:	89 55 f4             	mov    %edx,-0xc(%rbp)
ffffffff80012ad8:	85 c0                	test   %eax,%eax
ffffffff80012ada:	75 a0                	jne    ffffffff80012a7c <_vsnprintf+0xf24>
ffffffff80012adc:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
ffffffff80012ae3:	48 83 c0 01          	add    $0x1,%rax
ffffffff80012ae7:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
ffffffff80012aee:	e9 d9 09 00 00       	jmp    ffffffff800134cc <_vsnprintf+0x1974>
ffffffff80012af3:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
ffffffff80012afa:	8b 00                	mov    (%rax),%eax
ffffffff80012afc:	83 f8 2f             	cmp    $0x2f,%eax
ffffffff80012aff:	77 30                	ja     ffffffff80012b31 <_vsnprintf+0xfd9>
ffffffff80012b01:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
ffffffff80012b08:	48 8b 50 10          	mov    0x10(%rax),%rdx
ffffffff80012b0c:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
ffffffff80012b13:	8b 00                	mov    (%rax),%eax
ffffffff80012b15:	89 c0                	mov    %eax,%eax
ffffffff80012b17:	48 01 d0             	add    %rdx,%rax
ffffffff80012b1a:	48 8b 95 18 ff ff ff 	mov    -0xe8(%rbp),%rdx
ffffffff80012b21:	8b 12                	mov    (%rdx),%edx
ffffffff80012b23:	8d 4a 08             	lea    0x8(%rdx),%ecx
ffffffff80012b26:	48 8b 95 18 ff ff ff 	mov    -0xe8(%rbp),%rdx
ffffffff80012b2d:	89 0a                	mov    %ecx,(%rdx)
ffffffff80012b2f:	eb 1a                	jmp    ffffffff80012b4b <_vsnprintf+0xff3>
ffffffff80012b31:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
ffffffff80012b38:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff80012b3c:	48 8d 50 08          	lea    0x8(%rax),%rdx
ffffffff80012b40:	48 8b 8d 18 ff ff ff 	mov    -0xe8(%rbp),%rcx
ffffffff80012b47:	48 89 51 08          	mov    %rdx,0x8(%rcx)
ffffffff80012b4b:	8b 00                	mov    (%rax),%eax
ffffffff80012b4d:	89 85 5c ff ff ff    	mov    %eax,-0xa4(%rbp)
ffffffff80012b53:	48 c7 45 b8 00 00 00 	movq   $0x0,-0x48(%rbp)
ffffffff80012b5a:	00 
ffffffff80012b5b:	83 bd 5c ff ff ff 04 	cmpl   $0x4,-0xa4(%rbp)
ffffffff80012b62:	74 56                	je     ffffffff80012bba <_vsnprintf+0x1062>
ffffffff80012b64:	83 bd 5c ff ff ff 04 	cmpl   $0x4,-0xa4(%rbp)
ffffffff80012b6b:	77 5a                	ja     ffffffff80012bc7 <_vsnprintf+0x106f>
ffffffff80012b6d:	83 bd 5c ff ff ff 03 	cmpl   $0x3,-0xa4(%rbp)
ffffffff80012b74:	74 37                	je     ffffffff80012bad <_vsnprintf+0x1055>
ffffffff80012b76:	83 bd 5c ff ff ff 03 	cmpl   $0x3,-0xa4(%rbp)
ffffffff80012b7d:	77 48                	ja     ffffffff80012bc7 <_vsnprintf+0x106f>
ffffffff80012b7f:	83 bd 5c ff ff ff 01 	cmpl   $0x1,-0xa4(%rbp)
ffffffff80012b86:	74 0b                	je     ffffffff80012b93 <_vsnprintf+0x103b>
ffffffff80012b88:	83 bd 5c ff ff ff 02 	cmpl   $0x2,-0xa4(%rbp)
ffffffff80012b8f:	74 0f                	je     ffffffff80012ba0 <_vsnprintf+0x1048>
ffffffff80012b91:	eb 34                	jmp    ffffffff80012bc7 <_vsnprintf+0x106f>
ffffffff80012b93:	48 8d 05 71 58 02 00 	lea    0x25871(%rip),%rax        # ffffffff8003840b <g_stivale2_header+0x140b>
ffffffff80012b9a:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
ffffffff80012b9e:	eb 33                	jmp    ffffffff80012bd3 <_vsnprintf+0x107b>
ffffffff80012ba0:	48 8d 05 77 58 02 00 	lea    0x25877(%rip),%rax        # ffffffff8003841e <g_stivale2_header+0x141e>
ffffffff80012ba7:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
ffffffff80012bab:	eb 26                	jmp    ffffffff80012bd3 <_vsnprintf+0x107b>
ffffffff80012bad:	48 8d 05 7a 58 02 00 	lea    0x2587a(%rip),%rax        # ffffffff8003842e <g_stivale2_header+0x142e>
ffffffff80012bb4:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
ffffffff80012bb8:	eb 19                	jmp    ffffffff80012bd3 <_vsnprintf+0x107b>
ffffffff80012bba:	48 8d 05 84 58 02 00 	lea    0x25884(%rip),%rax        # ffffffff80038445 <g_stivale2_header+0x1445>
ffffffff80012bc1:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
ffffffff80012bc5:	eb 0c                	jmp    ffffffff80012bd3 <_vsnprintf+0x107b>
ffffffff80012bc7:	48 8d 05 88 58 02 00 	lea    0x25888(%rip),%rax        # ffffffff80038456 <g_stivale2_header+0x1456>
ffffffff80012bce:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
ffffffff80012bd2:	90                   	nop
ffffffff80012bd3:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
ffffffff80012bd7:	74 05                	je     ffffffff80012bde <_vsnprintf+0x1086>
ffffffff80012bd9:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff80012bdc:	eb 07                	jmp    ffffffff80012be5 <_vsnprintf+0x108d>
ffffffff80012bde:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
ffffffff80012be5:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
ffffffff80012be9:	48 89 c6             	mov    %rax,%rsi
ffffffff80012bec:	48 89 d7             	mov    %rdx,%rdi
ffffffff80012bef:	e8 f0 e8 ff ff       	call   ffffffff800114e4 <_strnlen_s>
ffffffff80012bf4:	89 45 b4             	mov    %eax,-0x4c(%rbp)
ffffffff80012bf7:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff80012bfa:	25 00 04 00 00       	and    $0x400,%eax
ffffffff80012bff:	85 c0                	test   %eax,%eax
ffffffff80012c01:	74 0e                	je     ffffffff80012c11 <_vsnprintf+0x10b9>
ffffffff80012c03:	8b 55 b4             	mov    -0x4c(%rbp),%edx
ffffffff80012c06:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff80012c09:	39 c2                	cmp    %eax,%edx
ffffffff80012c0b:	0f 46 c2             	cmovbe %edx,%eax
ffffffff80012c0e:	89 45 b4             	mov    %eax,-0x4c(%rbp)
ffffffff80012c11:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff80012c14:	83 e0 02             	and    $0x2,%eax
ffffffff80012c17:	85 c0                	test   %eax,%eax
ffffffff80012c19:	75 7d                	jne    ffffffff80012c98 <_vsnprintf+0x1140>
ffffffff80012c1b:	eb 2f                	jmp    ffffffff80012c4c <_vsnprintf+0x10f4>
ffffffff80012c1d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80012c21:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffff80012c25:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
ffffffff80012c29:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
ffffffff80012c30:	48 8b b5 30 ff ff ff 	mov    -0xd0(%rbp),%rsi
ffffffff80012c37:	4c 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%r8
ffffffff80012c3e:	48 89 d1             	mov    %rdx,%rcx
ffffffff80012c41:	48 89 c2             	mov    %rax,%rdx
ffffffff80012c44:	bf 20 00 00 00       	mov    $0x20,%edi
ffffffff80012c49:	41 ff d0             	call   *%r8
ffffffff80012c4c:	8b 45 b4             	mov    -0x4c(%rbp),%eax
ffffffff80012c4f:	8d 50 01             	lea    0x1(%rax),%edx
ffffffff80012c52:	89 55 b4             	mov    %edx,-0x4c(%rbp)
ffffffff80012c55:	39 45 f8             	cmp    %eax,-0x8(%rbp)
ffffffff80012c58:	77 c3                	ja     ffffffff80012c1d <_vsnprintf+0x10c5>
ffffffff80012c5a:	eb 3c                	jmp    ffffffff80012c98 <_vsnprintf+0x1140>
ffffffff80012c5c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80012c60:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffff80012c64:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
ffffffff80012c68:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
ffffffff80012c6c:	48 8d 4a 01          	lea    0x1(%rdx),%rcx
ffffffff80012c70:	48 89 4d b8          	mov    %rcx,-0x48(%rbp)
ffffffff80012c74:	0f b6 12             	movzbl (%rdx),%edx
ffffffff80012c77:	0f be fa             	movsbl %dl,%edi
ffffffff80012c7a:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
ffffffff80012c81:	48 8b b5 30 ff ff ff 	mov    -0xd0(%rbp),%rsi
ffffffff80012c88:	4c 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%r8
ffffffff80012c8f:	48 89 d1             	mov    %rdx,%rcx
ffffffff80012c92:	48 89 c2             	mov    %rax,%rdx
ffffffff80012c95:	41 ff d0             	call   *%r8
ffffffff80012c98:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff80012c9c:	0f b6 00             	movzbl (%rax),%eax
ffffffff80012c9f:	84 c0                	test   %al,%al
ffffffff80012ca1:	74 19                	je     ffffffff80012cbc <_vsnprintf+0x1164>
ffffffff80012ca3:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff80012ca6:	25 00 04 00 00       	and    $0x400,%eax
ffffffff80012cab:	85 c0                	test   %eax,%eax
ffffffff80012cad:	74 ad                	je     ffffffff80012c5c <_vsnprintf+0x1104>
ffffffff80012caf:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff80012cb2:	8d 50 ff             	lea    -0x1(%rax),%edx
ffffffff80012cb5:	89 55 f4             	mov    %edx,-0xc(%rbp)
ffffffff80012cb8:	85 c0                	test   %eax,%eax
ffffffff80012cba:	75 a0                	jne    ffffffff80012c5c <_vsnprintf+0x1104>
ffffffff80012cbc:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff80012cbf:	83 e0 02             	and    $0x2,%eax
ffffffff80012cc2:	85 c0                	test   %eax,%eax
ffffffff80012cc4:	74 3f                	je     ffffffff80012d05 <_vsnprintf+0x11ad>
ffffffff80012cc6:	eb 2f                	jmp    ffffffff80012cf7 <_vsnprintf+0x119f>
ffffffff80012cc8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80012ccc:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffff80012cd0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
ffffffff80012cd4:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
ffffffff80012cdb:	48 8b b5 30 ff ff ff 	mov    -0xd0(%rbp),%rsi
ffffffff80012ce2:	4c 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%r8
ffffffff80012ce9:	48 89 d1             	mov    %rdx,%rcx
ffffffff80012cec:	48 89 c2             	mov    %rax,%rdx
ffffffff80012cef:	bf 20 00 00 00       	mov    $0x20,%edi
ffffffff80012cf4:	41 ff d0             	call   *%r8
ffffffff80012cf7:	8b 45 b4             	mov    -0x4c(%rbp),%eax
ffffffff80012cfa:	8d 50 01             	lea    0x1(%rax),%edx
ffffffff80012cfd:	89 55 b4             	mov    %edx,-0x4c(%rbp)
ffffffff80012d00:	39 45 f8             	cmp    %eax,-0x8(%rbp)
ffffffff80012d03:	77 c3                	ja     ffffffff80012cc8 <_vsnprintf+0x1170>
ffffffff80012d05:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
ffffffff80012d0c:	48 83 c0 01          	add    $0x1,%rax
ffffffff80012d10:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
ffffffff80012d17:	e9 b0 07 00 00       	jmp    ffffffff800134cc <_vsnprintf+0x1974>
ffffffff80012d1c:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
ffffffff80012d23:	8b 00                	mov    (%rax),%eax
ffffffff80012d25:	83 f8 2f             	cmp    $0x2f,%eax
ffffffff80012d28:	77 30                	ja     ffffffff80012d5a <_vsnprintf+0x1202>
ffffffff80012d2a:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
ffffffff80012d31:	48 8b 50 10          	mov    0x10(%rax),%rdx
ffffffff80012d35:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
ffffffff80012d3c:	8b 00                	mov    (%rax),%eax
ffffffff80012d3e:	89 c0                	mov    %eax,%eax
ffffffff80012d40:	48 01 d0             	add    %rdx,%rax
ffffffff80012d43:	48 8b 95 18 ff ff ff 	mov    -0xe8(%rbp),%rdx
ffffffff80012d4a:	8b 12                	mov    (%rdx),%edx
ffffffff80012d4c:	8d 4a 08             	lea    0x8(%rdx),%ecx
ffffffff80012d4f:	48 8b 95 18 ff ff ff 	mov    -0xe8(%rbp),%rdx
ffffffff80012d56:	89 0a                	mov    %ecx,(%rdx)
ffffffff80012d58:	eb 1a                	jmp    ffffffff80012d74 <_vsnprintf+0x121c>
ffffffff80012d5a:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
ffffffff80012d61:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff80012d65:	48 8d 50 08          	lea    0x8(%rax),%rdx
ffffffff80012d69:	48 8b 8d 18 ff ff ff 	mov    -0xe8(%rbp),%rcx
ffffffff80012d70:	48 89 51 08          	mov    %rdx,0x8(%rcx)
ffffffff80012d74:	48 8b 00             	mov    (%rax),%rax
ffffffff80012d77:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
ffffffff80012d7b:	48 83 7d a8 00       	cmpq   $0x0,-0x58(%rbp)
ffffffff80012d80:	75 0b                	jne    ffffffff80012d8d <_vsnprintf+0x1235>
ffffffff80012d82:	48 8d 05 dd 56 02 00 	lea    0x256dd(%rip),%rax        # ffffffff80038466 <g_stivale2_header+0x1466>
ffffffff80012d89:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
ffffffff80012d8d:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
ffffffff80012d91:	74 05                	je     ffffffff80012d98 <_vsnprintf+0x1240>
ffffffff80012d93:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff80012d96:	eb 07                	jmp    ffffffff80012d9f <_vsnprintf+0x1247>
ffffffff80012d98:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
ffffffff80012d9f:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
ffffffff80012da3:	48 89 c6             	mov    %rax,%rsi
ffffffff80012da6:	48 89 d7             	mov    %rdx,%rdi
ffffffff80012da9:	e8 36 e7 ff ff       	call   ffffffff800114e4 <_strnlen_s>
ffffffff80012dae:	89 45 a4             	mov    %eax,-0x5c(%rbp)
ffffffff80012db1:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff80012db4:	25 00 04 00 00       	and    $0x400,%eax
ffffffff80012db9:	85 c0                	test   %eax,%eax
ffffffff80012dbb:	74 0e                	je     ffffffff80012dcb <_vsnprintf+0x1273>
ffffffff80012dbd:	8b 55 a4             	mov    -0x5c(%rbp),%edx
ffffffff80012dc0:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff80012dc3:	39 c2                	cmp    %eax,%edx
ffffffff80012dc5:	0f 46 c2             	cmovbe %edx,%eax
ffffffff80012dc8:	89 45 a4             	mov    %eax,-0x5c(%rbp)
ffffffff80012dcb:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff80012dce:	83 e0 02             	and    $0x2,%eax
ffffffff80012dd1:	85 c0                	test   %eax,%eax
ffffffff80012dd3:	75 7d                	jne    ffffffff80012e52 <_vsnprintf+0x12fa>
ffffffff80012dd5:	eb 2f                	jmp    ffffffff80012e06 <_vsnprintf+0x12ae>
ffffffff80012dd7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80012ddb:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffff80012ddf:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
ffffffff80012de3:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
ffffffff80012dea:	48 8b b5 30 ff ff ff 	mov    -0xd0(%rbp),%rsi
ffffffff80012df1:	4c 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%r8
ffffffff80012df8:	48 89 d1             	mov    %rdx,%rcx
ffffffff80012dfb:	48 89 c2             	mov    %rax,%rdx
ffffffff80012dfe:	bf 20 00 00 00       	mov    $0x20,%edi
ffffffff80012e03:	41 ff d0             	call   *%r8
ffffffff80012e06:	8b 45 a4             	mov    -0x5c(%rbp),%eax
ffffffff80012e09:	8d 50 01             	lea    0x1(%rax),%edx
ffffffff80012e0c:	89 55 a4             	mov    %edx,-0x5c(%rbp)
ffffffff80012e0f:	39 45 f8             	cmp    %eax,-0x8(%rbp)
ffffffff80012e12:	77 c3                	ja     ffffffff80012dd7 <_vsnprintf+0x127f>
ffffffff80012e14:	eb 3c                	jmp    ffffffff80012e52 <_vsnprintf+0x12fa>
ffffffff80012e16:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80012e1a:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffff80012e1e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
ffffffff80012e22:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
ffffffff80012e26:	48 8d 4a 01          	lea    0x1(%rdx),%rcx
ffffffff80012e2a:	48 89 4d a8          	mov    %rcx,-0x58(%rbp)
ffffffff80012e2e:	0f b6 12             	movzbl (%rdx),%edx
ffffffff80012e31:	0f be fa             	movsbl %dl,%edi
ffffffff80012e34:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
ffffffff80012e3b:	48 8b b5 30 ff ff ff 	mov    -0xd0(%rbp),%rsi
ffffffff80012e42:	4c 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%r8
ffffffff80012e49:	48 89 d1             	mov    %rdx,%rcx
ffffffff80012e4c:	48 89 c2             	mov    %rax,%rdx
ffffffff80012e4f:	41 ff d0             	call   *%r8
ffffffff80012e52:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff80012e56:	0f b6 00             	movzbl (%rax),%eax
ffffffff80012e59:	84 c0                	test   %al,%al
ffffffff80012e5b:	74 19                	je     ffffffff80012e76 <_vsnprintf+0x131e>
ffffffff80012e5d:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff80012e60:	25 00 04 00 00       	and    $0x400,%eax
ffffffff80012e65:	85 c0                	test   %eax,%eax
ffffffff80012e67:	74 ad                	je     ffffffff80012e16 <_vsnprintf+0x12be>
ffffffff80012e69:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff80012e6c:	8d 50 ff             	lea    -0x1(%rax),%edx
ffffffff80012e6f:	89 55 f4             	mov    %edx,-0xc(%rbp)
ffffffff80012e72:	85 c0                	test   %eax,%eax
ffffffff80012e74:	75 a0                	jne    ffffffff80012e16 <_vsnprintf+0x12be>
ffffffff80012e76:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff80012e79:	83 e0 02             	and    $0x2,%eax
ffffffff80012e7c:	85 c0                	test   %eax,%eax
ffffffff80012e7e:	74 3f                	je     ffffffff80012ebf <_vsnprintf+0x1367>
ffffffff80012e80:	eb 2f                	jmp    ffffffff80012eb1 <_vsnprintf+0x1359>
ffffffff80012e82:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80012e86:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffff80012e8a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
ffffffff80012e8e:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
ffffffff80012e95:	48 8b b5 30 ff ff ff 	mov    -0xd0(%rbp),%rsi
ffffffff80012e9c:	4c 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%r8
ffffffff80012ea3:	48 89 d1             	mov    %rdx,%rcx
ffffffff80012ea6:	48 89 c2             	mov    %rax,%rdx
ffffffff80012ea9:	bf 20 00 00 00       	mov    $0x20,%edi
ffffffff80012eae:	41 ff d0             	call   *%r8
ffffffff80012eb1:	8b 45 a4             	mov    -0x5c(%rbp),%eax
ffffffff80012eb4:	8d 50 01             	lea    0x1(%rax),%edx
ffffffff80012eb7:	89 55 a4             	mov    %edx,-0x5c(%rbp)
ffffffff80012eba:	39 45 f8             	cmp    %eax,-0x8(%rbp)
ffffffff80012ebd:	77 c3                	ja     ffffffff80012e82 <_vsnprintf+0x132a>
ffffffff80012ebf:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
ffffffff80012ec6:	48 83 c0 01          	add    $0x1,%rax
ffffffff80012eca:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
ffffffff80012ed1:	e9 f6 05 00 00       	jmp    ffffffff800134cc <_vsnprintf+0x1974>
ffffffff80012ed6:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
ffffffff80012edd:	8b 00                	mov    (%rax),%eax
ffffffff80012edf:	83 f8 2f             	cmp    $0x2f,%eax
ffffffff80012ee2:	77 30                	ja     ffffffff80012f14 <_vsnprintf+0x13bc>
ffffffff80012ee4:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
ffffffff80012eeb:	48 8b 50 10          	mov    0x10(%rax),%rdx
ffffffff80012eef:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
ffffffff80012ef6:	8b 00                	mov    (%rax),%eax
ffffffff80012ef8:	89 c0                	mov    %eax,%eax
ffffffff80012efa:	48 01 d0             	add    %rdx,%rax
ffffffff80012efd:	48 8b 95 18 ff ff ff 	mov    -0xe8(%rbp),%rdx
ffffffff80012f04:	8b 12                	mov    (%rdx),%edx
ffffffff80012f06:	8d 4a 08             	lea    0x8(%rdx),%ecx
ffffffff80012f09:	48 8b 95 18 ff ff ff 	mov    -0xe8(%rbp),%rdx
ffffffff80012f10:	89 0a                	mov    %ecx,(%rdx)
ffffffff80012f12:	eb 1a                	jmp    ffffffff80012f2e <_vsnprintf+0x13d6>
ffffffff80012f14:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
ffffffff80012f1b:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff80012f1f:	48 8d 50 08          	lea    0x8(%rax),%rdx
ffffffff80012f23:	48 8b 8d 18 ff ff ff 	mov    -0xe8(%rbp),%rcx
ffffffff80012f2a:	48 89 51 08          	mov    %rdx,0x8(%rcx)
ffffffff80012f2e:	48 8b 00             	mov    (%rax),%rax
ffffffff80012f31:	48 89 45 98          	mov    %rax,-0x68(%rbp)
ffffffff80012f35:	48 83 7d 98 00       	cmpq   $0x0,-0x68(%rbp)
ffffffff80012f3a:	75 0b                	jne    ffffffff80012f47 <_vsnprintf+0x13ef>
ffffffff80012f3c:	48 8d 05 41 c4 08 00 	lea    0x8c441(%rip),%rax        # ffffffff8009f384 <zydis_decoder_tree_root+0x76>
ffffffff80012f43:	48 89 45 98          	mov    %rax,-0x68(%rbp)
ffffffff80012f47:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
ffffffff80012f4b:	74 05                	je     ffffffff80012f52 <_vsnprintf+0x13fa>
ffffffff80012f4d:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff80012f50:	eb 07                	jmp    ffffffff80012f59 <_vsnprintf+0x1401>
ffffffff80012f52:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
ffffffff80012f59:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
ffffffff80012f5d:	48 89 c6             	mov    %rax,%rsi
ffffffff80012f60:	48 89 d7             	mov    %rdx,%rdi
ffffffff80012f63:	e8 c1 e5 ff ff       	call   ffffffff80011529 <_wstrnlen_s>
ffffffff80012f68:	89 45 94             	mov    %eax,-0x6c(%rbp)
ffffffff80012f6b:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff80012f6e:	25 00 04 00 00       	and    $0x400,%eax
ffffffff80012f73:	85 c0                	test   %eax,%eax
ffffffff80012f75:	74 0e                	je     ffffffff80012f85 <_vsnprintf+0x142d>
ffffffff80012f77:	8b 55 94             	mov    -0x6c(%rbp),%edx
ffffffff80012f7a:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff80012f7d:	39 c2                	cmp    %eax,%edx
ffffffff80012f7f:	0f 46 c2             	cmovbe %edx,%eax
ffffffff80012f82:	89 45 94             	mov    %eax,-0x6c(%rbp)
ffffffff80012f85:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff80012f88:	83 e0 02             	and    $0x2,%eax
ffffffff80012f8b:	85 c0                	test   %eax,%eax
ffffffff80012f8d:	75 7d                	jne    ffffffff8001300c <_vsnprintf+0x14b4>
ffffffff80012f8f:	eb 2f                	jmp    ffffffff80012fc0 <_vsnprintf+0x1468>
ffffffff80012f91:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80012f95:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffff80012f99:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
ffffffff80012f9d:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
ffffffff80012fa4:	48 8b b5 30 ff ff ff 	mov    -0xd0(%rbp),%rsi
ffffffff80012fab:	4c 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%r8
ffffffff80012fb2:	48 89 d1             	mov    %rdx,%rcx
ffffffff80012fb5:	48 89 c2             	mov    %rax,%rdx
ffffffff80012fb8:	bf 20 00 00 00       	mov    $0x20,%edi
ffffffff80012fbd:	41 ff d0             	call   *%r8
ffffffff80012fc0:	8b 45 94             	mov    -0x6c(%rbp),%eax
ffffffff80012fc3:	8d 50 01             	lea    0x1(%rax),%edx
ffffffff80012fc6:	89 55 94             	mov    %edx,-0x6c(%rbp)
ffffffff80012fc9:	39 45 f8             	cmp    %eax,-0x8(%rbp)
ffffffff80012fcc:	77 c3                	ja     ffffffff80012f91 <_vsnprintf+0x1439>
ffffffff80012fce:	eb 3c                	jmp    ffffffff8001300c <_vsnprintf+0x14b4>
ffffffff80012fd0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80012fd4:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffff80012fd8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
ffffffff80012fdc:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
ffffffff80012fe0:	48 8d 4a 02          	lea    0x2(%rdx),%rcx
ffffffff80012fe4:	48 89 4d 98          	mov    %rcx,-0x68(%rbp)
ffffffff80012fe8:	0f b7 12             	movzwl (%rdx),%edx
ffffffff80012feb:	0f be fa             	movsbl %dl,%edi
ffffffff80012fee:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
ffffffff80012ff5:	48 8b b5 30 ff ff ff 	mov    -0xd0(%rbp),%rsi
ffffffff80012ffc:	4c 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%r8
ffffffff80013003:	48 89 d1             	mov    %rdx,%rcx
ffffffff80013006:	48 89 c2             	mov    %rax,%rdx
ffffffff80013009:	41 ff d0             	call   *%r8
ffffffff8001300c:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff80013010:	0f b7 00             	movzwl (%rax),%eax
ffffffff80013013:	66 85 c0             	test   %ax,%ax
ffffffff80013016:	74 19                	je     ffffffff80013031 <_vsnprintf+0x14d9>
ffffffff80013018:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8001301b:	25 00 04 00 00       	and    $0x400,%eax
ffffffff80013020:	85 c0                	test   %eax,%eax
ffffffff80013022:	74 ac                	je     ffffffff80012fd0 <_vsnprintf+0x1478>
ffffffff80013024:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff80013027:	8d 50 ff             	lea    -0x1(%rax),%edx
ffffffff8001302a:	89 55 f4             	mov    %edx,-0xc(%rbp)
ffffffff8001302d:	85 c0                	test   %eax,%eax
ffffffff8001302f:	75 9f                	jne    ffffffff80012fd0 <_vsnprintf+0x1478>
ffffffff80013031:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff80013034:	83 e0 02             	and    $0x2,%eax
ffffffff80013037:	85 c0                	test   %eax,%eax
ffffffff80013039:	74 3f                	je     ffffffff8001307a <_vsnprintf+0x1522>
ffffffff8001303b:	eb 2f                	jmp    ffffffff8001306c <_vsnprintf+0x1514>
ffffffff8001303d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80013041:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffff80013045:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
ffffffff80013049:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
ffffffff80013050:	48 8b b5 30 ff ff ff 	mov    -0xd0(%rbp),%rsi
ffffffff80013057:	4c 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%r8
ffffffff8001305e:	48 89 d1             	mov    %rdx,%rcx
ffffffff80013061:	48 89 c2             	mov    %rax,%rdx
ffffffff80013064:	bf 20 00 00 00       	mov    $0x20,%edi
ffffffff80013069:	41 ff d0             	call   *%r8
ffffffff8001306c:	8b 45 94             	mov    -0x6c(%rbp),%eax
ffffffff8001306f:	8d 50 01             	lea    0x1(%rax),%edx
ffffffff80013072:	89 55 94             	mov    %edx,-0x6c(%rbp)
ffffffff80013075:	39 45 f8             	cmp    %eax,-0x8(%rbp)
ffffffff80013078:	77 c3                	ja     ffffffff8001303d <_vsnprintf+0x14e5>
ffffffff8001307a:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
ffffffff80013081:	48 83 c0 01          	add    $0x1,%rax
ffffffff80013085:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
ffffffff8001308c:	e9 3b 04 00 00       	jmp    ffffffff800134cc <_vsnprintf+0x1974>
ffffffff80013091:	c7 45 f8 10 00 00 00 	movl   $0x10,-0x8(%rbp)
ffffffff80013098:	83 4d fc 21          	orl    $0x21,-0x4(%rbp)
ffffffff8001309c:	c6 85 7b ff ff ff 01 	movb   $0x1,-0x85(%rbp)
ffffffff800130a3:	80 bd 7b ff ff ff 00 	cmpb   $0x0,-0x85(%rbp)
ffffffff800130aa:	0f 84 a0 00 00 00    	je     ffffffff80013150 <_vsnprintf+0x15f8>
ffffffff800130b0:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
ffffffff800130b7:	8b 00                	mov    (%rax),%eax
ffffffff800130b9:	83 f8 2f             	cmp    $0x2f,%eax
ffffffff800130bc:	77 30                	ja     ffffffff800130ee <_vsnprintf+0x1596>
ffffffff800130be:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
ffffffff800130c5:	48 8b 50 10          	mov    0x10(%rax),%rdx
ffffffff800130c9:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
ffffffff800130d0:	8b 00                	mov    (%rax),%eax
ffffffff800130d2:	89 c0                	mov    %eax,%eax
ffffffff800130d4:	48 01 d0             	add    %rdx,%rax
ffffffff800130d7:	48 8b 95 18 ff ff ff 	mov    -0xe8(%rbp),%rdx
ffffffff800130de:	8b 12                	mov    (%rdx),%edx
ffffffff800130e0:	8d 4a 08             	lea    0x8(%rdx),%ecx
ffffffff800130e3:	48 8b 95 18 ff ff ff 	mov    -0xe8(%rbp),%rdx
ffffffff800130ea:	89 0a                	mov    %ecx,(%rdx)
ffffffff800130ec:	eb 1a                	jmp    ffffffff80013108 <_vsnprintf+0x15b0>
ffffffff800130ee:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
ffffffff800130f5:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff800130f9:	48 8d 50 08          	lea    0x8(%rax),%rdx
ffffffff800130fd:	48 8b 8d 18 ff ff ff 	mov    -0xe8(%rbp),%rcx
ffffffff80013104:	48 89 51 08          	mov    %rdx,0x8(%rcx)
ffffffff80013108:	48 8b 00             	mov    (%rax),%rax
ffffffff8001310b:	49 89 c0             	mov    %rax,%r8
ffffffff8001310e:	48 8b 8d 28 ff ff ff 	mov    -0xd8(%rbp),%rcx
ffffffff80013115:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff80013119:	48 8b b5 30 ff ff ff 	mov    -0xd0(%rbp),%rsi
ffffffff80013120:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
ffffffff80013127:	8b 7d fc             	mov    -0x4(%rbp),%edi
ffffffff8001312a:	57                   	push   %rdi
ffffffff8001312b:	8b 7d f8             	mov    -0x8(%rbp),%edi
ffffffff8001312e:	57                   	push   %rdi
ffffffff8001312f:	8b 7d f4             	mov    -0xc(%rbp),%edi
ffffffff80013132:	57                   	push   %rdi
ffffffff80013133:	6a 10                	push   $0x10
ffffffff80013135:	41 b9 00 00 00 00    	mov    $0x0,%r9d
ffffffff8001313b:	48 89 c7             	mov    %rax,%rdi
ffffffff8001313e:	e8 07 e9 ff ff       	call   ffffffff80011a4a <_ntoa_long_long>
ffffffff80013143:	48 83 c4 20          	add    $0x20,%rsp
ffffffff80013147:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff8001314b:	e9 9b 00 00 00       	jmp    ffffffff800131eb <_vsnprintf+0x1693>
ffffffff80013150:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
ffffffff80013157:	8b 00                	mov    (%rax),%eax
ffffffff80013159:	83 f8 2f             	cmp    $0x2f,%eax
ffffffff8001315c:	77 30                	ja     ffffffff8001318e <_vsnprintf+0x1636>
ffffffff8001315e:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
ffffffff80013165:	48 8b 50 10          	mov    0x10(%rax),%rdx
ffffffff80013169:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
ffffffff80013170:	8b 00                	mov    (%rax),%eax
ffffffff80013172:	89 c0                	mov    %eax,%eax
ffffffff80013174:	48 01 d0             	add    %rdx,%rax
ffffffff80013177:	48 8b 95 18 ff ff ff 	mov    -0xe8(%rbp),%rdx
ffffffff8001317e:	8b 12                	mov    (%rdx),%edx
ffffffff80013180:	8d 4a 08             	lea    0x8(%rdx),%ecx
ffffffff80013183:	48 8b 95 18 ff ff ff 	mov    -0xe8(%rbp),%rdx
ffffffff8001318a:	89 0a                	mov    %ecx,(%rdx)
ffffffff8001318c:	eb 1a                	jmp    ffffffff800131a8 <_vsnprintf+0x1650>
ffffffff8001318e:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
ffffffff80013195:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff80013199:	48 8d 50 08          	lea    0x8(%rax),%rdx
ffffffff8001319d:	48 8b 8d 18 ff ff ff 	mov    -0xe8(%rbp),%rcx
ffffffff800131a4:	48 89 51 08          	mov    %rdx,0x8(%rcx)
ffffffff800131a8:	48 8b 00             	mov    (%rax),%rax
ffffffff800131ab:	49 89 c0             	mov    %rax,%r8
ffffffff800131ae:	48 8b 8d 28 ff ff ff 	mov    -0xd8(%rbp),%rcx
ffffffff800131b5:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff800131b9:	48 8b b5 30 ff ff ff 	mov    -0xd0(%rbp),%rsi
ffffffff800131c0:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
ffffffff800131c7:	8b 7d fc             	mov    -0x4(%rbp),%edi
ffffffff800131ca:	57                   	push   %rdi
ffffffff800131cb:	8b 7d f8             	mov    -0x8(%rbp),%edi
ffffffff800131ce:	57                   	push   %rdi
ffffffff800131cf:	8b 7d f4             	mov    -0xc(%rbp),%edi
ffffffff800131d2:	57                   	push   %rdi
ffffffff800131d3:	6a 10                	push   $0x10
ffffffff800131d5:	41 b9 00 00 00 00    	mov    $0x0,%r9d
ffffffff800131db:	48 89 c7             	mov    %rax,%rdi
ffffffff800131de:	e8 59 e7 ff ff       	call   ffffffff8001193c <_ntoa_long>
ffffffff800131e3:	48 83 c4 20          	add    $0x20,%rsp
ffffffff800131e7:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff800131eb:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
ffffffff800131f2:	48 83 c0 01          	add    $0x1,%rax
ffffffff800131f6:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
ffffffff800131fd:	e9 ca 02 00 00       	jmp    ffffffff800134cc <_vsnprintf+0x1974>
ffffffff80013202:	c7 45 f8 10 00 00 00 	movl   $0x10,-0x8(%rbp)
ffffffff80013209:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
ffffffff80013210:	8b 00                	mov    (%rax),%eax
ffffffff80013212:	83 f8 2f             	cmp    $0x2f,%eax
ffffffff80013215:	77 30                	ja     ffffffff80013247 <_vsnprintf+0x16ef>
ffffffff80013217:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
ffffffff8001321e:	48 8b 50 10          	mov    0x10(%rax),%rdx
ffffffff80013222:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
ffffffff80013229:	8b 00                	mov    (%rax),%eax
ffffffff8001322b:	89 c0                	mov    %eax,%eax
ffffffff8001322d:	48 01 d0             	add    %rdx,%rax
ffffffff80013230:	48 8b 95 18 ff ff ff 	mov    -0xe8(%rbp),%rdx
ffffffff80013237:	8b 12                	mov    (%rdx),%edx
ffffffff80013239:	8d 4a 08             	lea    0x8(%rdx),%ecx
ffffffff8001323c:	48 8b 95 18 ff ff ff 	mov    -0xe8(%rbp),%rdx
ffffffff80013243:	89 0a                	mov    %ecx,(%rdx)
ffffffff80013245:	eb 1a                	jmp    ffffffff80013261 <_vsnprintf+0x1709>
ffffffff80013247:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
ffffffff8001324e:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff80013252:	48 8d 50 08          	lea    0x8(%rax),%rdx
ffffffff80013256:	48 8b 8d 18 ff ff ff 	mov    -0xe8(%rbp),%rcx
ffffffff8001325d:	48 89 51 08          	mov    %rdx,0x8(%rcx)
ffffffff80013261:	48 8b 00             	mov    (%rax),%rax
ffffffff80013264:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
ffffffff8001326b:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
ffffffff80013272:	48 89 c7             	mov    %rax,%rdi
ffffffff80013275:	e8 01 08 ff ff       	call   ffffffff80003a7b <debug_lookup_symbol>
ffffffff8001327a:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
ffffffff80013281:	48 83 bd 48 ff ff ff 	cmpq   $0x0,-0xb8(%rbp)
ffffffff80013288:	00 
ffffffff80013289:	74 13                	je     ffffffff8001329e <_vsnprintf+0x1746>
ffffffff8001328b:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
ffffffff80013292:	48 8b 00             	mov    (%rax),%rax
ffffffff80013295:	48 39 85 50 ff ff ff 	cmp    %rax,-0xb0(%rbp)
ffffffff8001329c:	74 49                	je     ffffffff800132e7 <_vsnprintf+0x178f>
ffffffff8001329e:	4c 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%r8
ffffffff800132a5:	48 8b 8d 28 ff ff ff 	mov    -0xd8(%rbp),%rcx
ffffffff800132ac:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff800132b0:	48 8b b5 30 ff ff ff 	mov    -0xd0(%rbp),%rsi
ffffffff800132b7:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
ffffffff800132be:	8b 7d fc             	mov    -0x4(%rbp),%edi
ffffffff800132c1:	57                   	push   %rdi
ffffffff800132c2:	8b 7d f8             	mov    -0x8(%rbp),%edi
ffffffff800132c5:	57                   	push   %rdi
ffffffff800132c6:	8b 7d f4             	mov    -0xc(%rbp),%edi
ffffffff800132c9:	57                   	push   %rdi
ffffffff800132ca:	6a 10                	push   $0x10
ffffffff800132cc:	41 b9 00 00 00 00    	mov    $0x0,%r9d
ffffffff800132d2:	48 89 c7             	mov    %rax,%rdi
ffffffff800132d5:	e8 62 e6 ff ff       	call   ffffffff8001193c <_ntoa_long>
ffffffff800132da:	48 83 c4 20          	add    $0x20,%rsp
ffffffff800132de:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff800132e2:	e9 41 01 00 00       	jmp    ffffffff80013428 <_vsnprintf+0x18d0>
ffffffff800132e7:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
ffffffff800132ee:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff800132f2:	48 89 45 88          	mov    %rax,-0x78(%rbp)
ffffffff800132f6:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
ffffffff800132fa:	74 05                	je     ffffffff80013301 <_vsnprintf+0x17a9>
ffffffff800132fc:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff800132ff:	eb 07                	jmp    ffffffff80013308 <_vsnprintf+0x17b0>
ffffffff80013301:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
ffffffff80013308:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
ffffffff8001330c:	48 89 c6             	mov    %rax,%rsi
ffffffff8001330f:	48 89 d7             	mov    %rdx,%rdi
ffffffff80013312:	e8 cd e1 ff ff       	call   ffffffff800114e4 <_strnlen_s>
ffffffff80013317:	89 45 84             	mov    %eax,-0x7c(%rbp)
ffffffff8001331a:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8001331d:	25 00 04 00 00       	and    $0x400,%eax
ffffffff80013322:	85 c0                	test   %eax,%eax
ffffffff80013324:	74 0e                	je     ffffffff80013334 <_vsnprintf+0x17dc>
ffffffff80013326:	8b 55 84             	mov    -0x7c(%rbp),%edx
ffffffff80013329:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff8001332c:	39 c2                	cmp    %eax,%edx
ffffffff8001332e:	0f 46 c2             	cmovbe %edx,%eax
ffffffff80013331:	89 45 84             	mov    %eax,-0x7c(%rbp)
ffffffff80013334:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff80013337:	83 e0 02             	and    $0x2,%eax
ffffffff8001333a:	85 c0                	test   %eax,%eax
ffffffff8001333c:	75 7d                	jne    ffffffff800133bb <_vsnprintf+0x1863>
ffffffff8001333e:	eb 2f                	jmp    ffffffff8001336f <_vsnprintf+0x1817>
ffffffff80013340:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80013344:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffff80013348:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
ffffffff8001334c:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
ffffffff80013353:	48 8b b5 30 ff ff ff 	mov    -0xd0(%rbp),%rsi
ffffffff8001335a:	4c 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%r8
ffffffff80013361:	48 89 d1             	mov    %rdx,%rcx
ffffffff80013364:	48 89 c2             	mov    %rax,%rdx
ffffffff80013367:	bf 20 00 00 00       	mov    $0x20,%edi
ffffffff8001336c:	41 ff d0             	call   *%r8
ffffffff8001336f:	8b 45 84             	mov    -0x7c(%rbp),%eax
ffffffff80013372:	8d 50 01             	lea    0x1(%rax),%edx
ffffffff80013375:	89 55 84             	mov    %edx,-0x7c(%rbp)
ffffffff80013378:	39 45 f8             	cmp    %eax,-0x8(%rbp)
ffffffff8001337b:	77 c3                	ja     ffffffff80013340 <_vsnprintf+0x17e8>
ffffffff8001337d:	eb 3c                	jmp    ffffffff800133bb <_vsnprintf+0x1863>
ffffffff8001337f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80013383:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffff80013387:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
ffffffff8001338b:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
ffffffff8001338f:	48 8d 4a 01          	lea    0x1(%rdx),%rcx
ffffffff80013393:	48 89 4d 88          	mov    %rcx,-0x78(%rbp)
ffffffff80013397:	0f b6 12             	movzbl (%rdx),%edx
ffffffff8001339a:	0f be fa             	movsbl %dl,%edi
ffffffff8001339d:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
ffffffff800133a4:	48 8b b5 30 ff ff ff 	mov    -0xd0(%rbp),%rsi
ffffffff800133ab:	4c 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%r8
ffffffff800133b2:	48 89 d1             	mov    %rdx,%rcx
ffffffff800133b5:	48 89 c2             	mov    %rax,%rdx
ffffffff800133b8:	41 ff d0             	call   *%r8
ffffffff800133bb:	48 8b 45 88          	mov    -0x78(%rbp),%rax
ffffffff800133bf:	0f b6 00             	movzbl (%rax),%eax
ffffffff800133c2:	84 c0                	test   %al,%al
ffffffff800133c4:	74 19                	je     ffffffff800133df <_vsnprintf+0x1887>
ffffffff800133c6:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff800133c9:	25 00 04 00 00       	and    $0x400,%eax
ffffffff800133ce:	85 c0                	test   %eax,%eax
ffffffff800133d0:	74 ad                	je     ffffffff8001337f <_vsnprintf+0x1827>
ffffffff800133d2:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff800133d5:	8d 50 ff             	lea    -0x1(%rax),%edx
ffffffff800133d8:	89 55 f4             	mov    %edx,-0xc(%rbp)
ffffffff800133db:	85 c0                	test   %eax,%eax
ffffffff800133dd:	75 a0                	jne    ffffffff8001337f <_vsnprintf+0x1827>
ffffffff800133df:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff800133e2:	83 e0 02             	and    $0x2,%eax
ffffffff800133e5:	85 c0                	test   %eax,%eax
ffffffff800133e7:	74 3f                	je     ffffffff80013428 <_vsnprintf+0x18d0>
ffffffff800133e9:	eb 2f                	jmp    ffffffff8001341a <_vsnprintf+0x18c2>
ffffffff800133eb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800133ef:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffff800133f3:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
ffffffff800133f7:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
ffffffff800133fe:	48 8b b5 30 ff ff ff 	mov    -0xd0(%rbp),%rsi
ffffffff80013405:	4c 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%r8
ffffffff8001340c:	48 89 d1             	mov    %rdx,%rcx
ffffffff8001340f:	48 89 c2             	mov    %rax,%rdx
ffffffff80013412:	bf 20 00 00 00       	mov    $0x20,%edi
ffffffff80013417:	41 ff d0             	call   *%r8
ffffffff8001341a:	8b 45 84             	mov    -0x7c(%rbp),%eax
ffffffff8001341d:	8d 50 01             	lea    0x1(%rax),%edx
ffffffff80013420:	89 55 84             	mov    %edx,-0x7c(%rbp)
ffffffff80013423:	39 45 f8             	cmp    %eax,-0x8(%rbp)
ffffffff80013426:	77 c3                	ja     ffffffff800133eb <_vsnprintf+0x1893>
ffffffff80013428:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
ffffffff8001342f:	48 83 c0 01          	add    $0x1,%rax
ffffffff80013433:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
ffffffff8001343a:	e9 8d 00 00 00       	jmp    ffffffff800134cc <_vsnprintf+0x1974>
ffffffff8001343f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80013443:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffff80013447:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
ffffffff8001344b:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
ffffffff80013452:	48 8b b5 30 ff ff ff 	mov    -0xd0(%rbp),%rsi
ffffffff80013459:	4c 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%r8
ffffffff80013460:	48 89 d1             	mov    %rdx,%rcx
ffffffff80013463:	48 89 c2             	mov    %rax,%rdx
ffffffff80013466:	bf 25 00 00 00       	mov    $0x25,%edi
ffffffff8001346b:	41 ff d0             	call   *%r8
ffffffff8001346e:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
ffffffff80013475:	48 83 c0 01          	add    $0x1,%rax
ffffffff80013479:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
ffffffff80013480:	eb 4a                	jmp    ffffffff800134cc <_vsnprintf+0x1974>
ffffffff80013482:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80013486:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffff8001348a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
ffffffff8001348e:	48 8b 95 20 ff ff ff 	mov    -0xe0(%rbp),%rdx
ffffffff80013495:	0f b6 12             	movzbl (%rdx),%edx
ffffffff80013498:	0f be fa             	movsbl %dl,%edi
ffffffff8001349b:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
ffffffff800134a2:	48 8b b5 30 ff ff ff 	mov    -0xd0(%rbp),%rsi
ffffffff800134a9:	4c 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%r8
ffffffff800134b0:	48 89 d1             	mov    %rdx,%rcx
ffffffff800134b3:	48 89 c2             	mov    %rax,%rdx
ffffffff800134b6:	41 ff d0             	call   *%r8
ffffffff800134b9:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
ffffffff800134c0:	48 83 c0 01          	add    $0x1,%rax
ffffffff800134c4:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
ffffffff800134cb:	90                   	nop
ffffffff800134cc:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
ffffffff800134d3:	0f b6 00             	movzbl (%rax),%eax
ffffffff800134d6:	84 c0                	test   %al,%al
ffffffff800134d8:	0f 85 d5 e6 ff ff    	jne    ffffffff80011bb3 <_vsnprintf+0x5b>
ffffffff800134de:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800134e2:	48 3b 85 28 ff ff ff 	cmp    -0xd8(%rbp),%rax
ffffffff800134e9:	72 0d                	jb     ffffffff800134f8 <_vsnprintf+0x19a0>
ffffffff800134eb:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
ffffffff800134f2:	48 83 e8 01          	sub    $0x1,%rax
ffffffff800134f6:	eb 04                	jmp    ffffffff800134fc <_vsnprintf+0x19a4>
ffffffff800134f8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800134fc:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
ffffffff80013503:	48 8b b5 30 ff ff ff 	mov    -0xd0(%rbp),%rsi
ffffffff8001350a:	4c 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%r8
ffffffff80013511:	48 89 d1             	mov    %rdx,%rcx
ffffffff80013514:	48 89 c2             	mov    %rax,%rdx
ffffffff80013517:	bf 00 00 00 00       	mov    $0x0,%edi
ffffffff8001351c:	41 ff d0             	call   *%r8
ffffffff8001351f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80013523:	90                   	nop
ffffffff80013524:	90                   	nop
ffffffff80013525:	c9                   	leave  
ffffffff80013526:	c3                   	ret    

ffffffff80013527 <reset_trace_lock>:
ffffffff80013527:	f3 0f 1e fa          	endbr64 
ffffffff8001352b:	55                   	push   %rbp
ffffffff8001352c:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001352f:	c6 05 cc db 29 00 00 	movb   $0x0,0x29dbcc(%rip)        # ffffffff802b1102 <m_printf_lock>
ffffffff80013536:	c6 05 c6 db 29 00 00 	movb   $0x0,0x29dbc6(%rip)        # ffffffff802b1103 <m_printf_lock+0x1>
ffffffff8001353d:	90                   	nop
ffffffff8001353e:	5d                   	pop    %rbp
ffffffff8001353f:	c3                   	ret    

ffffffff80013540 <printf_>:
ffffffff80013540:	f3 0f 1e fa          	endbr64 
ffffffff80013544:	55                   	push   %rbp
ffffffff80013545:	48 89 e5             	mov    %rsp,%rbp
ffffffff80013548:	48 81 ec f0 00 00 00 	sub    $0xf0,%rsp
ffffffff8001354f:	48 89 bd 18 ff ff ff 	mov    %rdi,-0xe8(%rbp)
ffffffff80013556:	48 89 b5 58 ff ff ff 	mov    %rsi,-0xa8(%rbp)
ffffffff8001355d:	48 89 95 60 ff ff ff 	mov    %rdx,-0xa0(%rbp)
ffffffff80013564:	48 89 8d 68 ff ff ff 	mov    %rcx,-0x98(%rbp)
ffffffff8001356b:	4c 89 85 70 ff ff ff 	mov    %r8,-0x90(%rbp)
ffffffff80013572:	4c 89 8d 78 ff ff ff 	mov    %r9,-0x88(%rbp)
ffffffff80013579:	84 c0                	test   %al,%al
ffffffff8001357b:	74 20                	je     ffffffff8001359d <printf_+0x5d>
ffffffff8001357d:	0f 29 45 80          	movaps %xmm0,-0x80(%rbp)
ffffffff80013581:	0f 29 4d 90          	movaps %xmm1,-0x70(%rbp)
ffffffff80013585:	0f 29 55 a0          	movaps %xmm2,-0x60(%rbp)
ffffffff80013589:	0f 29 5d b0          	movaps %xmm3,-0x50(%rbp)
ffffffff8001358d:	0f 29 65 c0          	movaps %xmm4,-0x40(%rbp)
ffffffff80013591:	0f 29 6d d0          	movaps %xmm5,-0x30(%rbp)
ffffffff80013595:	0f 29 75 e0          	movaps %xmm6,-0x20(%rbp)
ffffffff80013599:	0f 29 7d f0          	movaps %xmm7,-0x10(%rbp)
ffffffff8001359d:	c7 85 30 ff ff ff 08 	movl   $0x8,-0xd0(%rbp)
ffffffff800135a4:	00 00 00 
ffffffff800135a7:	c7 85 34 ff ff ff 30 	movl   $0x30,-0xcc(%rbp)
ffffffff800135ae:	00 00 00 
ffffffff800135b1:	48 8d 45 10          	lea    0x10(%rbp),%rax
ffffffff800135b5:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
ffffffff800135bc:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
ffffffff800135c3:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
ffffffff800135ca:	48 8d 05 31 db 29 00 	lea    0x29db31(%rip),%rax        # ffffffff802b1102 <m_printf_lock>
ffffffff800135d1:	48 89 c7             	mov    %rax,%rdi
ffffffff800135d4:	e8 35 e8 fe ff       	call   ffffffff80001e0e <spinlock_lock>
ffffffff800135d9:	48 8d 8d 30 ff ff ff 	lea    -0xd0(%rbp),%rcx
ffffffff800135e0:	48 8b 95 18 ff ff ff 	mov    -0xe8(%rbp),%rdx
ffffffff800135e7:	48 8d 85 2f ff ff ff 	lea    -0xd1(%rbp),%rax
ffffffff800135ee:	49 89 c8             	mov    %rcx,%r8
ffffffff800135f1:	48 89 d1             	mov    %rdx,%rcx
ffffffff800135f4:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
ffffffff800135fb:	48 89 c6             	mov    %rax,%rsi
ffffffff800135fe:	48 8d 05 6e de ff ff 	lea    -0x2192(%rip),%rax        # ffffffff80011473 <_out_char>
ffffffff80013605:	48 89 c7             	mov    %rax,%rdi
ffffffff80013608:	e8 4b e5 ff ff       	call   ffffffff80011b58 <_vsnprintf>
ffffffff8001360d:	89 85 4c ff ff ff    	mov    %eax,-0xb4(%rbp)
ffffffff80013613:	48 8d 05 e8 da 29 00 	lea    0x29dae8(%rip),%rax        # ffffffff802b1102 <m_printf_lock>
ffffffff8001361a:	48 89 c7             	mov    %rax,%rdi
ffffffff8001361d:	e8 bb e8 fe ff       	call   ffffffff80001edd <spinlock_unlock>
ffffffff80013622:	8b 85 4c ff ff ff    	mov    -0xb4(%rbp),%eax
ffffffff80013628:	90                   	nop
ffffffff80013629:	c9                   	leave  
ffffffff8001362a:	c3                   	ret    

ffffffff8001362b <sprintf_>:
ffffffff8001362b:	f3 0f 1e fa          	endbr64 
ffffffff8001362f:	55                   	push   %rbp
ffffffff80013630:	48 89 e5             	mov    %rsp,%rbp
ffffffff80013633:	48 81 ec e0 00 00 00 	sub    $0xe0,%rsp
ffffffff8001363a:	48 89 bd 28 ff ff ff 	mov    %rdi,-0xd8(%rbp)
ffffffff80013641:	48 89 b5 20 ff ff ff 	mov    %rsi,-0xe0(%rbp)
ffffffff80013648:	48 89 95 60 ff ff ff 	mov    %rdx,-0xa0(%rbp)
ffffffff8001364f:	48 89 8d 68 ff ff ff 	mov    %rcx,-0x98(%rbp)
ffffffff80013656:	4c 89 85 70 ff ff ff 	mov    %r8,-0x90(%rbp)
ffffffff8001365d:	4c 89 8d 78 ff ff ff 	mov    %r9,-0x88(%rbp)
ffffffff80013664:	84 c0                	test   %al,%al
ffffffff80013666:	74 20                	je     ffffffff80013688 <sprintf_+0x5d>
ffffffff80013668:	0f 29 45 80          	movaps %xmm0,-0x80(%rbp)
ffffffff8001366c:	0f 29 4d 90          	movaps %xmm1,-0x70(%rbp)
ffffffff80013670:	0f 29 55 a0          	movaps %xmm2,-0x60(%rbp)
ffffffff80013674:	0f 29 5d b0          	movaps %xmm3,-0x50(%rbp)
ffffffff80013678:	0f 29 65 c0          	movaps %xmm4,-0x40(%rbp)
ffffffff8001367c:	0f 29 6d d0          	movaps %xmm5,-0x30(%rbp)
ffffffff80013680:	0f 29 75 e0          	movaps %xmm6,-0x20(%rbp)
ffffffff80013684:	0f 29 7d f0          	movaps %xmm7,-0x10(%rbp)
ffffffff80013688:	c7 85 30 ff ff ff 10 	movl   $0x10,-0xd0(%rbp)
ffffffff8001368f:	00 00 00 
ffffffff80013692:	c7 85 34 ff ff ff 30 	movl   $0x30,-0xcc(%rbp)
ffffffff80013699:	00 00 00 
ffffffff8001369c:	48 8d 45 10          	lea    0x10(%rbp),%rax
ffffffff800136a0:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
ffffffff800136a7:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
ffffffff800136ae:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
ffffffff800136b5:	48 8d 8d 30 ff ff ff 	lea    -0xd0(%rbp),%rcx
ffffffff800136bc:	48 8b 95 20 ff ff ff 	mov    -0xe0(%rbp),%rdx
ffffffff800136c3:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
ffffffff800136ca:	49 89 c8             	mov    %rcx,%r8
ffffffff800136cd:	48 89 d1             	mov    %rdx,%rcx
ffffffff800136d0:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
ffffffff800136d7:	48 89 c6             	mov    %rax,%rsi
ffffffff800136da:	48 8d 05 37 dd ff ff 	lea    -0x22c9(%rip),%rax        # ffffffff80011418 <_out_buffer>
ffffffff800136e1:	48 89 c7             	mov    %rax,%rdi
ffffffff800136e4:	e8 6f e4 ff ff       	call   ffffffff80011b58 <_vsnprintf>
ffffffff800136e9:	89 85 4c ff ff ff    	mov    %eax,-0xb4(%rbp)
ffffffff800136ef:	8b 85 4c ff ff ff    	mov    -0xb4(%rbp),%eax
ffffffff800136f5:	90                   	nop
ffffffff800136f6:	c9                   	leave  
ffffffff800136f7:	c3                   	ret    

ffffffff800136f8 <snprintf_>:
ffffffff800136f8:	f3 0f 1e fa          	endbr64 
ffffffff800136fc:	55                   	push   %rbp
ffffffff800136fd:	48 89 e5             	mov    %rsp,%rbp
ffffffff80013700:	48 81 ec f0 00 00 00 	sub    $0xf0,%rsp
ffffffff80013707:	48 89 bd 28 ff ff ff 	mov    %rdi,-0xd8(%rbp)
ffffffff8001370e:	48 89 b5 20 ff ff ff 	mov    %rsi,-0xe0(%rbp)
ffffffff80013715:	48 89 95 18 ff ff ff 	mov    %rdx,-0xe8(%rbp)
ffffffff8001371c:	48 89 8d 68 ff ff ff 	mov    %rcx,-0x98(%rbp)
ffffffff80013723:	4c 89 85 70 ff ff ff 	mov    %r8,-0x90(%rbp)
ffffffff8001372a:	4c 89 8d 78 ff ff ff 	mov    %r9,-0x88(%rbp)
ffffffff80013731:	84 c0                	test   %al,%al
ffffffff80013733:	74 20                	je     ffffffff80013755 <snprintf_+0x5d>
ffffffff80013735:	0f 29 45 80          	movaps %xmm0,-0x80(%rbp)
ffffffff80013739:	0f 29 4d 90          	movaps %xmm1,-0x70(%rbp)
ffffffff8001373d:	0f 29 55 a0          	movaps %xmm2,-0x60(%rbp)
ffffffff80013741:	0f 29 5d b0          	movaps %xmm3,-0x50(%rbp)
ffffffff80013745:	0f 29 65 c0          	movaps %xmm4,-0x40(%rbp)
ffffffff80013749:	0f 29 6d d0          	movaps %xmm5,-0x30(%rbp)
ffffffff8001374d:	0f 29 75 e0          	movaps %xmm6,-0x20(%rbp)
ffffffff80013751:	0f 29 7d f0          	movaps %xmm7,-0x10(%rbp)
ffffffff80013755:	c7 85 30 ff ff ff 18 	movl   $0x18,-0xd0(%rbp)
ffffffff8001375c:	00 00 00 
ffffffff8001375f:	c7 85 34 ff ff ff 30 	movl   $0x30,-0xcc(%rbp)
ffffffff80013766:	00 00 00 
ffffffff80013769:	48 8d 45 10          	lea    0x10(%rbp),%rax
ffffffff8001376d:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
ffffffff80013774:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
ffffffff8001377b:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
ffffffff80013782:	48 8d b5 30 ff ff ff 	lea    -0xd0(%rbp),%rsi
ffffffff80013789:	48 8b 8d 18 ff ff ff 	mov    -0xe8(%rbp),%rcx
ffffffff80013790:	48 8b 95 20 ff ff ff 	mov    -0xe0(%rbp),%rdx
ffffffff80013797:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
ffffffff8001379e:	49 89 f0             	mov    %rsi,%r8
ffffffff800137a1:	48 89 c6             	mov    %rax,%rsi
ffffffff800137a4:	48 8d 05 6d dc ff ff 	lea    -0x2393(%rip),%rax        # ffffffff80011418 <_out_buffer>
ffffffff800137ab:	48 89 c7             	mov    %rax,%rdi
ffffffff800137ae:	e8 a5 e3 ff ff       	call   ffffffff80011b58 <_vsnprintf>
ffffffff800137b3:	89 85 4c ff ff ff    	mov    %eax,-0xb4(%rbp)
ffffffff800137b9:	8b 85 4c ff ff ff    	mov    -0xb4(%rbp),%eax
ffffffff800137bf:	90                   	nop
ffffffff800137c0:	c9                   	leave  
ffffffff800137c1:	c3                   	ret    

ffffffff800137c2 <vprintf_>:
ffffffff800137c2:	f3 0f 1e fa          	endbr64 
ffffffff800137c6:	55                   	push   %rbp
ffffffff800137c7:	48 89 e5             	mov    %rsp,%rbp
ffffffff800137ca:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff800137ce:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff800137d2:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
ffffffff800137d6:	48 8d 05 25 d9 29 00 	lea    0x29d925(%rip),%rax        # ffffffff802b1102 <m_printf_lock>
ffffffff800137dd:	48 89 c7             	mov    %rax,%rdi
ffffffff800137e0:	e8 29 e6 fe ff       	call   ffffffff80001e0e <spinlock_lock>
ffffffff800137e5:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
ffffffff800137e9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff800137ed:	48 8d 45 fb          	lea    -0x5(%rbp),%rax
ffffffff800137f1:	49 89 c8             	mov    %rcx,%r8
ffffffff800137f4:	48 89 d1             	mov    %rdx,%rcx
ffffffff800137f7:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
ffffffff800137fe:	48 89 c6             	mov    %rax,%rsi
ffffffff80013801:	48 8d 05 6b dc ff ff 	lea    -0x2395(%rip),%rax        # ffffffff80011473 <_out_char>
ffffffff80013808:	48 89 c7             	mov    %rax,%rdi
ffffffff8001380b:	e8 48 e3 ff ff       	call   ffffffff80011b58 <_vsnprintf>
ffffffff80013810:	89 45 fc             	mov    %eax,-0x4(%rbp)
ffffffff80013813:	48 8d 05 e8 d8 29 00 	lea    0x29d8e8(%rip),%rax        # ffffffff802b1102 <m_printf_lock>
ffffffff8001381a:	48 89 c7             	mov    %rax,%rdi
ffffffff8001381d:	e8 bb e6 fe ff       	call   ffffffff80001edd <spinlock_unlock>
ffffffff80013822:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff80013825:	90                   	nop
ffffffff80013826:	c9                   	leave  
ffffffff80013827:	c3                   	ret    

ffffffff80013828 <vsnprintf_>:
ffffffff80013828:	f3 0f 1e fa          	endbr64 
ffffffff8001382c:	55                   	push   %rbp
ffffffff8001382d:	48 89 e5             	mov    %rsp,%rbp
ffffffff80013830:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff80013834:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff80013838:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff8001383c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
ffffffff80013840:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
ffffffff80013844:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
ffffffff80013848:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
ffffffff8001384c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff80013850:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80013854:	49 89 f0             	mov    %rsi,%r8
ffffffff80013857:	48 89 c6             	mov    %rax,%rsi
ffffffff8001385a:	48 8d 05 b7 db ff ff 	lea    -0x2449(%rip),%rax        # ffffffff80011418 <_out_buffer>
ffffffff80013861:	48 89 c7             	mov    %rax,%rdi
ffffffff80013864:	e8 ef e2 ff ff       	call   ffffffff80011b58 <_vsnprintf>
ffffffff80013869:	90                   	nop
ffffffff8001386a:	c9                   	leave  
ffffffff8001386b:	c3                   	ret    

ffffffff8001386c <fctprintf>:
ffffffff8001386c:	f3 0f 1e fa          	endbr64 
ffffffff80013870:	55                   	push   %rbp
ffffffff80013871:	48 89 e5             	mov    %rsp,%rbp
ffffffff80013874:	48 81 ec f0 00 00 00 	sub    $0xf0,%rsp
ffffffff8001387b:	48 89 bd 28 ff ff ff 	mov    %rdi,-0xd8(%rbp)
ffffffff80013882:	48 89 b5 20 ff ff ff 	mov    %rsi,-0xe0(%rbp)
ffffffff80013889:	48 89 95 18 ff ff ff 	mov    %rdx,-0xe8(%rbp)
ffffffff80013890:	48 89 8d 68 ff ff ff 	mov    %rcx,-0x98(%rbp)
ffffffff80013897:	4c 89 85 70 ff ff ff 	mov    %r8,-0x90(%rbp)
ffffffff8001389e:	4c 89 8d 78 ff ff ff 	mov    %r9,-0x88(%rbp)
ffffffff800138a5:	84 c0                	test   %al,%al
ffffffff800138a7:	74 20                	je     ffffffff800138c9 <fctprintf+0x5d>
ffffffff800138a9:	0f 29 45 80          	movaps %xmm0,-0x80(%rbp)
ffffffff800138ad:	0f 29 4d 90          	movaps %xmm1,-0x70(%rbp)
ffffffff800138b1:	0f 29 55 a0          	movaps %xmm2,-0x60(%rbp)
ffffffff800138b5:	0f 29 5d b0          	movaps %xmm3,-0x50(%rbp)
ffffffff800138b9:	0f 29 65 c0          	movaps %xmm4,-0x40(%rbp)
ffffffff800138bd:	0f 29 6d d0          	movaps %xmm5,-0x30(%rbp)
ffffffff800138c1:	0f 29 75 e0          	movaps %xmm6,-0x20(%rbp)
ffffffff800138c5:	0f 29 7d f0          	movaps %xmm7,-0x10(%rbp)
ffffffff800138c9:	c7 85 30 ff ff ff 18 	movl   $0x18,-0xd0(%rbp)
ffffffff800138d0:	00 00 00 
ffffffff800138d3:	c7 85 34 ff ff ff 30 	movl   $0x30,-0xcc(%rbp)
ffffffff800138da:	00 00 00 
ffffffff800138dd:	48 8d 45 10          	lea    0x10(%rbp),%rax
ffffffff800138e1:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
ffffffff800138e8:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
ffffffff800138ef:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
ffffffff800138f6:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
ffffffff800138fd:	48 8b 95 18 ff ff ff 	mov    -0xe8(%rbp),%rdx
ffffffff80013904:	48 8b b5 20 ff ff ff 	mov    -0xe0(%rbp),%rsi
ffffffff8001390b:	48 8b bd 28 ff ff ff 	mov    -0xd8(%rbp),%rdi
ffffffff80013912:	48 89 c1             	mov    %rax,%rcx
ffffffff80013915:	e8 0f 00 00 00       	call   ffffffff80013929 <vfctprintf>
ffffffff8001391a:	89 85 4c ff ff ff    	mov    %eax,-0xb4(%rbp)
ffffffff80013920:	8b 85 4c ff ff ff    	mov    -0xb4(%rbp),%eax
ffffffff80013926:	90                   	nop
ffffffff80013927:	c9                   	leave  
ffffffff80013928:	c3                   	ret    

ffffffff80013929 <vfctprintf>:
ffffffff80013929:	f3 0f 1e fa          	endbr64 
ffffffff8001392d:	55                   	push   %rbp
ffffffff8001392e:	48 89 e5             	mov    %rsp,%rbp
ffffffff80013931:	48 83 ec 30          	sub    $0x30,%rsp
ffffffff80013935:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff80013939:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
ffffffff8001393d:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
ffffffff80013941:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
ffffffff80013945:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80013949:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff8001394d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80013951:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff80013955:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
ffffffff80013959:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff8001395d:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
ffffffff80013961:	49 89 c8             	mov    %rcx,%r8
ffffffff80013964:	48 89 d1             	mov    %rdx,%rcx
ffffffff80013967:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
ffffffff8001396e:	48 89 c6             	mov    %rax,%rsi
ffffffff80013971:	48 8d 05 2c db ff ff 	lea    -0x24d4(%rip),%rax        # ffffffff800114a4 <_out_fct>
ffffffff80013978:	48 89 c7             	mov    %rax,%rdi
ffffffff8001397b:	e8 d8 e1 ff ff       	call   ffffffff80011b58 <_vsnprintf>
ffffffff80013980:	90                   	nop
ffffffff80013981:	c9                   	leave  
ffffffff80013982:	c3                   	ret    

ffffffff80013983 <thread_queue_push_back_all>:
ffffffff80013983:	f3 0f 1e fa          	endbr64 
ffffffff80013987:	55                   	push   %rbp
ffffffff80013988:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001398b:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff8001398f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff80013993:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff80013997:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8001399b:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff8001399f:	48 85 c0             	test   %rax,%rax
ffffffff800139a2:	74 58                	je     ffffffff800139fc <thread_queue_push_back_all+0x79>
ffffffff800139a4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff800139a8:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff800139ac:	48 c7 80 e0 00 00 00 	movq   $0x0,0xe0(%rax)
ffffffff800139b3:	00 00 00 00 
ffffffff800139b7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff800139bb:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff800139bf:	48 85 c0             	test   %rax,%rax
ffffffff800139c2:	74 18                	je     ffffffff800139dc <thread_queue_push_back_all+0x59>
ffffffff800139c4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff800139c8:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff800139cc:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff800139d0:	48 8b 12             	mov    (%rdx),%rdx
ffffffff800139d3:	48 89 90 e0 00 00 00 	mov    %rdx,0xe0(%rax)
ffffffff800139da:	eb 0e                	jmp    ffffffff800139ea <thread_queue_push_back_all+0x67>
ffffffff800139dc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff800139e0:	48 8b 10             	mov    (%rax),%rdx
ffffffff800139e3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff800139e7:	48 89 10             	mov    %rdx,(%rax)
ffffffff800139ea:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff800139ee:	48 8b 50 08          	mov    0x8(%rax),%rdx
ffffffff800139f2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff800139f6:	48 89 50 08          	mov    %rdx,0x8(%rax)
ffffffff800139fa:	eb 01                	jmp    ffffffff800139fd <thread_queue_push_back_all+0x7a>
ffffffff800139fc:	90                   	nop
ffffffff800139fd:	c9                   	leave  
ffffffff800139fe:	c3                   	ret    

ffffffff800139ff <thread_queue_push_back>:
ffffffff800139ff:	f3 0f 1e fa          	endbr64 
ffffffff80013a03:	55                   	push   %rbp
ffffffff80013a04:	48 89 e5             	mov    %rsp,%rbp
ffffffff80013a07:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff80013a0b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff80013a0f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff80013a13:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80013a17:	48 c7 80 e0 00 00 00 	movq   $0x0,0xe0(%rax)
ffffffff80013a1e:	00 00 00 00 
ffffffff80013a22:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80013a26:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff80013a2a:	48 85 c0             	test   %rax,%rax
ffffffff80013a2d:	74 15                	je     ffffffff80013a44 <thread_queue_push_back+0x45>
ffffffff80013a2f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80013a33:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff80013a37:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff80013a3b:	48 89 90 e0 00 00 00 	mov    %rdx,0xe0(%rax)
ffffffff80013a42:	eb 0b                	jmp    ffffffff80013a4f <thread_queue_push_back+0x50>
ffffffff80013a44:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80013a48:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff80013a4c:	48 89 10             	mov    %rdx,(%rax)
ffffffff80013a4f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80013a53:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff80013a57:	48 89 50 08          	mov    %rdx,0x8(%rax)
ffffffff80013a5b:	90                   	nop
ffffffff80013a5c:	c9                   	leave  
ffffffff80013a5d:	c3                   	ret    

ffffffff80013a5e <thread_queue_pop>:
ffffffff80013a5e:	f3 0f 1e fa          	endbr64 
ffffffff80013a62:	55                   	push   %rbp
ffffffff80013a63:	48 89 e5             	mov    %rsp,%rbp
ffffffff80013a66:	48 83 ec 18          	sub    $0x18,%rsp
ffffffff80013a6a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff80013a6e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80013a72:	48 8b 00             	mov    (%rax),%rax
ffffffff80013a75:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff80013a79:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff80013a7e:	74 2a                	je     ffffffff80013aaa <thread_queue_pop+0x4c>
ffffffff80013a80:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80013a84:	48 8b 90 e0 00 00 00 	mov    0xe0(%rax),%rdx
ffffffff80013a8b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80013a8f:	48 89 10             	mov    %rdx,(%rax)
ffffffff80013a92:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80013a96:	48 8b 00             	mov    (%rax),%rax
ffffffff80013a99:	48 85 c0             	test   %rax,%rax
ffffffff80013a9c:	75 0c                	jne    ffffffff80013aaa <thread_queue_pop+0x4c>
ffffffff80013a9e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80013aa2:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
ffffffff80013aa9:	00 
ffffffff80013aaa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80013aae:	c9                   	leave  
ffffffff80013aaf:	c3                   	ret    

ffffffff80013ab0 <global_run_queue_put_batch>:
ffffffff80013ab0:	f3 0f 1e fa          	endbr64 
ffffffff80013ab4:	55                   	push   %rbp
ffffffff80013ab5:	48 89 e5             	mov    %rsp,%rbp
ffffffff80013ab8:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff80013abc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff80013ac0:	89 75 f4             	mov    %esi,-0xc(%rbp)
ffffffff80013ac3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80013ac7:	48 89 c6             	mov    %rax,%rsi
ffffffff80013aca:	48 8d 05 3f d6 29 00 	lea    0x29d63f(%rip),%rax        # ffffffff802b1110 <m_global_run_queue>
ffffffff80013ad1:	48 89 c7             	mov    %rax,%rdi
ffffffff80013ad4:	e8 aa fe ff ff       	call   ffffffff80013983 <thread_queue_push_back_all>
ffffffff80013ad9:	8b 15 41 d6 29 00    	mov    0x29d641(%rip),%edx        # ffffffff802b1120 <m_global_run_queue_size>
ffffffff80013adf:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff80013ae2:	01 d0                	add    %edx,%eax
ffffffff80013ae4:	89 05 36 d6 29 00    	mov    %eax,0x29d636(%rip)        # ffffffff802b1120 <m_global_run_queue_size>
ffffffff80013aea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80013aee:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
ffffffff80013af5:	00 
ffffffff80013af6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80013afa:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
ffffffff80013b01:	90                   	nop
ffffffff80013b02:	c9                   	leave  
ffffffff80013b03:	c3                   	ret    

ffffffff80013b04 <global_run_queue_put>:
ffffffff80013b04:	f3 0f 1e fa          	endbr64 
ffffffff80013b08:	55                   	push   %rbp
ffffffff80013b09:	48 89 e5             	mov    %rsp,%rbp
ffffffff80013b0c:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80013b10:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff80013b14:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80013b18:	48 89 c6             	mov    %rax,%rsi
ffffffff80013b1b:	48 8d 05 ee d5 29 00 	lea    0x29d5ee(%rip),%rax        # ffffffff802b1110 <m_global_run_queue>
ffffffff80013b22:	48 89 c7             	mov    %rax,%rdi
ffffffff80013b25:	e8 d5 fe ff ff       	call   ffffffff800139ff <thread_queue_push_back>
ffffffff80013b2a:	8b 05 f0 d5 29 00    	mov    0x29d5f0(%rip),%eax        # ffffffff802b1120 <m_global_run_queue_size>
ffffffff80013b30:	83 c0 01             	add    $0x1,%eax
ffffffff80013b33:	89 05 e7 d5 29 00    	mov    %eax,0x29d5e7(%rip)        # ffffffff802b1120 <m_global_run_queue_size>
ffffffff80013b39:	90                   	nop
ffffffff80013b3a:	c9                   	leave  
ffffffff80013b3b:	c3                   	ret    

ffffffff80013b3c <global_run_queue_get>:
ffffffff80013b3c:	f3 0f 1e fa          	endbr64 
ffffffff80013b40:	55                   	push   %rbp
ffffffff80013b41:	48 89 e5             	mov    %rsp,%rbp
ffffffff80013b44:	53                   	push   %rbx
ffffffff80013b45:	48 83 ec 38          	sub    $0x38,%rsp
ffffffff80013b49:	89 7d cc             	mov    %edi,-0x34(%rbp)
ffffffff80013b4c:	8b 05 ce d5 29 00    	mov    0x29d5ce(%rip),%eax        # ffffffff802b1120 <m_global_run_queue_size>
ffffffff80013b52:	85 c0                	test   %eax,%eax
ffffffff80013b54:	75 0a                	jne    ffffffff80013b60 <global_run_queue_get+0x24>
ffffffff80013b56:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80013b5b:	e9 ba 00 00 00       	jmp    ffffffff80013c1a <global_run_queue_get+0xde>
ffffffff80013b60:	8b 05 ba d5 29 00    	mov    0x29d5ba(%rip),%eax        # ffffffff802b1120 <m_global_run_queue_size>
ffffffff80013b66:	48 63 d8             	movslq %eax,%rbx
ffffffff80013b69:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80013b6e:	e8 b5 e5 fe ff       	call   ffffffff80002128 <get_cpu_count>
ffffffff80013b73:	48 89 c1             	mov    %rax,%rcx
ffffffff80013b76:	48 89 d8             	mov    %rbx,%rax
ffffffff80013b79:	ba 00 00 00 00       	mov    $0x0,%edx
ffffffff80013b7e:	48 f7 f1             	div    %rcx
ffffffff80013b81:	83 c0 01             	add    $0x1,%eax
ffffffff80013b84:	89 45 ec             	mov    %eax,-0x14(%rbp)
ffffffff80013b87:	8b 05 93 d5 29 00    	mov    0x29d593(%rip),%eax        # ffffffff802b1120 <m_global_run_queue_size>
ffffffff80013b8d:	39 45 ec             	cmp    %eax,-0x14(%rbp)
ffffffff80013b90:	7e 09                	jle    ffffffff80013b9b <global_run_queue_get+0x5f>
ffffffff80013b92:	8b 05 88 d5 29 00    	mov    0x29d588(%rip),%eax        # ffffffff802b1120 <m_global_run_queue_size>
ffffffff80013b98:	89 45 ec             	mov    %eax,-0x14(%rbp)
ffffffff80013b9b:	83 7d cc 00          	cmpl   $0x0,-0x34(%rbp)
ffffffff80013b9f:	7e 0e                	jle    ffffffff80013baf <global_run_queue_get+0x73>
ffffffff80013ba1:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff80013ba4:	3b 45 cc             	cmp    -0x34(%rbp),%eax
ffffffff80013ba7:	7e 06                	jle    ffffffff80013baf <global_run_queue_get+0x73>
ffffffff80013ba9:	8b 45 cc             	mov    -0x34(%rbp),%eax
ffffffff80013bac:	89 45 ec             	mov    %eax,-0x14(%rbp)
ffffffff80013baf:	81 7d ec 80 00 00 00 	cmpl   $0x80,-0x14(%rbp)
ffffffff80013bb6:	7e 07                	jle    ffffffff80013bbf <global_run_queue_get+0x83>
ffffffff80013bb8:	c7 45 ec 80 00 00 00 	movl   $0x80,-0x14(%rbp)
ffffffff80013bbf:	8b 05 5b d5 29 00    	mov    0x29d55b(%rip),%eax        # ffffffff802b1120 <m_global_run_queue_size>
ffffffff80013bc5:	2b 45 ec             	sub    -0x14(%rbp),%eax
ffffffff80013bc8:	89 05 52 d5 29 00    	mov    %eax,0x29d552(%rip)        # ffffffff802b1120 <m_global_run_queue_size>
ffffffff80013bce:	48 8d 05 3b d5 29 00 	lea    0x29d53b(%rip),%rax        # ffffffff802b1110 <m_global_run_queue>
ffffffff80013bd5:	48 89 c7             	mov    %rax,%rdi
ffffffff80013bd8:	e8 81 fe ff ff       	call   ffffffff80013a5e <thread_queue_pop>
ffffffff80013bdd:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff80013be1:	83 6d ec 01          	subl   $0x1,-0x14(%rbp)
ffffffff80013be5:	eb 28                	jmp    ffffffff80013c0f <global_run_queue_get+0xd3>
ffffffff80013be7:	48 8d 05 22 d5 29 00 	lea    0x29d522(%rip),%rax        # ffffffff802b1110 <m_global_run_queue>
ffffffff80013bee:	48 89 c7             	mov    %rax,%rdi
ffffffff80013bf1:	e8 68 fe ff ff       	call   ffffffff80013a5e <thread_queue_pop>
ffffffff80013bf6:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
ffffffff80013bfa:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80013bfe:	be 00 00 00 00       	mov    $0x0,%esi
ffffffff80013c03:	48 89 c7             	mov    %rax,%rdi
ffffffff80013c06:	e8 8e 02 00 00       	call   ffffffff80013e99 <run_queue_put>
ffffffff80013c0b:	83 6d ec 01          	subl   $0x1,-0x14(%rbp)
ffffffff80013c0f:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
ffffffff80013c13:	7f d2                	jg     ffffffff80013be7 <global_run_queue_get+0xab>
ffffffff80013c15:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80013c19:	90                   	nop
ffffffff80013c1a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
ffffffff80013c1e:	c9                   	leave  
ffffffff80013c1f:	c3                   	ret    

ffffffff80013c20 <lock_scheduler>:
ffffffff80013c20:	f3 0f 1e fa          	endbr64 
ffffffff80013c24:	55                   	push   %rbp
ffffffff80013c25:	48 89 e5             	mov    %rsp,%rbp
ffffffff80013c28:	48 8d 05 05 d5 29 00 	lea    0x29d505(%rip),%rax        # ffffffff802b1134 <m_scheduler_lock>
ffffffff80013c2f:	48 89 c7             	mov    %rax,%rdi
ffffffff80013c32:	e8 d7 e1 fe ff       	call   ffffffff80001e0e <spinlock_lock>
ffffffff80013c37:	90                   	nop
ffffffff80013c38:	5d                   	pop    %rbp
ffffffff80013c39:	c3                   	ret    

ffffffff80013c3a <unlock_scheduler>:
ffffffff80013c3a:	f3 0f 1e fa          	endbr64 
ffffffff80013c3e:	55                   	push   %rbp
ffffffff80013c3f:	48 89 e5             	mov    %rsp,%rbp
ffffffff80013c42:	48 8d 05 eb d4 29 00 	lea    0x29d4eb(%rip),%rax        # ffffffff802b1134 <m_scheduler_lock>
ffffffff80013c49:	48 89 c7             	mov    %rax,%rdi
ffffffff80013c4c:	e8 8c e2 fe ff       	call   ffffffff80001edd <spinlock_unlock>
ffffffff80013c51:	90                   	nop
ffffffff80013c52:	5d                   	pop    %rbp
ffffffff80013c53:	c3                   	ret    

ffffffff80013c54 <wake_cpu>:
ffffffff80013c54:	f3 0f 1e fa          	endbr64 
ffffffff80013c58:	55                   	push   %rbp
ffffffff80013c59:	48 89 e5             	mov    %rsp,%rbp
ffffffff80013c5c:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff80013c60:	48 8d 05 c9 d4 29 00 	lea    0x29d4c9(%rip),%rax        # ffffffff802b1130 <m_idle_cpus_count>
ffffffff80013c67:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff80013c6b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80013c6f:	8b 00                	mov    (%rax),%eax
ffffffff80013c71:	89 45 f0             	mov    %eax,-0x10(%rbp)
ffffffff80013c74:	8b 45 f0             	mov    -0x10(%rbp),%eax
ffffffff80013c77:	85 c0                	test   %eax,%eax
ffffffff80013c79:	74 47                	je     ffffffff80013cc2 <wake_cpu+0x6e>
ffffffff80013c7b:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80013c80:	e8 9b ff ff ff       	call   ffffffff80013c20 <lock_scheduler>
ffffffff80013c85:	48 8b 05 9c d4 29 00 	mov    0x29d49c(%rip),%rax        # ffffffff802b1128 <m_idle_cpus>
ffffffff80013c8c:	ba ff ff ff ff       	mov    $0xffffffff,%edx
ffffffff80013c91:	0f bc c0             	bsf    %eax,%eax
ffffffff80013c94:	0f 44 c2             	cmove  %edx,%eax
ffffffff80013c97:	83 c0 01             	add    $0x1,%eax
ffffffff80013c9a:	88 45 f7             	mov    %al,-0x9(%rbp)
ffffffff80013c9d:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80013ca2:	e8 93 ff ff ff       	call   ffffffff80013c3a <unlock_scheduler>
ffffffff80013ca7:	80 7d f7 00          	cmpb   $0x0,-0x9(%rbp)
ffffffff80013cab:	74 18                	je     ffffffff80013cc5 <wake_cpu+0x71>
ffffffff80013cad:	0f b6 45 f7          	movzbl -0x9(%rbp),%eax
ffffffff80013cb1:	83 e8 01             	sub    $0x1,%eax
ffffffff80013cb4:	89 c6                	mov    %eax,%esi
ffffffff80013cb6:	bf f0 00 00 00       	mov    $0xf0,%edi
ffffffff80013cbb:	e8 af 2f ff ff       	call   ffffffff80006c6f <lapic_send_ipi>
ffffffff80013cc0:	eb 04                	jmp    ffffffff80013cc6 <wake_cpu+0x72>
ffffffff80013cc2:	90                   	nop
ffffffff80013cc3:	eb 01                	jmp    ffffffff80013cc6 <wake_cpu+0x72>
ffffffff80013cc5:	90                   	nop
ffffffff80013cc6:	c9                   	leave  
ffffffff80013cc7:	c3                   	ret    

ffffffff80013cc8 <get_run_queue>:
ffffffff80013cc8:	f3 0f 1e fa          	endbr64 
ffffffff80013ccc:	55                   	push   %rbp
ffffffff80013ccd:	48 89 e5             	mov    %rsp,%rbp
ffffffff80013cd0:	53                   	push   %rbx
ffffffff80013cd1:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80013cd5:	48 8b 1d 5c d4 29 00 	mov    0x29d45c(%rip),%rbx        # ffffffff802b1138 <m_run_queues>
ffffffff80013cdc:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80013ce1:	e8 49 19 00 00       	call   ffffffff8001562f <get_cpu_id>
ffffffff80013ce6:	48 98                	cltq   
ffffffff80013ce8:	48 69 c0 10 08 00 00 	imul   $0x810,%rax,%rax
ffffffff80013cef:	48 01 d8             	add    %rbx,%rax
ffffffff80013cf2:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
ffffffff80013cf6:	c9                   	leave  
ffffffff80013cf7:	c3                   	ret    

ffffffff80013cf8 <get_run_queue_of>:
ffffffff80013cf8:	f3 0f 1e fa          	endbr64 
ffffffff80013cfc:	55                   	push   %rbp
ffffffff80013cfd:	48 89 e5             	mov    %rsp,%rbp
ffffffff80013d00:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80013d04:	89 7d fc             	mov    %edi,-0x4(%rbp)
ffffffff80013d07:	48 8b 15 2a d4 29 00 	mov    0x29d42a(%rip),%rdx        # ffffffff802b1138 <m_run_queues>
ffffffff80013d0e:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff80013d11:	48 98                	cltq   
ffffffff80013d13:	48 69 c0 10 08 00 00 	imul   $0x810,%rax,%rax
ffffffff80013d1a:	48 01 d0             	add    %rdx,%rax
ffffffff80013d1d:	c9                   	leave  
ffffffff80013d1e:	c3                   	ret    

ffffffff80013d1f <run_queue_put_slow>:
ffffffff80013d1f:	f3 0f 1e fa          	endbr64 
ffffffff80013d23:	55                   	push   %rbp
ffffffff80013d24:	48 89 e5             	mov    %rsp,%rbp
ffffffff80013d27:	48 81 ec 60 04 00 00 	sub    $0x460,%rsp
ffffffff80013d2e:	48 89 bd a8 fb ff ff 	mov    %rdi,-0x458(%rbp)
ffffffff80013d35:	89 b5 a4 fb ff ff    	mov    %esi,-0x45c(%rbp)
ffffffff80013d3b:	89 95 a0 fb ff ff    	mov    %edx,-0x460(%rbp)
ffffffff80013d41:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80013d46:	e8 7d ff ff ff       	call   ffffffff80013cc8 <get_run_queue>
ffffffff80013d4b:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff80013d4f:	8b 95 a4 fb ff ff    	mov    -0x45c(%rbp),%edx
ffffffff80013d55:	8b 85 a0 fb ff ff    	mov    -0x460(%rbp),%eax
ffffffff80013d5b:	29 d0                	sub    %edx,%eax
ffffffff80013d5d:	89 45 ec             	mov    %eax,-0x14(%rbp)
ffffffff80013d60:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff80013d63:	89 c2                	mov    %eax,%edx
ffffffff80013d65:	c1 ea 1f             	shr    $0x1f,%edx
ffffffff80013d68:	01 d0                	add    %edx,%eax
ffffffff80013d6a:	d1 f8                	sar    %eax
ffffffff80013d6c:	89 45 ec             	mov    %eax,-0x14(%rbp)
ffffffff80013d6f:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
ffffffff80013d76:	eb 2a                	jmp    ffffffff80013da2 <run_queue_put_slow+0x83>
ffffffff80013d78:	8b 95 a4 fb ff ff    	mov    -0x45c(%rbp),%edx
ffffffff80013d7e:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff80013d81:	01 d0                	add    %edx,%eax
ffffffff80013d83:	0f b6 d0             	movzbl %al,%edx
ffffffff80013d86:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80013d8a:	89 d2                	mov    %edx,%edx
ffffffff80013d8c:	48 8b 54 d0 08       	mov    0x8(%rax,%rdx,8),%rdx
ffffffff80013d91:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff80013d94:	48 98                	cltq   
ffffffff80013d96:	48 89 94 c5 d0 fb ff 	mov    %rdx,-0x430(%rbp,%rax,8)
ffffffff80013d9d:	ff 
ffffffff80013d9e:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
ffffffff80013da2:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff80013da5:	3b 45 ec             	cmp    -0x14(%rbp),%eax
ffffffff80013da8:	7c ce                	jl     ffffffff80013d78 <run_queue_put_slow+0x59>
ffffffff80013daa:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80013dae:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff80013db2:	8b 95 a4 fb ff ff    	mov    -0x45c(%rbp),%edx
ffffffff80013db8:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff80013dbb:	01 d0                	add    %edx,%eax
ffffffff80013dbd:	89 85 bc fb ff ff    	mov    %eax,-0x444(%rbp)
ffffffff80013dc3:	8b 8d bc fb ff ff    	mov    -0x444(%rbp),%ecx
ffffffff80013dc9:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
ffffffff80013dcd:	48 8d 95 a4 fb ff ff 	lea    -0x45c(%rbp),%rdx
ffffffff80013dd4:	8b 02                	mov    (%rdx),%eax
ffffffff80013dd6:	f0 0f b1 0e          	lock cmpxchg %ecx,(%rsi)
ffffffff80013dda:	89 c1                	mov    %eax,%ecx
ffffffff80013ddc:	0f 94 c0             	sete   %al
ffffffff80013ddf:	84 c0                	test   %al,%al
ffffffff80013de1:	75 02                	jne    ffffffff80013de5 <run_queue_put_slow+0xc6>
ffffffff80013de3:	89 0a                	mov    %ecx,(%rdx)
ffffffff80013de5:	83 f0 01             	xor    $0x1,%eax
ffffffff80013de8:	84 c0                	test   %al,%al
ffffffff80013dea:	74 0a                	je     ffffffff80013df6 <run_queue_put_slow+0xd7>
ffffffff80013dec:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80013df1:	e9 a1 00 00 00       	jmp    ffffffff80013e97 <run_queue_put_slow+0x178>
ffffffff80013df6:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff80013df9:	48 98                	cltq   
ffffffff80013dfb:	48 8b 95 a8 fb ff ff 	mov    -0x458(%rbp),%rdx
ffffffff80013e02:	48 89 94 c5 d0 fb ff 	mov    %rdx,-0x430(%rbp,%rax,8)
ffffffff80013e09:	ff 
ffffffff80013e0a:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
ffffffff80013e11:	eb 29                	jmp    ffffffff80013e3c <run_queue_put_slow+0x11d>
ffffffff80013e13:	8b 45 f8             	mov    -0x8(%rbp),%eax
ffffffff80013e16:	8d 48 01             	lea    0x1(%rax),%ecx
ffffffff80013e19:	8b 45 f8             	mov    -0x8(%rbp),%eax
ffffffff80013e1c:	48 98                	cltq   
ffffffff80013e1e:	48 8b 94 c5 d0 fb ff 	mov    -0x430(%rbp,%rax,8),%rdx
ffffffff80013e25:	ff 
ffffffff80013e26:	48 63 c1             	movslq %ecx,%rax
ffffffff80013e29:	48 8b 84 c5 d0 fb ff 	mov    -0x430(%rbp,%rax,8),%rax
ffffffff80013e30:	ff 
ffffffff80013e31:	48 89 82 e0 00 00 00 	mov    %rax,0xe0(%rdx)
ffffffff80013e38:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)
ffffffff80013e3c:	8b 45 f8             	mov    -0x8(%rbp),%eax
ffffffff80013e3f:	3b 45 ec             	cmp    -0x14(%rbp),%eax
ffffffff80013e42:	7c cf                	jl     ffffffff80013e13 <run_queue_put_slow+0xf4>
ffffffff80013e44:	48 8b 85 d0 fb ff ff 	mov    -0x430(%rbp),%rax
ffffffff80013e4b:	48 89 85 c0 fb ff ff 	mov    %rax,-0x440(%rbp)
ffffffff80013e52:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff80013e55:	48 98                	cltq   
ffffffff80013e57:	48 8b 84 c5 d0 fb ff 	mov    -0x430(%rbp,%rax,8),%rax
ffffffff80013e5e:	ff 
ffffffff80013e5f:	48 89 85 c8 fb ff ff 	mov    %rax,-0x438(%rbp)
ffffffff80013e66:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80013e6b:	e8 b0 fd ff ff       	call   ffffffff80013c20 <lock_scheduler>
ffffffff80013e70:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff80013e73:	8d 50 01             	lea    0x1(%rax),%edx
ffffffff80013e76:	48 8d 85 c0 fb ff ff 	lea    -0x440(%rbp),%rax
ffffffff80013e7d:	89 d6                	mov    %edx,%esi
ffffffff80013e7f:	48 89 c7             	mov    %rax,%rdi
ffffffff80013e82:	e8 29 fc ff ff       	call   ffffffff80013ab0 <global_run_queue_put_batch>
ffffffff80013e87:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80013e8c:	e8 a9 fd ff ff       	call   ffffffff80013c3a <unlock_scheduler>
ffffffff80013e91:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff80013e96:	90                   	nop
ffffffff80013e97:	c9                   	leave  
ffffffff80013e98:	c3                   	ret    

ffffffff80013e99 <run_queue_put>:
ffffffff80013e99:	f3 0f 1e fa          	endbr64 
ffffffff80013e9d:	55                   	push   %rbp
ffffffff80013e9e:	48 89 e5             	mov    %rsp,%rbp
ffffffff80013ea1:	48 83 ec 60          	sub    $0x60,%rsp
ffffffff80013ea5:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
ffffffff80013ea9:	89 f0                	mov    %esi,%eax
ffffffff80013eab:	88 45 a4             	mov    %al,-0x5c(%rbp)
ffffffff80013eae:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80013eb3:	e8 10 fe ff ff       	call   ffffffff80013cc8 <get_run_queue>
ffffffff80013eb8:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff80013ebc:	80 7d a4 00          	cmpb   $0x0,-0x5c(%rbp)
ffffffff80013ec0:	0f 84 84 00 00 00    	je     ffffffff80013f4a <run_queue_put+0xb1>
ffffffff80013ec6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80013eca:	48 8b 80 08 08 00 00 	mov    0x808(%rax),%rax
ffffffff80013ed1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff80013ed5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80013ed9:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
ffffffff80013edd:	eb 17                	jmp    ffffffff80013ef6 <run_queue_put+0x5d>
ffffffff80013edf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80013ee3:	48 8b 80 08 08 00 00 	mov    0x808(%rax),%rax
ffffffff80013eea:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff80013eee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80013ef2:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
ffffffff80013ef6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80013efa:	48 05 08 08 00 00    	add    $0x808,%rax
ffffffff80013f00:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff80013f04:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff80013f08:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
ffffffff80013f0c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff80013f10:	48 89 c1             	mov    %rax,%rcx
ffffffff80013f13:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
ffffffff80013f17:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
ffffffff80013f1b:	48 8b 02             	mov    (%rdx),%rax
ffffffff80013f1e:	f0 48 0f b1 0e       	lock cmpxchg %rcx,(%rsi)
ffffffff80013f23:	48 89 c1             	mov    %rax,%rcx
ffffffff80013f26:	0f 94 c0             	sete   %al
ffffffff80013f29:	84 c0                	test   %al,%al
ffffffff80013f2b:	75 03                	jne    ffffffff80013f30 <run_queue_put+0x97>
ffffffff80013f2d:	48 89 0a             	mov    %rcx,(%rdx)
ffffffff80013f30:	83 f0 01             	xor    $0x1,%eax
ffffffff80013f33:	84 c0                	test   %al,%al
ffffffff80013f35:	75 a8                	jne    ffffffff80013edf <run_queue_put+0x46>
ffffffff80013f37:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff80013f3c:	0f 84 8f 00 00 00    	je     ffffffff80013fd1 <run_queue_put+0x138>
ffffffff80013f42:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80013f46:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
ffffffff80013f4a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80013f4e:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff80013f52:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80013f56:	8b 00                	mov    (%rax),%eax
ffffffff80013f58:	89 45 c8             	mov    %eax,-0x38(%rbp)
ffffffff80013f5b:	8b 45 c8             	mov    -0x38(%rbp),%eax
ffffffff80013f5e:	89 45 dc             	mov    %eax,-0x24(%rbp)
ffffffff80013f61:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80013f65:	8b 40 04             	mov    0x4(%rax),%eax
ffffffff80013f68:	89 45 d8             	mov    %eax,-0x28(%rbp)
ffffffff80013f6b:	8b 45 d8             	mov    -0x28(%rbp),%eax
ffffffff80013f6e:	2b 45 dc             	sub    -0x24(%rbp),%eax
ffffffff80013f71:	3d ff 00 00 00       	cmp    $0xff,%eax
ffffffff80013f76:	77 35                	ja     ffffffff80013fad <run_queue_put+0x114>
ffffffff80013f78:	8b 45 d8             	mov    -0x28(%rbp),%eax
ffffffff80013f7b:	0f b6 d0             	movzbl %al,%edx
ffffffff80013f7e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80013f82:	89 d1                	mov    %edx,%ecx
ffffffff80013f84:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
ffffffff80013f88:	48 89 54 c8 08       	mov    %rdx,0x8(%rax,%rcx,8)
ffffffff80013f8d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80013f91:	48 83 c0 04          	add    $0x4,%rax
ffffffff80013f95:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
ffffffff80013f99:	8b 45 d8             	mov    -0x28(%rbp),%eax
ffffffff80013f9c:	83 c0 01             	add    $0x1,%eax
ffffffff80013f9f:	89 45 cc             	mov    %eax,-0x34(%rbp)
ffffffff80013fa2:	8b 55 cc             	mov    -0x34(%rbp),%edx
ffffffff80013fa5:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff80013fa9:	89 10                	mov    %edx,(%rax)
ffffffff80013fab:	eb 25                	jmp    ffffffff80013fd2 <run_queue_put+0x139>
ffffffff80013fad:	8b 55 d8             	mov    -0x28(%rbp),%edx
ffffffff80013fb0:	8b 4d dc             	mov    -0x24(%rbp),%ecx
ffffffff80013fb3:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff80013fb7:	89 ce                	mov    %ecx,%esi
ffffffff80013fb9:	48 89 c7             	mov    %rax,%rdi
ffffffff80013fbc:	e8 5e fd ff ff       	call   ffffffff80013d1f <run_queue_put_slow>
ffffffff80013fc1:	84 c0                	test   %al,%al
ffffffff80013fc3:	74 85                	je     ffffffff80013f4a <run_queue_put+0xb1>
ffffffff80013fc5:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80013fca:	e8 85 fc ff ff       	call   ffffffff80013c54 <wake_cpu>
ffffffff80013fcf:	eb 01                	jmp    ffffffff80013fd2 <run_queue_put+0x139>
ffffffff80013fd1:	90                   	nop
ffffffff80013fd2:	c9                   	leave  
ffffffff80013fd3:	c3                   	ret    

ffffffff80013fd4 <run_queue_get>:
ffffffff80013fd4:	f3 0f 1e fa          	endbr64 
ffffffff80013fd8:	55                   	push   %rbp
ffffffff80013fd9:	48 89 e5             	mov    %rsp,%rbp
ffffffff80013fdc:	48 83 ec 70          	sub    $0x70,%rsp
ffffffff80013fe0:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
ffffffff80013fe4:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80013fe9:	e8 da fc ff ff       	call   ffffffff80013cc8 <get_run_queue>
ffffffff80013fee:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff80013ff2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80013ff6:	48 8b 80 08 08 00 00 	mov    0x808(%rax),%rax
ffffffff80013ffd:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff80014001:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80014005:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
ffffffff80014009:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
ffffffff8001400e:	74 4e                	je     ffffffff8001405e <run_queue_get+0x8a>
ffffffff80014010:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80014014:	48 05 08 08 00 00    	add    $0x808,%rax
ffffffff8001401a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff8001401e:	48 c7 45 a8 00 00 00 	movq   $0x0,-0x58(%rbp)
ffffffff80014025:	00 
ffffffff80014026:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff8001402a:	48 89 c1             	mov    %rax,%rcx
ffffffff8001402d:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
ffffffff80014031:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
ffffffff80014035:	48 8b 02             	mov    (%rdx),%rax
ffffffff80014038:	f0 48 0f b1 0e       	lock cmpxchg %rcx,(%rsi)
ffffffff8001403d:	48 89 c1             	mov    %rax,%rcx
ffffffff80014040:	0f 94 c0             	sete   %al
ffffffff80014043:	84 c0                	test   %al,%al
ffffffff80014045:	75 03                	jne    ffffffff8001404a <run_queue_get+0x76>
ffffffff80014047:	48 89 0a             	mov    %rcx,(%rdx)
ffffffff8001404a:	84 c0                	test   %al,%al
ffffffff8001404c:	74 10                	je     ffffffff8001405e <run_queue_get+0x8a>
ffffffff8001404e:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff80014052:	c6 00 01             	movb   $0x1,(%rax)
ffffffff80014055:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80014059:	e9 81 00 00 00       	jmp    ffffffff800140df <run_queue_get+0x10b>
ffffffff8001405e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80014062:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff80014066:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8001406a:	8b 00                	mov    (%rax),%eax
ffffffff8001406c:	89 45 b4             	mov    %eax,-0x4c(%rbp)
ffffffff8001406f:	8b 45 b4             	mov    -0x4c(%rbp),%eax
ffffffff80014072:	89 45 bc             	mov    %eax,-0x44(%rbp)
ffffffff80014075:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80014079:	8b 40 04             	mov    0x4(%rax),%eax
ffffffff8001407c:	89 45 dc             	mov    %eax,-0x24(%rbp)
ffffffff8001407f:	8b 45 bc             	mov    -0x44(%rbp),%eax
ffffffff80014082:	39 45 dc             	cmp    %eax,-0x24(%rbp)
ffffffff80014085:	75 07                	jne    ffffffff8001408e <run_queue_get+0xba>
ffffffff80014087:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001408c:	eb 51                	jmp    ffffffff800140df <run_queue_get+0x10b>
ffffffff8001408e:	8b 45 bc             	mov    -0x44(%rbp),%eax
ffffffff80014091:	0f b6 d0             	movzbl %al,%edx
ffffffff80014094:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80014098:	89 d2                	mov    %edx,%edx
ffffffff8001409a:	48 8b 44 d0 08       	mov    0x8(%rax,%rdx,8),%rax
ffffffff8001409f:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
ffffffff800140a3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff800140a7:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
ffffffff800140ab:	8b 45 bc             	mov    -0x44(%rbp),%eax
ffffffff800140ae:	83 c0 01             	add    $0x1,%eax
ffffffff800140b1:	89 45 b8             	mov    %eax,-0x48(%rbp)
ffffffff800140b4:	8b 4d b8             	mov    -0x48(%rbp),%ecx
ffffffff800140b7:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
ffffffff800140bb:	48 8d 55 bc          	lea    -0x44(%rbp),%rdx
ffffffff800140bf:	8b 02                	mov    (%rdx),%eax
ffffffff800140c1:	f0 0f b1 0e          	lock cmpxchg %ecx,(%rsi)
ffffffff800140c5:	89 c1                	mov    %eax,%ecx
ffffffff800140c7:	0f 94 c0             	sete   %al
ffffffff800140ca:	84 c0                	test   %al,%al
ffffffff800140cc:	75 02                	jne    ffffffff800140d0 <run_queue_get+0xfc>
ffffffff800140ce:	89 0a                	mov    %ecx,(%rdx)
ffffffff800140d0:	84 c0                	test   %al,%al
ffffffff800140d2:	74 8a                	je     ffffffff8001405e <run_queue_get+0x8a>
ffffffff800140d4:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff800140d8:	c6 00 00             	movb   $0x0,(%rax)
ffffffff800140db:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff800140df:	c9                   	leave  
ffffffff800140e0:	c3                   	ret    

ffffffff800140e1 <run_queue_empty>:
ffffffff800140e1:	f3 0f 1e fa          	endbr64 
ffffffff800140e5:	55                   	push   %rbp
ffffffff800140e6:	48 89 e5             	mov    %rsp,%rbp
ffffffff800140e9:	48 83 ec 60          	sub    $0x60,%rsp
ffffffff800140ed:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800140f2:	e8 d1 fb ff ff       	call   ffffffff80013cc8 <get_run_queue>
ffffffff800140f7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff800140fb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff800140ff:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff80014103:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80014107:	8b 00                	mov    (%rax),%eax
ffffffff80014109:	89 45 a8             	mov    %eax,-0x58(%rbp)
ffffffff8001410c:	8b 45 a8             	mov    -0x58(%rbp),%eax
ffffffff8001410f:	89 45 ec             	mov    %eax,-0x14(%rbp)
ffffffff80014112:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80014116:	48 83 c0 04          	add    $0x4,%rax
ffffffff8001411a:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff8001411e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80014122:	8b 00                	mov    (%rax),%eax
ffffffff80014124:	89 45 ac             	mov    %eax,-0x54(%rbp)
ffffffff80014127:	8b 45 ac             	mov    -0x54(%rbp),%eax
ffffffff8001412a:	89 45 dc             	mov    %eax,-0x24(%rbp)
ffffffff8001412d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80014131:	48 05 08 08 00 00    	add    $0x808,%rax
ffffffff80014137:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
ffffffff8001413b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8001413f:	48 8b 00             	mov    (%rax),%rax
ffffffff80014142:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
ffffffff80014146:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
ffffffff8001414a:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
ffffffff8001414e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80014152:	48 83 c0 04          	add    $0x4,%rax
ffffffff80014156:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
ffffffff8001415a:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8001415e:	8b 00                	mov    (%rax),%eax
ffffffff80014160:	89 45 bc             	mov    %eax,-0x44(%rbp)
ffffffff80014163:	8b 45 bc             	mov    -0x44(%rbp),%eax
ffffffff80014166:	3b 45 dc             	cmp    -0x24(%rbp),%eax
ffffffff80014169:	75 90                	jne    ffffffff800140fb <run_queue_empty+0x1a>
ffffffff8001416b:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff8001416e:	3b 45 dc             	cmp    -0x24(%rbp),%eax
ffffffff80014171:	75 0e                	jne    ffffffff80014181 <run_queue_empty+0xa0>
ffffffff80014173:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
ffffffff80014178:	75 07                	jne    ffffffff80014181 <run_queue_empty+0xa0>
ffffffff8001417a:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8001417f:	eb 05                	jmp    ffffffff80014186 <run_queue_empty+0xa5>
ffffffff80014181:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80014186:	83 e0 01             	and    $0x1,%eax
ffffffff80014189:	c9                   	leave  
ffffffff8001418a:	c3                   	ret    

ffffffff8001418b <run_queue_grab>:
ffffffff8001418b:	f3 0f 1e fa          	endbr64 
ffffffff8001418f:	55                   	push   %rbp
ffffffff80014190:	48 89 e5             	mov    %rsp,%rbp
ffffffff80014193:	48 83 ec 78          	sub    $0x78,%rsp
ffffffff80014197:	89 7d 9c             	mov    %edi,-0x64(%rbp)
ffffffff8001419a:	48 89 75 90          	mov    %rsi,-0x70(%rbp)
ffffffff8001419e:	89 55 98             	mov    %edx,-0x68(%rbp)
ffffffff800141a1:	89 c8                	mov    %ecx,%eax
ffffffff800141a3:	88 45 8c             	mov    %al,-0x74(%rbp)
ffffffff800141a6:	8b 45 9c             	mov    -0x64(%rbp),%eax
ffffffff800141a9:	89 c7                	mov    %eax,%edi
ffffffff800141ab:	e8 48 fb ff ff       	call   ffffffff80013cf8 <get_run_queue_of>
ffffffff800141b0:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff800141b4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff800141b8:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff800141bc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800141c0:	8b 00                	mov    (%rax),%eax
ffffffff800141c2:	89 45 a0             	mov    %eax,-0x60(%rbp)
ffffffff800141c5:	8b 45 a0             	mov    -0x60(%rbp),%eax
ffffffff800141c8:	89 45 bc             	mov    %eax,-0x44(%rbp)
ffffffff800141cb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff800141cf:	48 83 c0 04          	add    $0x4,%rax
ffffffff800141d3:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff800141d7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff800141db:	8b 00                	mov    (%rax),%eax
ffffffff800141dd:	89 45 a4             	mov    %eax,-0x5c(%rbp)
ffffffff800141e0:	8b 45 a4             	mov    -0x5c(%rbp),%eax
ffffffff800141e3:	89 45 dc             	mov    %eax,-0x24(%rbp)
ffffffff800141e6:	8b 55 bc             	mov    -0x44(%rbp),%edx
ffffffff800141e9:	8b 45 dc             	mov    -0x24(%rbp),%eax
ffffffff800141ec:	29 d0                	sub    %edx,%eax
ffffffff800141ee:	89 45 d8             	mov    %eax,-0x28(%rbp)
ffffffff800141f1:	8b 45 d8             	mov    -0x28(%rbp),%eax
ffffffff800141f4:	d1 e8                	shr    %eax
ffffffff800141f6:	29 45 d8             	sub    %eax,-0x28(%rbp)
ffffffff800141f9:	83 7d d8 00          	cmpl   $0x0,-0x28(%rbp)
ffffffff800141fd:	0f 85 97 00 00 00    	jne    ffffffff8001429a <run_queue_grab+0x10f>
ffffffff80014203:	80 7d 8c 00          	cmpb   $0x0,-0x74(%rbp)
ffffffff80014207:	0f 84 83 00 00 00    	je     ffffffff80014290 <run_queue_grab+0x105>
ffffffff8001420d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80014211:	48 8b 80 08 08 00 00 	mov    0x808(%rax),%rax
ffffffff80014218:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
ffffffff8001421c:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
ffffffff80014220:	48 85 c0             	test   %rax,%rax
ffffffff80014223:	74 6b                	je     ffffffff80014290 <run_queue_grab+0x105>
ffffffff80014225:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80014229:	48 05 08 08 00 00    	add    $0x808,%rax
ffffffff8001422f:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
ffffffff80014233:	48 c7 45 a8 00 00 00 	movq   $0x0,-0x58(%rbp)
ffffffff8001423a:	00 
ffffffff8001423b:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff8001423f:	48 89 c1             	mov    %rax,%rcx
ffffffff80014242:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
ffffffff80014246:	48 8d 55 b0          	lea    -0x50(%rbp),%rdx
ffffffff8001424a:	48 8b 02             	mov    (%rdx),%rax
ffffffff8001424d:	f0 48 0f b1 0e       	lock cmpxchg %rcx,(%rsi)
ffffffff80014252:	48 89 c1             	mov    %rax,%rcx
ffffffff80014255:	0f 94 c0             	sete   %al
ffffffff80014258:	84 c0                	test   %al,%al
ffffffff8001425a:	75 03                	jne    ffffffff8001425f <run_queue_grab+0xd4>
ffffffff8001425c:	48 89 0a             	mov    %rcx,(%rdx)
ffffffff8001425f:	83 f0 01             	xor    $0x1,%eax
ffffffff80014262:	84 c0                	test   %al,%al
ffffffff80014264:	0f 85 cb 00 00 00    	jne    ffffffff80014335 <run_queue_grab+0x1aa>
ffffffff8001426a:	8b 45 98             	mov    -0x68(%rbp),%eax
ffffffff8001426d:	0f b6 c0             	movzbl %al,%eax
ffffffff80014270:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
ffffffff80014277:	00 
ffffffff80014278:	48 8b 45 90          	mov    -0x70(%rbp),%rax
ffffffff8001427c:	48 01 d0             	add    %rdx,%rax
ffffffff8001427f:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
ffffffff80014283:	48 89 10             	mov    %rdx,(%rax)
ffffffff80014286:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8001428b:	e9 b1 00 00 00       	jmp    ffffffff80014341 <run_queue_grab+0x1b6>
ffffffff80014290:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80014295:	e9 a7 00 00 00       	jmp    ffffffff80014341 <run_queue_grab+0x1b6>
ffffffff8001429a:	81 7d d8 80 00 00 00 	cmpl   $0x80,-0x28(%rbp)
ffffffff800142a1:	0f 87 94 00 00 00    	ja     ffffffff8001433b <run_queue_grab+0x1b0>
ffffffff800142a7:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
ffffffff800142ae:	eb 41                	jmp    ffffffff800142f1 <run_queue_grab+0x166>
ffffffff800142b0:	8b 55 bc             	mov    -0x44(%rbp),%edx
ffffffff800142b3:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff800142b6:	01 d0                	add    %edx,%eax
ffffffff800142b8:	0f b6 d0             	movzbl %al,%edx
ffffffff800142bb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff800142bf:	89 d2                	mov    %edx,%edx
ffffffff800142c1:	48 8b 44 d0 08       	mov    0x8(%rax,%rdx,8),%rax
ffffffff800142c6:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
ffffffff800142ca:	8b 55 fc             	mov    -0x4(%rbp),%edx
ffffffff800142cd:	8b 45 98             	mov    -0x68(%rbp),%eax
ffffffff800142d0:	01 d0                	add    %edx,%eax
ffffffff800142d2:	89 c0                	mov    %eax,%eax
ffffffff800142d4:	0f b6 c0             	movzbl %al,%eax
ffffffff800142d7:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
ffffffff800142de:	00 
ffffffff800142df:	48 8b 45 90          	mov    -0x70(%rbp),%rax
ffffffff800142e3:	48 01 d0             	add    %rdx,%rax
ffffffff800142e6:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
ffffffff800142ea:	48 89 10             	mov    %rdx,(%rax)
ffffffff800142ed:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
ffffffff800142f1:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff800142f4:	39 45 d8             	cmp    %eax,-0x28(%rbp)
ffffffff800142f7:	77 b7                	ja     ffffffff800142b0 <run_queue_grab+0x125>
ffffffff800142f9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff800142fd:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
ffffffff80014301:	8b 55 bc             	mov    -0x44(%rbp),%edx
ffffffff80014304:	8b 45 d8             	mov    -0x28(%rbp),%eax
ffffffff80014307:	01 d0                	add    %edx,%eax
ffffffff80014309:	89 45 b8             	mov    %eax,-0x48(%rbp)
ffffffff8001430c:	8b 4d b8             	mov    -0x48(%rbp),%ecx
ffffffff8001430f:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
ffffffff80014313:	48 8d 55 bc          	lea    -0x44(%rbp),%rdx
ffffffff80014317:	8b 02                	mov    (%rdx),%eax
ffffffff80014319:	f0 0f b1 0e          	lock cmpxchg %ecx,(%rsi)
ffffffff8001431d:	89 c1                	mov    %eax,%ecx
ffffffff8001431f:	0f 94 c0             	sete   %al
ffffffff80014322:	84 c0                	test   %al,%al
ffffffff80014324:	75 02                	jne    ffffffff80014328 <run_queue_grab+0x19d>
ffffffff80014326:	89 0a                	mov    %ecx,(%rdx)
ffffffff80014328:	84 c0                	test   %al,%al
ffffffff8001432a:	0f 84 84 fe ff ff    	je     ffffffff800141b4 <run_queue_grab+0x29>
ffffffff80014330:	8b 45 d8             	mov    -0x28(%rbp),%eax
ffffffff80014333:	eb 0c                	jmp    ffffffff80014341 <run_queue_grab+0x1b6>
ffffffff80014335:	90                   	nop
ffffffff80014336:	e9 79 fe ff ff       	jmp    ffffffff800141b4 <run_queue_grab+0x29>
ffffffff8001433b:	90                   	nop
ffffffff8001433c:	e9 73 fe ff ff       	jmp    ffffffff800141b4 <run_queue_grab+0x29>
ffffffff80014341:	c9                   	leave  
ffffffff80014342:	c3                   	ret    

ffffffff80014343 <run_queue_steal>:
ffffffff80014343:	f3 0f 1e fa          	endbr64 
ffffffff80014347:	55                   	push   %rbp
ffffffff80014348:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001434b:	48 83 ec 50          	sub    $0x50,%rsp
ffffffff8001434f:	89 7d bc             	mov    %edi,-0x44(%rbp)
ffffffff80014352:	89 f0                	mov    %esi,%eax
ffffffff80014354:	88 45 b8             	mov    %al,-0x48(%rbp)
ffffffff80014357:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001435c:	e8 67 f9 ff ff       	call   ffffffff80013cc8 <get_run_queue>
ffffffff80014361:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff80014365:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80014369:	8b 40 04             	mov    0x4(%rax),%eax
ffffffff8001436c:	89 45 f4             	mov    %eax,-0xc(%rbp)
ffffffff8001436f:	0f b6 45 b8          	movzbl -0x48(%rbp),%eax
ffffffff80014373:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff80014377:	48 8d 72 08          	lea    0x8(%rdx),%rsi
ffffffff8001437b:	8b 55 f4             	mov    -0xc(%rbp),%edx
ffffffff8001437e:	8b 7d bc             	mov    -0x44(%rbp),%edi
ffffffff80014381:	89 c1                	mov    %eax,%ecx
ffffffff80014383:	e8 03 fe ff ff       	call   ffffffff8001418b <run_queue_grab>
ffffffff80014388:	89 45 f0             	mov    %eax,-0x10(%rbp)
ffffffff8001438b:	83 7d f0 00          	cmpl   $0x0,-0x10(%rbp)
ffffffff8001438f:	75 0a                	jne    ffffffff8001439b <run_queue_steal+0x58>
ffffffff80014391:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80014396:	e9 b8 00 00 00       	jmp    ffffffff80014453 <run_queue_steal+0x110>
ffffffff8001439b:	83 6d f0 01          	subl   $0x1,-0x10(%rbp)
ffffffff8001439f:	8b 55 f4             	mov    -0xc(%rbp),%edx
ffffffff800143a2:	8b 45 f0             	mov    -0x10(%rbp),%eax
ffffffff800143a5:	01 d0                	add    %edx,%eax
ffffffff800143a7:	0f b6 d0             	movzbl %al,%edx
ffffffff800143aa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff800143ae:	89 d2                	mov    %edx,%edx
ffffffff800143b0:	48 8b 44 d0 08       	mov    0x8(%rax,%rdx,8),%rax
ffffffff800143b5:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff800143b9:	83 7d f0 00          	cmpl   $0x0,-0x10(%rbp)
ffffffff800143bd:	75 09                	jne    ffffffff800143c8 <run_queue_steal+0x85>
ffffffff800143bf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800143c3:	e9 8b 00 00 00       	jmp    ffffffff80014453 <run_queue_steal+0x110>
ffffffff800143c8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff800143cc:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff800143d0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff800143d4:	8b 00                	mov    (%rax),%eax
ffffffff800143d6:	89 45 c8             	mov    %eax,-0x38(%rbp)
ffffffff800143d9:	8b 45 c8             	mov    -0x38(%rbp),%eax
ffffffff800143dc:	89 45 dc             	mov    %eax,-0x24(%rbp)
ffffffff800143df:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff800143e2:	2b 45 dc             	sub    -0x24(%rbp),%eax
ffffffff800143e5:	8b 55 f0             	mov    -0x10(%rbp),%edx
ffffffff800143e8:	01 d0                	add    %edx,%eax
ffffffff800143ea:	3d ff 00 00 00       	cmp    $0xff,%eax
ffffffff800143ef:	76 3d                	jbe    ffffffff8001442e <run_queue_steal+0xeb>
ffffffff800143f1:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800143f6:	e8 e6 28 ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff800143fb:	48 89 c6             	mov    %rax,%rsi
ffffffff800143fe:	41 b8 d8 01 00 00    	mov    $0x1d8,%r8d
ffffffff80014404:	48 8d 05 6b 40 02 00 	lea    0x2406b(%rip),%rax        # ffffffff80038476 <g_stivale2_header+0x1476>
ffffffff8001440b:	48 89 c1             	mov    %rax,%rcx
ffffffff8001440e:	48 8d 05 5b 96 02 00 	lea    0x2965b(%rip),%rax        # ffffffff8003da70 <__FUNCTION__.10.lto_priv.1>
ffffffff80014415:	48 89 c2             	mov    %rax,%rdx
ffffffff80014418:	48 8d 05 a1 83 02 00 	lea    0x283a1(%rip),%rax        # ffffffff8003c7c0 <g_stivale2_header+0x57c0>
ffffffff8001441f:	48 89 c7             	mov    %rax,%rdi
ffffffff80014422:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80014427:	e8 14 f1 ff ff       	call   ffffffff80013540 <printf_>
ffffffff8001442c:	0f 0b                	ud2    
ffffffff8001442e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80014432:	48 83 c0 04          	add    $0x4,%rax
ffffffff80014436:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
ffffffff8001443a:	8b 55 f4             	mov    -0xc(%rbp),%edx
ffffffff8001443d:	8b 45 f0             	mov    -0x10(%rbp),%eax
ffffffff80014440:	01 d0                	add    %edx,%eax
ffffffff80014442:	89 45 cc             	mov    %eax,-0x34(%rbp)
ffffffff80014445:	8b 55 cc             	mov    -0x34(%rbp),%edx
ffffffff80014448:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8001444c:	89 10                	mov    %edx,(%rax)
ffffffff8001444e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80014452:	90                   	nop
ffffffff80014453:	c9                   	leave  
ffffffff80014454:	c3                   	ret    

ffffffff80014455 <scheduler_can_spin>:
ffffffff80014455:	f3 0f 1e fa          	endbr64 
ffffffff80014459:	55                   	push   %rbp
ffffffff8001445a:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001445d:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff80014461:	89 7d fc             	mov    %edi,-0x4(%rbp)
ffffffff80014464:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
ffffffff80014468:	7e 07                	jle    ffffffff80014471 <scheduler_can_spin+0x1c>
ffffffff8001446a:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001446f:	eb 45                	jmp    ffffffff800144b6 <scheduler_can_spin+0x61>
ffffffff80014471:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80014476:	e8 ad dc fe ff       	call   ffffffff80002128 <get_cpu_count>
ffffffff8001447b:	48 83 f8 01          	cmp    $0x1,%rax
ffffffff8001447f:	77 07                	ja     ffffffff80014488 <scheduler_can_spin+0x33>
ffffffff80014481:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80014486:	eb 2e                	jmp    ffffffff800144b6 <scheduler_can_spin+0x61>
ffffffff80014488:	8b 05 a2 cc 29 00    	mov    0x29cca2(%rip),%eax        # ffffffff802b1130 <m_idle_cpus_count>
ffffffff8001448e:	85 c0                	test   %eax,%eax
ffffffff80014490:	75 07                	jne    ffffffff80014499 <scheduler_can_spin+0x44>
ffffffff80014492:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80014497:	eb 1d                	jmp    ffffffff800144b6 <scheduler_can_spin+0x61>
ffffffff80014499:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001449e:	e8 3e fc ff ff       	call   ffffffff800140e1 <run_queue_empty>
ffffffff800144a3:	83 f0 01             	xor    $0x1,%eax
ffffffff800144a6:	84 c0                	test   %al,%al
ffffffff800144a8:	74 07                	je     ffffffff800144b1 <scheduler_can_spin+0x5c>
ffffffff800144aa:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800144af:	eb 05                	jmp    ffffffff800144b6 <scheduler_can_spin+0x61>
ffffffff800144b1:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff800144b6:	c9                   	leave  
ffffffff800144b7:	c3                   	ret    

ffffffff800144b8 <scheduler_ready_thread>:
ffffffff800144b8:	f3 0f 1e fa          	endbr64 
ffffffff800144bc:	55                   	push   %rbp
ffffffff800144bd:	48 89 e5             	mov    %rsp,%rbp
ffffffff800144c0:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff800144c4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff800144c8:	e8 ce 03 00 00       	call   ffffffff8001489b <scheduler_preempt_disable>
ffffffff800144cd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff800144d1:	48 89 c7             	mov    %rax,%rdi
ffffffff800144d4:	e8 0f 14 00 00       	call   ffffffff800158e8 <get_thread_status>
ffffffff800144d9:	80 e4 ef             	and    $0xef,%ah
ffffffff800144dc:	83 f8 03             	cmp    $0x3,%eax
ffffffff800144df:	74 3d                	je     ffffffff8001451e <scheduler_ready_thread+0x66>
ffffffff800144e1:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800144e6:	e8 f6 27 ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff800144eb:	48 89 c6             	mov    %rax,%rsi
ffffffff800144ee:	41 b8 f7 01 00 00    	mov    $0x1f7,%r8d
ffffffff800144f4:	48 8d 05 7b 3f 02 00 	lea    0x23f7b(%rip),%rax        # ffffffff80038476 <g_stivale2_header+0x1476>
ffffffff800144fb:	48 89 c1             	mov    %rax,%rcx
ffffffff800144fe:	48 8d 05 7b 95 02 00 	lea    0x2957b(%rip),%rax        # ffffffff8003da80 <__FUNCTION__.9.lto_priv.2>
ffffffff80014505:	48 89 c2             	mov    %rax,%rdx
ffffffff80014508:	48 8d 05 b1 82 02 00 	lea    0x282b1(%rip),%rax        # ffffffff8003c7c0 <g_stivale2_header+0x57c0>
ffffffff8001450f:	48 89 c7             	mov    %rax,%rdi
ffffffff80014512:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80014517:	e8 24 f0 ff ff       	call   ffffffff80013540 <printf_>
ffffffff8001451c:	0f 0b                	ud2    
ffffffff8001451e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80014522:	ba 01 00 00 00       	mov    $0x1,%edx
ffffffff80014527:	be 03 00 00 00       	mov    $0x3,%esi
ffffffff8001452c:	48 89 c7             	mov    %rax,%rdi
ffffffff8001452f:	e8 e0 13 00 00       	call   ffffffff80015914 <cas_thread_state>
ffffffff80014534:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80014538:	be 01 00 00 00       	mov    $0x1,%esi
ffffffff8001453d:	48 89 c7             	mov    %rax,%rdi
ffffffff80014540:	e8 54 f9 ff ff       	call   ffffffff80013e99 <run_queue_put>
ffffffff80014545:	e8 b9 03 00 00       	call   ffffffff80014903 <scheduler_preempt_enable>
ffffffff8001454a:	90                   	nop
ffffffff8001454b:	c9                   	leave  
ffffffff8001454c:	c3                   	ret    

ffffffff8001454d <cas_from_preempted>:
ffffffff8001454d:	f3 0f 1e fa          	endbr64 
ffffffff80014551:	55                   	push   %rbp
ffffffff80014552:	48 89 e5             	mov    %rsp,%rbp
ffffffff80014555:	48 83 ec 18          	sub    $0x18,%rsp
ffffffff80014559:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff8001455d:	c7 45 f4 04 00 00 00 	movl   $0x4,-0xc(%rbp)
ffffffff80014564:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80014568:	48 05 dc 00 00 00    	add    $0xdc,%rax
ffffffff8001456e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff80014572:	c7 45 f0 03 00 00 00 	movl   $0x3,-0x10(%rbp)
ffffffff80014579:	8b 4d f0             	mov    -0x10(%rbp),%ecx
ffffffff8001457c:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
ffffffff80014580:	48 8d 55 f4          	lea    -0xc(%rbp),%rdx
ffffffff80014584:	8b 02                	mov    (%rdx),%eax
ffffffff80014586:	f0 0f b1 0e          	lock cmpxchg %ecx,(%rsi)
ffffffff8001458a:	89 c1                	mov    %eax,%ecx
ffffffff8001458c:	0f 94 c0             	sete   %al
ffffffff8001458f:	84 c0                	test   %al,%al
ffffffff80014591:	75 02                	jne    ffffffff80014595 <cas_from_preempted+0x48>
ffffffff80014593:	89 0a                	mov    %ecx,(%rdx)
ffffffff80014595:	90                   	nop
ffffffff80014596:	c9                   	leave  
ffffffff80014597:	c3                   	ret    

ffffffff80014598 <cas_to_suspend>:
ffffffff80014598:	f3 0f 1e fa          	endbr64 
ffffffff8001459c:	55                   	push   %rbp
ffffffff8001459d:	48 89 e5             	mov    %rsp,%rbp
ffffffff800145a0:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff800145a4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff800145a8:	89 75 e4             	mov    %esi,-0x1c(%rbp)
ffffffff800145ab:	89 55 e0             	mov    %edx,-0x20(%rbp)
ffffffff800145ae:	8b 45 e4             	mov    -0x1c(%rbp),%eax
ffffffff800145b1:	80 cc 10             	or     $0x10,%ah
ffffffff800145b4:	39 45 e0             	cmp    %eax,-0x20(%rbp)
ffffffff800145b7:	74 3d                	je     ffffffff800145f6 <cas_to_suspend+0x5e>
ffffffff800145b9:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800145be:	e8 1e 27 ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff800145c3:	48 89 c6             	mov    %rax,%rsi
ffffffff800145c6:	41 b8 08 02 00 00    	mov    $0x208,%r8d
ffffffff800145cc:	48 8d 05 a3 3e 02 00 	lea    0x23ea3(%rip),%rax        # ffffffff80038476 <g_stivale2_header+0x1476>
ffffffff800145d3:	48 89 c1             	mov    %rax,%rcx
ffffffff800145d6:	48 8d 05 bb 94 02 00 	lea    0x294bb(%rip),%rax        # ffffffff8003da98 <__FUNCTION__.8.lto_priv.2>
ffffffff800145dd:	48 89 c2             	mov    %rax,%rdx
ffffffff800145e0:	48 8d 05 d9 81 02 00 	lea    0x281d9(%rip),%rax        # ffffffff8003c7c0 <g_stivale2_header+0x57c0>
ffffffff800145e7:	48 89 c7             	mov    %rax,%rdi
ffffffff800145ea:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800145ef:	e8 4c ef ff ff       	call   ffffffff80013540 <printf_>
ffffffff800145f4:	0f 0b                	ud2    
ffffffff800145f6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800145fa:	48 05 dc 00 00 00    	add    $0xdc,%rax
ffffffff80014600:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff80014604:	8b 45 e0             	mov    -0x20(%rbp),%eax
ffffffff80014607:	89 45 f4             	mov    %eax,-0xc(%rbp)
ffffffff8001460a:	8b 4d f4             	mov    -0xc(%rbp),%ecx
ffffffff8001460d:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
ffffffff80014611:	48 8d 55 e4          	lea    -0x1c(%rbp),%rdx
ffffffff80014615:	8b 02                	mov    (%rdx),%eax
ffffffff80014617:	f0 0f b1 0e          	lock cmpxchg %ecx,(%rsi)
ffffffff8001461b:	89 c1                	mov    %eax,%ecx
ffffffff8001461d:	0f 94 c0             	sete   %al
ffffffff80014620:	84 c0                	test   %al,%al
ffffffff80014622:	75 02                	jne    ffffffff80014626 <cas_to_suspend+0x8e>
ffffffff80014624:	89 0a                	mov    %ecx,(%rdx)
ffffffff80014626:	90                   	nop
ffffffff80014627:	90                   	nop
ffffffff80014628:	c9                   	leave  
ffffffff80014629:	c3                   	ret    

ffffffff8001462a <cas_from_suspend>:
ffffffff8001462a:	f3 0f 1e fa          	endbr64 
ffffffff8001462e:	55                   	push   %rbp
ffffffff8001462f:	48 89 e5             	mov    %rsp,%rbp
ffffffff80014632:	48 83 ec 30          	sub    $0x30,%rsp
ffffffff80014636:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
ffffffff8001463a:	89 75 d4             	mov    %esi,-0x2c(%rbp)
ffffffff8001463d:	89 55 d0             	mov    %edx,-0x30(%rbp)
ffffffff80014640:	c6 45 ff 00          	movb   $0x0,-0x1(%rbp)
ffffffff80014644:	8b 45 d4             	mov    -0x2c(%rbp),%eax
ffffffff80014647:	80 e4 ef             	and    $0xef,%ah
ffffffff8001464a:	39 45 d0             	cmp    %eax,-0x30(%rbp)
ffffffff8001464d:	75 38                	jne    ffffffff80014687 <cas_from_suspend+0x5d>
ffffffff8001464f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80014653:	48 05 dc 00 00 00    	add    $0xdc,%rax
ffffffff80014659:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff8001465d:	8b 45 d0             	mov    -0x30(%rbp),%eax
ffffffff80014660:	89 45 ec             	mov    %eax,-0x14(%rbp)
ffffffff80014663:	8b 4d ec             	mov    -0x14(%rbp),%ecx
ffffffff80014666:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
ffffffff8001466a:	48 8d 55 d4          	lea    -0x2c(%rbp),%rdx
ffffffff8001466e:	8b 02                	mov    (%rdx),%eax
ffffffff80014670:	f0 0f b1 0e          	lock cmpxchg %ecx,(%rsi)
ffffffff80014674:	89 c1                	mov    %eax,%ecx
ffffffff80014676:	0f 94 c0             	sete   %al
ffffffff80014679:	84 c0                	test   %al,%al
ffffffff8001467b:	75 02                	jne    ffffffff8001467f <cas_from_suspend+0x55>
ffffffff8001467d:	89 0a                	mov    %ecx,(%rdx)
ffffffff8001467f:	84 c0                	test   %al,%al
ffffffff80014681:	74 04                	je     ffffffff80014687 <cas_from_suspend+0x5d>
ffffffff80014683:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
ffffffff80014687:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
ffffffff8001468b:	83 f0 01             	xor    $0x1,%eax
ffffffff8001468e:	84 c0                	test   %al,%al
ffffffff80014690:	74 3d                	je     ffffffff800146cf <cas_from_suspend+0xa5>
ffffffff80014692:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80014697:	e8 45 26 ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff8001469c:	48 89 c6             	mov    %rax,%rsi
ffffffff8001469f:	41 b8 13 02 00 00    	mov    $0x213,%r8d
ffffffff800146a5:	48 8d 05 ca 3d 02 00 	lea    0x23dca(%rip),%rax        # ffffffff80038476 <g_stivale2_header+0x1476>
ffffffff800146ac:	48 89 c1             	mov    %rax,%rcx
ffffffff800146af:	48 8d 05 fa 93 02 00 	lea    0x293fa(%rip),%rax        # ffffffff8003dab0 <__FUNCTION__.7.lto_priv.2>
ffffffff800146b6:	48 89 c2             	mov    %rax,%rdx
ffffffff800146b9:	48 8d 05 00 81 02 00 	lea    0x28100(%rip),%rax        # ffffffff8003c7c0 <g_stivale2_header+0x57c0>
ffffffff800146c0:	48 89 c7             	mov    %rax,%rdi
ffffffff800146c3:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800146c8:	e8 73 ee ff ff       	call   ffffffff80013540 <printf_>
ffffffff800146cd:	0f 0b                	ud2    
ffffffff800146cf:	90                   	nop
ffffffff800146d0:	c9                   	leave  
ffffffff800146d1:	c3                   	ret    

ffffffff800146d2 <scheduler_suspend_thread>:
ffffffff800146d2:	f3 0f 1e fa          	endbr64 
ffffffff800146d6:	55                   	push   %rbp
ffffffff800146d7:	48 89 e5             	mov    %rsp,%rbp
ffffffff800146da:	53                   	push   %rbx
ffffffff800146db:	48 83 ec 28          	sub    $0x28,%rsp
ffffffff800146df:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
ffffffff800146e3:	c6 45 ef 00          	movb   $0x0,-0x11(%rbp)
ffffffff800146e7:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%rbp)
ffffffff800146ee:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff800146f2:	48 89 c7             	mov    %rax,%rdi
ffffffff800146f5:	e8 ee 11 00 00       	call   ffffffff800158e8 <get_thread_status>
ffffffff800146fa:	89 45 e4             	mov    %eax,-0x1c(%rbp)
ffffffff800146fd:	83 7d e4 05          	cmpl   $0x5,-0x1c(%rbp)
ffffffff80014701:	0f 87 0a 01 00 00    	ja     ffffffff80014811 <scheduler_suspend_thread+0x13f>
ffffffff80014707:	8b 45 e4             	mov    -0x1c(%rbp),%eax
ffffffff8001470a:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
ffffffff80014711:	00 
ffffffff80014712:	48 8d 05 33 93 02 00 	lea    0x29333(%rip),%rax        # ffffffff8003da4c <__FUNCTION__.0.lto_priv.9+0x1b5>
ffffffff80014719:	8b 04 02             	mov    (%rdx,%rax,1),%eax
ffffffff8001471c:	48 98                	cltq   
ffffffff8001471e:	48 8d 15 27 93 02 00 	lea    0x29327(%rip),%rdx        # ffffffff8003da4c <__FUNCTION__.0.lto_priv.9+0x1b5>
ffffffff80014725:	48 01 d0             	add    %rdx,%rax
ffffffff80014728:	3e ff e0             	notrack jmp *%rax
ffffffff8001472b:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80014730:	ba 00 00 00 00       	mov    $0x0,%edx
ffffffff80014735:	b9 01 00 00 00       	mov    $0x1,%ecx
ffffffff8001473a:	88 ce                	mov    %cl,%dh
ffffffff8001473c:	e9 ee 00 00 00       	jmp    ffffffff8001482f <scheduler_suspend_thread+0x15d>
ffffffff80014741:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80014745:	48 89 c7             	mov    %rax,%rdi
ffffffff80014748:	e8 00 fe ff ff       	call   ffffffff8001454d <cas_from_preempted>
ffffffff8001474d:	83 f0 01             	xor    $0x1,%eax
ffffffff80014750:	84 c0                	test   %al,%al
ffffffff80014752:	0f 85 b9 00 00 00    	jne    ffffffff80014811 <scheduler_suspend_thread+0x13f>
ffffffff80014758:	c6 45 ef 01          	movb   $0x1,-0x11(%rbp)
ffffffff8001475c:	c7 45 e4 03 00 00 00 	movl   $0x3,-0x1c(%rbp)
ffffffff80014763:	8b 45 e4             	mov    -0x1c(%rbp),%eax
ffffffff80014766:	80 cc 10             	or     $0x10,%ah
ffffffff80014769:	89 c2                	mov    %eax,%edx
ffffffff8001476b:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
ffffffff8001476e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80014772:	89 ce                	mov    %ecx,%esi
ffffffff80014774:	48 89 c7             	mov    %rax,%rdi
ffffffff80014777:	e8 1c fe ff ff       	call   ffffffff80014598 <cas_to_suspend>
ffffffff8001477c:	83 f0 01             	xor    $0x1,%eax
ffffffff8001477f:	84 c0                	test   %al,%al
ffffffff80014781:	0f 85 83 00 00 00    	jne    ffffffff8001480a <scheduler_suspend_thread+0x138>
ffffffff80014787:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8001478b:	c6 80 d9 00 00 00 00 	movb   $0x0,0xd9(%rax)
ffffffff80014792:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80014796:	c6 80 d8 00 00 00 00 	movb   $0x0,0xd8(%rax)
ffffffff8001479d:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800147a2:	ba 00 00 00 00       	mov    $0x0,%edx
ffffffff800147a7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff800147ab:	8a 55 ef             	mov    -0x11(%rbp),%dl
ffffffff800147ae:	eb 7f                	jmp    ffffffff8001482f <scheduler_suspend_thread+0x15d>
ffffffff800147b0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff800147b4:	0f b6 80 d9 00 00 00 	movzbl 0xd9(%rax),%eax
ffffffff800147bb:	84 c0                	test   %al,%al
ffffffff800147bd:	75 4e                	jne    ffffffff8001480d <scheduler_suspend_thread+0x13b>
ffffffff800147bf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff800147c3:	ba 02 10 00 00       	mov    $0x1002,%edx
ffffffff800147c8:	be 02 00 00 00       	mov    $0x2,%esi
ffffffff800147cd:	48 89 c7             	mov    %rax,%rdi
ffffffff800147d0:	e8 c3 fd ff ff       	call   ffffffff80014598 <cas_to_suspend>
ffffffff800147d5:	83 f0 01             	xor    $0x1,%eax
ffffffff800147d8:	84 c0                	test   %al,%al
ffffffff800147da:	75 34                	jne    ffffffff80014810 <scheduler_suspend_thread+0x13e>
ffffffff800147dc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff800147e0:	c6 80 d9 00 00 00 01 	movb   $0x1,0xd9(%rax)
ffffffff800147e7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff800147eb:	c6 80 d8 00 00 00 01 	movb   $0x1,0xd8(%rax)
ffffffff800147f2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff800147f6:	ba 02 00 00 00       	mov    $0x2,%edx
ffffffff800147fb:	be 02 10 00 00       	mov    $0x1002,%esi
ffffffff80014800:	48 89 c7             	mov    %rax,%rdi
ffffffff80014803:	e8 22 fe ff ff       	call   ffffffff8001462a <cas_from_suspend>
ffffffff80014808:	eb 07                	jmp    ffffffff80014811 <scheduler_suspend_thread+0x13f>
ffffffff8001480a:	90                   	nop
ffffffff8001480b:	eb 04                	jmp    ffffffff80014811 <scheduler_suspend_thread+0x13f>
ffffffff8001480d:	90                   	nop
ffffffff8001480e:	eb 01                	jmp    ffffffff80014811 <scheduler_suspend_thread+0x13f>
ffffffff80014810:	90                   	nop
ffffffff80014811:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%rbp)
ffffffff80014818:	eb 06                	jmp    ffffffff80014820 <scheduler_suspend_thread+0x14e>
ffffffff8001481a:	f3 90                	pause  
ffffffff8001481c:	83 45 e0 01          	addl   $0x1,-0x20(%rbp)
ffffffff80014820:	83 7d e0 09          	cmpl   $0x9,-0x20(%rbp)
ffffffff80014824:	7e f4                	jle    ffffffff8001481a <scheduler_suspend_thread+0x148>
ffffffff80014826:	83 45 e8 01          	addl   $0x1,-0x18(%rbp)
ffffffff8001482a:	e9 bf fe ff ff       	jmp    ffffffff800146ee <scheduler_suspend_thread+0x1c>
ffffffff8001482f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
ffffffff80014833:	c9                   	leave  
ffffffff80014834:	c3                   	ret    

ffffffff80014835 <scheduler_resume_thread>:
ffffffff80014835:	f3 0f 1e fa          	endbr64 
ffffffff80014839:	55                   	push   %rbp
ffffffff8001483a:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001483d:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff80014841:	48 89 f8             	mov    %rdi,%rax
ffffffff80014844:	48 89 f1             	mov    %rsi,%rcx
ffffffff80014847:	48 89 ca             	mov    %rcx,%rdx
ffffffff8001484a:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff8001484e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
ffffffff80014852:	0f b6 45 e9          	movzbl -0x17(%rbp),%eax
ffffffff80014856:	84 c0                	test   %al,%al
ffffffff80014858:	75 3e                	jne    ffffffff80014898 <scheduler_resume_thread+0x63>
ffffffff8001485a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8001485e:	48 89 c7             	mov    %rax,%rdi
ffffffff80014861:	e8 82 10 00 00       	call   ffffffff800158e8 <get_thread_status>
ffffffff80014866:	89 45 fc             	mov    %eax,-0x4(%rbp)
ffffffff80014869:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8001486c:	80 e4 ef             	and    $0xef,%ah
ffffffff8001486f:	89 c2                	mov    %eax,%edx
ffffffff80014871:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80014875:	8b 4d fc             	mov    -0x4(%rbp),%ecx
ffffffff80014878:	89 ce                	mov    %ecx,%esi
ffffffff8001487a:	48 89 c7             	mov    %rax,%rdi
ffffffff8001487d:	e8 a8 fd ff ff       	call   ffffffff8001462a <cas_from_suspend>
ffffffff80014882:	0f b6 45 e8          	movzbl -0x18(%rbp),%eax
ffffffff80014886:	84 c0                	test   %al,%al
ffffffff80014888:	74 0f                	je     ffffffff80014899 <scheduler_resume_thread+0x64>
ffffffff8001488a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8001488e:	48 89 c7             	mov    %rax,%rdi
ffffffff80014891:	e8 22 fc ff ff       	call   ffffffff800144b8 <scheduler_ready_thread>
ffffffff80014896:	eb 01                	jmp    ffffffff80014899 <scheduler_resume_thread+0x64>
ffffffff80014898:	90                   	nop
ffffffff80014899:	c9                   	leave  
ffffffff8001489a:	c3                   	ret    

ffffffff8001489b <scheduler_preempt_disable>:
ffffffff8001489b:	f3 0f 1e fa          	endbr64 
ffffffff8001489f:	55                   	push   %rbp
ffffffff800148a0:	48 89 e5             	mov    %rsp,%rbp
ffffffff800148a3:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff800148a7:	44 0f 20 c0          	mov    %cr8,%rax
ffffffff800148ab:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff800148af:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff800148b3:	48 83 f8 05          	cmp    $0x5,%rax
ffffffff800148b7:	74 3d                	je     ffffffff800148f6 <scheduler_preempt_disable+0x5b>
ffffffff800148b9:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800148be:	e8 1e 24 ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff800148c3:	48 89 c6             	mov    %rax,%rsi
ffffffff800148c6:	41 b8 75 02 00 00    	mov    $0x275,%r8d
ffffffff800148cc:	48 8d 05 a3 3b 02 00 	lea    0x23ba3(%rip),%rax        # ffffffff80038476 <g_stivale2_header+0x1476>
ffffffff800148d3:	48 89 c1             	mov    %rax,%rcx
ffffffff800148d6:	48 8d 05 f3 91 02 00 	lea    0x291f3(%rip),%rax        # ffffffff8003dad0 <__FUNCTION__.6.lto_priv.3>
ffffffff800148dd:	48 89 c2             	mov    %rax,%rdx
ffffffff800148e0:	48 8d 05 d9 7e 02 00 	lea    0x27ed9(%rip),%rax        # ffffffff8003c7c0 <g_stivale2_header+0x57c0>
ffffffff800148e7:	48 89 c7             	mov    %rax,%rdi
ffffffff800148ea:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800148ef:	e8 4c ec ff ff       	call   ffffffff80013540 <printf_>
ffffffff800148f4:	0f 0b                	ud2    
ffffffff800148f6:	b8 06 00 00 00       	mov    $0x6,%eax
ffffffff800148fb:	44 0f 22 c0          	mov    %rax,%cr8
ffffffff800148ff:	90                   	nop
ffffffff80014900:	90                   	nop
ffffffff80014901:	c9                   	leave  
ffffffff80014902:	c3                   	ret    

ffffffff80014903 <scheduler_preempt_enable>:
ffffffff80014903:	f3 0f 1e fa          	endbr64 
ffffffff80014907:	55                   	push   %rbp
ffffffff80014908:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001490b:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff8001490f:	44 0f 20 c0          	mov    %cr8,%rax
ffffffff80014913:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff80014917:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001491b:	48 83 f8 06          	cmp    $0x6,%rax
ffffffff8001491f:	74 3d                	je     ffffffff8001495e <scheduler_preempt_enable+0x5b>
ffffffff80014921:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80014926:	e8 b6 23 ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff8001492b:	48 89 c6             	mov    %rax,%rsi
ffffffff8001492e:	41 b8 7a 02 00 00    	mov    $0x27a,%r8d
ffffffff80014934:	48 8d 05 3b 3b 02 00 	lea    0x23b3b(%rip),%rax        # ffffffff80038476 <g_stivale2_header+0x1476>
ffffffff8001493b:	48 89 c1             	mov    %rax,%rcx
ffffffff8001493e:	48 8d 05 ab 91 02 00 	lea    0x291ab(%rip),%rax        # ffffffff8003daf0 <__FUNCTION__.5.lto_priv.3>
ffffffff80014945:	48 89 c2             	mov    %rax,%rdx
ffffffff80014948:	48 8d 05 71 7e 02 00 	lea    0x27e71(%rip),%rax        # ffffffff8003c7c0 <g_stivale2_header+0x57c0>
ffffffff8001494f:	48 89 c7             	mov    %rax,%rdi
ffffffff80014952:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80014957:	e8 e4 eb ff ff       	call   ffffffff80013540 <printf_>
ffffffff8001495c:	0f 0b                	ud2    
ffffffff8001495e:	b8 05 00 00 00       	mov    $0x5,%eax
ffffffff80014963:	44 0f 22 c0          	mov    %rax,%cr8
ffffffff80014967:	90                   	nop
ffffffff80014968:	90                   	nop
ffffffff80014969:	c9                   	leave  
ffffffff8001496a:	c3                   	ret    

ffffffff8001496b <execute>:
ffffffff8001496b:	f3 0f 1e fa          	endbr64 
ffffffff8001496f:	55                   	push   %rbp
ffffffff80014970:	48 89 e5             	mov    %rsp,%rbp
ffffffff80014973:	48 83 ec 30          	sub    $0x30,%rsp
ffffffff80014977:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff8001497b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
ffffffff8001497f:	89 d0                	mov    %edx,%eax
ffffffff80014981:	88 45 dc             	mov    %al,-0x24(%rbp)
ffffffff80014984:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80014988:	65 48 89 05 d0 b6 fe 	mov    %rax,%gs:0x7ffeb6d0(%rip)        # 60 <m_current_thread>
ffffffff8001498f:	7f 
ffffffff80014990:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80014994:	ba 02 00 00 00       	mov    $0x2,%edx
ffffffff80014999:	be 01 00 00 00       	mov    $0x1,%esi
ffffffff8001499e:	48 89 c7             	mov    %rax,%rdi
ffffffff800149a1:	e8 6e 0f 00 00       	call   ffffffff80015914 <cas_thread_state>
ffffffff800149a6:	0f b6 45 dc          	movzbl -0x24(%rbp),%eax
ffffffff800149aa:	83 f0 01             	xor    $0x1,%eax
ffffffff800149ad:	84 c0                	test   %al,%al
ffffffff800149af:	74 1d                	je     ffffffff800149ce <execute+0x63>
ffffffff800149b1:	65 8b 05 b0 b6 fe 7f 	mov    %gs:0x7ffeb6b0(%rip),%eax        # 68 <m_scheduler_tick>
ffffffff800149b8:	83 c0 01             	add    $0x1,%eax
ffffffff800149bb:	65 89 05 a6 b6 fe 7f 	mov    %eax,%gs:0x7ffeb6a6(%rip)        # 68 <m_scheduler_tick>
ffffffff800149c2:	bf 10 27 00 00       	mov    $0x2710,%edi
ffffffff800149c7:	e8 2e 23 ff ff       	call   ffffffff80006cfa <lapic_set_deadline>
ffffffff800149cc:	eb 15                	jmp    ffffffff800149e3 <execute+0x78>
ffffffff800149ce:	65 8b 05 93 b6 fe 7f 	mov    %gs:0x7ffeb693(%rip),%eax        # 68 <m_scheduler_tick>
ffffffff800149d5:	85 c0                	test   %eax,%eax
ffffffff800149d7:	75 0a                	jne    ffffffff800149e3 <execute+0x78>
ffffffff800149d9:	bf 10 27 00 00       	mov    $0x2710,%edi
ffffffff800149de:	e8 17 23 ff ff       	call   ffffffff80006cfa <lapic_set_deadline>
ffffffff800149e3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff800149e7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff800149eb:	48 89 d6             	mov    %rdx,%rsi
ffffffff800149ee:	48 89 c7             	mov    %rax,%rdi
ffffffff800149f1:	e8 2c 12 00 00       	call   ffffffff80015c22 <restore_thread_context>
ffffffff800149f6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff800149fa:	48 8b 80 d0 00 00 00 	mov    0xd0(%rax),%rax
ffffffff80014a01:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff80014a05:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80014a09:	48 c1 e8 20          	shr    $0x20,%rax
ffffffff80014a0d:	89 c2                	mov    %eax,%edx
ffffffff80014a0f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80014a13:	b9 00 01 00 c0       	mov    $0xc0000100,%ecx
ffffffff80014a18:	0f 30                	wrmsr  
ffffffff80014a1a:	90                   	nop
ffffffff80014a1b:	90                   	nop
ffffffff80014a1c:	c9                   	leave  
ffffffff80014a1d:	c3                   	ret    

ffffffff80014a1e <gcd>:
ffffffff80014a1e:	f3 0f 1e fa          	endbr64 
ffffffff80014a22:	55                   	push   %rbp
ffffffff80014a23:	48 89 e5             	mov    %rsp,%rbp
ffffffff80014a26:	48 83 ec 18          	sub    $0x18,%rsp
ffffffff80014a2a:	89 7d ec             	mov    %edi,-0x14(%rbp)
ffffffff80014a2d:	89 75 e8             	mov    %esi,-0x18(%rbp)
ffffffff80014a30:	eb 1a                	jmp    ffffffff80014a4c <gcd+0x2e>
ffffffff80014a32:	8b 45 e8             	mov    -0x18(%rbp),%eax
ffffffff80014a35:	89 45 fc             	mov    %eax,-0x4(%rbp)
ffffffff80014a38:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff80014a3b:	ba 00 00 00 00       	mov    $0x0,%edx
ffffffff80014a40:	f7 75 e8             	divl   -0x18(%rbp)
ffffffff80014a43:	89 55 e8             	mov    %edx,-0x18(%rbp)
ffffffff80014a46:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff80014a49:	89 45 ec             	mov    %eax,-0x14(%rbp)
ffffffff80014a4c:	83 7d e8 00          	cmpl   $0x0,-0x18(%rbp)
ffffffff80014a50:	75 e0                	jne    ffffffff80014a32 <gcd+0x14>
ffffffff80014a52:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff80014a55:	c9                   	leave  
ffffffff80014a56:	c3                   	ret    

ffffffff80014a57 <random_order_init>:
ffffffff80014a57:	f3 0f 1e fa          	endbr64 
ffffffff80014a5b:	55                   	push   %rbp
ffffffff80014a5c:	48 89 e5             	mov    %rsp,%rbp
ffffffff80014a5f:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff80014a63:	89 7d ec             	mov    %edi,-0x14(%rbp)
ffffffff80014a66:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff80014a69:	89 05 d1 c6 29 00    	mov    %eax,0x29c6d1(%rip)        # ffffffff802b1140 <m_random_order_count>
ffffffff80014a6f:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
ffffffff80014a76:	e9 9f 00 00 00       	jmp    ffffffff80014b1a <random_order_init+0xc3>
ffffffff80014a7b:	8b 55 ec             	mov    -0x14(%rbp),%edx
ffffffff80014a7e:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff80014a81:	89 d6                	mov    %edx,%esi
ffffffff80014a83:	89 c7                	mov    %eax,%edi
ffffffff80014a85:	e8 94 ff ff ff       	call   ffffffff80014a1e <gcd>
ffffffff80014a8a:	83 f8 01             	cmp    $0x1,%eax
ffffffff80014a8d:	0f 85 83 00 00 00    	jne    ffffffff80014b16 <random_order_init+0xbf>
ffffffff80014a93:	48 8b 05 ae c6 29 00 	mov    0x29c6ae(%rip),%rax        # ffffffff802b1148 <m_random_order_coprimes>
ffffffff80014a9a:	48 85 c0             	test   %rax,%rax
ffffffff80014a9d:	74 26                	je     ffffffff80014ac5 <random_order_init+0x6e>
ffffffff80014a9f:	48 8b 05 a2 c6 29 00 	mov    0x29c6a2(%rip),%rax        # ffffffff802b1148 <m_random_order_coprimes>
ffffffff80014aa6:	48 83 e8 20          	sub    $0x20,%rax
ffffffff80014aaa:	48 8b 00             	mov    (%rax),%rax
ffffffff80014aad:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffff80014ab1:	48 8b 05 90 c6 29 00 	mov    0x29c690(%rip),%rax        # ffffffff802b1148 <m_random_order_coprimes>
ffffffff80014ab8:	48 83 e8 20          	sub    $0x20,%rax
ffffffff80014abc:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff80014ac0:	48 39 c2             	cmp    %rax,%rdx
ffffffff80014ac3:	76 25                	jbe    ffffffff80014aea <random_order_init+0x93>
ffffffff80014ac5:	48 8b 05 7c c6 29 00 	mov    0x29c67c(%rip),%rax        # ffffffff802b1148 <m_random_order_coprimes>
ffffffff80014acc:	b9 00 00 00 00       	mov    $0x0,%ecx
ffffffff80014ad1:	ba 01 00 00 00       	mov    $0x1,%edx
ffffffff80014ad6:	be 04 00 00 00       	mov    $0x4,%esi
ffffffff80014adb:	48 89 c7             	mov    %rax,%rdi
ffffffff80014ade:	e8 85 a4 ff ff       	call   ffffffff8000ef68 <stbds_arrgrowf>
ffffffff80014ae3:	48 89 05 5e c6 29 00 	mov    %rax,0x29c65e(%rip)        # ffffffff802b1148 <m_random_order_coprimes>
ffffffff80014aea:	48 8b 35 57 c6 29 00 	mov    0x29c657(%rip),%rsi        # ffffffff802b1148 <m_random_order_coprimes>
ffffffff80014af1:	48 8b 05 50 c6 29 00 	mov    0x29c650(%rip),%rax        # ffffffff802b1148 <m_random_order_coprimes>
ffffffff80014af8:	48 83 e8 20          	sub    $0x20,%rax
ffffffff80014afc:	48 8b 10             	mov    (%rax),%rdx
ffffffff80014aff:	48 8d 4a 01          	lea    0x1(%rdx),%rcx
ffffffff80014b03:	48 89 08             	mov    %rcx,(%rax)
ffffffff80014b06:	48 8d 04 95 00 00 00 	lea    0x0(,%rdx,4),%rax
ffffffff80014b0d:	00 
ffffffff80014b0e:	48 01 f0             	add    %rsi,%rax
ffffffff80014b11:	8b 55 fc             	mov    -0x4(%rbp),%edx
ffffffff80014b14:	89 10                	mov    %edx,(%rax)
ffffffff80014b16:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
ffffffff80014b1a:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff80014b1d:	3b 45 ec             	cmp    -0x14(%rbp),%eax
ffffffff80014b20:	0f 8e 55 ff ff ff    	jle    ffffffff80014a7b <random_order_init+0x24>
ffffffff80014b26:	90                   	nop
ffffffff80014b27:	90                   	nop
ffffffff80014b28:	c9                   	leave  
ffffffff80014b29:	c3                   	ret    

ffffffff80014b2a <random_order_start>:
ffffffff80014b2a:	f3 0f 1e fa          	endbr64 
ffffffff80014b2e:	55                   	push   %rbp
ffffffff80014b2f:	48 89 e5             	mov    %rsp,%rbp
ffffffff80014b32:	53                   	push   %rbx
ffffffff80014b33:	48 83 ec 18          	sub    $0x18,%rsp
ffffffff80014b37:	89 7d ec             	mov    %edi,-0x14(%rbp)
ffffffff80014b3a:	8b 3d 00 c6 29 00    	mov    0x29c600(%rip),%edi        # ffffffff802b1140 <m_random_order_count>
ffffffff80014b40:	8b 0d fa c5 29 00    	mov    0x29c5fa(%rip),%ecx        # ffffffff802b1140 <m_random_order_count>
ffffffff80014b46:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff80014b49:	ba 00 00 00 00       	mov    $0x0,%edx
ffffffff80014b4e:	f7 f1                	div    %ecx
ffffffff80014b50:	41 89 d0             	mov    %edx,%r8d
ffffffff80014b53:	48 8b 35 ee c5 29 00 	mov    0x29c5ee(%rip),%rsi        # ffffffff802b1148 <m_random_order_coprimes>
ffffffff80014b5a:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff80014b5d:	48 8b 15 e4 c5 29 00 	mov    0x29c5e4(%rip),%rdx        # ffffffff802b1148 <m_random_order_coprimes>
ffffffff80014b64:	48 85 d2             	test   %rdx,%rdx
ffffffff80014b67:	74 13                	je     ffffffff80014b7c <random_order_start+0x52>
ffffffff80014b69:	48 8b 15 d8 c5 29 00 	mov    0x29c5d8(%rip),%rdx        # ffffffff802b1148 <m_random_order_coprimes>
ffffffff80014b70:	48 83 ea 20          	sub    $0x20,%rdx
ffffffff80014b74:	48 8b 12             	mov    (%rdx),%rdx
ffffffff80014b77:	48 89 d1             	mov    %rdx,%rcx
ffffffff80014b7a:	eb 05                	jmp    ffffffff80014b81 <random_order_start+0x57>
ffffffff80014b7c:	b9 00 00 00 00       	mov    $0x0,%ecx
ffffffff80014b81:	48 99                	cqto   
ffffffff80014b83:	48 f7 f9             	idiv   %rcx
ffffffff80014b86:	48 89 d0             	mov    %rdx,%rax
ffffffff80014b89:	48 c1 e0 02          	shl    $0x2,%rax
ffffffff80014b8d:	48 01 f0             	add    %rsi,%rax
ffffffff80014b90:	8b 30                	mov    (%rax),%esi
ffffffff80014b92:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80014b97:	ba 00 00 00 00       	mov    $0x0,%edx
ffffffff80014b9c:	89 f9                	mov    %edi,%ecx
ffffffff80014b9e:	48 c1 e1 20          	shl    $0x20,%rcx
ffffffff80014ba2:	48 89 c7             	mov    %rax,%rdi
ffffffff80014ba5:	89 ff                	mov    %edi,%edi
ffffffff80014ba7:	48 09 f9             	or     %rdi,%rcx
ffffffff80014baa:	48 89 c8             	mov    %rcx,%rax
ffffffff80014bad:	44 89 c7             	mov    %r8d,%edi
ffffffff80014bb0:	49 89 d0             	mov    %rdx,%r8
ffffffff80014bb3:	48 b9 00 00 00 00 ff 	movabs $0xffffffff00000000,%rcx
ffffffff80014bba:	ff ff ff 
ffffffff80014bbd:	4c 21 c1             	and    %r8,%rcx
ffffffff80014bc0:	48 09 f9             	or     %rdi,%rcx
ffffffff80014bc3:	48 89 ca             	mov    %rcx,%rdx
ffffffff80014bc6:	89 f1                	mov    %esi,%ecx
ffffffff80014bc8:	48 c1 e1 20          	shl    $0x20,%rcx
ffffffff80014bcc:	48 89 d6             	mov    %rdx,%rsi
ffffffff80014bcf:	89 f6                	mov    %esi,%esi
ffffffff80014bd1:	48 09 f1             	or     %rsi,%rcx
ffffffff80014bd4:	48 89 ca             	mov    %rcx,%rdx
ffffffff80014bd7:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
ffffffff80014bdb:	c9                   	leave  
ffffffff80014bdc:	c3                   	ret    

ffffffff80014bdd <random_enum_done>:
ffffffff80014bdd:	f3 0f 1e fa          	endbr64 
ffffffff80014be1:	55                   	push   %rbp
ffffffff80014be2:	48 89 e5             	mov    %rsp,%rbp
ffffffff80014be5:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80014be9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff80014bed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80014bf1:	8b 10                	mov    (%rax),%edx
ffffffff80014bf3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80014bf7:	8b 40 04             	mov    0x4(%rax),%eax
ffffffff80014bfa:	39 c2                	cmp    %eax,%edx
ffffffff80014bfc:	0f 94 c0             	sete   %al
ffffffff80014bff:	c9                   	leave  
ffffffff80014c00:	c3                   	ret    

ffffffff80014c01 <random_enum_next>:
ffffffff80014c01:	f3 0f 1e fa          	endbr64 
ffffffff80014c05:	55                   	push   %rbp
ffffffff80014c06:	48 89 e5             	mov    %rsp,%rbp
ffffffff80014c09:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80014c0d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff80014c11:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80014c15:	8b 00                	mov    (%rax),%eax
ffffffff80014c17:	8d 50 01             	lea    0x1(%rax),%edx
ffffffff80014c1a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80014c1e:	89 10                	mov    %edx,(%rax)
ffffffff80014c20:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80014c24:	8b 50 08             	mov    0x8(%rax),%edx
ffffffff80014c27:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80014c2b:	8b 40 0c             	mov    0xc(%rax),%eax
ffffffff80014c2e:	01 d0                	add    %edx,%eax
ffffffff80014c30:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff80014c34:	8b 4a 04             	mov    0x4(%rdx),%ecx
ffffffff80014c37:	ba 00 00 00 00       	mov    $0x0,%edx
ffffffff80014c3c:	f7 f1                	div    %ecx
ffffffff80014c3e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80014c42:	89 50 08             	mov    %edx,0x8(%rax)
ffffffff80014c45:	90                   	nop
ffffffff80014c46:	c9                   	leave  
ffffffff80014c47:	c3                   	ret    

ffffffff80014c48 <random_enum_position>:
ffffffff80014c48:	f3 0f 1e fa          	endbr64 
ffffffff80014c4c:	55                   	push   %rbp
ffffffff80014c4d:	48 89 e5             	mov    %rsp,%rbp
ffffffff80014c50:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80014c54:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff80014c58:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80014c5c:	8b 40 08             	mov    0x8(%rax),%eax
ffffffff80014c5f:	c9                   	leave  
ffffffff80014c60:	c3                   	ret    

ffffffff80014c61 <mul64>:
ffffffff80014c61:	f3 0f 1e fa          	endbr64 
ffffffff80014c65:	55                   	push   %rbp
ffffffff80014c66:	48 89 e5             	mov    %rsp,%rbp
ffffffff80014c69:	53                   	push   %rbx
ffffffff80014c6a:	48 83 ec 18          	sub    $0x18,%rsp
ffffffff80014c6e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff80014c72:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
ffffffff80014c76:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
ffffffff80014c7a:	48 89 f1             	mov    %rsi,%rcx
ffffffff80014c7d:	bb 00 00 00 00       	mov    $0x0,%ebx
ffffffff80014c82:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
ffffffff80014c86:	48 89 f0             	mov    %rsi,%rax
ffffffff80014c89:	ba 00 00 00 00       	mov    $0x0,%edx
ffffffff80014c8e:	48 89 df             	mov    %rbx,%rdi
ffffffff80014c91:	48 0f af f8          	imul   %rax,%rdi
ffffffff80014c95:	48 89 d6             	mov    %rdx,%rsi
ffffffff80014c98:	48 0f af f1          	imul   %rcx,%rsi
ffffffff80014c9c:	48 01 fe             	add    %rdi,%rsi
ffffffff80014c9f:	48 f7 e1             	mul    %rcx
ffffffff80014ca2:	48 8d 0c 16          	lea    (%rsi,%rdx,1),%rcx
ffffffff80014ca6:	48 89 ca             	mov    %rcx,%rdx
ffffffff80014ca9:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
ffffffff80014cad:	c9                   	leave  
ffffffff80014cae:	c3                   	ret    

ffffffff80014caf <fastrandom>:
ffffffff80014caf:	f3 0f 1e fa          	endbr64 
ffffffff80014cb3:	55                   	push   %rbp
ffffffff80014cb4:	48 89 e5             	mov    %rsp,%rbp
ffffffff80014cb7:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff80014cbb:	65 48 8b 15 ad b3 fe 	mov    %gs:0x7ffeb3ad(%rip),%rdx        # 70 <m_fast_rand>
ffffffff80014cc2:	7f 
ffffffff80014cc3:	48 b8 2f 64 bd 78 64 	movabs $0xa0761d6478bd642f,%rax
ffffffff80014cca:	1d 76 a0 
ffffffff80014ccd:	48 01 d0             	add    %rdx,%rax
ffffffff80014cd0:	65 48 89 05 98 b3 fe 	mov    %rax,%gs:0x7ffeb398(%rip)        # 70 <m_fast_rand>
ffffffff80014cd7:	7f 
ffffffff80014cd8:	65 48 8b 15 90 b3 fe 	mov    %gs:0x7ffeb390(%rip),%rdx        # 70 <m_fast_rand>
ffffffff80014cdf:	7f 
ffffffff80014ce0:	48 b8 db 28 b4 a0 d1 	movabs $0xe7037ed1a0b428db,%rax
ffffffff80014ce7:	7e 03 e7 
ffffffff80014cea:	48 31 c2             	xor    %rax,%rdx
ffffffff80014ced:	65 48 8b 05 7b b3 fe 	mov    %gs:0x7ffeb37b(%rip),%rax        # 70 <m_fast_rand>
ffffffff80014cf4:	7f 
ffffffff80014cf5:	48 89 d6             	mov    %rdx,%rsi
ffffffff80014cf8:	48 89 c7             	mov    %rax,%rdi
ffffffff80014cfb:	e8 61 ff ff ff       	call   ffffffff80014c61 <mul64>
ffffffff80014d00:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff80014d04:	48 89 55 f8          	mov    %rdx,-0x8(%rbp)
ffffffff80014d08:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80014d0c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff80014d10:	48 89 d0             	mov    %rdx,%rax
ffffffff80014d13:	31 d2                	xor    %edx,%edx
ffffffff80014d15:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff80014d19:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80014d1d:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff80014d21:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80014d25:	89 c2                	mov    %eax,%edx
ffffffff80014d27:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80014d2b:	31 d0                	xor    %edx,%eax
ffffffff80014d2d:	c9                   	leave  
ffffffff80014d2e:	c3                   	ret    

ffffffff80014d2f <steal_work>:
ffffffff80014d2f:	f3 0f 1e fa          	endbr64 
ffffffff80014d33:	55                   	push   %rbp
ffffffff80014d34:	48 89 e5             	mov    %rsp,%rbp
ffffffff80014d37:	48 83 ec 30          	sub    $0x30,%rsp
ffffffff80014d3b:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
ffffffff80014d42:	e9 9f 00 00 00       	jmp    ffffffff80014de6 <steal_work+0xb7>
ffffffff80014d47:	83 7d fc 03          	cmpl   $0x3,-0x4(%rbp)
ffffffff80014d4b:	0f 94 c0             	sete   %al
ffffffff80014d4e:	88 45 fb             	mov    %al,-0x5(%rbp)
ffffffff80014d51:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80014d56:	e8 54 ff ff ff       	call   ffffffff80014caf <fastrandom>
ffffffff80014d5b:	89 c7                	mov    %eax,%edi
ffffffff80014d5d:	e8 c8 fd ff ff       	call   ffffffff80014b2a <random_order_start>
ffffffff80014d62:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
ffffffff80014d66:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
ffffffff80014d6a:	eb 63                	jmp    ffffffff80014dcf <steal_work+0xa0>
ffffffff80014d6c:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
ffffffff80014d70:	48 89 c7             	mov    %rax,%rdi
ffffffff80014d73:	e8 d0 fe ff ff       	call   ffffffff80014c48 <random_enum_position>
ffffffff80014d78:	89 45 f4             	mov    %eax,-0xc(%rbp)
ffffffff80014d7b:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80014d80:	e8 aa 08 00 00       	call   ffffffff8001562f <get_cpu_id>
ffffffff80014d85:	39 45 f4             	cmp    %eax,-0xc(%rbp)
ffffffff80014d88:	74 35                	je     ffffffff80014dbf <steal_work+0x90>
ffffffff80014d8a:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff80014d8d:	48 98                	cltq   
ffffffff80014d8f:	48 8b 15 92 c3 29 00 	mov    0x29c392(%rip),%rdx        # ffffffff802b1128 <m_idle_cpus>
ffffffff80014d96:	48 21 d0             	and    %rdx,%rax
ffffffff80014d99:	48 85 c0             	test   %rax,%rax
ffffffff80014d9c:	75 24                	jne    ffffffff80014dc2 <steal_work+0x93>
ffffffff80014d9e:	0f b6 45 fb          	movzbl -0x5(%rbp),%eax
ffffffff80014da2:	8b 55 f4             	mov    -0xc(%rbp),%edx
ffffffff80014da5:	89 c6                	mov    %eax,%esi
ffffffff80014da7:	89 d7                	mov    %edx,%edi
ffffffff80014da9:	e8 95 f5 ff ff       	call   ffffffff80014343 <run_queue_steal>
ffffffff80014dae:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff80014db2:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
ffffffff80014db7:	74 0a                	je     ffffffff80014dc3 <steal_work+0x94>
ffffffff80014db9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80014dbd:	eb 37                	jmp    ffffffff80014df6 <steal_work+0xc7>
ffffffff80014dbf:	90                   	nop
ffffffff80014dc0:	eb 01                	jmp    ffffffff80014dc3 <steal_work+0x94>
ffffffff80014dc2:	90                   	nop
ffffffff80014dc3:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
ffffffff80014dc7:	48 89 c7             	mov    %rax,%rdi
ffffffff80014dca:	e8 32 fe ff ff       	call   ffffffff80014c01 <random_enum_next>
ffffffff80014dcf:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
ffffffff80014dd3:	48 89 c7             	mov    %rax,%rdi
ffffffff80014dd6:	e8 02 fe ff ff       	call   ffffffff80014bdd <random_enum_done>
ffffffff80014ddb:	83 f0 01             	xor    $0x1,%eax
ffffffff80014dde:	84 c0                	test   %al,%al
ffffffff80014de0:	75 8a                	jne    ffffffff80014d6c <steal_work+0x3d>
ffffffff80014de2:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
ffffffff80014de6:	83 7d fc 03          	cmpl   $0x3,-0x4(%rbp)
ffffffff80014dea:	0f 8e 57 ff ff ff    	jle    ffffffff80014d47 <steal_work+0x18>
ffffffff80014df0:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80014df5:	90                   	nop
ffffffff80014df6:	c9                   	leave  
ffffffff80014df7:	c3                   	ret    

ffffffff80014df8 <find_runnable>:
ffffffff80014df8:	f3 0f 1e fa          	endbr64 
ffffffff80014dfc:	55                   	push   %rbp
ffffffff80014dfd:	48 89 e5             	mov    %rsp,%rbp
ffffffff80014e00:	53                   	push   %rbx
ffffffff80014e01:	48 83 ec 38          	sub    $0x38,%rsp
ffffffff80014e05:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
ffffffff80014e09:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
ffffffff80014e10:	00 
ffffffff80014e11:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80014e15:	48 89 c7             	mov    %rax,%rdi
ffffffff80014e18:	e8 b7 f1 ff ff       	call   ffffffff80013fd4 <run_queue_get>
ffffffff80014e1d:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff80014e21:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
ffffffff80014e26:	74 11                	je     ffffffff80014e39 <find_runnable+0x41>
ffffffff80014e28:	65 c6 05 48 b2 fe 7f 	movb   $0x0,%gs:0x7ffeb248(%rip)        # 78 <m_spinning>
ffffffff80014e2f:	00 
ffffffff80014e30:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80014e34:	e9 88 01 00 00       	jmp    ffffffff80014fc1 <find_runnable+0x1c9>
ffffffff80014e39:	8b 05 e1 c2 29 00    	mov    0x29c2e1(%rip),%eax        # ffffffff802b1120 <m_global_run_queue_size>
ffffffff80014e3f:	85 c0                	test   %eax,%eax
ffffffff80014e41:	74 41                	je     ffffffff80014e84 <find_runnable+0x8c>
ffffffff80014e43:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80014e48:	e8 d3 ed ff ff       	call   ffffffff80013c20 <lock_scheduler>
ffffffff80014e4d:	bf 00 00 00 00       	mov    $0x0,%edi
ffffffff80014e52:	e8 e5 ec ff ff       	call   ffffffff80013b3c <global_run_queue_get>
ffffffff80014e57:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff80014e5b:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80014e60:	e8 d5 ed ff ff       	call   ffffffff80013c3a <unlock_scheduler>
ffffffff80014e65:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
ffffffff80014e6a:	74 18                	je     ffffffff80014e84 <find_runnable+0x8c>
ffffffff80014e6c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80014e70:	c6 00 00             	movb   $0x0,(%rax)
ffffffff80014e73:	65 c6 05 fd b1 fe 7f 	movb   $0x0,%gs:0x7ffeb1fd(%rip)        # 78 <m_spinning>
ffffffff80014e7a:	00 
ffffffff80014e7b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80014e7f:	e9 3d 01 00 00       	jmp    ffffffff80014fc1 <find_runnable+0x1c9>
ffffffff80014e84:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80014e89:	e8 92 ed ff ff       	call   ffffffff80013c20 <lock_scheduler>
ffffffff80014e8e:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80014e93:	e8 97 07 00 00       	call   ffffffff8001562f <get_cpu_id>
ffffffff80014e98:	ba 01 00 00 00       	mov    $0x1,%edx
ffffffff80014e9d:	89 c1                	mov    %eax,%ecx
ffffffff80014e9f:	d3 e2                	shl    %cl,%edx
ffffffff80014ea1:	89 d0                	mov    %edx,%eax
ffffffff80014ea3:	48 98                	cltq   
ffffffff80014ea5:	48 8b 15 7c c2 29 00 	mov    0x29c27c(%rip),%rdx        # ffffffff802b1128 <m_idle_cpus>
ffffffff80014eac:	48 09 d0             	or     %rdx,%rax
ffffffff80014eaf:	48 89 05 72 c2 29 00 	mov    %rax,0x29c272(%rip)        # ffffffff802b1128 <m_idle_cpus>
ffffffff80014eb6:	8b 05 74 c2 29 00    	mov    0x29c274(%rip),%eax        # ffffffff802b1130 <m_idle_cpus_count>
ffffffff80014ebc:	83 c0 01             	add    $0x1,%eax
ffffffff80014ebf:	89 05 6b c2 29 00    	mov    %eax,0x29c26b(%rip)        # ffffffff802b1130 <m_idle_cpus_count>
ffffffff80014ec5:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80014eca:	e8 6b ed ff ff       	call   ffffffff80013c3a <unlock_scheduler>
ffffffff80014ecf:	65 0f b6 05 a1 b1 fe 	movzbl %gs:0x7ffeb1a1(%rip),%eax        # 78 <m_spinning>
ffffffff80014ed6:	7f 
ffffffff80014ed7:	84 c0                	test   %al,%al
ffffffff80014ed9:	75 46                	jne    ffffffff80014f21 <find_runnable+0x129>
ffffffff80014edb:	48 8d 05 6e c2 29 00 	lea    0x29c26e(%rip),%rax        # ffffffff802b1150 <m_number_spinning>
ffffffff80014ee2:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff80014ee6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80014eea:	8b 00                	mov    (%rax),%eax
ffffffff80014eec:	89 45 d0             	mov    %eax,-0x30(%rbp)
ffffffff80014eef:	8b 45 d0             	mov    -0x30(%rbp),%eax
ffffffff80014ef2:	01 c0                	add    %eax,%eax
ffffffff80014ef4:	89 c3                	mov    %eax,%ebx
ffffffff80014ef6:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80014efb:	e8 28 d2 fe ff       	call   ffffffff80002128 <get_cpu_count>
ffffffff80014f00:	48 8d 15 29 c2 29 00 	lea    0x29c229(%rip),%rdx        # ffffffff802b1130 <m_idle_cpus_count>
ffffffff80014f07:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
ffffffff80014f0b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff80014f0f:	8b 12                	mov    (%rdx),%edx
ffffffff80014f11:	89 55 d4             	mov    %edx,-0x2c(%rbp)
ffffffff80014f14:	8b 55 d4             	mov    -0x2c(%rbp),%edx
ffffffff80014f17:	89 d2                	mov    %edx,%edx
ffffffff80014f19:	48 29 d0             	sub    %rdx,%rax
ffffffff80014f1c:	48 39 c3             	cmp    %rax,%rbx
ffffffff80014f1f:	73 49                	jae    ffffffff80014f6a <find_runnable+0x172>
ffffffff80014f21:	65 0f b6 05 4f b1 fe 	movzbl %gs:0x7ffeb14f(%rip),%eax        # 78 <m_spinning>
ffffffff80014f28:	7f 
ffffffff80014f29:	83 f0 01             	xor    $0x1,%eax
ffffffff80014f2c:	84 c0                	test   %al,%al
ffffffff80014f2e:	74 10                	je     ffffffff80014f40 <find_runnable+0x148>
ffffffff80014f30:	65 c6 05 40 b1 fe 7f 	movb   $0x1,%gs:0x7ffeb140(%rip)        # 78 <m_spinning>
ffffffff80014f37:	01 
ffffffff80014f38:	f0 83 05 10 c2 29 00 	lock addl $0x1,0x29c210(%rip)        # ffffffff802b1150 <m_number_spinning>
ffffffff80014f3f:	01 
ffffffff80014f40:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80014f45:	e8 e5 fd ff ff       	call   ffffffff80014d2f <steal_work>
ffffffff80014f4a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff80014f4e:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
ffffffff80014f53:	74 15                	je     ffffffff80014f6a <find_runnable+0x172>
ffffffff80014f55:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80014f59:	c6 00 00             	movb   $0x0,(%rax)
ffffffff80014f5c:	65 c6 05 14 b1 fe 7f 	movb   $0x0,%gs:0x7ffeb114(%rip)        # 78 <m_spinning>
ffffffff80014f63:	00 
ffffffff80014f64:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80014f68:	eb 57                	jmp    ffffffff80014fc1 <find_runnable+0x1c9>
ffffffff80014f6a:	fb                   	sti    
ffffffff80014f6b:	90                   	nop
ffffffff80014f6c:	f4                   	hlt    
ffffffff80014f6d:	fa                   	cli    
ffffffff80014f6e:	90                   	nop
ffffffff80014f6f:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80014f74:	e8 a7 ec ff ff       	call   ffffffff80013c20 <lock_scheduler>
ffffffff80014f79:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80014f7e:	e8 ac 06 00 00       	call   ffffffff8001562f <get_cpu_id>
ffffffff80014f83:	ba 01 00 00 00       	mov    $0x1,%edx
ffffffff80014f88:	89 c1                	mov    %eax,%ecx
ffffffff80014f8a:	d3 e2                	shl    %cl,%edx
ffffffff80014f8c:	89 d0                	mov    %edx,%eax
ffffffff80014f8e:	f7 d0                	not    %eax
ffffffff80014f90:	48 98                	cltq   
ffffffff80014f92:	48 8b 15 8f c1 29 00 	mov    0x29c18f(%rip),%rdx        # ffffffff802b1128 <m_idle_cpus>
ffffffff80014f99:	48 21 d0             	and    %rdx,%rax
ffffffff80014f9c:	48 89 05 85 c1 29 00 	mov    %rax,0x29c185(%rip)        # ffffffff802b1128 <m_idle_cpus>
ffffffff80014fa3:	8b 05 87 c1 29 00    	mov    0x29c187(%rip),%eax        # ffffffff802b1130 <m_idle_cpus_count>
ffffffff80014fa9:	83 e8 01             	sub    $0x1,%eax
ffffffff80014fac:	89 05 7e c1 29 00    	mov    %eax,0x29c17e(%rip)        # ffffffff802b1130 <m_idle_cpus_count>
ffffffff80014fb2:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80014fb7:	e8 7e ec ff ff       	call   ffffffff80013c3a <unlock_scheduler>
ffffffff80014fbc:	e9 50 fe ff ff       	jmp    ffffffff80014e11 <find_runnable+0x19>
ffffffff80014fc1:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
ffffffff80014fc5:	c9                   	leave  
ffffffff80014fc6:	c3                   	ret    

ffffffff80014fc7 <schedule>:
ffffffff80014fc7:	f3 0f 1e fa          	endbr64 
ffffffff80014fcb:	55                   	push   %rbp
ffffffff80014fcc:	48 89 e5             	mov    %rsp,%rbp
ffffffff80014fcf:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff80014fd3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff80014fd7:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
ffffffff80014fde:	00 
ffffffff80014fdf:	c6 45 f7 00          	movb   $0x0,-0x9(%rbp)
ffffffff80014fe3:	65 8b 15 7e b0 fe 7f 	mov    %gs:0x7ffeb07e(%rip),%edx        # 68 <m_scheduler_tick>
ffffffff80014fea:	48 63 c2             	movslq %edx,%rax
ffffffff80014fed:	48 69 c0 3f c5 25 43 	imul   $0x4325c53f,%rax,%rax
ffffffff80014ff4:	48 c1 e8 20          	shr    $0x20,%rax
ffffffff80014ff8:	c1 f8 04             	sar    $0x4,%eax
ffffffff80014ffb:	89 d1                	mov    %edx,%ecx
ffffffff80014ffd:	c1 f9 1f             	sar    $0x1f,%ecx
ffffffff80015000:	29 c8                	sub    %ecx,%eax
ffffffff80015002:	6b c8 3d             	imul   $0x3d,%eax,%ecx
ffffffff80015005:	89 d0                	mov    %edx,%eax
ffffffff80015007:	29 c8                	sub    %ecx,%eax
ffffffff80015009:	85 c0                	test   %eax,%eax
ffffffff8001500b:	75 2c                	jne    ffffffff80015039 <schedule+0x72>
ffffffff8001500d:	8b 05 0d c1 29 00    	mov    0x29c10d(%rip),%eax        # ffffffff802b1120 <m_global_run_queue_size>
ffffffff80015013:	85 c0                	test   %eax,%eax
ffffffff80015015:	7e 22                	jle    ffffffff80015039 <schedule+0x72>
ffffffff80015017:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001501c:	e8 ff eb ff ff       	call   ffffffff80013c20 <lock_scheduler>
ffffffff80015021:	bf 01 00 00 00       	mov    $0x1,%edi
ffffffff80015026:	e8 11 eb ff ff       	call   ffffffff80013b3c <global_run_queue_get>
ffffffff8001502b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8001502f:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80015034:	e8 01 ec ff ff       	call   ffffffff80013c3a <unlock_scheduler>
ffffffff80015039:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff8001503e:	75 10                	jne    ffffffff80015050 <schedule+0x89>
ffffffff80015040:	48 8d 45 f7          	lea    -0x9(%rbp),%rax
ffffffff80015044:	48 89 c7             	mov    %rax,%rdi
ffffffff80015047:	e8 88 ef ff ff       	call   ffffffff80013fd4 <run_queue_get>
ffffffff8001504c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff80015050:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff80015055:	75 10                	jne    ffffffff80015067 <schedule+0xa0>
ffffffff80015057:	48 8d 45 f7          	lea    -0x9(%rbp),%rax
ffffffff8001505b:	48 89 c7             	mov    %rax,%rdi
ffffffff8001505e:	e8 95 fd ff ff       	call   ffffffff80014df8 <find_runnable>
ffffffff80015063:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff80015067:	0f b6 45 f7          	movzbl -0x9(%rbp),%eax
ffffffff8001506b:	0f b6 c0             	movzbl %al,%eax
ffffffff8001506e:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
ffffffff80015072:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
ffffffff80015076:	89 c2                	mov    %eax,%edx
ffffffff80015078:	48 89 cf             	mov    %rcx,%rdi
ffffffff8001507b:	e8 eb f8 ff ff       	call   ffffffff8001496b <execute>
ffffffff80015080:	90                   	nop
ffffffff80015081:	c9                   	leave  
ffffffff80015082:	c3                   	ret    

ffffffff80015083 <scheduler_on_schedule>:
ffffffff80015083:	f3 0f 1e fa          	endbr64 
ffffffff80015087:	55                   	push   %rbp
ffffffff80015088:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001508b:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff8001508f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff80015093:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80015098:	e8 88 03 00 00       	call   ffffffff80015425 <get_current_thread>
ffffffff8001509d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff800150a1:	65 48 c7 05 b3 af fe 	movq   $0x0,%gs:0x7ffeafb3(%rip)        # 60 <m_current_thread>
ffffffff800150a8:	7f 00 00 00 00 
ffffffff800150ad:	44 0f 20 c0          	mov    %cr8,%rax
ffffffff800150b1:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff800150b5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff800150b9:	48 83 f8 05          	cmp    $0x5,%rax
ffffffff800150bd:	76 3d                	jbe    ffffffff800150fc <scheduler_on_schedule+0x79>
ffffffff800150bf:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800150c4:	e8 18 1c ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff800150c9:	48 89 c6             	mov    %rax,%rsi
ffffffff800150cc:	41 b8 86 03 00 00    	mov    $0x386,%r8d
ffffffff800150d2:	48 8d 05 9d 33 02 00 	lea    0x2339d(%rip),%rax        # ffffffff80038476 <g_stivale2_header+0x1476>
ffffffff800150d9:	48 89 c1             	mov    %rax,%rcx
ffffffff800150dc:	48 8d 05 2d 8a 02 00 	lea    0x28a2d(%rip),%rax        # ffffffff8003db10 <__FUNCTION__.4.lto_priv.3>
ffffffff800150e3:	48 89 c2             	mov    %rax,%rdx
ffffffff800150e6:	48 8d 05 d3 76 02 00 	lea    0x276d3(%rip),%rax        # ffffffff8003c7c0 <g_stivale2_header+0x57c0>
ffffffff800150ed:	48 89 c7             	mov    %rax,%rdi
ffffffff800150f0:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800150f5:	e8 46 e4 ff ff       	call   ffffffff80013540 <printf_>
ffffffff800150fa:	0f 0b                	ud2    
ffffffff800150fc:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff80015100:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80015104:	48 89 d6             	mov    %rdx,%rsi
ffffffff80015107:	48 89 c7             	mov    %rax,%rdi
ffffffff8001510a:	e8 c3 09 00 00       	call   ffffffff80015ad2 <save_thread_context>
ffffffff8001510f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80015113:	0f b6 80 d9 00 00 00 	movzbl 0xd9(%rax),%eax
ffffffff8001511a:	84 c0                	test   %al,%al
ffffffff8001511c:	74 18                	je     ffffffff80015136 <scheduler_on_schedule+0xb3>
ffffffff8001511e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80015122:	ba 04 00 00 00       	mov    $0x4,%edx
ffffffff80015127:	be 02 00 00 00       	mov    $0x2,%esi
ffffffff8001512c:	48 89 c7             	mov    %rax,%rdi
ffffffff8001512f:	e8 e0 07 00 00       	call   ffffffff80015914 <cas_thread_state>
ffffffff80015134:	eb 36                	jmp    ffffffff8001516c <scheduler_on_schedule+0xe9>
ffffffff80015136:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001513a:	ba 01 00 00 00       	mov    $0x1,%edx
ffffffff8001513f:	be 02 00 00 00       	mov    $0x2,%esi
ffffffff80015144:	48 89 c7             	mov    %rax,%rdi
ffffffff80015147:	e8 c8 07 00 00       	call   ffffffff80015914 <cas_thread_state>
ffffffff8001514c:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80015151:	e8 ca ea ff ff       	call   ffffffff80013c20 <lock_scheduler>
ffffffff80015156:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001515a:	48 89 c7             	mov    %rax,%rdi
ffffffff8001515d:	e8 a2 e9 ff ff       	call   ffffffff80013b04 <global_run_queue_put>
ffffffff80015162:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80015167:	e8 ce ea ff ff       	call   ffffffff80013c3a <unlock_scheduler>
ffffffff8001516c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80015170:	48 89 c7             	mov    %rax,%rdi
ffffffff80015173:	e8 4f fe ff ff       	call   ffffffff80014fc7 <schedule>
ffffffff80015178:	90                   	nop
ffffffff80015179:	c9                   	leave  
ffffffff8001517a:	c3                   	ret    

ffffffff8001517b <scheduler_on_yield>:
ffffffff8001517b:	f3 0f 1e fa          	endbr64 
ffffffff8001517f:	55                   	push   %rbp
ffffffff80015180:	48 89 e5             	mov    %rsp,%rbp
ffffffff80015183:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff80015187:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff8001518b:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80015190:	e8 90 02 00 00       	call   ffffffff80015425 <get_current_thread>
ffffffff80015195:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff80015199:	65 48 c7 05 bb ae fe 	movq   $0x0,%gs:0x7ffeaebb(%rip)        # 60 <m_current_thread>
ffffffff800151a0:	7f 00 00 00 00 
ffffffff800151a5:	44 0f 20 c0          	mov    %cr8,%rax
ffffffff800151a9:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff800151ad:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff800151b1:	48 83 f8 05          	cmp    $0x5,%rax
ffffffff800151b5:	76 3d                	jbe    ffffffff800151f4 <scheduler_on_yield+0x79>
ffffffff800151b7:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800151bc:	e8 20 1b ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff800151c1:	48 89 c6             	mov    %rax,%rsi
ffffffff800151c4:	41 b8 a2 03 00 00    	mov    $0x3a2,%r8d
ffffffff800151ca:	48 8d 05 a5 32 02 00 	lea    0x232a5(%rip),%rax        # ffffffff80038476 <g_stivale2_header+0x1476>
ffffffff800151d1:	48 89 c1             	mov    %rax,%rcx
ffffffff800151d4:	48 8d 05 55 89 02 00 	lea    0x28955(%rip),%rax        # ffffffff8003db30 <__FUNCTION__.3.lto_priv.3>
ffffffff800151db:	48 89 c2             	mov    %rax,%rdx
ffffffff800151de:	48 8d 05 db 75 02 00 	lea    0x275db(%rip),%rax        # ffffffff8003c7c0 <g_stivale2_header+0x57c0>
ffffffff800151e5:	48 89 c7             	mov    %rax,%rdi
ffffffff800151e8:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800151ed:	e8 4e e3 ff ff       	call   ffffffff80013540 <printf_>
ffffffff800151f2:	0f 0b                	ud2    
ffffffff800151f4:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff800151f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff800151fc:	48 89 d6             	mov    %rdx,%rsi
ffffffff800151ff:	48 89 c7             	mov    %rax,%rdi
ffffffff80015202:	e8 cb 08 00 00       	call   ffffffff80015ad2 <save_thread_context>
ffffffff80015207:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001520b:	ba 01 00 00 00       	mov    $0x1,%edx
ffffffff80015210:	be 02 00 00 00       	mov    $0x2,%esi
ffffffff80015215:	48 89 c7             	mov    %rax,%rdi
ffffffff80015218:	e8 f7 06 00 00       	call   ffffffff80015914 <cas_thread_state>
ffffffff8001521d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80015221:	be 00 00 00 00       	mov    $0x0,%esi
ffffffff80015226:	48 89 c7             	mov    %rax,%rdi
ffffffff80015229:	e8 6b ec ff ff       	call   ffffffff80013e99 <run_queue_put>
ffffffff8001522e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80015232:	48 89 c7             	mov    %rax,%rdi
ffffffff80015235:	e8 8d fd ff ff       	call   ffffffff80014fc7 <schedule>
ffffffff8001523a:	90                   	nop
ffffffff8001523b:	c9                   	leave  
ffffffff8001523c:	c3                   	ret    

ffffffff8001523d <scheduler_on_park>:
ffffffff8001523d:	f3 0f 1e fa          	endbr64 
ffffffff80015241:	55                   	push   %rbp
ffffffff80015242:	48 89 e5             	mov    %rsp,%rbp
ffffffff80015245:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff80015249:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff8001524d:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80015252:	e8 ce 01 00 00       	call   ffffffff80015425 <get_current_thread>
ffffffff80015257:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8001525b:	65 48 c7 05 f9 ad fe 	movq   $0x0,%gs:0x7ffeadf9(%rip)        # 60 <m_current_thread>
ffffffff80015262:	7f 00 00 00 00 
ffffffff80015267:	44 0f 20 c0          	mov    %cr8,%rax
ffffffff8001526b:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff8001526f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80015273:	48 83 f8 05          	cmp    $0x5,%rax
ffffffff80015277:	76 3d                	jbe    ffffffff800152b6 <scheduler_on_park+0x79>
ffffffff80015279:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001527e:	e8 5e 1a ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff80015283:	48 89 c6             	mov    %rax,%rsi
ffffffff80015286:	41 b8 b3 03 00 00    	mov    $0x3b3,%r8d
ffffffff8001528c:	48 8d 05 e3 31 02 00 	lea    0x231e3(%rip),%rax        # ffffffff80038476 <g_stivale2_header+0x1476>
ffffffff80015293:	48 89 c1             	mov    %rax,%rcx
ffffffff80015296:	48 8d 05 b3 88 02 00 	lea    0x288b3(%rip),%rax        # ffffffff8003db50 <__FUNCTION__.2.lto_priv.4>
ffffffff8001529d:	48 89 c2             	mov    %rax,%rdx
ffffffff800152a0:	48 8d 05 19 75 02 00 	lea    0x27519(%rip),%rax        # ffffffff8003c7c0 <g_stivale2_header+0x57c0>
ffffffff800152a7:	48 89 c7             	mov    %rax,%rdi
ffffffff800152aa:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800152af:	e8 8c e2 ff ff       	call   ffffffff80013540 <printf_>
ffffffff800152b4:	0f 0b                	ud2    
ffffffff800152b6:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff800152ba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff800152be:	48 89 d6             	mov    %rdx,%rsi
ffffffff800152c1:	48 89 c7             	mov    %rax,%rdi
ffffffff800152c4:	e8 09 08 00 00       	call   ffffffff80015ad2 <save_thread_context>
ffffffff800152c9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff800152cd:	ba 03 00 00 00       	mov    $0x3,%edx
ffffffff800152d2:	be 02 00 00 00       	mov    $0x2,%esi
ffffffff800152d7:	48 89 c7             	mov    %rax,%rdi
ffffffff800152da:	e8 35 06 00 00       	call   ffffffff80015914 <cas_thread_state>
ffffffff800152df:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff800152e3:	48 8b 80 e8 00 00 00 	mov    0xe8(%rax),%rax
ffffffff800152ea:	48 85 c0             	test   %rax,%rax
ffffffff800152ed:	74 22                	je     ffffffff80015311 <scheduler_on_park+0xd4>
ffffffff800152ef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff800152f3:	48 8b 80 e8 00 00 00 	mov    0xe8(%rax),%rax
ffffffff800152fa:	48 89 c7             	mov    %rax,%rdi
ffffffff800152fd:	e8 db cb fe ff       	call   ffffffff80001edd <spinlock_unlock>
ffffffff80015302:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80015306:	48 c7 80 e8 00 00 00 	movq   $0x0,0xe8(%rax)
ffffffff8001530d:	00 00 00 00 
ffffffff80015311:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80015315:	48 89 c7             	mov    %rax,%rdi
ffffffff80015318:	e8 aa fc ff ff       	call   ffffffff80014fc7 <schedule>
ffffffff8001531d:	90                   	nop
ffffffff8001531e:	c9                   	leave  
ffffffff8001531f:	c3                   	ret    

ffffffff80015320 <scheduler_on_drop>:
ffffffff80015320:	f3 0f 1e fa          	endbr64 
ffffffff80015324:	55                   	push   %rbp
ffffffff80015325:	48 89 e5             	mov    %rsp,%rbp
ffffffff80015328:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff8001532c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff80015330:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80015335:	e8 eb 00 00 00       	call   ffffffff80015425 <get_current_thread>
ffffffff8001533a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8001533e:	65 48 c7 05 16 ad fe 	movq   $0x0,%gs:0x7ffead16(%rip)        # 60 <m_current_thread>
ffffffff80015345:	7f 00 00 00 00 
ffffffff8001534a:	44 0f 20 c0          	mov    %cr8,%rax
ffffffff8001534e:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff80015352:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80015356:	48 83 f8 05          	cmp    $0x5,%rax
ffffffff8001535a:	76 3d                	jbe    ffffffff80015399 <scheduler_on_drop+0x79>
ffffffff8001535c:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80015361:	e8 7b 19 ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff80015366:	48 89 c6             	mov    %rax,%rsi
ffffffff80015369:	41 b8 c9 03 00 00    	mov    $0x3c9,%r8d
ffffffff8001536f:	48 8d 05 00 31 02 00 	lea    0x23100(%rip),%rax        # ffffffff80038476 <g_stivale2_header+0x1476>
ffffffff80015376:	48 89 c1             	mov    %rax,%rcx
ffffffff80015379:	48 8d 05 f0 87 02 00 	lea    0x287f0(%rip),%rax        # ffffffff8003db70 <__FUNCTION__.1.lto_priv.6>
ffffffff80015380:	48 89 c2             	mov    %rax,%rdx
ffffffff80015383:	48 8d 05 36 74 02 00 	lea    0x27436(%rip),%rax        # ffffffff8003c7c0 <g_stivale2_header+0x57c0>
ffffffff8001538a:	48 89 c7             	mov    %rax,%rdi
ffffffff8001538d:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80015392:	e8 a9 e1 ff ff       	call   ffffffff80013540 <printf_>
ffffffff80015397:	0f 0b                	ud2    
ffffffff80015399:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff8001539e:	74 21                	je     ffffffff800153c1 <scheduler_on_drop+0xa1>
ffffffff800153a0:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800153a5:	e8 37 19 ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff800153aa:	48 89 c6             	mov    %rax,%rsi
ffffffff800153ad:	48 8d 05 9c 7e 02 00 	lea    0x27e9c(%rip),%rax        # ffffffff8003d250 <g_stivale2_header+0x6250>
ffffffff800153b4:	48 89 c7             	mov    %rax,%rdi
ffffffff800153b7:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800153bc:	e8 7f e1 ff ff       	call   ffffffff80013540 <printf_>
ffffffff800153c1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800153c5:	48 89 c7             	mov    %rax,%rdi
ffffffff800153c8:	e8 fa fb ff ff       	call   ffffffff80014fc7 <schedule>
ffffffff800153cd:	90                   	nop
ffffffff800153ce:	c9                   	leave  
ffffffff800153cf:	c3                   	ret    

ffffffff800153d0 <scheduler_schedule>:
ffffffff800153d0:	f3 0f 1e fa          	endbr64 
ffffffff800153d4:	55                   	push   %rbp
ffffffff800153d5:	48 89 e5             	mov    %rsp,%rbp
ffffffff800153d8:	cd f0                	int    $0xf0
ffffffff800153da:	90                   	nop
ffffffff800153db:	5d                   	pop    %rbp
ffffffff800153dc:	c3                   	ret    

ffffffff800153dd <scheduler_yield>:
ffffffff800153dd:	f3 0f 1e fa          	endbr64 
ffffffff800153e1:	55                   	push   %rbp
ffffffff800153e2:	48 89 e5             	mov    %rsp,%rbp
ffffffff800153e5:	cd f1                	int    $0xf1
ffffffff800153e7:	90                   	nop
ffffffff800153e8:	5d                   	pop    %rbp
ffffffff800153e9:	c3                   	ret    

ffffffff800153ea <scheduler_park>:
ffffffff800153ea:	f3 0f 1e fa          	endbr64 
ffffffff800153ee:	55                   	push   %rbp
ffffffff800153ef:	48 89 e5             	mov    %rsp,%rbp
ffffffff800153f2:	cd f2                	int    $0xf2
ffffffff800153f4:	90                   	nop
ffffffff800153f5:	5d                   	pop    %rbp
ffffffff800153f6:	c3                   	ret    

ffffffff800153f7 <scheduler_drop_current>:
ffffffff800153f7:	f3 0f 1e fa          	endbr64 
ffffffff800153fb:	55                   	push   %rbp
ffffffff800153fc:	48 89 e5             	mov    %rsp,%rbp
ffffffff800153ff:	cd f3                	int    $0xf3
ffffffff80015401:	90                   	nop
ffffffff80015402:	5d                   	pop    %rbp
ffffffff80015403:	c3                   	ret    

ffffffff80015404 <scheduler_startup>:
ffffffff80015404:	f3 0f 1e fa          	endbr64 
ffffffff80015408:	55                   	push   %rbp
ffffffff80015409:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001540c:	b8 05 00 00 00       	mov    $0x5,%eax
ffffffff80015411:	44 0f 22 c0          	mov    %rax,%cr8
ffffffff80015415:	90                   	nop
ffffffff80015416:	fb                   	sti    
ffffffff80015417:	90                   	nop
ffffffff80015418:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001541d:	e8 d5 ff ff ff       	call   ffffffff800153f7 <scheduler_drop_current>
ffffffff80015422:	90                   	nop
ffffffff80015423:	5d                   	pop    %rbp
ffffffff80015424:	c3                   	ret    

ffffffff80015425 <get_current_thread>:
ffffffff80015425:	f3 0f 1e fa          	endbr64 
ffffffff80015429:	55                   	push   %rbp
ffffffff8001542a:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001542d:	65 48 8b 05 2b ac fe 	mov    %gs:0x7ffeac2b(%rip),%rax        # 60 <m_current_thread>
ffffffff80015434:	7f 
ffffffff80015435:	5d                   	pop    %rbp
ffffffff80015436:	c3                   	ret    

ffffffff80015437 <init_scheduler>:
ffffffff80015437:	f3 0f 1e fa          	endbr64 
ffffffff8001543b:	55                   	push   %rbp
ffffffff8001543c:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001543f:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff80015443:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
ffffffff8001544a:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001544f:	e8 d4 cc fe ff       	call   ffffffff80002128 <get_cpu_count>
ffffffff80015454:	89 c7                	mov    %eax,%edi
ffffffff80015456:	e8 fc f5 ff ff       	call   ffffffff80014a57 <random_order_init>
ffffffff8001545b:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80015460:	e8 c3 cc fe ff       	call   ffffffff80002128 <get_cpu_count>
ffffffff80015465:	48 69 c0 10 08 00 00 	imul   $0x810,%rax,%rax
ffffffff8001546c:	48 89 c7             	mov    %rax,%rdi
ffffffff8001546f:	e8 c8 63 ff ff       	call   ffffffff8000b83c <malloc>
ffffffff80015474:	48 89 05 bd bc 29 00 	mov    %rax,0x29bcbd(%rip)        # ffffffff802b1138 <m_run_queues>
ffffffff8001547b:	48 8b 05 b6 bc 29 00 	mov    0x29bcb6(%rip),%rax        # ffffffff802b1138 <m_run_queues>
ffffffff80015482:	48 85 c0             	test   %rax,%rax
ffffffff80015485:	75 46                	jne    ffffffff800154cd <init_scheduler+0x96>
ffffffff80015487:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)
ffffffff8001548e:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80015493:	e8 49 18 ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff80015498:	48 89 c6             	mov    %rax,%rsi
ffffffff8001549b:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8001549e:	41 b9 0d 04 00 00    	mov    $0x40d,%r9d
ffffffff800154a4:	4c 8d 05 cb 2f 02 00 	lea    0x22fcb(%rip),%r8        # ffffffff80038476 <g_stivale2_header+0x1476>
ffffffff800154ab:	48 8d 15 d6 86 02 00 	lea    0x286d6(%rip),%rdx        # ffffffff8003db88 <__FUNCTION__.0.lto_priv.10>
ffffffff800154b2:	48 89 d1             	mov    %rdx,%rcx
ffffffff800154b5:	89 c2                	mov    %eax,%edx
ffffffff800154b7:	48 8d 05 ba 72 02 00 	lea    0x272ba(%rip),%rax        # ffffffff8003c778 <g_stivale2_header+0x5778>
ffffffff800154be:	48 89 c7             	mov    %rax,%rdi
ffffffff800154c1:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800154c6:	e8 75 e0 ff ff       	call   ffffffff80013540 <printf_>
ffffffff800154cb:	eb 01                	jmp    ffffffff800154ce <init_scheduler+0x97>
ffffffff800154cd:	90                   	nop
ffffffff800154ce:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff800154d1:	90                   	nop
ffffffff800154d2:	90                   	nop
ffffffff800154d3:	c9                   	leave  
ffffffff800154d4:	c3                   	ret    

ffffffff800154d5 <init_cpu_locals>:
ffffffff800154d5:	f3 0f 1e fa          	endbr64 
ffffffff800154d9:	55                   	push   %rbp
ffffffff800154da:	48 89 e5             	mov    %rsp,%rbp
ffffffff800154dd:	53                   	push   %rbx
ffffffff800154de:	48 83 ec 28          	sub    $0x28,%rsp
ffffffff800154e2:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
ffffffff800154e9:	48 c7 c0 b4 04 00 00 	mov    $0x4b4,%rax
ffffffff800154f0:	48 89 c7             	mov    %rax,%rdi
ffffffff800154f3:	e8 44 63 ff ff       	call   ffffffff8000b83c <malloc>
ffffffff800154f8:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff800154fc:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
ffffffff80015501:	75 49                	jne    ffffffff8001554c <init_cpu_locals+0x77>
ffffffff80015503:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%rbp)
ffffffff8001550a:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001550f:	e8 cd 17 ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff80015514:	48 89 c6             	mov    %rax,%rsi
ffffffff80015517:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff8001551a:	41 b9 16 00 00 00    	mov    $0x16,%r9d
ffffffff80015520:	4c 8d 05 6c 2f 02 00 	lea    0x22f6c(%rip),%r8        # ffffffff80038493 <g_stivale2_header+0x1493>
ffffffff80015527:	48 8d 15 72 86 02 00 	lea    0x28672(%rip),%rdx        # ffffffff8003dba0 <__FUNCTION__.0.lto_priv.11>
ffffffff8001552e:	48 89 d1             	mov    %rdx,%rcx
ffffffff80015531:	89 c2                	mov    %eax,%edx
ffffffff80015533:	48 8d 05 3e 72 02 00 	lea    0x2723e(%rip),%rax        # ffffffff8003c778 <g_stivale2_header+0x5778>
ffffffff8001553a:	48 89 c7             	mov    %rax,%rdi
ffffffff8001553d:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80015542:	e8 f9 df ff ff       	call   ffffffff80013540 <printf_>
ffffffff80015547:	e9 85 00 00 00       	jmp    ffffffff800155d1 <init_cpu_locals+0xfc>
ffffffff8001554c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80015550:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
ffffffff80015554:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80015558:	48 c1 e8 20          	shr    $0x20,%rax
ffffffff8001555c:	89 c2                	mov    %eax,%edx
ffffffff8001555e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80015562:	b9 01 01 00 c0       	mov    $0xc0000101,%ecx
ffffffff80015567:	0f 30                	wrmsr  
ffffffff80015569:	90                   	nop
ffffffff8001556a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8001556e:	65 48 89 05 0a ab fe 	mov    %rax,%gs:0x7ffeab0a(%rip)        # 80 <m_per_cpu_base>
ffffffff80015575:	7f 
ffffffff80015576:	48 8b 05 db bb 29 00 	mov    0x29bbdb(%rip),%rax        # ffffffff802b1158 <m_per_cpu_base_list>
ffffffff8001557d:	48 85 c0             	test   %rax,%rax
ffffffff80015580:	75 1d                	jne    ffffffff8001559f <init_cpu_locals+0xca>
ffffffff80015582:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80015587:	e8 9c cb fe ff       	call   ffffffff80002128 <get_cpu_count>
ffffffff8001558c:	48 c1 e0 03          	shl    $0x3,%rax
ffffffff80015590:	48 89 c7             	mov    %rax,%rdi
ffffffff80015593:	e8 a4 62 ff ff       	call   ffffffff8000b83c <malloc>
ffffffff80015598:	48 89 05 b9 bb 29 00 	mov    %rax,0x29bbb9(%rip)        # ffffffff802b1158 <m_per_cpu_base_list>
ffffffff8001559f:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800155a4:	e8 38 17 ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff800155a9:	65 89 05 d8 aa fe 7f 	mov    %eax,%gs:0x7ffeaad8(%rip)        # 88 <m_cpu_id>
ffffffff800155b0:	48 8b 1d a1 bb 29 00 	mov    0x29bba1(%rip),%rbx        # ffffffff802b1158 <m_per_cpu_base_list>
ffffffff800155b7:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800155bc:	e8 6e 00 00 00       	call   ffffffff8001562f <get_cpu_id>
ffffffff800155c1:	48 98                	cltq   
ffffffff800155c3:	48 c1 e0 03          	shl    $0x3,%rax
ffffffff800155c7:	48 01 d8             	add    %rbx,%rax
ffffffff800155ca:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff800155ce:	48 89 10             	mov    %rdx,(%rax)
ffffffff800155d1:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff800155d4:	90                   	nop
ffffffff800155d5:	90                   	nop
ffffffff800155d6:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
ffffffff800155da:	c9                   	leave  
ffffffff800155db:	c3                   	ret    

ffffffff800155dc <get_cpu_local_base>:
ffffffff800155dc:	f3 0f 1e fa          	endbr64 
ffffffff800155e0:	55                   	push   %rbp
ffffffff800155e1:	48 89 e5             	mov    %rsp,%rbp
ffffffff800155e4:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff800155e8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff800155ec:	65 48 8b 15 8c aa fe 	mov    %gs:0x7ffeaa8c(%rip),%rdx        # 80 <m_per_cpu_base>
ffffffff800155f3:	7f 
ffffffff800155f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff800155f8:	48 01 d0             	add    %rdx,%rax
ffffffff800155fb:	c9                   	leave  
ffffffff800155fc:	c3                   	ret    

ffffffff800155fd <get_cpu_base>:
ffffffff800155fd:	f3 0f 1e fa          	endbr64 
ffffffff80015601:	55                   	push   %rbp
ffffffff80015602:	48 89 e5             	mov    %rsp,%rbp
ffffffff80015605:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff80015609:	89 7d fc             	mov    %edi,-0x4(%rbp)
ffffffff8001560c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff80015610:	48 8b 15 41 bb 29 00 	mov    0x29bb41(%rip),%rdx        # ffffffff802b1158 <m_per_cpu_base_list>
ffffffff80015617:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8001561a:	48 98                	cltq   
ffffffff8001561c:	48 c1 e0 03          	shl    $0x3,%rax
ffffffff80015620:	48 01 d0             	add    %rdx,%rax
ffffffff80015623:	48 8b 10             	mov    (%rax),%rdx
ffffffff80015626:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8001562a:	48 01 d0             	add    %rdx,%rax
ffffffff8001562d:	c9                   	leave  
ffffffff8001562e:	c3                   	ret    

ffffffff8001562f <get_cpu_id>:
ffffffff8001562f:	f3 0f 1e fa          	endbr64 
ffffffff80015633:	55                   	push   %rbp
ffffffff80015634:	48 89 e5             	mov    %rsp,%rbp
ffffffff80015637:	65 8b 05 4a aa fe 7f 	mov    %gs:0x7ffeaa4a(%rip),%eax        # 88 <m_cpu_id>
ffffffff8001563e:	5d                   	pop    %rbp
ffffffff8001563f:	c3                   	ret    

ffffffff80015640 <acquire_waiting_thread>:
ffffffff80015640:	f3 0f 1e fa          	endbr64 
ffffffff80015644:	55                   	push   %rbp
ffffffff80015645:	48 89 e5             	mov    %rsp,%rbp
ffffffff80015648:	53                   	push   %rbx
ffffffff80015649:	48 83 ec 18          	sub    $0x18,%rsp
ffffffff8001564d:	e8 49 f2 ff ff       	call   ffffffff8001489b <scheduler_preempt_disable>
ffffffff80015652:	65 0f b6 05 46 ae fe 	movzbl %gs:0x7ffeae46(%rip),%eax        # 4a0 <m_wt_cache_len>
ffffffff80015659:	7f 
ffffffff8001565a:	84 c0                	test   %al,%al
ffffffff8001565c:	0f 85 cf 00 00 00    	jne    ffffffff80015731 <acquire_waiting_thread+0xf1>
ffffffff80015662:	48 8d 05 f7 ba 29 00 	lea    0x29baf7(%rip),%rax        # ffffffff802b1160 <m_global_wt_lock>
ffffffff80015669:	48 89 c7             	mov    %rax,%rdi
ffffffff8001566c:	e8 9d c7 fe ff       	call   ffffffff80001e0e <spinlock_lock>
ffffffff80015671:	eb 55                	jmp    ffffffff800156c8 <acquire_waiting_thread+0x88>
ffffffff80015673:	48 8b 05 ee ba 29 00 	mov    0x29baee(%rip),%rax        # ffffffff802b1168 <m_global_wt_cache>
ffffffff8001567a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff8001567e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80015682:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff80015686:	48 89 05 db ba 29 00 	mov    %rax,0x29badb(%rip)        # ffffffff802b1168 <m_global_wt_cache>
ffffffff8001568d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80015691:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
ffffffff80015698:	00 
ffffffff80015699:	65 0f b6 05 ff ad fe 	movzbl %gs:0x7ffeadff(%rip),%eax        # 4a0 <m_wt_cache_len>
ffffffff800156a0:	7f 
ffffffff800156a1:	8d 50 01             	lea    0x1(%rax),%edx
ffffffff800156a4:	65 88 15 f5 ad fe 7f 	mov    %dl,%gs:0x7ffeadf5(%rip)        # 4a0 <m_wt_cache_len>
ffffffff800156ab:	0f b6 c0             	movzbl %al,%eax
ffffffff800156ae:	48 98                	cltq   
ffffffff800156b0:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
ffffffff800156b7:	00 
ffffffff800156b8:	48 8d 05 e1 a9 fe 7f 	lea    0x7ffea9e1(%rip),%rax        # a0 <m_wt_cache>
ffffffff800156bf:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
ffffffff800156c3:	65 48 89 0c 02       	mov    %rcx,%gs:(%rdx,%rax,1)
ffffffff800156c8:	65 0f b6 05 d0 ad fe 	movzbl %gs:0x7ffeadd0(%rip),%eax        # 4a0 <m_wt_cache_len>
ffffffff800156cf:	7f 
ffffffff800156d0:	3c 3f                	cmp    $0x3f,%al
ffffffff800156d2:	77 0c                	ja     ffffffff800156e0 <acquire_waiting_thread+0xa0>
ffffffff800156d4:	48 8b 05 8d ba 29 00 	mov    0x29ba8d(%rip),%rax        # ffffffff802b1168 <m_global_wt_cache>
ffffffff800156db:	48 85 c0             	test   %rax,%rax
ffffffff800156de:	75 93                	jne    ffffffff80015673 <acquire_waiting_thread+0x33>
ffffffff800156e0:	48 8d 05 79 ba 29 00 	lea    0x29ba79(%rip),%rax        # ffffffff802b1160 <m_global_wt_lock>
ffffffff800156e7:	48 89 c7             	mov    %rax,%rdi
ffffffff800156ea:	e8 ee c7 fe ff       	call   ffffffff80001edd <spinlock_unlock>
ffffffff800156ef:	65 0f b6 05 a9 ad fe 	movzbl %gs:0x7ffeada9(%rip),%eax        # 4a0 <m_wt_cache_len>
ffffffff800156f6:	7f 
ffffffff800156f7:	84 c0                	test   %al,%al
ffffffff800156f9:	75 36                	jne    ffffffff80015731 <acquire_waiting_thread+0xf1>
ffffffff800156fb:	65 0f b6 05 9d ad fe 	movzbl %gs:0x7ffead9d(%rip),%eax        # 4a0 <m_wt_cache_len>
ffffffff80015702:	7f 
ffffffff80015703:	8d 50 01             	lea    0x1(%rax),%edx
ffffffff80015706:	65 88 15 93 ad fe 7f 	mov    %dl,%gs:0x7ffead93(%rip)        # 4a0 <m_wt_cache_len>
ffffffff8001570d:	0f b6 d8             	movzbl %al,%ebx
ffffffff80015710:	bf 28 00 00 00       	mov    $0x28,%edi
ffffffff80015715:	e8 22 61 ff ff       	call   ffffffff8000b83c <malloc>
ffffffff8001571a:	48 63 d3             	movslq %ebx,%rdx
ffffffff8001571d:	48 8d 0c d5 00 00 00 	lea    0x0(,%rdx,8),%rcx
ffffffff80015724:	00 
ffffffff80015725:	48 8d 15 74 a9 fe 7f 	lea    0x7ffea974(%rip),%rdx        # a0 <m_wt_cache>
ffffffff8001572c:	65 48 89 04 11       	mov    %rax,%gs:(%rcx,%rdx,1)
ffffffff80015731:	65 0f b6 05 67 ad fe 	movzbl %gs:0x7ffead67(%rip),%eax        # 4a0 <m_wt_cache_len>
ffffffff80015738:	7f 
ffffffff80015739:	83 e8 01             	sub    $0x1,%eax
ffffffff8001573c:	65 88 05 5d ad fe 7f 	mov    %al,%gs:0x7ffead5d(%rip)        # 4a0 <m_wt_cache_len>
ffffffff80015743:	65 0f b6 05 55 ad fe 	movzbl %gs:0x7ffead55(%rip),%eax        # 4a0 <m_wt_cache_len>
ffffffff8001574a:	7f 
ffffffff8001574b:	0f b6 c0             	movzbl %al,%eax
ffffffff8001574e:	48 98                	cltq   
ffffffff80015750:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
ffffffff80015757:	00 
ffffffff80015758:	48 8d 05 41 a9 fe 7f 	lea    0x7ffea941(%rip),%rax        # a0 <m_wt_cache>
ffffffff8001575f:	65 48 8b 04 02       	mov    %gs:(%rdx,%rax,1),%rax
ffffffff80015764:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff80015768:	65 0f b6 05 30 ad fe 	movzbl %gs:0x7ffead30(%rip),%eax        # 4a0 <m_wt_cache_len>
ffffffff8001576f:	7f 
ffffffff80015770:	0f b6 c0             	movzbl %al,%eax
ffffffff80015773:	48 98                	cltq   
ffffffff80015775:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
ffffffff8001577c:	00 
ffffffff8001577d:	48 8d 05 1c a9 fe 7f 	lea    0x7ffea91c(%rip),%rax        # a0 <m_wt_cache>
ffffffff80015784:	65 48 c7 04 02 00 00 	movq   $0x0,%gs:(%rdx,%rax,1)
ffffffff8001578b:	00 00 
ffffffff8001578d:	e8 71 f1 ff ff       	call   ffffffff80014903 <scheduler_preempt_enable>
ffffffff80015792:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80015796:	90                   	nop
ffffffff80015797:	90                   	nop
ffffffff80015798:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
ffffffff8001579c:	c9                   	leave  
ffffffff8001579d:	c3                   	ret    

ffffffff8001579e <release_waiting_thread>:
ffffffff8001579e:	f3 0f 1e fa          	endbr64 
ffffffff800157a2:	55                   	push   %rbp
ffffffff800157a3:	48 89 e5             	mov    %rsp,%rbp
ffffffff800157a6:	48 83 ec 30          	sub    $0x30,%rsp
ffffffff800157aa:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
ffffffff800157ae:	9c                   	pushf  
ffffffff800157af:	58                   	pop    %rax
ffffffff800157b0:	25 00 02 00 00       	and    $0x200,%eax
ffffffff800157b5:	48 85 c0             	test   %rax,%rax
ffffffff800157b8:	0f 95 c0             	setne  %al
ffffffff800157bb:	88 45 ef             	mov    %al,-0x11(%rbp)
ffffffff800157be:	fa                   	cli    
ffffffff800157bf:	90                   	nop
ffffffff800157c0:	65 0f b6 05 d8 ac fe 	movzbl %gs:0x7ffeacd8(%rip),%eax        # 4a0 <m_wt_cache_len>
ffffffff800157c7:	7f 
ffffffff800157c8:	3c 80                	cmp    $0x80,%al
ffffffff800157ca:	0f 85 de 00 00 00    	jne    ffffffff800158ae <release_waiting_thread+0x110>
ffffffff800157d0:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
ffffffff800157d7:	00 
ffffffff800157d8:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
ffffffff800157df:	00 
ffffffff800157e0:	e9 81 00 00 00       	jmp    ffffffff80015866 <release_waiting_thread+0xc8>
ffffffff800157e5:	65 0f b6 05 b3 ac fe 	movzbl %gs:0x7ffeacb3(%rip),%eax        # 4a0 <m_wt_cache_len>
ffffffff800157ec:	7f 
ffffffff800157ed:	83 e8 01             	sub    $0x1,%eax
ffffffff800157f0:	65 88 05 a9 ac fe 7f 	mov    %al,%gs:0x7ffeaca9(%rip)        # 4a0 <m_wt_cache_len>
ffffffff800157f7:	65 0f b6 05 a1 ac fe 	movzbl %gs:0x7ffeaca1(%rip),%eax        # 4a0 <m_wt_cache_len>
ffffffff800157fe:	7f 
ffffffff800157ff:	0f b6 c0             	movzbl %al,%eax
ffffffff80015802:	48 98                	cltq   
ffffffff80015804:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
ffffffff8001580b:	00 
ffffffff8001580c:	48 8d 05 8d a8 fe 7f 	lea    0x7ffea88d(%rip),%rax        # a0 <m_wt_cache>
ffffffff80015813:	65 48 8b 04 02       	mov    %gs:(%rdx,%rax,1),%rax
ffffffff80015818:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff8001581c:	65 0f b6 05 7c ac fe 	movzbl %gs:0x7ffeac7c(%rip),%eax        # 4a0 <m_wt_cache_len>
ffffffff80015823:	7f 
ffffffff80015824:	0f b6 c0             	movzbl %al,%eax
ffffffff80015827:	48 98                	cltq   
ffffffff80015829:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
ffffffff80015830:	00 
ffffffff80015831:	48 8d 05 68 a8 fe 7f 	lea    0x7ffea868(%rip),%rax        # a0 <m_wt_cache>
ffffffff80015838:	65 48 c7 04 02 00 00 	movq   $0x0,%gs:(%rdx,%rax,1)
ffffffff8001583f:	00 00 
ffffffff80015841:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff80015846:	75 0a                	jne    ffffffff80015852 <release_waiting_thread+0xb4>
ffffffff80015848:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8001584c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff80015850:	eb 0c                	jmp    ffffffff8001585e <release_waiting_thread+0xc0>
ffffffff80015852:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80015856:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff8001585a:	48 89 50 08          	mov    %rdx,0x8(%rax)
ffffffff8001585e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80015862:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff80015866:	65 0f b6 05 32 ac fe 	movzbl %gs:0x7ffeac32(%rip),%eax        # 4a0 <m_wt_cache_len>
ffffffff8001586d:	7f 
ffffffff8001586e:	3c 40                	cmp    $0x40,%al
ffffffff80015870:	0f 87 6f ff ff ff    	ja     ffffffff800157e5 <release_waiting_thread+0x47>
ffffffff80015876:	48 8d 05 e3 b8 29 00 	lea    0x29b8e3(%rip),%rax        # ffffffff802b1160 <m_global_wt_lock>
ffffffff8001587d:	48 89 c7             	mov    %rax,%rdi
ffffffff80015880:	e8 89 c5 fe ff       	call   ffffffff80001e0e <spinlock_lock>
ffffffff80015885:	48 8b 15 dc b8 29 00 	mov    0x29b8dc(%rip),%rdx        # ffffffff802b1168 <m_global_wt_cache>
ffffffff8001588c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80015890:	48 89 50 08          	mov    %rdx,0x8(%rax)
ffffffff80015894:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80015898:	48 89 05 c9 b8 29 00 	mov    %rax,0x29b8c9(%rip)        # ffffffff802b1168 <m_global_wt_cache>
ffffffff8001589f:	48 8d 05 ba b8 29 00 	lea    0x29b8ba(%rip),%rax        # ffffffff802b1160 <m_global_wt_lock>
ffffffff800158a6:	48 89 c7             	mov    %rax,%rdi
ffffffff800158a9:	e8 2f c6 fe ff       	call   ffffffff80001edd <spinlock_unlock>
ffffffff800158ae:	65 0f b6 05 ea ab fe 	movzbl %gs:0x7ffeabea(%rip),%eax        # 4a0 <m_wt_cache_len>
ffffffff800158b5:	7f 
ffffffff800158b6:	8d 50 01             	lea    0x1(%rax),%edx
ffffffff800158b9:	65 88 15 e0 ab fe 7f 	mov    %dl,%gs:0x7ffeabe0(%rip)        # 4a0 <m_wt_cache_len>
ffffffff800158c0:	0f b6 c0             	movzbl %al,%eax
ffffffff800158c3:	48 98                	cltq   
ffffffff800158c5:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
ffffffff800158cc:	00 
ffffffff800158cd:	48 8d 05 cc a7 fe 7f 	lea    0x7ffea7cc(%rip),%rax        # a0 <m_wt_cache>
ffffffff800158d4:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
ffffffff800158d8:	65 48 89 0c 02       	mov    %rcx,%gs:(%rdx,%rax,1)
ffffffff800158dd:	80 7d ef 00          	cmpb   $0x0,-0x11(%rbp)
ffffffff800158e1:	74 02                	je     ffffffff800158e5 <release_waiting_thread+0x147>
ffffffff800158e3:	fb                   	sti    
ffffffff800158e4:	90                   	nop
ffffffff800158e5:	90                   	nop
ffffffff800158e6:	c9                   	leave  
ffffffff800158e7:	c3                   	ret    

ffffffff800158e8 <get_thread_status>:
ffffffff800158e8:	f3 0f 1e fa          	endbr64 
ffffffff800158ec:	55                   	push   %rbp
ffffffff800158ed:	48 89 e5             	mov    %rsp,%rbp
ffffffff800158f0:	48 83 ec 18          	sub    $0x18,%rsp
ffffffff800158f4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff800158f8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800158fc:	48 05 dc 00 00 00    	add    $0xdc,%rax
ffffffff80015902:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff80015906:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001590a:	8b 00                	mov    (%rax),%eax
ffffffff8001590c:	89 45 f4             	mov    %eax,-0xc(%rbp)
ffffffff8001590f:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff80015912:	c9                   	leave  
ffffffff80015913:	c3                   	ret    

ffffffff80015914 <cas_thread_state>:
ffffffff80015914:	f3 0f 1e fa          	endbr64 
ffffffff80015918:	55                   	push   %rbp
ffffffff80015919:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001591c:	48 83 ec 30          	sub    $0x30,%rsp
ffffffff80015920:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
ffffffff80015924:	89 75 d4             	mov    %esi,-0x2c(%rbp)
ffffffff80015927:	89 55 d0             	mov    %edx,-0x30(%rbp)
ffffffff8001592a:	8b 45 d4             	mov    -0x2c(%rbp),%eax
ffffffff8001592d:	25 00 10 00 00       	and    $0x1000,%eax
ffffffff80015932:	85 c0                	test   %eax,%eax
ffffffff80015934:	74 3d                	je     ffffffff80015973 <cas_thread_state+0x5f>
ffffffff80015936:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001593b:	e8 a1 13 ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff80015940:	48 89 c6             	mov    %rax,%rsi
ffffffff80015943:	41 b8 8a 00 00 00    	mov    $0x8a,%r8d
ffffffff80015949:	48 8d 05 60 2b 02 00 	lea    0x22b60(%rip),%rax        # ffffffff800384b0 <g_stivale2_header+0x14b0>
ffffffff80015950:	48 89 c1             	mov    %rax,%rcx
ffffffff80015953:	48 8d 05 56 82 02 00 	lea    0x28256(%rip),%rax        # ffffffff8003dbb0 <__FUNCTION__.2.lto_priv.5>
ffffffff8001595a:	48 89 c2             	mov    %rax,%rdx
ffffffff8001595d:	48 8d 05 5c 6e 02 00 	lea    0x26e5c(%rip),%rax        # ffffffff8003c7c0 <g_stivale2_header+0x57c0>
ffffffff80015964:	48 89 c7             	mov    %rax,%rdi
ffffffff80015967:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001596c:	e8 cf db ff ff       	call   ffffffff80013540 <printf_>
ffffffff80015971:	0f 0b                	ud2    
ffffffff80015973:	8b 45 d0             	mov    -0x30(%rbp),%eax
ffffffff80015976:	25 00 10 00 00       	and    $0x1000,%eax
ffffffff8001597b:	85 c0                	test   %eax,%eax
ffffffff8001597d:	74 3d                	je     ffffffff800159bc <cas_thread_state+0xa8>
ffffffff8001597f:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80015984:	e8 58 13 ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff80015989:	48 89 c6             	mov    %rax,%rsi
ffffffff8001598c:	41 b8 8b 00 00 00    	mov    $0x8b,%r8d
ffffffff80015992:	48 8d 05 17 2b 02 00 	lea    0x22b17(%rip),%rax        # ffffffff800384b0 <g_stivale2_header+0x14b0>
ffffffff80015999:	48 89 c1             	mov    %rax,%rcx
ffffffff8001599c:	48 8d 05 0d 82 02 00 	lea    0x2820d(%rip),%rax        # ffffffff8003dbb0 <__FUNCTION__.2.lto_priv.5>
ffffffff800159a3:	48 89 c2             	mov    %rax,%rdx
ffffffff800159a6:	48 8d 05 13 6e 02 00 	lea    0x26e13(%rip),%rax        # ffffffff8003c7c0 <g_stivale2_header+0x57c0>
ffffffff800159ad:	48 89 c7             	mov    %rax,%rdi
ffffffff800159b0:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800159b5:	e8 86 db ff ff       	call   ffffffff80013540 <printf_>
ffffffff800159ba:	0f 0b                	ud2    
ffffffff800159bc:	8b 45 d4             	mov    -0x2c(%rbp),%eax
ffffffff800159bf:	3b 45 d0             	cmp    -0x30(%rbp),%eax
ffffffff800159c2:	75 3d                	jne    ffffffff80015a01 <cas_thread_state+0xed>
ffffffff800159c4:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800159c9:	e8 13 13 ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff800159ce:	48 89 c6             	mov    %rax,%rsi
ffffffff800159d1:	41 b8 8c 00 00 00    	mov    $0x8c,%r8d
ffffffff800159d7:	48 8d 05 d2 2a 02 00 	lea    0x22ad2(%rip),%rax        # ffffffff800384b0 <g_stivale2_header+0x14b0>
ffffffff800159de:	48 89 c1             	mov    %rax,%rcx
ffffffff800159e1:	48 8d 05 c8 81 02 00 	lea    0x281c8(%rip),%rax        # ffffffff8003dbb0 <__FUNCTION__.2.lto_priv.5>
ffffffff800159e8:	48 89 c2             	mov    %rax,%rdx
ffffffff800159eb:	48 8d 05 ce 6d 02 00 	lea    0x26dce(%rip),%rax        # ffffffff8003c7c0 <g_stivale2_header+0x57c0>
ffffffff800159f2:	48 89 c7             	mov    %rax,%rdi
ffffffff800159f5:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800159fa:	e8 41 db ff ff       	call   ffffffff80013540 <printf_>
ffffffff800159ff:	0f 0b                	ud2    
ffffffff80015a01:	8b 45 d4             	mov    -0x2c(%rbp),%eax
ffffffff80015a04:	89 45 ec             	mov    %eax,-0x14(%rbp)
ffffffff80015a07:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
ffffffff80015a0e:	e9 80 00 00 00       	jmp    ffffffff80015a93 <cas_thread_state+0x17f>
ffffffff80015a13:	83 7d d4 03          	cmpl   $0x3,-0x2c(%rbp)
ffffffff80015a17:	75 4c                	jne    ffffffff80015a65 <cas_thread_state+0x151>
ffffffff80015a19:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80015a1d:	8b 80 dc 00 00 00    	mov    0xdc(%rax),%eax
ffffffff80015a23:	83 f8 01             	cmp    $0x1,%eax
ffffffff80015a26:	75 3d                	jne    ffffffff80015a65 <cas_thread_state+0x151>
ffffffff80015a28:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80015a2d:	e8 af 12 ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff80015a32:	48 89 c6             	mov    %rax,%rsi
ffffffff80015a35:	41 b8 93 00 00 00    	mov    $0x93,%r8d
ffffffff80015a3b:	48 8d 05 6e 2a 02 00 	lea    0x22a6e(%rip),%rax        # ffffffff800384b0 <g_stivale2_header+0x14b0>
ffffffff80015a42:	48 89 c1             	mov    %rax,%rcx
ffffffff80015a45:	48 8d 05 64 81 02 00 	lea    0x28164(%rip),%rax        # ffffffff8003dbb0 <__FUNCTION__.2.lto_priv.5>
ffffffff80015a4c:	48 89 c2             	mov    %rax,%rdx
ffffffff80015a4f:	48 8d 05 6a 6d 02 00 	lea    0x26d6a(%rip),%rax        # ffffffff8003c7c0 <g_stivale2_header+0x57c0>
ffffffff80015a56:	48 89 c7             	mov    %rax,%rdi
ffffffff80015a59:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80015a5e:	e8 dd da ff ff       	call   ffffffff80013540 <printf_>
ffffffff80015a63:	0f 0b                	ud2    
ffffffff80015a65:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
ffffffff80015a6c:	eb 06                	jmp    ffffffff80015a74 <cas_thread_state+0x160>
ffffffff80015a6e:	f3 90                	pause  
ffffffff80015a70:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)
ffffffff80015a74:	83 7d f8 09          	cmpl   $0x9,-0x8(%rbp)
ffffffff80015a78:	7f 0f                	jg     ffffffff80015a89 <cas_thread_state+0x175>
ffffffff80015a7a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80015a7e:	8b 80 dc 00 00 00    	mov    0xdc(%rax),%eax
ffffffff80015a84:	39 45 d4             	cmp    %eax,-0x2c(%rbp)
ffffffff80015a87:	75 e5                	jne    ffffffff80015a6e <cas_thread_state+0x15a>
ffffffff80015a89:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
ffffffff80015a8d:	8b 45 d4             	mov    -0x2c(%rbp),%eax
ffffffff80015a90:	89 45 ec             	mov    %eax,-0x14(%rbp)
ffffffff80015a93:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80015a97:	48 05 dc 00 00 00    	add    $0xdc,%rax
ffffffff80015a9d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff80015aa1:	8b 45 d0             	mov    -0x30(%rbp),%eax
ffffffff80015aa4:	89 45 e8             	mov    %eax,-0x18(%rbp)
ffffffff80015aa7:	8b 4d e8             	mov    -0x18(%rbp),%ecx
ffffffff80015aaa:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
ffffffff80015aae:	48 8d 55 ec          	lea    -0x14(%rbp),%rdx
ffffffff80015ab2:	8b 02                	mov    (%rdx),%eax
ffffffff80015ab4:	f0 0f b1 0e          	lock cmpxchg %ecx,(%rsi)
ffffffff80015ab8:	89 c1                	mov    %eax,%ecx
ffffffff80015aba:	0f 94 c0             	sete   %al
ffffffff80015abd:	84 c0                	test   %al,%al
ffffffff80015abf:	75 02                	jne    ffffffff80015ac3 <cas_thread_state+0x1af>
ffffffff80015ac1:	89 0a                	mov    %ecx,(%rdx)
ffffffff80015ac3:	83 f0 01             	xor    $0x1,%eax
ffffffff80015ac6:	84 c0                	test   %al,%al
ffffffff80015ac8:	0f 85 45 ff ff ff    	jne    ffffffff80015a13 <cas_thread_state+0xff>
ffffffff80015ace:	90                   	nop
ffffffff80015acf:	90                   	nop
ffffffff80015ad0:	c9                   	leave  
ffffffff80015ad1:	c3                   	ret    

ffffffff80015ad2 <save_thread_context>:
ffffffff80015ad2:	f3 0f 1e fa          	endbr64 
ffffffff80015ad6:	55                   	push   %rbp
ffffffff80015ad7:	48 89 e5             	mov    %rsp,%rbp
ffffffff80015ada:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff80015ade:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff80015ae2:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
ffffffff80015ae6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80015aea:	48 83 c0 40          	add    $0x40,%rax
ffffffff80015aee:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff80015af2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80015af6:	48 8b 10             	mov    (%rax),%rdx
ffffffff80015af9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80015afd:	48 89 10             	mov    %rdx,(%rax)
ffffffff80015b00:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80015b04:	48 8b 50 08          	mov    0x8(%rax),%rdx
ffffffff80015b08:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80015b0c:	48 89 50 08          	mov    %rdx,0x8(%rax)
ffffffff80015b10:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80015b14:	48 8b 50 10          	mov    0x10(%rax),%rdx
ffffffff80015b18:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80015b1c:	48 89 50 10          	mov    %rdx,0x10(%rax)
ffffffff80015b20:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80015b24:	48 8b 50 18          	mov    0x18(%rax),%rdx
ffffffff80015b28:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80015b2c:	48 89 50 18          	mov    %rdx,0x18(%rax)
ffffffff80015b30:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80015b34:	48 8b 50 20          	mov    0x20(%rax),%rdx
ffffffff80015b38:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80015b3c:	48 89 50 20          	mov    %rdx,0x20(%rax)
ffffffff80015b40:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80015b44:	48 8b 50 28          	mov    0x28(%rax),%rdx
ffffffff80015b48:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80015b4c:	48 89 50 28          	mov    %rdx,0x28(%rax)
ffffffff80015b50:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80015b54:	48 8b 50 30          	mov    0x30(%rax),%rdx
ffffffff80015b58:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80015b5c:	48 89 50 30          	mov    %rdx,0x30(%rax)
ffffffff80015b60:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80015b64:	48 8b 50 38          	mov    0x38(%rax),%rdx
ffffffff80015b68:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80015b6c:	48 89 50 38          	mov    %rdx,0x38(%rax)
ffffffff80015b70:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80015b74:	48 8b 50 40          	mov    0x40(%rax),%rdx
ffffffff80015b78:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80015b7c:	48 89 50 40          	mov    %rdx,0x40(%rax)
ffffffff80015b80:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80015b84:	48 8b 50 48          	mov    0x48(%rax),%rdx
ffffffff80015b88:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80015b8c:	48 89 50 48          	mov    %rdx,0x48(%rax)
ffffffff80015b90:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80015b94:	48 8b 50 50          	mov    0x50(%rax),%rdx
ffffffff80015b98:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80015b9c:	48 89 50 50          	mov    %rdx,0x50(%rax)
ffffffff80015ba0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80015ba4:	48 8b 50 58          	mov    0x58(%rax),%rdx
ffffffff80015ba8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80015bac:	48 89 50 58          	mov    %rdx,0x58(%rax)
ffffffff80015bb0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80015bb4:	48 8b 50 60          	mov    0x60(%rax),%rdx
ffffffff80015bb8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80015bbc:	48 89 50 60          	mov    %rdx,0x60(%rax)
ffffffff80015bc0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80015bc4:	48 8b 50 68          	mov    0x68(%rax),%rdx
ffffffff80015bc8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80015bcc:	48 89 50 68          	mov    %rdx,0x68(%rax)
ffffffff80015bd0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80015bd4:	48 8b 50 70          	mov    0x70(%rax),%rdx
ffffffff80015bd8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80015bdc:	48 89 50 70          	mov    %rdx,0x70(%rax)
ffffffff80015be0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80015be4:	48 8b 90 80 00 00 00 	mov    0x80(%rax),%rdx
ffffffff80015beb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80015bef:	48 89 50 78          	mov    %rdx,0x78(%rax)
ffffffff80015bf3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80015bf7:	48 8b 90 90 00 00 00 	mov    0x90(%rax),%rdx
ffffffff80015bfe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80015c02:	48 89 90 80 00 00 00 	mov    %rdx,0x80(%rax)
ffffffff80015c09:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80015c0d:	48 8b 90 98 00 00 00 	mov    0x98(%rax),%rdx
ffffffff80015c14:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80015c18:	48 89 90 88 00 00 00 	mov    %rdx,0x88(%rax)
ffffffff80015c1f:	90                   	nop
ffffffff80015c20:	c9                   	leave  
ffffffff80015c21:	c3                   	ret    

ffffffff80015c22 <restore_thread_context>:
ffffffff80015c22:	f3 0f 1e fa          	endbr64 
ffffffff80015c26:	55                   	push   %rbp
ffffffff80015c27:	48 89 e5             	mov    %rsp,%rbp
ffffffff80015c2a:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff80015c2e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff80015c32:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
ffffffff80015c36:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80015c3a:	48 83 c0 40          	add    $0x40,%rax
ffffffff80015c3e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff80015c42:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80015c46:	48 8b 10             	mov    (%rax),%rdx
ffffffff80015c49:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80015c4d:	48 89 10             	mov    %rdx,(%rax)
ffffffff80015c50:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80015c54:	48 8b 50 08          	mov    0x8(%rax),%rdx
ffffffff80015c58:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80015c5c:	48 89 50 08          	mov    %rdx,0x8(%rax)
ffffffff80015c60:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80015c64:	48 8b 50 10          	mov    0x10(%rax),%rdx
ffffffff80015c68:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80015c6c:	48 89 50 10          	mov    %rdx,0x10(%rax)
ffffffff80015c70:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80015c74:	48 8b 50 18          	mov    0x18(%rax),%rdx
ffffffff80015c78:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80015c7c:	48 89 50 18          	mov    %rdx,0x18(%rax)
ffffffff80015c80:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80015c84:	48 8b 50 20          	mov    0x20(%rax),%rdx
ffffffff80015c88:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80015c8c:	48 89 50 20          	mov    %rdx,0x20(%rax)
ffffffff80015c90:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80015c94:	48 8b 50 28          	mov    0x28(%rax),%rdx
ffffffff80015c98:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80015c9c:	48 89 50 28          	mov    %rdx,0x28(%rax)
ffffffff80015ca0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80015ca4:	48 8b 50 30          	mov    0x30(%rax),%rdx
ffffffff80015ca8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80015cac:	48 89 50 30          	mov    %rdx,0x30(%rax)
ffffffff80015cb0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80015cb4:	48 8b 50 38          	mov    0x38(%rax),%rdx
ffffffff80015cb8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80015cbc:	48 89 50 38          	mov    %rdx,0x38(%rax)
ffffffff80015cc0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80015cc4:	48 8b 50 40          	mov    0x40(%rax),%rdx
ffffffff80015cc8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80015ccc:	48 89 50 40          	mov    %rdx,0x40(%rax)
ffffffff80015cd0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80015cd4:	48 8b 50 48          	mov    0x48(%rax),%rdx
ffffffff80015cd8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80015cdc:	48 89 50 48          	mov    %rdx,0x48(%rax)
ffffffff80015ce0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80015ce4:	48 8b 50 50          	mov    0x50(%rax),%rdx
ffffffff80015ce8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80015cec:	48 89 50 50          	mov    %rdx,0x50(%rax)
ffffffff80015cf0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80015cf4:	48 8b 50 58          	mov    0x58(%rax),%rdx
ffffffff80015cf8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80015cfc:	48 89 50 58          	mov    %rdx,0x58(%rax)
ffffffff80015d00:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80015d04:	48 8b 50 60          	mov    0x60(%rax),%rdx
ffffffff80015d08:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80015d0c:	48 89 50 60          	mov    %rdx,0x60(%rax)
ffffffff80015d10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80015d14:	48 8b 50 68          	mov    0x68(%rax),%rdx
ffffffff80015d18:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80015d1c:	48 89 50 68          	mov    %rdx,0x68(%rax)
ffffffff80015d20:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80015d24:	48 8b 50 70          	mov    0x70(%rax),%rdx
ffffffff80015d28:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80015d2c:	48 89 50 70          	mov    %rdx,0x70(%rax)
ffffffff80015d30:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80015d34:	48 8b 50 78          	mov    0x78(%rax),%rdx
ffffffff80015d38:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80015d3c:	48 89 90 80 00 00 00 	mov    %rdx,0x80(%rax)
ffffffff80015d43:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80015d47:	48 8b 90 80 00 00 00 	mov    0x80(%rax),%rdx
ffffffff80015d4e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80015d52:	48 89 90 90 00 00 00 	mov    %rdx,0x90(%rax)
ffffffff80015d59:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80015d5d:	48 8b 90 88 00 00 00 	mov    0x88(%rax),%rdx
ffffffff80015d64:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80015d68:	48 89 90 98 00 00 00 	mov    %rdx,0x98(%rax)
ffffffff80015d6f:	90                   	nop
ffffffff80015d70:	c9                   	leave  
ffffffff80015d71:	c3                   	ret    

ffffffff80015d72 <init_tls>:
ffffffff80015d72:	f3 0f 1e fa          	endbr64 
ffffffff80015d76:	55                   	push   %rbp
ffffffff80015d77:	48 89 e5             	mov    %rsp,%rbp
ffffffff80015d7a:	53                   	push   %rbx
ffffffff80015d7b:	48 83 ec 38          	sub    $0x38,%rsp
ffffffff80015d7f:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
ffffffff80015d83:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
ffffffff80015d8a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80015d8e:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff80015d92:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80015d96:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff80015d9a:	48 85 c0             	test   %rax,%rax
ffffffff80015d9d:	75 49                	jne    ffffffff80015de8 <init_tls+0x76>
ffffffff80015d9f:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%rbp)
ffffffff80015da6:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80015dab:	e8 31 0f ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff80015db0:	48 89 c6             	mov    %rax,%rsi
ffffffff80015db3:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff80015db6:	41 b9 d7 00 00 00    	mov    $0xd7,%r9d
ffffffff80015dbc:	4c 8d 05 ed 26 02 00 	lea    0x226ed(%rip),%r8        # ffffffff800384b0 <g_stivale2_header+0x14b0>
ffffffff80015dc3:	48 8d 15 fe 7d 02 00 	lea    0x27dfe(%rip),%rdx        # ffffffff8003dbc8 <__FUNCTION__.1.lto_priv.7>
ffffffff80015dca:	48 89 d1             	mov    %rdx,%rcx
ffffffff80015dcd:	89 c2                	mov    %eax,%edx
ffffffff80015dcf:	48 8d 05 a2 69 02 00 	lea    0x269a2(%rip),%rax        # ffffffff8003c778 <g_stivale2_header+0x5778>
ffffffff80015dd6:	48 89 c7             	mov    %rax,%rdi
ffffffff80015dd9:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80015dde:	e8 5d d7 ff ff       	call   ffffffff80013540 <printf_>
ffffffff80015de3:	e9 ea 00 00 00       	jmp    ffffffff80015ed2 <init_tls+0x160>
ffffffff80015de8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80015dec:	48 8b 50 20          	mov    0x20(%rax),%rdx
ffffffff80015df0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80015df4:	48 01 d0             	add    %rdx,%rax
ffffffff80015df7:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
ffffffff80015dfb:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%rbp)
ffffffff80015e02:	e9 b6 00 00 00       	jmp    ffffffff80015ebd <init_tls+0x14b>
ffffffff80015e07:	8b 45 e8             	mov    -0x18(%rbp),%eax
ffffffff80015e0a:	48 98                	cltq   
ffffffff80015e0c:	48 6b c0 38          	imul   $0x38,%rax,%rax
ffffffff80015e10:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff80015e14:	48 01 d0             	add    %rdx,%rax
ffffffff80015e17:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
ffffffff80015e1b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff80015e1f:	8b 00                	mov    (%rax),%eax
ffffffff80015e21:	83 f8 07             	cmp    $0x7,%eax
ffffffff80015e24:	0f 85 8f 00 00 00    	jne    ffffffff80015eb9 <init_tls+0x147>
ffffffff80015e2a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff80015e2e:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff80015e32:	48 85 c0             	test   %rax,%rax
ffffffff80015e35:	74 46                	je     ffffffff80015e7d <init_tls+0x10b>
ffffffff80015e37:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%rbp)
ffffffff80015e3e:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80015e43:	e8 99 0e ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff80015e48:	48 89 c6             	mov    %rax,%rsi
ffffffff80015e4b:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff80015e4e:	41 b9 dc 00 00 00    	mov    $0xdc,%r9d
ffffffff80015e54:	4c 8d 05 55 26 02 00 	lea    0x22655(%rip),%r8        # ffffffff800384b0 <g_stivale2_header+0x14b0>
ffffffff80015e5b:	48 8d 15 66 7d 02 00 	lea    0x27d66(%rip),%rdx        # ffffffff8003dbc8 <__FUNCTION__.1.lto_priv.7>
ffffffff80015e62:	48 89 d1             	mov    %rdx,%rcx
ffffffff80015e65:	89 c2                	mov    %eax,%edx
ffffffff80015e67:	48 8d 05 0a 69 02 00 	lea    0x2690a(%rip),%rax        # ffffffff8003c778 <g_stivale2_header+0x5778>
ffffffff80015e6e:	48 89 c7             	mov    %rax,%rdi
ffffffff80015e71:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80015e76:	e8 c5 d6 ff ff       	call   ffffffff80013540 <printf_>
ffffffff80015e7b:	eb 55                	jmp    ffffffff80015ed2 <init_tls+0x160>
ffffffff80015e7d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff80015e81:	48 8b 40 28          	mov    0x28(%rax),%rax
ffffffff80015e85:	48 89 05 e4 b2 29 00 	mov    %rax,0x29b2e4(%rip)        # ffffffff802b1170 <m_tls_size>
ffffffff80015e8c:	48 8b 1d dd b2 29 00 	mov    0x29b2dd(%rip),%rbx        # ffffffff802b1170 <m_tls_size>
ffffffff80015e93:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80015e98:	e8 44 0e ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff80015e9d:	48 89 da             	mov    %rbx,%rdx
ffffffff80015ea0:	48 89 c6             	mov    %rax,%rsi
ffffffff80015ea3:	48 8d 05 20 26 02 00 	lea    0x22620(%rip),%rax        # ffffffff800384ca <g_stivale2_header+0x14ca>
ffffffff80015eaa:	48 89 c7             	mov    %rax,%rdi
ffffffff80015ead:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80015eb2:	e8 89 d6 ff ff       	call   ffffffff80013540 <printf_>
ffffffff80015eb7:	eb 19                	jmp    ffffffff80015ed2 <init_tls+0x160>
ffffffff80015eb9:	83 45 e8 01          	addl   $0x1,-0x18(%rbp)
ffffffff80015ebd:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80015ec1:	0f b7 40 38          	movzwl 0x38(%rax),%eax
ffffffff80015ec5:	0f b7 c0             	movzwl %ax,%eax
ffffffff80015ec8:	39 45 e8             	cmp    %eax,-0x18(%rbp)
ffffffff80015ecb:	0f 8c 36 ff ff ff    	jl     ffffffff80015e07 <init_tls+0x95>
ffffffff80015ed1:	90                   	nop
ffffffff80015ed2:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff80015ed5:	90                   	nop
ffffffff80015ed6:	90                   	nop
ffffffff80015ed7:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
ffffffff80015edb:	c9                   	leave  
ffffffff80015edc:	c3                   	ret    

ffffffff80015edd <thread_list_empty>:
ffffffff80015edd:	f3 0f 1e fa          	endbr64 
ffffffff80015ee1:	55                   	push   %rbp
ffffffff80015ee2:	48 89 e5             	mov    %rsp,%rbp
ffffffff80015ee5:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80015ee9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff80015eed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80015ef1:	48 8b 00             	mov    (%rax),%rax
ffffffff80015ef4:	48 85 c0             	test   %rax,%rax
ffffffff80015ef7:	0f 94 c0             	sete   %al
ffffffff80015efa:	c9                   	leave  
ffffffff80015efb:	c3                   	ret    

ffffffff80015efc <thread_list_push>:
ffffffff80015efc:	f3 0f 1e fa          	endbr64 
ffffffff80015f00:	55                   	push   %rbp
ffffffff80015f01:	48 89 e5             	mov    %rsp,%rbp
ffffffff80015f04:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff80015f08:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff80015f0c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff80015f10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80015f14:	48 8b 10             	mov    (%rax),%rdx
ffffffff80015f17:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80015f1b:	48 89 90 e0 00 00 00 	mov    %rdx,0xe0(%rax)
ffffffff80015f22:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80015f26:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff80015f2a:	48 89 10             	mov    %rdx,(%rax)
ffffffff80015f2d:	90                   	nop
ffffffff80015f2e:	c9                   	leave  
ffffffff80015f2f:	c3                   	ret    

ffffffff80015f30 <thread_list_pop>:
ffffffff80015f30:	f3 0f 1e fa          	endbr64 
ffffffff80015f34:	55                   	push   %rbp
ffffffff80015f35:	48 89 e5             	mov    %rsp,%rbp
ffffffff80015f38:	48 83 ec 18          	sub    $0x18,%rsp
ffffffff80015f3c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff80015f40:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80015f44:	48 8b 00             	mov    (%rax),%rax
ffffffff80015f47:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff80015f4b:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff80015f50:	74 12                	je     ffffffff80015f64 <thread_list_pop+0x34>
ffffffff80015f52:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80015f56:	48 8b 90 e0 00 00 00 	mov    0xe0(%rax),%rdx
ffffffff80015f5d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80015f61:	48 89 10             	mov    %rdx,(%rax)
ffffffff80015f64:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80015f68:	c9                   	leave  
ffffffff80015f69:	c3                   	ret    

ffffffff80015f6a <add_to_all_threads>:
ffffffff80015f6a:	f3 0f 1e fa          	endbr64 
ffffffff80015f6e:	55                   	push   %rbp
ffffffff80015f6f:	48 89 e5             	mov    %rsp,%rbp
ffffffff80015f72:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff80015f76:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff80015f7a:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80015f7f:	e8 34 05 00 00       	call   ffffffff800164b8 <lock_all_threads>
ffffffff80015f84:	48 8b 05 f5 b1 29 00 	mov    0x29b1f5(%rip),%rax        # ffffffff802b1180 <g_all_threads>
ffffffff80015f8b:	48 85 c0             	test   %rax,%rax
ffffffff80015f8e:	74 26                	je     ffffffff80015fb6 <add_to_all_threads+0x4c>
ffffffff80015f90:	48 8b 05 e9 b1 29 00 	mov    0x29b1e9(%rip),%rax        # ffffffff802b1180 <g_all_threads>
ffffffff80015f97:	48 83 e8 20          	sub    $0x20,%rax
ffffffff80015f9b:	48 8b 00             	mov    (%rax),%rax
ffffffff80015f9e:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffff80015fa2:	48 8b 05 d7 b1 29 00 	mov    0x29b1d7(%rip),%rax        # ffffffff802b1180 <g_all_threads>
ffffffff80015fa9:	48 83 e8 20          	sub    $0x20,%rax
ffffffff80015fad:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff80015fb1:	48 39 c2             	cmp    %rax,%rdx
ffffffff80015fb4:	76 25                	jbe    ffffffff80015fdb <add_to_all_threads+0x71>
ffffffff80015fb6:	48 8b 05 c3 b1 29 00 	mov    0x29b1c3(%rip),%rax        # ffffffff802b1180 <g_all_threads>
ffffffff80015fbd:	b9 00 00 00 00       	mov    $0x0,%ecx
ffffffff80015fc2:	ba 01 00 00 00       	mov    $0x1,%edx
ffffffff80015fc7:	be 08 00 00 00       	mov    $0x8,%esi
ffffffff80015fcc:	48 89 c7             	mov    %rax,%rdi
ffffffff80015fcf:	e8 94 8f ff ff       	call   ffffffff8000ef68 <stbds_arrgrowf>
ffffffff80015fd4:	48 89 05 a5 b1 29 00 	mov    %rax,0x29b1a5(%rip)        # ffffffff802b1180 <g_all_threads>
ffffffff80015fdb:	48 8b 35 9e b1 29 00 	mov    0x29b19e(%rip),%rsi        # ffffffff802b1180 <g_all_threads>
ffffffff80015fe2:	48 8b 05 97 b1 29 00 	mov    0x29b197(%rip),%rax        # ffffffff802b1180 <g_all_threads>
ffffffff80015fe9:	48 83 e8 20          	sub    $0x20,%rax
ffffffff80015fed:	48 8b 10             	mov    (%rax),%rdx
ffffffff80015ff0:	48 8d 4a 01          	lea    0x1(%rdx),%rcx
ffffffff80015ff4:	48 89 08             	mov    %rcx,(%rax)
ffffffff80015ff7:	48 8d 04 d5 00 00 00 	lea    0x0(,%rdx,8),%rax
ffffffff80015ffe:	00 
ffffffff80015fff:	48 01 f0             	add    %rsi,%rax
ffffffff80016002:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff80016006:	48 89 10             	mov    %rdx,(%rax)
ffffffff80016009:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001600e:	e8 bf 04 00 00       	call   ffffffff800164d2 <unlock_all_threads>
ffffffff80016013:	90                   	nop
ffffffff80016014:	c9                   	leave  
ffffffff80016015:	c3                   	ret    

ffffffff80016016 <get_free_thread>:
ffffffff80016016:	f3 0f 1e fa          	endbr64 
ffffffff8001601a:	55                   	push   %rbp
ffffffff8001601b:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001601e:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff80016022:	48 8d 05 7f a4 fe 7f 	lea    0x7ffea47f(%rip),%rax        # 4a8 <m_free_threads>
ffffffff80016029:	48 89 c7             	mov    %rax,%rdi
ffffffff8001602c:	e8 ab f5 ff ff       	call   ffffffff800155dc <get_cpu_local_base>
ffffffff80016031:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff80016035:	e8 61 e8 ff ff       	call   ffffffff8001489b <scheduler_preempt_disable>
ffffffff8001603a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001603e:	48 89 c7             	mov    %rax,%rdi
ffffffff80016041:	e8 97 fe ff ff       	call   ffffffff80015edd <thread_list_empty>
ffffffff80016046:	84 c0                	test   %al,%al
ffffffff80016048:	0f 84 9b 00 00 00    	je     ffffffff800160e9 <get_free_thread+0xd3>
ffffffff8001604e:	48 8d 05 3b b1 29 00 	lea    0x29b13b(%rip),%rax        # ffffffff802b1190 <m_global_free_threads>
ffffffff80016055:	48 89 c7             	mov    %rax,%rdi
ffffffff80016058:	e8 80 fe ff ff       	call   ffffffff80015edd <thread_list_empty>
ffffffff8001605d:	83 f0 01             	xor    $0x1,%eax
ffffffff80016060:	84 c0                	test   %al,%al
ffffffff80016062:	0f 84 81 00 00 00    	je     ffffffff800160e9 <get_free_thread+0xd3>
ffffffff80016068:	48 8d 05 19 b1 29 00 	lea    0x29b119(%rip),%rax        # ffffffff802b1188 <m_global_free_threads_lock>
ffffffff8001606f:	48 89 c7             	mov    %rax,%rdi
ffffffff80016072:	e8 97 bd fe ff       	call   ffffffff80001e0e <spinlock_lock>
ffffffff80016077:	eb 4d                	jmp    ffffffff800160c6 <get_free_thread+0xb0>
ffffffff80016079:	48 8d 05 10 b1 29 00 	lea    0x29b110(%rip),%rax        # ffffffff802b1190 <m_global_free_threads>
ffffffff80016080:	48 89 c7             	mov    %rax,%rdi
ffffffff80016083:	e8 a8 fe ff ff       	call   ffffffff80015f30 <thread_list_pop>
ffffffff80016088:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff8001608c:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
ffffffff80016091:	74 41                	je     ffffffff800160d4 <get_free_thread+0xbe>
ffffffff80016093:	8b 05 ff b0 29 00    	mov    0x29b0ff(%rip),%eax        # ffffffff802b1198 <m_global_free_threads_count>
ffffffff80016099:	83 e8 01             	sub    $0x1,%eax
ffffffff8001609c:	89 05 f6 b0 29 00    	mov    %eax,0x29b0f6(%rip)        # ffffffff802b1198 <m_global_free_threads_count>
ffffffff800160a2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff800160a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff800160aa:	48 89 d6             	mov    %rdx,%rsi
ffffffff800160ad:	48 89 c7             	mov    %rax,%rdi
ffffffff800160b0:	e8 47 fe ff ff       	call   ffffffff80015efc <thread_list_push>
ffffffff800160b5:	65 8b 05 f4 a3 fe 7f 	mov    %gs:0x7ffea3f4(%rip),%eax        # 4b0 <m_free_threads_count>
ffffffff800160bc:	83 c0 01             	add    $0x1,%eax
ffffffff800160bf:	65 89 05 ea a3 fe 7f 	mov    %eax,%gs:0x7ffea3ea(%rip)        # 4b0 <m_free_threads_count>
ffffffff800160c6:	65 8b 05 e3 a3 fe 7f 	mov    %gs:0x7ffea3e3(%rip),%eax        # 4b0 <m_free_threads_count>
ffffffff800160cd:	83 f8 1f             	cmp    $0x1f,%eax
ffffffff800160d0:	7e a7                	jle    ffffffff80016079 <get_free_thread+0x63>
ffffffff800160d2:	eb 01                	jmp    ffffffff800160d5 <get_free_thread+0xbf>
ffffffff800160d4:	90                   	nop
ffffffff800160d5:	48 8d 05 ac b0 29 00 	lea    0x29b0ac(%rip),%rax        # ffffffff802b1188 <m_global_free_threads_lock>
ffffffff800160dc:	48 89 c7             	mov    %rax,%rdi
ffffffff800160df:	e8 f9 bd fe ff       	call   ffffffff80001edd <spinlock_unlock>
ffffffff800160e4:	e9 51 ff ff ff       	jmp    ffffffff8001603a <get_free_thread+0x24>
ffffffff800160e9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff800160ed:	48 89 c7             	mov    %rax,%rdi
ffffffff800160f0:	e8 3b fe ff ff       	call   ffffffff80015f30 <thread_list_pop>
ffffffff800160f5:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff800160f9:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
ffffffff800160fe:	74 3c                	je     ffffffff8001613c <get_free_thread+0x126>
ffffffff80016100:	65 8b 05 a9 a3 fe 7f 	mov    %gs:0x7ffea3a9(%rip),%eax        # 4b0 <m_free_threads_count>
ffffffff80016107:	83 e8 01             	sub    $0x1,%eax
ffffffff8001610a:	65 89 05 9f a3 fe 7f 	mov    %eax,%gs:0x7ffea39f(%rip)        # 4b0 <m_free_threads_count>
ffffffff80016111:	48 8b 15 58 b0 29 00 	mov    0x29b058(%rip),%rdx        # ffffffff802b1170 <m_tls_size>
ffffffff80016118:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001611c:	48 8b 80 d0 00 00 00 	mov    0xd0(%rax),%rax
ffffffff80016123:	48 8b 0d 46 b0 29 00 	mov    0x29b046(%rip),%rcx        # ffffffff802b1170 <m_tls_size>
ffffffff8001612a:	48 29 c8             	sub    %rcx,%rax
ffffffff8001612d:	be 00 00 00 00       	mov    $0x0,%esi
ffffffff80016132:	48 89 c7             	mov    %rax,%rdi
ffffffff80016135:	e8 0e 84 ff ff       	call   ffffffff8000e548 <memset>
ffffffff8001613a:	eb 01                	jmp    ffffffff8001613d <get_free_thread+0x127>
ffffffff8001613c:	90                   	nop
ffffffff8001613d:	e8 c1 e7 ff ff       	call   ffffffff80014903 <scheduler_preempt_enable>
ffffffff80016142:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80016146:	90                   	nop
ffffffff80016147:	90                   	nop
ffffffff80016148:	c9                   	leave  
ffffffff80016149:	c3                   	ret    

ffffffff8001614a <alloc_thread>:
ffffffff8001614a:	f3 0f 1e fa          	endbr64 
ffffffff8001614e:	55                   	push   %rbp
ffffffff8001614f:	48 89 e5             	mov    %rsp,%rbp
ffffffff80016152:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff80016156:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
ffffffff8001615d:	bf f0 00 00 00       	mov    $0xf0,%edi
ffffffff80016162:	e8 d5 56 ff ff       	call   ffffffff8000b83c <malloc>
ffffffff80016167:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff8001616b:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
ffffffff80016170:	75 49                	jne    ffffffff800161bb <alloc_thread+0x71>
ffffffff80016172:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)
ffffffff80016179:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001617e:	e8 5e 0b ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff80016183:	48 89 c6             	mov    %rax,%rsi
ffffffff80016186:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff80016189:	41 b9 41 01 00 00    	mov    $0x141,%r9d
ffffffff8001618f:	4c 8d 05 1a 23 02 00 	lea    0x2231a(%rip),%r8        # ffffffff800384b0 <g_stivale2_header+0x14b0>
ffffffff80016196:	48 8d 15 3b 7a 02 00 	lea    0x27a3b(%rip),%rdx        # ffffffff8003dbd8 <__FUNCTION__.0.lto_priv.12>
ffffffff8001619d:	48 89 d1             	mov    %rdx,%rcx
ffffffff800161a0:	89 c2                	mov    %eax,%edx
ffffffff800161a2:	48 8d 05 cf 65 02 00 	lea    0x265cf(%rip),%rax        # ffffffff8003c778 <g_stivale2_header+0x5778>
ffffffff800161a9:	48 89 c7             	mov    %rax,%rdi
ffffffff800161ac:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800161b1:	e8 8a d3 ff ff       	call   ffffffff80013540 <printf_>
ffffffff800161b6:	e9 96 00 00 00       	jmp    ffffffff80016251 <alloc_thread+0x107>
ffffffff800161bb:	48 8b 05 ae af 29 00 	mov    0x29afae(%rip),%rax        # ffffffff802b1170 <m_tls_size>
ffffffff800161c2:	48 83 c0 20          	add    $0x20,%rax
ffffffff800161c6:	48 89 c7             	mov    %rax,%rdi
ffffffff800161c9:	e8 6e 56 ff ff       	call   ffffffff8000b83c <malloc>
ffffffff800161ce:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff800161d2:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
ffffffff800161d7:	75 46                	jne    ffffffff8001621f <alloc_thread+0xd5>
ffffffff800161d9:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)
ffffffff800161e0:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800161e5:	e8 f7 0a ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff800161ea:	48 89 c6             	mov    %rax,%rsi
ffffffff800161ed:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff800161f0:	41 b9 45 01 00 00    	mov    $0x145,%r9d
ffffffff800161f6:	4c 8d 05 b3 22 02 00 	lea    0x222b3(%rip),%r8        # ffffffff800384b0 <g_stivale2_header+0x14b0>
ffffffff800161fd:	48 8d 15 d4 79 02 00 	lea    0x279d4(%rip),%rdx        # ffffffff8003dbd8 <__FUNCTION__.0.lto_priv.12>
ffffffff80016204:	48 89 d1             	mov    %rdx,%rcx
ffffffff80016207:	89 c2                	mov    %eax,%edx
ffffffff80016209:	48 8d 05 68 65 02 00 	lea    0x26568(%rip),%rax        # ffffffff8003c778 <g_stivale2_header+0x5778>
ffffffff80016210:	48 89 c7             	mov    %rax,%rdi
ffffffff80016213:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80016218:	e8 23 d3 ff ff       	call   ffffffff80013540 <printf_>
ffffffff8001621d:	eb 32                	jmp    ffffffff80016251 <alloc_thread+0x107>
ffffffff8001621f:	48 8b 15 4a af 29 00 	mov    0x29af4a(%rip),%rdx        # ffffffff802b1170 <m_tls_size>
ffffffff80016226:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001622a:	48 01 c2             	add    %rax,%rdx
ffffffff8001622d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80016231:	48 89 90 d0 00 00 00 	mov    %rdx,0xd0(%rax)
ffffffff80016238:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8001623c:	48 8b 80 d0 00 00 00 	mov    0xd0(%rax),%rax
ffffffff80016243:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff80016247:	48 8b 92 d0 00 00 00 	mov    0xd0(%rdx),%rdx
ffffffff8001624e:	48 89 10             	mov    %rdx,(%rax)
ffffffff80016251:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
ffffffff80016255:	74 4f                	je     ffffffff800162a6 <alloc_thread+0x15c>
ffffffff80016257:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
ffffffff8001625c:	74 48                	je     ffffffff800162a6 <alloc_thread+0x15c>
ffffffff8001625e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80016262:	48 8b 80 d0 00 00 00 	mov    0xd0(%rax),%rax
ffffffff80016269:	48 85 c0             	test   %rax,%rax
ffffffff8001626c:	74 24                	je     ffffffff80016292 <alloc_thread+0x148>
ffffffff8001626e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80016272:	48 8b 90 d0 00 00 00 	mov    0xd0(%rax),%rdx
ffffffff80016279:	48 8b 05 f0 ae 29 00 	mov    0x29aef0(%rip),%rax        # ffffffff802b1170 <m_tls_size>
ffffffff80016280:	48 c1 e0 05          	shl    $0x5,%rax
ffffffff80016284:	48 f7 d8             	neg    %rax
ffffffff80016287:	48 01 d0             	add    %rdx,%rax
ffffffff8001628a:	48 89 c7             	mov    %rax,%rdi
ffffffff8001628d:	e8 74 56 ff ff       	call   ffffffff8000b906 <free>
ffffffff80016292:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80016296:	48 89 c7             	mov    %rax,%rdi
ffffffff80016299:	e8 68 56 ff ff       	call   ffffffff8000b906 <free>
ffffffff8001629e:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
ffffffff800162a5:	00 
ffffffff800162a6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff800162aa:	90                   	nop
ffffffff800162ab:	90                   	nop
ffffffff800162ac:	c9                   	leave  
ffffffff800162ad:	c3                   	ret    

ffffffff800162ae <create_thread>:
ffffffff800162ae:	f3 0f 1e fa          	endbr64 
ffffffff800162b2:	55                   	push   %rbp
ffffffff800162b3:	48 89 e5             	mov    %rsp,%rbp
ffffffff800162b6:	48 81 ec f0 00 00 00 	sub    $0xf0,%rsp
ffffffff800162bd:	48 89 bd 28 ff ff ff 	mov    %rdi,-0xd8(%rbp)
ffffffff800162c4:	48 89 b5 20 ff ff ff 	mov    %rsi,-0xe0(%rbp)
ffffffff800162cb:	48 89 95 18 ff ff ff 	mov    %rdx,-0xe8(%rbp)
ffffffff800162d2:	48 89 8d 68 ff ff ff 	mov    %rcx,-0x98(%rbp)
ffffffff800162d9:	4c 89 85 70 ff ff ff 	mov    %r8,-0x90(%rbp)
ffffffff800162e0:	4c 89 8d 78 ff ff ff 	mov    %r9,-0x88(%rbp)
ffffffff800162e7:	84 c0                	test   %al,%al
ffffffff800162e9:	74 20                	je     ffffffff8001630b <create_thread+0x5d>
ffffffff800162eb:	0f 29 45 80          	movaps %xmm0,-0x80(%rbp)
ffffffff800162ef:	0f 29 4d 90          	movaps %xmm1,-0x70(%rbp)
ffffffff800162f3:	0f 29 55 a0          	movaps %xmm2,-0x60(%rbp)
ffffffff800162f7:	0f 29 5d b0          	movaps %xmm3,-0x50(%rbp)
ffffffff800162fb:	0f 29 65 c0          	movaps %xmm4,-0x40(%rbp)
ffffffff800162ff:	0f 29 6d d0          	movaps %xmm5,-0x30(%rbp)
ffffffff80016303:	0f 29 75 e0          	movaps %xmm6,-0x20(%rbp)
ffffffff80016307:	0f 29 7d f0          	movaps %xmm7,-0x10(%rbp)
ffffffff8001630b:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80016310:	e8 01 fd ff ff       	call   ffffffff80016016 <get_free_thread>
ffffffff80016315:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
ffffffff8001631c:	48 83 bd 48 ff ff ff 	cmpq   $0x0,-0xb8(%rbp)
ffffffff80016323:	00 
ffffffff80016324:	75 39                	jne    ffffffff8001635f <create_thread+0xb1>
ffffffff80016326:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001632b:	e8 1a fe ff ff       	call   ffffffff8001614a <alloc_thread>
ffffffff80016330:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
ffffffff80016337:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
ffffffff8001633e:	ba 05 00 00 00       	mov    $0x5,%edx
ffffffff80016343:	be 00 00 00 00       	mov    $0x0,%esi
ffffffff80016348:	48 89 c7             	mov    %rax,%rdi
ffffffff8001634b:	e8 c4 f5 ff ff       	call   ffffffff80015914 <cas_thread_state>
ffffffff80016350:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
ffffffff80016357:	48 89 c7             	mov    %rax,%rdi
ffffffff8001635a:	e8 0b fc ff ff       	call   ffffffff80015f6a <add_to_all_threads>
ffffffff8001635f:	c7 85 30 ff ff ff 18 	movl   $0x18,-0xd0(%rbp)
ffffffff80016366:	00 00 00 
ffffffff80016369:	c7 85 34 ff ff ff 30 	movl   $0x30,-0xcc(%rbp)
ffffffff80016370:	00 00 00 
ffffffff80016373:	48 8d 45 10          	lea    0x10(%rbp),%rax
ffffffff80016377:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
ffffffff8001637e:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
ffffffff80016385:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
ffffffff8001638c:	48 8b bd 48 ff ff ff 	mov    -0xb8(%rbp),%rdi
ffffffff80016393:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
ffffffff8001639a:	48 8b 95 18 ff ff ff 	mov    -0xe8(%rbp),%rdx
ffffffff800163a1:	48 89 c1             	mov    %rax,%rcx
ffffffff800163a4:	be 40 00 00 00       	mov    $0x40,%esi
ffffffff800163a9:	e8 7a d4 ff ff       	call   ffffffff80013828 <vsnprintf_>
ffffffff800163ae:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
ffffffff800163b5:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
ffffffff800163bc:	48 89 90 b8 00 00 00 	mov    %rdx,0xb8(%rax)
ffffffff800163c3:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
ffffffff800163ca:	48 c7 80 c0 00 00 00 	movq   $0x200202,0xc0(%rax)
ffffffff800163d1:	02 02 20 00 
ffffffff800163d5:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800163da:	e8 64 26 ff ff       	call   ffffffff80008a43 <alloc_stack>
ffffffff800163df:	48 89 c2             	mov    %rax,%rdx
ffffffff800163e2:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
ffffffff800163e9:	48 89 90 c8 00 00 00 	mov    %rdx,0xc8(%rax)
ffffffff800163f0:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
ffffffff800163f7:	48 8b 80 c8 00 00 00 	mov    0xc8(%rax),%rax
ffffffff800163fe:	48 8d 50 f8          	lea    -0x8(%rax),%rdx
ffffffff80016402:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
ffffffff80016409:	48 89 90 c8 00 00 00 	mov    %rdx,0xc8(%rax)
ffffffff80016410:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
ffffffff80016417:	48 8b 80 c8 00 00 00 	mov    0xc8(%rax),%rax
ffffffff8001641e:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
ffffffff80016425:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
ffffffff8001642c:	48 8b 80 c8 00 00 00 	mov    0xc8(%rax),%rax
ffffffff80016433:	48 8d 50 f8          	lea    -0x8(%rax),%rdx
ffffffff80016437:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
ffffffff8001643e:	48 89 90 c8 00 00 00 	mov    %rdx,0xc8(%rax)
ffffffff80016445:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
ffffffff8001644c:	48 8b 80 c8 00 00 00 	mov    0xc8(%rax),%rax
ffffffff80016453:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
ffffffff8001645a:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
ffffffff80016461:	48 8b 80 c8 00 00 00 	mov    0xc8(%rax),%rax
ffffffff80016468:	48 8d 50 f8          	lea    -0x8(%rax),%rdx
ffffffff8001646c:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
ffffffff80016473:	48 89 90 c8 00 00 00 	mov    %rdx,0xc8(%rax)
ffffffff8001647a:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
ffffffff80016481:	48 8b 80 c8 00 00 00 	mov    0xc8(%rax),%rax
ffffffff80016488:	48 89 c2             	mov    %rax,%rdx
ffffffff8001648b:	48 8d 05 5a 00 00 00 	lea    0x5a(%rip),%rax        # ffffffff800164ec <thread_exit>
ffffffff80016492:	48 89 02             	mov    %rax,(%rdx)
ffffffff80016495:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
ffffffff8001649c:	ba 03 00 00 00       	mov    $0x3,%edx
ffffffff800164a1:	be 05 00 00 00       	mov    $0x5,%esi
ffffffff800164a6:	48 89 c7             	mov    %rax,%rdi
ffffffff800164a9:	e8 66 f4 ff ff       	call   ffffffff80015914 <cas_thread_state>
ffffffff800164ae:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
ffffffff800164b5:	90                   	nop
ffffffff800164b6:	c9                   	leave  
ffffffff800164b7:	c3                   	ret    

ffffffff800164b8 <lock_all_threads>:
ffffffff800164b8:	f3 0f 1e fa          	endbr64 
ffffffff800164bc:	55                   	push   %rbp
ffffffff800164bd:	48 89 e5             	mov    %rsp,%rbp
ffffffff800164c0:	48 8d 05 b1 ac 29 00 	lea    0x29acb1(%rip),%rax        # ffffffff802b1178 <m_all_threads_lock>
ffffffff800164c7:	48 89 c7             	mov    %rax,%rdi
ffffffff800164ca:	e8 3f b9 fe ff       	call   ffffffff80001e0e <spinlock_lock>
ffffffff800164cf:	90                   	nop
ffffffff800164d0:	5d                   	pop    %rbp
ffffffff800164d1:	c3                   	ret    

ffffffff800164d2 <unlock_all_threads>:
ffffffff800164d2:	f3 0f 1e fa          	endbr64 
ffffffff800164d6:	55                   	push   %rbp
ffffffff800164d7:	48 89 e5             	mov    %rsp,%rbp
ffffffff800164da:	48 8d 05 97 ac 29 00 	lea    0x29ac97(%rip),%rax        # ffffffff802b1178 <m_all_threads_lock>
ffffffff800164e1:	48 89 c7             	mov    %rax,%rdi
ffffffff800164e4:	e8 f4 b9 fe ff       	call   ffffffff80001edd <spinlock_unlock>
ffffffff800164e9:	90                   	nop
ffffffff800164ea:	5d                   	pop    %rbp
ffffffff800164eb:	c3                   	ret    

ffffffff800164ec <thread_exit>:
ffffffff800164ec:	f3 0f 1e fa          	endbr64 
ffffffff800164f0:	55                   	push   %rbp
ffffffff800164f1:	48 89 e5             	mov    %rsp,%rbp
ffffffff800164f4:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800164f9:	e8 f9 ee ff ff       	call   ffffffff800153f7 <scheduler_drop_current>
ffffffff800164fe:	90                   	nop
ffffffff800164ff:	5d                   	pop    %rbp
ffffffff80016500:	c3                   	ret    

ffffffff80016501 <cpuid.lto_priv.1>:
ffffffff80016501:	55                   	push   %rbp
ffffffff80016502:	48 89 e5             	mov    %rsp,%rbp
ffffffff80016505:	53                   	push   %rbx
ffffffff80016506:	48 83 ec 58          	sub    $0x58,%rsp
ffffffff8001650a:	89 7d cc             	mov    %edi,-0x34(%rbp)
ffffffff8001650d:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
ffffffff80016511:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
ffffffff80016515:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
ffffffff80016519:	4c 89 45 a8          	mov    %r8,-0x58(%rbp)
ffffffff8001651d:	8b 55 cc             	mov    -0x34(%rbp),%edx
ffffffff80016520:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
ffffffff80016524:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff80016528:	89 55 e4             	mov    %edx,-0x1c(%rbp)
ffffffff8001652b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001652f:	4c 8d 48 04          	lea    0x4(%rax),%r9
ffffffff80016533:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80016537:	4c 8d 40 08          	lea    0x8(%rax),%r8
ffffffff8001653b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001653f:	48 8d 78 0c          	lea    0xc(%rax),%rdi
ffffffff80016543:	8b 45 e4             	mov    -0x1c(%rbp),%eax
ffffffff80016546:	0f a2                	cpuid  
ffffffff80016548:	89 de                	mov    %ebx,%esi
ffffffff8001654a:	4c 8b 55 e8          	mov    -0x18(%rbp),%r10
ffffffff8001654e:	41 89 02             	mov    %eax,(%r10)
ffffffff80016551:	41 89 31             	mov    %esi,(%r9)
ffffffff80016554:	41 89 08             	mov    %ecx,(%r8)
ffffffff80016557:	89 17                	mov    %edx,(%rdi)
ffffffff80016559:	90                   	nop
ffffffff8001655a:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
ffffffff8001655f:	74 0b                	je     ffffffff8001656c <cpuid.lto_priv.1+0x6b>
ffffffff80016561:	8b 45 d0             	mov    -0x30(%rbp),%eax
ffffffff80016564:	89 c2                	mov    %eax,%edx
ffffffff80016566:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8001656a:	89 10                	mov    %edx,(%rax)
ffffffff8001656c:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
ffffffff80016571:	74 0b                	je     ffffffff8001657e <cpuid.lto_priv.1+0x7d>
ffffffff80016573:	8b 45 d4             	mov    -0x2c(%rbp),%eax
ffffffff80016576:	89 c2                	mov    %eax,%edx
ffffffff80016578:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff8001657c:	89 10                	mov    %edx,(%rax)
ffffffff8001657e:	48 83 7d b0 00       	cmpq   $0x0,-0x50(%rbp)
ffffffff80016583:	74 0b                	je     ffffffff80016590 <cpuid.lto_priv.1+0x8f>
ffffffff80016585:	8b 45 d8             	mov    -0x28(%rbp),%eax
ffffffff80016588:	89 c2                	mov    %eax,%edx
ffffffff8001658a:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
ffffffff8001658e:	89 10                	mov    %edx,(%rax)
ffffffff80016590:	48 83 7d a8 00       	cmpq   $0x0,-0x58(%rbp)
ffffffff80016595:	74 0b                	je     ffffffff800165a2 <cpuid.lto_priv.1+0xa1>
ffffffff80016597:	8b 45 dc             	mov    -0x24(%rbp),%eax
ffffffff8001659a:	89 c2                	mov    %eax,%edx
ffffffff8001659c:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff800165a0:	89 10                	mov    %edx,(%rax)
ffffffff800165a2:	90                   	nop
ffffffff800165a3:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
ffffffff800165a7:	c9                   	leave  
ffffffff800165a8:	c3                   	ret    

ffffffff800165a9 <calibrate_tsc>:
ffffffff800165a9:	f3 0f 1e fa          	endbr64 
ffffffff800165ad:	55                   	push   %rbp
ffffffff800165ae:	48 89 e5             	mov    %rsp,%rbp
ffffffff800165b1:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff800165b5:	0f 31                	rdtsc  
ffffffff800165b7:	48 c1 e2 20          	shl    $0x20,%rdx
ffffffff800165bb:	48 09 d0             	or     %rdx,%rax
ffffffff800165be:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff800165c2:	0f ae e8             	lfence 
ffffffff800165c5:	90                   	nop
ffffffff800165c6:	bf e8 03 00 00       	mov    $0x3e8,%edi
ffffffff800165cb:	e8 e4 02 00 00       	call   ffffffff800168b4 <microdelay>
ffffffff800165d0:	0f 31                	rdtsc  
ffffffff800165d2:	48 c1 e2 20          	shl    $0x20,%rdx
ffffffff800165d6:	48 09 d0             	or     %rdx,%rax
ffffffff800165d9:	90                   	nop
ffffffff800165da:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff800165de:	0f ae e8             	lfence 
ffffffff800165e1:	90                   	nop
ffffffff800165e2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff800165e6:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
ffffffff800165ea:	48 89 c1             	mov    %rax,%rcx
ffffffff800165ed:	48 ba cf f7 53 e3 a5 	movabs $0x20c49ba5e353f7cf,%rdx
ffffffff800165f4:	9b c4 20 
ffffffff800165f7:	48 89 c8             	mov    %rcx,%rax
ffffffff800165fa:	48 f7 ea             	imul   %rdx
ffffffff800165fd:	48 89 d0             	mov    %rdx,%rax
ffffffff80016600:	48 c1 f8 07          	sar    $0x7,%rax
ffffffff80016604:	48 c1 f9 3f          	sar    $0x3f,%rcx
ffffffff80016608:	48 89 ca             	mov    %rcx,%rdx
ffffffff8001660b:	48 29 d0             	sub    %rdx,%rax
ffffffff8001660e:	48 89 05 8b ab 29 00 	mov    %rax,0x29ab8b(%rip)        # ffffffff802b11a0 <m_tsc_micro_freq>
ffffffff80016615:	90                   	nop
ffffffff80016616:	c9                   	leave  
ffffffff80016617:	c3                   	ret    

ffffffff80016618 <init_timer>:
ffffffff80016618:	f3 0f 1e fa          	endbr64 
ffffffff8001661c:	55                   	push   %rbp
ffffffff8001661d:	48 89 e5             	mov    %rsp,%rbp
ffffffff80016620:	53                   	push   %rbx
ffffffff80016621:	48 83 ec 18          	sub    $0x18,%rsp
ffffffff80016625:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
ffffffff8001662c:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
ffffffff80016630:	49 89 c0             	mov    %rax,%r8
ffffffff80016633:	b9 00 00 00 00       	mov    $0x0,%ecx
ffffffff80016638:	ba 00 00 00 00       	mov    $0x0,%edx
ffffffff8001663d:	be 00 00 00 00       	mov    $0x0,%esi
ffffffff80016642:	bf 07 00 00 80       	mov    $0x80000007,%edi
ffffffff80016647:	e8 b5 fe ff ff       	call   ffffffff80016501 <cpuid.lto_priv.1>
ffffffff8001664c:	0f b6 45 e9          	movzbl -0x17(%rbp),%eax
ffffffff80016650:	83 e0 01             	and    $0x1,%eax
ffffffff80016653:	84 c0                	test   %al,%al
ffffffff80016655:	75 46                	jne    ffffffff8001669d <init_timer+0x85>
ffffffff80016657:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%rbp)
ffffffff8001665e:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80016663:	e8 79 06 ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff80016668:	48 89 c6             	mov    %rax,%rsi
ffffffff8001666b:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff8001666e:	41 b9 23 00 00 00    	mov    $0x23,%r9d
ffffffff80016674:	4c 8d 05 6c 1e 02 00 	lea    0x21e6c(%rip),%r8        # ffffffff800384e7 <g_stivale2_header+0x14e7>
ffffffff8001667b:	48 8d 15 66 75 02 00 	lea    0x27566(%rip),%rdx        # ffffffff8003dbe8 <__FUNCTION__.0.lto_priv.13>
ffffffff80016682:	48 89 d1             	mov    %rdx,%rcx
ffffffff80016685:	89 c2                	mov    %eax,%edx
ffffffff80016687:	48 8d 05 ea 60 02 00 	lea    0x260ea(%rip),%rax        # ffffffff8003c778 <g_stivale2_header+0x5778>
ffffffff8001668e:	48 89 c7             	mov    %rax,%rdi
ffffffff80016691:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80016696:	e8 a5 ce ff ff       	call   ffffffff80013540 <printf_>
ffffffff8001669b:	eb 35                	jmp    ffffffff800166d2 <init_timer+0xba>
ffffffff8001669d:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800166a2:	e8 02 ff ff ff       	call   ffffffff800165a9 <calibrate_tsc>
ffffffff800166a7:	48 8b 1d f2 aa 29 00 	mov    0x29aaf2(%rip),%rbx        # ffffffff802b11a0 <m_tsc_micro_freq>
ffffffff800166ae:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800166b3:	e8 29 06 ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff800166b8:	48 89 da             	mov    %rbx,%rdx
ffffffff800166bb:	48 89 c6             	mov    %rax,%rsi
ffffffff800166be:	48 8d 05 d3 6b 02 00 	lea    0x26bd3(%rip),%rax        # ffffffff8003d298 <g_stivale2_header+0x6298>
ffffffff800166c5:	48 89 c7             	mov    %rax,%rdi
ffffffff800166c8:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800166cd:	e8 6e ce ff ff       	call   ffffffff80013540 <printf_>
ffffffff800166d2:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff800166d5:	90                   	nop
ffffffff800166d6:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
ffffffff800166da:	c9                   	leave  
ffffffff800166db:	c3                   	ret    

ffffffff800166dc <get_tsc_freq>:
ffffffff800166dc:	f3 0f 1e fa          	endbr64 
ffffffff800166e0:	55                   	push   %rbp
ffffffff800166e1:	48 89 e5             	mov    %rsp,%rbp
ffffffff800166e4:	48 8b 05 b5 aa 29 00 	mov    0x29aab5(%rip),%rax        # ffffffff802b11a0 <m_tsc_micro_freq>
ffffffff800166eb:	5d                   	pop    %rbp
ffffffff800166ec:	c3                   	ret    

ffffffff800166ed <microtime>:
ffffffff800166ed:	f3 0f 1e fa          	endbr64 
ffffffff800166f1:	55                   	push   %rbp
ffffffff800166f2:	48 89 e5             	mov    %rsp,%rbp
ffffffff800166f5:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff800166f9:	0f 31                	rdtsc  
ffffffff800166fb:	48 c1 e2 20          	shl    $0x20,%rdx
ffffffff800166ff:	48 09 d0             	or     %rdx,%rax
ffffffff80016702:	48 8b 0d 97 aa 29 00 	mov    0x29aa97(%rip),%rcx        # ffffffff802b11a0 <m_tsc_micro_freq>
ffffffff80016709:	ba 00 00 00 00       	mov    $0x0,%edx
ffffffff8001670e:	48 f7 f1             	div    %rcx
ffffffff80016711:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff80016715:	0f ae e8             	lfence 
ffffffff80016718:	90                   	nop
ffffffff80016719:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001671d:	90                   	nop
ffffffff8001671e:	90                   	nop
ffffffff8001671f:	c9                   	leave  
ffffffff80016720:	c3                   	ret    

ffffffff80016721 <init_delay>:
ffffffff80016721:	f3 0f 1e fa          	endbr64 
ffffffff80016725:	55                   	push   %rbp
ffffffff80016726:	48 89 e5             	mov    %rsp,%rbp
ffffffff80016729:	41 54                	push   %r12
ffffffff8001672b:	53                   	push   %rbx
ffffffff8001672c:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff80016730:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
ffffffff80016737:	bf 46 41 43 50       	mov    $0x50434146,%edi
ffffffff8001673c:	e8 43 05 00 00       	call   ffffffff80016c84 <acpi_get_table>
ffffffff80016741:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff80016745:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
ffffffff8001674a:	75 49                	jne    ffffffff80016795 <init_delay+0x74>
ffffffff8001674c:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%rbp)
ffffffff80016753:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80016758:	e8 84 05 ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff8001675d:	48 89 c6             	mov    %rax,%rsi
ffffffff80016760:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff80016763:	41 b9 17 00 00 00    	mov    $0x17,%r9d
ffffffff80016769:	4c 8d 05 8b 1d 02 00 	lea    0x21d8b(%rip),%r8        # ffffffff800384fb <g_stivale2_header+0x14fb>
ffffffff80016770:	48 8d 15 81 74 02 00 	lea    0x27481(%rip),%rdx        # ffffffff8003dbf8 <__FUNCTION__.0.lto_priv.14>
ffffffff80016777:	48 89 d1             	mov    %rdx,%rcx
ffffffff8001677a:	89 c2                	mov    %eax,%edx
ffffffff8001677c:	48 8d 05 f5 5f 02 00 	lea    0x25ff5(%rip),%rax        # ffffffff8003c778 <g_stivale2_header+0x5778>
ffffffff80016783:	48 89 c7             	mov    %rax,%rdi
ffffffff80016786:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001678b:	e8 b0 cd ff ff       	call   ffffffff80013540 <printf_>
ffffffff80016790:	e9 11 01 00 00       	jmp    ffffffff800168a6 <init_delay+0x185>
ffffffff80016795:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80016799:	0f b6 40 5b          	movzbl 0x5b(%rax),%eax
ffffffff8001679d:	3c 04                	cmp    $0x4,%al
ffffffff8001679f:	74 49                	je     ffffffff800167ea <init_delay+0xc9>
ffffffff800167a1:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%rbp)
ffffffff800167a8:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800167ad:	e8 2f 05 ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff800167b2:	48 89 c6             	mov    %rax,%rsi
ffffffff800167b5:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff800167b8:	41 b9 1a 00 00 00    	mov    $0x1a,%r9d
ffffffff800167be:	4c 8d 05 36 1d 02 00 	lea    0x21d36(%rip),%r8        # ffffffff800384fb <g_stivale2_header+0x14fb>
ffffffff800167c5:	48 8d 15 2c 74 02 00 	lea    0x2742c(%rip),%rdx        # ffffffff8003dbf8 <__FUNCTION__.0.lto_priv.14>
ffffffff800167cc:	48 89 d1             	mov    %rdx,%rcx
ffffffff800167cf:	89 c2                	mov    %eax,%edx
ffffffff800167d1:	48 8d 05 a0 5f 02 00 	lea    0x25fa0(%rip),%rax        # ffffffff8003c778 <g_stivale2_header+0x5778>
ffffffff800167d8:	48 89 c7             	mov    %rax,%rdi
ffffffff800167db:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800167e0:	e8 5b cd ff ff       	call   ffffffff80013540 <printf_>
ffffffff800167e5:	e9 bc 00 00 00       	jmp    ffffffff800168a6 <init_delay+0x185>
ffffffff800167ea:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff800167ee:	8b 40 4c             	mov    0x4c(%rax),%eax
ffffffff800167f1:	85 c0                	test   %eax,%eax
ffffffff800167f3:	75 46                	jne    ffffffff8001683b <init_delay+0x11a>
ffffffff800167f5:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%rbp)
ffffffff800167fc:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80016801:	e8 db 04 ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff80016806:	48 89 c6             	mov    %rax,%rsi
ffffffff80016809:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff8001680c:	41 b9 1b 00 00 00    	mov    $0x1b,%r9d
ffffffff80016812:	4c 8d 05 e2 1c 02 00 	lea    0x21ce2(%rip),%r8        # ffffffff800384fb <g_stivale2_header+0x14fb>
ffffffff80016819:	48 8d 15 d8 73 02 00 	lea    0x273d8(%rip),%rdx        # ffffffff8003dbf8 <__FUNCTION__.0.lto_priv.14>
ffffffff80016820:	48 89 d1             	mov    %rdx,%rcx
ffffffff80016823:	89 c2                	mov    %eax,%edx
ffffffff80016825:	48 8d 05 4c 5f 02 00 	lea    0x25f4c(%rip),%rax        # ffffffff8003c778 <g_stivale2_header+0x5778>
ffffffff8001682c:	48 89 c7             	mov    %rax,%rdi
ffffffff8001682f:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80016834:	e8 07 cd ff ff       	call   ffffffff80013540 <printf_>
ffffffff80016839:	eb 6b                	jmp    ffffffff800168a6 <init_delay+0x185>
ffffffff8001683b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8001683f:	8b 40 4c             	mov    0x4c(%rax),%eax
ffffffff80016842:	66 89 05 5f a9 29 00 	mov    %ax,0x29a95f(%rip)        # ffffffff802b11a8 <m_pm_timer>
ffffffff80016849:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8001684d:	8b 40 70             	mov    0x70(%rax),%eax
ffffffff80016850:	25 00 01 00 00       	and    $0x100,%eax
ffffffff80016855:	85 c0                	test   %eax,%eax
ffffffff80016857:	74 07                	je     ffffffff80016860 <init_delay+0x13f>
ffffffff80016859:	b8 20 00 00 00       	mov    $0x20,%eax
ffffffff8001685e:	eb 05                	jmp    ffffffff80016865 <init_delay+0x144>
ffffffff80016860:	b8 18 00 00 00       	mov    $0x18,%eax
ffffffff80016865:	88 05 3f a9 29 00    	mov    %al,0x29a93f(%rip)        # ffffffff802b11aa <m_pm_timer_bits>
ffffffff8001686b:	0f b6 05 38 a9 29 00 	movzbl 0x29a938(%rip),%eax        # ffffffff802b11aa <m_pm_timer_bits>
ffffffff80016872:	44 0f b6 e0          	movzbl %al,%r12d
ffffffff80016876:	0f b7 05 2b a9 29 00 	movzwl 0x29a92b(%rip),%eax        # ffffffff802b11a8 <m_pm_timer>
ffffffff8001687d:	0f b7 d8             	movzwl %ax,%ebx
ffffffff80016880:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80016885:	e8 57 04 ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff8001688a:	44 89 e1             	mov    %r12d,%ecx
ffffffff8001688d:	89 da                	mov    %ebx,%edx
ffffffff8001688f:	48 89 c6             	mov    %rax,%rsi
ffffffff80016892:	48 8d 05 2f 6a 02 00 	lea    0x26a2f(%rip),%rax        # ffffffff8003d2c8 <g_stivale2_header+0x62c8>
ffffffff80016899:	48 89 c7             	mov    %rax,%rdi
ffffffff8001689c:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800168a1:	e8 9a cc ff ff       	call   ffffffff80013540 <printf_>
ffffffff800168a6:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff800168a9:	90                   	nop
ffffffff800168aa:	90                   	nop
ffffffff800168ab:	48 83 c4 10          	add    $0x10,%rsp
ffffffff800168af:	5b                   	pop    %rbx
ffffffff800168b0:	41 5c                	pop    %r12
ffffffff800168b2:	5d                   	pop    %rbp
ffffffff800168b3:	c3                   	ret    

ffffffff800168b4 <microdelay>:
ffffffff800168b4:	f3 0f 1e fa          	endbr64 
ffffffff800168b8:	55                   	push   %rbp
ffffffff800168b9:	48 89 e5             	mov    %rsp,%rbp
ffffffff800168bc:	48 83 ec 68          	sub    $0x68,%rsp
ffffffff800168c0:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
ffffffff800168c4:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
ffffffff800168c8:	48 89 d0             	mov    %rdx,%rax
ffffffff800168cb:	48 01 c0             	add    %rax,%rax
ffffffff800168ce:	48 01 d0             	add    %rdx,%rax
ffffffff800168d1:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff800168d5:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
ffffffff800168d9:	48 89 d0             	mov    %rdx,%rax
ffffffff800168dc:	48 c1 e0 02          	shl    $0x2,%rax
ffffffff800168e0:	48 01 d0             	add    %rdx,%rax
ffffffff800168e3:	48 ba cd cc cc cc cc 	movabs $0xcccccccccccccccd,%rdx
ffffffff800168ea:	cc cc cc 
ffffffff800168ed:	48 f7 e2             	mul    %rdx
ffffffff800168f0:	48 89 d0             	mov    %rdx,%rax
ffffffff800168f3:	48 c1 e8 03          	shr    $0x3,%rax
ffffffff800168f7:	48 01 45 e0          	add    %rax,-0x20(%rbp)
ffffffff800168fb:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff800168ff:	48 c1 e0 03          	shl    $0x3,%rax
ffffffff80016903:	48 c1 e8 02          	shr    $0x2,%rax
ffffffff80016907:	48 ba c3 f5 28 5c 8f 	movabs $0x28f5c28f5c28f5c3,%rdx
ffffffff8001690e:	c2 f5 28 
ffffffff80016911:	48 f7 e2             	mul    %rdx
ffffffff80016914:	48 89 d0             	mov    %rdx,%rax
ffffffff80016917:	48 c1 e8 02          	shr    $0x2,%rax
ffffffff8001691b:	48 01 45 e0          	add    %rax,-0x20(%rbp)
ffffffff8001691f:	0f b6 05 84 a8 29 00 	movzbl 0x29a884(%rip),%eax        # ffffffff802b11aa <m_pm_timer_bits>
ffffffff80016926:	0f b6 c0             	movzbl %al,%eax
ffffffff80016929:	ba 01 00 00 00       	mov    $0x1,%edx
ffffffff8001692e:	89 c1                	mov    %eax,%ecx
ffffffff80016930:	d3 e2                	shl    %cl,%edx
ffffffff80016932:	89 d0                	mov    %edx,%eax
ffffffff80016934:	48 63 f0             	movslq %eax,%rsi
ffffffff80016937:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8001693b:	ba 00 00 00 00       	mov    $0x0,%edx
ffffffff80016940:	48 f7 f6             	div    %rsi
ffffffff80016943:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff80016947:	0f b6 05 5c a8 29 00 	movzbl 0x29a85c(%rip),%eax        # ffffffff802b11aa <m_pm_timer_bits>
ffffffff8001694e:	0f b6 c0             	movzbl %al,%eax
ffffffff80016951:	ba 01 00 00 00       	mov    $0x1,%edx
ffffffff80016956:	89 c1                	mov    %eax,%ecx
ffffffff80016958:	d3 e2                	shl    %cl,%edx
ffffffff8001695a:	89 d0                	mov    %edx,%eax
ffffffff8001695c:	48 63 c8             	movslq %eax,%rcx
ffffffff8001695f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80016963:	ba 00 00 00 00       	mov    $0x0,%edx
ffffffff80016968:	48 f7 f1             	div    %rcx
ffffffff8001696b:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
ffffffff8001696f:	0f b7 05 32 a8 29 00 	movzwl 0x29a832(%rip),%eax        # ffffffff802b11a8 <m_pm_timer>
ffffffff80016976:	0f b7 c0             	movzwl %ax,%eax
ffffffff80016979:	66 89 45 d2          	mov    %ax,-0x2e(%rbp)
ffffffff8001697d:	0f b7 45 d2          	movzwl -0x2e(%rbp),%eax
ffffffff80016981:	89 c2                	mov    %eax,%edx
ffffffff80016983:	ed                   	in     (%dx),%eax
ffffffff80016984:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
ffffffff80016988:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8001698c:	89 45 f4             	mov    %eax,-0xc(%rbp)
ffffffff8001698f:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff80016992:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff80016996:	48 01 d0             	add    %rdx,%rax
ffffffff80016999:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff8001699d:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff800169a0:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
ffffffff800169a4:	73 0a                	jae    ffffffff800169b0 <microdelay+0xfc>
ffffffff800169a6:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
ffffffff800169ab:	e9 85 00 00 00       	jmp    ffffffff80016a35 <microdelay+0x181>
ffffffff800169b0:	0f b6 05 f3 a7 29 00 	movzbl 0x29a7f3(%rip),%eax        # ffffffff802b11aa <m_pm_timer_bits>
ffffffff800169b7:	0f b6 c0             	movzbl %al,%eax
ffffffff800169ba:	ba 01 00 00 00       	mov    $0x1,%edx
ffffffff800169bf:	89 c1                	mov    %eax,%ecx
ffffffff800169c1:	d3 e2                	shl    %cl,%edx
ffffffff800169c3:	89 d0                	mov    %edx,%eax
ffffffff800169c5:	48 63 f8             	movslq %eax,%rdi
ffffffff800169c8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800169cc:	ba 00 00 00 00       	mov    $0x0,%edx
ffffffff800169d1:	48 f7 f7             	div    %rdi
ffffffff800169d4:	48 01 45 f8          	add    %rax,-0x8(%rbp)
ffffffff800169d8:	0f b6 05 cb a7 29 00 	movzbl 0x29a7cb(%rip),%eax        # ffffffff802b11aa <m_pm_timer_bits>
ffffffff800169df:	0f b6 c0             	movzbl %al,%eax
ffffffff800169e2:	ba 01 00 00 00       	mov    $0x1,%edx
ffffffff800169e7:	89 c1                	mov    %eax,%ecx
ffffffff800169e9:	d3 e2                	shl    %cl,%edx
ffffffff800169eb:	89 d0                	mov    %edx,%eax
ffffffff800169ed:	48 63 c8             	movslq %eax,%rcx
ffffffff800169f0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800169f4:	ba 00 00 00 00       	mov    $0x0,%edx
ffffffff800169f9:	48 f7 f1             	div    %rcx
ffffffff800169fc:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
ffffffff80016a00:	eb 33                	jmp    ffffffff80016a35 <microdelay+0x181>
ffffffff80016a02:	0f b7 05 9f a7 29 00 	movzwl 0x29a79f(%rip),%eax        # ffffffff802b11a8 <m_pm_timer>
ffffffff80016a09:	0f b7 c0             	movzwl %ax,%eax
ffffffff80016a0c:	66 89 45 c6          	mov    %ax,-0x3a(%rbp)
ffffffff80016a10:	0f b7 45 c6          	movzwl -0x3a(%rbp),%eax
ffffffff80016a14:	89 c2                	mov    %eax,%edx
ffffffff80016a16:	ed                   	in     (%dx),%eax
ffffffff80016a17:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
ffffffff80016a1b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff80016a1f:	89 45 d4             	mov    %eax,-0x2c(%rbp)
ffffffff80016a22:	8b 45 d4             	mov    -0x2c(%rbp),%eax
ffffffff80016a25:	3b 45 f4             	cmp    -0xc(%rbp),%eax
ffffffff80016a28:	73 05                	jae    ffffffff80016a2f <microdelay+0x17b>
ffffffff80016a2a:	48 83 6d f8 01       	subq   $0x1,-0x8(%rbp)
ffffffff80016a2f:	8b 45 d4             	mov    -0x2c(%rbp),%eax
ffffffff80016a32:	89 45 f4             	mov    %eax,-0xc(%rbp)
ffffffff80016a35:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff80016a3a:	75 c6                	jne    ffffffff80016a02 <microdelay+0x14e>
ffffffff80016a3c:	eb 2e                	jmp    ffffffff80016a6c <microdelay+0x1b8>
ffffffff80016a3e:	0f b7 05 63 a7 29 00 	movzwl 0x29a763(%rip),%eax        # ffffffff802b11a8 <m_pm_timer>
ffffffff80016a45:	0f b7 c0             	movzwl %ax,%eax
ffffffff80016a48:	66 89 45 b6          	mov    %ax,-0x4a(%rbp)
ffffffff80016a4c:	0f b7 45 b6          	movzwl -0x4a(%rbp),%eax
ffffffff80016a50:	89 c2                	mov    %eax,%edx
ffffffff80016a52:	ed                   	in     (%dx),%eax
ffffffff80016a53:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
ffffffff80016a57:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff80016a5b:	89 45 d4             	mov    %eax,-0x2c(%rbp)
ffffffff80016a5e:	8b 45 d4             	mov    -0x2c(%rbp),%eax
ffffffff80016a61:	3b 45 f4             	cmp    -0xc(%rbp),%eax
ffffffff80016a64:	72 11                	jb     ffffffff80016a77 <microdelay+0x1c3>
ffffffff80016a66:	8b 45 d4             	mov    -0x2c(%rbp),%eax
ffffffff80016a69:	89 45 f4             	mov    %eax,-0xc(%rbp)
ffffffff80016a6c:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff80016a6f:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
ffffffff80016a73:	77 c9                	ja     ffffffff80016a3e <microdelay+0x18a>
ffffffff80016a75:	eb 01                	jmp    ffffffff80016a78 <microdelay+0x1c4>
ffffffff80016a77:	90                   	nop
ffffffff80016a78:	90                   	nop
ffffffff80016a79:	c9                   	leave  
ffffffff80016a7a:	c3                   	ret    

ffffffff80016a7b <init_acpi>:
ffffffff80016a7b:	f3 0f 1e fa          	endbr64 
ffffffff80016a7f:	55                   	push   %rbp
ffffffff80016a80:	48 89 e5             	mov    %rsp,%rbp
ffffffff80016a83:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff80016a87:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
ffffffff80016a8e:	48 b8 78 5e 37 0a 93 	movabs $0x9e1786930a375e78,%rax
ffffffff80016a95:	86 17 9e 
ffffffff80016a98:	48 89 c7             	mov    %rax,%rdi
ffffffff80016a9b:	e8 a2 b4 fe ff       	call   ffffffff80001f42 <get_stivale2_tag>
ffffffff80016aa0:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff80016aa4:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
ffffffff80016aa9:	75 49                	jne    ffffffff80016af4 <init_acpi+0x79>
ffffffff80016aab:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)
ffffffff80016ab2:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80016ab7:	e8 25 02 ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff80016abc:	48 89 c6             	mov    %rax,%rsi
ffffffff80016abf:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff80016ac2:	41 b9 0f 00 00 00    	mov    $0xf,%r9d
ffffffff80016ac8:	4c 8d 05 40 1a 02 00 	lea    0x21a40(%rip),%r8        # ffffffff8003850f <g_stivale2_header+0x150f>
ffffffff80016acf:	48 8d 15 32 71 02 00 	lea    0x27132(%rip),%rdx        # ffffffff8003dc08 <__FUNCTION__.1.lto_priv.8>
ffffffff80016ad6:	48 89 d1             	mov    %rdx,%rcx
ffffffff80016ad9:	89 c2                	mov    %eax,%edx
ffffffff80016adb:	48 8d 05 96 5c 02 00 	lea    0x25c96(%rip),%rax        # ffffffff8003c778 <g_stivale2_header+0x5778>
ffffffff80016ae2:	48 89 c7             	mov    %rax,%rdi
ffffffff80016ae5:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80016aea:	e8 51 ca ff ff       	call   ffffffff80013540 <printf_>
ffffffff80016aef:	e9 89 01 00 00       	jmp    ffffffff80016c7d <init_acpi+0x202>
ffffffff80016af4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80016af8:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff80016afc:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff80016b00:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80016b04:	48 8b 10             	mov    (%rax),%rdx
ffffffff80016b07:	48 b8 52 53 44 20 50 	movabs $0x2052545020445352,%rax
ffffffff80016b0e:	54 52 20 
ffffffff80016b11:	48 39 c2             	cmp    %rax,%rdx
ffffffff80016b14:	74 49                	je     ffffffff80016b5f <init_acpi+0xe4>
ffffffff80016b16:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)
ffffffff80016b1d:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80016b22:	e8 ba 01 ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff80016b27:	48 89 c6             	mov    %rax,%rsi
ffffffff80016b2a:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff80016b2d:	41 b9 14 00 00 00    	mov    $0x14,%r9d
ffffffff80016b33:	4c 8d 05 d5 19 02 00 	lea    0x219d5(%rip),%r8        # ffffffff8003850f <g_stivale2_header+0x150f>
ffffffff80016b3a:	48 8d 15 c7 70 02 00 	lea    0x270c7(%rip),%rdx        # ffffffff8003dc08 <__FUNCTION__.1.lto_priv.8>
ffffffff80016b41:	48 89 d1             	mov    %rdx,%rcx
ffffffff80016b44:	89 c2                	mov    %eax,%edx
ffffffff80016b46:	48 8d 05 2b 5c 02 00 	lea    0x25c2b(%rip),%rax        # ffffffff8003c778 <g_stivale2_header+0x5778>
ffffffff80016b4d:	48 89 c7             	mov    %rax,%rdi
ffffffff80016b50:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80016b55:	e8 e6 c9 ff ff       	call   ffffffff80013540 <printf_>
ffffffff80016b5a:	e9 1e 01 00 00       	jmp    ffffffff80016c7d <init_acpi+0x202>
ffffffff80016b5f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80016b63:	8b 40 10             	mov    0x10(%rax),%eax
ffffffff80016b66:	89 c0                	mov    %eax,%eax
ffffffff80016b68:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff80016b6c:	48 b8 00 00 00 00 80 	movabs $0x8000000000,%rax
ffffffff80016b73:	00 00 00 
ffffffff80016b76:	48 39 45 e0          	cmp    %rax,-0x20(%rbp)
ffffffff80016b7a:	76 3d                	jbe    ffffffff80016bb9 <init_acpi+0x13e>
ffffffff80016b7c:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80016b81:	e8 5b 01 ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff80016b86:	48 89 c6             	mov    %rax,%rsi
ffffffff80016b89:	41 b8 17 00 00 00    	mov    $0x17,%r8d
ffffffff80016b8f:	48 8d 05 79 19 02 00 	lea    0x21979(%rip),%rax        # ffffffff8003850f <g_stivale2_header+0x150f>
ffffffff80016b96:	48 89 c1             	mov    %rax,%rcx
ffffffff80016b99:	48 8d 05 68 70 02 00 	lea    0x27068(%rip),%rax        # ffffffff8003dc08 <__FUNCTION__.1.lto_priv.8>
ffffffff80016ba0:	48 89 c2             	mov    %rax,%rdx
ffffffff80016ba3:	48 8d 05 16 5c 02 00 	lea    0x25c16(%rip),%rax        # ffffffff8003c7c0 <g_stivale2_header+0x57c0>
ffffffff80016baa:	48 89 c7             	mov    %rax,%rdi
ffffffff80016bad:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80016bb2:	e8 89 c9 ff ff       	call   ffffffff80013540 <printf_>
ffffffff80016bb7:	0f 0b                	ud2    
ffffffff80016bb9:	48 ba 00 00 00 00 00 	movabs $0xffff800000000000,%rdx
ffffffff80016bc0:	80 ff ff 
ffffffff80016bc3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80016bc7:	48 01 d0             	add    %rdx,%rax
ffffffff80016bca:	48 89 05 df a5 29 00 	mov    %rax,0x29a5df(%rip)        # ffffffff802b11b0 <m_rsdt>
ffffffff80016bd1:	48 8b 05 d8 a5 29 00 	mov    0x29a5d8(%rip),%rax        # ffffffff802b11b0 <m_rsdt>
ffffffff80016bd8:	8b 00                	mov    (%rax),%eax
ffffffff80016bda:	3d 52 53 44 54       	cmp    $0x54445352,%eax
ffffffff80016bdf:	74 46                	je     ffffffff80016c27 <init_acpi+0x1ac>
ffffffff80016be1:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)
ffffffff80016be8:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80016bed:	e8 ef 00 ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff80016bf2:	48 89 c6             	mov    %rax,%rsi
ffffffff80016bf5:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff80016bf8:	41 b9 18 00 00 00    	mov    $0x18,%r9d
ffffffff80016bfe:	4c 8d 05 0a 19 02 00 	lea    0x2190a(%rip),%r8        # ffffffff8003850f <g_stivale2_header+0x150f>
ffffffff80016c05:	48 8d 15 fc 6f 02 00 	lea    0x26ffc(%rip),%rdx        # ffffffff8003dc08 <__FUNCTION__.1.lto_priv.8>
ffffffff80016c0c:	48 89 d1             	mov    %rdx,%rcx
ffffffff80016c0f:	89 c2                	mov    %eax,%edx
ffffffff80016c11:	48 8d 05 60 5b 02 00 	lea    0x25b60(%rip),%rax        # ffffffff8003c778 <g_stivale2_header+0x5778>
ffffffff80016c18:	48 89 c7             	mov    %rax,%rdi
ffffffff80016c1b:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80016c20:	e8 1b c9 ff ff       	call   ffffffff80013540 <printf_>
ffffffff80016c25:	eb 56                	jmp    ffffffff80016c7d <init_acpi+0x202>
ffffffff80016c27:	48 8b 05 82 a5 29 00 	mov    0x29a582(%rip),%rax        # ffffffff802b11b0 <m_rsdt>
ffffffff80016c2e:	0f b6 40 08          	movzbl 0x8(%rax),%eax
ffffffff80016c32:	84 c0                	test   %al,%al
ffffffff80016c34:	75 46                	jne    ffffffff80016c7c <init_acpi+0x201>
ffffffff80016c36:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)
ffffffff80016c3d:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80016c42:	e8 9a 00 ff ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff80016c47:	48 89 c6             	mov    %rax,%rsi
ffffffff80016c4a:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff80016c4d:	41 b9 19 00 00 00    	mov    $0x19,%r9d
ffffffff80016c53:	4c 8d 05 b5 18 02 00 	lea    0x218b5(%rip),%r8        # ffffffff8003850f <g_stivale2_header+0x150f>
ffffffff80016c5a:	48 8d 15 a7 6f 02 00 	lea    0x26fa7(%rip),%rdx        # ffffffff8003dc08 <__FUNCTION__.1.lto_priv.8>
ffffffff80016c61:	48 89 d1             	mov    %rdx,%rcx
ffffffff80016c64:	89 c2                	mov    %eax,%edx
ffffffff80016c66:	48 8d 05 0b 5b 02 00 	lea    0x25b0b(%rip),%rax        # ffffffff8003c778 <g_stivale2_header+0x5778>
ffffffff80016c6d:	48 89 c7             	mov    %rax,%rdi
ffffffff80016c70:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80016c75:	e8 c6 c8 ff ff       	call   ffffffff80013540 <printf_>
ffffffff80016c7a:	eb 01                	jmp    ffffffff80016c7d <init_acpi+0x202>
ffffffff80016c7c:	90                   	nop
ffffffff80016c7d:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff80016c80:	90                   	nop
ffffffff80016c81:	90                   	nop
ffffffff80016c82:	c9                   	leave  
ffffffff80016c83:	c3                   	ret    

ffffffff80016c84 <acpi_get_table>:
ffffffff80016c84:	f3 0f 1e fa          	endbr64 
ffffffff80016c88:	55                   	push   %rbp
ffffffff80016c89:	48 89 e5             	mov    %rsp,%rbp
ffffffff80016c8c:	48 83 ec 40          	sub    $0x40,%rsp
ffffffff80016c90:	89 7d cc             	mov    %edi,-0x34(%rbp)
ffffffff80016c93:	48 8b 05 16 a5 29 00 	mov    0x29a516(%rip),%rax        # ffffffff802b11b0 <m_rsdt>
ffffffff80016c9a:	8b 40 04             	mov    0x4(%rax),%eax
ffffffff80016c9d:	89 c0                	mov    %eax,%eax
ffffffff80016c9f:	48 83 e8 24          	sub    $0x24,%rax
ffffffff80016ca3:	48 c1 e8 02          	shr    $0x2,%rax
ffffffff80016ca7:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff80016cab:	48 8b 05 fe a4 29 00 	mov    0x29a4fe(%rip),%rax        # ffffffff802b11b0 <m_rsdt>
ffffffff80016cb2:	48 83 c0 24          	add    $0x24,%rax
ffffffff80016cb6:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff80016cba:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
ffffffff80016cc1:	e9 93 00 00 00       	jmp    ffffffff80016d59 <acpi_get_table+0xd5>
ffffffff80016cc6:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff80016cc9:	48 98                	cltq   
ffffffff80016ccb:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
ffffffff80016cd2:	00 
ffffffff80016cd3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80016cd7:	48 01 d0             	add    %rdx,%rax
ffffffff80016cda:	8b 00                	mov    (%rax),%eax
ffffffff80016cdc:	89 c0                	mov    %eax,%eax
ffffffff80016cde:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff80016ce2:	48 b8 00 00 00 00 80 	movabs $0x8000000000,%rax
ffffffff80016ce9:	00 00 00 
ffffffff80016cec:	48 39 45 e0          	cmp    %rax,-0x20(%rbp)
ffffffff80016cf0:	76 3d                	jbe    ffffffff80016d2f <acpi_get_table+0xab>
ffffffff80016cf2:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80016cf7:	e8 e5 ff fe ff       	call   ffffffff80006ce1 <get_apic_id>
ffffffff80016cfc:	48 89 c6             	mov    %rax,%rsi
ffffffff80016cff:	41 b8 23 00 00 00    	mov    $0x23,%r8d
ffffffff80016d05:	48 8d 05 03 18 02 00 	lea    0x21803(%rip),%rax        # ffffffff8003850f <g_stivale2_header+0x150f>
ffffffff80016d0c:	48 89 c1             	mov    %rax,%rcx
ffffffff80016d0f:	48 8d 05 02 6f 02 00 	lea    0x26f02(%rip),%rax        # ffffffff8003dc18 <__FUNCTION__.0.lto_priv.15>
ffffffff80016d16:	48 89 c2             	mov    %rax,%rdx
ffffffff80016d19:	48 8d 05 a0 5a 02 00 	lea    0x25aa0(%rip),%rax        # ffffffff8003c7c0 <g_stivale2_header+0x57c0>
ffffffff80016d20:	48 89 c7             	mov    %rax,%rdi
ffffffff80016d23:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80016d28:	e8 13 c8 ff ff       	call   ffffffff80013540 <printf_>
ffffffff80016d2d:	0f 0b                	ud2    
ffffffff80016d2f:	48 ba 00 00 00 00 00 	movabs $0xffff800000000000,%rdx
ffffffff80016d36:	80 ff ff 
ffffffff80016d39:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80016d3d:	48 01 d0             	add    %rdx,%rax
ffffffff80016d40:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
ffffffff80016d44:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80016d48:	8b 00                	mov    (%rax),%eax
ffffffff80016d4a:	39 45 cc             	cmp    %eax,-0x34(%rbp)
ffffffff80016d4d:	75 06                	jne    ffffffff80016d55 <acpi_get_table+0xd1>
ffffffff80016d4f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80016d53:	eb 19                	jmp    ffffffff80016d6e <acpi_get_table+0xea>
ffffffff80016d55:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
ffffffff80016d59:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff80016d5c:	48 98                	cltq   
ffffffff80016d5e:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
ffffffff80016d62:	0f 87 5e ff ff ff    	ja     ffffffff80016cc6 <acpi_get_table+0x42>
ffffffff80016d68:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80016d6d:	90                   	nop
ffffffff80016d6e:	c9                   	leave  
ffffffff80016d6f:	c3                   	ret    

ffffffff80016d70 <ZyanAbsI64.lto_priv.0>:
ffffffff80016d70:	55                   	push   %rbp
ffffffff80016d71:	48 89 e5             	mov    %rsp,%rbp
ffffffff80016d74:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80016d78:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff80016d7c:	48 b8 00 00 00 00 00 	movabs $0x8000000000000000,%rax
ffffffff80016d83:	00 00 80 
ffffffff80016d86:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
ffffffff80016d8a:	75 0c                	jne    ffffffff80016d98 <ZyanAbsI64.lto_priv.0+0x28>
ffffffff80016d8c:	48 b8 00 00 00 00 00 	movabs $0x8000000000000000,%rax
ffffffff80016d93:	00 00 80 
ffffffff80016d96:	eb 0c                	jmp    ffffffff80016da4 <ZyanAbsI64.lto_priv.0+0x34>
ffffffff80016d98:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80016d9c:	48 99                	cqto   
ffffffff80016d9e:	48 31 d0             	xor    %rdx,%rax
ffffffff80016da1:	48 29 d0             	sub    %rdx,%rax
ffffffff80016da4:	c9                   	leave  
ffffffff80016da5:	c3                   	ret    

ffffffff80016da6 <ZYAN_MEMCPY.lto_priv.0>:
ffffffff80016da6:	55                   	push   %rbp
ffffffff80016da7:	48 89 e5             	mov    %rsp,%rbp
ffffffff80016daa:	48 83 ec 28          	sub    $0x28,%rsp
ffffffff80016dae:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff80016db2:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
ffffffff80016db6:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
ffffffff80016dba:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80016dbe:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff80016dc2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80016dc6:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff80016dca:	eb 1d                	jmp    ffffffff80016de9 <ZYAN_MEMCPY.lto_priv.0+0x43>
ffffffff80016dcc:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff80016dd0:	48 8d 42 01          	lea    0x1(%rdx),%rax
ffffffff80016dd4:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff80016dd8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80016ddc:	48 8d 48 01          	lea    0x1(%rax),%rcx
ffffffff80016de0:	48 89 4d f8          	mov    %rcx,-0x8(%rbp)
ffffffff80016de4:	0f b6 12             	movzbl (%rdx),%edx
ffffffff80016de7:	88 10                	mov    %dl,(%rax)
ffffffff80016de9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80016ded:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
ffffffff80016df1:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
ffffffff80016df5:	48 85 c0             	test   %rax,%rax
ffffffff80016df8:	75 d2                	jne    ffffffff80016dcc <ZYAN_MEMCPY.lto_priv.0+0x26>
ffffffff80016dfa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80016dfe:	c9                   	leave  
ffffffff80016dff:	c3                   	ret    

ffffffff80016e00 <ZYAN_MEMSET.lto_priv.0>:
ffffffff80016e00:	55                   	push   %rbp
ffffffff80016e01:	48 89 e5             	mov    %rsp,%rbp
ffffffff80016e04:	48 83 ec 28          	sub    $0x28,%rsp
ffffffff80016e08:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff80016e0c:	89 75 e4             	mov    %esi,-0x1c(%rbp)
ffffffff80016e0f:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
ffffffff80016e13:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80016e17:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff80016e1b:	eb 11                	jmp    ffffffff80016e2e <ZYAN_MEMSET.lto_priv.0+0x2e>
ffffffff80016e1d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80016e21:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffff80016e25:	48 89 55 f8          	mov    %rdx,-0x8(%rbp)
ffffffff80016e29:	8b 55 e4             	mov    -0x1c(%rbp),%edx
ffffffff80016e2c:	88 10                	mov    %dl,(%rax)
ffffffff80016e2e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80016e32:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
ffffffff80016e36:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
ffffffff80016e3a:	48 85 c0             	test   %rax,%rax
ffffffff80016e3d:	75 de                	jne    ffffffff80016e1d <ZYAN_MEMSET.lto_priv.0+0x1d>
ffffffff80016e3f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80016e43:	c9                   	leave  
ffffffff80016e44:	c3                   	ret    

ffffffff80016e45 <ZyanStringAppendDecU64>:
ffffffff80016e45:	f3 0f 1e fa          	endbr64 
ffffffff80016e49:	55                   	push   %rbp
ffffffff80016e4a:	48 89 e5             	mov    %rsp,%rbp
ffffffff80016e4d:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
ffffffff80016e51:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
ffffffff80016e55:	48 89 75 90          	mov    %rsi,-0x70(%rbp)
ffffffff80016e59:	89 d0                	mov    %edx,%eax
ffffffff80016e5b:	88 45 8c             	mov    %al,-0x74(%rbp)
ffffffff80016e5e:	48 83 7d 98 00       	cmpq   $0x0,-0x68(%rbp)
ffffffff80016e63:	75 0a                	jne    ffffffff80016e6f <ZyanStringAppendDecU64+0x2a>
ffffffff80016e65:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff80016e6a:	e9 dc 01 00 00       	jmp    ffffffff8001704b <ZyanStringAppendDecU64+0x206>
ffffffff80016e6f:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
ffffffff80016e73:	48 83 c0 14          	add    $0x14,%rax
ffffffff80016e77:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff80016e7b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80016e7f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff80016e83:	eb 5d                	jmp    ffffffff80016ee2 <ZyanStringAppendDecU64+0x9d>
ffffffff80016e85:	48 8b 45 90          	mov    -0x70(%rbp),%rax
ffffffff80016e89:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
ffffffff80016e8d:	48 83 6d f8 02       	subq   $0x2,-0x8(%rbp)
ffffffff80016e92:	48 8b 45 90          	mov    -0x70(%rbp),%rax
ffffffff80016e96:	48 c1 e8 02          	shr    $0x2,%rax
ffffffff80016e9a:	48 ba c3 f5 28 5c 8f 	movabs $0x28f5c28f5c28f5c3,%rdx
ffffffff80016ea1:	c2 f5 28 
ffffffff80016ea4:	48 f7 e2             	mul    %rdx
ffffffff80016ea7:	48 89 d0             	mov    %rdx,%rax
ffffffff80016eaa:	48 c1 e8 02          	shr    $0x2,%rax
ffffffff80016eae:	48 89 45 90          	mov    %rax,-0x70(%rbp)
ffffffff80016eb2:	48 8d 0d 37 64 02 00 	lea    0x26437(%rip),%rcx        # ffffffff8003d2f0 <g_stivale2_header+0x62f0>
ffffffff80016eb9:	48 8b 45 90          	mov    -0x70(%rbp),%rax
ffffffff80016ebd:	48 6b d0 64          	imul   $0x64,%rax,%rdx
ffffffff80016ec1:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff80016ec5:	48 29 d0             	sub    %rdx,%rax
ffffffff80016ec8:	48 01 c0             	add    %rax,%rax
ffffffff80016ecb:	48 01 c1             	add    %rax,%rcx
ffffffff80016ece:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80016ed2:	ba 02 00 00 00       	mov    $0x2,%edx
ffffffff80016ed7:	48 89 ce             	mov    %rcx,%rsi
ffffffff80016eda:	48 89 c7             	mov    %rax,%rdi
ffffffff80016edd:	e8 c4 fe ff ff       	call   ffffffff80016da6 <ZYAN_MEMCPY.lto_priv.0>
ffffffff80016ee2:	48 83 7d 90 63       	cmpq   $0x63,-0x70(%rbp)
ffffffff80016ee7:	77 9c                	ja     ffffffff80016e85 <ZyanStringAppendDecU64+0x40>
ffffffff80016ee9:	48 83 6d f8 02       	subq   $0x2,-0x8(%rbp)
ffffffff80016eee:	48 8d 15 fb 63 02 00 	lea    0x263fb(%rip),%rdx        # ffffffff8003d2f0 <g_stivale2_header+0x62f0>
ffffffff80016ef5:	48 8b 45 90          	mov    -0x70(%rbp),%rax
ffffffff80016ef9:	48 01 c0             	add    %rax,%rax
ffffffff80016efc:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
ffffffff80016f00:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80016f04:	ba 02 00 00 00       	mov    $0x2,%edx
ffffffff80016f09:	48 89 ce             	mov    %rcx,%rsi
ffffffff80016f0c:	48 89 c7             	mov    %rax,%rdi
ffffffff80016f0f:	e8 92 fe ff ff       	call   ffffffff80016da6 <ZYAN_MEMCPY.lto_priv.0>
ffffffff80016f14:	48 83 7d 90 09       	cmpq   $0x9,-0x70(%rbp)
ffffffff80016f19:	0f 96 c0             	setbe  %al
ffffffff80016f1c:	0f b6 c0             	movzbl %al,%eax
ffffffff80016f1f:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff80016f23:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80016f27:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
ffffffff80016f2b:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
ffffffff80016f2f:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
ffffffff80016f33:	0f b6 45 8c          	movzbl -0x74(%rbp),%eax
ffffffff80016f37:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff80016f3b:	48 39 c2             	cmp    %rax,%rdx
ffffffff80016f3e:	48 0f 43 c2          	cmovae %rdx,%rax
ffffffff80016f42:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
ffffffff80016f46:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff80016f4a:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff80016f4e:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
ffffffff80016f52:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff80016f56:	48 8b 50 18          	mov    0x18(%rax),%rdx
ffffffff80016f5a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff80016f5e:	48 01 c2             	add    %rax,%rdx
ffffffff80016f61:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff80016f65:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff80016f69:	48 39 c2             	cmp    %rax,%rdx
ffffffff80016f6c:	76 34                	jbe    ffffffff80016fa2 <ZyanStringAppendDecU64+0x15d>
ffffffff80016f6e:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff80016f72:	48 8b 50 18          	mov    0x18(%rax),%rdx
ffffffff80016f76:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff80016f7a:	48 01 d0             	add    %rdx,%rax
ffffffff80016f7d:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
ffffffff80016f81:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff80016f85:	48 89 d6             	mov    %rdx,%rsi
ffffffff80016f88:	48 89 c7             	mov    %rax,%rdi
ffffffff80016f8b:	e8 52 22 00 00       	call   ffffffff800191e2 <ZyanStringResize>
ffffffff80016f90:	89 45 c4             	mov    %eax,-0x3c(%rbp)
ffffffff80016f93:	8b 45 c4             	mov    -0x3c(%rbp),%eax
ffffffff80016f96:	85 c0                	test   %eax,%eax
ffffffff80016f98:	79 08                	jns    ffffffff80016fa2 <ZyanStringAppendDecU64+0x15d>
ffffffff80016f9a:	8b 45 c4             	mov    -0x3c(%rbp),%eax
ffffffff80016f9d:	e9 a9 00 00 00       	jmp    ffffffff8001704b <ZyanStringAppendDecU64+0x206>
ffffffff80016fa2:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
ffffffff80016fa9:	00 
ffffffff80016faa:	0f b6 45 8c          	movzbl -0x74(%rbp),%eax
ffffffff80016fae:	48 39 45 d8          	cmp    %rax,-0x28(%rbp)
ffffffff80016fb2:	73 30                	jae    ffffffff80016fe4 <ZyanStringAppendDecU64+0x19f>
ffffffff80016fb4:	0f b6 45 8c          	movzbl -0x74(%rbp),%eax
ffffffff80016fb8:	48 2b 45 d8          	sub    -0x28(%rbp),%rax
ffffffff80016fbc:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff80016fc0:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff80016fc4:	48 8b 50 38          	mov    0x38(%rax),%rdx
ffffffff80016fc8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80016fcc:	48 83 e8 01          	sub    $0x1,%rax
ffffffff80016fd0:	48 01 d0             	add    %rdx,%rax
ffffffff80016fd3:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff80016fd7:	be 30 00 00 00       	mov    $0x30,%esi
ffffffff80016fdc:	48 89 c7             	mov    %rax,%rdi
ffffffff80016fdf:	e8 1c fe ff ff       	call   ffffffff80016e00 <ZYAN_MEMSET.lto_priv.0>
ffffffff80016fe4:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff80016fe8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80016fec:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
ffffffff80016ff0:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff80016ff4:	48 8b 50 38          	mov    0x38(%rax),%rdx
ffffffff80016ff8:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
ffffffff80016ffc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80017000:	48 01 f0             	add    %rsi,%rax
ffffffff80017003:	48 83 e8 01          	sub    $0x1,%rax
ffffffff80017007:	48 01 d0             	add    %rdx,%rax
ffffffff8001700a:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff8001700e:	48 89 ce             	mov    %rcx,%rsi
ffffffff80017011:	48 89 c7             	mov    %rax,%rdi
ffffffff80017014:	e8 8d fd ff ff       	call   ffffffff80016da6 <ZYAN_MEMCPY.lto_priv.0>
ffffffff80017019:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
ffffffff8001701d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff80017021:	48 01 c2             	add    %rax,%rdx
ffffffff80017024:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff80017028:	48 89 50 18          	mov    %rdx,0x18(%rax)
ffffffff8001702c:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff80017030:	48 8b 50 38          	mov    0x38(%rax),%rdx
ffffffff80017034:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff80017038:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff8001703c:	48 83 e8 01          	sub    $0x1,%rax
ffffffff80017040:	48 01 d0             	add    %rdx,%rax
ffffffff80017043:	c6 00 00             	movb   $0x0,(%rax)
ffffffff80017046:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff8001704b:	c9                   	leave  
ffffffff8001704c:	c3                   	ret    

ffffffff8001704d <ZyanStringAppendHexU64>:
ffffffff8001704d:	f3 0f 1e fa          	endbr64 
ffffffff80017051:	55                   	push   %rbp
ffffffff80017052:	48 89 e5             	mov    %rsp,%rbp
ffffffff80017055:	48 83 ec 60          	sub    $0x60,%rsp
ffffffff80017059:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
ffffffff8001705d:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
ffffffff80017061:	89 c8                	mov    %ecx,%eax
ffffffff80017063:	88 55 ac             	mov    %dl,-0x54(%rbp)
ffffffff80017066:	88 45 a8             	mov    %al,-0x58(%rbp)
ffffffff80017069:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
ffffffff8001706e:	75 0a                	jne    ffffffff8001707a <ZyanStringAppendHexU64+0x2d>
ffffffff80017070:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff80017075:	e9 ad 02 00 00       	jmp    ffffffff80017327 <ZyanStringAppendHexU64+0x2da>
ffffffff8001707a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff8001707e:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff80017082:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
ffffffff80017086:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff8001708a:	48 8b 50 20          	mov    0x20(%rax),%rdx
ffffffff8001708e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff80017092:	48 8b 48 18          	mov    0x18(%rax),%rcx
ffffffff80017096:	48 89 d0             	mov    %rdx,%rax
ffffffff80017099:	48 29 c8             	sub    %rcx,%rax
ffffffff8001709c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff800170a0:	0f b6 45 ac          	movzbl -0x54(%rbp),%eax
ffffffff800170a4:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
ffffffff800170a8:	73 38                	jae    ffffffff800170e2 <ZyanStringAppendHexU64+0x95>
ffffffff800170aa:	0f b6 45 ac          	movzbl -0x54(%rbp),%eax
ffffffff800170ae:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff800170b2:	48 01 d0             	add    %rdx,%rax
ffffffff800170b5:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
ffffffff800170b9:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff800170bd:	48 89 d6             	mov    %rdx,%rsi
ffffffff800170c0:	48 89 c7             	mov    %rax,%rdi
ffffffff800170c3:	e8 1a 21 00 00       	call   ffffffff800191e2 <ZyanStringResize>
ffffffff800170c8:	89 45 d4             	mov    %eax,-0x2c(%rbp)
ffffffff800170cb:	8b 45 d4             	mov    -0x2c(%rbp),%eax
ffffffff800170ce:	85 c0                	test   %eax,%eax
ffffffff800170d0:	79 08                	jns    ffffffff800170da <ZyanStringAppendHexU64+0x8d>
ffffffff800170d2:	8b 45 d4             	mov    -0x2c(%rbp),%eax
ffffffff800170d5:	e9 4d 02 00 00       	jmp    ffffffff80017327 <ZyanStringAppendHexU64+0x2da>
ffffffff800170da:	0f b6 45 ac          	movzbl -0x54(%rbp),%eax
ffffffff800170de:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff800170e2:	48 83 7d b0 00       	cmpq   $0x0,-0x50(%rbp)
ffffffff800170e7:	0f 85 b0 00 00 00    	jne    ffffffff8001719d <ZyanStringAppendHexU64+0x150>
ffffffff800170ed:	80 7d ac 00          	cmpb   $0x0,-0x54(%rbp)
ffffffff800170f1:	74 06                	je     ffffffff800170f9 <ZyanStringAppendHexU64+0xac>
ffffffff800170f3:	0f b6 45 ac          	movzbl -0x54(%rbp),%eax
ffffffff800170f7:	eb 05                	jmp    ffffffff800170fe <ZyanStringAppendHexU64+0xb1>
ffffffff800170f9:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff800170fe:	88 45 cb             	mov    %al,-0x35(%rbp)
ffffffff80017101:	0f b6 45 cb          	movzbl -0x35(%rbp),%eax
ffffffff80017105:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
ffffffff80017109:	73 34                	jae    ffffffff8001713f <ZyanStringAppendHexU64+0xf2>
ffffffff8001710b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff8001710f:	48 8b 50 18          	mov    0x18(%rax),%rdx
ffffffff80017113:	0f b6 45 cb          	movzbl -0x35(%rbp),%eax
ffffffff80017117:	48 01 d0             	add    %rdx,%rax
ffffffff8001711a:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
ffffffff8001711e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff80017122:	48 89 d6             	mov    %rdx,%rsi
ffffffff80017125:	48 89 c7             	mov    %rax,%rdi
ffffffff80017128:	e8 b5 20 00 00       	call   ffffffff800191e2 <ZyanStringResize>
ffffffff8001712d:	89 45 c4             	mov    %eax,-0x3c(%rbp)
ffffffff80017130:	8b 45 c4             	mov    -0x3c(%rbp),%eax
ffffffff80017133:	85 c0                	test   %eax,%eax
ffffffff80017135:	79 08                	jns    ffffffff8001713f <ZyanStringAppendHexU64+0xf2>
ffffffff80017137:	8b 45 c4             	mov    -0x3c(%rbp),%eax
ffffffff8001713a:	e9 e8 01 00 00       	jmp    ffffffff80017327 <ZyanStringAppendHexU64+0x2da>
ffffffff8001713f:	0f b6 45 cb          	movzbl -0x35(%rbp),%eax
ffffffff80017143:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
ffffffff80017147:	48 8b 4a 38          	mov    0x38(%rdx),%rcx
ffffffff8001714b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff8001714f:	48 83 ea 01          	sub    $0x1,%rdx
ffffffff80017153:	48 01 d1             	add    %rdx,%rcx
ffffffff80017156:	48 89 c2             	mov    %rax,%rdx
ffffffff80017159:	be 30 00 00 00       	mov    $0x30,%esi
ffffffff8001715e:	48 89 cf             	mov    %rcx,%rdi
ffffffff80017161:	e8 9a fc ff ff       	call   ffffffff80016e00 <ZYAN_MEMSET.lto_priv.0>
ffffffff80017166:	0f b6 45 cb          	movzbl -0x35(%rbp),%eax
ffffffff8001716a:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff8001716e:	48 01 c2             	add    %rax,%rdx
ffffffff80017171:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff80017175:	48 89 50 18          	mov    %rdx,0x18(%rax)
ffffffff80017179:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff8001717d:	48 8b 50 38          	mov    0x38(%rax),%rdx
ffffffff80017181:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff80017185:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff80017189:	48 83 e8 01          	sub    $0x1,%rax
ffffffff8001718d:	48 01 d0             	add    %rdx,%rax
ffffffff80017190:	c6 00 00             	movb   $0x0,(%rax)
ffffffff80017193:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff80017198:	e9 8a 01 00 00       	jmp    ffffffff80017327 <ZyanStringAppendHexU64+0x2da>
ffffffff8001719d:	c6 45 f7 00          	movb   $0x0,-0x9(%rbp)
ffffffff800171a1:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
ffffffff800171a8:	00 
ffffffff800171a9:	48 b8 00 00 00 00 ff 	movabs $0xffffffff00000000,%rax
ffffffff800171b0:	ff ff ff 
ffffffff800171b3:	48 23 45 b0          	and    -0x50(%rbp),%rax
ffffffff800171b7:	48 85 c0             	test   %rax,%rax
ffffffff800171ba:	74 07                	je     ffffffff800171c3 <ZyanStringAppendHexU64+0x176>
ffffffff800171bc:	b8 0f 00 00 00       	mov    $0xf,%eax
ffffffff800171c1:	eb 05                	jmp    ffffffff800171c8 <ZyanStringAppendHexU64+0x17b>
ffffffff800171c3:	b8 07 00 00 00       	mov    $0x7,%eax
ffffffff800171c8:	88 45 e7             	mov    %al,-0x19(%rbp)
ffffffff800171cb:	e9 1b 01 00 00       	jmp    ffffffff800172eb <ZyanStringAppendHexU64+0x29e>
ffffffff800171d0:	0f be 45 e7          	movsbl -0x19(%rbp),%eax
ffffffff800171d4:	c1 e0 02             	shl    $0x2,%eax
ffffffff800171d7:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
ffffffff800171db:	89 c1                	mov    %eax,%ecx
ffffffff800171dd:	48 d3 ea             	shr    %cl,%rdx
ffffffff800171e0:	48 89 d0             	mov    %rdx,%rax
ffffffff800171e3:	83 e0 0f             	and    $0xf,%eax
ffffffff800171e6:	88 45 d3             	mov    %al,-0x2d(%rbp)
ffffffff800171e9:	80 7d f7 00          	cmpb   $0x0,-0x9(%rbp)
ffffffff800171ed:	0f 85 93 00 00 00    	jne    ffffffff80017286 <ZyanStringAppendHexU64+0x239>
ffffffff800171f3:	80 7d d3 00          	cmpb   $0x0,-0x2d(%rbp)
ffffffff800171f7:	0f 84 e3 00 00 00    	je     ffffffff800172e0 <ZyanStringAppendHexU64+0x293>
ffffffff800171fd:	0f b6 45 e7          	movzbl -0x19(%rbp),%eax
ffffffff80017201:	0f b6 c0             	movzbl %al,%eax
ffffffff80017204:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
ffffffff80017208:	77 31                	ja     ffffffff8001723b <ZyanStringAppendHexU64+0x1ee>
ffffffff8001720a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff8001720e:	48 8b 50 18          	mov    0x18(%rax),%rdx
ffffffff80017212:	48 0f be 45 e7       	movsbq -0x19(%rbp),%rax
ffffffff80017217:	48 01 c2             	add    %rax,%rdx
ffffffff8001721a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff8001721e:	48 89 d6             	mov    %rdx,%rsi
ffffffff80017221:	48 89 c7             	mov    %rax,%rdi
ffffffff80017224:	e8 b9 1f 00 00       	call   ffffffff800191e2 <ZyanStringResize>
ffffffff80017229:	89 45 cc             	mov    %eax,-0x34(%rbp)
ffffffff8001722c:	8b 45 cc             	mov    -0x34(%rbp),%eax
ffffffff8001722f:	85 c0                	test   %eax,%eax
ffffffff80017231:	79 08                	jns    ffffffff8001723b <ZyanStringAppendHexU64+0x1ee>
ffffffff80017233:	8b 45 cc             	mov    -0x34(%rbp),%eax
ffffffff80017236:	e9 ec 00 00 00       	jmp    ffffffff80017327 <ZyanStringAppendHexU64+0x2da>
ffffffff8001723b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff8001723f:	48 8b 50 38          	mov    0x38(%rax),%rdx
ffffffff80017243:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80017247:	48 83 e8 01          	sub    $0x1,%rax
ffffffff8001724b:	48 01 d0             	add    %rdx,%rax
ffffffff8001724e:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff80017252:	0f b6 55 ac          	movzbl -0x54(%rbp),%edx
ffffffff80017256:	0f be 45 e7          	movsbl -0x19(%rbp),%eax
ffffffff8001725a:	39 c2                	cmp    %eax,%edx
ffffffff8001725c:	7e 28                	jle    ffffffff80017286 <ZyanStringAppendHexU64+0x239>
ffffffff8001725e:	0f b6 55 e7          	movzbl -0x19(%rbp),%edx
ffffffff80017262:	0f b6 45 ac          	movzbl -0x54(%rbp),%eax
ffffffff80017266:	29 d0                	sub    %edx,%eax
ffffffff80017268:	83 e8 01             	sub    $0x1,%eax
ffffffff8001726b:	88 45 f7             	mov    %al,-0x9(%rbp)
ffffffff8001726e:	0f b6 45 f7          	movzbl -0x9(%rbp),%eax
ffffffff80017272:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
ffffffff80017276:	48 89 c2             	mov    %rax,%rdx
ffffffff80017279:	be 30 00 00 00       	mov    $0x30,%esi
ffffffff8001727e:	48 89 cf             	mov    %rcx,%rdi
ffffffff80017281:	e8 7a fb ff ff       	call   ffffffff80016e00 <ZYAN_MEMSET.lto_priv.0>
ffffffff80017286:	80 7d a8 00          	cmpb   $0x0,-0x58(%rbp)
ffffffff8001728a:	74 2a                	je     ffffffff800172b6 <ZyanStringAppendHexU64+0x269>
ffffffff8001728c:	0f b6 4d d3          	movzbl -0x2d(%rbp),%ecx
ffffffff80017290:	0f b6 45 f7          	movzbl -0x9(%rbp),%eax
ffffffff80017294:	8d 50 01             	lea    0x1(%rax),%edx
ffffffff80017297:	88 55 f7             	mov    %dl,-0x9(%rbp)
ffffffff8001729a:	0f b6 c0             	movzbl %al,%eax
ffffffff8001729d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff800172a1:	48 01 c2             	add    %rax,%rdx
ffffffff800172a4:	48 63 c1             	movslq %ecx,%rax
ffffffff800172a7:	48 8d 0d 76 12 02 00 	lea    0x21276(%rip),%rcx        # ffffffff80038524 <g_stivale2_header+0x1524>
ffffffff800172ae:	0f b6 04 08          	movzbl (%rax,%rcx,1),%eax
ffffffff800172b2:	88 02                	mov    %al,(%rdx)
ffffffff800172b4:	eb 2b                	jmp    ffffffff800172e1 <ZyanStringAppendHexU64+0x294>
ffffffff800172b6:	0f b6 4d d3          	movzbl -0x2d(%rbp),%ecx
ffffffff800172ba:	0f b6 45 f7          	movzbl -0x9(%rbp),%eax
ffffffff800172be:	8d 50 01             	lea    0x1(%rax),%edx
ffffffff800172c1:	88 55 f7             	mov    %dl,-0x9(%rbp)
ffffffff800172c4:	0f b6 c0             	movzbl %al,%eax
ffffffff800172c7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff800172cb:	48 01 c2             	add    %rax,%rdx
ffffffff800172ce:	48 63 c1             	movslq %ecx,%rax
ffffffff800172d1:	48 8d 0d 5d 12 02 00 	lea    0x2125d(%rip),%rcx        # ffffffff80038535 <g_stivale2_header+0x1535>
ffffffff800172d8:	0f b6 04 08          	movzbl (%rax,%rcx,1),%eax
ffffffff800172dc:	88 02                	mov    %al,(%rdx)
ffffffff800172de:	eb 01                	jmp    ffffffff800172e1 <ZyanStringAppendHexU64+0x294>
ffffffff800172e0:	90                   	nop
ffffffff800172e1:	0f b6 45 e7          	movzbl -0x19(%rbp),%eax
ffffffff800172e5:	83 e8 01             	sub    $0x1,%eax
ffffffff800172e8:	88 45 e7             	mov    %al,-0x19(%rbp)
ffffffff800172eb:	80 7d e7 00          	cmpb   $0x0,-0x19(%rbp)
ffffffff800172ef:	0f 89 db fe ff ff    	jns    ffffffff800171d0 <ZyanStringAppendHexU64+0x183>
ffffffff800172f5:	0f b6 45 f7          	movzbl -0x9(%rbp),%eax
ffffffff800172f9:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff800172fd:	48 01 c2             	add    %rax,%rdx
ffffffff80017300:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff80017304:	48 89 50 18          	mov    %rdx,0x18(%rax)
ffffffff80017308:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff8001730c:	48 8b 50 38          	mov    0x38(%rax),%rdx
ffffffff80017310:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff80017314:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff80017318:	48 83 e8 01          	sub    $0x1,%rax
ffffffff8001731c:	48 01 d0             	add    %rdx,%rax
ffffffff8001731f:	c6 00 00             	movb   $0x0,(%rax)
ffffffff80017322:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff80017327:	c9                   	leave  
ffffffff80017328:	c3                   	ret    

ffffffff80017329 <ZyanStringAppendDecU>:
ffffffff80017329:	f3 0f 1e fa          	endbr64 
ffffffff8001732d:	55                   	push   %rbp
ffffffff8001732e:	48 89 e5             	mov    %rsp,%rbp
ffffffff80017331:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff80017335:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff80017339:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff8001733d:	89 d0                	mov    %edx,%eax
ffffffff8001733f:	88 45 ec             	mov    %al,-0x14(%rbp)
ffffffff80017342:	0f b6 45 ec          	movzbl -0x14(%rbp),%eax
ffffffff80017346:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
ffffffff8001734a:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
ffffffff8001734e:	89 c2                	mov    %eax,%edx
ffffffff80017350:	48 89 cf             	mov    %rcx,%rdi
ffffffff80017353:	e8 ed fa ff ff       	call   ffffffff80016e45 <ZyanStringAppendDecU64>
ffffffff80017358:	c9                   	leave  
ffffffff80017359:	c3                   	ret    

ffffffff8001735a <ZyanStringAppendDecS>:
ffffffff8001735a:	f3 0f 1e fa          	endbr64 
ffffffff8001735e:	55                   	push   %rbp
ffffffff8001735f:	48 89 e5             	mov    %rsp,%rbp
ffffffff80017362:	53                   	push   %rbx
ffffffff80017363:	48 83 ec 38          	sub    $0x38,%rsp
ffffffff80017367:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
ffffffff8001736b:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
ffffffff8001736f:	89 c8                	mov    %ecx,%eax
ffffffff80017371:	4c 89 45 c0          	mov    %r8,-0x40(%rbp)
ffffffff80017375:	88 55 cc             	mov    %dl,-0x34(%rbp)
ffffffff80017378:	88 45 c8             	mov    %al,-0x38(%rbp)
ffffffff8001737b:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
ffffffff80017380:	79 7a                	jns    ffffffff800173fc <ZyanStringAppendDecS+0xa2>
ffffffff80017382:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80017386:	48 8d 15 33 0b 09 00 	lea    0x90b33(%rip),%rdx        # ffffffff800a7ec0 <STR_SUB.lto_priv.0>
ffffffff8001738d:	48 89 d6             	mov    %rdx,%rsi
ffffffff80017390:	48 89 c7             	mov    %rax,%rdi
ffffffff80017393:	e8 5e 0d 00 00       	call   ffffffff800180f6 <ZyanStringAppend>
ffffffff80017398:	89 45 e4             	mov    %eax,-0x1c(%rbp)
ffffffff8001739b:	8b 45 e4             	mov    -0x1c(%rbp),%eax
ffffffff8001739e:	85 c0                	test   %eax,%eax
ffffffff800173a0:	79 08                	jns    ffffffff800173aa <ZyanStringAppendDecS+0x50>
ffffffff800173a2:	8b 45 e4             	mov    -0x1c(%rbp),%eax
ffffffff800173a5:	e9 bd 00 00 00       	jmp    ffffffff80017467 <ZyanStringAppendDecS+0x10d>
ffffffff800173aa:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
ffffffff800173af:	74 25                	je     ffffffff800173d6 <ZyanStringAppendDecS+0x7c>
ffffffff800173b1:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
ffffffff800173b5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff800173b9:	48 89 d6             	mov    %rdx,%rsi
ffffffff800173bc:	48 89 c7             	mov    %rax,%rdi
ffffffff800173bf:	e8 32 0d 00 00       	call   ffffffff800180f6 <ZyanStringAppend>
ffffffff800173c4:	89 45 e0             	mov    %eax,-0x20(%rbp)
ffffffff800173c7:	8b 45 e0             	mov    -0x20(%rbp),%eax
ffffffff800173ca:	85 c0                	test   %eax,%eax
ffffffff800173cc:	79 08                	jns    ffffffff800173d6 <ZyanStringAppendDecS+0x7c>
ffffffff800173ce:	8b 45 e0             	mov    -0x20(%rbp),%eax
ffffffff800173d1:	e9 91 00 00 00       	jmp    ffffffff80017467 <ZyanStringAppendDecS+0x10d>
ffffffff800173d6:	0f b6 5d cc          	movzbl -0x34(%rbp),%ebx
ffffffff800173da:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff800173de:	48 89 c7             	mov    %rax,%rdi
ffffffff800173e1:	e8 8a f9 ff ff       	call   ffffffff80016d70 <ZyanAbsI64.lto_priv.0>
ffffffff800173e6:	48 89 c1             	mov    %rax,%rcx
ffffffff800173e9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff800173ed:	89 da                	mov    %ebx,%edx
ffffffff800173ef:	48 89 ce             	mov    %rcx,%rsi
ffffffff800173f2:	48 89 c7             	mov    %rax,%rdi
ffffffff800173f5:	e8 2f ff ff ff       	call   ffffffff80017329 <ZyanStringAppendDecU>
ffffffff800173fa:	eb 6b                	jmp    ffffffff80017467 <ZyanStringAppendDecS+0x10d>
ffffffff800173fc:	80 7d c8 00          	cmpb   $0x0,-0x38(%rbp)
ffffffff80017400:	74 25                	je     ffffffff80017427 <ZyanStringAppendDecS+0xcd>
ffffffff80017402:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80017406:	48 8d 15 73 0a 09 00 	lea    0x90a73(%rip),%rdx        # ffffffff800a7e80 <STR_ADD.lto_priv.0>
ffffffff8001740d:	48 89 d6             	mov    %rdx,%rsi
ffffffff80017410:	48 89 c7             	mov    %rax,%rdi
ffffffff80017413:	e8 de 0c 00 00       	call   ffffffff800180f6 <ZyanStringAppend>
ffffffff80017418:	89 45 ec             	mov    %eax,-0x14(%rbp)
ffffffff8001741b:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff8001741e:	85 c0                	test   %eax,%eax
ffffffff80017420:	79 05                	jns    ffffffff80017427 <ZyanStringAppendDecS+0xcd>
ffffffff80017422:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff80017425:	eb 40                	jmp    ffffffff80017467 <ZyanStringAppendDecS+0x10d>
ffffffff80017427:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
ffffffff8001742c:	74 22                	je     ffffffff80017450 <ZyanStringAppendDecS+0xf6>
ffffffff8001742e:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
ffffffff80017432:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80017436:	48 89 d6             	mov    %rdx,%rsi
ffffffff80017439:	48 89 c7             	mov    %rax,%rdi
ffffffff8001743c:	e8 b5 0c 00 00       	call   ffffffff800180f6 <ZyanStringAppend>
ffffffff80017441:	89 45 e8             	mov    %eax,-0x18(%rbp)
ffffffff80017444:	8b 45 e8             	mov    -0x18(%rbp),%eax
ffffffff80017447:	85 c0                	test   %eax,%eax
ffffffff80017449:	79 05                	jns    ffffffff80017450 <ZyanStringAppendDecS+0xf6>
ffffffff8001744b:	8b 45 e8             	mov    -0x18(%rbp),%eax
ffffffff8001744e:	eb 17                	jmp    ffffffff80017467 <ZyanStringAppendDecS+0x10d>
ffffffff80017450:	0f b6 45 cc          	movzbl -0x34(%rbp),%eax
ffffffff80017454:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
ffffffff80017458:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
ffffffff8001745c:	89 c2                	mov    %eax,%edx
ffffffff8001745e:	48 89 cf             	mov    %rcx,%rdi
ffffffff80017461:	e8 c3 fe ff ff       	call   ffffffff80017329 <ZyanStringAppendDecU>
ffffffff80017466:	90                   	nop
ffffffff80017467:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
ffffffff8001746b:	c9                   	leave  
ffffffff8001746c:	c3                   	ret    

ffffffff8001746d <ZyanStringAppendHexU>:
ffffffff8001746d:	f3 0f 1e fa          	endbr64 
ffffffff80017471:	55                   	push   %rbp
ffffffff80017472:	48 89 e5             	mov    %rsp,%rbp
ffffffff80017475:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff80017479:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8001747d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff80017481:	89 c8                	mov    %ecx,%eax
ffffffff80017483:	88 55 ec             	mov    %dl,-0x14(%rbp)
ffffffff80017486:	88 45 e8             	mov    %al,-0x18(%rbp)
ffffffff80017489:	0f b6 55 e8          	movzbl -0x18(%rbp),%edx
ffffffff8001748d:	0f b6 45 ec          	movzbl -0x14(%rbp),%eax
ffffffff80017491:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
ffffffff80017495:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff80017499:	89 d1                	mov    %edx,%ecx
ffffffff8001749b:	89 c2                	mov    %eax,%edx
ffffffff8001749d:	e8 ab fb ff ff       	call   ffffffff8001704d <ZyanStringAppendHexU64>
ffffffff800174a2:	c9                   	leave  
ffffffff800174a3:	c3                   	ret    

ffffffff800174a4 <ZyanStringAppendHexS>:
ffffffff800174a4:	f3 0f 1e fa          	endbr64 
ffffffff800174a8:	55                   	push   %rbp
ffffffff800174a9:	48 89 e5             	mov    %rsp,%rbp
ffffffff800174ac:	41 54                	push   %r12
ffffffff800174ae:	53                   	push   %rbx
ffffffff800174af:	48 83 ec 40          	sub    $0x40,%rsp
ffffffff800174b3:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
ffffffff800174b7:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
ffffffff800174bb:	89 c8                	mov    %ecx,%eax
ffffffff800174bd:	44 89 c1             	mov    %r8d,%ecx
ffffffff800174c0:	4c 89 4d b8          	mov    %r9,-0x48(%rbp)
ffffffff800174c4:	88 55 cc             	mov    %dl,-0x34(%rbp)
ffffffff800174c7:	88 45 c8             	mov    %al,-0x38(%rbp)
ffffffff800174ca:	89 c8                	mov    %ecx,%eax
ffffffff800174cc:	88 45 c4             	mov    %al,-0x3c(%rbp)
ffffffff800174cf:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
ffffffff800174d4:	79 7f                	jns    ffffffff80017555 <ZyanStringAppendHexS+0xb1>
ffffffff800174d6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff800174da:	48 8d 15 df 09 09 00 	lea    0x909df(%rip),%rdx        # ffffffff800a7ec0 <STR_SUB.lto_priv.0>
ffffffff800174e1:	48 89 d6             	mov    %rdx,%rsi
ffffffff800174e4:	48 89 c7             	mov    %rax,%rdi
ffffffff800174e7:	e8 0a 0c 00 00       	call   ffffffff800180f6 <ZyanStringAppend>
ffffffff800174ec:	89 45 e4             	mov    %eax,-0x1c(%rbp)
ffffffff800174ef:	8b 45 e4             	mov    -0x1c(%rbp),%eax
ffffffff800174f2:	85 c0                	test   %eax,%eax
ffffffff800174f4:	79 08                	jns    ffffffff800174fe <ZyanStringAppendHexS+0x5a>
ffffffff800174f6:	8b 45 e4             	mov    -0x1c(%rbp),%eax
ffffffff800174f9:	e9 c5 00 00 00       	jmp    ffffffff800175c3 <ZyanStringAppendHexS+0x11f>
ffffffff800174fe:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
ffffffff80017503:	74 25                	je     ffffffff8001752a <ZyanStringAppendHexS+0x86>
ffffffff80017505:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
ffffffff80017509:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8001750d:	48 89 d6             	mov    %rdx,%rsi
ffffffff80017510:	48 89 c7             	mov    %rax,%rdi
ffffffff80017513:	e8 de 0b 00 00       	call   ffffffff800180f6 <ZyanStringAppend>
ffffffff80017518:	89 45 e0             	mov    %eax,-0x20(%rbp)
ffffffff8001751b:	8b 45 e0             	mov    -0x20(%rbp),%eax
ffffffff8001751e:	85 c0                	test   %eax,%eax
ffffffff80017520:	79 08                	jns    ffffffff8001752a <ZyanStringAppendHexS+0x86>
ffffffff80017522:	8b 45 e0             	mov    -0x20(%rbp),%eax
ffffffff80017525:	e9 99 00 00 00       	jmp    ffffffff800175c3 <ZyanStringAppendHexS+0x11f>
ffffffff8001752a:	44 0f b6 65 c8       	movzbl -0x38(%rbp),%r12d
ffffffff8001752f:	0f b6 5d cc          	movzbl -0x34(%rbp),%ebx
ffffffff80017533:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff80017537:	48 89 c7             	mov    %rax,%rdi
ffffffff8001753a:	e8 31 f8 ff ff       	call   ffffffff80016d70 <ZyanAbsI64.lto_priv.0>
ffffffff8001753f:	48 89 c6             	mov    %rax,%rsi
ffffffff80017542:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80017546:	44 89 e1             	mov    %r12d,%ecx
ffffffff80017549:	89 da                	mov    %ebx,%edx
ffffffff8001754b:	48 89 c7             	mov    %rax,%rdi
ffffffff8001754e:	e8 1a ff ff ff       	call   ffffffff8001746d <ZyanStringAppendHexU>
ffffffff80017553:	eb 6e                	jmp    ffffffff800175c3 <ZyanStringAppendHexS+0x11f>
ffffffff80017555:	80 7d c4 00          	cmpb   $0x0,-0x3c(%rbp)
ffffffff80017559:	74 25                	je     ffffffff80017580 <ZyanStringAppendHexS+0xdc>
ffffffff8001755b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8001755f:	48 8d 15 1a 09 09 00 	lea    0x9091a(%rip),%rdx        # ffffffff800a7e80 <STR_ADD.lto_priv.0>
ffffffff80017566:	48 89 d6             	mov    %rdx,%rsi
ffffffff80017569:	48 89 c7             	mov    %rax,%rdi
ffffffff8001756c:	e8 85 0b 00 00       	call   ffffffff800180f6 <ZyanStringAppend>
ffffffff80017571:	89 45 ec             	mov    %eax,-0x14(%rbp)
ffffffff80017574:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff80017577:	85 c0                	test   %eax,%eax
ffffffff80017579:	79 05                	jns    ffffffff80017580 <ZyanStringAppendHexS+0xdc>
ffffffff8001757b:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff8001757e:	eb 43                	jmp    ffffffff800175c3 <ZyanStringAppendHexS+0x11f>
ffffffff80017580:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
ffffffff80017585:	74 22                	je     ffffffff800175a9 <ZyanStringAppendHexS+0x105>
ffffffff80017587:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
ffffffff8001758b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8001758f:	48 89 d6             	mov    %rdx,%rsi
ffffffff80017592:	48 89 c7             	mov    %rax,%rdi
ffffffff80017595:	e8 5c 0b 00 00       	call   ffffffff800180f6 <ZyanStringAppend>
ffffffff8001759a:	89 45 e8             	mov    %eax,-0x18(%rbp)
ffffffff8001759d:	8b 45 e8             	mov    -0x18(%rbp),%eax
ffffffff800175a0:	85 c0                	test   %eax,%eax
ffffffff800175a2:	79 05                	jns    ffffffff800175a9 <ZyanStringAppendHexS+0x105>
ffffffff800175a4:	8b 45 e8             	mov    -0x18(%rbp),%eax
ffffffff800175a7:	eb 1a                	jmp    ffffffff800175c3 <ZyanStringAppendHexS+0x11f>
ffffffff800175a9:	0f b6 55 c8          	movzbl -0x38(%rbp),%edx
ffffffff800175ad:	0f b6 45 cc          	movzbl -0x34(%rbp),%eax
ffffffff800175b1:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
ffffffff800175b5:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
ffffffff800175b9:	89 d1                	mov    %edx,%ecx
ffffffff800175bb:	89 c2                	mov    %eax,%edx
ffffffff800175bd:	e8 ab fe ff ff       	call   ffffffff8001746d <ZyanStringAppendHexU>
ffffffff800175c2:	90                   	nop
ffffffff800175c3:	48 83 c4 40          	add    $0x40,%rsp
ffffffff800175c7:	5b                   	pop    %rbx
ffffffff800175c8:	41 5c                	pop    %r12
ffffffff800175ca:	5d                   	pop    %rbp
ffffffff800175cb:	c3                   	ret    

ffffffff800175cc <ZYAN_MEMCPY.lto_priv.1>:
ffffffff800175cc:	55                   	push   %rbp
ffffffff800175cd:	48 89 e5             	mov    %rsp,%rbp
ffffffff800175d0:	48 83 ec 28          	sub    $0x28,%rsp
ffffffff800175d4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff800175d8:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
ffffffff800175dc:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
ffffffff800175e0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800175e4:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff800175e8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff800175ec:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff800175f0:	eb 1d                	jmp    ffffffff8001760f <ZYAN_MEMCPY.lto_priv.1+0x43>
ffffffff800175f2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff800175f6:	48 8d 42 01          	lea    0x1(%rdx),%rax
ffffffff800175fa:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff800175fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80017602:	48 8d 48 01          	lea    0x1(%rax),%rcx
ffffffff80017606:	48 89 4d f8          	mov    %rcx,-0x8(%rbp)
ffffffff8001760a:	0f b6 12             	movzbl (%rdx),%edx
ffffffff8001760d:	88 10                	mov    %dl,(%rax)
ffffffff8001760f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80017613:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
ffffffff80017617:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
ffffffff8001761b:	48 85 c0             	test   %rax,%rax
ffffffff8001761e:	75 d2                	jne    ffffffff800175f2 <ZYAN_MEMCPY.lto_priv.1+0x26>
ffffffff80017620:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80017624:	c9                   	leave  
ffffffff80017625:	c3                   	ret    

ffffffff80017626 <ZYAN_STRLEN.lto_priv.0>:
ffffffff80017626:	55                   	push   %rbp
ffffffff80017627:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001762a:	48 83 ec 18          	sub    $0x18,%rsp
ffffffff8001762e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff80017632:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80017636:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8001763a:	eb 05                	jmp    ffffffff80017641 <ZYAN_STRLEN.lto_priv.0+0x1b>
ffffffff8001763c:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
ffffffff80017641:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80017645:	0f b6 00             	movzbl (%rax),%eax
ffffffff80017648:	84 c0                	test   %al,%al
ffffffff8001764a:	75 f0                	jne    ffffffff8001763c <ZYAN_STRLEN.lto_priv.0+0x16>
ffffffff8001764c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80017650:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
ffffffff80017654:	c9                   	leave  
ffffffff80017655:	c3                   	ret    

ffffffff80017656 <ZyanStringInitEx>:
ffffffff80017656:	f3 0f 1e fa          	endbr64 
ffffffff8001765a:	55                   	push   %rbp
ffffffff8001765b:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001765e:	48 83 ec 30          	sub    $0x30,%rsp
ffffffff80017662:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff80017666:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
ffffffff8001766a:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
ffffffff8001766e:	89 c8                	mov    %ecx,%eax
ffffffff80017670:	44 89 c2             	mov    %r8d,%edx
ffffffff80017673:	88 45 d4             	mov    %al,-0x2c(%rbp)
ffffffff80017676:	89 d0                	mov    %edx,%eax
ffffffff80017678:	88 45 d0             	mov    %al,-0x30(%rbp)
ffffffff8001767b:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
ffffffff80017680:	75 0a                	jne    ffffffff8001768c <ZyanStringInitEx+0x36>
ffffffff80017682:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff80017687:	e9 8b 00 00 00       	jmp    ffffffff80017717 <ZyanStringInitEx+0xc1>
ffffffff8001768c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80017690:	c6 00 00             	movb   $0x0,(%rax)
ffffffff80017693:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80017697:	ba 20 00 00 00       	mov    $0x20,%edx
ffffffff8001769c:	48 39 d0             	cmp    %rdx,%rax
ffffffff8001769f:	48 0f 42 c2          	cmovb  %rdx,%rax
ffffffff800176a3:	48 83 c0 01          	add    $0x1,%rax
ffffffff800176a7:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff800176ab:	0f b6 4d d0          	movzbl -0x30(%rbp),%ecx
ffffffff800176af:	0f b6 75 d4          	movzbl -0x2c(%rbp),%esi
ffffffff800176b3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800176b7:	48 83 c0 08          	add    $0x8,%rax
ffffffff800176bb:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
ffffffff800176bf:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff800176c3:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff800176c7:	51                   	push   %rcx
ffffffff800176c8:	41 89 f1             	mov    %esi,%r9d
ffffffff800176cb:	49 89 f8             	mov    %rdi,%r8
ffffffff800176ce:	b9 00 00 00 00       	mov    $0x0,%ecx
ffffffff800176d3:	be 01 00 00 00       	mov    $0x1,%esi
ffffffff800176d8:	48 89 c7             	mov    %rax,%rdi
ffffffff800176db:	e8 62 1f 00 00       	call   ffffffff80019642 <ZyanVectorInitEx>
ffffffff800176e0:	48 83 c4 10          	add    $0x10,%rsp
ffffffff800176e4:	89 45 fc             	mov    %eax,-0x4(%rbp)
ffffffff800176e7:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff800176ea:	85 c0                	test   %eax,%eax
ffffffff800176ec:	79 05                	jns    ffffffff800176f3 <ZyanStringInitEx+0x9d>
ffffffff800176ee:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff800176f1:	eb 24                	jmp    ffffffff80017717 <ZyanStringInitEx+0xc1>
ffffffff800176f3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800176f7:	48 8b 40 38          	mov    0x38(%rax),%rax
ffffffff800176fb:	c6 00 00             	movb   $0x0,(%rax)
ffffffff800176fe:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80017702:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff80017706:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffff8001770a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001770e:	48 89 50 18          	mov    %rdx,0x18(%rax)
ffffffff80017712:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff80017717:	c9                   	leave  
ffffffff80017718:	c3                   	ret    

ffffffff80017719 <ZyanStringInitCustomBuffer>:
ffffffff80017719:	f3 0f 1e fa          	endbr64 
ffffffff8001771d:	55                   	push   %rbp
ffffffff8001771e:	48 89 e5             	mov    %rsp,%rbp
ffffffff80017721:	48 83 ec 30          	sub    $0x30,%rsp
ffffffff80017725:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff80017729:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
ffffffff8001772d:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
ffffffff80017731:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
ffffffff80017736:	74 07                	je     ffffffff8001773f <ZyanStringInitCustomBuffer+0x26>
ffffffff80017738:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
ffffffff8001773d:	75 07                	jne    ffffffff80017746 <ZyanStringInitCustomBuffer+0x2d>
ffffffff8001773f:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff80017744:	eb 5d                	jmp    ffffffff800177a3 <ZyanStringInitCustomBuffer+0x8a>
ffffffff80017746:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001774a:	c6 00 01             	movb   $0x1,(%rax)
ffffffff8001774d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80017751:	48 83 c0 08          	add    $0x8,%rax
ffffffff80017755:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
ffffffff80017759:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff8001775d:	41 b8 00 00 00 00    	mov    $0x0,%r8d
ffffffff80017763:	be 01 00 00 00       	mov    $0x1,%esi
ffffffff80017768:	48 89 c7             	mov    %rax,%rdi
ffffffff8001776b:	e8 be 1f 00 00       	call   ffffffff8001972e <ZyanVectorInitCustomBuffer>
ffffffff80017770:	89 45 fc             	mov    %eax,-0x4(%rbp)
ffffffff80017773:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff80017776:	85 c0                	test   %eax,%eax
ffffffff80017778:	79 05                	jns    ffffffff8001777f <ZyanStringInitCustomBuffer+0x66>
ffffffff8001777a:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8001777d:	eb 24                	jmp    ffffffff800177a3 <ZyanStringInitCustomBuffer+0x8a>
ffffffff8001777f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80017783:	48 8b 40 38          	mov    0x38(%rax),%rax
ffffffff80017787:	c6 00 00             	movb   $0x0,(%rax)
ffffffff8001778a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001778e:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff80017792:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffff80017796:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001779a:	48 89 50 18          	mov    %rdx,0x18(%rax)
ffffffff8001779e:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff800177a3:	c9                   	leave  
ffffffff800177a4:	c3                   	ret    

ffffffff800177a5 <ZyanStringDestroy>:
ffffffff800177a5:	f3 0f 1e fa          	endbr64 
ffffffff800177a9:	55                   	push   %rbp
ffffffff800177aa:	48 89 e5             	mov    %rsp,%rbp
ffffffff800177ad:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff800177b1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff800177b5:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff800177ba:	75 07                	jne    ffffffff800177c3 <ZyanStringDestroy+0x1e>
ffffffff800177bc:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff800177c1:	eb 28                	jmp    ffffffff800177eb <ZyanStringDestroy+0x46>
ffffffff800177c3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff800177c7:	0f b6 00             	movzbl (%rax),%eax
ffffffff800177ca:	0f b6 c0             	movzbl %al,%eax
ffffffff800177cd:	83 e0 01             	and    $0x1,%eax
ffffffff800177d0:	85 c0                	test   %eax,%eax
ffffffff800177d2:	74 07                	je     ffffffff800177db <ZyanStringDestroy+0x36>
ffffffff800177d4:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff800177d9:	eb 10                	jmp    ffffffff800177eb <ZyanStringDestroy+0x46>
ffffffff800177db:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff800177df:	48 83 c0 08          	add    $0x8,%rax
ffffffff800177e3:	48 89 c7             	mov    %rax,%rdi
ffffffff800177e6:	e8 e4 1f 00 00       	call   ffffffff800197cf <ZyanVectorDestroy>
ffffffff800177eb:	c9                   	leave  
ffffffff800177ec:	c3                   	ret    

ffffffff800177ed <ZyanStringDuplicateEx>:
ffffffff800177ed:	f3 0f 1e fa          	endbr64 
ffffffff800177f1:	55                   	push   %rbp
ffffffff800177f2:	48 89 e5             	mov    %rsp,%rbp
ffffffff800177f5:	48 83 ec 40          	sub    $0x40,%rsp
ffffffff800177f9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff800177fd:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
ffffffff80017801:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
ffffffff80017805:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
ffffffff80017809:	44 89 c0             	mov    %r8d,%eax
ffffffff8001780c:	44 89 ca             	mov    %r9d,%edx
ffffffff8001780f:	88 45 cc             	mov    %al,-0x34(%rbp)
ffffffff80017812:	89 d0                	mov    %edx,%eax
ffffffff80017814:	88 45 c8             	mov    %al,-0x38(%rbp)
ffffffff80017817:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
ffffffff8001781c:	74 0d                	je     ffffffff8001782b <ZyanStringDuplicateEx+0x3e>
ffffffff8001781e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80017822:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff80017826:	48 85 c0             	test   %rax,%rax
ffffffff80017829:	75 0a                	jne    ffffffff80017835 <ZyanStringDuplicateEx+0x48>
ffffffff8001782b:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff80017830:	e9 a2 00 00 00       	jmp    ffffffff800178d7 <ZyanStringDuplicateEx+0xea>
ffffffff80017835:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80017839:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff8001783d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff80017841:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80017845:	48 83 e8 01          	sub    $0x1,%rax
ffffffff80017849:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff8001784d:	48 39 c2             	cmp    %rax,%rdx
ffffffff80017850:	48 0f 43 c2          	cmovae %rdx,%rax
ffffffff80017854:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
ffffffff80017858:	0f b6 4d c8          	movzbl -0x38(%rbp),%ecx
ffffffff8001785c:	0f b6 45 cc          	movzbl -0x34(%rbp),%eax
ffffffff80017860:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
ffffffff80017864:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
ffffffff80017868:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
ffffffff8001786c:	41 89 c8             	mov    %ecx,%r8d
ffffffff8001786f:	89 c1                	mov    %eax,%ecx
ffffffff80017871:	e8 e0 fd ff ff       	call   ffffffff80017656 <ZyanStringInitEx>
ffffffff80017876:	89 45 f4             	mov    %eax,-0xc(%rbp)
ffffffff80017879:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff8001787c:	85 c0                	test   %eax,%eax
ffffffff8001787e:	79 05                	jns    ffffffff80017885 <ZyanStringDuplicateEx+0x98>
ffffffff80017880:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff80017883:	eb 52                	jmp    ffffffff800178d7 <ZyanStringDuplicateEx+0xea>
ffffffff80017885:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80017889:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff8001788d:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
ffffffff80017891:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80017895:	48 8b 48 38          	mov    0x38(%rax),%rcx
ffffffff80017899:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001789d:	48 8b 40 38          	mov    0x38(%rax),%rax
ffffffff800178a1:	48 89 ce             	mov    %rcx,%rsi
ffffffff800178a4:	48 89 c7             	mov    %rax,%rdi
ffffffff800178a7:	e8 20 fd ff ff       	call   ffffffff800175cc <ZYAN_MEMCPY.lto_priv.1>
ffffffff800178ac:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800178b0:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff800178b4:	48 89 50 18          	mov    %rdx,0x18(%rax)
ffffffff800178b8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800178bc:	48 8b 50 38          	mov    0x38(%rax),%rdx
ffffffff800178c0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800178c4:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff800178c8:	48 83 e8 01          	sub    $0x1,%rax
ffffffff800178cc:	48 01 d0             	add    %rdx,%rax
ffffffff800178cf:	c6 00 00             	movb   $0x0,(%rax)
ffffffff800178d2:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff800178d7:	c9                   	leave  
ffffffff800178d8:	c3                   	ret    

ffffffff800178d9 <ZyanStringDuplicateCustomBuffer>:
ffffffff800178d9:	f3 0f 1e fa          	endbr64 
ffffffff800178dd:	55                   	push   %rbp
ffffffff800178de:	48 89 e5             	mov    %rsp,%rbp
ffffffff800178e1:	48 83 ec 30          	sub    $0x30,%rsp
ffffffff800178e5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff800178e9:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
ffffffff800178ed:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
ffffffff800178f1:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
ffffffff800178f5:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
ffffffff800178fa:	74 0d                	je     ffffffff80017909 <ZyanStringDuplicateCustomBuffer+0x30>
ffffffff800178fc:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80017900:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff80017904:	48 85 c0             	test   %rax,%rax
ffffffff80017907:	75 0a                	jne    ffffffff80017913 <ZyanStringDuplicateCustomBuffer+0x3a>
ffffffff80017909:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff8001790e:	e9 95 00 00 00       	jmp    ffffffff800179a8 <ZyanStringDuplicateCustomBuffer+0xcf>
ffffffff80017913:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80017917:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff8001791b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8001791f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff80017923:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
ffffffff80017927:	73 07                	jae    ffffffff80017930 <ZyanStringDuplicateCustomBuffer+0x57>
ffffffff80017929:	b8 09 00 10 80       	mov    $0x80100009,%eax
ffffffff8001792e:	eb 78                	jmp    ffffffff800179a8 <ZyanStringDuplicateCustomBuffer+0xcf>
ffffffff80017930:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
ffffffff80017934:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
ffffffff80017938:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001793c:	48 89 ce             	mov    %rcx,%rsi
ffffffff8001793f:	48 89 c7             	mov    %rax,%rdi
ffffffff80017942:	e8 d2 fd ff ff       	call   ffffffff80017719 <ZyanStringInitCustomBuffer>
ffffffff80017947:	89 45 f4             	mov    %eax,-0xc(%rbp)
ffffffff8001794a:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff8001794d:	85 c0                	test   %eax,%eax
ffffffff8001794f:	79 05                	jns    ffffffff80017956 <ZyanStringDuplicateCustomBuffer+0x7d>
ffffffff80017951:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff80017954:	eb 52                	jmp    ffffffff800179a8 <ZyanStringDuplicateCustomBuffer+0xcf>
ffffffff80017956:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8001795a:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff8001795e:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
ffffffff80017962:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80017966:	48 8b 48 38          	mov    0x38(%rax),%rcx
ffffffff8001796a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001796e:	48 8b 40 38          	mov    0x38(%rax),%rax
ffffffff80017972:	48 89 ce             	mov    %rcx,%rsi
ffffffff80017975:	48 89 c7             	mov    %rax,%rdi
ffffffff80017978:	e8 4f fc ff ff       	call   ffffffff800175cc <ZYAN_MEMCPY.lto_priv.1>
ffffffff8001797d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80017981:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff80017985:	48 89 50 18          	mov    %rdx,0x18(%rax)
ffffffff80017989:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001798d:	48 8b 50 38          	mov    0x38(%rax),%rdx
ffffffff80017991:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80017995:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff80017999:	48 83 e8 01          	sub    $0x1,%rax
ffffffff8001799d:	48 01 d0             	add    %rdx,%rax
ffffffff800179a0:	c6 00 00             	movb   $0x0,(%rax)
ffffffff800179a3:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff800179a8:	c9                   	leave  
ffffffff800179a9:	c3                   	ret    

ffffffff800179aa <ZyanStringConcatEx>:
ffffffff800179aa:	f3 0f 1e fa          	endbr64 
ffffffff800179ae:	55                   	push   %rbp
ffffffff800179af:	48 89 e5             	mov    %rsp,%rbp
ffffffff800179b2:	48 83 ec 40          	sub    $0x40,%rsp
ffffffff800179b6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff800179ba:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
ffffffff800179be:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
ffffffff800179c2:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
ffffffff800179c6:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
ffffffff800179ca:	44 89 c8             	mov    %r9d,%eax
ffffffff800179cd:	8b 55 10             	mov    0x10(%rbp),%edx
ffffffff800179d0:	88 45 c4             	mov    %al,-0x3c(%rbp)
ffffffff800179d3:	89 d0                	mov    %edx,%eax
ffffffff800179d5:	88 45 c0             	mov    %al,-0x40(%rbp)
ffffffff800179d8:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
ffffffff800179dd:	74 21                	je     ffffffff80017a00 <ZyanStringConcatEx+0x56>
ffffffff800179df:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
ffffffff800179e4:	74 1a                	je     ffffffff80017a00 <ZyanStringConcatEx+0x56>
ffffffff800179e6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff800179ea:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff800179ee:	48 85 c0             	test   %rax,%rax
ffffffff800179f1:	74 0d                	je     ffffffff80017a00 <ZyanStringConcatEx+0x56>
ffffffff800179f3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff800179f7:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff800179fb:	48 85 c0             	test   %rax,%rax
ffffffff800179fe:	75 0a                	jne    ffffffff80017a0a <ZyanStringConcatEx+0x60>
ffffffff80017a00:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff80017a05:	e9 ea 00 00 00       	jmp    ffffffff80017af4 <ZyanStringConcatEx+0x14a>
ffffffff80017a0a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80017a0e:	48 8b 50 18          	mov    0x18(%rax),%rdx
ffffffff80017a12:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80017a16:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff80017a1a:	48 01 d0             	add    %rdx,%rax
ffffffff80017a1d:	48 83 e8 01          	sub    $0x1,%rax
ffffffff80017a21:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff80017a25:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80017a29:	48 83 e8 01          	sub    $0x1,%rax
ffffffff80017a2d:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
ffffffff80017a31:	48 39 c2             	cmp    %rax,%rdx
ffffffff80017a34:	48 0f 43 c2          	cmovae %rdx,%rax
ffffffff80017a38:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
ffffffff80017a3c:	0f b6 4d c0          	movzbl -0x40(%rbp),%ecx
ffffffff80017a40:	0f b6 45 c4          	movzbl -0x3c(%rbp),%eax
ffffffff80017a44:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
ffffffff80017a48:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
ffffffff80017a4c:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
ffffffff80017a50:	41 89 c8             	mov    %ecx,%r8d
ffffffff80017a53:	89 c1                	mov    %eax,%ecx
ffffffff80017a55:	e8 fc fb ff ff       	call   ffffffff80017656 <ZyanStringInitEx>
ffffffff80017a5a:	89 45 f4             	mov    %eax,-0xc(%rbp)
ffffffff80017a5d:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff80017a60:	85 c0                	test   %eax,%eax
ffffffff80017a62:	79 08                	jns    ffffffff80017a6c <ZyanStringConcatEx+0xc2>
ffffffff80017a64:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff80017a67:	e9 88 00 00 00       	jmp    ffffffff80017af4 <ZyanStringConcatEx+0x14a>
ffffffff80017a6c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80017a70:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff80017a74:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
ffffffff80017a78:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80017a7c:	48 8b 48 38          	mov    0x38(%rax),%rcx
ffffffff80017a80:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80017a84:	48 8b 40 38          	mov    0x38(%rax),%rax
ffffffff80017a88:	48 89 ce             	mov    %rcx,%rsi
ffffffff80017a8b:	48 89 c7             	mov    %rax,%rdi
ffffffff80017a8e:	e8 39 fb ff ff       	call   ffffffff800175cc <ZYAN_MEMCPY.lto_priv.1>
ffffffff80017a93:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80017a97:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff80017a9b:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
ffffffff80017a9f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80017aa3:	48 8b 48 38          	mov    0x38(%rax),%rcx
ffffffff80017aa7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80017aab:	48 8b 70 38          	mov    0x38(%rax),%rsi
ffffffff80017aaf:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80017ab3:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff80017ab7:	48 83 e8 01          	sub    $0x1,%rax
ffffffff80017abb:	48 01 f0             	add    %rsi,%rax
ffffffff80017abe:	48 89 ce             	mov    %rcx,%rsi
ffffffff80017ac1:	48 89 c7             	mov    %rax,%rdi
ffffffff80017ac4:	e8 03 fb ff ff       	call   ffffffff800175cc <ZYAN_MEMCPY.lto_priv.1>
ffffffff80017ac9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80017acd:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff80017ad1:	48 89 50 18          	mov    %rdx,0x18(%rax)
ffffffff80017ad5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80017ad9:	48 8b 50 38          	mov    0x38(%rax),%rdx
ffffffff80017add:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80017ae1:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff80017ae5:	48 83 e8 01          	sub    $0x1,%rax
ffffffff80017ae9:	48 01 d0             	add    %rdx,%rax
ffffffff80017aec:	c6 00 00             	movb   $0x0,(%rax)
ffffffff80017aef:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff80017af4:	c9                   	leave  
ffffffff80017af5:	c3                   	ret    

ffffffff80017af6 <ZyanStringConcatCustomBuffer>:
ffffffff80017af6:	f3 0f 1e fa          	endbr64 
ffffffff80017afa:	55                   	push   %rbp
ffffffff80017afb:	48 89 e5             	mov    %rsp,%rbp
ffffffff80017afe:	48 83 ec 40          	sub    $0x40,%rsp
ffffffff80017b02:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff80017b06:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
ffffffff80017b0a:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
ffffffff80017b0e:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
ffffffff80017b12:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
ffffffff80017b16:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
ffffffff80017b1b:	74 21                	je     ffffffff80017b3e <ZyanStringConcatCustomBuffer+0x48>
ffffffff80017b1d:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
ffffffff80017b22:	74 1a                	je     ffffffff80017b3e <ZyanStringConcatCustomBuffer+0x48>
ffffffff80017b24:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80017b28:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff80017b2c:	48 85 c0             	test   %rax,%rax
ffffffff80017b2f:	74 0d                	je     ffffffff80017b3e <ZyanStringConcatCustomBuffer+0x48>
ffffffff80017b31:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80017b35:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff80017b39:	48 85 c0             	test   %rax,%rax
ffffffff80017b3c:	75 0a                	jne    ffffffff80017b48 <ZyanStringConcatCustomBuffer+0x52>
ffffffff80017b3e:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff80017b43:	e9 e0 00 00 00       	jmp    ffffffff80017c28 <ZyanStringConcatCustomBuffer+0x132>
ffffffff80017b48:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80017b4c:	48 8b 50 18          	mov    0x18(%rax),%rdx
ffffffff80017b50:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80017b54:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff80017b58:	48 01 d0             	add    %rdx,%rax
ffffffff80017b5b:	48 83 e8 01          	sub    $0x1,%rax
ffffffff80017b5f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff80017b63:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80017b67:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
ffffffff80017b6b:	73 0a                	jae    ffffffff80017b77 <ZyanStringConcatCustomBuffer+0x81>
ffffffff80017b6d:	b8 09 00 10 80       	mov    $0x80100009,%eax
ffffffff80017b72:	e9 b1 00 00 00       	jmp    ffffffff80017c28 <ZyanStringConcatCustomBuffer+0x132>
ffffffff80017b77:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
ffffffff80017b7b:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
ffffffff80017b7f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80017b83:	48 89 ce             	mov    %rcx,%rsi
ffffffff80017b86:	48 89 c7             	mov    %rax,%rdi
ffffffff80017b89:	e8 8b fb ff ff       	call   ffffffff80017719 <ZyanStringInitCustomBuffer>
ffffffff80017b8e:	89 45 f4             	mov    %eax,-0xc(%rbp)
ffffffff80017b91:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff80017b94:	85 c0                	test   %eax,%eax
ffffffff80017b96:	79 08                	jns    ffffffff80017ba0 <ZyanStringConcatCustomBuffer+0xaa>
ffffffff80017b98:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff80017b9b:	e9 88 00 00 00       	jmp    ffffffff80017c28 <ZyanStringConcatCustomBuffer+0x132>
ffffffff80017ba0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80017ba4:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff80017ba8:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
ffffffff80017bac:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80017bb0:	48 8b 48 38          	mov    0x38(%rax),%rcx
ffffffff80017bb4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80017bb8:	48 8b 40 38          	mov    0x38(%rax),%rax
ffffffff80017bbc:	48 89 ce             	mov    %rcx,%rsi
ffffffff80017bbf:	48 89 c7             	mov    %rax,%rdi
ffffffff80017bc2:	e8 05 fa ff ff       	call   ffffffff800175cc <ZYAN_MEMCPY.lto_priv.1>
ffffffff80017bc7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80017bcb:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff80017bcf:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
ffffffff80017bd3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80017bd7:	48 8b 48 38          	mov    0x38(%rax),%rcx
ffffffff80017bdb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80017bdf:	48 8b 70 38          	mov    0x38(%rax),%rsi
ffffffff80017be3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80017be7:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff80017beb:	48 83 e8 01          	sub    $0x1,%rax
ffffffff80017bef:	48 01 f0             	add    %rsi,%rax
ffffffff80017bf2:	48 89 ce             	mov    %rcx,%rsi
ffffffff80017bf5:	48 89 c7             	mov    %rax,%rdi
ffffffff80017bf8:	e8 cf f9 ff ff       	call   ffffffff800175cc <ZYAN_MEMCPY.lto_priv.1>
ffffffff80017bfd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80017c01:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff80017c05:	48 89 50 18          	mov    %rdx,0x18(%rax)
ffffffff80017c09:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80017c0d:	48 8b 50 38          	mov    0x38(%rax),%rdx
ffffffff80017c11:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80017c15:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff80017c19:	48 83 e8 01          	sub    $0x1,%rax
ffffffff80017c1d:	48 01 d0             	add    %rdx,%rax
ffffffff80017c20:	c6 00 00             	movb   $0x0,(%rax)
ffffffff80017c23:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff80017c28:	c9                   	leave  
ffffffff80017c29:	c3                   	ret    

ffffffff80017c2a <ZyanStringViewInsideView>:
ffffffff80017c2a:	f3 0f 1e fa          	endbr64 
ffffffff80017c2e:	55                   	push   %rbp
ffffffff80017c2f:	48 89 e5             	mov    %rsp,%rbp
ffffffff80017c32:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff80017c36:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff80017c3a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff80017c3e:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff80017c43:	74 07                	je     ffffffff80017c4c <ZyanStringViewInsideView+0x22>
ffffffff80017c45:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
ffffffff80017c4a:	75 07                	jne    ffffffff80017c53 <ZyanStringViewInsideView+0x29>
ffffffff80017c4c:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff80017c51:	eb 25                	jmp    ffffffff80017c78 <ZyanStringViewInsideView+0x4e>
ffffffff80017c53:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80017c57:	48 8b 50 38          	mov    0x38(%rax),%rdx
ffffffff80017c5b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80017c5f:	48 89 50 38          	mov    %rdx,0x38(%rax)
ffffffff80017c63:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80017c67:	48 8b 50 18          	mov    0x18(%rax),%rdx
ffffffff80017c6b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80017c6f:	48 89 50 18          	mov    %rdx,0x18(%rax)
ffffffff80017c73:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff80017c78:	c9                   	leave  
ffffffff80017c79:	c3                   	ret    

ffffffff80017c7a <ZyanStringViewInsideViewEx>:
ffffffff80017c7a:	f3 0f 1e fa          	endbr64 
ffffffff80017c7e:	55                   	push   %rbp
ffffffff80017c7f:	48 89 e5             	mov    %rsp,%rbp
ffffffff80017c82:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff80017c86:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff80017c8a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff80017c8e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
ffffffff80017c92:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
ffffffff80017c96:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff80017c9b:	74 07                	je     ffffffff80017ca4 <ZyanStringViewInsideViewEx+0x2a>
ffffffff80017c9d:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
ffffffff80017ca2:	75 07                	jne    ffffffff80017cab <ZyanStringViewInsideViewEx+0x31>
ffffffff80017ca4:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff80017ca9:	eb 47                	jmp    ffffffff80017cf2 <ZyanStringViewInsideViewEx+0x78>
ffffffff80017cab:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff80017caf:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80017cb3:	48 01 c2             	add    %rax,%rdx
ffffffff80017cb6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80017cba:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff80017cbe:	48 39 c2             	cmp    %rax,%rdx
ffffffff80017cc1:	72 07                	jb     ffffffff80017cca <ZyanStringViewInsideViewEx+0x50>
ffffffff80017cc3:	b8 08 00 10 80       	mov    $0x80100008,%eax
ffffffff80017cc8:	eb 28                	jmp    ffffffff80017cf2 <ZyanStringViewInsideViewEx+0x78>
ffffffff80017cca:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80017cce:	48 8b 50 38          	mov    0x38(%rax),%rdx
ffffffff80017cd2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80017cd6:	48 01 c2             	add    %rax,%rdx
ffffffff80017cd9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80017cdd:	48 89 50 38          	mov    %rdx,0x38(%rax)
ffffffff80017ce1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80017ce5:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff80017ce9:	48 89 50 18          	mov    %rdx,0x18(%rax)
ffffffff80017ced:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff80017cf2:	c9                   	leave  
ffffffff80017cf3:	c3                   	ret    

ffffffff80017cf4 <ZyanStringViewInsideBuffer>:
ffffffff80017cf4:	f3 0f 1e fa          	endbr64 
ffffffff80017cf8:	55                   	push   %rbp
ffffffff80017cf9:	48 89 e5             	mov    %rsp,%rbp
ffffffff80017cfc:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff80017d00:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff80017d04:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff80017d08:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff80017d0d:	74 07                	je     ffffffff80017d16 <ZyanStringViewInsideBuffer+0x22>
ffffffff80017d0f:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
ffffffff80017d14:	75 07                	jne    ffffffff80017d1d <ZyanStringViewInsideBuffer+0x29>
ffffffff80017d16:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff80017d1b:	eb 29                	jmp    ffffffff80017d46 <ZyanStringViewInsideBuffer+0x52>
ffffffff80017d1d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80017d21:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff80017d25:	48 89 50 38          	mov    %rdx,0x38(%rax)
ffffffff80017d29:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80017d2d:	48 89 c7             	mov    %rax,%rdi
ffffffff80017d30:	e8 f1 f8 ff ff       	call   ffffffff80017626 <ZYAN_STRLEN.lto_priv.0>
ffffffff80017d35:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffff80017d39:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80017d3d:	48 89 50 18          	mov    %rdx,0x18(%rax)
ffffffff80017d41:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff80017d46:	c9                   	leave  
ffffffff80017d47:	c3                   	ret    

ffffffff80017d48 <ZyanStringViewInsideBufferEx>:
ffffffff80017d48:	f3 0f 1e fa          	endbr64 
ffffffff80017d4c:	55                   	push   %rbp
ffffffff80017d4d:	48 89 e5             	mov    %rsp,%rbp
ffffffff80017d50:	48 83 ec 18          	sub    $0x18,%rsp
ffffffff80017d54:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff80017d58:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff80017d5c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
ffffffff80017d60:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff80017d65:	74 0e                	je     ffffffff80017d75 <ZyanStringViewInsideBufferEx+0x2d>
ffffffff80017d67:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
ffffffff80017d6c:	74 07                	je     ffffffff80017d75 <ZyanStringViewInsideBufferEx+0x2d>
ffffffff80017d6e:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
ffffffff80017d73:	75 07                	jne    ffffffff80017d7c <ZyanStringViewInsideBufferEx+0x34>
ffffffff80017d75:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff80017d7a:	eb 21                	jmp    ffffffff80017d9d <ZyanStringViewInsideBufferEx+0x55>
ffffffff80017d7c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80017d80:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff80017d84:	48 89 50 38          	mov    %rdx,0x38(%rax)
ffffffff80017d88:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80017d8c:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffff80017d90:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80017d94:	48 89 50 18          	mov    %rdx,0x18(%rax)
ffffffff80017d98:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff80017d9d:	c9                   	leave  
ffffffff80017d9e:	c3                   	ret    

ffffffff80017d9f <ZyanStringViewGetSize>:
ffffffff80017d9f:	f3 0f 1e fa          	endbr64 
ffffffff80017da3:	55                   	push   %rbp
ffffffff80017da4:	48 89 e5             	mov    %rsp,%rbp
ffffffff80017da7:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff80017dab:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff80017daf:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff80017db3:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff80017db8:	74 07                	je     ffffffff80017dc1 <ZyanStringViewGetSize+0x22>
ffffffff80017dba:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
ffffffff80017dbf:	75 07                	jne    ffffffff80017dc8 <ZyanStringViewGetSize+0x29>
ffffffff80017dc1:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff80017dc6:	eb 18                	jmp    ffffffff80017de0 <ZyanStringViewGetSize+0x41>
ffffffff80017dc8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80017dcc:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff80017dd0:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
ffffffff80017dd4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80017dd8:	48 89 10             	mov    %rdx,(%rax)
ffffffff80017ddb:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff80017de0:	c9                   	leave  
ffffffff80017de1:	c3                   	ret    

ffffffff80017de2 <ZyanStringViewGetData>:
ffffffff80017de2:	f3 0f 1e fa          	endbr64 
ffffffff80017de6:	55                   	push   %rbp
ffffffff80017de7:	48 89 e5             	mov    %rsp,%rbp
ffffffff80017dea:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff80017dee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff80017df2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff80017df6:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff80017dfb:	74 07                	je     ffffffff80017e04 <ZyanStringViewGetData+0x22>
ffffffff80017dfd:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
ffffffff80017e02:	75 07                	jne    ffffffff80017e0b <ZyanStringViewGetData+0x29>
ffffffff80017e04:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff80017e09:	eb 14                	jmp    ffffffff80017e1f <ZyanStringViewGetData+0x3d>
ffffffff80017e0b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80017e0f:	48 8b 50 38          	mov    0x38(%rax),%rdx
ffffffff80017e13:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80017e17:	48 89 10             	mov    %rdx,(%rax)
ffffffff80017e1a:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff80017e1f:	c9                   	leave  
ffffffff80017e20:	c3                   	ret    

ffffffff80017e21 <ZyanStringGetChar>:
ffffffff80017e21:	f3 0f 1e fa          	endbr64 
ffffffff80017e25:	55                   	push   %rbp
ffffffff80017e26:	48 89 e5             	mov    %rsp,%rbp
ffffffff80017e29:	48 83 ec 30          	sub    $0x30,%rsp
ffffffff80017e2d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff80017e31:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
ffffffff80017e35:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
ffffffff80017e39:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
ffffffff80017e3e:	74 07                	je     ffffffff80017e47 <ZyanStringGetChar+0x26>
ffffffff80017e40:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
ffffffff80017e45:	75 07                	jne    ffffffff80017e4e <ZyanStringGetChar+0x2d>
ffffffff80017e47:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff80017e4c:	eb 59                	jmp    ffffffff80017ea7 <ZyanStringGetChar+0x86>
ffffffff80017e4e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80017e52:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffff80017e56:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80017e5a:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff80017e5e:	48 39 c2             	cmp    %rax,%rdx
ffffffff80017e61:	72 07                	jb     ffffffff80017e6a <ZyanStringGetChar+0x49>
ffffffff80017e63:	b8 08 00 10 80       	mov    $0x80100008,%eax
ffffffff80017e68:	eb 3d                	jmp    ffffffff80017ea7 <ZyanStringGetChar+0x86>
ffffffff80017e6a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80017e6e:	48 8d 48 08          	lea    0x8(%rax),%rcx
ffffffff80017e72:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
ffffffff80017e76:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
ffffffff80017e7a:	48 89 c2             	mov    %rax,%rdx
ffffffff80017e7d:	48 89 cf             	mov    %rcx,%rdi
ffffffff80017e80:	e8 54 1c 00 00       	call   ffffffff80019ad9 <ZyanVectorGetPointer>
ffffffff80017e85:	89 45 fc             	mov    %eax,-0x4(%rbp)
ffffffff80017e88:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff80017e8b:	85 c0                	test   %eax,%eax
ffffffff80017e8d:	79 05                	jns    ffffffff80017e94 <ZyanStringGetChar+0x73>
ffffffff80017e8f:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff80017e92:	eb 13                	jmp    ffffffff80017ea7 <ZyanStringGetChar+0x86>
ffffffff80017e94:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80017e98:	0f b6 00             	movzbl (%rax),%eax
ffffffff80017e9b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff80017e9f:	88 02                	mov    %al,(%rdx)
ffffffff80017ea1:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff80017ea6:	90                   	nop
ffffffff80017ea7:	c9                   	leave  
ffffffff80017ea8:	c3                   	ret    

ffffffff80017ea9 <ZyanStringGetCharMutable>:
ffffffff80017ea9:	f3 0f 1e fa          	endbr64 
ffffffff80017ead:	55                   	push   %rbp
ffffffff80017eae:	48 89 e5             	mov    %rsp,%rbp
ffffffff80017eb1:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff80017eb5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff80017eb9:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff80017ebd:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
ffffffff80017ec1:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff80017ec6:	75 07                	jne    ffffffff80017ecf <ZyanStringGetCharMutable+0x26>
ffffffff80017ec8:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff80017ecd:	eb 37                	jmp    ffffffff80017f06 <ZyanStringGetCharMutable+0x5d>
ffffffff80017ecf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80017ed3:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffff80017ed7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80017edb:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff80017edf:	48 39 c2             	cmp    %rax,%rdx
ffffffff80017ee2:	72 07                	jb     ffffffff80017eeb <ZyanStringGetCharMutable+0x42>
ffffffff80017ee4:	b8 08 00 10 80       	mov    $0x80100008,%eax
ffffffff80017ee9:	eb 1b                	jmp    ffffffff80017f06 <ZyanStringGetCharMutable+0x5d>
ffffffff80017eeb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80017eef:	48 83 c0 08          	add    $0x8,%rax
ffffffff80017ef3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff80017ef7:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
ffffffff80017efb:	48 89 ce             	mov    %rcx,%rsi
ffffffff80017efe:	48 89 c7             	mov    %rax,%rdi
ffffffff80017f01:	e8 3b 1c 00 00       	call   ffffffff80019b41 <ZyanVectorGetPointerMutable>
ffffffff80017f06:	c9                   	leave  
ffffffff80017f07:	c3                   	ret    

ffffffff80017f08 <ZyanStringSetChar>:
ffffffff80017f08:	f3 0f 1e fa          	endbr64 
ffffffff80017f0c:	55                   	push   %rbp
ffffffff80017f0d:	48 89 e5             	mov    %rsp,%rbp
ffffffff80017f10:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff80017f14:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff80017f18:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff80017f1c:	89 d0                	mov    %edx,%eax
ffffffff80017f1e:	88 45 ec             	mov    %al,-0x14(%rbp)
ffffffff80017f21:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff80017f26:	75 07                	jne    ffffffff80017f2f <ZyanStringSetChar+0x27>
ffffffff80017f28:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff80017f2d:	eb 37                	jmp    ffffffff80017f66 <ZyanStringSetChar+0x5e>
ffffffff80017f2f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80017f33:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffff80017f37:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80017f3b:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff80017f3f:	48 39 c2             	cmp    %rax,%rdx
ffffffff80017f42:	72 07                	jb     ffffffff80017f4b <ZyanStringSetChar+0x43>
ffffffff80017f44:	b8 08 00 10 80       	mov    $0x80100008,%eax
ffffffff80017f49:	eb 1b                	jmp    ffffffff80017f66 <ZyanStringSetChar+0x5e>
ffffffff80017f4b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80017f4f:	48 8d 48 08          	lea    0x8(%rax),%rcx
ffffffff80017f53:	48 8d 45 ec          	lea    -0x14(%rbp),%rax
ffffffff80017f57:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
ffffffff80017f5b:	48 89 c2             	mov    %rax,%rdx
ffffffff80017f5e:	48 89 cf             	mov    %rcx,%rdi
ffffffff80017f61:	e8 43 1c 00 00       	call   ffffffff80019ba9 <ZyanVectorSet>
ffffffff80017f66:	c9                   	leave  
ffffffff80017f67:	c3                   	ret    

ffffffff80017f68 <ZyanStringInsert>:
ffffffff80017f68:	f3 0f 1e fa          	endbr64 
ffffffff80017f6c:	55                   	push   %rbp
ffffffff80017f6d:	48 89 e5             	mov    %rsp,%rbp
ffffffff80017f70:	48 83 ec 30          	sub    $0x30,%rsp
ffffffff80017f74:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff80017f78:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
ffffffff80017f7c:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
ffffffff80017f80:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
ffffffff80017f85:	74 14                	je     ffffffff80017f9b <ZyanStringInsert+0x33>
ffffffff80017f87:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
ffffffff80017f8c:	74 0d                	je     ffffffff80017f9b <ZyanStringInsert+0x33>
ffffffff80017f8e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80017f92:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff80017f96:	48 85 c0             	test   %rax,%rax
ffffffff80017f99:	75 07                	jne    ffffffff80017fa2 <ZyanStringInsert+0x3a>
ffffffff80017f9b:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff80017fa0:	eb 74                	jmp    ffffffff80018016 <ZyanStringInsert+0xae>
ffffffff80017fa2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80017fa6:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff80017faa:	48 39 45 e0          	cmp    %rax,-0x20(%rbp)
ffffffff80017fae:	75 15                	jne    ffffffff80017fc5 <ZyanStringInsert+0x5d>
ffffffff80017fb0:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff80017fb4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80017fb8:	48 89 d6             	mov    %rdx,%rsi
ffffffff80017fbb:	48 89 c7             	mov    %rax,%rdi
ffffffff80017fbe:	e8 33 01 00 00       	call   ffffffff800180f6 <ZyanStringAppend>
ffffffff80017fc3:	eb 51                	jmp    ffffffff80018016 <ZyanStringInsert+0xae>
ffffffff80017fc5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80017fc9:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff80017fcd:	48 39 45 e0          	cmp    %rax,-0x20(%rbp)
ffffffff80017fd1:	72 07                	jb     ffffffff80017fda <ZyanStringInsert+0x72>
ffffffff80017fd3:	b8 08 00 10 80       	mov    $0x80100008,%eax
ffffffff80017fd8:	eb 3c                	jmp    ffffffff80018016 <ZyanStringInsert+0xae>
ffffffff80017fda:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80017fde:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff80017fe2:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
ffffffff80017fe6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80017fea:	48 8b 50 38          	mov    0x38(%rax),%rdx
ffffffff80017fee:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80017ff2:	48 83 c0 08          	add    $0x8,%rax
ffffffff80017ff6:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
ffffffff80017ffa:	48 89 c7             	mov    %rax,%rdi
ffffffff80017ffd:	e8 76 1d 00 00       	call   ffffffff80019d78 <ZyanVectorInsertRange>
ffffffff80018002:	89 45 fc             	mov    %eax,-0x4(%rbp)
ffffffff80018005:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff80018008:	85 c0                	test   %eax,%eax
ffffffff8001800a:	79 05                	jns    ffffffff80018011 <ZyanStringInsert+0xa9>
ffffffff8001800c:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8001800f:	eb 05                	jmp    ffffffff80018016 <ZyanStringInsert+0xae>
ffffffff80018011:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff80018016:	c9                   	leave  
ffffffff80018017:	c3                   	ret    

ffffffff80018018 <ZyanStringInsertEx>:
ffffffff80018018:	f3 0f 1e fa          	endbr64 
ffffffff8001801c:	55                   	push   %rbp
ffffffff8001801d:	48 89 e5             	mov    %rsp,%rbp
ffffffff80018020:	48 83 ec 40          	sub    $0x40,%rsp
ffffffff80018024:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff80018028:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
ffffffff8001802c:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
ffffffff80018030:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
ffffffff80018034:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
ffffffff80018038:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
ffffffff8001803d:	74 14                	je     ffffffff80018053 <ZyanStringInsertEx+0x3b>
ffffffff8001803f:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
ffffffff80018044:	74 0d                	je     ffffffff80018053 <ZyanStringInsertEx+0x3b>
ffffffff80018046:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8001804a:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff8001804e:	48 85 c0             	test   %rax,%rax
ffffffff80018051:	75 0a                	jne    ffffffff8001805d <ZyanStringInsertEx+0x45>
ffffffff80018053:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff80018058:	e9 97 00 00 00       	jmp    ffffffff800180f4 <ZyanStringInsertEx+0xdc>
ffffffff8001805d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80018061:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff80018065:	48 39 45 e0          	cmp    %rax,-0x20(%rbp)
ffffffff80018069:	75 1a                	jne    ffffffff80018085 <ZyanStringInsertEx+0x6d>
ffffffff8001806b:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
ffffffff8001806f:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
ffffffff80018073:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
ffffffff80018077:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001807b:	48 89 c7             	mov    %rax,%rdi
ffffffff8001807e:	e8 40 01 00 00       	call   ffffffff800181c3 <ZyanStringAppendEx>
ffffffff80018083:	eb 6f                	jmp    ffffffff800180f4 <ZyanStringInsertEx+0xdc>
ffffffff80018085:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80018089:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff8001808d:	48 39 45 e0          	cmp    %rax,-0x20(%rbp)
ffffffff80018091:	72 07                	jb     ffffffff8001809a <ZyanStringInsertEx+0x82>
ffffffff80018093:	b8 08 00 10 80       	mov    $0x80100008,%eax
ffffffff80018098:	eb 5a                	jmp    ffffffff800180f4 <ZyanStringInsertEx+0xdc>
ffffffff8001809a:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
ffffffff8001809e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff800180a2:	48 01 c2             	add    %rax,%rdx
ffffffff800180a5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff800180a9:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff800180ad:	48 39 c2             	cmp    %rax,%rdx
ffffffff800180b0:	72 07                	jb     ffffffff800180b9 <ZyanStringInsertEx+0xa1>
ffffffff800180b2:	b8 08 00 10 80       	mov    $0x80100008,%eax
ffffffff800180b7:	eb 3b                	jmp    ffffffff800180f4 <ZyanStringInsertEx+0xdc>
ffffffff800180b9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff800180bd:	48 8b 50 38          	mov    0x38(%rax),%rdx
ffffffff800180c1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff800180c5:	48 01 c2             	add    %rax,%rdx
ffffffff800180c8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800180cc:	48 83 c0 08          	add    $0x8,%rax
ffffffff800180d0:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
ffffffff800180d4:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
ffffffff800180d8:	48 89 c7             	mov    %rax,%rdi
ffffffff800180db:	e8 98 1c 00 00       	call   ffffffff80019d78 <ZyanVectorInsertRange>
ffffffff800180e0:	89 45 fc             	mov    %eax,-0x4(%rbp)
ffffffff800180e3:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff800180e6:	85 c0                	test   %eax,%eax
ffffffff800180e8:	79 05                	jns    ffffffff800180ef <ZyanStringInsertEx+0xd7>
ffffffff800180ea:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff800180ed:	eb 05                	jmp    ffffffff800180f4 <ZyanStringInsertEx+0xdc>
ffffffff800180ef:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff800180f4:	c9                   	leave  
ffffffff800180f5:	c3                   	ret    

ffffffff800180f6 <ZyanStringAppend>:
ffffffff800180f6:	f3 0f 1e fa          	endbr64 
ffffffff800180fa:	55                   	push   %rbp
ffffffff800180fb:	48 89 e5             	mov    %rsp,%rbp
ffffffff800180fe:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff80018102:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff80018106:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
ffffffff8001810a:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
ffffffff8001810f:	74 14                	je     ffffffff80018125 <ZyanStringAppend+0x2f>
ffffffff80018111:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
ffffffff80018116:	74 0d                	je     ffffffff80018125 <ZyanStringAppend+0x2f>
ffffffff80018118:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8001811c:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff80018120:	48 85 c0             	test   %rax,%rax
ffffffff80018123:	75 0a                	jne    ffffffff8001812f <ZyanStringAppend+0x39>
ffffffff80018125:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff8001812a:	e9 92 00 00 00       	jmp    ffffffff800181c1 <ZyanStringAppend+0xcb>
ffffffff8001812f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80018133:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff80018137:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8001813b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8001813f:	48 8b 50 18          	mov    0x18(%rax),%rdx
ffffffff80018143:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80018147:	48 01 d0             	add    %rdx,%rax
ffffffff8001814a:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
ffffffff8001814e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80018152:	48 83 c0 08          	add    $0x8,%rax
ffffffff80018156:	48 89 d6             	mov    %rdx,%rsi
ffffffff80018159:	48 89 c7             	mov    %rax,%rdi
ffffffff8001815c:	e8 e3 25 00 00       	call   ffffffff8001a744 <ZyanVectorResize>
ffffffff80018161:	89 45 f4             	mov    %eax,-0xc(%rbp)
ffffffff80018164:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff80018167:	85 c0                	test   %eax,%eax
ffffffff80018169:	79 05                	jns    ffffffff80018170 <ZyanStringAppend+0x7a>
ffffffff8001816b:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff8001816e:	eb 51                	jmp    ffffffff800181c1 <ZyanStringAppend+0xcb>
ffffffff80018170:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80018174:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff80018178:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
ffffffff8001817c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80018180:	48 8b 48 38          	mov    0x38(%rax),%rcx
ffffffff80018184:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80018188:	48 8b 70 38          	mov    0x38(%rax),%rsi
ffffffff8001818c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80018190:	48 83 e8 01          	sub    $0x1,%rax
ffffffff80018194:	48 01 f0             	add    %rsi,%rax
ffffffff80018197:	48 89 ce             	mov    %rcx,%rsi
ffffffff8001819a:	48 89 c7             	mov    %rax,%rdi
ffffffff8001819d:	e8 2a f4 ff ff       	call   ffffffff800175cc <ZYAN_MEMCPY.lto_priv.1>
ffffffff800181a2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800181a6:	48 8b 50 38          	mov    0x38(%rax),%rdx
ffffffff800181aa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800181ae:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff800181b2:	48 83 e8 01          	sub    $0x1,%rax
ffffffff800181b6:	48 01 d0             	add    %rdx,%rax
ffffffff800181b9:	c6 00 00             	movb   $0x0,(%rax)
ffffffff800181bc:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff800181c1:	c9                   	leave  
ffffffff800181c2:	c3                   	ret    

ffffffff800181c3 <ZyanStringAppendEx>:
ffffffff800181c3:	f3 0f 1e fa          	endbr64 
ffffffff800181c7:	55                   	push   %rbp
ffffffff800181c8:	48 89 e5             	mov    %rsp,%rbp
ffffffff800181cb:	48 83 ec 30          	sub    $0x30,%rsp
ffffffff800181cf:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff800181d3:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
ffffffff800181d7:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
ffffffff800181db:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
ffffffff800181df:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
ffffffff800181e4:	74 14                	je     ffffffff800181fa <ZyanStringAppendEx+0x37>
ffffffff800181e6:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
ffffffff800181eb:	74 0d                	je     ffffffff800181fa <ZyanStringAppendEx+0x37>
ffffffff800181ed:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff800181f1:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff800181f5:	48 85 c0             	test   %rax,%rax
ffffffff800181f8:	75 0a                	jne    ffffffff80018204 <ZyanStringAppendEx+0x41>
ffffffff800181fa:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff800181ff:	e9 ac 00 00 00       	jmp    ffffffff800182b0 <ZyanStringAppendEx+0xed>
ffffffff80018204:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff80018208:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8001820c:	48 01 c2             	add    %rax,%rdx
ffffffff8001820f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80018213:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff80018217:	48 39 c2             	cmp    %rax,%rdx
ffffffff8001821a:	72 0a                	jb     ffffffff80018226 <ZyanStringAppendEx+0x63>
ffffffff8001821c:	b8 08 00 10 80       	mov    $0x80100008,%eax
ffffffff80018221:	e9 8a 00 00 00       	jmp    ffffffff800182b0 <ZyanStringAppendEx+0xed>
ffffffff80018226:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001822a:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff8001822e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff80018232:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff80018236:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8001823a:	48 01 c2             	add    %rax,%rdx
ffffffff8001823d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80018241:	48 83 c0 08          	add    $0x8,%rax
ffffffff80018245:	48 89 d6             	mov    %rdx,%rsi
ffffffff80018248:	48 89 c7             	mov    %rax,%rdi
ffffffff8001824b:	e8 f4 24 00 00       	call   ffffffff8001a744 <ZyanVectorResize>
ffffffff80018250:	89 45 f4             	mov    %eax,-0xc(%rbp)
ffffffff80018253:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff80018256:	85 c0                	test   %eax,%eax
ffffffff80018258:	79 05                	jns    ffffffff8001825f <ZyanStringAppendEx+0x9c>
ffffffff8001825a:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff8001825d:	eb 51                	jmp    ffffffff800182b0 <ZyanStringAppendEx+0xed>
ffffffff8001825f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80018263:	48 8b 50 38          	mov    0x38(%rax),%rdx
ffffffff80018267:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8001826b:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
ffffffff8001826f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80018273:	48 8b 50 38          	mov    0x38(%rax),%rdx
ffffffff80018277:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001827b:	48 83 e8 01          	sub    $0x1,%rax
ffffffff8001827f:	48 01 d0             	add    %rdx,%rax
ffffffff80018282:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
ffffffff80018286:	48 89 ce             	mov    %rcx,%rsi
ffffffff80018289:	48 89 c7             	mov    %rax,%rdi
ffffffff8001828c:	e8 3b f3 ff ff       	call   ffffffff800175cc <ZYAN_MEMCPY.lto_priv.1>
ffffffff80018291:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80018295:	48 8b 50 38          	mov    0x38(%rax),%rdx
ffffffff80018299:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001829d:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff800182a1:	48 83 e8 01          	sub    $0x1,%rax
ffffffff800182a5:	48 01 d0             	add    %rdx,%rax
ffffffff800182a8:	c6 00 00             	movb   $0x0,(%rax)
ffffffff800182ab:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff800182b0:	c9                   	leave  
ffffffff800182b1:	c3                   	ret    

ffffffff800182b2 <ZyanStringDelete>:
ffffffff800182b2:	f3 0f 1e fa          	endbr64 
ffffffff800182b6:	55                   	push   %rbp
ffffffff800182b7:	48 89 e5             	mov    %rsp,%rbp
ffffffff800182ba:	48 83 ec 30          	sub    $0x30,%rsp
ffffffff800182be:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff800182c2:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
ffffffff800182c6:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
ffffffff800182ca:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
ffffffff800182cf:	75 07                	jne    ffffffff800182d8 <ZyanStringDelete+0x26>
ffffffff800182d1:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff800182d6:	eb 68                	jmp    ffffffff80018340 <ZyanStringDelete+0x8e>
ffffffff800182d8:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff800182dc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff800182e0:	48 01 c2             	add    %rax,%rdx
ffffffff800182e3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800182e7:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff800182eb:	48 39 c2             	cmp    %rax,%rdx
ffffffff800182ee:	72 07                	jb     ffffffff800182f7 <ZyanStringDelete+0x45>
ffffffff800182f0:	b8 08 00 10 80       	mov    $0x80100008,%eax
ffffffff800182f5:	eb 49                	jmp    ffffffff80018340 <ZyanStringDelete+0x8e>
ffffffff800182f7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800182fb:	48 83 c0 08          	add    $0x8,%rax
ffffffff800182ff:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff80018303:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
ffffffff80018307:	48 89 ce             	mov    %rcx,%rsi
ffffffff8001830a:	48 89 c7             	mov    %rax,%rdi
ffffffff8001830d:	e8 b5 1e 00 00       	call   ffffffff8001a1c7 <ZyanVectorDeleteRange>
ffffffff80018312:	89 45 fc             	mov    %eax,-0x4(%rbp)
ffffffff80018315:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff80018318:	85 c0                	test   %eax,%eax
ffffffff8001831a:	79 05                	jns    ffffffff80018321 <ZyanStringDelete+0x6f>
ffffffff8001831c:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8001831f:	eb 1f                	jmp    ffffffff80018340 <ZyanStringDelete+0x8e>
ffffffff80018321:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80018325:	48 8b 50 38          	mov    0x38(%rax),%rdx
ffffffff80018329:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001832d:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff80018331:	48 83 e8 01          	sub    $0x1,%rax
ffffffff80018335:	48 01 d0             	add    %rdx,%rax
ffffffff80018338:	c6 00 00             	movb   $0x0,(%rax)
ffffffff8001833b:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff80018340:	c9                   	leave  
ffffffff80018341:	c3                   	ret    

ffffffff80018342 <ZyanStringTruncate>:
ffffffff80018342:	f3 0f 1e fa          	endbr64 
ffffffff80018346:	55                   	push   %rbp
ffffffff80018347:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001834a:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff8001834e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff80018352:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
ffffffff80018356:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
ffffffff8001835b:	75 07                	jne    ffffffff80018364 <ZyanStringTruncate+0x22>
ffffffff8001835d:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff80018362:	eb 6a                	jmp    ffffffff800183ce <ZyanStringTruncate+0x8c>
ffffffff80018364:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80018368:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff8001836c:	48 39 45 e0          	cmp    %rax,-0x20(%rbp)
ffffffff80018370:	72 07                	jb     ffffffff80018379 <ZyanStringTruncate+0x37>
ffffffff80018372:	b8 08 00 10 80       	mov    $0x80100008,%eax
ffffffff80018377:	eb 55                	jmp    ffffffff800183ce <ZyanStringTruncate+0x8c>
ffffffff80018379:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001837d:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff80018381:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
ffffffff80018385:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
ffffffff80018389:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001838d:	48 83 c0 08          	add    $0x8,%rax
ffffffff80018391:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
ffffffff80018395:	48 89 ce             	mov    %rcx,%rsi
ffffffff80018398:	48 89 c7             	mov    %rax,%rdi
ffffffff8001839b:	e8 27 1e 00 00       	call   ffffffff8001a1c7 <ZyanVectorDeleteRange>
ffffffff800183a0:	89 45 fc             	mov    %eax,-0x4(%rbp)
ffffffff800183a3:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff800183a6:	85 c0                	test   %eax,%eax
ffffffff800183a8:	79 05                	jns    ffffffff800183af <ZyanStringTruncate+0x6d>
ffffffff800183aa:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff800183ad:	eb 1f                	jmp    ffffffff800183ce <ZyanStringTruncate+0x8c>
ffffffff800183af:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800183b3:	48 8b 50 38          	mov    0x38(%rax),%rdx
ffffffff800183b7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800183bb:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff800183bf:	48 83 e8 01          	sub    $0x1,%rax
ffffffff800183c3:	48 01 d0             	add    %rdx,%rax
ffffffff800183c6:	c6 00 00             	movb   $0x0,(%rax)
ffffffff800183c9:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff800183ce:	c9                   	leave  
ffffffff800183cf:	c3                   	ret    

ffffffff800183d0 <ZyanStringClear>:
ffffffff800183d0:	f3 0f 1e fa          	endbr64 
ffffffff800183d4:	55                   	push   %rbp
ffffffff800183d5:	48 89 e5             	mov    %rsp,%rbp
ffffffff800183d8:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff800183dc:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff800183e0:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
ffffffff800183e5:	75 07                	jne    ffffffff800183ee <ZyanStringClear+0x1e>
ffffffff800183e7:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff800183ec:	eb 43                	jmp    ffffffff80018431 <ZyanStringClear+0x61>
ffffffff800183ee:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800183f2:	48 83 c0 08          	add    $0x8,%rax
ffffffff800183f6:	48 89 c7             	mov    %rax,%rdi
ffffffff800183f9:	e8 4f 20 00 00       	call   ffffffff8001a44d <ZyanVectorClear>
ffffffff800183fe:	89 45 fc             	mov    %eax,-0x4(%rbp)
ffffffff80018401:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff80018404:	85 c0                	test   %eax,%eax
ffffffff80018406:	79 05                	jns    ffffffff8001840d <ZyanStringClear+0x3d>
ffffffff80018408:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8001840b:	eb 24                	jmp    ffffffff80018431 <ZyanStringClear+0x61>
ffffffff8001840d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80018411:	48 8b 40 38          	mov    0x38(%rax),%rax
ffffffff80018415:	c6 00 00             	movb   $0x0,(%rax)
ffffffff80018418:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001841c:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff80018420:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffff80018424:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80018428:	48 89 50 18          	mov    %rdx,0x18(%rax)
ffffffff8001842c:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff80018431:	c9                   	leave  
ffffffff80018432:	c3                   	ret    

ffffffff80018433 <ZyanStringLPos>:
ffffffff80018433:	f3 0f 1e fa          	endbr64 
ffffffff80018437:	55                   	push   %rbp
ffffffff80018438:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001843b:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff8001843f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff80018443:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff80018447:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
ffffffff8001844b:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff80018450:	75 07                	jne    ffffffff80018459 <ZyanStringLPos+0x26>
ffffffff80018452:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff80018457:	eb 28                	jmp    ffffffff80018481 <ZyanStringLPos+0x4e>
ffffffff80018459:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001845d:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff80018461:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
ffffffff80018465:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff80018469:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
ffffffff8001846d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80018471:	49 89 c8             	mov    %rcx,%r8
ffffffff80018474:	b9 00 00 00 00       	mov    $0x0,%ecx
ffffffff80018479:	48 89 c7             	mov    %rax,%rdi
ffffffff8001847c:	e8 02 00 00 00       	call   ffffffff80018483 <ZyanStringLPosEx>
ffffffff80018481:	c9                   	leave  
ffffffff80018482:	c3                   	ret    

ffffffff80018483 <ZyanStringLPosEx>:
ffffffff80018483:	f3 0f 1e fa          	endbr64 
ffffffff80018487:	55                   	push   %rbp
ffffffff80018488:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001848b:	48 83 ec 48          	sub    $0x48,%rsp
ffffffff8001848f:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
ffffffff80018493:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
ffffffff80018497:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
ffffffff8001849b:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
ffffffff8001849f:	4c 89 45 b8          	mov    %r8,-0x48(%rbp)
ffffffff800184a3:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
ffffffff800184a8:	74 0e                	je     ffffffff800184b8 <ZyanStringLPosEx+0x35>
ffffffff800184aa:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
ffffffff800184af:	74 07                	je     ffffffff800184b8 <ZyanStringLPosEx+0x35>
ffffffff800184b1:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
ffffffff800184b6:	75 0a                	jne    ffffffff800184c2 <ZyanStringLPosEx+0x3f>
ffffffff800184b8:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff800184bd:	e9 7c 01 00 00       	jmp    ffffffff8001863e <ZyanStringLPosEx+0x1bb>
ffffffff800184c2:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
ffffffff800184c6:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff800184ca:	48 01 c2             	add    %rax,%rdx
ffffffff800184cd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff800184d1:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff800184d5:	48 39 c2             	cmp    %rax,%rdx
ffffffff800184d8:	72 0a                	jb     ffffffff800184e4 <ZyanStringLPosEx+0x61>
ffffffff800184da:	b8 08 00 10 80       	mov    $0x80100008,%eax
ffffffff800184df:	e9 5a 01 00 00       	jmp    ffffffff8001863e <ZyanStringLPosEx+0x1bb>
ffffffff800184e4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff800184e8:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff800184ec:	48 83 f8 01          	cmp    $0x1,%rax
ffffffff800184f0:	74 23                	je     ffffffff80018515 <ZyanStringLPosEx+0x92>
ffffffff800184f2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff800184f6:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff800184fa:	48 83 f8 01          	cmp    $0x1,%rax
ffffffff800184fe:	74 15                	je     ffffffff80018515 <ZyanStringLPosEx+0x92>
ffffffff80018500:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80018504:	48 8b 50 18          	mov    0x18(%rax),%rdx
ffffffff80018508:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8001850c:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff80018510:	48 39 c2             	cmp    %rax,%rdx
ffffffff80018513:	73 15                	jae    ffffffff8001852a <ZyanStringLPosEx+0xa7>
ffffffff80018515:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80018519:	48 c7 00 ff ff ff ff 	movq   $0xffffffffffffffff,(%rax)
ffffffff80018520:	b8 03 00 10 00       	mov    $0x100003,%eax
ffffffff80018525:	e9 14 01 00 00       	jmp    ffffffff8001863e <ZyanStringLPosEx+0x1bb>
ffffffff8001852a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8001852e:	48 8b 50 38          	mov    0x38(%rax),%rdx
ffffffff80018532:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff80018536:	48 01 d0             	add    %rdx,%rax
ffffffff80018539:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8001853d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff80018541:	48 8b 40 38          	mov    0x38(%rax),%rax
ffffffff80018545:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff80018549:	e9 bc 00 00 00       	jmp    ffffffff8001860a <ZyanStringLPosEx+0x187>
ffffffff8001854e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80018552:	0f b6 10             	movzbl (%rax),%edx
ffffffff80018555:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80018559:	0f b6 00             	movzbl (%rax),%eax
ffffffff8001855c:	38 c2                	cmp    %al,%dl
ffffffff8001855e:	0f 85 a0 00 00 00    	jne    ffffffff80018604 <ZyanStringLPosEx+0x181>
ffffffff80018564:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80018568:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff8001856c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80018570:	48 8b 50 38          	mov    0x38(%rax),%rdx
ffffffff80018574:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80018578:	48 29 d0             	sub    %rdx,%rax
ffffffff8001857b:	48 89 c1             	mov    %rax,%rcx
ffffffff8001857e:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
ffffffff80018582:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff80018586:	48 01 d0             	add    %rdx,%rax
ffffffff80018589:	48 39 c1             	cmp    %rax,%rcx
ffffffff8001858c:	76 15                	jbe    ffffffff800185a3 <ZyanStringLPosEx+0x120>
ffffffff8001858e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80018592:	48 c7 00 ff ff ff ff 	movq   $0xffffffffffffffff,(%rax)
ffffffff80018599:	b8 03 00 10 00       	mov    $0x100003,%eax
ffffffff8001859e:	e9 9b 00 00 00       	jmp    ffffffff8001863e <ZyanStringLPosEx+0x1bb>
ffffffff800185a3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff800185a7:	0f b6 00             	movzbl (%rax),%eax
ffffffff800185aa:	84 c0                	test   %al,%al
ffffffff800185ac:	75 20                	jne    ffffffff800185ce <ZyanStringLPosEx+0x14b>
ffffffff800185ae:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff800185b2:	48 8b 48 38          	mov    0x38(%rax),%rcx
ffffffff800185b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff800185ba:	48 29 c8             	sub    %rcx,%rax
ffffffff800185bd:	48 89 c2             	mov    %rax,%rdx
ffffffff800185c0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff800185c4:	48 89 10             	mov    %rdx,(%rax)
ffffffff800185c7:	b8 02 00 10 00       	mov    $0x100002,%eax
ffffffff800185cc:	eb 70                	jmp    ffffffff8001863e <ZyanStringLPosEx+0x1bb>
ffffffff800185ce:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800185d2:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffff800185d6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
ffffffff800185da:	0f b6 10             	movzbl (%rax),%edx
ffffffff800185dd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff800185e1:	48 8d 48 01          	lea    0x1(%rax),%rcx
ffffffff800185e5:	48 89 4d f0          	mov    %rcx,-0x10(%rbp)
ffffffff800185e9:	0f b6 00             	movzbl (%rax),%eax
ffffffff800185ec:	38 c2                	cmp    %al,%dl
ffffffff800185ee:	75 05                	jne    ffffffff800185f5 <ZyanStringLPosEx+0x172>
ffffffff800185f0:	e9 77 ff ff ff       	jmp    ffffffff8001856c <ZyanStringLPosEx+0xe9>
ffffffff800185f5:	90                   	nop
ffffffff800185f6:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff800185fa:	48 8b 40 38          	mov    0x38(%rax),%rax
ffffffff800185fe:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff80018602:	eb 01                	jmp    ffffffff80018605 <ZyanStringLPosEx+0x182>
ffffffff80018604:	90                   	nop
ffffffff80018605:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
ffffffff8001860a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001860e:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffff80018612:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80018616:	48 8b 48 38          	mov    0x38(%rax),%rcx
ffffffff8001861a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8001861e:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff80018622:	48 01 c8             	add    %rcx,%rax
ffffffff80018625:	48 39 c2             	cmp    %rax,%rdx
ffffffff80018628:	0f 82 20 ff ff ff    	jb     ffffffff8001854e <ZyanStringLPosEx+0xcb>
ffffffff8001862e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80018632:	48 c7 00 ff ff ff ff 	movq   $0xffffffffffffffff,(%rax)
ffffffff80018639:	b8 03 00 10 00       	mov    $0x100003,%eax
ffffffff8001863e:	c9                   	leave  
ffffffff8001863f:	c3                   	ret    

ffffffff80018640 <ZyanStringLPosI>:
ffffffff80018640:	f3 0f 1e fa          	endbr64 
ffffffff80018644:	55                   	push   %rbp
ffffffff80018645:	48 89 e5             	mov    %rsp,%rbp
ffffffff80018648:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff8001864c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff80018650:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff80018654:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
ffffffff80018658:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff8001865d:	75 07                	jne    ffffffff80018666 <ZyanStringLPosI+0x26>
ffffffff8001865f:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff80018664:	eb 28                	jmp    ffffffff8001868e <ZyanStringLPosI+0x4e>
ffffffff80018666:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001866a:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff8001866e:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
ffffffff80018672:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff80018676:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
ffffffff8001867a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001867e:	49 89 c8             	mov    %rcx,%r8
ffffffff80018681:	b9 00 00 00 00       	mov    $0x0,%ecx
ffffffff80018686:	48 89 c7             	mov    %rax,%rdi
ffffffff80018689:	e8 02 00 00 00       	call   ffffffff80018690 <ZyanStringLPosIEx>
ffffffff8001868e:	c9                   	leave  
ffffffff8001868f:	c3                   	ret    

ffffffff80018690 <ZyanStringLPosIEx>:
ffffffff80018690:	f3 0f 1e fa          	endbr64 
ffffffff80018694:	55                   	push   %rbp
ffffffff80018695:	48 89 e5             	mov    %rsp,%rbp
ffffffff80018698:	48 83 ec 48          	sub    $0x48,%rsp
ffffffff8001869c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
ffffffff800186a0:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
ffffffff800186a4:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
ffffffff800186a8:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
ffffffff800186ac:	4c 89 45 b8          	mov    %r8,-0x48(%rbp)
ffffffff800186b0:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
ffffffff800186b5:	74 0e                	je     ffffffff800186c5 <ZyanStringLPosIEx+0x35>
ffffffff800186b7:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
ffffffff800186bc:	74 07                	je     ffffffff800186c5 <ZyanStringLPosIEx+0x35>
ffffffff800186be:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
ffffffff800186c3:	75 0a                	jne    ffffffff800186cf <ZyanStringLPosIEx+0x3f>
ffffffff800186c5:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff800186ca:	e9 b1 01 00 00       	jmp    ffffffff80018880 <ZyanStringLPosIEx+0x1f0>
ffffffff800186cf:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
ffffffff800186d3:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff800186d7:	48 01 c2             	add    %rax,%rdx
ffffffff800186da:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff800186de:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff800186e2:	48 39 c2             	cmp    %rax,%rdx
ffffffff800186e5:	72 0a                	jb     ffffffff800186f1 <ZyanStringLPosIEx+0x61>
ffffffff800186e7:	b8 08 00 10 80       	mov    $0x80100008,%eax
ffffffff800186ec:	e9 8f 01 00 00       	jmp    ffffffff80018880 <ZyanStringLPosIEx+0x1f0>
ffffffff800186f1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff800186f5:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff800186f9:	48 83 f8 01          	cmp    $0x1,%rax
ffffffff800186fd:	74 23                	je     ffffffff80018722 <ZyanStringLPosIEx+0x92>
ffffffff800186ff:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff80018703:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff80018707:	48 83 f8 01          	cmp    $0x1,%rax
ffffffff8001870b:	74 15                	je     ffffffff80018722 <ZyanStringLPosIEx+0x92>
ffffffff8001870d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80018711:	48 8b 50 18          	mov    0x18(%rax),%rdx
ffffffff80018715:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff80018719:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff8001871d:	48 39 c2             	cmp    %rax,%rdx
ffffffff80018720:	73 15                	jae    ffffffff80018737 <ZyanStringLPosIEx+0xa7>
ffffffff80018722:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80018726:	48 c7 00 ff ff ff ff 	movq   $0xffffffffffffffff,(%rax)
ffffffff8001872d:	b8 03 00 10 00       	mov    $0x100003,%eax
ffffffff80018732:	e9 49 01 00 00       	jmp    ffffffff80018880 <ZyanStringLPosIEx+0x1f0>
ffffffff80018737:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8001873b:	48 8b 50 38          	mov    0x38(%rax),%rdx
ffffffff8001873f:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff80018743:	48 01 d0             	add    %rdx,%rax
ffffffff80018746:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8001874a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8001874e:	48 8b 40 38          	mov    0x38(%rax),%rax
ffffffff80018752:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff80018756:	e9 f1 00 00 00       	jmp    ffffffff8001884c <ZyanStringLPosIEx+0x1bc>
ffffffff8001875b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001875f:	0f b6 10             	movzbl (%rax),%edx
ffffffff80018762:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80018766:	0f b6 00             	movzbl (%rax),%eax
ffffffff80018769:	38 c2                	cmp    %al,%dl
ffffffff8001876b:	74 1b                	je     ffffffff80018788 <ZyanStringLPosIEx+0xf8>
ffffffff8001876d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80018771:	0f b6 00             	movzbl (%rax),%eax
ffffffff80018774:	83 f0 20             	xor    $0x20,%eax
ffffffff80018777:	89 c2                	mov    %eax,%edx
ffffffff80018779:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8001877d:	0f b6 00             	movzbl (%rax),%eax
ffffffff80018780:	38 c2                	cmp    %al,%dl
ffffffff80018782:	0f 85 be 00 00 00    	jne    ffffffff80018846 <ZyanStringLPosIEx+0x1b6>
ffffffff80018788:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001878c:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff80018790:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80018794:	48 8b 50 38          	mov    0x38(%rax),%rdx
ffffffff80018798:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001879c:	48 29 d0             	sub    %rdx,%rax
ffffffff8001879f:	48 89 c1             	mov    %rax,%rcx
ffffffff800187a2:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
ffffffff800187a6:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff800187aa:	48 01 d0             	add    %rdx,%rax
ffffffff800187ad:	48 39 c1             	cmp    %rax,%rcx
ffffffff800187b0:	76 15                	jbe    ffffffff800187c7 <ZyanStringLPosIEx+0x137>
ffffffff800187b2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff800187b6:	48 c7 00 ff ff ff ff 	movq   $0xffffffffffffffff,(%rax)
ffffffff800187bd:	b8 03 00 10 00       	mov    $0x100003,%eax
ffffffff800187c2:	e9 b9 00 00 00       	jmp    ffffffff80018880 <ZyanStringLPosIEx+0x1f0>
ffffffff800187c7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff800187cb:	0f b6 00             	movzbl (%rax),%eax
ffffffff800187ce:	84 c0                	test   %al,%al
ffffffff800187d0:	75 23                	jne    ffffffff800187f5 <ZyanStringLPosIEx+0x165>
ffffffff800187d2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff800187d6:	48 8b 48 38          	mov    0x38(%rax),%rcx
ffffffff800187da:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff800187de:	48 29 c8             	sub    %rcx,%rax
ffffffff800187e1:	48 89 c2             	mov    %rax,%rdx
ffffffff800187e4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff800187e8:	48 89 10             	mov    %rdx,(%rax)
ffffffff800187eb:	b8 02 00 10 00       	mov    $0x100002,%eax
ffffffff800187f0:	e9 8b 00 00 00       	jmp    ffffffff80018880 <ZyanStringLPosIEx+0x1f0>
ffffffff800187f5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800187f9:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffff800187fd:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
ffffffff80018801:	0f b6 00             	movzbl (%rax),%eax
ffffffff80018804:	88 45 e7             	mov    %al,-0x19(%rbp)
ffffffff80018807:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8001880b:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffff8001880f:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
ffffffff80018813:	0f b6 00             	movzbl (%rax),%eax
ffffffff80018816:	88 45 e6             	mov    %al,-0x1a(%rbp)
ffffffff80018819:	0f b6 45 e7          	movzbl -0x19(%rbp),%eax
ffffffff8001881d:	3a 45 e6             	cmp    -0x1a(%rbp),%al
ffffffff80018820:	0f 84 6a ff ff ff    	je     ffffffff80018790 <ZyanStringLPosIEx+0x100>
ffffffff80018826:	0f b6 45 e7          	movzbl -0x19(%rbp),%eax
ffffffff8001882a:	83 f0 20             	xor    $0x20,%eax
ffffffff8001882d:	38 45 e6             	cmp    %al,-0x1a(%rbp)
ffffffff80018830:	75 05                	jne    ffffffff80018837 <ZyanStringLPosIEx+0x1a7>
ffffffff80018832:	e9 59 ff ff ff       	jmp    ffffffff80018790 <ZyanStringLPosIEx+0x100>
ffffffff80018837:	90                   	nop
ffffffff80018838:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8001883c:	48 8b 40 38          	mov    0x38(%rax),%rax
ffffffff80018840:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff80018844:	eb 01                	jmp    ffffffff80018847 <ZyanStringLPosIEx+0x1b7>
ffffffff80018846:	90                   	nop
ffffffff80018847:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
ffffffff8001884c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80018850:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffff80018854:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80018858:	48 8b 48 38          	mov    0x38(%rax),%rcx
ffffffff8001885c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80018860:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff80018864:	48 01 c8             	add    %rcx,%rax
ffffffff80018867:	48 39 c2             	cmp    %rax,%rdx
ffffffff8001886a:	0f 82 eb fe ff ff    	jb     ffffffff8001875b <ZyanStringLPosIEx+0xcb>
ffffffff80018870:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80018874:	48 c7 00 ff ff ff ff 	movq   $0xffffffffffffffff,(%rax)
ffffffff8001887b:	b8 03 00 10 00       	mov    $0x100003,%eax
ffffffff80018880:	c9                   	leave  
ffffffff80018881:	c3                   	ret    

ffffffff80018882 <ZyanStringRPos>:
ffffffff80018882:	f3 0f 1e fa          	endbr64 
ffffffff80018886:	55                   	push   %rbp
ffffffff80018887:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001888a:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff8001888e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff80018892:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff80018896:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
ffffffff8001889a:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff8001889f:	75 07                	jne    ffffffff800188a8 <ZyanStringRPos+0x26>
ffffffff800188a1:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff800188a6:	eb 2f                	jmp    ffffffff800188d7 <ZyanStringRPos+0x55>
ffffffff800188a8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff800188ac:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff800188b0:	48 8d 78 ff          	lea    -0x1(%rax),%rdi
ffffffff800188b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff800188b8:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff800188bc:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
ffffffff800188c0:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff800188c4:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
ffffffff800188c8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff800188cc:	49 89 f8             	mov    %rdi,%r8
ffffffff800188cf:	48 89 c7             	mov    %rax,%rdi
ffffffff800188d2:	e8 02 00 00 00       	call   ffffffff800188d9 <ZyanStringRPosEx>
ffffffff800188d7:	c9                   	leave  
ffffffff800188d8:	c3                   	ret    

ffffffff800188d9 <ZyanStringRPosEx>:
ffffffff800188d9:	f3 0f 1e fa          	endbr64 
ffffffff800188dd:	55                   	push   %rbp
ffffffff800188de:	48 89 e5             	mov    %rsp,%rbp
ffffffff800188e1:	48 83 ec 48          	sub    $0x48,%rsp
ffffffff800188e5:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
ffffffff800188e9:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
ffffffff800188ed:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
ffffffff800188f1:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
ffffffff800188f5:	4c 89 45 b8          	mov    %r8,-0x48(%rbp)
ffffffff800188f9:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
ffffffff800188fe:	74 0e                	je     ffffffff8001890e <ZyanStringRPosEx+0x35>
ffffffff80018900:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
ffffffff80018905:	74 07                	je     ffffffff8001890e <ZyanStringRPosEx+0x35>
ffffffff80018907:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
ffffffff8001890c:	75 0a                	jne    ffffffff80018918 <ZyanStringRPosEx+0x3f>
ffffffff8001890e:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff80018913:	e9 95 01 00 00       	jmp    ffffffff80018aad <ZyanStringRPosEx+0x1d4>
ffffffff80018918:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8001891c:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff80018920:	48 39 45 c0          	cmp    %rax,-0x40(%rbp)
ffffffff80018924:	73 0a                	jae    ffffffff80018930 <ZyanStringRPosEx+0x57>
ffffffff80018926:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff8001892a:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
ffffffff8001892e:	76 0a                	jbe    ffffffff8001893a <ZyanStringRPosEx+0x61>
ffffffff80018930:	b8 08 00 10 80       	mov    $0x80100008,%eax
ffffffff80018935:	e9 73 01 00 00       	jmp    ffffffff80018aad <ZyanStringRPosEx+0x1d4>
ffffffff8001893a:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
ffffffff8001893f:	74 38                	je     ffffffff80018979 <ZyanStringRPosEx+0xa0>
ffffffff80018941:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
ffffffff80018946:	74 31                	je     ffffffff80018979 <ZyanStringRPosEx+0xa0>
ffffffff80018948:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8001894c:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff80018950:	48 83 f8 01          	cmp    $0x1,%rax
ffffffff80018954:	74 23                	je     ffffffff80018979 <ZyanStringRPosEx+0xa0>
ffffffff80018956:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8001895a:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff8001895e:	48 83 f8 01          	cmp    $0x1,%rax
ffffffff80018962:	74 15                	je     ffffffff80018979 <ZyanStringRPosEx+0xa0>
ffffffff80018964:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80018968:	48 8b 50 18          	mov    0x18(%rax),%rdx
ffffffff8001896c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff80018970:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff80018974:	48 39 c2             	cmp    %rax,%rdx
ffffffff80018977:	73 15                	jae    ffffffff8001898e <ZyanStringRPosEx+0xb5>
ffffffff80018979:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8001897d:	48 c7 00 ff ff ff ff 	movq   $0xffffffffffffffff,(%rax)
ffffffff80018984:	b8 03 00 10 00       	mov    $0x100003,%eax
ffffffff80018989:	e9 1f 01 00 00       	jmp    ffffffff80018aad <ZyanStringRPosEx+0x1d4>
ffffffff8001898e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80018992:	48 8b 50 38          	mov    0x38(%rax),%rdx
ffffffff80018996:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8001899a:	48 83 e8 01          	sub    $0x1,%rax
ffffffff8001899e:	48 01 d0             	add    %rdx,%rax
ffffffff800189a1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff800189a5:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff800189a9:	48 8b 50 38          	mov    0x38(%rax),%rdx
ffffffff800189ad:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff800189b1:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff800189b5:	48 83 e8 02          	sub    $0x2,%rax
ffffffff800189b9:	48 01 d0             	add    %rdx,%rax
ffffffff800189bc:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff800189c0:	e9 c6 00 00 00       	jmp    ffffffff80018a8b <ZyanStringRPosEx+0x1b2>
ffffffff800189c5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff800189c9:	0f b6 10             	movzbl (%rax),%edx
ffffffff800189cc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff800189d0:	0f b6 00             	movzbl (%rax),%eax
ffffffff800189d3:	38 c2                	cmp    %al,%dl
ffffffff800189d5:	0f 85 aa 00 00 00    	jne    ffffffff80018a85 <ZyanStringRPosEx+0x1ac>
ffffffff800189db:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff800189df:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff800189e3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff800189e7:	48 8b 40 38          	mov    0x38(%rax),%rax
ffffffff800189eb:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
ffffffff800189ef:	73 24                	jae    ffffffff80018a15 <ZyanStringRPosEx+0x13c>
ffffffff800189f1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff800189f5:	48 8b 50 38          	mov    0x38(%rax),%rdx
ffffffff800189f9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800189fd:	48 29 d0             	sub    %rdx,%rax
ffffffff80018a00:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffff80018a04:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80018a08:	48 89 10             	mov    %rdx,(%rax)
ffffffff80018a0b:	b8 02 00 10 00       	mov    $0x100002,%eax
ffffffff80018a10:	e9 98 00 00 00       	jmp    ffffffff80018aad <ZyanStringRPosEx+0x1d4>
ffffffff80018a15:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80018a19:	48 8b 50 38          	mov    0x38(%rax),%rdx
ffffffff80018a1d:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff80018a21:	48 2b 45 b8          	sub    -0x48(%rbp),%rax
ffffffff80018a25:	48 01 d0             	add    %rdx,%rax
ffffffff80018a28:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
ffffffff80018a2c:	73 12                	jae    ffffffff80018a40 <ZyanStringRPosEx+0x167>
ffffffff80018a2e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80018a32:	48 c7 00 ff ff ff ff 	movq   $0xffffffffffffffff,(%rax)
ffffffff80018a39:	b8 03 00 10 00       	mov    $0x100003,%eax
ffffffff80018a3e:	eb 6d                	jmp    ffffffff80018aad <ZyanStringRPosEx+0x1d4>
ffffffff80018a40:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80018a44:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
ffffffff80018a48:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
ffffffff80018a4c:	0f b6 10             	movzbl (%rax),%edx
ffffffff80018a4f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80018a53:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
ffffffff80018a57:	48 89 4d f0          	mov    %rcx,-0x10(%rbp)
ffffffff80018a5b:	0f b6 00             	movzbl (%rax),%eax
ffffffff80018a5e:	38 c2                	cmp    %al,%dl
ffffffff80018a60:	75 05                	jne    ffffffff80018a67 <ZyanStringRPosEx+0x18e>
ffffffff80018a62:	e9 7c ff ff ff       	jmp    ffffffff800189e3 <ZyanStringRPosEx+0x10a>
ffffffff80018a67:	90                   	nop
ffffffff80018a68:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff80018a6c:	48 8b 50 38          	mov    0x38(%rax),%rdx
ffffffff80018a70:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff80018a74:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff80018a78:	48 83 e8 02          	sub    $0x2,%rax
ffffffff80018a7c:	48 01 d0             	add    %rdx,%rax
ffffffff80018a7f:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff80018a83:	eb 01                	jmp    ffffffff80018a86 <ZyanStringRPosEx+0x1ad>
ffffffff80018a85:	90                   	nop
ffffffff80018a86:	48 83 6d f8 01       	subq   $0x1,-0x8(%rbp)
ffffffff80018a8b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80018a8f:	48 8b 40 38          	mov    0x38(%rax),%rax
ffffffff80018a93:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
ffffffff80018a97:	0f 83 28 ff ff ff    	jae    ffffffff800189c5 <ZyanStringRPosEx+0xec>
ffffffff80018a9d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80018aa1:	48 c7 00 ff ff ff ff 	movq   $0xffffffffffffffff,(%rax)
ffffffff80018aa8:	b8 03 00 10 00       	mov    $0x100003,%eax
ffffffff80018aad:	c9                   	leave  
ffffffff80018aae:	c3                   	ret    

ffffffff80018aaf <ZyanStringRPosI>:
ffffffff80018aaf:	f3 0f 1e fa          	endbr64 
ffffffff80018ab3:	55                   	push   %rbp
ffffffff80018ab4:	48 89 e5             	mov    %rsp,%rbp
ffffffff80018ab7:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff80018abb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff80018abf:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff80018ac3:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
ffffffff80018ac7:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff80018acc:	75 07                	jne    ffffffff80018ad5 <ZyanStringRPosI+0x26>
ffffffff80018ace:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff80018ad3:	eb 2f                	jmp    ffffffff80018b04 <ZyanStringRPosI+0x55>
ffffffff80018ad5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80018ad9:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff80018add:	48 8d 78 ff          	lea    -0x1(%rax),%rdi
ffffffff80018ae1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80018ae5:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff80018ae9:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
ffffffff80018aed:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff80018af1:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
ffffffff80018af5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80018af9:	49 89 f8             	mov    %rdi,%r8
ffffffff80018afc:	48 89 c7             	mov    %rax,%rdi
ffffffff80018aff:	e8 02 00 00 00       	call   ffffffff80018b06 <ZyanStringRPosIEx>
ffffffff80018b04:	c9                   	leave  
ffffffff80018b05:	c3                   	ret    

ffffffff80018b06 <ZyanStringRPosIEx>:
ffffffff80018b06:	f3 0f 1e fa          	endbr64 
ffffffff80018b0a:	55                   	push   %rbp
ffffffff80018b0b:	48 89 e5             	mov    %rsp,%rbp
ffffffff80018b0e:	48 83 ec 48          	sub    $0x48,%rsp
ffffffff80018b12:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
ffffffff80018b16:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
ffffffff80018b1a:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
ffffffff80018b1e:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
ffffffff80018b22:	4c 89 45 b8          	mov    %r8,-0x48(%rbp)
ffffffff80018b26:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
ffffffff80018b2b:	74 0e                	je     ffffffff80018b3b <ZyanStringRPosIEx+0x35>
ffffffff80018b2d:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
ffffffff80018b32:	74 07                	je     ffffffff80018b3b <ZyanStringRPosIEx+0x35>
ffffffff80018b34:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
ffffffff80018b39:	75 0a                	jne    ffffffff80018b45 <ZyanStringRPosIEx+0x3f>
ffffffff80018b3b:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff80018b40:	e9 ca 01 00 00       	jmp    ffffffff80018d0f <ZyanStringRPosIEx+0x209>
ffffffff80018b45:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80018b49:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff80018b4d:	48 39 45 c0          	cmp    %rax,-0x40(%rbp)
ffffffff80018b51:	73 0a                	jae    ffffffff80018b5d <ZyanStringRPosIEx+0x57>
ffffffff80018b53:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff80018b57:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
ffffffff80018b5b:	76 0a                	jbe    ffffffff80018b67 <ZyanStringRPosIEx+0x61>
ffffffff80018b5d:	b8 08 00 10 80       	mov    $0x80100008,%eax
ffffffff80018b62:	e9 a8 01 00 00       	jmp    ffffffff80018d0f <ZyanStringRPosIEx+0x209>
ffffffff80018b67:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
ffffffff80018b6c:	74 38                	je     ffffffff80018ba6 <ZyanStringRPosIEx+0xa0>
ffffffff80018b6e:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
ffffffff80018b73:	74 31                	je     ffffffff80018ba6 <ZyanStringRPosIEx+0xa0>
ffffffff80018b75:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80018b79:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff80018b7d:	48 83 f8 01          	cmp    $0x1,%rax
ffffffff80018b81:	74 23                	je     ffffffff80018ba6 <ZyanStringRPosIEx+0xa0>
ffffffff80018b83:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff80018b87:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff80018b8b:	48 83 f8 01          	cmp    $0x1,%rax
ffffffff80018b8f:	74 15                	je     ffffffff80018ba6 <ZyanStringRPosIEx+0xa0>
ffffffff80018b91:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80018b95:	48 8b 50 18          	mov    0x18(%rax),%rdx
ffffffff80018b99:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff80018b9d:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff80018ba1:	48 39 c2             	cmp    %rax,%rdx
ffffffff80018ba4:	73 15                	jae    ffffffff80018bbb <ZyanStringRPosIEx+0xb5>
ffffffff80018ba6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80018baa:	48 c7 00 ff ff ff ff 	movq   $0xffffffffffffffff,(%rax)
ffffffff80018bb1:	b8 03 00 10 00       	mov    $0x100003,%eax
ffffffff80018bb6:	e9 54 01 00 00       	jmp    ffffffff80018d0f <ZyanStringRPosIEx+0x209>
ffffffff80018bbb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80018bbf:	48 8b 50 38          	mov    0x38(%rax),%rdx
ffffffff80018bc3:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff80018bc7:	48 83 e8 01          	sub    $0x1,%rax
ffffffff80018bcb:	48 01 d0             	add    %rdx,%rax
ffffffff80018bce:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff80018bd2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff80018bd6:	48 8b 50 38          	mov    0x38(%rax),%rdx
ffffffff80018bda:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff80018bde:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff80018be2:	48 83 e8 02          	sub    $0x2,%rax
ffffffff80018be6:	48 01 d0             	add    %rdx,%rax
ffffffff80018be9:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff80018bed:	e9 fb 00 00 00       	jmp    ffffffff80018ced <ZyanStringRPosIEx+0x1e7>
ffffffff80018bf2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80018bf6:	0f b6 10             	movzbl (%rax),%edx
ffffffff80018bf9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80018bfd:	0f b6 00             	movzbl (%rax),%eax
ffffffff80018c00:	38 c2                	cmp    %al,%dl
ffffffff80018c02:	74 1b                	je     ffffffff80018c1f <ZyanStringRPosIEx+0x119>
ffffffff80018c04:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80018c08:	0f b6 00             	movzbl (%rax),%eax
ffffffff80018c0b:	83 f0 20             	xor    $0x20,%eax
ffffffff80018c0e:	89 c2                	mov    %eax,%edx
ffffffff80018c10:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80018c14:	0f b6 00             	movzbl (%rax),%eax
ffffffff80018c17:	38 c2                	cmp    %al,%dl
ffffffff80018c19:	0f 85 c8 00 00 00    	jne    ffffffff80018ce7 <ZyanStringRPosIEx+0x1e1>
ffffffff80018c1f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80018c23:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff80018c27:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff80018c2b:	48 8b 40 38          	mov    0x38(%rax),%rax
ffffffff80018c2f:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
ffffffff80018c33:	73 24                	jae    ffffffff80018c59 <ZyanStringRPosIEx+0x153>
ffffffff80018c35:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80018c39:	48 8b 50 38          	mov    0x38(%rax),%rdx
ffffffff80018c3d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80018c41:	48 29 d0             	sub    %rdx,%rax
ffffffff80018c44:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffff80018c48:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80018c4c:	48 89 10             	mov    %rdx,(%rax)
ffffffff80018c4f:	b8 02 00 10 00       	mov    $0x100002,%eax
ffffffff80018c54:	e9 b6 00 00 00       	jmp    ffffffff80018d0f <ZyanStringRPosIEx+0x209>
ffffffff80018c59:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80018c5d:	48 8b 50 38          	mov    0x38(%rax),%rdx
ffffffff80018c61:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff80018c65:	48 2b 45 b8          	sub    -0x48(%rbp),%rax
ffffffff80018c69:	48 01 d0             	add    %rdx,%rax
ffffffff80018c6c:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
ffffffff80018c70:	73 15                	jae    ffffffff80018c87 <ZyanStringRPosIEx+0x181>
ffffffff80018c72:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80018c76:	48 c7 00 ff ff ff ff 	movq   $0xffffffffffffffff,(%rax)
ffffffff80018c7d:	b8 03 00 10 00       	mov    $0x100003,%eax
ffffffff80018c82:	e9 88 00 00 00       	jmp    ffffffff80018d0f <ZyanStringRPosIEx+0x209>
ffffffff80018c87:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80018c8b:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
ffffffff80018c8f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
ffffffff80018c93:	0f b6 00             	movzbl (%rax),%eax
ffffffff80018c96:	88 45 e7             	mov    %al,-0x19(%rbp)
ffffffff80018c99:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80018c9d:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
ffffffff80018ca1:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
ffffffff80018ca5:	0f b6 00             	movzbl (%rax),%eax
ffffffff80018ca8:	88 45 e6             	mov    %al,-0x1a(%rbp)
ffffffff80018cab:	0f b6 45 e7          	movzbl -0x19(%rbp),%eax
ffffffff80018caf:	3a 45 e6             	cmp    -0x1a(%rbp),%al
ffffffff80018cb2:	0f 84 6f ff ff ff    	je     ffffffff80018c27 <ZyanStringRPosIEx+0x121>
ffffffff80018cb8:	0f b6 45 e7          	movzbl -0x19(%rbp),%eax
ffffffff80018cbc:	83 f0 20             	xor    $0x20,%eax
ffffffff80018cbf:	38 45 e6             	cmp    %al,-0x1a(%rbp)
ffffffff80018cc2:	75 05                	jne    ffffffff80018cc9 <ZyanStringRPosIEx+0x1c3>
ffffffff80018cc4:	e9 5e ff ff ff       	jmp    ffffffff80018c27 <ZyanStringRPosIEx+0x121>
ffffffff80018cc9:	90                   	nop
ffffffff80018cca:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff80018cce:	48 8b 50 38          	mov    0x38(%rax),%rdx
ffffffff80018cd2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff80018cd6:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff80018cda:	48 83 e8 02          	sub    $0x2,%rax
ffffffff80018cde:	48 01 d0             	add    %rdx,%rax
ffffffff80018ce1:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff80018ce5:	eb 01                	jmp    ffffffff80018ce8 <ZyanStringRPosIEx+0x1e2>
ffffffff80018ce7:	90                   	nop
ffffffff80018ce8:	48 83 6d f8 01       	subq   $0x1,-0x8(%rbp)
ffffffff80018ced:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80018cf1:	48 8b 40 38          	mov    0x38(%rax),%rax
ffffffff80018cf5:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
ffffffff80018cf9:	0f 83 f3 fe ff ff    	jae    ffffffff80018bf2 <ZyanStringRPosIEx+0xec>
ffffffff80018cff:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80018d03:	48 c7 00 ff ff ff ff 	movq   $0xffffffffffffffff,(%rax)
ffffffff80018d0a:	b8 03 00 10 00       	mov    $0x100003,%eax
ffffffff80018d0f:	c9                   	leave  
ffffffff80018d10:	c3                   	ret    

ffffffff80018d11 <ZyanStringCompare>:
ffffffff80018d11:	f3 0f 1e fa          	endbr64 
ffffffff80018d15:	55                   	push   %rbp
ffffffff80018d16:	48 89 e5             	mov    %rsp,%rbp
ffffffff80018d19:	48 83 ec 38          	sub    $0x38,%rsp
ffffffff80018d1d:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
ffffffff80018d21:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
ffffffff80018d25:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
ffffffff80018d29:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
ffffffff80018d2e:	74 07                	je     ffffffff80018d37 <ZyanStringCompare+0x26>
ffffffff80018d30:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
ffffffff80018d35:	75 0a                	jne    ffffffff80018d41 <ZyanStringCompare+0x30>
ffffffff80018d37:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff80018d3c:	e9 40 01 00 00       	jmp    ffffffff80018e81 <ZyanStringCompare+0x170>
ffffffff80018d41:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80018d45:	48 8b 50 18          	mov    0x18(%rax),%rdx
ffffffff80018d49:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff80018d4d:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff80018d51:	48 39 c2             	cmp    %rax,%rdx
ffffffff80018d54:	73 14                	jae    ffffffff80018d6a <ZyanStringCompare+0x59>
ffffffff80018d56:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80018d5a:	c7 00 ff ff ff ff    	movl   $0xffffffff,(%rax)
ffffffff80018d60:	b8 03 00 10 00       	mov    $0x100003,%eax
ffffffff80018d65:	e9 17 01 00 00       	jmp    ffffffff80018e81 <ZyanStringCompare+0x170>
ffffffff80018d6a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80018d6e:	48 8b 50 18          	mov    0x18(%rax),%rdx
ffffffff80018d72:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff80018d76:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff80018d7a:	48 39 c2             	cmp    %rax,%rdx
ffffffff80018d7d:	76 14                	jbe    ffffffff80018d93 <ZyanStringCompare+0x82>
ffffffff80018d7f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80018d83:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
ffffffff80018d89:	b8 03 00 10 00       	mov    $0x100003,%eax
ffffffff80018d8e:	e9 ee 00 00 00       	jmp    ffffffff80018e81 <ZyanStringCompare+0x170>
ffffffff80018d93:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80018d97:	48 8b 40 38          	mov    0x38(%rax),%rax
ffffffff80018d9b:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff80018d9f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff80018da3:	48 8b 40 38          	mov    0x38(%rax),%rax
ffffffff80018da7:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff80018dab:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
ffffffff80018db2:	00 
ffffffff80018db3:	eb 26                	jmp    ffffffff80018ddb <ZyanStringCompare+0xca>
ffffffff80018db5:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff80018db9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80018dbd:	48 01 d0             	add    %rdx,%rax
ffffffff80018dc0:	0f b6 10             	movzbl (%rax),%edx
ffffffff80018dc3:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
ffffffff80018dc7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80018dcb:	48 01 c8             	add    %rcx,%rax
ffffffff80018dce:	0f b6 00             	movzbl (%rax),%eax
ffffffff80018dd1:	38 c2                	cmp    %al,%dl
ffffffff80018dd3:	75 32                	jne    ffffffff80018e07 <ZyanStringCompare+0xf6>
ffffffff80018dd5:	90                   	nop
ffffffff80018dd6:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
ffffffff80018ddb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80018ddf:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffff80018de3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80018de7:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff80018deb:	48 39 c2             	cmp    %rax,%rdx
ffffffff80018dee:	73 18                	jae    ffffffff80018e08 <ZyanStringCompare+0xf7>
ffffffff80018df0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80018df4:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffff80018df8:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff80018dfc:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff80018e00:	48 39 c2             	cmp    %rax,%rdx
ffffffff80018e03:	72 b0                	jb     ffffffff80018db5 <ZyanStringCompare+0xa4>
ffffffff80018e05:	eb 01                	jmp    ffffffff80018e08 <ZyanStringCompare+0xf7>
ffffffff80018e07:	90                   	nop
ffffffff80018e08:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff80018e0c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80018e10:	48 01 d0             	add    %rdx,%rax
ffffffff80018e13:	0f b6 10             	movzbl (%rax),%edx
ffffffff80018e16:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
ffffffff80018e1a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80018e1e:	48 01 c8             	add    %rcx,%rax
ffffffff80018e21:	0f b6 00             	movzbl (%rax),%eax
ffffffff80018e24:	38 c2                	cmp    %al,%dl
ffffffff80018e26:	75 11                	jne    ffffffff80018e39 <ZyanStringCompare+0x128>
ffffffff80018e28:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80018e2c:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
ffffffff80018e32:	b8 02 00 10 00       	mov    $0x100002,%eax
ffffffff80018e37:	eb 48                	jmp    ffffffff80018e81 <ZyanStringCompare+0x170>
ffffffff80018e39:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff80018e3d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80018e41:	48 01 d0             	add    %rdx,%rax
ffffffff80018e44:	0f b6 00             	movzbl (%rax),%eax
ffffffff80018e47:	83 c8 20             	or     $0x20,%eax
ffffffff80018e4a:	89 c2                	mov    %eax,%edx
ffffffff80018e4c:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
ffffffff80018e50:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80018e54:	48 01 c8             	add    %rcx,%rax
ffffffff80018e57:	0f b6 00             	movzbl (%rax),%eax
ffffffff80018e5a:	83 c8 20             	or     $0x20,%eax
ffffffff80018e5d:	38 c2                	cmp    %al,%dl
ffffffff80018e5f:	7d 11                	jge    ffffffff80018e72 <ZyanStringCompare+0x161>
ffffffff80018e61:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80018e65:	c7 00 ff ff ff ff    	movl   $0xffffffff,(%rax)
ffffffff80018e6b:	b8 03 00 10 00       	mov    $0x100003,%eax
ffffffff80018e70:	eb 0f                	jmp    ffffffff80018e81 <ZyanStringCompare+0x170>
ffffffff80018e72:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80018e76:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
ffffffff80018e7c:	b8 03 00 10 00       	mov    $0x100003,%eax
ffffffff80018e81:	c9                   	leave  
ffffffff80018e82:	c3                   	ret    

ffffffff80018e83 <ZyanStringCompareI>:
ffffffff80018e83:	f3 0f 1e fa          	endbr64 
ffffffff80018e87:	55                   	push   %rbp
ffffffff80018e88:	48 89 e5             	mov    %rsp,%rbp
ffffffff80018e8b:	48 83 ec 38          	sub    $0x38,%rsp
ffffffff80018e8f:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
ffffffff80018e93:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
ffffffff80018e97:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
ffffffff80018e9b:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
ffffffff80018ea0:	74 07                	je     ffffffff80018ea9 <ZyanStringCompareI+0x26>
ffffffff80018ea2:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
ffffffff80018ea7:	75 0a                	jne    ffffffff80018eb3 <ZyanStringCompareI+0x30>
ffffffff80018ea9:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff80018eae:	e9 65 01 00 00       	jmp    ffffffff80019018 <ZyanStringCompareI+0x195>
ffffffff80018eb3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80018eb7:	48 8b 50 18          	mov    0x18(%rax),%rdx
ffffffff80018ebb:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff80018ebf:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff80018ec3:	48 39 c2             	cmp    %rax,%rdx
ffffffff80018ec6:	73 14                	jae    ffffffff80018edc <ZyanStringCompareI+0x59>
ffffffff80018ec8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80018ecc:	c7 00 ff ff ff ff    	movl   $0xffffffff,(%rax)
ffffffff80018ed2:	b8 03 00 10 00       	mov    $0x100003,%eax
ffffffff80018ed7:	e9 3c 01 00 00       	jmp    ffffffff80019018 <ZyanStringCompareI+0x195>
ffffffff80018edc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80018ee0:	48 8b 50 18          	mov    0x18(%rax),%rdx
ffffffff80018ee4:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff80018ee8:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff80018eec:	48 39 c2             	cmp    %rax,%rdx
ffffffff80018eef:	76 14                	jbe    ffffffff80018f05 <ZyanStringCompareI+0x82>
ffffffff80018ef1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80018ef5:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
ffffffff80018efb:	b8 03 00 10 00       	mov    $0x100003,%eax
ffffffff80018f00:	e9 13 01 00 00       	jmp    ffffffff80019018 <ZyanStringCompareI+0x195>
ffffffff80018f05:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80018f09:	48 8b 40 38          	mov    0x38(%rax),%rax
ffffffff80018f0d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff80018f11:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff80018f15:	48 8b 40 38          	mov    0x38(%rax),%rax
ffffffff80018f19:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff80018f1d:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
ffffffff80018f24:	00 
ffffffff80018f25:	eb 4b                	jmp    ffffffff80018f72 <ZyanStringCompareI+0xef>
ffffffff80018f27:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff80018f2b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80018f2f:	48 01 d0             	add    %rdx,%rax
ffffffff80018f32:	0f b6 10             	movzbl (%rax),%edx
ffffffff80018f35:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
ffffffff80018f39:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80018f3d:	48 01 c8             	add    %rcx,%rax
ffffffff80018f40:	0f b6 00             	movzbl (%rax),%eax
ffffffff80018f43:	38 c2                	cmp    %al,%dl
ffffffff80018f45:	74 25                	je     ffffffff80018f6c <ZyanStringCompareI+0xe9>
ffffffff80018f47:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff80018f4b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80018f4f:	48 01 d0             	add    %rdx,%rax
ffffffff80018f52:	0f b6 00             	movzbl (%rax),%eax
ffffffff80018f55:	83 f0 20             	xor    $0x20,%eax
ffffffff80018f58:	89 c2                	mov    %eax,%edx
ffffffff80018f5a:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
ffffffff80018f5e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80018f62:	48 01 c8             	add    %rcx,%rax
ffffffff80018f65:	0f b6 00             	movzbl (%rax),%eax
ffffffff80018f68:	38 c2                	cmp    %al,%dl
ffffffff80018f6a:	75 32                	jne    ffffffff80018f9e <ZyanStringCompareI+0x11b>
ffffffff80018f6c:	90                   	nop
ffffffff80018f6d:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
ffffffff80018f72:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80018f76:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffff80018f7a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80018f7e:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff80018f82:	48 39 c2             	cmp    %rax,%rdx
ffffffff80018f85:	73 18                	jae    ffffffff80018f9f <ZyanStringCompareI+0x11c>
ffffffff80018f87:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80018f8b:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffff80018f8f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff80018f93:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff80018f97:	48 39 c2             	cmp    %rax,%rdx
ffffffff80018f9a:	72 8b                	jb     ffffffff80018f27 <ZyanStringCompareI+0xa4>
ffffffff80018f9c:	eb 01                	jmp    ffffffff80018f9f <ZyanStringCompareI+0x11c>
ffffffff80018f9e:	90                   	nop
ffffffff80018f9f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff80018fa3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80018fa7:	48 01 d0             	add    %rdx,%rax
ffffffff80018faa:	0f b6 10             	movzbl (%rax),%edx
ffffffff80018fad:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
ffffffff80018fb1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80018fb5:	48 01 c8             	add    %rcx,%rax
ffffffff80018fb8:	0f b6 00             	movzbl (%rax),%eax
ffffffff80018fbb:	38 c2                	cmp    %al,%dl
ffffffff80018fbd:	75 11                	jne    ffffffff80018fd0 <ZyanStringCompareI+0x14d>
ffffffff80018fbf:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80018fc3:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
ffffffff80018fc9:	b8 02 00 10 00       	mov    $0x100002,%eax
ffffffff80018fce:	eb 48                	jmp    ffffffff80019018 <ZyanStringCompareI+0x195>
ffffffff80018fd0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff80018fd4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80018fd8:	48 01 d0             	add    %rdx,%rax
ffffffff80018fdb:	0f b6 00             	movzbl (%rax),%eax
ffffffff80018fde:	83 c8 20             	or     $0x20,%eax
ffffffff80018fe1:	89 c2                	mov    %eax,%edx
ffffffff80018fe3:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
ffffffff80018fe7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80018feb:	48 01 c8             	add    %rcx,%rax
ffffffff80018fee:	0f b6 00             	movzbl (%rax),%eax
ffffffff80018ff1:	83 c8 20             	or     $0x20,%eax
ffffffff80018ff4:	38 c2                	cmp    %al,%dl
ffffffff80018ff6:	7d 11                	jge    ffffffff80019009 <ZyanStringCompareI+0x186>
ffffffff80018ff8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80018ffc:	c7 00 ff ff ff ff    	movl   $0xffffffff,(%rax)
ffffffff80019002:	b8 03 00 10 00       	mov    $0x100003,%eax
ffffffff80019007:	eb 0f                	jmp    ffffffff80019018 <ZyanStringCompareI+0x195>
ffffffff80019009:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8001900d:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
ffffffff80019013:	b8 03 00 10 00       	mov    $0x100003,%eax
ffffffff80019018:	c9                   	leave  
ffffffff80019019:	c3                   	ret    

ffffffff8001901a <ZyanStringToLowerCase>:
ffffffff8001901a:	f3 0f 1e fa          	endbr64 
ffffffff8001901e:	55                   	push   %rbp
ffffffff8001901f:	48 89 e5             	mov    %rsp,%rbp
ffffffff80019022:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff80019026:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8001902a:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff8001902f:	75 07                	jne    ffffffff80019038 <ZyanStringToLowerCase+0x1e>
ffffffff80019031:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff80019036:	eb 1d                	jmp    ffffffff80019055 <ZyanStringToLowerCase+0x3b>
ffffffff80019038:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001903c:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff80019040:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
ffffffff80019044:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80019048:	be 00 00 00 00       	mov    $0x0,%esi
ffffffff8001904d:	48 89 c7             	mov    %rax,%rdi
ffffffff80019050:	e8 02 00 00 00       	call   ffffffff80019057 <ZyanStringToLowerCaseEx>
ffffffff80019055:	c9                   	leave  
ffffffff80019056:	c3                   	ret    

ffffffff80019057 <ZyanStringToLowerCaseEx>:
ffffffff80019057:	f3 0f 1e fa          	endbr64 
ffffffff8001905b:	55                   	push   %rbp
ffffffff8001905c:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001905f:	48 83 ec 38          	sub    $0x38,%rsp
ffffffff80019063:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
ffffffff80019067:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
ffffffff8001906b:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
ffffffff8001906f:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
ffffffff80019074:	75 07                	jne    ffffffff8001907d <ZyanStringToLowerCaseEx+0x26>
ffffffff80019076:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff8001907b:	eb 7f                	jmp    ffffffff800190fc <ZyanStringToLowerCaseEx+0xa5>
ffffffff8001907d:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
ffffffff80019081:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80019085:	48 01 c2             	add    %rax,%rdx
ffffffff80019088:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8001908c:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff80019090:	48 39 c2             	cmp    %rax,%rdx
ffffffff80019093:	72 07                	jb     ffffffff8001909c <ZyanStringToLowerCaseEx+0x45>
ffffffff80019095:	b8 08 00 10 80       	mov    $0x80100008,%eax
ffffffff8001909a:	eb 60                	jmp    ffffffff800190fc <ZyanStringToLowerCaseEx+0xa5>
ffffffff8001909c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff800190a0:	48 8b 50 38          	mov    0x38(%rax),%rdx
ffffffff800190a4:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff800190a8:	48 01 d0             	add    %rdx,%rax
ffffffff800190ab:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff800190af:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff800190b3:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff800190b7:	eb 2d                	jmp    ffffffff800190e6 <ZyanStringToLowerCaseEx+0x8f>
ffffffff800190b9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff800190bd:	0f b6 00             	movzbl (%rax),%eax
ffffffff800190c0:	88 45 ef             	mov    %al,-0x11(%rbp)
ffffffff800190c3:	80 7d ef 40          	cmpb   $0x40,-0x11(%rbp)
ffffffff800190c7:	7e 13                	jle    ffffffff800190dc <ZyanStringToLowerCaseEx+0x85>
ffffffff800190c9:	80 7d ef 5a          	cmpb   $0x5a,-0x11(%rbp)
ffffffff800190cd:	7f 0d                	jg     ffffffff800190dc <ZyanStringToLowerCaseEx+0x85>
ffffffff800190cf:	0f b6 45 ef          	movzbl -0x11(%rbp),%eax
ffffffff800190d3:	83 c8 20             	or     $0x20,%eax
ffffffff800190d6:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff800190da:	88 02                	mov    %al,(%rdx)
ffffffff800190dc:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
ffffffff800190e1:	48 83 45 f0 01       	addq   $0x1,-0x10(%rbp)
ffffffff800190e6:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
ffffffff800190ea:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff800190ee:	48 01 d0             	add    %rdx,%rax
ffffffff800190f1:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
ffffffff800190f5:	72 c2                	jb     ffffffff800190b9 <ZyanStringToLowerCaseEx+0x62>
ffffffff800190f7:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff800190fc:	c9                   	leave  
ffffffff800190fd:	c3                   	ret    

ffffffff800190fe <ZyanStringToUpperCase>:
ffffffff800190fe:	f3 0f 1e fa          	endbr64 
ffffffff80019102:	55                   	push   %rbp
ffffffff80019103:	48 89 e5             	mov    %rsp,%rbp
ffffffff80019106:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff8001910a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8001910e:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff80019113:	75 07                	jne    ffffffff8001911c <ZyanStringToUpperCase+0x1e>
ffffffff80019115:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff8001911a:	eb 1d                	jmp    ffffffff80019139 <ZyanStringToUpperCase+0x3b>
ffffffff8001911c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80019120:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff80019124:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
ffffffff80019128:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001912c:	be 00 00 00 00       	mov    $0x0,%esi
ffffffff80019131:	48 89 c7             	mov    %rax,%rdi
ffffffff80019134:	e8 02 00 00 00       	call   ffffffff8001913b <ZyanStringToUpperCaseEx>
ffffffff80019139:	c9                   	leave  
ffffffff8001913a:	c3                   	ret    

ffffffff8001913b <ZyanStringToUpperCaseEx>:
ffffffff8001913b:	f3 0f 1e fa          	endbr64 
ffffffff8001913f:	55                   	push   %rbp
ffffffff80019140:	48 89 e5             	mov    %rsp,%rbp
ffffffff80019143:	48 83 ec 38          	sub    $0x38,%rsp
ffffffff80019147:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
ffffffff8001914b:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
ffffffff8001914f:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
ffffffff80019153:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
ffffffff80019158:	75 07                	jne    ffffffff80019161 <ZyanStringToUpperCaseEx+0x26>
ffffffff8001915a:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff8001915f:	eb 7f                	jmp    ffffffff800191e0 <ZyanStringToUpperCaseEx+0xa5>
ffffffff80019161:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
ffffffff80019165:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80019169:	48 01 c2             	add    %rax,%rdx
ffffffff8001916c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80019170:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff80019174:	48 39 c2             	cmp    %rax,%rdx
ffffffff80019177:	72 07                	jb     ffffffff80019180 <ZyanStringToUpperCaseEx+0x45>
ffffffff80019179:	b8 08 00 10 80       	mov    $0x80100008,%eax
ffffffff8001917e:	eb 60                	jmp    ffffffff800191e0 <ZyanStringToUpperCaseEx+0xa5>
ffffffff80019180:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80019184:	48 8b 50 38          	mov    0x38(%rax),%rdx
ffffffff80019188:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8001918c:	48 01 d0             	add    %rdx,%rax
ffffffff8001918f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff80019193:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff80019197:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff8001919b:	eb 2d                	jmp    ffffffff800191ca <ZyanStringToUpperCaseEx+0x8f>
ffffffff8001919d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff800191a1:	0f b6 00             	movzbl (%rax),%eax
ffffffff800191a4:	88 45 ef             	mov    %al,-0x11(%rbp)
ffffffff800191a7:	80 7d ef 60          	cmpb   $0x60,-0x11(%rbp)
ffffffff800191ab:	7e 13                	jle    ffffffff800191c0 <ZyanStringToUpperCaseEx+0x85>
ffffffff800191ad:	80 7d ef 7a          	cmpb   $0x7a,-0x11(%rbp)
ffffffff800191b1:	7f 0d                	jg     ffffffff800191c0 <ZyanStringToUpperCaseEx+0x85>
ffffffff800191b3:	0f b6 45 ef          	movzbl -0x11(%rbp),%eax
ffffffff800191b7:	83 e0 df             	and    $0xffffffdf,%eax
ffffffff800191ba:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff800191be:	88 02                	mov    %al,(%rdx)
ffffffff800191c0:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
ffffffff800191c5:	48 83 45 f0 01       	addq   $0x1,-0x10(%rbp)
ffffffff800191ca:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
ffffffff800191ce:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff800191d2:	48 01 d0             	add    %rdx,%rax
ffffffff800191d5:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
ffffffff800191d9:	72 c2                	jb     ffffffff8001919d <ZyanStringToUpperCaseEx+0x62>
ffffffff800191db:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff800191e0:	c9                   	leave  
ffffffff800191e1:	c3                   	ret    

ffffffff800191e2 <ZyanStringResize>:
ffffffff800191e2:	f3 0f 1e fa          	endbr64 
ffffffff800191e6:	55                   	push   %rbp
ffffffff800191e7:	48 89 e5             	mov    %rsp,%rbp
ffffffff800191ea:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff800191ee:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff800191f2:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
ffffffff800191f6:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
ffffffff800191fb:	75 07                	jne    ffffffff80019204 <ZyanStringResize+0x22>
ffffffff800191fd:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff80019202:	eb 49                	jmp    ffffffff8001924d <ZyanStringResize+0x6b>
ffffffff80019204:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80019208:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffff8001920c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80019210:	48 83 c0 08          	add    $0x8,%rax
ffffffff80019214:	48 89 d6             	mov    %rdx,%rsi
ffffffff80019217:	48 89 c7             	mov    %rax,%rdi
ffffffff8001921a:	e8 25 15 00 00       	call   ffffffff8001a744 <ZyanVectorResize>
ffffffff8001921f:	89 45 fc             	mov    %eax,-0x4(%rbp)
ffffffff80019222:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff80019225:	85 c0                	test   %eax,%eax
ffffffff80019227:	79 05                	jns    ffffffff8001922e <ZyanStringResize+0x4c>
ffffffff80019229:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8001922c:	eb 1f                	jmp    ffffffff8001924d <ZyanStringResize+0x6b>
ffffffff8001922e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80019232:	48 8b 50 38          	mov    0x38(%rax),%rdx
ffffffff80019236:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001923a:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff8001923e:	48 83 e8 01          	sub    $0x1,%rax
ffffffff80019242:	48 01 d0             	add    %rdx,%rax
ffffffff80019245:	c6 00 00             	movb   $0x0,(%rax)
ffffffff80019248:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff8001924d:	c9                   	leave  
ffffffff8001924e:	c3                   	ret    

ffffffff8001924f <ZyanStringReserve>:
ffffffff8001924f:	f3 0f 1e fa          	endbr64 
ffffffff80019253:	55                   	push   %rbp
ffffffff80019254:	48 89 e5             	mov    %rsp,%rbp
ffffffff80019257:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff8001925b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8001925f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff80019263:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff80019268:	75 07                	jne    ffffffff80019271 <ZyanStringReserve+0x22>
ffffffff8001926a:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff8001926f:	eb 17                	jmp    ffffffff80019288 <ZyanStringReserve+0x39>
ffffffff80019271:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80019275:	48 83 c0 08          	add    $0x8,%rax
ffffffff80019279:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff8001927d:	48 89 d6             	mov    %rdx,%rsi
ffffffff80019280:	48 89 c7             	mov    %rax,%rdi
ffffffff80019283:	e8 61 16 00 00       	call   ffffffff8001a8e9 <ZyanVectorReserve>
ffffffff80019288:	c9                   	leave  
ffffffff80019289:	c3                   	ret    

ffffffff8001928a <ZyanStringShrinkToFit>:
ffffffff8001928a:	f3 0f 1e fa          	endbr64 
ffffffff8001928e:	55                   	push   %rbp
ffffffff8001928f:	48 89 e5             	mov    %rsp,%rbp
ffffffff80019292:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff80019296:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8001929a:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff8001929f:	75 07                	jne    ffffffff800192a8 <ZyanStringShrinkToFit+0x1e>
ffffffff800192a1:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff800192a6:	eb 10                	jmp    ffffffff800192b8 <ZyanStringShrinkToFit+0x2e>
ffffffff800192a8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff800192ac:	48 83 c0 08          	add    $0x8,%rax
ffffffff800192b0:	48 89 c7             	mov    %rax,%rdi
ffffffff800192b3:	e8 8a 16 00 00       	call   ffffffff8001a942 <ZyanVectorShrinkToFit>
ffffffff800192b8:	c9                   	leave  
ffffffff800192b9:	c3                   	ret    

ffffffff800192ba <ZyanStringGetCapacity>:
ffffffff800192ba:	f3 0f 1e fa          	endbr64 
ffffffff800192be:	55                   	push   %rbp
ffffffff800192bf:	48 89 e5             	mov    %rsp,%rbp
ffffffff800192c2:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff800192c6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff800192ca:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff800192ce:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff800192d3:	75 07                	jne    ffffffff800192dc <ZyanStringGetCapacity+0x22>
ffffffff800192d5:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff800192da:	eb 18                	jmp    ffffffff800192f4 <ZyanStringGetCapacity+0x3a>
ffffffff800192dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff800192e0:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff800192e4:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
ffffffff800192e8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff800192ec:	48 89 10             	mov    %rdx,(%rax)
ffffffff800192ef:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff800192f4:	c9                   	leave  
ffffffff800192f5:	c3                   	ret    

ffffffff800192f6 <ZyanStringGetSize>:
ffffffff800192f6:	f3 0f 1e fa          	endbr64 
ffffffff800192fa:	55                   	push   %rbp
ffffffff800192fb:	48 89 e5             	mov    %rsp,%rbp
ffffffff800192fe:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff80019302:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff80019306:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff8001930a:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff8001930f:	75 07                	jne    ffffffff80019318 <ZyanStringGetSize+0x22>
ffffffff80019311:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff80019316:	eb 18                	jmp    ffffffff80019330 <ZyanStringGetSize+0x3a>
ffffffff80019318:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001931c:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff80019320:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
ffffffff80019324:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80019328:	48 89 10             	mov    %rdx,(%rax)
ffffffff8001932b:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff80019330:	c9                   	leave  
ffffffff80019331:	c3                   	ret    

ffffffff80019332 <ZyanStringGetData>:
ffffffff80019332:	f3 0f 1e fa          	endbr64 
ffffffff80019336:	55                   	push   %rbp
ffffffff80019337:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001933a:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff8001933e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff80019342:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff80019346:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff8001934b:	75 07                	jne    ffffffff80019354 <ZyanStringGetData+0x22>
ffffffff8001934d:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff80019352:	eb 14                	jmp    ffffffff80019368 <ZyanStringGetData+0x36>
ffffffff80019354:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80019358:	48 8b 50 38          	mov    0x38(%rax),%rdx
ffffffff8001935c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80019360:	48 89 10             	mov    %rdx,(%rax)
ffffffff80019363:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff80019368:	c9                   	leave  
ffffffff80019369:	c3                   	ret    

ffffffff8001936a <ZYAN_MEMCPY.lto_priv.2>:
ffffffff8001936a:	55                   	push   %rbp
ffffffff8001936b:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001936e:	48 83 ec 28          	sub    $0x28,%rsp
ffffffff80019372:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff80019376:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
ffffffff8001937a:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
ffffffff8001937e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80019382:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff80019386:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8001938a:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff8001938e:	eb 1d                	jmp    ffffffff800193ad <ZYAN_MEMCPY.lto_priv.2+0x43>
ffffffff80019390:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff80019394:	48 8d 42 01          	lea    0x1(%rdx),%rax
ffffffff80019398:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff8001939c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff800193a0:	48 8d 48 01          	lea    0x1(%rax),%rcx
ffffffff800193a4:	48 89 4d f8          	mov    %rcx,-0x8(%rbp)
ffffffff800193a8:	0f b6 12             	movzbl (%rdx),%edx
ffffffff800193ab:	88 10                	mov    %dl,(%rax)
ffffffff800193ad:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff800193b1:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
ffffffff800193b5:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
ffffffff800193b9:	48 85 c0             	test   %rax,%rax
ffffffff800193bc:	75 d2                	jne    ffffffff80019390 <ZYAN_MEMCPY.lto_priv.2+0x26>
ffffffff800193be:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800193c2:	c9                   	leave  
ffffffff800193c3:	c3                   	ret    

ffffffff800193c4 <ZYAN_MEMMOVE>:
ffffffff800193c4:	55                   	push   %rbp
ffffffff800193c5:	48 89 e5             	mov    %rsp,%rbp
ffffffff800193c8:	48 83 ec 28          	sub    $0x28,%rsp
ffffffff800193cc:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff800193d0:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
ffffffff800193d4:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
ffffffff800193d8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800193dc:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff800193e0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff800193e4:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff800193e8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff800193ec:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
ffffffff800193f0:	73 59                	jae    ffffffff8001944b <ZYAN_MEMMOVE+0x87>
ffffffff800193f2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff800193f6:	48 01 45 f8          	add    %rax,-0x8(%rbp)
ffffffff800193fa:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff800193fe:	48 01 45 f0          	add    %rax,-0x10(%rbp)
ffffffff80019402:	eb 17                	jmp    ffffffff8001941b <ZYAN_MEMMOVE+0x57>
ffffffff80019404:	48 83 6d f0 01       	subq   $0x1,-0x10(%rbp)
ffffffff80019409:	48 83 6d f8 01       	subq   $0x1,-0x8(%rbp)
ffffffff8001940e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80019412:	0f b6 00             	movzbl (%rax),%eax
ffffffff80019415:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff80019419:	88 02                	mov    %al,(%rdx)
ffffffff8001941b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8001941f:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
ffffffff80019423:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
ffffffff80019427:	48 85 c0             	test   %rax,%rax
ffffffff8001942a:	75 d8                	jne    ffffffff80019404 <ZYAN_MEMMOVE+0x40>
ffffffff8001942c:	eb 2e                	jmp    ffffffff8001945c <ZYAN_MEMMOVE+0x98>
ffffffff8001942e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff80019432:	48 8d 42 01          	lea    0x1(%rdx),%rax
ffffffff80019436:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff8001943a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001943e:	48 8d 48 01          	lea    0x1(%rax),%rcx
ffffffff80019442:	48 89 4d f8          	mov    %rcx,-0x8(%rbp)
ffffffff80019446:	0f b6 12             	movzbl (%rdx),%edx
ffffffff80019449:	88 10                	mov    %dl,(%rax)
ffffffff8001944b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8001944f:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
ffffffff80019453:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
ffffffff80019457:	48 85 c0             	test   %rax,%rax
ffffffff8001945a:	75 d2                	jne    ffffffff8001942e <ZYAN_MEMMOVE+0x6a>
ffffffff8001945c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80019460:	c9                   	leave  
ffffffff80019461:	c3                   	ret    

ffffffff80019462 <ZyanVectorReallocate>:
ffffffff80019462:	f3 0f 1e fa          	endbr64 
ffffffff80019466:	55                   	push   %rbp
ffffffff80019467:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001946a:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff8001946e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff80019472:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
ffffffff80019476:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001947a:	48 8b 00             	mov    (%rax),%rax
ffffffff8001947d:	48 85 c0             	test   %rax,%rax
ffffffff80019480:	75 1c                	jne    ffffffff8001949e <ZyanVectorReallocate+0x3c>
ffffffff80019482:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80019486:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff8001948a:	48 39 45 e0          	cmp    %rax,-0x20(%rbp)
ffffffff8001948e:	76 07                	jbe    ffffffff80019497 <ZyanVectorReallocate+0x35>
ffffffff80019490:	b8 09 00 10 80       	mov    $0x80100009,%eax
ffffffff80019495:	eb 7d                	jmp    ffffffff80019514 <ZyanVectorReallocate+0xb2>
ffffffff80019497:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff8001949c:	eb 76                	jmp    ffffffff80019514 <ZyanVectorReallocate+0xb2>
ffffffff8001949e:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
ffffffff800194a3:	75 1f                	jne    ffffffff800194c4 <ZyanVectorReallocate+0x62>
ffffffff800194a5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800194a9:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff800194ad:	48 83 f8 01          	cmp    $0x1,%rax
ffffffff800194b1:	76 0a                	jbe    ffffffff800194bd <ZyanVectorReallocate+0x5b>
ffffffff800194b3:	48 c7 45 e0 01 00 00 	movq   $0x1,-0x20(%rbp)
ffffffff800194ba:	00 
ffffffff800194bb:	eb 07                	jmp    ffffffff800194c4 <ZyanVectorReallocate+0x62>
ffffffff800194bd:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff800194c2:	eb 50                	jmp    ffffffff80019514 <ZyanVectorReallocate+0xb2>
ffffffff800194c4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800194c8:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff800194cc:	48 89 50 18          	mov    %rdx,0x18(%rax)
ffffffff800194d0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800194d4:	48 8b 00             	mov    (%rax),%rax
ffffffff800194d7:	4c 8b 40 08          	mov    0x8(%rax),%r8
ffffffff800194db:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800194df:	48 8b 48 18          	mov    0x18(%rax),%rcx
ffffffff800194e3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800194e7:	48 8b 50 20          	mov    0x20(%rax),%rdx
ffffffff800194eb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800194ef:	48 8d 70 30          	lea    0x30(%rax),%rsi
ffffffff800194f3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800194f7:	48 8b 00             	mov    (%rax),%rax
ffffffff800194fa:	48 89 c7             	mov    %rax,%rdi
ffffffff800194fd:	41 ff d0             	call   *%r8
ffffffff80019500:	89 45 fc             	mov    %eax,-0x4(%rbp)
ffffffff80019503:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff80019506:	85 c0                	test   %eax,%eax
ffffffff80019508:	79 05                	jns    ffffffff8001950f <ZyanVectorReallocate+0xad>
ffffffff8001950a:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8001950d:	eb 05                	jmp    ffffffff80019514 <ZyanVectorReallocate+0xb2>
ffffffff8001950f:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff80019514:	c9                   	leave  
ffffffff80019515:	c3                   	ret    

ffffffff80019516 <ZyanVectorShiftLeft>:
ffffffff80019516:	f3 0f 1e fa          	endbr64 
ffffffff8001951a:	55                   	push   %rbp
ffffffff8001951b:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001951e:	48 83 ec 38          	sub    $0x38,%rsp
ffffffff80019522:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
ffffffff80019526:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
ffffffff8001952a:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
ffffffff8001952e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80019532:	48 8b 48 30          	mov    0x30(%rax),%rcx
ffffffff80019536:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
ffffffff8001953a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8001953e:	48 01 c2             	add    %rax,%rdx
ffffffff80019541:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80019545:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff80019549:	48 0f af c2          	imul   %rdx,%rax
ffffffff8001954d:	48 01 c8             	add    %rcx,%rax
ffffffff80019550:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff80019554:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80019558:	48 8b 50 30          	mov    0x30(%rax),%rdx
ffffffff8001955c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80019560:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff80019564:	48 0f af 45 d0       	imul   -0x30(%rbp),%rax
ffffffff80019569:	48 01 d0             	add    %rdx,%rax
ffffffff8001956c:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff80019570:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80019574:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff80019578:	48 2b 45 d0          	sub    -0x30(%rbp),%rax
ffffffff8001957c:	48 2b 45 c8          	sub    -0x38(%rbp),%rax
ffffffff80019580:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff80019584:	48 8b 52 20          	mov    0x20(%rdx),%rdx
ffffffff80019588:	48 0f af c2          	imul   %rdx,%rax
ffffffff8001958c:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff80019590:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff80019594:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
ffffffff80019598:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8001959c:	48 89 ce             	mov    %rcx,%rsi
ffffffff8001959f:	48 89 c7             	mov    %rax,%rdi
ffffffff800195a2:	e8 1d fe ff ff       	call   ffffffff800193c4 <ZYAN_MEMMOVE>
ffffffff800195a7:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff800195ac:	c9                   	leave  
ffffffff800195ad:	c3                   	ret    

ffffffff800195ae <ZyanVectorShiftRight>:
ffffffff800195ae:	f3 0f 1e fa          	endbr64 
ffffffff800195b2:	55                   	push   %rbp
ffffffff800195b3:	48 89 e5             	mov    %rsp,%rbp
ffffffff800195b6:	48 83 ec 38          	sub    $0x38,%rsp
ffffffff800195ba:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
ffffffff800195be:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
ffffffff800195c2:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
ffffffff800195c6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff800195ca:	48 8b 50 30          	mov    0x30(%rax),%rdx
ffffffff800195ce:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff800195d2:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff800195d6:	48 0f af 45 d0       	imul   -0x30(%rbp),%rax
ffffffff800195db:	48 01 d0             	add    %rdx,%rax
ffffffff800195de:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff800195e2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff800195e6:	48 8b 48 30          	mov    0x30(%rax),%rcx
ffffffff800195ea:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
ffffffff800195ee:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff800195f2:	48 01 c2             	add    %rax,%rdx
ffffffff800195f5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff800195f9:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff800195fd:	48 0f af c2          	imul   %rdx,%rax
ffffffff80019601:	48 01 c8             	add    %rcx,%rax
ffffffff80019604:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff80019608:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8001960c:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff80019610:	48 2b 45 d0          	sub    -0x30(%rbp),%rax
ffffffff80019614:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff80019618:	48 8b 52 20          	mov    0x20(%rdx),%rdx
ffffffff8001961c:	48 0f af c2          	imul   %rdx,%rax
ffffffff80019620:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff80019624:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff80019628:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
ffffffff8001962c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80019630:	48 89 ce             	mov    %rcx,%rsi
ffffffff80019633:	48 89 c7             	mov    %rax,%rdi
ffffffff80019636:	e8 89 fd ff ff       	call   ffffffff800193c4 <ZYAN_MEMMOVE>
ffffffff8001963b:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff80019640:	c9                   	leave  
ffffffff80019641:	c3                   	ret    

ffffffff80019642 <ZyanVectorInitEx>:
ffffffff80019642:	f3 0f 1e fa          	endbr64 
ffffffff80019646:	55                   	push   %rbp
ffffffff80019647:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001964a:	48 83 ec 30          	sub    $0x30,%rsp
ffffffff8001964e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff80019652:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff80019656:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
ffffffff8001965a:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
ffffffff8001965e:	4c 89 45 d8          	mov    %r8,-0x28(%rbp)
ffffffff80019662:	44 89 c8             	mov    %r9d,%eax
ffffffff80019665:	8b 55 10             	mov    0x10(%rbp),%edx
ffffffff80019668:	88 45 d4             	mov    %al,-0x2c(%rbp)
ffffffff8001966b:	89 d0                	mov    %edx,%eax
ffffffff8001966d:	88 45 d0             	mov    %al,-0x30(%rbp)
ffffffff80019670:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff80019675:	74 14                	je     ffffffff8001968b <ZyanVectorInitEx+0x49>
ffffffff80019677:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
ffffffff8001967c:	74 0d                	je     ffffffff8001968b <ZyanVectorInitEx+0x49>
ffffffff8001967e:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
ffffffff80019683:	74 06                	je     ffffffff8001968b <ZyanVectorInitEx+0x49>
ffffffff80019685:	80 7d d4 00          	cmpb   $0x0,-0x2c(%rbp)
ffffffff80019689:	75 0a                	jne    ffffffff80019695 <ZyanVectorInitEx+0x53>
ffffffff8001968b:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff80019690:	e9 97 00 00 00       	jmp    ffffffff8001972c <ZyanVectorInitEx+0xea>
ffffffff80019695:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80019699:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff8001969d:	48 89 10             	mov    %rdx,(%rax)
ffffffff800196a0:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff800196a4:	0f b6 45 d4          	movzbl -0x2c(%rbp),%eax
ffffffff800196a8:	88 42 08             	mov    %al,0x8(%rdx)
ffffffff800196ab:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff800196af:	0f b6 45 d0          	movzbl -0x30(%rbp),%eax
ffffffff800196b3:	88 42 09             	mov    %al,0x9(%rdx)
ffffffff800196b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff800196ba:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
ffffffff800196c1:	00 
ffffffff800196c2:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
ffffffff800196c7:	74 06                	je     ffffffff800196cf <ZyanVectorInitEx+0x8d>
ffffffff800196c9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800196cd:	eb 05                	jmp    ffffffff800196d4 <ZyanVectorInitEx+0x92>
ffffffff800196cf:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff800196d4:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff800196d8:	48 89 42 18          	mov    %rax,0x18(%rdx)
ffffffff800196dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff800196e0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff800196e4:	48 89 50 20          	mov    %rdx,0x20(%rax)
ffffffff800196e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff800196ec:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff800196f0:	48 89 50 28          	mov    %rdx,0x28(%rax)
ffffffff800196f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff800196f8:	48 c7 40 30 00 00 00 	movq   $0x0,0x30(%rax)
ffffffff800196ff:	00 
ffffffff80019700:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80019704:	4c 8b 00             	mov    (%rax),%r8
ffffffff80019707:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001970b:	48 8b 48 18          	mov    0x18(%rax),%rcx
ffffffff8001970f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80019713:	48 8b 50 20          	mov    0x20(%rax),%rdx
ffffffff80019717:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001971b:	48 8d 70 30          	lea    0x30(%rax),%rsi
ffffffff8001971f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80019723:	48 8b 00             	mov    (%rax),%rax
ffffffff80019726:	48 89 c7             	mov    %rax,%rdi
ffffffff80019729:	41 ff d0             	call   *%r8
ffffffff8001972c:	c9                   	leave  
ffffffff8001972d:	c3                   	ret    

ffffffff8001972e <ZyanVectorInitCustomBuffer>:
ffffffff8001972e:	f3 0f 1e fa          	endbr64 
ffffffff80019732:	55                   	push   %rbp
ffffffff80019733:	48 89 e5             	mov    %rsp,%rbp
ffffffff80019736:	48 83 ec 28          	sub    $0x28,%rsp
ffffffff8001973a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8001973e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff80019742:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
ffffffff80019746:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
ffffffff8001974a:	4c 89 45 d8          	mov    %r8,-0x28(%rbp)
ffffffff8001974e:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff80019753:	74 15                	je     ffffffff8001976a <ZyanVectorInitCustomBuffer+0x3c>
ffffffff80019755:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
ffffffff8001975a:	74 0e                	je     ffffffff8001976a <ZyanVectorInitCustomBuffer+0x3c>
ffffffff8001975c:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
ffffffff80019761:	74 07                	je     ffffffff8001976a <ZyanVectorInitCustomBuffer+0x3c>
ffffffff80019763:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
ffffffff80019768:	75 07                	jne    ffffffff80019771 <ZyanVectorInitCustomBuffer+0x43>
ffffffff8001976a:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff8001976f:	eb 5c                	jmp    ffffffff800197cd <ZyanVectorInitCustomBuffer+0x9f>
ffffffff80019771:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80019775:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
ffffffff8001977c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80019780:	c6 40 08 01          	movb   $0x1,0x8(%rax)
ffffffff80019784:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80019788:	c6 40 09 00          	movb   $0x0,0x9(%rax)
ffffffff8001978c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80019790:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
ffffffff80019797:	00 
ffffffff80019798:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001979c:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff800197a0:	48 89 50 18          	mov    %rdx,0x18(%rax)
ffffffff800197a4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff800197a8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff800197ac:	48 89 50 20          	mov    %rdx,0x20(%rax)
ffffffff800197b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff800197b4:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff800197b8:	48 89 50 28          	mov    %rdx,0x28(%rax)
ffffffff800197bc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff800197c0:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff800197c4:	48 89 50 30          	mov    %rdx,0x30(%rax)
ffffffff800197c8:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff800197cd:	c9                   	leave  
ffffffff800197ce:	c3                   	ret    

ffffffff800197cf <ZyanVectorDestroy>:
ffffffff800197cf:	f3 0f 1e fa          	endbr64 
ffffffff800197d3:	55                   	push   %rbp
ffffffff800197d4:	48 89 e5             	mov    %rsp,%rbp
ffffffff800197d7:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff800197db:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff800197df:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
ffffffff800197e4:	75 0a                	jne    ffffffff800197f0 <ZyanVectorDestroy+0x21>
ffffffff800197e6:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff800197eb:	e9 b8 00 00 00       	jmp    ffffffff800198a8 <ZyanVectorDestroy+0xd9>
ffffffff800197f0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800197f4:	48 8b 40 28          	mov    0x28(%rax),%rax
ffffffff800197f8:	48 85 c0             	test   %rax,%rax
ffffffff800197fb:	74 42                	je     ffffffff8001983f <ZyanVectorDestroy+0x70>
ffffffff800197fd:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
ffffffff80019804:	00 
ffffffff80019805:	eb 2a                	jmp    ffffffff80019831 <ZyanVectorDestroy+0x62>
ffffffff80019807:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001980b:	48 8b 50 28          	mov    0x28(%rax),%rdx
ffffffff8001980f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80019813:	48 8b 48 30          	mov    0x30(%rax),%rcx
ffffffff80019817:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001981b:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff8001981f:	48 0f af 45 f8       	imul   -0x8(%rbp),%rax
ffffffff80019824:	48 01 c8             	add    %rcx,%rax
ffffffff80019827:	48 89 c7             	mov    %rax,%rdi
ffffffff8001982a:	ff d2                	call   *%rdx
ffffffff8001982c:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
ffffffff80019831:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80019835:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff80019839:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
ffffffff8001983d:	72 c8                	jb     ffffffff80019807 <ZyanVectorDestroy+0x38>
ffffffff8001983f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80019843:	48 8b 00             	mov    (%rax),%rax
ffffffff80019846:	48 85 c0             	test   %rax,%rax
ffffffff80019849:	74 4c                	je     ffffffff80019897 <ZyanVectorDestroy+0xc8>
ffffffff8001984b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001984f:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff80019853:	48 85 c0             	test   %rax,%rax
ffffffff80019856:	74 3f                	je     ffffffff80019897 <ZyanVectorDestroy+0xc8>
ffffffff80019858:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001985c:	48 8b 00             	mov    (%rax),%rax
ffffffff8001985f:	4c 8b 40 10          	mov    0x10(%rax),%r8
ffffffff80019863:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80019867:	48 8b 48 18          	mov    0x18(%rax),%rcx
ffffffff8001986b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001986f:	48 8b 50 20          	mov    0x20(%rax),%rdx
ffffffff80019873:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80019877:	48 8b 70 30          	mov    0x30(%rax),%rsi
ffffffff8001987b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001987f:	48 8b 00             	mov    (%rax),%rax
ffffffff80019882:	48 89 c7             	mov    %rax,%rdi
ffffffff80019885:	41 ff d0             	call   *%r8
ffffffff80019888:	89 45 f4             	mov    %eax,-0xc(%rbp)
ffffffff8001988b:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff8001988e:	85 c0                	test   %eax,%eax
ffffffff80019890:	79 05                	jns    ffffffff80019897 <ZyanVectorDestroy+0xc8>
ffffffff80019892:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff80019895:	eb 11                	jmp    ffffffff800198a8 <ZyanVectorDestroy+0xd9>
ffffffff80019897:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001989b:	48 c7 40 30 00 00 00 	movq   $0x0,0x30(%rax)
ffffffff800198a2:	00 
ffffffff800198a3:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff800198a8:	c9                   	leave  
ffffffff800198a9:	c3                   	ret    

ffffffff800198aa <ZyanVectorDuplicateEx>:
ffffffff800198aa:	f3 0f 1e fa          	endbr64 
ffffffff800198ae:	55                   	push   %rbp
ffffffff800198af:	48 89 e5             	mov    %rsp,%rbp
ffffffff800198b2:	48 83 ec 40          	sub    $0x40,%rsp
ffffffff800198b6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff800198ba:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
ffffffff800198be:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
ffffffff800198c2:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
ffffffff800198c6:	44 89 c0             	mov    %r8d,%eax
ffffffff800198c9:	44 89 ca             	mov    %r9d,%edx
ffffffff800198cc:	88 45 cc             	mov    %al,-0x34(%rbp)
ffffffff800198cf:	89 d0                	mov    %edx,%eax
ffffffff800198d1:	88 45 c8             	mov    %al,-0x38(%rbp)
ffffffff800198d4:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
ffffffff800198d9:	75 0a                	jne    ffffffff800198e5 <ZyanVectorDuplicateEx+0x3b>
ffffffff800198db:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff800198e0:	e9 a3 00 00 00       	jmp    ffffffff80019988 <ZyanVectorDuplicateEx+0xde>
ffffffff800198e5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff800198e9:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff800198ed:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff800198f1:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff800198f5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff800198f9:	48 39 c2             	cmp    %rax,%rdx
ffffffff800198fc:	48 0f 43 c2          	cmovae %rdx,%rax
ffffffff80019900:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
ffffffff80019904:	0f b6 7d c8          	movzbl -0x38(%rbp),%edi
ffffffff80019908:	44 0f b6 45 cc       	movzbl -0x34(%rbp),%r8d
ffffffff8001990d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80019911:	48 8b 48 28          	mov    0x28(%rax),%rcx
ffffffff80019915:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80019919:	48 8b 70 20          	mov    0x20(%rax),%rsi
ffffffff8001991d:	4c 8b 55 d0          	mov    -0x30(%rbp),%r10
ffffffff80019921:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff80019925:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80019929:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff8001992d:	57                   	push   %rdi
ffffffff8001992e:	45 89 c1             	mov    %r8d,%r9d
ffffffff80019931:	4d 89 d0             	mov    %r10,%r8
ffffffff80019934:	48 89 c7             	mov    %rax,%rdi
ffffffff80019937:	e8 06 fd ff ff       	call   ffffffff80019642 <ZyanVectorInitEx>
ffffffff8001993c:	48 83 c4 10          	add    $0x10,%rsp
ffffffff80019940:	89 45 f4             	mov    %eax,-0xc(%rbp)
ffffffff80019943:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff80019946:	85 c0                	test   %eax,%eax
ffffffff80019948:	79 05                	jns    ffffffff8001994f <ZyanVectorDuplicateEx+0xa5>
ffffffff8001994a:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff8001994d:	eb 39                	jmp    ffffffff80019988 <ZyanVectorDuplicateEx+0xde>
ffffffff8001994f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80019953:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff80019957:	48 0f af 45 f8       	imul   -0x8(%rbp),%rax
ffffffff8001995c:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff80019960:	48 8b 72 30          	mov    0x30(%rdx),%rsi
ffffffff80019964:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff80019968:	48 8b 4a 30          	mov    0x30(%rdx),%rcx
ffffffff8001996c:	48 89 c2             	mov    %rax,%rdx
ffffffff8001996f:	48 89 cf             	mov    %rcx,%rdi
ffffffff80019972:	e8 f3 f9 ff ff       	call   ffffffff8001936a <ZYAN_MEMCPY.lto_priv.2>
ffffffff80019977:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001997b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff8001997f:	48 89 50 10          	mov    %rdx,0x10(%rax)
ffffffff80019983:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff80019988:	c9                   	leave  
ffffffff80019989:	c3                   	ret    

ffffffff8001998a <ZyanVectorDuplicateCustomBuffer>:
ffffffff8001998a:	f3 0f 1e fa          	endbr64 
ffffffff8001998e:	55                   	push   %rbp
ffffffff8001998f:	48 89 e5             	mov    %rsp,%rbp
ffffffff80019992:	48 83 ec 30          	sub    $0x30,%rsp
ffffffff80019996:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff8001999a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
ffffffff8001999e:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
ffffffff800199a2:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
ffffffff800199a6:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
ffffffff800199ab:	75 0a                	jne    ffffffff800199b7 <ZyanVectorDuplicateCustomBuffer+0x2d>
ffffffff800199ad:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff800199b2:	e9 8c 00 00 00       	jmp    ffffffff80019a43 <ZyanVectorDuplicateCustomBuffer+0xb9>
ffffffff800199b7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff800199bb:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff800199bf:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff800199c3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff800199c7:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
ffffffff800199cb:	73 07                	jae    ffffffff800199d4 <ZyanVectorDuplicateCustomBuffer+0x4a>
ffffffff800199cd:	b8 09 00 10 80       	mov    $0x80100009,%eax
ffffffff800199d2:	eb 6f                	jmp    ffffffff80019a43 <ZyanVectorDuplicateCustomBuffer+0xb9>
ffffffff800199d4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff800199d8:	48 8b 78 28          	mov    0x28(%rax),%rdi
ffffffff800199dc:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff800199e0:	48 8b 70 20          	mov    0x20(%rax),%rsi
ffffffff800199e4:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
ffffffff800199e8:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff800199ec:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800199f0:	49 89 f8             	mov    %rdi,%r8
ffffffff800199f3:	48 89 c7             	mov    %rax,%rdi
ffffffff800199f6:	e8 33 fd ff ff       	call   ffffffff8001972e <ZyanVectorInitCustomBuffer>
ffffffff800199fb:	89 45 f4             	mov    %eax,-0xc(%rbp)
ffffffff800199fe:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff80019a01:	85 c0                	test   %eax,%eax
ffffffff80019a03:	79 05                	jns    ffffffff80019a0a <ZyanVectorDuplicateCustomBuffer+0x80>
ffffffff80019a05:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff80019a08:	eb 39                	jmp    ffffffff80019a43 <ZyanVectorDuplicateCustomBuffer+0xb9>
ffffffff80019a0a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80019a0e:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff80019a12:	48 0f af 45 f8       	imul   -0x8(%rbp),%rax
ffffffff80019a17:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff80019a1b:	48 8b 72 30          	mov    0x30(%rdx),%rsi
ffffffff80019a1f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff80019a23:	48 8b 4a 30          	mov    0x30(%rdx),%rcx
ffffffff80019a27:	48 89 c2             	mov    %rax,%rdx
ffffffff80019a2a:	48 89 cf             	mov    %rcx,%rdi
ffffffff80019a2d:	e8 38 f9 ff ff       	call   ffffffff8001936a <ZYAN_MEMCPY.lto_priv.2>
ffffffff80019a32:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80019a36:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff80019a3a:	48 89 50 10          	mov    %rdx,0x10(%rax)
ffffffff80019a3e:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff80019a43:	c9                   	leave  
ffffffff80019a44:	c3                   	ret    

ffffffff80019a45 <ZyanVectorGet>:
ffffffff80019a45:	f3 0f 1e fa          	endbr64 
ffffffff80019a49:	55                   	push   %rbp
ffffffff80019a4a:	48 89 e5             	mov    %rsp,%rbp
ffffffff80019a4d:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff80019a51:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff80019a55:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff80019a59:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff80019a5e:	74 0e                	je     ffffffff80019a6e <ZyanVectorGet+0x29>
ffffffff80019a60:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80019a64:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff80019a68:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
ffffffff80019a6c:	72 07                	jb     ffffffff80019a75 <ZyanVectorGet+0x30>
ffffffff80019a6e:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80019a73:	eb 18                	jmp    ffffffff80019a8d <ZyanVectorGet+0x48>
ffffffff80019a75:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80019a79:	48 8b 50 30          	mov    0x30(%rax),%rdx
ffffffff80019a7d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80019a81:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff80019a85:	48 0f af 45 f0       	imul   -0x10(%rbp),%rax
ffffffff80019a8a:	48 01 d0             	add    %rdx,%rax
ffffffff80019a8d:	c9                   	leave  
ffffffff80019a8e:	c3                   	ret    

ffffffff80019a8f <ZyanVectorGetMutable>:
ffffffff80019a8f:	f3 0f 1e fa          	endbr64 
ffffffff80019a93:	55                   	push   %rbp
ffffffff80019a94:	48 89 e5             	mov    %rsp,%rbp
ffffffff80019a97:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff80019a9b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff80019a9f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff80019aa3:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff80019aa8:	74 0e                	je     ffffffff80019ab8 <ZyanVectorGetMutable+0x29>
ffffffff80019aaa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80019aae:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff80019ab2:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
ffffffff80019ab6:	72 07                	jb     ffffffff80019abf <ZyanVectorGetMutable+0x30>
ffffffff80019ab8:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80019abd:	eb 18                	jmp    ffffffff80019ad7 <ZyanVectorGetMutable+0x48>
ffffffff80019abf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80019ac3:	48 8b 50 30          	mov    0x30(%rax),%rdx
ffffffff80019ac7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80019acb:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff80019acf:	48 0f af 45 f0       	imul   -0x10(%rbp),%rax
ffffffff80019ad4:	48 01 d0             	add    %rdx,%rax
ffffffff80019ad7:	c9                   	leave  
ffffffff80019ad8:	c3                   	ret    

ffffffff80019ad9 <ZyanVectorGetPointer>:
ffffffff80019ad9:	f3 0f 1e fa          	endbr64 
ffffffff80019add:	55                   	push   %rbp
ffffffff80019ade:	48 89 e5             	mov    %rsp,%rbp
ffffffff80019ae1:	48 83 ec 18          	sub    $0x18,%rsp
ffffffff80019ae5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff80019ae9:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff80019aed:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
ffffffff80019af1:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff80019af6:	74 07                	je     ffffffff80019aff <ZyanVectorGetPointer+0x26>
ffffffff80019af8:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
ffffffff80019afd:	75 07                	jne    ffffffff80019b06 <ZyanVectorGetPointer+0x2d>
ffffffff80019aff:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff80019b04:	eb 39                	jmp    ffffffff80019b3f <ZyanVectorGetPointer+0x66>
ffffffff80019b06:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80019b0a:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff80019b0e:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
ffffffff80019b12:	72 07                	jb     ffffffff80019b1b <ZyanVectorGetPointer+0x42>
ffffffff80019b14:	b8 08 00 10 80       	mov    $0x80100008,%eax
ffffffff80019b19:	eb 24                	jmp    ffffffff80019b3f <ZyanVectorGetPointer+0x66>
ffffffff80019b1b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80019b1f:	48 8b 50 30          	mov    0x30(%rax),%rdx
ffffffff80019b23:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80019b27:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff80019b2b:	48 0f af 45 f0       	imul   -0x10(%rbp),%rax
ffffffff80019b30:	48 01 c2             	add    %rax,%rdx
ffffffff80019b33:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80019b37:	48 89 10             	mov    %rdx,(%rax)
ffffffff80019b3a:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff80019b3f:	c9                   	leave  
ffffffff80019b40:	c3                   	ret    

ffffffff80019b41 <ZyanVectorGetPointerMutable>:
ffffffff80019b41:	f3 0f 1e fa          	endbr64 
ffffffff80019b45:	55                   	push   %rbp
ffffffff80019b46:	48 89 e5             	mov    %rsp,%rbp
ffffffff80019b49:	48 83 ec 18          	sub    $0x18,%rsp
ffffffff80019b4d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff80019b51:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff80019b55:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
ffffffff80019b59:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff80019b5e:	74 07                	je     ffffffff80019b67 <ZyanVectorGetPointerMutable+0x26>
ffffffff80019b60:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
ffffffff80019b65:	75 07                	jne    ffffffff80019b6e <ZyanVectorGetPointerMutable+0x2d>
ffffffff80019b67:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff80019b6c:	eb 39                	jmp    ffffffff80019ba7 <ZyanVectorGetPointerMutable+0x66>
ffffffff80019b6e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80019b72:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff80019b76:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
ffffffff80019b7a:	72 07                	jb     ffffffff80019b83 <ZyanVectorGetPointerMutable+0x42>
ffffffff80019b7c:	b8 08 00 10 80       	mov    $0x80100008,%eax
ffffffff80019b81:	eb 24                	jmp    ffffffff80019ba7 <ZyanVectorGetPointerMutable+0x66>
ffffffff80019b83:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80019b87:	48 8b 50 30          	mov    0x30(%rax),%rdx
ffffffff80019b8b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80019b8f:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff80019b93:	48 0f af 45 f0       	imul   -0x10(%rbp),%rax
ffffffff80019b98:	48 01 c2             	add    %rax,%rdx
ffffffff80019b9b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80019b9f:	48 89 10             	mov    %rdx,(%rax)
ffffffff80019ba2:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff80019ba7:	c9                   	leave  
ffffffff80019ba8:	c3                   	ret    

ffffffff80019ba9 <ZyanVectorSet>:
ffffffff80019ba9:	f3 0f 1e fa          	endbr64 
ffffffff80019bad:	55                   	push   %rbp
ffffffff80019bae:	48 89 e5             	mov    %rsp,%rbp
ffffffff80019bb1:	48 83 ec 30          	sub    $0x30,%rsp
ffffffff80019bb5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff80019bb9:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
ffffffff80019bbd:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
ffffffff80019bc1:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
ffffffff80019bc6:	74 07                	je     ffffffff80019bcf <ZyanVectorSet+0x26>
ffffffff80019bc8:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
ffffffff80019bcd:	75 07                	jne    ffffffff80019bd6 <ZyanVectorSet+0x2d>
ffffffff80019bcf:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff80019bd4:	eb 6f                	jmp    ffffffff80019c45 <ZyanVectorSet+0x9c>
ffffffff80019bd6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80019bda:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff80019bde:	48 39 45 e0          	cmp    %rax,-0x20(%rbp)
ffffffff80019be2:	72 07                	jb     ffffffff80019beb <ZyanVectorSet+0x42>
ffffffff80019be4:	b8 08 00 10 80       	mov    $0x80100008,%eax
ffffffff80019be9:	eb 5a                	jmp    ffffffff80019c45 <ZyanVectorSet+0x9c>
ffffffff80019beb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80019bef:	48 8b 50 30          	mov    0x30(%rax),%rdx
ffffffff80019bf3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80019bf7:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff80019bfb:	48 0f af 45 e0       	imul   -0x20(%rbp),%rax
ffffffff80019c00:	48 01 d0             	add    %rdx,%rax
ffffffff80019c03:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff80019c07:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80019c0b:	48 8b 40 28          	mov    0x28(%rax),%rax
ffffffff80019c0f:	48 85 c0             	test   %rax,%rax
ffffffff80019c12:	74 11                	je     ffffffff80019c25 <ZyanVectorSet+0x7c>
ffffffff80019c14:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80019c18:	48 8b 50 28          	mov    0x28(%rax),%rdx
ffffffff80019c1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80019c20:	48 89 c7             	mov    %rax,%rdi
ffffffff80019c23:	ff d2                	call   *%rdx
ffffffff80019c25:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80019c29:	48 8b 50 20          	mov    0x20(%rax),%rdx
ffffffff80019c2d:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
ffffffff80019c31:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80019c35:	48 89 ce             	mov    %rcx,%rsi
ffffffff80019c38:	48 89 c7             	mov    %rax,%rdi
ffffffff80019c3b:	e8 2a f7 ff ff       	call   ffffffff8001936a <ZYAN_MEMCPY.lto_priv.2>
ffffffff80019c40:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff80019c45:	c9                   	leave  
ffffffff80019c46:	c3                   	ret    

ffffffff80019c47 <ZyanVectorPushBack>:
ffffffff80019c47:	f3 0f 1e fa          	endbr64 
ffffffff80019c4b:	55                   	push   %rbp
ffffffff80019c4c:	48 89 e5             	mov    %rsp,%rbp
ffffffff80019c4f:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff80019c53:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff80019c57:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
ffffffff80019c5b:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
ffffffff80019c60:	74 07                	je     ffffffff80019c69 <ZyanVectorPushBack+0x22>
ffffffff80019c62:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
ffffffff80019c67:	75 0a                	jne    ffffffff80019c73 <ZyanVectorPushBack+0x2c>
ffffffff80019c69:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff80019c6e:	e9 d0 00 00 00       	jmp    ffffffff80019d43 <ZyanVectorPushBack+0xfc>
ffffffff80019c73:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80019c77:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff80019c7b:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffff80019c7f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80019c83:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff80019c87:	48 39 c2             	cmp    %rax,%rdx
ffffffff80019c8a:	76 60                	jbe    ffffffff80019cec <ZyanVectorPushBack+0xa5>
ffffffff80019c8c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80019c90:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff80019c94:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffff80019c98:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80019c9c:	0f b6 40 08          	movzbl 0x8(%rax),%eax
ffffffff80019ca0:	0f b6 c0             	movzbl %al,%eax
ffffffff80019ca3:	48 0f af c2          	imul   %rdx,%rax
ffffffff80019ca7:	48 85 c0             	test   %rax,%rax
ffffffff80019caa:	74 1d                	je     ffffffff80019cc9 <ZyanVectorPushBack+0x82>
ffffffff80019cac:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80019cb0:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff80019cb4:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffff80019cb8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80019cbc:	0f b6 40 08          	movzbl 0x8(%rax),%eax
ffffffff80019cc0:	0f b6 c0             	movzbl %al,%eax
ffffffff80019cc3:	48 0f af c2          	imul   %rdx,%rax
ffffffff80019cc7:	eb 05                	jmp    ffffffff80019cce <ZyanVectorPushBack+0x87>
ffffffff80019cc9:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff80019cce:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff80019cd2:	48 89 c6             	mov    %rax,%rsi
ffffffff80019cd5:	48 89 d7             	mov    %rdx,%rdi
ffffffff80019cd8:	e8 85 f7 ff ff       	call   ffffffff80019462 <ZyanVectorReallocate>
ffffffff80019cdd:	89 45 fc             	mov    %eax,-0x4(%rbp)
ffffffff80019ce0:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff80019ce3:	85 c0                	test   %eax,%eax
ffffffff80019ce5:	79 05                	jns    ffffffff80019cec <ZyanVectorPushBack+0xa5>
ffffffff80019ce7:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff80019cea:	eb 57                	jmp    ffffffff80019d43 <ZyanVectorPushBack+0xfc>
ffffffff80019cec:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80019cf0:	48 8b 48 30          	mov    0x30(%rax),%rcx
ffffffff80019cf4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80019cf8:	48 8b 50 10          	mov    0x10(%rax),%rdx
ffffffff80019cfc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80019d00:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff80019d04:	48 0f af c2          	imul   %rdx,%rax
ffffffff80019d08:	48 01 c8             	add    %rcx,%rax
ffffffff80019d0b:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff80019d0f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80019d13:	48 8b 50 20          	mov    0x20(%rax),%rdx
ffffffff80019d17:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
ffffffff80019d1b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80019d1f:	48 89 ce             	mov    %rcx,%rsi
ffffffff80019d22:	48 89 c7             	mov    %rax,%rdi
ffffffff80019d25:	e8 40 f6 ff ff       	call   ffffffff8001936a <ZYAN_MEMCPY.lto_priv.2>
ffffffff80019d2a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80019d2e:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff80019d32:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffff80019d36:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80019d3a:	48 89 50 10          	mov    %rdx,0x10(%rax)
ffffffff80019d3e:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff80019d43:	c9                   	leave  
ffffffff80019d44:	c3                   	ret    

ffffffff80019d45 <ZyanVectorInsert>:
ffffffff80019d45:	f3 0f 1e fa          	endbr64 
ffffffff80019d49:	55                   	push   %rbp
ffffffff80019d4a:	48 89 e5             	mov    %rsp,%rbp
ffffffff80019d4d:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff80019d51:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff80019d55:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff80019d59:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
ffffffff80019d5d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff80019d61:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
ffffffff80019d65:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80019d69:	b9 01 00 00 00       	mov    $0x1,%ecx
ffffffff80019d6e:	48 89 c7             	mov    %rax,%rdi
ffffffff80019d71:	e8 02 00 00 00       	call   ffffffff80019d78 <ZyanVectorInsertRange>
ffffffff80019d76:	c9                   	leave  
ffffffff80019d77:	c3                   	ret    

ffffffff80019d78 <ZyanVectorInsertRange>:
ffffffff80019d78:	f3 0f 1e fa          	endbr64 
ffffffff80019d7c:	55                   	push   %rbp
ffffffff80019d7d:	48 89 e5             	mov    %rsp,%rbp
ffffffff80019d80:	48 83 ec 30          	sub    $0x30,%rsp
ffffffff80019d84:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff80019d88:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
ffffffff80019d8c:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
ffffffff80019d90:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
ffffffff80019d94:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
ffffffff80019d99:	74 0e                	je     ffffffff80019da9 <ZyanVectorInsertRange+0x31>
ffffffff80019d9b:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
ffffffff80019da0:	74 07                	je     ffffffff80019da9 <ZyanVectorInsertRange+0x31>
ffffffff80019da2:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
ffffffff80019da7:	75 0a                	jne    ffffffff80019db3 <ZyanVectorInsertRange+0x3b>
ffffffff80019da9:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff80019dae:	e9 29 01 00 00       	jmp    ffffffff80019edc <ZyanVectorInsertRange+0x164>
ffffffff80019db3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80019db7:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff80019dbb:	48 39 45 e0          	cmp    %rax,-0x20(%rbp)
ffffffff80019dbf:	76 0a                	jbe    ffffffff80019dcb <ZyanVectorInsertRange+0x53>
ffffffff80019dc1:	b8 08 00 10 80       	mov    $0x80100008,%eax
ffffffff80019dc6:	e9 11 01 00 00       	jmp    ffffffff80019edc <ZyanVectorInsertRange+0x164>
ffffffff80019dcb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80019dcf:	48 8b 50 10          	mov    0x10(%rax),%rdx
ffffffff80019dd3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff80019dd7:	48 01 c2             	add    %rax,%rdx
ffffffff80019dda:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80019dde:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff80019de2:	48 39 c2             	cmp    %rax,%rdx
ffffffff80019de5:	76 69                	jbe    ffffffff80019e50 <ZyanVectorInsertRange+0xd8>
ffffffff80019de7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80019deb:	48 8b 50 10          	mov    0x10(%rax),%rdx
ffffffff80019def:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff80019df3:	48 01 c2             	add    %rax,%rdx
ffffffff80019df6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80019dfa:	0f b6 40 08          	movzbl 0x8(%rax),%eax
ffffffff80019dfe:	0f b6 c0             	movzbl %al,%eax
ffffffff80019e01:	48 0f af c2          	imul   %rdx,%rax
ffffffff80019e05:	48 85 c0             	test   %rax,%rax
ffffffff80019e08:	74 20                	je     ffffffff80019e2a <ZyanVectorInsertRange+0xb2>
ffffffff80019e0a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80019e0e:	48 8b 50 10          	mov    0x10(%rax),%rdx
ffffffff80019e12:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff80019e16:	48 01 c2             	add    %rax,%rdx
ffffffff80019e19:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80019e1d:	0f b6 40 08          	movzbl 0x8(%rax),%eax
ffffffff80019e21:	0f b6 c0             	movzbl %al,%eax
ffffffff80019e24:	48 0f af c2          	imul   %rdx,%rax
ffffffff80019e28:	eb 05                	jmp    ffffffff80019e2f <ZyanVectorInsertRange+0xb7>
ffffffff80019e2a:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff80019e2f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff80019e33:	48 89 c6             	mov    %rax,%rsi
ffffffff80019e36:	48 89 d7             	mov    %rdx,%rdi
ffffffff80019e39:	e8 24 f6 ff ff       	call   ffffffff80019462 <ZyanVectorReallocate>
ffffffff80019e3e:	89 45 fc             	mov    %eax,-0x4(%rbp)
ffffffff80019e41:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff80019e44:	85 c0                	test   %eax,%eax
ffffffff80019e46:	79 08                	jns    ffffffff80019e50 <ZyanVectorInsertRange+0xd8>
ffffffff80019e48:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff80019e4b:	e9 8c 00 00 00       	jmp    ffffffff80019edc <ZyanVectorInsertRange+0x164>
ffffffff80019e50:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80019e54:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff80019e58:	48 39 45 e0          	cmp    %rax,-0x20(%rbp)
ffffffff80019e5c:	73 26                	jae    ffffffff80019e84 <ZyanVectorInsertRange+0x10c>
ffffffff80019e5e:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
ffffffff80019e62:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
ffffffff80019e66:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80019e6a:	48 89 ce             	mov    %rcx,%rsi
ffffffff80019e6d:	48 89 c7             	mov    %rax,%rdi
ffffffff80019e70:	e8 39 f7 ff ff       	call   ffffffff800195ae <ZyanVectorShiftRight>
ffffffff80019e75:	89 45 f8             	mov    %eax,-0x8(%rbp)
ffffffff80019e78:	8b 45 f8             	mov    -0x8(%rbp),%eax
ffffffff80019e7b:	85 c0                	test   %eax,%eax
ffffffff80019e7d:	79 05                	jns    ffffffff80019e84 <ZyanVectorInsertRange+0x10c>
ffffffff80019e7f:	8b 45 f8             	mov    -0x8(%rbp),%eax
ffffffff80019e82:	eb 58                	jmp    ffffffff80019edc <ZyanVectorInsertRange+0x164>
ffffffff80019e84:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80019e88:	48 8b 50 30          	mov    0x30(%rax),%rdx
ffffffff80019e8c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80019e90:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff80019e94:	48 0f af 45 e0       	imul   -0x20(%rbp),%rax
ffffffff80019e99:	48 01 d0             	add    %rdx,%rax
ffffffff80019e9c:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff80019ea0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80019ea4:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff80019ea8:	48 0f af 45 d0       	imul   -0x30(%rbp),%rax
ffffffff80019ead:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
ffffffff80019eb1:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
ffffffff80019eb5:	48 89 c2             	mov    %rax,%rdx
ffffffff80019eb8:	48 89 cf             	mov    %rcx,%rdi
ffffffff80019ebb:	e8 aa f4 ff ff       	call   ffffffff8001936a <ZYAN_MEMCPY.lto_priv.2>
ffffffff80019ec0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80019ec4:	48 8b 50 10          	mov    0x10(%rax),%rdx
ffffffff80019ec8:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff80019ecc:	48 01 c2             	add    %rax,%rdx
ffffffff80019ecf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80019ed3:	48 89 50 10          	mov    %rdx,0x10(%rax)
ffffffff80019ed7:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff80019edc:	c9                   	leave  
ffffffff80019edd:	c3                   	ret    

ffffffff80019ede <ZyanVectorEmplace>:
ffffffff80019ede:	f3 0f 1e fa          	endbr64 
ffffffff80019ee2:	55                   	push   %rbp
ffffffff80019ee3:	48 89 e5             	mov    %rsp,%rbp
ffffffff80019ee6:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff80019eea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff80019eee:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff80019ef2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
ffffffff80019ef6:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff80019efb:	75 07                	jne    ffffffff80019f04 <ZyanVectorEmplace+0x26>
ffffffff80019efd:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff80019f02:	eb 1c                	jmp    ffffffff80019f20 <ZyanVectorEmplace+0x42>
ffffffff80019f04:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80019f08:	48 8b 70 10          	mov    0x10(%rax),%rsi
ffffffff80019f0c:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
ffffffff80019f10:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff80019f14:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80019f18:	48 89 c7             	mov    %rax,%rdi
ffffffff80019f1b:	e8 02 00 00 00       	call   ffffffff80019f22 <ZyanVectorEmplaceEx>
ffffffff80019f20:	c9                   	leave  
ffffffff80019f21:	c3                   	ret    

ffffffff80019f22 <ZyanVectorEmplaceEx>:
ffffffff80019f22:	f3 0f 1e fa          	endbr64 
ffffffff80019f26:	55                   	push   %rbp
ffffffff80019f27:	48 89 e5             	mov    %rsp,%rbp
ffffffff80019f2a:	48 83 ec 30          	sub    $0x30,%rsp
ffffffff80019f2e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff80019f32:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
ffffffff80019f36:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
ffffffff80019f3a:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
ffffffff80019f3e:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
ffffffff80019f43:	75 0a                	jne    ffffffff80019f4f <ZyanVectorEmplaceEx+0x2d>
ffffffff80019f45:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff80019f4a:	e9 27 01 00 00       	jmp    ffffffff8001a076 <ZyanVectorEmplaceEx+0x154>
ffffffff80019f4f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80019f53:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff80019f57:	48 39 45 e0          	cmp    %rax,-0x20(%rbp)
ffffffff80019f5b:	76 0a                	jbe    ffffffff80019f67 <ZyanVectorEmplaceEx+0x45>
ffffffff80019f5d:	b8 08 00 10 80       	mov    $0x80100008,%eax
ffffffff80019f62:	e9 0f 01 00 00       	jmp    ffffffff8001a076 <ZyanVectorEmplaceEx+0x154>
ffffffff80019f67:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80019f6b:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff80019f6f:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffff80019f73:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80019f77:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff80019f7b:	48 39 c2             	cmp    %rax,%rdx
ffffffff80019f7e:	76 63                	jbe    ffffffff80019fe3 <ZyanVectorEmplaceEx+0xc1>
ffffffff80019f80:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80019f84:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff80019f88:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffff80019f8c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80019f90:	0f b6 40 08          	movzbl 0x8(%rax),%eax
ffffffff80019f94:	0f b6 c0             	movzbl %al,%eax
ffffffff80019f97:	48 0f af c2          	imul   %rdx,%rax
ffffffff80019f9b:	48 85 c0             	test   %rax,%rax
ffffffff80019f9e:	74 1d                	je     ffffffff80019fbd <ZyanVectorEmplaceEx+0x9b>
ffffffff80019fa0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80019fa4:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff80019fa8:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffff80019fac:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80019fb0:	0f b6 40 08          	movzbl 0x8(%rax),%eax
ffffffff80019fb4:	0f b6 c0             	movzbl %al,%eax
ffffffff80019fb7:	48 0f af c2          	imul   %rdx,%rax
ffffffff80019fbb:	eb 05                	jmp    ffffffff80019fc2 <ZyanVectorEmplaceEx+0xa0>
ffffffff80019fbd:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff80019fc2:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff80019fc6:	48 89 c6             	mov    %rax,%rsi
ffffffff80019fc9:	48 89 d7             	mov    %rdx,%rdi
ffffffff80019fcc:	e8 91 f4 ff ff       	call   ffffffff80019462 <ZyanVectorReallocate>
ffffffff80019fd1:	89 45 fc             	mov    %eax,-0x4(%rbp)
ffffffff80019fd4:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff80019fd7:	85 c0                	test   %eax,%eax
ffffffff80019fd9:	79 08                	jns    ffffffff80019fe3 <ZyanVectorEmplaceEx+0xc1>
ffffffff80019fdb:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff80019fde:	e9 93 00 00 00       	jmp    ffffffff8001a076 <ZyanVectorEmplaceEx+0x154>
ffffffff80019fe3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80019fe7:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff80019feb:	48 39 45 e0          	cmp    %rax,-0x20(%rbp)
ffffffff80019fef:	73 27                	jae    ffffffff8001a018 <ZyanVectorEmplaceEx+0xf6>
ffffffff80019ff1:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
ffffffff80019ff5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80019ff9:	ba 01 00 00 00       	mov    $0x1,%edx
ffffffff80019ffe:	48 89 ce             	mov    %rcx,%rsi
ffffffff8001a001:	48 89 c7             	mov    %rax,%rdi
ffffffff8001a004:	e8 a5 f5 ff ff       	call   ffffffff800195ae <ZyanVectorShiftRight>
ffffffff8001a009:	89 45 f8             	mov    %eax,-0x8(%rbp)
ffffffff8001a00c:	8b 45 f8             	mov    -0x8(%rbp),%eax
ffffffff8001a00f:	85 c0                	test   %eax,%eax
ffffffff8001a011:	79 05                	jns    ffffffff8001a018 <ZyanVectorEmplaceEx+0xf6>
ffffffff8001a013:	8b 45 f8             	mov    -0x8(%rbp),%eax
ffffffff8001a016:	eb 5e                	jmp    ffffffff8001a076 <ZyanVectorEmplaceEx+0x154>
ffffffff8001a018:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001a01c:	48 8b 50 30          	mov    0x30(%rax),%rdx
ffffffff8001a020:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001a024:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff8001a028:	48 0f af 45 e0       	imul   -0x20(%rbp),%rax
ffffffff8001a02d:	48 01 c2             	add    %rax,%rdx
ffffffff8001a030:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8001a034:	48 89 10             	mov    %rdx,(%rax)
ffffffff8001a037:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
ffffffff8001a03c:	74 1f                	je     ffffffff8001a05d <ZyanVectorEmplaceEx+0x13b>
ffffffff8001a03e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8001a042:	48 8b 00             	mov    (%rax),%rax
ffffffff8001a045:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
ffffffff8001a049:	48 89 c7             	mov    %rax,%rdi
ffffffff8001a04c:	ff d2                	call   *%rdx
ffffffff8001a04e:	89 45 f4             	mov    %eax,-0xc(%rbp)
ffffffff8001a051:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff8001a054:	85 c0                	test   %eax,%eax
ffffffff8001a056:	79 05                	jns    ffffffff8001a05d <ZyanVectorEmplaceEx+0x13b>
ffffffff8001a058:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff8001a05b:	eb 19                	jmp    ffffffff8001a076 <ZyanVectorEmplaceEx+0x154>
ffffffff8001a05d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001a061:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff8001a065:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffff8001a069:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001a06d:	48 89 50 10          	mov    %rdx,0x10(%rax)
ffffffff8001a071:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff8001a076:	c9                   	leave  
ffffffff8001a077:	c3                   	ret    

ffffffff8001a078 <ZyanVectorSwapElements>:
ffffffff8001a078:	f3 0f 1e fa          	endbr64 
ffffffff8001a07c:	55                   	push   %rbp
ffffffff8001a07d:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001a080:	48 83 ec 38          	sub    $0x38,%rsp
ffffffff8001a084:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
ffffffff8001a088:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
ffffffff8001a08c:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
ffffffff8001a090:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
ffffffff8001a095:	75 0a                	jne    ffffffff8001a0a1 <ZyanVectorSwapElements+0x29>
ffffffff8001a097:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff8001a09c:	e9 f6 00 00 00       	jmp    ffffffff8001a197 <ZyanVectorSwapElements+0x11f>
ffffffff8001a0a1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8001a0a5:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff8001a0a9:	48 39 45 d0          	cmp    %rax,-0x30(%rbp)
ffffffff8001a0ad:	73 0e                	jae    ffffffff8001a0bd <ZyanVectorSwapElements+0x45>
ffffffff8001a0af:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8001a0b3:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff8001a0b7:	48 39 45 c8          	cmp    %rax,-0x38(%rbp)
ffffffff8001a0bb:	72 0a                	jb     ffffffff8001a0c7 <ZyanVectorSwapElements+0x4f>
ffffffff8001a0bd:	b8 08 00 10 80       	mov    $0x80100008,%eax
ffffffff8001a0c2:	e9 d0 00 00 00       	jmp    ffffffff8001a197 <ZyanVectorSwapElements+0x11f>
ffffffff8001a0c7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8001a0cb:	48 8b 50 10          	mov    0x10(%rax),%rdx
ffffffff8001a0cf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8001a0d3:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff8001a0d7:	48 39 c2             	cmp    %rax,%rdx
ffffffff8001a0da:	75 0a                	jne    ffffffff8001a0e6 <ZyanVectorSwapElements+0x6e>
ffffffff8001a0dc:	b8 09 00 10 80       	mov    $0x80100009,%eax
ffffffff8001a0e1:	e9 b1 00 00 00       	jmp    ffffffff8001a197 <ZyanVectorSwapElements+0x11f>
ffffffff8001a0e6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8001a0ea:	48 8b 48 30          	mov    0x30(%rax),%rcx
ffffffff8001a0ee:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8001a0f2:	48 8b 50 10          	mov    0x10(%rax),%rdx
ffffffff8001a0f6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8001a0fa:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff8001a0fe:	48 0f af c2          	imul   %rdx,%rax
ffffffff8001a102:	48 01 c8             	add    %rcx,%rax
ffffffff8001a105:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8001a109:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8001a10d:	48 8b 50 30          	mov    0x30(%rax),%rdx
ffffffff8001a111:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8001a115:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff8001a119:	48 0f af 45 d0       	imul   -0x30(%rbp),%rax
ffffffff8001a11e:	48 01 d0             	add    %rdx,%rax
ffffffff8001a121:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff8001a125:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8001a129:	48 8b 50 30          	mov    0x30(%rax),%rdx
ffffffff8001a12d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8001a131:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff8001a135:	48 0f af 45 c8       	imul   -0x38(%rbp),%rax
ffffffff8001a13a:	48 01 d0             	add    %rdx,%rax
ffffffff8001a13d:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff8001a141:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8001a145:	48 8b 50 20          	mov    0x20(%rax),%rdx
ffffffff8001a149:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
ffffffff8001a14d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001a151:	48 89 ce             	mov    %rcx,%rsi
ffffffff8001a154:	48 89 c7             	mov    %rax,%rdi
ffffffff8001a157:	e8 0e f2 ff ff       	call   ffffffff8001936a <ZYAN_MEMCPY.lto_priv.2>
ffffffff8001a15c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8001a160:	48 8b 50 20          	mov    0x20(%rax),%rdx
ffffffff8001a164:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
ffffffff8001a168:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8001a16c:	48 89 ce             	mov    %rcx,%rsi
ffffffff8001a16f:	48 89 c7             	mov    %rax,%rdi
ffffffff8001a172:	e8 f3 f1 ff ff       	call   ffffffff8001936a <ZYAN_MEMCPY.lto_priv.2>
ffffffff8001a177:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8001a17b:	48 8b 50 20          	mov    0x20(%rax),%rdx
ffffffff8001a17f:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
ffffffff8001a183:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001a187:	48 89 ce             	mov    %rcx,%rsi
ffffffff8001a18a:	48 89 c7             	mov    %rax,%rdi
ffffffff8001a18d:	e8 d8 f1 ff ff       	call   ffffffff8001936a <ZYAN_MEMCPY.lto_priv.2>
ffffffff8001a192:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff8001a197:	c9                   	leave  
ffffffff8001a198:	c3                   	ret    

ffffffff8001a199 <ZyanVectorDelete>:
ffffffff8001a199:	f3 0f 1e fa          	endbr64 
ffffffff8001a19d:	55                   	push   %rbp
ffffffff8001a19e:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001a1a1:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff8001a1a5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8001a1a9:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff8001a1ad:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
ffffffff8001a1b1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001a1b5:	ba 01 00 00 00       	mov    $0x1,%edx
ffffffff8001a1ba:	48 89 ce             	mov    %rcx,%rsi
ffffffff8001a1bd:	48 89 c7             	mov    %rax,%rdi
ffffffff8001a1c0:	e8 02 00 00 00       	call   ffffffff8001a1c7 <ZyanVectorDeleteRange>
ffffffff8001a1c5:	c9                   	leave  
ffffffff8001a1c6:	c3                   	ret    

ffffffff8001a1c7 <ZyanVectorDeleteRange>:
ffffffff8001a1c7:	f3 0f 1e fa          	endbr64 
ffffffff8001a1cb:	55                   	push   %rbp
ffffffff8001a1cc:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001a1cf:	48 83 ec 30          	sub    $0x30,%rsp
ffffffff8001a1d3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff8001a1d7:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
ffffffff8001a1db:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
ffffffff8001a1df:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
ffffffff8001a1e4:	74 07                	je     ffffffff8001a1ed <ZyanVectorDeleteRange+0x26>
ffffffff8001a1e6:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
ffffffff8001a1eb:	75 0a                	jne    ffffffff8001a1f7 <ZyanVectorDeleteRange+0x30>
ffffffff8001a1ed:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff8001a1f2:	e9 49 01 00 00       	jmp    ffffffff8001a340 <ZyanVectorDeleteRange+0x179>
ffffffff8001a1f7:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff8001a1fb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8001a1ff:	48 01 c2             	add    %rax,%rdx
ffffffff8001a202:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001a206:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff8001a20a:	48 39 c2             	cmp    %rax,%rdx
ffffffff8001a20d:	76 0a                	jbe    ffffffff8001a219 <ZyanVectorDeleteRange+0x52>
ffffffff8001a20f:	b8 08 00 10 80       	mov    $0x80100008,%eax
ffffffff8001a214:	e9 27 01 00 00       	jmp    ffffffff8001a340 <ZyanVectorDeleteRange+0x179>
ffffffff8001a219:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001a21d:	48 8b 40 28          	mov    0x28(%rax),%rax
ffffffff8001a221:	48 85 c0             	test   %rax,%rax
ffffffff8001a224:	74 45                	je     ffffffff8001a26b <ZyanVectorDeleteRange+0xa4>
ffffffff8001a226:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8001a22a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8001a22e:	eb 2a                	jmp    ffffffff8001a25a <ZyanVectorDeleteRange+0x93>
ffffffff8001a230:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001a234:	48 8b 50 28          	mov    0x28(%rax),%rdx
ffffffff8001a238:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001a23c:	48 8b 48 30          	mov    0x30(%rax),%rcx
ffffffff8001a240:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001a244:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff8001a248:	48 0f af 45 f8       	imul   -0x8(%rbp),%rax
ffffffff8001a24d:	48 01 c8             	add    %rcx,%rax
ffffffff8001a250:	48 89 c7             	mov    %rax,%rdi
ffffffff8001a253:	ff d2                	call   *%rdx
ffffffff8001a255:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
ffffffff8001a25a:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff8001a25e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8001a262:	48 01 d0             	add    %rdx,%rax
ffffffff8001a265:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
ffffffff8001a269:	72 c5                	jb     ffffffff8001a230 <ZyanVectorDeleteRange+0x69>
ffffffff8001a26b:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff8001a26f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8001a273:	48 01 c2             	add    %rax,%rdx
ffffffff8001a276:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001a27a:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff8001a27e:	48 39 c2             	cmp    %rax,%rdx
ffffffff8001a281:	73 29                	jae    ffffffff8001a2ac <ZyanVectorDeleteRange+0xe5>
ffffffff8001a283:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff8001a287:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
ffffffff8001a28b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001a28f:	48 89 ce             	mov    %rcx,%rsi
ffffffff8001a292:	48 89 c7             	mov    %rax,%rdi
ffffffff8001a295:	e8 7c f2 ff ff       	call   ffffffff80019516 <ZyanVectorShiftLeft>
ffffffff8001a29a:	89 45 f4             	mov    %eax,-0xc(%rbp)
ffffffff8001a29d:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff8001a2a0:	85 c0                	test   %eax,%eax
ffffffff8001a2a2:	79 08                	jns    ffffffff8001a2ac <ZyanVectorDeleteRange+0xe5>
ffffffff8001a2a4:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff8001a2a7:	e9 94 00 00 00       	jmp    ffffffff8001a340 <ZyanVectorDeleteRange+0x179>
ffffffff8001a2ac:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001a2b0:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff8001a2b4:	48 2b 45 d8          	sub    -0x28(%rbp),%rax
ffffffff8001a2b8:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff8001a2bc:	48 89 42 10          	mov    %rax,0x10(%rdx)
ffffffff8001a2c0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001a2c4:	0f b6 40 09          	movzbl 0x9(%rax),%eax
ffffffff8001a2c8:	84 c0                	test   %al,%al
ffffffff8001a2ca:	74 6f                	je     ffffffff8001a33b <ZyanVectorDeleteRange+0x174>
ffffffff8001a2cc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001a2d0:	48 8b 50 10          	mov    0x10(%rax),%rdx
ffffffff8001a2d4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001a2d8:	0f b6 40 09          	movzbl 0x9(%rax),%eax
ffffffff8001a2dc:	0f b6 c0             	movzbl %al,%eax
ffffffff8001a2df:	48 0f af c2          	imul   %rdx,%rax
ffffffff8001a2e3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff8001a2e7:	48 8b 52 18          	mov    0x18(%rdx),%rdx
ffffffff8001a2eb:	48 39 d0             	cmp    %rdx,%rax
ffffffff8001a2ee:	73 4b                	jae    ffffffff8001a33b <ZyanVectorDeleteRange+0x174>
ffffffff8001a2f0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001a2f4:	48 8b 50 10          	mov    0x10(%rax),%rdx
ffffffff8001a2f8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001a2fc:	0f b6 40 08          	movzbl 0x8(%rax),%eax
ffffffff8001a300:	0f b6 c0             	movzbl %al,%eax
ffffffff8001a303:	48 0f af c2          	imul   %rdx,%rax
ffffffff8001a307:	48 85 c0             	test   %rax,%rax
ffffffff8001a30a:	74 19                	je     ffffffff8001a325 <ZyanVectorDeleteRange+0x15e>
ffffffff8001a30c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001a310:	48 8b 50 10          	mov    0x10(%rax),%rdx
ffffffff8001a314:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001a318:	0f b6 40 08          	movzbl 0x8(%rax),%eax
ffffffff8001a31c:	0f b6 c0             	movzbl %al,%eax
ffffffff8001a31f:	48 0f af c2          	imul   %rdx,%rax
ffffffff8001a323:	eb 05                	jmp    ffffffff8001a32a <ZyanVectorDeleteRange+0x163>
ffffffff8001a325:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8001a32a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff8001a32e:	48 89 c6             	mov    %rax,%rsi
ffffffff8001a331:	48 89 d7             	mov    %rdx,%rdi
ffffffff8001a334:	e8 29 f1 ff ff       	call   ffffffff80019462 <ZyanVectorReallocate>
ffffffff8001a339:	eb 05                	jmp    ffffffff8001a340 <ZyanVectorDeleteRange+0x179>
ffffffff8001a33b:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff8001a340:	c9                   	leave  
ffffffff8001a341:	c3                   	ret    

ffffffff8001a342 <ZyanVectorPopBack>:
ffffffff8001a342:	f3 0f 1e fa          	endbr64 
ffffffff8001a346:	55                   	push   %rbp
ffffffff8001a347:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001a34a:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff8001a34e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8001a352:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff8001a357:	75 0a                	jne    ffffffff8001a363 <ZyanVectorPopBack+0x21>
ffffffff8001a359:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff8001a35e:	e9 e8 00 00 00       	jmp    ffffffff8001a44b <ZyanVectorPopBack+0x109>
ffffffff8001a363:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001a367:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff8001a36b:	48 85 c0             	test   %rax,%rax
ffffffff8001a36e:	75 0a                	jne    ffffffff8001a37a <ZyanVectorPopBack+0x38>
ffffffff8001a370:	b8 08 00 10 80       	mov    $0x80100008,%eax
ffffffff8001a375:	e9 d1 00 00 00       	jmp    ffffffff8001a44b <ZyanVectorPopBack+0x109>
ffffffff8001a37a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001a37e:	48 8b 40 28          	mov    0x28(%rax),%rax
ffffffff8001a382:	48 85 c0             	test   %rax,%rax
ffffffff8001a385:	74 30                	je     ffffffff8001a3b7 <ZyanVectorPopBack+0x75>
ffffffff8001a387:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001a38b:	48 8b 50 28          	mov    0x28(%rax),%rdx
ffffffff8001a38f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001a393:	48 8b 70 30          	mov    0x30(%rax),%rsi
ffffffff8001a397:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001a39b:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff8001a39f:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
ffffffff8001a3a3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001a3a7:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff8001a3ab:	48 0f af c1          	imul   %rcx,%rax
ffffffff8001a3af:	48 01 f0             	add    %rsi,%rax
ffffffff8001a3b2:	48 89 c7             	mov    %rax,%rdi
ffffffff8001a3b5:	ff d2                	call   *%rdx
ffffffff8001a3b7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001a3bb:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff8001a3bf:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
ffffffff8001a3c3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001a3c7:	48 89 50 10          	mov    %rdx,0x10(%rax)
ffffffff8001a3cb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001a3cf:	0f b6 40 09          	movzbl 0x9(%rax),%eax
ffffffff8001a3d3:	84 c0                	test   %al,%al
ffffffff8001a3d5:	74 6f                	je     ffffffff8001a446 <ZyanVectorPopBack+0x104>
ffffffff8001a3d7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001a3db:	48 8b 50 10          	mov    0x10(%rax),%rdx
ffffffff8001a3df:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001a3e3:	0f b6 40 09          	movzbl 0x9(%rax),%eax
ffffffff8001a3e7:	0f b6 c0             	movzbl %al,%eax
ffffffff8001a3ea:	48 0f af c2          	imul   %rdx,%rax
ffffffff8001a3ee:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff8001a3f2:	48 8b 52 18          	mov    0x18(%rdx),%rdx
ffffffff8001a3f6:	48 39 d0             	cmp    %rdx,%rax
ffffffff8001a3f9:	73 4b                	jae    ffffffff8001a446 <ZyanVectorPopBack+0x104>
ffffffff8001a3fb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001a3ff:	48 8b 50 10          	mov    0x10(%rax),%rdx
ffffffff8001a403:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001a407:	0f b6 40 08          	movzbl 0x8(%rax),%eax
ffffffff8001a40b:	0f b6 c0             	movzbl %al,%eax
ffffffff8001a40e:	48 0f af c2          	imul   %rdx,%rax
ffffffff8001a412:	48 85 c0             	test   %rax,%rax
ffffffff8001a415:	74 19                	je     ffffffff8001a430 <ZyanVectorPopBack+0xee>
ffffffff8001a417:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001a41b:	48 8b 50 10          	mov    0x10(%rax),%rdx
ffffffff8001a41f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001a423:	0f b6 40 08          	movzbl 0x8(%rax),%eax
ffffffff8001a427:	0f b6 c0             	movzbl %al,%eax
ffffffff8001a42a:	48 0f af c2          	imul   %rdx,%rax
ffffffff8001a42e:	eb 05                	jmp    ffffffff8001a435 <ZyanVectorPopBack+0xf3>
ffffffff8001a430:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8001a435:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff8001a439:	48 89 c6             	mov    %rax,%rsi
ffffffff8001a43c:	48 89 d7             	mov    %rdx,%rdi
ffffffff8001a43f:	e8 1e f0 ff ff       	call   ffffffff80019462 <ZyanVectorReallocate>
ffffffff8001a444:	eb 05                	jmp    ffffffff8001a44b <ZyanVectorPopBack+0x109>
ffffffff8001a446:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff8001a44b:	c9                   	leave  
ffffffff8001a44c:	c3                   	ret    

ffffffff8001a44d <ZyanVectorClear>:
ffffffff8001a44d:	f3 0f 1e fa          	endbr64 
ffffffff8001a451:	55                   	push   %rbp
ffffffff8001a452:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001a455:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff8001a459:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8001a45d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001a461:	ba 00 00 00 00       	mov    $0x0,%edx
ffffffff8001a466:	be 00 00 00 00       	mov    $0x0,%esi
ffffffff8001a46b:	48 89 c7             	mov    %rax,%rdi
ffffffff8001a46e:	e8 ff 02 00 00       	call   ffffffff8001a772 <ZyanVectorResizeEx>
ffffffff8001a473:	c9                   	leave  
ffffffff8001a474:	c3                   	ret    

ffffffff8001a475 <ZyanVectorFind>:
ffffffff8001a475:	f3 0f 1e fa          	endbr64 
ffffffff8001a479:	55                   	push   %rbp
ffffffff8001a47a:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001a47d:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff8001a481:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8001a485:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff8001a489:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
ffffffff8001a48d:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
ffffffff8001a491:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff8001a496:	75 07                	jne    ffffffff8001a49f <ZyanVectorFind+0x2a>
ffffffff8001a498:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff8001a49d:	eb 29                	jmp    ffffffff8001a4c8 <ZyanVectorFind+0x53>
ffffffff8001a49f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001a4a3:	48 8b 78 10          	mov    0x10(%rax),%rdi
ffffffff8001a4a7:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
ffffffff8001a4ab:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff8001a4af:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
ffffffff8001a4b3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001a4b7:	49 89 f9             	mov    %rdi,%r9
ffffffff8001a4ba:	41 b8 00 00 00 00    	mov    $0x0,%r8d
ffffffff8001a4c0:	48 89 c7             	mov    %rax,%rdi
ffffffff8001a4c3:	e8 02 00 00 00       	call   ffffffff8001a4ca <ZyanVectorFindEx>
ffffffff8001a4c8:	c9                   	leave  
ffffffff8001a4c9:	c3                   	ret    

ffffffff8001a4ca <ZyanVectorFindEx>:
ffffffff8001a4ca:	f3 0f 1e fa          	endbr64 
ffffffff8001a4ce:	55                   	push   %rbp
ffffffff8001a4cf:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001a4d2:	48 83 ec 40          	sub    $0x40,%rsp
ffffffff8001a4d6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff8001a4da:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
ffffffff8001a4de:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
ffffffff8001a4e2:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
ffffffff8001a4e6:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
ffffffff8001a4ea:	4c 89 4d c0          	mov    %r9,-0x40(%rbp)
ffffffff8001a4ee:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
ffffffff8001a4f3:	75 0a                	jne    ffffffff8001a4ff <ZyanVectorFindEx+0x35>
ffffffff8001a4f5:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff8001a4fa:	e9 b7 00 00 00       	jmp    ffffffff8001a5b6 <ZyanVectorFindEx+0xec>
ffffffff8001a4ff:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
ffffffff8001a503:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8001a507:	48 01 c2             	add    %rax,%rdx
ffffffff8001a50a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001a50e:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff8001a512:	48 39 c2             	cmp    %rax,%rdx
ffffffff8001a515:	77 0e                	ja     ffffffff8001a525 <ZyanVectorFindEx+0x5b>
ffffffff8001a517:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001a51b:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff8001a51f:	48 39 45 c8          	cmp    %rax,-0x38(%rbp)
ffffffff8001a523:	75 0a                	jne    ffffffff8001a52f <ZyanVectorFindEx+0x65>
ffffffff8001a525:	b8 08 00 10 80       	mov    $0x80100008,%eax
ffffffff8001a52a:	e9 87 00 00 00       	jmp    ffffffff8001a5b6 <ZyanVectorFindEx+0xec>
ffffffff8001a52f:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
ffffffff8001a534:	75 12                	jne    ffffffff8001a548 <ZyanVectorFindEx+0x7e>
ffffffff8001a536:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8001a53a:	48 c7 00 ff ff ff ff 	movq   $0xffffffffffffffff,(%rax)
ffffffff8001a541:	b8 03 00 10 00       	mov    $0x100003,%eax
ffffffff8001a546:	eb 6e                	jmp    ffffffff8001a5b6 <ZyanVectorFindEx+0xec>
ffffffff8001a548:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8001a54c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8001a550:	eb 43                	jmp    ffffffff8001a595 <ZyanVectorFindEx+0xcb>
ffffffff8001a552:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001a556:	48 8b 50 30          	mov    0x30(%rax),%rdx
ffffffff8001a55a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001a55e:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff8001a562:	48 0f af 45 f8       	imul   -0x8(%rbp),%rax
ffffffff8001a567:	48 01 d0             	add    %rdx,%rax
ffffffff8001a56a:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff8001a56e:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
ffffffff8001a572:	48 89 d6             	mov    %rdx,%rsi
ffffffff8001a575:	48 89 c7             	mov    %rax,%rdi
ffffffff8001a578:	ff d1                	call   *%rcx
ffffffff8001a57a:	84 c0                	test   %al,%al
ffffffff8001a57c:	74 12                	je     ffffffff8001a590 <ZyanVectorFindEx+0xc6>
ffffffff8001a57e:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff8001a582:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8001a586:	48 89 10             	mov    %rdx,(%rax)
ffffffff8001a589:	b8 02 00 10 00       	mov    $0x100002,%eax
ffffffff8001a58e:	eb 26                	jmp    ffffffff8001a5b6 <ZyanVectorFindEx+0xec>
ffffffff8001a590:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
ffffffff8001a595:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
ffffffff8001a599:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8001a59d:	48 01 d0             	add    %rdx,%rax
ffffffff8001a5a0:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
ffffffff8001a5a4:	72 ac                	jb     ffffffff8001a552 <ZyanVectorFindEx+0x88>
ffffffff8001a5a6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8001a5aa:	48 c7 00 ff ff ff ff 	movq   $0xffffffffffffffff,(%rax)
ffffffff8001a5b1:	b8 03 00 10 00       	mov    $0x100003,%eax
ffffffff8001a5b6:	c9                   	leave  
ffffffff8001a5b7:	c3                   	ret    

ffffffff8001a5b8 <ZyanVectorBinarySearch>:
ffffffff8001a5b8:	f3 0f 1e fa          	endbr64 
ffffffff8001a5bc:	55                   	push   %rbp
ffffffff8001a5bd:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001a5c0:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff8001a5c4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8001a5c8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff8001a5cc:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
ffffffff8001a5d0:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
ffffffff8001a5d4:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff8001a5d9:	75 07                	jne    ffffffff8001a5e2 <ZyanVectorBinarySearch+0x2a>
ffffffff8001a5db:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff8001a5e0:	eb 29                	jmp    ffffffff8001a60b <ZyanVectorBinarySearch+0x53>
ffffffff8001a5e2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001a5e6:	48 8b 78 10          	mov    0x10(%rax),%rdi
ffffffff8001a5ea:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
ffffffff8001a5ee:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff8001a5f2:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
ffffffff8001a5f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001a5fa:	49 89 f9             	mov    %rdi,%r9
ffffffff8001a5fd:	41 b8 00 00 00 00    	mov    $0x0,%r8d
ffffffff8001a603:	48 89 c7             	mov    %rax,%rdi
ffffffff8001a606:	e8 02 00 00 00       	call   ffffffff8001a60d <ZyanVectorBinarySearchEx>
ffffffff8001a60b:	c9                   	leave  
ffffffff8001a60c:	c3                   	ret    

ffffffff8001a60d <ZyanVectorBinarySearchEx>:
ffffffff8001a60d:	f3 0f 1e fa          	endbr64 
ffffffff8001a611:	55                   	push   %rbp
ffffffff8001a612:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001a615:	48 83 ec 60          	sub    $0x60,%rsp
ffffffff8001a619:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
ffffffff8001a61d:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
ffffffff8001a621:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
ffffffff8001a625:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
ffffffff8001a629:	4c 89 45 a8          	mov    %r8,-0x58(%rbp)
ffffffff8001a62d:	4c 89 4d a0          	mov    %r9,-0x60(%rbp)
ffffffff8001a631:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
ffffffff8001a636:	75 0a                	jne    ffffffff8001a642 <ZyanVectorBinarySearchEx+0x35>
ffffffff8001a638:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff8001a63d:	e9 00 01 00 00       	jmp    ffffffff8001a742 <ZyanVectorBinarySearchEx+0x135>
ffffffff8001a642:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8001a646:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff8001a64a:	48 39 45 a8          	cmp    %rax,-0x58(%rbp)
ffffffff8001a64e:	72 07                	jb     ffffffff8001a657 <ZyanVectorBinarySearchEx+0x4a>
ffffffff8001a650:	48 83 7d a0 00       	cmpq   $0x0,-0x60(%rbp)
ffffffff8001a655:	75 18                	jne    ffffffff8001a66f <ZyanVectorBinarySearchEx+0x62>
ffffffff8001a657:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
ffffffff8001a65b:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff8001a65f:	48 01 c2             	add    %rax,%rdx
ffffffff8001a662:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8001a666:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff8001a66a:	48 39 c2             	cmp    %rax,%rdx
ffffffff8001a66d:	76 0a                	jbe    ffffffff8001a679 <ZyanVectorBinarySearchEx+0x6c>
ffffffff8001a66f:	b8 08 00 10 80       	mov    $0x80100008,%eax
ffffffff8001a674:	e9 c9 00 00 00       	jmp    ffffffff8001a742 <ZyanVectorBinarySearchEx+0x135>
ffffffff8001a679:	48 83 7d a0 00       	cmpq   $0x0,-0x60(%rbp)
ffffffff8001a67e:	75 15                	jne    ffffffff8001a695 <ZyanVectorBinarySearchEx+0x88>
ffffffff8001a680:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff8001a684:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
ffffffff8001a688:	48 89 10             	mov    %rdx,(%rax)
ffffffff8001a68b:	b8 03 00 10 00       	mov    $0x100003,%eax
ffffffff8001a690:	e9 ad 00 00 00       	jmp    ffffffff8001a742 <ZyanVectorBinarySearchEx+0x135>
ffffffff8001a695:	c7 45 fc 03 00 10 00 	movl   $0x100003,-0x4(%rbp)
ffffffff8001a69c:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff8001a6a0:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff8001a6a4:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
ffffffff8001a6a8:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff8001a6ac:	48 01 d0             	add    %rdx,%rax
ffffffff8001a6af:	48 83 e8 01          	sub    $0x1,%rax
ffffffff8001a6b3:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff8001a6b7:	eb 71                	jmp    ffffffff8001a72a <ZyanVectorBinarySearchEx+0x11d>
ffffffff8001a6b9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001a6bd:	48 2b 45 f0          	sub    -0x10(%rbp),%rax
ffffffff8001a6c1:	48 d1 f8             	sar    %rax
ffffffff8001a6c4:	48 89 c2             	mov    %rax,%rdx
ffffffff8001a6c7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8001a6cb:	48 01 d0             	add    %rdx,%rax
ffffffff8001a6ce:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff8001a6d2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8001a6d6:	48 8b 50 30          	mov    0x30(%rax),%rdx
ffffffff8001a6da:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8001a6de:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff8001a6e2:	48 0f af 45 e0       	imul   -0x20(%rbp),%rax
ffffffff8001a6e7:	48 01 d0             	add    %rdx,%rax
ffffffff8001a6ea:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
ffffffff8001a6ee:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
ffffffff8001a6f2:	48 89 d6             	mov    %rdx,%rsi
ffffffff8001a6f5:	48 89 c7             	mov    %rax,%rdi
ffffffff8001a6f8:	ff d1                	call   *%rcx
ffffffff8001a6fa:	89 45 dc             	mov    %eax,-0x24(%rbp)
ffffffff8001a6fd:	83 7d dc 00          	cmpl   $0x0,-0x24(%rbp)
ffffffff8001a701:	79 0e                	jns    ffffffff8001a711 <ZyanVectorBinarySearchEx+0x104>
ffffffff8001a703:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8001a707:	48 83 c0 01          	add    $0x1,%rax
ffffffff8001a70b:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff8001a70f:	eb 19                	jmp    ffffffff8001a72a <ZyanVectorBinarySearchEx+0x11d>
ffffffff8001a711:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8001a715:	48 83 e8 01          	sub    $0x1,%rax
ffffffff8001a719:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff8001a71d:	83 7d dc 00          	cmpl   $0x0,-0x24(%rbp)
ffffffff8001a721:	75 07                	jne    ffffffff8001a72a <ZyanVectorBinarySearchEx+0x11d>
ffffffff8001a723:	c7 45 fc 02 00 10 00 	movl   $0x100002,-0x4(%rbp)
ffffffff8001a72a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8001a72e:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
ffffffff8001a732:	7e 85                	jle    ffffffff8001a6b9 <ZyanVectorBinarySearchEx+0xac>
ffffffff8001a734:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff8001a738:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff8001a73c:	48 89 10             	mov    %rdx,(%rax)
ffffffff8001a73f:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8001a742:	c9                   	leave  
ffffffff8001a743:	c3                   	ret    

ffffffff8001a744 <ZyanVectorResize>:
ffffffff8001a744:	f3 0f 1e fa          	endbr64 
ffffffff8001a748:	55                   	push   %rbp
ffffffff8001a749:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001a74c:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff8001a750:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8001a754:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff8001a758:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
ffffffff8001a75c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001a760:	ba 00 00 00 00       	mov    $0x0,%edx
ffffffff8001a765:	48 89 ce             	mov    %rcx,%rsi
ffffffff8001a768:	48 89 c7             	mov    %rax,%rdi
ffffffff8001a76b:	e8 02 00 00 00       	call   ffffffff8001a772 <ZyanVectorResizeEx>
ffffffff8001a770:	c9                   	leave  
ffffffff8001a771:	c3                   	ret    

ffffffff8001a772 <ZyanVectorResizeEx>:
ffffffff8001a772:	f3 0f 1e fa          	endbr64 
ffffffff8001a776:	55                   	push   %rbp
ffffffff8001a777:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001a77a:	48 83 ec 40          	sub    $0x40,%rsp
ffffffff8001a77e:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
ffffffff8001a782:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
ffffffff8001a786:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
ffffffff8001a78a:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
ffffffff8001a78f:	75 0a                	jne    ffffffff8001a79b <ZyanVectorResizeEx+0x29>
ffffffff8001a791:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff8001a796:	e9 4c 01 00 00       	jmp    ffffffff8001a8e7 <ZyanVectorResizeEx+0x175>
ffffffff8001a79b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8001a79f:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff8001a7a3:	48 39 45 d0          	cmp    %rax,-0x30(%rbp)
ffffffff8001a7a7:	75 0a                	jne    ffffffff8001a7b3 <ZyanVectorResizeEx+0x41>
ffffffff8001a7a9:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff8001a7ae:	e9 34 01 00 00       	jmp    ffffffff8001a8e7 <ZyanVectorResizeEx+0x175>
ffffffff8001a7b3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8001a7b7:	48 8b 40 28          	mov    0x28(%rax),%rax
ffffffff8001a7bb:	48 85 c0             	test   %rax,%rax
ffffffff8001a7be:	74 50                	je     ffffffff8001a810 <ZyanVectorResizeEx+0x9e>
ffffffff8001a7c0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8001a7c4:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff8001a7c8:	48 39 45 d0          	cmp    %rax,-0x30(%rbp)
ffffffff8001a7cc:	73 42                	jae    ffffffff8001a810 <ZyanVectorResizeEx+0x9e>
ffffffff8001a7ce:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8001a7d2:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8001a7d6:	eb 2a                	jmp    ffffffff8001a802 <ZyanVectorResizeEx+0x90>
ffffffff8001a7d8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8001a7dc:	48 8b 50 28          	mov    0x28(%rax),%rdx
ffffffff8001a7e0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8001a7e4:	48 8b 48 30          	mov    0x30(%rax),%rcx
ffffffff8001a7e8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8001a7ec:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff8001a7f0:	48 0f af 45 f8       	imul   -0x8(%rbp),%rax
ffffffff8001a7f5:	48 01 c8             	add    %rcx,%rax
ffffffff8001a7f8:	48 89 c7             	mov    %rax,%rdi
ffffffff8001a7fb:	ff d2                	call   *%rdx
ffffffff8001a7fd:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
ffffffff8001a802:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8001a806:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff8001a80a:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
ffffffff8001a80e:	72 c8                	jb     ffffffff8001a7d8 <ZyanVectorResizeEx+0x66>
ffffffff8001a810:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8001a814:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff8001a818:	48 39 45 d0          	cmp    %rax,-0x30(%rbp)
ffffffff8001a81c:	77 29                	ja     ffffffff8001a847 <ZyanVectorResizeEx+0xd5>
ffffffff8001a81e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8001a822:	0f b6 40 09          	movzbl 0x9(%rax),%eax
ffffffff8001a826:	84 c0                	test   %al,%al
ffffffff8001a828:	74 4b                	je     ffffffff8001a875 <ZyanVectorResizeEx+0x103>
ffffffff8001a82a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8001a82e:	0f b6 40 09          	movzbl 0x9(%rax),%eax
ffffffff8001a832:	0f b6 c0             	movzbl %al,%eax
ffffffff8001a835:	48 0f af 45 d0       	imul   -0x30(%rbp),%rax
ffffffff8001a83a:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff8001a83e:	48 8b 52 18          	mov    0x18(%rdx),%rdx
ffffffff8001a842:	48 39 d0             	cmp    %rdx,%rax
ffffffff8001a845:	73 2e                	jae    ffffffff8001a875 <ZyanVectorResizeEx+0x103>
ffffffff8001a847:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8001a84b:	0f b6 40 08          	movzbl 0x8(%rax),%eax
ffffffff8001a84f:	0f b6 c0             	movzbl %al,%eax
ffffffff8001a852:	48 0f af 45 d0       	imul   -0x30(%rbp),%rax
ffffffff8001a857:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff8001a85b:	48 89 c6             	mov    %rax,%rsi
ffffffff8001a85e:	48 89 d7             	mov    %rdx,%rdi
ffffffff8001a861:	e8 fc eb ff ff       	call   ffffffff80019462 <ZyanVectorReallocate>
ffffffff8001a866:	89 45 ec             	mov    %eax,-0x14(%rbp)
ffffffff8001a869:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff8001a86c:	85 c0                	test   %eax,%eax
ffffffff8001a86e:	79 05                	jns    ffffffff8001a875 <ZyanVectorResizeEx+0x103>
ffffffff8001a870:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff8001a873:	eb 72                	jmp    ffffffff8001a8e7 <ZyanVectorResizeEx+0x175>
ffffffff8001a875:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
ffffffff8001a87a:	74 5a                	je     ffffffff8001a8d6 <ZyanVectorResizeEx+0x164>
ffffffff8001a87c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8001a880:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff8001a884:	48 39 45 d0          	cmp    %rax,-0x30(%rbp)
ffffffff8001a888:	76 4c                	jbe    ffffffff8001a8d6 <ZyanVectorResizeEx+0x164>
ffffffff8001a88a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8001a88e:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff8001a892:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff8001a896:	eb 34                	jmp    ffffffff8001a8cc <ZyanVectorResizeEx+0x15a>
ffffffff8001a898:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8001a89c:	48 8b 50 20          	mov    0x20(%rax),%rdx
ffffffff8001a8a0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8001a8a4:	48 8b 48 30          	mov    0x30(%rax),%rcx
ffffffff8001a8a8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8001a8ac:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff8001a8b0:	48 0f af 45 f0       	imul   -0x10(%rbp),%rax
ffffffff8001a8b5:	48 01 c8             	add    %rcx,%rax
ffffffff8001a8b8:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
ffffffff8001a8bc:	48 89 ce             	mov    %rcx,%rsi
ffffffff8001a8bf:	48 89 c7             	mov    %rax,%rdi
ffffffff8001a8c2:	e8 a3 ea ff ff       	call   ffffffff8001936a <ZYAN_MEMCPY.lto_priv.2>
ffffffff8001a8c7:	48 83 45 f0 01       	addq   $0x1,-0x10(%rbp)
ffffffff8001a8cc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8001a8d0:	48 3b 45 d0          	cmp    -0x30(%rbp),%rax
ffffffff8001a8d4:	72 c2                	jb     ffffffff8001a898 <ZyanVectorResizeEx+0x126>
ffffffff8001a8d6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8001a8da:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
ffffffff8001a8de:	48 89 50 10          	mov    %rdx,0x10(%rax)
ffffffff8001a8e2:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff8001a8e7:	c9                   	leave  
ffffffff8001a8e8:	c3                   	ret    

ffffffff8001a8e9 <ZyanVectorReserve>:
ffffffff8001a8e9:	f3 0f 1e fa          	endbr64 
ffffffff8001a8ed:	55                   	push   %rbp
ffffffff8001a8ee:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001a8f1:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff8001a8f5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff8001a8f9:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
ffffffff8001a8fd:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
ffffffff8001a902:	75 07                	jne    ffffffff8001a90b <ZyanVectorReserve+0x22>
ffffffff8001a904:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff8001a909:	eb 35                	jmp    ffffffff8001a940 <ZyanVectorReserve+0x57>
ffffffff8001a90b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001a90f:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff8001a913:	48 39 45 e0          	cmp    %rax,-0x20(%rbp)
ffffffff8001a917:	76 22                	jbe    ffffffff8001a93b <ZyanVectorReserve+0x52>
ffffffff8001a919:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff8001a91d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001a921:	48 89 d6             	mov    %rdx,%rsi
ffffffff8001a924:	48 89 c7             	mov    %rax,%rdi
ffffffff8001a927:	e8 36 eb ff ff       	call   ffffffff80019462 <ZyanVectorReallocate>
ffffffff8001a92c:	89 45 fc             	mov    %eax,-0x4(%rbp)
ffffffff8001a92f:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8001a932:	85 c0                	test   %eax,%eax
ffffffff8001a934:	79 05                	jns    ffffffff8001a93b <ZyanVectorReserve+0x52>
ffffffff8001a936:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8001a939:	eb 05                	jmp    ffffffff8001a940 <ZyanVectorReserve+0x57>
ffffffff8001a93b:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff8001a940:	c9                   	leave  
ffffffff8001a941:	c3                   	ret    

ffffffff8001a942 <ZyanVectorShrinkToFit>:
ffffffff8001a942:	f3 0f 1e fa          	endbr64 
ffffffff8001a946:	55                   	push   %rbp
ffffffff8001a947:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001a94a:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff8001a94e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8001a952:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff8001a957:	75 07                	jne    ffffffff8001a960 <ZyanVectorShrinkToFit+0x1e>
ffffffff8001a959:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff8001a95e:	eb 17                	jmp    ffffffff8001a977 <ZyanVectorShrinkToFit+0x35>
ffffffff8001a960:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001a964:	48 8b 50 10          	mov    0x10(%rax),%rdx
ffffffff8001a968:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001a96c:	48 89 d6             	mov    %rdx,%rsi
ffffffff8001a96f:	48 89 c7             	mov    %rax,%rdi
ffffffff8001a972:	e8 eb ea ff ff       	call   ffffffff80019462 <ZyanVectorReallocate>
ffffffff8001a977:	c9                   	leave  
ffffffff8001a978:	c3                   	ret    

ffffffff8001a979 <ZyanVectorGetCapacity>:
ffffffff8001a979:	f3 0f 1e fa          	endbr64 
ffffffff8001a97d:	55                   	push   %rbp
ffffffff8001a97e:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001a981:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff8001a985:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8001a989:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff8001a98d:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff8001a992:	75 07                	jne    ffffffff8001a99b <ZyanVectorGetCapacity+0x22>
ffffffff8001a994:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff8001a999:	eb 14                	jmp    ffffffff8001a9af <ZyanVectorGetCapacity+0x36>
ffffffff8001a99b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001a99f:	48 8b 50 18          	mov    0x18(%rax),%rdx
ffffffff8001a9a3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8001a9a7:	48 89 10             	mov    %rdx,(%rax)
ffffffff8001a9aa:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff8001a9af:	c9                   	leave  
ffffffff8001a9b0:	c3                   	ret    

ffffffff8001a9b1 <ZyanVectorGetSize>:
ffffffff8001a9b1:	f3 0f 1e fa          	endbr64 
ffffffff8001a9b5:	55                   	push   %rbp
ffffffff8001a9b6:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001a9b9:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff8001a9bd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8001a9c1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff8001a9c5:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff8001a9ca:	75 07                	jne    ffffffff8001a9d3 <ZyanVectorGetSize+0x22>
ffffffff8001a9cc:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff8001a9d1:	eb 14                	jmp    ffffffff8001a9e7 <ZyanVectorGetSize+0x36>
ffffffff8001a9d3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001a9d7:	48 8b 50 10          	mov    0x10(%rax),%rdx
ffffffff8001a9db:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8001a9df:	48 89 10             	mov    %rdx,(%rax)
ffffffff8001a9e2:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff8001a9e7:	c9                   	leave  
ffffffff8001a9e8:	c3                   	ret    

ffffffff8001a9e9 <ZYAN_MEMCPY.lto_priv.3>:
ffffffff8001a9e9:	55                   	push   %rbp
ffffffff8001a9ea:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001a9ed:	48 83 ec 28          	sub    $0x28,%rsp
ffffffff8001a9f1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff8001a9f5:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
ffffffff8001a9f9:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
ffffffff8001a9fd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001aa01:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8001aa05:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8001aa09:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff8001aa0d:	eb 1d                	jmp    ffffffff8001aa2c <ZYAN_MEMCPY.lto_priv.3+0x43>
ffffffff8001aa0f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff8001aa13:	48 8d 42 01          	lea    0x1(%rdx),%rax
ffffffff8001aa17:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff8001aa1b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001aa1f:	48 8d 48 01          	lea    0x1(%rax),%rcx
ffffffff8001aa23:	48 89 4d f8          	mov    %rcx,-0x8(%rbp)
ffffffff8001aa27:	0f b6 12             	movzbl (%rdx),%edx
ffffffff8001aa2a:	88 10                	mov    %dl,(%rax)
ffffffff8001aa2c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8001aa30:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
ffffffff8001aa34:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
ffffffff8001aa38:	48 85 c0             	test   %rax,%rax
ffffffff8001aa3b:	75 d2                	jne    ffffffff8001aa0f <ZYAN_MEMCPY.lto_priv.3+0x26>
ffffffff8001aa3d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001aa41:	c9                   	leave  
ffffffff8001aa42:	c3                   	ret    

ffffffff8001aa43 <ZyanListAllocateNode>:
ffffffff8001aa43:	f3 0f 1e fa          	endbr64 
ffffffff8001aa47:	55                   	push   %rbp
ffffffff8001aa48:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001aa4b:	48 83 ec 30          	sub    $0x30,%rsp
ffffffff8001aa4f:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
ffffffff8001aa53:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
ffffffff8001aa57:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8001aa5b:	48 8b 00             	mov    (%rax),%rax
ffffffff8001aa5e:	48 85 c0             	test   %rax,%rax
ffffffff8001aa61:	0f 95 c0             	setne  %al
ffffffff8001aa64:	88 45 ff             	mov    %al,-0x1(%rbp)
ffffffff8001aa67:	80 7d ff 00          	cmpb   $0x0,-0x1(%rbp)
ffffffff8001aa6b:	74 42                	je     ffffffff8001aaaf <ZyanListAllocateNode+0x6c>
ffffffff8001aa6d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8001aa71:	48 8b 00             	mov    (%rax),%rax
ffffffff8001aa74:	4c 8b 00             	mov    (%rax),%r8
ffffffff8001aa77:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8001aa7b:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff8001aa7f:	48 8d 50 10          	lea    0x10(%rax),%rdx
ffffffff8001aa83:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8001aa87:	48 8b 00             	mov    (%rax),%rax
ffffffff8001aa8a:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
ffffffff8001aa8e:	b9 01 00 00 00       	mov    $0x1,%ecx
ffffffff8001aa93:	48 89 c7             	mov    %rax,%rdi
ffffffff8001aa96:	41 ff d0             	call   *%r8
ffffffff8001aa99:	89 45 ec             	mov    %eax,-0x14(%rbp)
ffffffff8001aa9c:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff8001aa9f:	85 c0                	test   %eax,%eax
ffffffff8001aaa1:	0f 89 92 00 00 00    	jns    ffffffff8001ab39 <ZyanListAllocateNode+0xf6>
ffffffff8001aaa7:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff8001aaaa:	e9 8f 00 00 00       	jmp    ffffffff8001ab3e <ZyanListAllocateNode+0xfb>
ffffffff8001aaaf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8001aab3:	48 8b 40 40          	mov    0x40(%rax),%rax
ffffffff8001aab7:	48 85 c0             	test   %rax,%rax
ffffffff8001aaba:	74 24                	je     ffffffff8001aae0 <ZyanListAllocateNode+0x9d>
ffffffff8001aabc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8001aac0:	48 8b 50 40          	mov    0x40(%rax),%rdx
ffffffff8001aac4:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8001aac8:	48 89 10             	mov    %rdx,(%rax)
ffffffff8001aacb:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8001aacf:	48 8b 00             	mov    (%rax),%rax
ffffffff8001aad2:	48 8b 50 08          	mov    0x8(%rax),%rdx
ffffffff8001aad6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8001aada:	48 89 50 40          	mov    %rdx,0x40(%rax)
ffffffff8001aade:	eb 59                	jmp    ffffffff8001ab39 <ZyanListAllocateNode+0xf6>
ffffffff8001aae0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8001aae4:	48 8b 50 08          	mov    0x8(%rax),%rdx
ffffffff8001aae8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8001aaec:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff8001aaf0:	48 83 c0 10          	add    $0x10,%rax
ffffffff8001aaf4:	48 0f af c2          	imul   %rdx,%rax
ffffffff8001aaf8:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff8001aafc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8001ab00:	48 8b 50 10          	mov    0x10(%rax),%rdx
ffffffff8001ab04:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8001ab08:	48 01 d0             	add    %rdx,%rax
ffffffff8001ab0b:	48 8d 50 10          	lea    0x10(%rax),%rdx
ffffffff8001ab0f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8001ab13:	48 8b 40 38          	mov    0x38(%rax),%rax
ffffffff8001ab17:	48 39 c2             	cmp    %rax,%rdx
ffffffff8001ab1a:	76 07                	jbe    ffffffff8001ab23 <ZyanListAllocateNode+0xe0>
ffffffff8001ab1c:	b8 09 00 10 80       	mov    $0x80100009,%eax
ffffffff8001ab21:	eb 1b                	jmp    ffffffff8001ab3e <ZyanListAllocateNode+0xfb>
ffffffff8001ab23:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8001ab27:	48 8b 50 30          	mov    0x30(%rax),%rdx
ffffffff8001ab2b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8001ab2f:	48 01 c2             	add    %rax,%rdx
ffffffff8001ab32:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8001ab36:	48 89 10             	mov    %rdx,(%rax)
ffffffff8001ab39:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff8001ab3e:	c9                   	leave  
ffffffff8001ab3f:	c3                   	ret    

ffffffff8001ab40 <ZyanListDeallocateNode>:
ffffffff8001ab40:	f3 0f 1e fa          	endbr64 
ffffffff8001ab44:	55                   	push   %rbp
ffffffff8001ab45:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001ab48:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff8001ab4c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff8001ab50:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
ffffffff8001ab54:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001ab58:	48 8b 00             	mov    (%rax),%rax
ffffffff8001ab5b:	48 85 c0             	test   %rax,%rax
ffffffff8001ab5e:	0f 95 c0             	setne  %al
ffffffff8001ab61:	88 45 ff             	mov    %al,-0x1(%rbp)
ffffffff8001ab64:	80 7d ff 00          	cmpb   $0x0,-0x1(%rbp)
ffffffff8001ab68:	74 3c                	je     ffffffff8001aba6 <ZyanListDeallocateNode+0x66>
ffffffff8001ab6a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001ab6e:	48 8b 00             	mov    (%rax),%rax
ffffffff8001ab71:	4c 8b 40 10          	mov    0x10(%rax),%r8
ffffffff8001ab75:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001ab79:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff8001ab7d:	48 8d 50 10          	lea    0x10(%rax),%rdx
ffffffff8001ab81:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001ab85:	48 8b 00             	mov    (%rax),%rax
ffffffff8001ab88:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
ffffffff8001ab8c:	b9 01 00 00 00       	mov    $0x1,%ecx
ffffffff8001ab91:	48 89 c7             	mov    %rax,%rdi
ffffffff8001ab94:	41 ff d0             	call   *%r8
ffffffff8001ab97:	89 45 f8             	mov    %eax,-0x8(%rbp)
ffffffff8001ab9a:	8b 45 f8             	mov    -0x8(%rbp),%eax
ffffffff8001ab9d:	85 c0                	test   %eax,%eax
ffffffff8001ab9f:	79 21                	jns    ffffffff8001abc2 <ZyanListDeallocateNode+0x82>
ffffffff8001aba1:	8b 45 f8             	mov    -0x8(%rbp),%eax
ffffffff8001aba4:	eb 21                	jmp    ffffffff8001abc7 <ZyanListDeallocateNode+0x87>
ffffffff8001aba6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001abaa:	48 8b 50 40          	mov    0x40(%rax),%rdx
ffffffff8001abae:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8001abb2:	48 89 50 08          	mov    %rdx,0x8(%rax)
ffffffff8001abb6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001abba:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff8001abbe:	48 89 50 40          	mov    %rdx,0x40(%rax)
ffffffff8001abc2:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff8001abc7:	c9                   	leave  
ffffffff8001abc8:	c3                   	ret    

ffffffff8001abc9 <ZyanListInitEx>:
ffffffff8001abc9:	f3 0f 1e fa          	endbr64 
ffffffff8001abcd:	55                   	push   %rbp
ffffffff8001abce:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001abd1:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff8001abd5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8001abd9:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff8001abdd:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
ffffffff8001abe1:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
ffffffff8001abe5:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff8001abea:	74 0e                	je     ffffffff8001abfa <ZyanListInitEx+0x31>
ffffffff8001abec:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
ffffffff8001abf1:	74 07                	je     ffffffff8001abfa <ZyanListInitEx+0x31>
ffffffff8001abf3:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
ffffffff8001abf8:	75 07                	jne    ffffffff8001ac01 <ZyanListInitEx+0x38>
ffffffff8001abfa:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff8001abff:	eb 70                	jmp    ffffffff8001ac71 <ZyanListInitEx+0xa8>
ffffffff8001ac01:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001ac05:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff8001ac09:	48 89 10             	mov    %rdx,(%rax)
ffffffff8001ac0c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001ac10:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
ffffffff8001ac17:	00 
ffffffff8001ac18:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001ac1c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff8001ac20:	48 89 50 10          	mov    %rdx,0x10(%rax)
ffffffff8001ac24:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001ac28:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff8001ac2c:	48 89 50 18          	mov    %rdx,0x18(%rax)
ffffffff8001ac30:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001ac34:	48 c7 40 20 00 00 00 	movq   $0x0,0x20(%rax)
ffffffff8001ac3b:	00 
ffffffff8001ac3c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001ac40:	48 c7 40 28 00 00 00 	movq   $0x0,0x28(%rax)
ffffffff8001ac47:	00 
ffffffff8001ac48:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001ac4c:	48 c7 40 30 00 00 00 	movq   $0x0,0x30(%rax)
ffffffff8001ac53:	00 
ffffffff8001ac54:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001ac58:	48 c7 40 38 00 00 00 	movq   $0x0,0x38(%rax)
ffffffff8001ac5f:	00 
ffffffff8001ac60:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001ac64:	48 c7 40 40 00 00 00 	movq   $0x0,0x40(%rax)
ffffffff8001ac6b:	00 
ffffffff8001ac6c:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff8001ac71:	c9                   	leave  
ffffffff8001ac72:	c3                   	ret    

ffffffff8001ac73 <ZyanListInitCustomBuffer>:
ffffffff8001ac73:	f3 0f 1e fa          	endbr64 
ffffffff8001ac77:	55                   	push   %rbp
ffffffff8001ac78:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001ac7b:	48 83 ec 28          	sub    $0x28,%rsp
ffffffff8001ac7f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8001ac83:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff8001ac87:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
ffffffff8001ac8b:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
ffffffff8001ac8f:	4c 89 45 d8          	mov    %r8,-0x28(%rbp)
ffffffff8001ac93:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff8001ac98:	74 15                	je     ffffffff8001acaf <ZyanListInitCustomBuffer+0x3c>
ffffffff8001ac9a:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
ffffffff8001ac9f:	74 0e                	je     ffffffff8001acaf <ZyanListInitCustomBuffer+0x3c>
ffffffff8001aca1:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
ffffffff8001aca6:	74 07                	je     ffffffff8001acaf <ZyanListInitCustomBuffer+0x3c>
ffffffff8001aca8:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
ffffffff8001acad:	75 07                	jne    ffffffff8001acb6 <ZyanListInitCustomBuffer+0x43>
ffffffff8001acaf:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff8001acb4:	eb 70                	jmp    ffffffff8001ad26 <ZyanListInitCustomBuffer+0xb3>
ffffffff8001acb6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001acba:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
ffffffff8001acc1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001acc5:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
ffffffff8001accc:	00 
ffffffff8001accd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001acd1:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff8001acd5:	48 89 50 10          	mov    %rdx,0x10(%rax)
ffffffff8001acd9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001acdd:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff8001ace1:	48 89 50 18          	mov    %rdx,0x18(%rax)
ffffffff8001ace5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001ace9:	48 c7 40 20 00 00 00 	movq   $0x0,0x20(%rax)
ffffffff8001acf0:	00 
ffffffff8001acf1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001acf5:	48 c7 40 28 00 00 00 	movq   $0x0,0x28(%rax)
ffffffff8001acfc:	00 
ffffffff8001acfd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001ad01:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff8001ad05:	48 89 50 30          	mov    %rdx,0x30(%rax)
ffffffff8001ad09:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001ad0d:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff8001ad11:	48 89 50 38          	mov    %rdx,0x38(%rax)
ffffffff8001ad15:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001ad19:	48 c7 40 40 00 00 00 	movq   $0x0,0x40(%rax)
ffffffff8001ad20:	00 
ffffffff8001ad21:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff8001ad26:	c9                   	leave  
ffffffff8001ad27:	c3                   	ret    

ffffffff8001ad28 <ZyanListDestroy>:
ffffffff8001ad28:	f3 0f 1e fa          	endbr64 
ffffffff8001ad2c:	55                   	push   %rbp
ffffffff8001ad2d:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001ad30:	48 83 ec 30          	sub    $0x30,%rsp
ffffffff8001ad34:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
ffffffff8001ad38:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
ffffffff8001ad3d:	75 0a                	jne    ffffffff8001ad49 <ZyanListDestroy+0x21>
ffffffff8001ad3f:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff8001ad44:	e9 bc 00 00 00       	jmp    ffffffff8001ae05 <ZyanListDestroy+0xdd>
ffffffff8001ad49:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8001ad4d:	48 8b 00             	mov    (%rax),%rax
ffffffff8001ad50:	48 85 c0             	test   %rax,%rax
ffffffff8001ad53:	0f 95 c0             	setne  %al
ffffffff8001ad56:	88 45 f7             	mov    %al,-0x9(%rbp)
ffffffff8001ad59:	80 7d f7 00          	cmpb   $0x0,-0x9(%rbp)
ffffffff8001ad5d:	75 0d                	jne    ffffffff8001ad6c <ZyanListDestroy+0x44>
ffffffff8001ad5f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8001ad63:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff8001ad67:	48 85 c0             	test   %rax,%rax
ffffffff8001ad6a:	74 0a                	je     ffffffff8001ad76 <ZyanListDestroy+0x4e>
ffffffff8001ad6c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8001ad70:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff8001ad74:	eb 05                	jmp    ffffffff8001ad7b <ZyanListDestroy+0x53>
ffffffff8001ad76:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001ad7b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8001ad7f:	eb 78                	jmp    ffffffff8001adf9 <ZyanListDestroy+0xd1>
ffffffff8001ad81:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8001ad85:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff8001ad89:	48 85 c0             	test   %rax,%rax
ffffffff8001ad8c:	74 15                	je     ffffffff8001ada3 <ZyanListDestroy+0x7b>
ffffffff8001ad8e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8001ad92:	48 8b 50 18          	mov    0x18(%rax),%rdx
ffffffff8001ad96:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001ad9a:	48 83 c0 10          	add    $0x10,%rax
ffffffff8001ad9e:	48 89 c7             	mov    %rax,%rdi
ffffffff8001ada1:	ff d2                	call   *%rdx
ffffffff8001ada3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001ada7:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff8001adab:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff8001adaf:	80 7d f7 00          	cmpb   $0x0,-0x9(%rbp)
ffffffff8001adb3:	74 3c                	je     ffffffff8001adf1 <ZyanListDestroy+0xc9>
ffffffff8001adb5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8001adb9:	48 8b 00             	mov    (%rax),%rax
ffffffff8001adbc:	4c 8b 40 10          	mov    0x10(%rax),%r8
ffffffff8001adc0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8001adc4:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff8001adc8:	48 8d 50 10          	lea    0x10(%rax),%rdx
ffffffff8001adcc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8001add0:	48 8b 00             	mov    (%rax),%rax
ffffffff8001add3:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
ffffffff8001add7:	b9 01 00 00 00       	mov    $0x1,%ecx
ffffffff8001addc:	48 89 c7             	mov    %rax,%rdi
ffffffff8001addf:	41 ff d0             	call   *%r8
ffffffff8001ade2:	89 45 e4             	mov    %eax,-0x1c(%rbp)
ffffffff8001ade5:	8b 45 e4             	mov    -0x1c(%rbp),%eax
ffffffff8001ade8:	85 c0                	test   %eax,%eax
ffffffff8001adea:	79 05                	jns    ffffffff8001adf1 <ZyanListDestroy+0xc9>
ffffffff8001adec:	8b 45 e4             	mov    -0x1c(%rbp),%eax
ffffffff8001adef:	eb 14                	jmp    ffffffff8001ae05 <ZyanListDestroy+0xdd>
ffffffff8001adf1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001adf5:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8001adf9:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff8001adfe:	75 81                	jne    ffffffff8001ad81 <ZyanListDestroy+0x59>
ffffffff8001ae00:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff8001ae05:	c9                   	leave  
ffffffff8001ae06:	c3                   	ret    

ffffffff8001ae07 <ZyanListGetHeadNode>:
ffffffff8001ae07:	f3 0f 1e fa          	endbr64 
ffffffff8001ae0b:	55                   	push   %rbp
ffffffff8001ae0c:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001ae0f:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff8001ae13:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8001ae17:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff8001ae1b:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff8001ae20:	75 07                	jne    ffffffff8001ae29 <ZyanListGetHeadNode+0x22>
ffffffff8001ae22:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff8001ae27:	eb 14                	jmp    ffffffff8001ae3d <ZyanListGetHeadNode+0x36>
ffffffff8001ae29:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001ae2d:	48 8b 50 20          	mov    0x20(%rax),%rdx
ffffffff8001ae31:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8001ae35:	48 89 10             	mov    %rdx,(%rax)
ffffffff8001ae38:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff8001ae3d:	c9                   	leave  
ffffffff8001ae3e:	c3                   	ret    

ffffffff8001ae3f <ZyanListGetTailNode>:
ffffffff8001ae3f:	f3 0f 1e fa          	endbr64 
ffffffff8001ae43:	55                   	push   %rbp
ffffffff8001ae44:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001ae47:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff8001ae4b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8001ae4f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff8001ae53:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff8001ae58:	75 07                	jne    ffffffff8001ae61 <ZyanListGetTailNode+0x22>
ffffffff8001ae5a:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff8001ae5f:	eb 14                	jmp    ffffffff8001ae75 <ZyanListGetTailNode+0x36>
ffffffff8001ae61:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001ae65:	48 8b 50 28          	mov    0x28(%rax),%rdx
ffffffff8001ae69:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8001ae6d:	48 89 10             	mov    %rdx,(%rax)
ffffffff8001ae70:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff8001ae75:	c9                   	leave  
ffffffff8001ae76:	c3                   	ret    

ffffffff8001ae77 <ZyanListGetPrevNode>:
ffffffff8001ae77:	f3 0f 1e fa          	endbr64 
ffffffff8001ae7b:	55                   	push   %rbp
ffffffff8001ae7c:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001ae7f:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff8001ae83:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8001ae87:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff8001ae8c:	74 0c                	je     ffffffff8001ae9a <ZyanListGetPrevNode+0x23>
ffffffff8001ae8e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001ae92:	48 8b 00             	mov    (%rax),%rax
ffffffff8001ae95:	48 85 c0             	test   %rax,%rax
ffffffff8001ae98:	75 07                	jne    ffffffff8001aea1 <ZyanListGetPrevNode+0x2a>
ffffffff8001ae9a:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff8001ae9f:	eb 16                	jmp    ffffffff8001aeb7 <ZyanListGetPrevNode+0x40>
ffffffff8001aea1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001aea5:	48 8b 00             	mov    (%rax),%rax
ffffffff8001aea8:	48 8b 10             	mov    (%rax),%rdx
ffffffff8001aeab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001aeaf:	48 89 10             	mov    %rdx,(%rax)
ffffffff8001aeb2:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff8001aeb7:	c9                   	leave  
ffffffff8001aeb8:	c3                   	ret    

ffffffff8001aeb9 <ZyanListGetNextNode>:
ffffffff8001aeb9:	f3 0f 1e fa          	endbr64 
ffffffff8001aebd:	55                   	push   %rbp
ffffffff8001aebe:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001aec1:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff8001aec5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8001aec9:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff8001aece:	74 0c                	je     ffffffff8001aedc <ZyanListGetNextNode+0x23>
ffffffff8001aed0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001aed4:	48 8b 00             	mov    (%rax),%rax
ffffffff8001aed7:	48 85 c0             	test   %rax,%rax
ffffffff8001aeda:	75 07                	jne    ffffffff8001aee3 <ZyanListGetNextNode+0x2a>
ffffffff8001aedc:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff8001aee1:	eb 17                	jmp    ffffffff8001aefa <ZyanListGetNextNode+0x41>
ffffffff8001aee3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001aee7:	48 8b 00             	mov    (%rax),%rax
ffffffff8001aeea:	48 8b 50 08          	mov    0x8(%rax),%rdx
ffffffff8001aeee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001aef2:	48 89 10             	mov    %rdx,(%rax)
ffffffff8001aef5:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff8001aefa:	c9                   	leave  
ffffffff8001aefb:	c3                   	ret    

ffffffff8001aefc <ZyanListGetNodeData>:
ffffffff8001aefc:	f3 0f 1e fa          	endbr64 
ffffffff8001af00:	55                   	push   %rbp
ffffffff8001af01:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001af04:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff8001af08:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8001af0c:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff8001af11:	75 07                	jne    ffffffff8001af1a <ZyanListGetNodeData+0x1e>
ffffffff8001af13:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001af18:	eb 08                	jmp    ffffffff8001af22 <ZyanListGetNodeData+0x26>
ffffffff8001af1a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001af1e:	48 83 c0 10          	add    $0x10,%rax
ffffffff8001af22:	c9                   	leave  
ffffffff8001af23:	c3                   	ret    

ffffffff8001af24 <ZyanListGetNodeDataEx>:
ffffffff8001af24:	f3 0f 1e fa          	endbr64 
ffffffff8001af28:	55                   	push   %rbp
ffffffff8001af29:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001af2c:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff8001af30:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8001af34:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff8001af38:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff8001af3d:	75 07                	jne    ffffffff8001af46 <ZyanListGetNodeDataEx+0x22>
ffffffff8001af3f:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff8001af44:	eb 14                	jmp    ffffffff8001af5a <ZyanListGetNodeDataEx+0x36>
ffffffff8001af46:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001af4a:	48 8d 50 10          	lea    0x10(%rax),%rdx
ffffffff8001af4e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8001af52:	48 89 10             	mov    %rdx,(%rax)
ffffffff8001af55:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff8001af5a:	c9                   	leave  
ffffffff8001af5b:	c3                   	ret    

ffffffff8001af5c <ZyanListGetNodeDataMutable>:
ffffffff8001af5c:	f3 0f 1e fa          	endbr64 
ffffffff8001af60:	55                   	push   %rbp
ffffffff8001af61:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001af64:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff8001af68:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8001af6c:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff8001af71:	75 07                	jne    ffffffff8001af7a <ZyanListGetNodeDataMutable+0x1e>
ffffffff8001af73:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001af78:	eb 08                	jmp    ffffffff8001af82 <ZyanListGetNodeDataMutable+0x26>
ffffffff8001af7a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001af7e:	48 83 c0 10          	add    $0x10,%rax
ffffffff8001af82:	c9                   	leave  
ffffffff8001af83:	c3                   	ret    

ffffffff8001af84 <ZyanListGetNodeDataMutableEx>:
ffffffff8001af84:	f3 0f 1e fa          	endbr64 
ffffffff8001af88:	55                   	push   %rbp
ffffffff8001af89:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001af8c:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff8001af90:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8001af94:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff8001af98:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff8001af9d:	75 07                	jne    ffffffff8001afa6 <ZyanListGetNodeDataMutableEx+0x22>
ffffffff8001af9f:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff8001afa4:	eb 14                	jmp    ffffffff8001afba <ZyanListGetNodeDataMutableEx+0x36>
ffffffff8001afa6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001afaa:	48 8d 50 10          	lea    0x10(%rax),%rdx
ffffffff8001afae:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8001afb2:	48 89 10             	mov    %rdx,(%rax)
ffffffff8001afb5:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff8001afba:	c9                   	leave  
ffffffff8001afbb:	c3                   	ret    

ffffffff8001afbc <ZyanListSetNodeData>:
ffffffff8001afbc:	f3 0f 1e fa          	endbr64 
ffffffff8001afc0:	55                   	push   %rbp
ffffffff8001afc1:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001afc4:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff8001afc8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8001afcc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff8001afd0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
ffffffff8001afd4:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff8001afd9:	74 0e                	je     ffffffff8001afe9 <ZyanListSetNodeData+0x2d>
ffffffff8001afdb:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
ffffffff8001afe0:	74 07                	je     ffffffff8001afe9 <ZyanListSetNodeData+0x2d>
ffffffff8001afe2:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
ffffffff8001afe7:	75 07                	jne    ffffffff8001aff0 <ZyanListSetNodeData+0x34>
ffffffff8001afe9:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff8001afee:	eb 46                	jmp    ffffffff8001b036 <ZyanListSetNodeData+0x7a>
ffffffff8001aff0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001aff4:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff8001aff8:	48 85 c0             	test   %rax,%rax
ffffffff8001affb:	74 15                	je     ffffffff8001b012 <ZyanListSetNodeData+0x56>
ffffffff8001affd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001b001:	48 8b 50 18          	mov    0x18(%rax),%rdx
ffffffff8001b005:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8001b009:	48 83 c0 10          	add    $0x10,%rax
ffffffff8001b00d:	48 89 c7             	mov    %rax,%rdi
ffffffff8001b010:	ff d2                	call   *%rdx
ffffffff8001b012:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001b016:	48 8b 50 10          	mov    0x10(%rax),%rdx
ffffffff8001b01a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8001b01e:	48 83 c0 10          	add    $0x10,%rax
ffffffff8001b022:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
ffffffff8001b026:	48 89 ce             	mov    %rcx,%rsi
ffffffff8001b029:	48 89 c7             	mov    %rax,%rdi
ffffffff8001b02c:	e8 b8 f9 ff ff       	call   ffffffff8001a9e9 <ZYAN_MEMCPY.lto_priv.3>
ffffffff8001b031:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff8001b036:	c9                   	leave  
ffffffff8001b037:	c3                   	ret    

ffffffff8001b038 <ZyanListPushBack>:
ffffffff8001b038:	f3 0f 1e fa          	endbr64 
ffffffff8001b03c:	55                   	push   %rbp
ffffffff8001b03d:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001b040:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff8001b044:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff8001b048:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
ffffffff8001b04c:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
ffffffff8001b051:	74 07                	je     ffffffff8001b05a <ZyanListPushBack+0x22>
ffffffff8001b053:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
ffffffff8001b058:	75 0a                	jne    ffffffff8001b064 <ZyanListPushBack+0x2c>
ffffffff8001b05a:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff8001b05f:	e9 bc 00 00 00       	jmp    ffffffff8001b120 <ZyanListPushBack+0xe8>
ffffffff8001b064:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
ffffffff8001b068:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff8001b06c:	48 89 c6             	mov    %rax,%rsi
ffffffff8001b06f:	48 89 d7             	mov    %rdx,%rdi
ffffffff8001b072:	e8 cc f9 ff ff       	call   ffffffff8001aa43 <ZyanListAllocateNode>
ffffffff8001b077:	89 45 fc             	mov    %eax,-0x4(%rbp)
ffffffff8001b07a:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8001b07d:	85 c0                	test   %eax,%eax
ffffffff8001b07f:	79 08                	jns    ffffffff8001b089 <ZyanListPushBack+0x51>
ffffffff8001b081:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8001b084:	e9 97 00 00 00       	jmp    ffffffff8001b120 <ZyanListPushBack+0xe8>
ffffffff8001b089:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8001b08d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff8001b091:	48 8b 52 28          	mov    0x28(%rdx),%rdx
ffffffff8001b095:	48 89 10             	mov    %rdx,(%rax)
ffffffff8001b098:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8001b09c:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
ffffffff8001b0a3:	00 
ffffffff8001b0a4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001b0a8:	48 8b 50 10          	mov    0x10(%rax),%rdx
ffffffff8001b0ac:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8001b0b0:	48 83 c0 10          	add    $0x10,%rax
ffffffff8001b0b4:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
ffffffff8001b0b8:	48 89 ce             	mov    %rcx,%rsi
ffffffff8001b0bb:	48 89 c7             	mov    %rax,%rdi
ffffffff8001b0be:	e8 26 f9 ff ff       	call   ffffffff8001a9e9 <ZYAN_MEMCPY.lto_priv.3>
ffffffff8001b0c3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001b0c7:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff8001b0cb:	48 85 c0             	test   %rax,%rax
ffffffff8001b0ce:	75 1a                	jne    ffffffff8001b0ea <ZyanListPushBack+0xb2>
ffffffff8001b0d0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff8001b0d4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001b0d8:	48 89 50 20          	mov    %rdx,0x20(%rax)
ffffffff8001b0dc:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff8001b0e0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001b0e4:	48 89 50 28          	mov    %rdx,0x28(%rax)
ffffffff8001b0e8:	eb 1c                	jmp    ffffffff8001b106 <ZyanListPushBack+0xce>
ffffffff8001b0ea:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001b0ee:	48 8b 40 28          	mov    0x28(%rax),%rax
ffffffff8001b0f2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff8001b0f6:	48 89 50 08          	mov    %rdx,0x8(%rax)
ffffffff8001b0fa:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff8001b0fe:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001b102:	48 89 50 28          	mov    %rdx,0x28(%rax)
ffffffff8001b106:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001b10a:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff8001b10e:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffff8001b112:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001b116:	48 89 50 08          	mov    %rdx,0x8(%rax)
ffffffff8001b11a:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff8001b11f:	90                   	nop
ffffffff8001b120:	c9                   	leave  
ffffffff8001b121:	c3                   	ret    

ffffffff8001b122 <ZyanListPushFront>:
ffffffff8001b122:	f3 0f 1e fa          	endbr64 
ffffffff8001b126:	55                   	push   %rbp
ffffffff8001b127:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001b12a:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff8001b12e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff8001b132:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
ffffffff8001b136:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
ffffffff8001b13b:	74 07                	je     ffffffff8001b144 <ZyanListPushFront+0x22>
ffffffff8001b13d:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
ffffffff8001b142:	75 0a                	jne    ffffffff8001b14e <ZyanListPushFront+0x2c>
ffffffff8001b144:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff8001b149:	e9 bb 00 00 00       	jmp    ffffffff8001b209 <ZyanListPushFront+0xe7>
ffffffff8001b14e:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
ffffffff8001b152:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff8001b156:	48 89 c6             	mov    %rax,%rsi
ffffffff8001b159:	48 89 d7             	mov    %rdx,%rdi
ffffffff8001b15c:	e8 e2 f8 ff ff       	call   ffffffff8001aa43 <ZyanListAllocateNode>
ffffffff8001b161:	89 45 fc             	mov    %eax,-0x4(%rbp)
ffffffff8001b164:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8001b167:	85 c0                	test   %eax,%eax
ffffffff8001b169:	79 08                	jns    ffffffff8001b173 <ZyanListPushFront+0x51>
ffffffff8001b16b:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8001b16e:	e9 96 00 00 00       	jmp    ffffffff8001b209 <ZyanListPushFront+0xe7>
ffffffff8001b173:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8001b177:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
ffffffff8001b17e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8001b182:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff8001b186:	48 8b 52 20          	mov    0x20(%rdx),%rdx
ffffffff8001b18a:	48 89 50 08          	mov    %rdx,0x8(%rax)
ffffffff8001b18e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001b192:	48 8b 50 10          	mov    0x10(%rax),%rdx
ffffffff8001b196:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8001b19a:	48 83 c0 10          	add    $0x10,%rax
ffffffff8001b19e:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
ffffffff8001b1a2:	48 89 ce             	mov    %rcx,%rsi
ffffffff8001b1a5:	48 89 c7             	mov    %rax,%rdi
ffffffff8001b1a8:	e8 3c f8 ff ff       	call   ffffffff8001a9e9 <ZYAN_MEMCPY.lto_priv.3>
ffffffff8001b1ad:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001b1b1:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff8001b1b5:	48 85 c0             	test   %rax,%rax
ffffffff8001b1b8:	75 1a                	jne    ffffffff8001b1d4 <ZyanListPushFront+0xb2>
ffffffff8001b1ba:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff8001b1be:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001b1c2:	48 89 50 20          	mov    %rdx,0x20(%rax)
ffffffff8001b1c6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff8001b1ca:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001b1ce:	48 89 50 28          	mov    %rdx,0x28(%rax)
ffffffff8001b1d2:	eb 1b                	jmp    ffffffff8001b1ef <ZyanListPushFront+0xcd>
ffffffff8001b1d4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001b1d8:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff8001b1dc:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff8001b1e0:	48 89 10             	mov    %rdx,(%rax)
ffffffff8001b1e3:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff8001b1e7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001b1eb:	48 89 50 20          	mov    %rdx,0x20(%rax)
ffffffff8001b1ef:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001b1f3:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff8001b1f7:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffff8001b1fb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001b1ff:	48 89 50 08          	mov    %rdx,0x8(%rax)
ffffffff8001b203:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff8001b208:	90                   	nop
ffffffff8001b209:	c9                   	leave  
ffffffff8001b20a:	c3                   	ret    

ffffffff8001b20b <ZyanListEmplaceBack>:
ffffffff8001b20b:	f3 0f 1e fa          	endbr64 
ffffffff8001b20f:	55                   	push   %rbp
ffffffff8001b210:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001b213:	48 83 ec 30          	sub    $0x30,%rsp
ffffffff8001b217:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff8001b21b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
ffffffff8001b21f:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
ffffffff8001b223:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
ffffffff8001b228:	74 07                	je     ffffffff8001b231 <ZyanListEmplaceBack+0x26>
ffffffff8001b22a:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
ffffffff8001b22f:	75 0a                	jne    ffffffff8001b23b <ZyanListEmplaceBack+0x30>
ffffffff8001b231:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff8001b236:	e9 c3 00 00 00       	jmp    ffffffff8001b2fe <ZyanListEmplaceBack+0xf3>
ffffffff8001b23b:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
ffffffff8001b23f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff8001b243:	48 89 c6             	mov    %rax,%rsi
ffffffff8001b246:	48 89 d7             	mov    %rdx,%rdi
ffffffff8001b249:	e8 f5 f7 ff ff       	call   ffffffff8001aa43 <ZyanListAllocateNode>
ffffffff8001b24e:	89 45 fc             	mov    %eax,-0x4(%rbp)
ffffffff8001b251:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8001b254:	85 c0                	test   %eax,%eax
ffffffff8001b256:	79 08                	jns    ffffffff8001b260 <ZyanListEmplaceBack+0x55>
ffffffff8001b258:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8001b25b:	e9 9e 00 00 00       	jmp    ffffffff8001b2fe <ZyanListEmplaceBack+0xf3>
ffffffff8001b260:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8001b264:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff8001b268:	48 8b 52 28          	mov    0x28(%rdx),%rdx
ffffffff8001b26c:	48 89 10             	mov    %rdx,(%rax)
ffffffff8001b26f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8001b273:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
ffffffff8001b27a:	00 
ffffffff8001b27b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8001b27f:	48 8d 50 10          	lea    0x10(%rax),%rdx
ffffffff8001b283:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8001b287:	48 89 10             	mov    %rdx,(%rax)
ffffffff8001b28a:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
ffffffff8001b28f:	74 10                	je     ffffffff8001b2a1 <ZyanListEmplaceBack+0x96>
ffffffff8001b291:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8001b295:	48 8b 00             	mov    (%rax),%rax
ffffffff8001b298:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff8001b29c:	48 89 c7             	mov    %rax,%rdi
ffffffff8001b29f:	ff d2                	call   *%rdx
ffffffff8001b2a1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001b2a5:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff8001b2a9:	48 85 c0             	test   %rax,%rax
ffffffff8001b2ac:	75 1a                	jne    ffffffff8001b2c8 <ZyanListEmplaceBack+0xbd>
ffffffff8001b2ae:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff8001b2b2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001b2b6:	48 89 50 20          	mov    %rdx,0x20(%rax)
ffffffff8001b2ba:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff8001b2be:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001b2c2:	48 89 50 28          	mov    %rdx,0x28(%rax)
ffffffff8001b2c6:	eb 1c                	jmp    ffffffff8001b2e4 <ZyanListEmplaceBack+0xd9>
ffffffff8001b2c8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001b2cc:	48 8b 40 28          	mov    0x28(%rax),%rax
ffffffff8001b2d0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff8001b2d4:	48 89 50 08          	mov    %rdx,0x8(%rax)
ffffffff8001b2d8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff8001b2dc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001b2e0:	48 89 50 28          	mov    %rdx,0x28(%rax)
ffffffff8001b2e4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001b2e8:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff8001b2ec:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffff8001b2f0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001b2f4:	48 89 50 08          	mov    %rdx,0x8(%rax)
ffffffff8001b2f8:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff8001b2fd:	90                   	nop
ffffffff8001b2fe:	c9                   	leave  
ffffffff8001b2ff:	c3                   	ret    

ffffffff8001b300 <ZyanListEmplaceFront>:
ffffffff8001b300:	f3 0f 1e fa          	endbr64 
ffffffff8001b304:	55                   	push   %rbp
ffffffff8001b305:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001b308:	48 83 ec 30          	sub    $0x30,%rsp
ffffffff8001b30c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff8001b310:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
ffffffff8001b314:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
ffffffff8001b318:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
ffffffff8001b31d:	74 07                	je     ffffffff8001b326 <ZyanListEmplaceFront+0x26>
ffffffff8001b31f:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
ffffffff8001b324:	75 0a                	jne    ffffffff8001b330 <ZyanListEmplaceFront+0x30>
ffffffff8001b326:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff8001b32b:	e9 c2 00 00 00       	jmp    ffffffff8001b3f2 <ZyanListEmplaceFront+0xf2>
ffffffff8001b330:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
ffffffff8001b334:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff8001b338:	48 89 c6             	mov    %rax,%rsi
ffffffff8001b33b:	48 89 d7             	mov    %rdx,%rdi
ffffffff8001b33e:	e8 00 f7 ff ff       	call   ffffffff8001aa43 <ZyanListAllocateNode>
ffffffff8001b343:	89 45 fc             	mov    %eax,-0x4(%rbp)
ffffffff8001b346:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8001b349:	85 c0                	test   %eax,%eax
ffffffff8001b34b:	79 08                	jns    ffffffff8001b355 <ZyanListEmplaceFront+0x55>
ffffffff8001b34d:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8001b350:	e9 9d 00 00 00       	jmp    ffffffff8001b3f2 <ZyanListEmplaceFront+0xf2>
ffffffff8001b355:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8001b359:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
ffffffff8001b360:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8001b364:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff8001b368:	48 8b 52 20          	mov    0x20(%rdx),%rdx
ffffffff8001b36c:	48 89 50 08          	mov    %rdx,0x8(%rax)
ffffffff8001b370:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8001b374:	48 8d 50 10          	lea    0x10(%rax),%rdx
ffffffff8001b378:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8001b37c:	48 89 10             	mov    %rdx,(%rax)
ffffffff8001b37f:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
ffffffff8001b384:	74 10                	je     ffffffff8001b396 <ZyanListEmplaceFront+0x96>
ffffffff8001b386:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8001b38a:	48 8b 00             	mov    (%rax),%rax
ffffffff8001b38d:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff8001b391:	48 89 c7             	mov    %rax,%rdi
ffffffff8001b394:	ff d2                	call   *%rdx
ffffffff8001b396:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001b39a:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff8001b39e:	48 85 c0             	test   %rax,%rax
ffffffff8001b3a1:	75 1a                	jne    ffffffff8001b3bd <ZyanListEmplaceFront+0xbd>
ffffffff8001b3a3:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff8001b3a7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001b3ab:	48 89 50 20          	mov    %rdx,0x20(%rax)
ffffffff8001b3af:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff8001b3b3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001b3b7:	48 89 50 28          	mov    %rdx,0x28(%rax)
ffffffff8001b3bb:	eb 1b                	jmp    ffffffff8001b3d8 <ZyanListEmplaceFront+0xd8>
ffffffff8001b3bd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001b3c1:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff8001b3c5:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff8001b3c9:	48 89 10             	mov    %rdx,(%rax)
ffffffff8001b3cc:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff8001b3d0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001b3d4:	48 89 50 20          	mov    %rdx,0x20(%rax)
ffffffff8001b3d8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001b3dc:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff8001b3e0:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffff8001b3e4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001b3e8:	48 89 50 08          	mov    %rdx,0x8(%rax)
ffffffff8001b3ec:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff8001b3f1:	90                   	nop
ffffffff8001b3f2:	c9                   	leave  
ffffffff8001b3f3:	c3                   	ret    

ffffffff8001b3f4 <ZyanListPopBack>:
ffffffff8001b3f4:	f3 0f 1e fa          	endbr64 
ffffffff8001b3f8:	55                   	push   %rbp
ffffffff8001b3f9:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001b3fc:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff8001b400:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff8001b404:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
ffffffff8001b409:	75 0a                	jne    ffffffff8001b415 <ZyanListPopBack+0x21>
ffffffff8001b40b:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff8001b410:	e9 b6 00 00 00       	jmp    ffffffff8001b4cb <ZyanListPopBack+0xd7>
ffffffff8001b415:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001b419:	48 8b 40 28          	mov    0x28(%rax),%rax
ffffffff8001b41d:	48 85 c0             	test   %rax,%rax
ffffffff8001b420:	75 0a                	jne    ffffffff8001b42c <ZyanListPopBack+0x38>
ffffffff8001b422:	b8 05 00 10 80       	mov    $0x80100005,%eax
ffffffff8001b427:	e9 9f 00 00 00       	jmp    ffffffff8001b4cb <ZyanListPopBack+0xd7>
ffffffff8001b42c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001b430:	48 8b 40 28          	mov    0x28(%rax),%rax
ffffffff8001b434:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8001b438:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001b43c:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff8001b440:	48 85 c0             	test   %rax,%rax
ffffffff8001b443:	74 15                	je     ffffffff8001b45a <ZyanListPopBack+0x66>
ffffffff8001b445:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001b449:	48 8b 50 18          	mov    0x18(%rax),%rdx
ffffffff8001b44d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001b451:	48 83 c0 10          	add    $0x10,%rax
ffffffff8001b455:	48 89 c7             	mov    %rax,%rdi
ffffffff8001b458:	ff d2                	call   *%rdx
ffffffff8001b45a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001b45e:	48 8b 10             	mov    (%rax),%rdx
ffffffff8001b461:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001b465:	48 89 50 28          	mov    %rdx,0x28(%rax)
ffffffff8001b469:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001b46d:	48 8b 40 28          	mov    0x28(%rax),%rax
ffffffff8001b471:	48 85 c0             	test   %rax,%rax
ffffffff8001b474:	74 10                	je     ffffffff8001b486 <ZyanListPopBack+0x92>
ffffffff8001b476:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001b47a:	48 8b 40 28          	mov    0x28(%rax),%rax
ffffffff8001b47e:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
ffffffff8001b485:	00 
ffffffff8001b486:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001b48a:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff8001b48e:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
ffffffff8001b492:	75 10                	jne    ffffffff8001b4a4 <ZyanListPopBack+0xb0>
ffffffff8001b494:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001b498:	48 8b 50 28          	mov    0x28(%rax),%rdx
ffffffff8001b49c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001b4a0:	48 89 50 20          	mov    %rdx,0x20(%rax)
ffffffff8001b4a4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001b4a8:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff8001b4ac:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
ffffffff8001b4b0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001b4b4:	48 89 50 08          	mov    %rdx,0x8(%rax)
ffffffff8001b4b8:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff8001b4bc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001b4c0:	48 89 d6             	mov    %rdx,%rsi
ffffffff8001b4c3:	48 89 c7             	mov    %rax,%rdi
ffffffff8001b4c6:	e8 75 f6 ff ff       	call   ffffffff8001ab40 <ZyanListDeallocateNode>
ffffffff8001b4cb:	c9                   	leave  
ffffffff8001b4cc:	c3                   	ret    

ffffffff8001b4cd <ZyanListPopFront>:
ffffffff8001b4cd:	f3 0f 1e fa          	endbr64 
ffffffff8001b4d1:	55                   	push   %rbp
ffffffff8001b4d2:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001b4d5:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff8001b4d9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff8001b4dd:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
ffffffff8001b4e2:	75 0a                	jne    ffffffff8001b4ee <ZyanListPopFront+0x21>
ffffffff8001b4e4:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff8001b4e9:	e9 b6 00 00 00       	jmp    ffffffff8001b5a4 <ZyanListPopFront+0xd7>
ffffffff8001b4ee:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001b4f2:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff8001b4f6:	48 85 c0             	test   %rax,%rax
ffffffff8001b4f9:	75 0a                	jne    ffffffff8001b505 <ZyanListPopFront+0x38>
ffffffff8001b4fb:	b8 05 00 10 80       	mov    $0x80100005,%eax
ffffffff8001b500:	e9 9f 00 00 00       	jmp    ffffffff8001b5a4 <ZyanListPopFront+0xd7>
ffffffff8001b505:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001b509:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff8001b50d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8001b511:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001b515:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff8001b519:	48 85 c0             	test   %rax,%rax
ffffffff8001b51c:	74 15                	je     ffffffff8001b533 <ZyanListPopFront+0x66>
ffffffff8001b51e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001b522:	48 8b 50 18          	mov    0x18(%rax),%rdx
ffffffff8001b526:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001b52a:	48 83 c0 10          	add    $0x10,%rax
ffffffff8001b52e:	48 89 c7             	mov    %rax,%rdi
ffffffff8001b531:	ff d2                	call   *%rdx
ffffffff8001b533:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001b537:	48 8b 50 08          	mov    0x8(%rax),%rdx
ffffffff8001b53b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001b53f:	48 89 50 20          	mov    %rdx,0x20(%rax)
ffffffff8001b543:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001b547:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff8001b54b:	48 85 c0             	test   %rax,%rax
ffffffff8001b54e:	74 0f                	je     ffffffff8001b55f <ZyanListPopFront+0x92>
ffffffff8001b550:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001b554:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff8001b558:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
ffffffff8001b55f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001b563:	48 8b 40 28          	mov    0x28(%rax),%rax
ffffffff8001b567:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
ffffffff8001b56b:	75 10                	jne    ffffffff8001b57d <ZyanListPopFront+0xb0>
ffffffff8001b56d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001b571:	48 8b 50 20          	mov    0x20(%rax),%rdx
ffffffff8001b575:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001b579:	48 89 50 28          	mov    %rdx,0x28(%rax)
ffffffff8001b57d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001b581:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff8001b585:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
ffffffff8001b589:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001b58d:	48 89 50 08          	mov    %rdx,0x8(%rax)
ffffffff8001b591:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff8001b595:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001b599:	48 89 d6             	mov    %rdx,%rsi
ffffffff8001b59c:	48 89 c7             	mov    %rax,%rdi
ffffffff8001b59f:	e8 9c f5 ff ff       	call   ffffffff8001ab40 <ZyanListDeallocateNode>
ffffffff8001b5a4:	c9                   	leave  
ffffffff8001b5a5:	c3                   	ret    

ffffffff8001b5a6 <ZyanListRemove>:
ffffffff8001b5a6:	f3 0f 1e fa          	endbr64 
ffffffff8001b5aa:	55                   	push   %rbp
ffffffff8001b5ab:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001b5ae:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff8001b5b2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8001b5b6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff8001b5ba:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff8001b5bf:	c9                   	leave  
ffffffff8001b5c0:	c3                   	ret    

ffffffff8001b5c1 <ZyanListRemoveRange>:
ffffffff8001b5c1:	f3 0f 1e fa          	endbr64 
ffffffff8001b5c5:	55                   	push   %rbp
ffffffff8001b5c6:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001b5c9:	48 83 ec 18          	sub    $0x18,%rsp
ffffffff8001b5cd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8001b5d1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff8001b5d5:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
ffffffff8001b5d9:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff8001b5de:	c9                   	leave  
ffffffff8001b5df:	c3                   	ret    

ffffffff8001b5e0 <ZyanListClear>:
ffffffff8001b5e0:	f3 0f 1e fa          	endbr64 
ffffffff8001b5e4:	55                   	push   %rbp
ffffffff8001b5e5:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001b5e8:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff8001b5ec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8001b5f0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001b5f4:	ba 00 00 00 00       	mov    $0x0,%edx
ffffffff8001b5f9:	be 00 00 00 00       	mov    $0x0,%esi
ffffffff8001b5fe:	48 89 c7             	mov    %rax,%rdi
ffffffff8001b601:	e8 30 00 00 00       	call   ffffffff8001b636 <ZyanListResizeEx>
ffffffff8001b606:	c9                   	leave  
ffffffff8001b607:	c3                   	ret    

ffffffff8001b608 <ZyanListResize>:
ffffffff8001b608:	f3 0f 1e fa          	endbr64 
ffffffff8001b60c:	55                   	push   %rbp
ffffffff8001b60d:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001b610:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff8001b614:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8001b618:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff8001b61c:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
ffffffff8001b620:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001b624:	ba 00 00 00 00       	mov    $0x0,%edx
ffffffff8001b629:	48 89 ce             	mov    %rcx,%rsi
ffffffff8001b62c:	48 89 c7             	mov    %rax,%rdi
ffffffff8001b62f:	e8 02 00 00 00       	call   ffffffff8001b636 <ZyanListResizeEx>
ffffffff8001b634:	c9                   	leave  
ffffffff8001b635:	c3                   	ret    

ffffffff8001b636 <ZyanListResizeEx>:
ffffffff8001b636:	f3 0f 1e fa          	endbr64 
ffffffff8001b63a:	55                   	push   %rbp
ffffffff8001b63b:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001b63e:	48 83 ec 70          	sub    $0x70,%rsp
ffffffff8001b642:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
ffffffff8001b646:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
ffffffff8001b64a:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
ffffffff8001b64e:	48 83 7d a8 00       	cmpq   $0x0,-0x58(%rbp)
ffffffff8001b653:	75 0a                	jne    ffffffff8001b65f <ZyanListResizeEx+0x29>
ffffffff8001b655:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff8001b65a:	e9 c5 02 00 00       	jmp    ffffffff8001b924 <ZyanListResizeEx+0x2ee>
ffffffff8001b65f:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff8001b663:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff8001b667:	48 39 45 a0          	cmp    %rax,-0x60(%rbp)
ffffffff8001b66b:	75 0a                	jne    ffffffff8001b677 <ZyanListResizeEx+0x41>
ffffffff8001b66d:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff8001b672:	e9 ad 02 00 00       	jmp    ffffffff8001b924 <ZyanListResizeEx+0x2ee>
ffffffff8001b677:	48 83 7d a0 00       	cmpq   $0x0,-0x60(%rbp)
ffffffff8001b67c:	0f 85 f8 00 00 00    	jne    ffffffff8001b77a <ZyanListResizeEx+0x144>
ffffffff8001b682:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff8001b686:	48 8b 00             	mov    (%rax),%rax
ffffffff8001b689:	48 85 c0             	test   %rax,%rax
ffffffff8001b68c:	0f 95 c0             	setne  %al
ffffffff8001b68f:	88 45 d7             	mov    %al,-0x29(%rbp)
ffffffff8001b692:	80 7d d7 00          	cmpb   $0x0,-0x29(%rbp)
ffffffff8001b696:	75 0d                	jne    ffffffff8001b6a5 <ZyanListResizeEx+0x6f>
ffffffff8001b698:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff8001b69c:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff8001b6a0:	48 85 c0             	test   %rax,%rax
ffffffff8001b6a3:	74 0a                	je     ffffffff8001b6af <ZyanListResizeEx+0x79>
ffffffff8001b6a5:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff8001b6a9:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff8001b6ad:	eb 05                	jmp    ffffffff8001b6b4 <ZyanListResizeEx+0x7e>
ffffffff8001b6af:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001b6b4:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8001b6b8:	eb 7b                	jmp    ffffffff8001b735 <ZyanListResizeEx+0xff>
ffffffff8001b6ba:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff8001b6be:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff8001b6c2:	48 85 c0             	test   %rax,%rax
ffffffff8001b6c5:	74 15                	je     ffffffff8001b6dc <ZyanListResizeEx+0xa6>
ffffffff8001b6c7:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff8001b6cb:	48 8b 50 18          	mov    0x18(%rax),%rdx
ffffffff8001b6cf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001b6d3:	48 83 c0 10          	add    $0x10,%rax
ffffffff8001b6d7:	48 89 c7             	mov    %rax,%rdi
ffffffff8001b6da:	ff d2                	call   *%rdx
ffffffff8001b6dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001b6e0:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff8001b6e4:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
ffffffff8001b6e8:	80 7d d7 00          	cmpb   $0x0,-0x29(%rbp)
ffffffff8001b6ec:	74 3f                	je     ffffffff8001b72d <ZyanListResizeEx+0xf7>
ffffffff8001b6ee:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff8001b6f2:	48 8b 00             	mov    (%rax),%rax
ffffffff8001b6f5:	4c 8b 40 10          	mov    0x10(%rax),%r8
ffffffff8001b6f9:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff8001b6fd:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff8001b701:	48 8d 50 10          	lea    0x10(%rax),%rdx
ffffffff8001b705:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff8001b709:	48 8b 00             	mov    (%rax),%rax
ffffffff8001b70c:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
ffffffff8001b710:	b9 01 00 00 00       	mov    $0x1,%ecx
ffffffff8001b715:	48 89 c7             	mov    %rax,%rdi
ffffffff8001b718:	41 ff d0             	call   *%r8
ffffffff8001b71b:	89 45 c4             	mov    %eax,-0x3c(%rbp)
ffffffff8001b71e:	8b 45 c4             	mov    -0x3c(%rbp),%eax
ffffffff8001b721:	85 c0                	test   %eax,%eax
ffffffff8001b723:	79 08                	jns    ffffffff8001b72d <ZyanListResizeEx+0xf7>
ffffffff8001b725:	8b 45 c4             	mov    -0x3c(%rbp),%eax
ffffffff8001b728:	e9 f7 01 00 00       	jmp    ffffffff8001b924 <ZyanListResizeEx+0x2ee>
ffffffff8001b72d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8001b731:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8001b735:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff8001b73a:	0f 85 7a ff ff ff    	jne    ffffffff8001b6ba <ZyanListResizeEx+0x84>
ffffffff8001b740:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff8001b744:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
ffffffff8001b74b:	00 
ffffffff8001b74c:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff8001b750:	48 c7 40 20 00 00 00 	movq   $0x0,0x20(%rax)
ffffffff8001b757:	00 
ffffffff8001b758:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff8001b75c:	48 c7 40 28 00 00 00 	movq   $0x0,0x28(%rax)
ffffffff8001b763:	00 
ffffffff8001b764:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff8001b768:	48 c7 40 40 00 00 00 	movq   $0x0,0x40(%rax)
ffffffff8001b76f:	00 
ffffffff8001b770:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff8001b775:	e9 aa 01 00 00       	jmp    ffffffff8001b924 <ZyanListResizeEx+0x2ee>
ffffffff8001b77a:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff8001b77e:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff8001b782:	48 39 45 a0          	cmp    %rax,-0x60(%rbp)
ffffffff8001b786:	0f 86 e6 00 00 00    	jbe    ffffffff8001b872 <ZyanListResizeEx+0x23c>
ffffffff8001b78c:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff8001b790:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff8001b794:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff8001b798:	e9 c2 00 00 00       	jmp    ffffffff8001b85f <ZyanListResizeEx+0x229>
ffffffff8001b79d:	48 8d 45 b8          	lea    -0x48(%rbp),%rax
ffffffff8001b7a1:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
ffffffff8001b7a5:	48 89 c6             	mov    %rax,%rsi
ffffffff8001b7a8:	48 89 d7             	mov    %rdx,%rdi
ffffffff8001b7ab:	e8 93 f2 ff ff       	call   ffffffff8001aa43 <ZyanListAllocateNode>
ffffffff8001b7b0:	89 45 d8             	mov    %eax,-0x28(%rbp)
ffffffff8001b7b3:	8b 45 d8             	mov    -0x28(%rbp),%eax
ffffffff8001b7b6:	85 c0                	test   %eax,%eax
ffffffff8001b7b8:	79 08                	jns    ffffffff8001b7c2 <ZyanListResizeEx+0x18c>
ffffffff8001b7ba:	8b 45 d8             	mov    -0x28(%rbp),%eax
ffffffff8001b7bd:	e9 62 01 00 00       	jmp    ffffffff8001b924 <ZyanListResizeEx+0x2ee>
ffffffff8001b7c2:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff8001b7c6:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
ffffffff8001b7ca:	48 8b 52 28          	mov    0x28(%rdx),%rdx
ffffffff8001b7ce:	48 89 10             	mov    %rdx,(%rax)
ffffffff8001b7d1:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff8001b7d5:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
ffffffff8001b7dc:	00 
ffffffff8001b7dd:	48 83 7d 98 00       	cmpq   $0x0,-0x68(%rbp)
ffffffff8001b7e2:	74 1f                	je     ffffffff8001b803 <ZyanListResizeEx+0x1cd>
ffffffff8001b7e4:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff8001b7e8:	48 8b 50 10          	mov    0x10(%rax),%rdx
ffffffff8001b7ec:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff8001b7f0:	48 83 c0 10          	add    $0x10,%rax
ffffffff8001b7f4:	48 8b 4d 98          	mov    -0x68(%rbp),%rcx
ffffffff8001b7f8:	48 89 ce             	mov    %rcx,%rsi
ffffffff8001b7fb:	48 89 c7             	mov    %rax,%rdi
ffffffff8001b7fe:	e8 e6 f1 ff ff       	call   ffffffff8001a9e9 <ZYAN_MEMCPY.lto_priv.3>
ffffffff8001b803:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff8001b807:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff8001b80b:	48 85 c0             	test   %rax,%rax
ffffffff8001b80e:	75 1a                	jne    ffffffff8001b82a <ZyanListResizeEx+0x1f4>
ffffffff8001b810:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
ffffffff8001b814:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff8001b818:	48 89 50 20          	mov    %rdx,0x20(%rax)
ffffffff8001b81c:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
ffffffff8001b820:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff8001b824:	48 89 50 28          	mov    %rdx,0x28(%rax)
ffffffff8001b828:	eb 1c                	jmp    ffffffff8001b846 <ZyanListResizeEx+0x210>
ffffffff8001b82a:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff8001b82e:	48 8b 40 28          	mov    0x28(%rax),%rax
ffffffff8001b832:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
ffffffff8001b836:	48 89 50 08          	mov    %rdx,0x8(%rax)
ffffffff8001b83a:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
ffffffff8001b83e:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff8001b842:	48 89 50 28          	mov    %rdx,0x28(%rax)
ffffffff8001b846:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff8001b84a:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff8001b84e:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffff8001b852:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff8001b856:	48 89 50 08          	mov    %rdx,0x8(%rax)
ffffffff8001b85a:	48 83 45 f0 01       	addq   $0x1,-0x10(%rbp)
ffffffff8001b85f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8001b863:	48 3b 45 a0          	cmp    -0x60(%rbp),%rax
ffffffff8001b867:	0f 82 30 ff ff ff    	jb     ffffffff8001b79d <ZyanListResizeEx+0x167>
ffffffff8001b86d:	e9 ac 00 00 00       	jmp    ffffffff8001b91e <ZyanListResizeEx+0x2e8>
ffffffff8001b872:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff8001b876:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff8001b87a:	e9 81 00 00 00       	jmp    ffffffff8001b900 <ZyanListResizeEx+0x2ca>
ffffffff8001b87f:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff8001b883:	48 8b 40 28          	mov    0x28(%rax),%rax
ffffffff8001b887:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff8001b88b:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff8001b88f:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff8001b893:	48 85 c0             	test   %rax,%rax
ffffffff8001b896:	74 15                	je     ffffffff8001b8ad <ZyanListResizeEx+0x277>
ffffffff8001b898:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff8001b89c:	48 8b 50 18          	mov    0x18(%rax),%rdx
ffffffff8001b8a0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8001b8a4:	48 83 c0 10          	add    $0x10,%rax
ffffffff8001b8a8:	48 89 c7             	mov    %rax,%rdi
ffffffff8001b8ab:	ff d2                	call   *%rdx
ffffffff8001b8ad:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8001b8b1:	48 8b 10             	mov    (%rax),%rdx
ffffffff8001b8b4:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff8001b8b8:	48 89 50 28          	mov    %rdx,0x28(%rax)
ffffffff8001b8bc:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff8001b8c0:	48 8b 40 28          	mov    0x28(%rax),%rax
ffffffff8001b8c4:	48 85 c0             	test   %rax,%rax
ffffffff8001b8c7:	74 10                	je     ffffffff8001b8d9 <ZyanListResizeEx+0x2a3>
ffffffff8001b8c9:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff8001b8cd:	48 8b 40 28          	mov    0x28(%rax),%rax
ffffffff8001b8d1:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
ffffffff8001b8d8:	00 
ffffffff8001b8d9:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff8001b8dd:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff8001b8e1:	48 89 d6             	mov    %rdx,%rsi
ffffffff8001b8e4:	48 89 c7             	mov    %rax,%rdi
ffffffff8001b8e7:	e8 54 f2 ff ff       	call   ffffffff8001ab40 <ZyanListDeallocateNode>
ffffffff8001b8ec:	89 45 dc             	mov    %eax,-0x24(%rbp)
ffffffff8001b8ef:	8b 45 dc             	mov    -0x24(%rbp),%eax
ffffffff8001b8f2:	85 c0                	test   %eax,%eax
ffffffff8001b8f4:	79 05                	jns    ffffffff8001b8fb <ZyanListResizeEx+0x2c5>
ffffffff8001b8f6:	8b 45 dc             	mov    -0x24(%rbp),%eax
ffffffff8001b8f9:	eb 29                	jmp    ffffffff8001b924 <ZyanListResizeEx+0x2ee>
ffffffff8001b8fb:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
ffffffff8001b900:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff8001b904:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff8001b908:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
ffffffff8001b90c:	0f 82 6d ff ff ff    	jb     ffffffff8001b87f <ZyanListResizeEx+0x249>
ffffffff8001b912:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff8001b916:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
ffffffff8001b91a:	48 89 50 08          	mov    %rdx,0x8(%rax)
ffffffff8001b91e:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff8001b923:	90                   	nop
ffffffff8001b924:	c9                   	leave  
ffffffff8001b925:	c3                   	ret    

ffffffff8001b926 <ZyanListGetSize>:
ffffffff8001b926:	f3 0f 1e fa          	endbr64 
ffffffff8001b92a:	55                   	push   %rbp
ffffffff8001b92b:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001b92e:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff8001b932:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8001b936:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff8001b93a:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff8001b93f:	75 07                	jne    ffffffff8001b948 <ZyanListGetSize+0x22>
ffffffff8001b941:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff8001b946:	eb 14                	jmp    ffffffff8001b95c <ZyanListGetSize+0x36>
ffffffff8001b948:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001b94c:	48 8b 50 08          	mov    0x8(%rax),%rdx
ffffffff8001b950:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8001b954:	48 89 10             	mov    %rdx,(%rax)
ffffffff8001b957:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff8001b95c:	c9                   	leave  
ffffffff8001b95d:	c3                   	ret    

ffffffff8001b95e <ZyanAllocatorInit>:
ffffffff8001b95e:	f3 0f 1e fa          	endbr64 
ffffffff8001b962:	55                   	push   %rbp
ffffffff8001b963:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001b966:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff8001b96a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8001b96e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff8001b972:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
ffffffff8001b976:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
ffffffff8001b97a:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff8001b97f:	74 15                	je     ffffffff8001b996 <ZyanAllocatorInit+0x38>
ffffffff8001b981:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
ffffffff8001b986:	74 0e                	je     ffffffff8001b996 <ZyanAllocatorInit+0x38>
ffffffff8001b988:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
ffffffff8001b98d:	74 07                	je     ffffffff8001b996 <ZyanAllocatorInit+0x38>
ffffffff8001b98f:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
ffffffff8001b994:	75 07                	jne    ffffffff8001b99d <ZyanAllocatorInit+0x3f>
ffffffff8001b996:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff8001b99b:	eb 28                	jmp    ffffffff8001b9c5 <ZyanAllocatorInit+0x67>
ffffffff8001b99d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001b9a1:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff8001b9a5:	48 89 10             	mov    %rdx,(%rax)
ffffffff8001b9a8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001b9ac:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff8001b9b0:	48 89 50 08          	mov    %rdx,0x8(%rax)
ffffffff8001b9b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001b9b8:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff8001b9bc:	48 89 50 10          	mov    %rdx,0x10(%rax)
ffffffff8001b9c0:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff8001b9c5:	c9                   	leave  
ffffffff8001b9c6:	c3                   	ret    

ffffffff8001b9c7 <ZYAN_MEMCMP>:
ffffffff8001b9c7:	55                   	push   %rbp
ffffffff8001b9c8:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001b9cb:	48 83 ec 28          	sub    $0x28,%rsp
ffffffff8001b9cf:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff8001b9d3:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
ffffffff8001b9d7:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
ffffffff8001b9db:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001b9df:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8001b9e3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8001b9e7:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff8001b9eb:	eb 36                	jmp    ffffffff8001ba23 <ZYAN_MEMCMP+0x5c>
ffffffff8001b9ed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001b9f1:	0f b6 10             	movzbl (%rax),%edx
ffffffff8001b9f4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8001b9f8:	0f b6 00             	movzbl (%rax),%eax
ffffffff8001b9fb:	38 c2                	cmp    %al,%dl
ffffffff8001b9fd:	74 1a                	je     ffffffff8001ba19 <ZYAN_MEMCMP+0x52>
ffffffff8001b9ff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001ba03:	0f b6 00             	movzbl (%rax),%eax
ffffffff8001ba06:	0f b6 d0             	movzbl %al,%edx
ffffffff8001ba09:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8001ba0d:	0f b6 00             	movzbl (%rax),%eax
ffffffff8001ba10:	0f b6 c8             	movzbl %al,%ecx
ffffffff8001ba13:	89 d0                	mov    %edx,%eax
ffffffff8001ba15:	29 c8                	sub    %ecx,%eax
ffffffff8001ba17:	eb 20                	jmp    ffffffff8001ba39 <ZYAN_MEMCMP+0x72>
ffffffff8001ba19:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
ffffffff8001ba1e:	48 83 45 f0 01       	addq   $0x1,-0x10(%rbp)
ffffffff8001ba23:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8001ba27:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
ffffffff8001ba2b:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
ffffffff8001ba2f:	48 85 c0             	test   %rax,%rax
ffffffff8001ba32:	75 b9                	jne    ffffffff8001b9ed <ZYAN_MEMCMP+0x26>
ffffffff8001ba34:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001ba39:	c9                   	leave  
ffffffff8001ba3a:	c3                   	ret    

ffffffff8001ba3b <ZYAN_MEMSET.lto_priv.1>:
ffffffff8001ba3b:	55                   	push   %rbp
ffffffff8001ba3c:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001ba3f:	48 83 ec 28          	sub    $0x28,%rsp
ffffffff8001ba43:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff8001ba47:	89 75 e4             	mov    %esi,-0x1c(%rbp)
ffffffff8001ba4a:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
ffffffff8001ba4e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001ba52:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8001ba56:	eb 11                	jmp    ffffffff8001ba69 <ZYAN_MEMSET.lto_priv.1+0x2e>
ffffffff8001ba58:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001ba5c:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffff8001ba60:	48 89 55 f8          	mov    %rdx,-0x8(%rbp)
ffffffff8001ba64:	8b 55 e4             	mov    -0x1c(%rbp),%edx
ffffffff8001ba67:	88 10                	mov    %dl,(%rax)
ffffffff8001ba69:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8001ba6d:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
ffffffff8001ba71:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
ffffffff8001ba75:	48 85 c0             	test   %rax,%rax
ffffffff8001ba78:	75 de                	jne    ffffffff8001ba58 <ZYAN_MEMSET.lto_priv.1+0x1d>
ffffffff8001ba7a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001ba7e:	c9                   	leave  
ffffffff8001ba7f:	c3                   	ret    

ffffffff8001ba80 <ZYAN_STRCMP>:
ffffffff8001ba80:	55                   	push   %rbp
ffffffff8001ba81:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001ba84:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff8001ba88:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8001ba8c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff8001ba90:	eb 0a                	jmp    ffffffff8001ba9c <ZYAN_STRCMP+0x1c>
ffffffff8001ba92:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
ffffffff8001ba97:	48 83 45 f0 01       	addq   $0x1,-0x10(%rbp)
ffffffff8001ba9c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001baa0:	0f b6 00             	movzbl (%rax),%eax
ffffffff8001baa3:	84 c0                	test   %al,%al
ffffffff8001baa5:	74 12                	je     ffffffff8001bab9 <ZYAN_STRCMP+0x39>
ffffffff8001baa7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001baab:	0f b6 10             	movzbl (%rax),%edx
ffffffff8001baae:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8001bab2:	0f b6 00             	movzbl (%rax),%eax
ffffffff8001bab5:	38 c2                	cmp    %al,%dl
ffffffff8001bab7:	74 d9                	je     ffffffff8001ba92 <ZYAN_STRCMP+0x12>
ffffffff8001bab9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001babd:	0f b6 00             	movzbl (%rax),%eax
ffffffff8001bac0:	0f b6 d0             	movzbl %al,%edx
ffffffff8001bac3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8001bac7:	0f b6 00             	movzbl (%rax),%eax
ffffffff8001baca:	0f b6 c8             	movzbl %al,%ecx
ffffffff8001bacd:	89 d0                	mov    %edx,%eax
ffffffff8001bacf:	29 c8                	sub    %ecx,%eax
ffffffff8001bad1:	c9                   	leave  
ffffffff8001bad2:	c3                   	ret    

ffffffff8001bad3 <ZYAN_STRLEN.lto_priv.1>:
ffffffff8001bad3:	55                   	push   %rbp
ffffffff8001bad4:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001bad7:	48 83 ec 18          	sub    $0x18,%rsp
ffffffff8001badb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff8001badf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001bae3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8001bae7:	eb 05                	jmp    ffffffff8001baee <ZYAN_STRLEN.lto_priv.1+0x1b>
ffffffff8001bae9:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
ffffffff8001baee:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001baf2:	0f b6 00             	movzbl (%rax),%eax
ffffffff8001baf5:	84 c0                	test   %al,%al
ffffffff8001baf7:	75 f0                	jne    ffffffff8001bae9 <ZYAN_STRLEN.lto_priv.1+0x16>
ffffffff8001baf9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001bafd:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
ffffffff8001bb01:	c9                   	leave  
ffffffff8001bb02:	c3                   	ret    

ffffffff8001bb03 <ZyanArgParseEx>:
ffffffff8001bb03:	f3 0f 1e fa          	endbr64 
ffffffff8001bb07:	55                   	push   %rbp
ffffffff8001bb08:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001bb0b:	48 81 ec e0 00 00 00 	sub    $0xe0,%rsp
ffffffff8001bb12:	48 89 bd 38 ff ff ff 	mov    %rdi,-0xc8(%rbp)
ffffffff8001bb19:	48 89 b5 30 ff ff ff 	mov    %rsi,-0xd0(%rbp)
ffffffff8001bb20:	48 89 95 28 ff ff ff 	mov    %rdx,-0xd8(%rbp)
ffffffff8001bb27:	48 89 8d 20 ff ff ff 	mov    %rcx,-0xe0(%rbp)
ffffffff8001bb2e:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
ffffffff8001bb35:	48 8b 50 10          	mov    0x10(%rax),%rdx
ffffffff8001bb39:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
ffffffff8001bb40:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff8001bb44:	48 39 c2             	cmp    %rax,%rdx
ffffffff8001bb47:	76 0a                	jbe    ffffffff8001bb53 <ZyanArgParseEx+0x50>
ffffffff8001bb49:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff8001bb4e:	e9 cf 07 00 00       	jmp    ffffffff8001c322 <ZyanArgParseEx+0x81f>
ffffffff8001bb53:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
ffffffff8001bb5a:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff8001bb5e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8001bb62:	eb 70                	jmp    ffffffff8001bbd4 <ZyanArgParseEx+0xd1>
ffffffff8001bb64:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001bb68:	48 8b 00             	mov    (%rax),%rax
ffffffff8001bb6b:	48 85 c0             	test   %rax,%rax
ffffffff8001bb6e:	75 0a                	jne    ffffffff8001bb7a <ZyanArgParseEx+0x77>
ffffffff8001bb70:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff8001bb75:	e9 a8 07 00 00       	jmp    ffffffff8001c322 <ZyanArgParseEx+0x81f>
ffffffff8001bb7a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001bb7e:	48 8b 00             	mov    (%rax),%rax
ffffffff8001bb81:	48 89 c7             	mov    %rax,%rdi
ffffffff8001bb84:	e8 4a ff ff ff       	call   ffffffff8001bad3 <ZYAN_STRLEN.lto_priv.1>
ffffffff8001bb89:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
ffffffff8001bb8d:	48 83 7d a8 01       	cmpq   $0x1,-0x58(%rbp)
ffffffff8001bb92:	76 0e                	jbe    ffffffff8001bba2 <ZyanArgParseEx+0x9f>
ffffffff8001bb94:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001bb98:	48 8b 00             	mov    (%rax),%rax
ffffffff8001bb9b:	0f b6 00             	movzbl (%rax),%eax
ffffffff8001bb9e:	3c 2d                	cmp    $0x2d,%al
ffffffff8001bba0:	74 0a                	je     ffffffff8001bbac <ZyanArgParseEx+0xa9>
ffffffff8001bba2:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff8001bba7:	e9 76 07 00 00       	jmp    ffffffff8001c322 <ZyanArgParseEx+0x81f>
ffffffff8001bbac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001bbb0:	48 8b 00             	mov    (%rax),%rax
ffffffff8001bbb3:	48 83 c0 01          	add    $0x1,%rax
ffffffff8001bbb7:	0f b6 00             	movzbl (%rax),%eax
ffffffff8001bbba:	3c 2d                	cmp    $0x2d,%al
ffffffff8001bbbc:	74 11                	je     ffffffff8001bbcf <ZyanArgParseEx+0xcc>
ffffffff8001bbbe:	48 83 7d a8 02       	cmpq   $0x2,-0x58(%rbp)
ffffffff8001bbc3:	74 0a                	je     ffffffff8001bbcf <ZyanArgParseEx+0xcc>
ffffffff8001bbc5:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff8001bbca:	e9 53 07 00 00       	jmp    ffffffff8001c322 <ZyanArgParseEx+0x81f>
ffffffff8001bbcf:	48 83 45 f8 10       	addq   $0x10,-0x8(%rbp)
ffffffff8001bbd4:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff8001bbd9:	74 10                	je     ffffffff8001bbeb <ZyanArgParseEx+0xe8>
ffffffff8001bbdb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001bbdf:	48 8b 00             	mov    (%rax),%rax
ffffffff8001bbe2:	48 85 c0             	test   %rax,%rax
ffffffff8001bbe5:	0f 85 79 ff ff ff    	jne    ffffffff8001bb64 <ZyanArgParseEx+0x61>
ffffffff8001bbeb:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
ffffffff8001bbf2:	48 8b 50 08          	mov    0x8(%rax),%rdx
ffffffff8001bbf6:	48 8b 8d 20 ff ff ff 	mov    -0xe0(%rbp),%rcx
ffffffff8001bbfd:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
ffffffff8001bc04:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff8001bc08:	6a 04                	push   $0x4
ffffffff8001bc0a:	41 b9 02 00 00 00    	mov    $0x2,%r9d
ffffffff8001bc10:	49 89 c8             	mov    %rcx,%r8
ffffffff8001bc13:	b9 00 00 00 00       	mov    $0x0,%ecx
ffffffff8001bc18:	be 50 00 00 00       	mov    $0x50,%esi
ffffffff8001bc1d:	48 89 c7             	mov    %rax,%rdi
ffffffff8001bc20:	e8 1d da ff ff       	call   ffffffff80019642 <ZyanVectorInitEx>
ffffffff8001bc25:	48 83 c4 10          	add    $0x10,%rsp
ffffffff8001bc29:	89 45 a4             	mov    %eax,-0x5c(%rbp)
ffffffff8001bc2c:	8b 45 a4             	mov    -0x5c(%rbp),%eax
ffffffff8001bc2f:	85 c0                	test   %eax,%eax
ffffffff8001bc31:	79 08                	jns    ffffffff8001bc3b <ZyanArgParseEx+0x138>
ffffffff8001bc33:	8b 45 a4             	mov    -0x5c(%rbp),%eax
ffffffff8001bc36:	e9 e7 06 00 00       	jmp    ffffffff8001c322 <ZyanArgParseEx+0x81f>
ffffffff8001bc3b:	c6 45 f3 01          	movb   $0x1,-0xd(%rbp)
ffffffff8001bc3f:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
ffffffff8001bc46:	00 
ffffffff8001bc47:	48 c7 45 e0 01 00 00 	movq   $0x1,-0x20(%rbp)
ffffffff8001bc4e:	00 
ffffffff8001bc4f:	e9 2c 05 00 00       	jmp    ffffffff8001c180 <ZyanArgParseEx+0x67d>
ffffffff8001bc54:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
ffffffff8001bc5b:	48 8b 10             	mov    (%rax),%rdx
ffffffff8001bc5e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8001bc62:	48 c1 e0 03          	shl    $0x3,%rax
ffffffff8001bc66:	48 01 d0             	add    %rdx,%rax
ffffffff8001bc69:	48 8b 00             	mov    (%rax),%rax
ffffffff8001bc6c:	48 89 45 90          	mov    %rax,-0x70(%rbp)
ffffffff8001bc70:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
ffffffff8001bc77:	48 8b 10             	mov    (%rax),%rdx
ffffffff8001bc7a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8001bc7e:	48 c1 e0 03          	shl    $0x3,%rax
ffffffff8001bc82:	48 01 d0             	add    %rdx,%rax
ffffffff8001bc85:	48 8b 00             	mov    (%rax),%rax
ffffffff8001bc88:	48 89 c7             	mov    %rax,%rdi
ffffffff8001bc8b:	e8 43 fe ff ff       	call   ffffffff8001bad3 <ZYAN_STRLEN.lto_priv.1>
ffffffff8001bc90:	48 89 45 88          	mov    %rax,-0x78(%rbp)
ffffffff8001bc94:	80 7d f3 00          	cmpb   $0x0,-0xd(%rbp)
ffffffff8001bc98:	0f 84 b8 01 00 00    	je     ffffffff8001be56 <ZyanArgParseEx+0x353>
ffffffff8001bc9e:	48 83 7d 88 01       	cmpq   $0x1,-0x78(%rbp)
ffffffff8001bca3:	0f 86 ad 01 00 00    	jbe    ffffffff8001be56 <ZyanArgParseEx+0x353>
ffffffff8001bca9:	48 8b 45 90          	mov    -0x70(%rbp),%rax
ffffffff8001bcad:	ba 02 00 00 00       	mov    $0x2,%edx
ffffffff8001bcb2:	48 8d 0d 8d c8 01 00 	lea    0x1c88d(%rip),%rcx        # ffffffff80038546 <g_stivale2_header+0x1546>
ffffffff8001bcb9:	48 89 ce             	mov    %rcx,%rsi
ffffffff8001bcbc:	48 89 c7             	mov    %rax,%rdi
ffffffff8001bcbf:	e8 03 fd ff ff       	call   ffffffff8001b9c7 <ZYAN_MEMCMP>
ffffffff8001bcc4:	85 c0                	test   %eax,%eax
ffffffff8001bcc6:	0f 85 8a 01 00 00    	jne    ffffffff8001be56 <ZyanArgParseEx+0x353>
ffffffff8001bccc:	48 83 7d 88 02       	cmpq   $0x2,-0x78(%rbp)
ffffffff8001bcd1:	75 09                	jne    ffffffff8001bcdc <ZyanArgParseEx+0x1d9>
ffffffff8001bcd3:	c6 45 f3 00          	movb   $0x0,-0xd(%rbp)
ffffffff8001bcd7:	e9 98 04 00 00       	jmp    ffffffff8001c174 <ZyanArgParseEx+0x671>
ffffffff8001bcdc:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
ffffffff8001bce3:	48 8b 8d 30 ff ff ff 	mov    -0xd0(%rbp),%rcx
ffffffff8001bcea:	ba 00 00 00 00       	mov    $0x0,%edx
ffffffff8001bcef:	48 89 c6             	mov    %rax,%rsi
ffffffff8001bcf2:	48 89 cf             	mov    %rcx,%rdi
ffffffff8001bcf5:	e8 e4 e1 ff ff       	call   ffffffff80019ede <ZyanVectorEmplace>
ffffffff8001bcfa:	89 45 84             	mov    %eax,-0x7c(%rbp)
ffffffff8001bcfd:	8b 45 84             	mov    -0x7c(%rbp),%eax
ffffffff8001bd00:	85 c0                	test   %eax,%eax
ffffffff8001bd02:	79 08                	jns    ffffffff8001bd0c <ZyanArgParseEx+0x209>
ffffffff8001bd04:	8b 45 84             	mov    -0x7c(%rbp),%eax
ffffffff8001bd07:	e9 16 06 00 00       	jmp    ffffffff8001c322 <ZyanArgParseEx+0x81f>
ffffffff8001bd0c:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
ffffffff8001bd13:	ba 50 00 00 00       	mov    $0x50,%edx
ffffffff8001bd18:	be 00 00 00 00       	mov    $0x0,%esi
ffffffff8001bd1d:	48 89 c7             	mov    %rax,%rdi
ffffffff8001bd20:	e8 16 fd ff ff       	call   ffffffff8001ba3b <ZYAN_MEMSET.lto_priv.1>
ffffffff8001bd25:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
ffffffff8001bd2c:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff8001bd30:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
ffffffff8001bd34:	eb 2f                	jmp    ffffffff8001bd65 <ZyanArgParseEx+0x262>
ffffffff8001bd36:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8001bd3a:	48 8b 00             	mov    (%rax),%rax
ffffffff8001bd3d:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
ffffffff8001bd41:	48 89 d6             	mov    %rdx,%rsi
ffffffff8001bd44:	48 89 c7             	mov    %rax,%rdi
ffffffff8001bd47:	e8 34 fd ff ff       	call   ffffffff8001ba80 <ZYAN_STRCMP>
ffffffff8001bd4c:	85 c0                	test   %eax,%eax
ffffffff8001bd4e:	75 10                	jne    ffffffff8001bd60 <ZyanArgParseEx+0x25d>
ffffffff8001bd50:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
ffffffff8001bd57:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff8001bd5b:	48 89 10             	mov    %rdx,(%rax)
ffffffff8001bd5e:	eb 18                	jmp    ffffffff8001bd78 <ZyanArgParseEx+0x275>
ffffffff8001bd60:	48 83 45 d8 10       	addq   $0x10,-0x28(%rbp)
ffffffff8001bd65:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
ffffffff8001bd6a:	74 0c                	je     ffffffff8001bd78 <ZyanArgParseEx+0x275>
ffffffff8001bd6c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8001bd70:	48 8b 00             	mov    (%rax),%rax
ffffffff8001bd73:	48 85 c0             	test   %rax,%rax
ffffffff8001bd76:	75 be                	jne    ffffffff8001bd36 <ZyanArgParseEx+0x233>
ffffffff8001bd78:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
ffffffff8001bd7f:	48 8b 00             	mov    (%rax),%rax
ffffffff8001bd82:	48 85 c0             	test   %rax,%rax
ffffffff8001bd85:	75 28                	jne    ffffffff8001bdaf <ZyanArgParseEx+0x2ac>
ffffffff8001bd87:	c7 45 f4 00 00 30 80 	movl   $0x80300000,-0xc(%rbp)
ffffffff8001bd8e:	48 83 bd 28 ff ff ff 	cmpq   $0x0,-0xd8(%rbp)
ffffffff8001bd95:	00 
ffffffff8001bd96:	0f 84 4b 05 00 00    	je     ffffffff8001c2e7 <ZyanArgParseEx+0x7e4>
ffffffff8001bd9c:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
ffffffff8001bda3:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
ffffffff8001bda7:	48 89 10             	mov    %rdx,(%rax)
ffffffff8001bdaa:	e9 38 05 00 00       	jmp    ffffffff8001c2e7 <ZyanArgParseEx+0x7e4>
ffffffff8001bdaf:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
ffffffff8001bdb6:	48 8b 00             	mov    (%rax),%rax
ffffffff8001bdb9:	0f b6 40 08          	movzbl 0x8(%rax),%eax
ffffffff8001bdbd:	84 c0                	test   %al,%al
ffffffff8001bdbf:	0f 85 af 03 00 00    	jne    ffffffff8001c174 <ZyanArgParseEx+0x671>
ffffffff8001bdc5:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
ffffffff8001bdcc:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff8001bdd0:	48 83 e8 01          	sub    $0x1,%rax
ffffffff8001bdd4:	48 39 45 e0          	cmp    %rax,-0x20(%rbp)
ffffffff8001bdd8:	75 28                	jne    ffffffff8001be02 <ZyanArgParseEx+0x2ff>
ffffffff8001bdda:	c7 45 f4 03 00 30 80 	movl   $0x80300003,-0xc(%rbp)
ffffffff8001bde1:	48 83 bd 28 ff ff ff 	cmpq   $0x0,-0xd8(%rbp)
ffffffff8001bde8:	00 
ffffffff8001bde9:	0f 84 fb 04 00 00    	je     ffffffff8001c2ea <ZyanArgParseEx+0x7e7>
ffffffff8001bdef:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
ffffffff8001bdf6:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
ffffffff8001bdfa:	48 89 10             	mov    %rdx,(%rax)
ffffffff8001bdfd:	e9 e8 04 00 00       	jmp    ffffffff8001c2ea <ZyanArgParseEx+0x7e7>
ffffffff8001be02:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
ffffffff8001be09:	c6 40 08 01          	movb   $0x1,0x8(%rax)
ffffffff8001be0d:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
ffffffff8001be14:	48 8b 10             	mov    (%rax),%rdx
ffffffff8001be17:	48 83 45 e0 01       	addq   $0x1,-0x20(%rbp)
ffffffff8001be1c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8001be20:	48 c1 e0 03          	shl    $0x3,%rax
ffffffff8001be24:	48 01 d0             	add    %rdx,%rax
ffffffff8001be27:	48 8b 10             	mov    (%rax),%rdx
ffffffff8001be2a:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
ffffffff8001be31:	48 83 c0 10          	add    $0x10,%rax
ffffffff8001be35:	48 89 d6             	mov    %rdx,%rsi
ffffffff8001be38:	48 89 c7             	mov    %rax,%rdi
ffffffff8001be3b:	e8 b4 be ff ff       	call   ffffffff80017cf4 <ZyanStringViewInsideBuffer>
ffffffff8001be40:	89 45 80             	mov    %eax,-0x80(%rbp)
ffffffff8001be43:	8b 45 80             	mov    -0x80(%rbp),%eax
ffffffff8001be46:	85 c0                	test   %eax,%eax
ffffffff8001be48:	0f 89 26 03 00 00    	jns    ffffffff8001c174 <ZyanArgParseEx+0x671>
ffffffff8001be4e:	8b 45 80             	mov    -0x80(%rbp),%eax
ffffffff8001be51:	e9 cc 04 00 00       	jmp    ffffffff8001c322 <ZyanArgParseEx+0x81f>
ffffffff8001be56:	80 7d f3 00          	cmpb   $0x0,-0xd(%rbp)
ffffffff8001be5a:	0f 84 44 02 00 00    	je     ffffffff8001c0a4 <ZyanArgParseEx+0x5a1>
ffffffff8001be60:	48 83 7d 88 01       	cmpq   $0x1,-0x78(%rbp)
ffffffff8001be65:	0f 86 39 02 00 00    	jbe    ffffffff8001c0a4 <ZyanArgParseEx+0x5a1>
ffffffff8001be6b:	48 8b 45 90          	mov    -0x70(%rbp),%rax
ffffffff8001be6f:	0f b6 00             	movzbl (%rax),%eax
ffffffff8001be72:	3c 2d                	cmp    $0x2d,%al
ffffffff8001be74:	0f 85 2a 02 00 00    	jne    ffffffff8001c0a4 <ZyanArgParseEx+0x5a1>
ffffffff8001be7a:	48 8b 45 90          	mov    -0x70(%rbp),%rax
ffffffff8001be7e:	48 83 c0 01          	add    $0x1,%rax
ffffffff8001be82:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
ffffffff8001be86:	e9 0a 02 00 00       	jmp    ffffffff8001c095 <ZyanArgParseEx+0x592>
ffffffff8001be8b:	48 8d 85 48 ff ff ff 	lea    -0xb8(%rbp),%rax
ffffffff8001be92:	48 8b 8d 30 ff ff ff 	mov    -0xd0(%rbp),%rcx
ffffffff8001be99:	ba 00 00 00 00       	mov    $0x0,%edx
ffffffff8001be9e:	48 89 c6             	mov    %rax,%rsi
ffffffff8001bea1:	48 89 cf             	mov    %rcx,%rdi
ffffffff8001bea4:	e8 35 e0 ff ff       	call   ffffffff80019ede <ZyanVectorEmplace>
ffffffff8001bea9:	89 85 7c ff ff ff    	mov    %eax,-0x84(%rbp)
ffffffff8001beaf:	8b 85 7c ff ff ff    	mov    -0x84(%rbp),%eax
ffffffff8001beb5:	85 c0                	test   %eax,%eax
ffffffff8001beb7:	79 0b                	jns    ffffffff8001bec4 <ZyanArgParseEx+0x3c1>
ffffffff8001beb9:	8b 85 7c ff ff ff    	mov    -0x84(%rbp),%eax
ffffffff8001bebf:	e9 5e 04 00 00       	jmp    ffffffff8001c322 <ZyanArgParseEx+0x81f>
ffffffff8001bec4:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
ffffffff8001becb:	ba 50 00 00 00       	mov    $0x50,%edx
ffffffff8001bed0:	be 00 00 00 00       	mov    $0x0,%esi
ffffffff8001bed5:	48 89 c7             	mov    %rax,%rdi
ffffffff8001bed8:	e8 5e fb ff ff       	call   ffffffff8001ba3b <ZYAN_MEMSET.lto_priv.1>
ffffffff8001bedd:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
ffffffff8001bee4:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff8001bee8:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
ffffffff8001beec:	eb 51                	jmp    ffffffff8001bf3f <ZyanArgParseEx+0x43c>
ffffffff8001beee:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8001bef2:	48 8b 00             	mov    (%rax),%rax
ffffffff8001bef5:	48 89 c7             	mov    %rax,%rdi
ffffffff8001bef8:	e8 d6 fb ff ff       	call   ffffffff8001bad3 <ZYAN_STRLEN.lto_priv.1>
ffffffff8001befd:	48 83 f8 02          	cmp    $0x2,%rax
ffffffff8001bf01:	75 37                	jne    ffffffff8001bf3a <ZyanArgParseEx+0x437>
ffffffff8001bf03:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8001bf07:	48 8b 00             	mov    (%rax),%rax
ffffffff8001bf0a:	0f b6 00             	movzbl (%rax),%eax
ffffffff8001bf0d:	3c 2d                	cmp    $0x2d,%al
ffffffff8001bf0f:	75 29                	jne    ffffffff8001bf3a <ZyanArgParseEx+0x437>
ffffffff8001bf11:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8001bf15:	48 8b 00             	mov    (%rax),%rax
ffffffff8001bf18:	48 83 c0 01          	add    $0x1,%rax
ffffffff8001bf1c:	0f b6 10             	movzbl (%rax),%edx
ffffffff8001bf1f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8001bf23:	0f b6 00             	movzbl (%rax),%eax
ffffffff8001bf26:	38 c2                	cmp    %al,%dl
ffffffff8001bf28:	75 10                	jne    ffffffff8001bf3a <ZyanArgParseEx+0x437>
ffffffff8001bf2a:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
ffffffff8001bf31:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
ffffffff8001bf35:	48 89 10             	mov    %rdx,(%rax)
ffffffff8001bf38:	eb 18                	jmp    ffffffff8001bf52 <ZyanArgParseEx+0x44f>
ffffffff8001bf3a:	48 83 45 c8 10       	addq   $0x10,-0x38(%rbp)
ffffffff8001bf3f:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
ffffffff8001bf44:	74 0c                	je     ffffffff8001bf52 <ZyanArgParseEx+0x44f>
ffffffff8001bf46:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8001bf4a:	48 8b 00             	mov    (%rax),%rax
ffffffff8001bf4d:	48 85 c0             	test   %rax,%rax
ffffffff8001bf50:	75 9c                	jne    ffffffff8001beee <ZyanArgParseEx+0x3eb>
ffffffff8001bf52:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
ffffffff8001bf59:	48 8b 00             	mov    (%rax),%rax
ffffffff8001bf5c:	48 85 c0             	test   %rax,%rax
ffffffff8001bf5f:	75 28                	jne    ffffffff8001bf89 <ZyanArgParseEx+0x486>
ffffffff8001bf61:	c7 45 f4 00 00 30 80 	movl   $0x80300000,-0xc(%rbp)
ffffffff8001bf68:	48 83 bd 28 ff ff ff 	cmpq   $0x0,-0xd8(%rbp)
ffffffff8001bf6f:	00 
ffffffff8001bf70:	0f 84 77 03 00 00    	je     ffffffff8001c2ed <ZyanArgParseEx+0x7ea>
ffffffff8001bf76:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
ffffffff8001bf7d:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
ffffffff8001bf81:	48 89 10             	mov    %rdx,(%rax)
ffffffff8001bf84:	e9 64 03 00 00       	jmp    ffffffff8001c2ed <ZyanArgParseEx+0x7ea>
ffffffff8001bf89:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
ffffffff8001bf90:	48 8b 00             	mov    (%rax),%rax
ffffffff8001bf93:	0f b6 40 08          	movzbl 0x8(%rax),%eax
ffffffff8001bf97:	84 c0                	test   %al,%al
ffffffff8001bf99:	0f 85 f1 00 00 00    	jne    ffffffff8001c090 <ZyanArgParseEx+0x58d>
ffffffff8001bf9f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8001bfa3:	48 83 c0 01          	add    $0x1,%rax
ffffffff8001bfa7:	0f b6 00             	movzbl (%rax),%eax
ffffffff8001bfaa:	84 c0                	test   %al,%al
ffffffff8001bfac:	74 48                	je     ffffffff8001bff6 <ZyanArgParseEx+0x4f3>
ffffffff8001bfae:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
ffffffff8001bfb5:	c6 40 08 01          	movb   $0x1,0x8(%rax)
ffffffff8001bfb9:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8001bfbd:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffff8001bfc1:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
ffffffff8001bfc8:	48 83 c0 10          	add    $0x10,%rax
ffffffff8001bfcc:	48 89 d6             	mov    %rdx,%rsi
ffffffff8001bfcf:	48 89 c7             	mov    %rax,%rdi
ffffffff8001bfd2:	e8 1d bd ff ff       	call   ffffffff80017cf4 <ZyanStringViewInsideBuffer>
ffffffff8001bfd7:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%rbp)
ffffffff8001bfdd:	8b 85 74 ff ff ff    	mov    -0x8c(%rbp),%eax
ffffffff8001bfe3:	85 c0                	test   %eax,%eax
ffffffff8001bfe5:	0f 89 8c 01 00 00    	jns    ffffffff8001c177 <ZyanArgParseEx+0x674>
ffffffff8001bfeb:	8b 85 74 ff ff ff    	mov    -0x8c(%rbp),%eax
ffffffff8001bff1:	e9 2c 03 00 00       	jmp    ffffffff8001c322 <ZyanArgParseEx+0x81f>
ffffffff8001bff6:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
ffffffff8001bffd:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff8001c001:	48 83 e8 01          	sub    $0x1,%rax
ffffffff8001c005:	48 39 45 e0          	cmp    %rax,-0x20(%rbp)
ffffffff8001c009:	75 28                	jne    ffffffff8001c033 <ZyanArgParseEx+0x530>
ffffffff8001c00b:	c7 45 f4 03 00 30 80 	movl   $0x80300003,-0xc(%rbp)
ffffffff8001c012:	48 83 bd 28 ff ff ff 	cmpq   $0x0,-0xd8(%rbp)
ffffffff8001c019:	00 
ffffffff8001c01a:	0f 84 d0 02 00 00    	je     ffffffff8001c2f0 <ZyanArgParseEx+0x7ed>
ffffffff8001c020:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
ffffffff8001c027:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
ffffffff8001c02b:	48 89 10             	mov    %rdx,(%rax)
ffffffff8001c02e:	e9 bd 02 00 00       	jmp    ffffffff8001c2f0 <ZyanArgParseEx+0x7ed>
ffffffff8001c033:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
ffffffff8001c03a:	c6 40 08 01          	movb   $0x1,0x8(%rax)
ffffffff8001c03e:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
ffffffff8001c045:	48 8b 10             	mov    (%rax),%rdx
ffffffff8001c048:	48 83 45 e0 01       	addq   $0x1,-0x20(%rbp)
ffffffff8001c04d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8001c051:	48 c1 e0 03          	shl    $0x3,%rax
ffffffff8001c055:	48 01 d0             	add    %rdx,%rax
ffffffff8001c058:	48 8b 10             	mov    (%rax),%rdx
ffffffff8001c05b:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
ffffffff8001c062:	48 83 c0 10          	add    $0x10,%rax
ffffffff8001c066:	48 89 d6             	mov    %rdx,%rsi
ffffffff8001c069:	48 89 c7             	mov    %rax,%rdi
ffffffff8001c06c:	e8 83 bc ff ff       	call   ffffffff80017cf4 <ZyanStringViewInsideBuffer>
ffffffff8001c071:	89 85 78 ff ff ff    	mov    %eax,-0x88(%rbp)
ffffffff8001c077:	8b 85 78 ff ff ff    	mov    -0x88(%rbp),%eax
ffffffff8001c07d:	85 c0                	test   %eax,%eax
ffffffff8001c07f:	0f 89 f2 00 00 00    	jns    ffffffff8001c177 <ZyanArgParseEx+0x674>
ffffffff8001c085:	8b 85 78 ff ff ff    	mov    -0x88(%rbp),%eax
ffffffff8001c08b:	e9 92 02 00 00       	jmp    ffffffff8001c322 <ZyanArgParseEx+0x81f>
ffffffff8001c090:	48 83 45 d0 01       	addq   $0x1,-0x30(%rbp)
ffffffff8001c095:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8001c099:	0f b6 00             	movzbl (%rax),%eax
ffffffff8001c09c:	84 c0                	test   %al,%al
ffffffff8001c09e:	0f 85 e7 fd ff ff    	jne    ffffffff8001be8b <ZyanArgParseEx+0x388>
ffffffff8001c0a4:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
ffffffff8001c0a9:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
ffffffff8001c0b0:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff8001c0b4:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
ffffffff8001c0b8:	76 28                	jbe    ffffffff8001c0e2 <ZyanArgParseEx+0x5df>
ffffffff8001c0ba:	c7 45 f4 02 00 30 80 	movl   $0x80300002,-0xc(%rbp)
ffffffff8001c0c1:	48 83 bd 28 ff ff ff 	cmpq   $0x0,-0xd8(%rbp)
ffffffff8001c0c8:	00 
ffffffff8001c0c9:	0f 84 24 02 00 00    	je     ffffffff8001c2f3 <ZyanArgParseEx+0x7f0>
ffffffff8001c0cf:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
ffffffff8001c0d6:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
ffffffff8001c0da:	48 89 10             	mov    %rdx,(%rax)
ffffffff8001c0dd:	e9 11 02 00 00       	jmp    ffffffff8001c2f3 <ZyanArgParseEx+0x7f0>
ffffffff8001c0e2:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
ffffffff8001c0e9:	48 8b 8d 30 ff ff ff 	mov    -0xd0(%rbp),%rcx
ffffffff8001c0f0:	ba 00 00 00 00       	mov    $0x0,%edx
ffffffff8001c0f5:	48 89 c6             	mov    %rax,%rsi
ffffffff8001c0f8:	48 89 cf             	mov    %rcx,%rdi
ffffffff8001c0fb:	e8 de dd ff ff       	call   ffffffff80019ede <ZyanVectorEmplace>
ffffffff8001c100:	89 85 70 ff ff ff    	mov    %eax,-0x90(%rbp)
ffffffff8001c106:	8b 85 70 ff ff ff    	mov    -0x90(%rbp),%eax
ffffffff8001c10c:	85 c0                	test   %eax,%eax
ffffffff8001c10e:	79 0b                	jns    ffffffff8001c11b <ZyanArgParseEx+0x618>
ffffffff8001c110:	8b 85 70 ff ff ff    	mov    -0x90(%rbp),%eax
ffffffff8001c116:	e9 07 02 00 00       	jmp    ffffffff8001c322 <ZyanArgParseEx+0x81f>
ffffffff8001c11b:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
ffffffff8001c122:	ba 50 00 00 00       	mov    $0x50,%edx
ffffffff8001c127:	be 00 00 00 00       	mov    $0x0,%esi
ffffffff8001c12c:	48 89 c7             	mov    %rax,%rdi
ffffffff8001c12f:	e8 07 f9 ff ff       	call   ffffffff8001ba3b <ZYAN_MEMSET.lto_priv.1>
ffffffff8001c134:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
ffffffff8001c13b:	c6 40 08 01          	movb   $0x1,0x8(%rax)
ffffffff8001c13f:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
ffffffff8001c146:	48 83 c0 10          	add    $0x10,%rax
ffffffff8001c14a:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
ffffffff8001c14e:	48 89 d6             	mov    %rdx,%rsi
ffffffff8001c151:	48 89 c7             	mov    %rax,%rdi
ffffffff8001c154:	e8 9b bb ff ff       	call   ffffffff80017cf4 <ZyanStringViewInsideBuffer>
ffffffff8001c159:	89 85 6c ff ff ff    	mov    %eax,-0x94(%rbp)
ffffffff8001c15f:	8b 85 6c ff ff ff    	mov    -0x94(%rbp),%eax
ffffffff8001c165:	85 c0                	test   %eax,%eax
ffffffff8001c167:	79 11                	jns    ffffffff8001c17a <ZyanArgParseEx+0x677>
ffffffff8001c169:	8b 85 6c ff ff ff    	mov    -0x94(%rbp),%eax
ffffffff8001c16f:	e9 ae 01 00 00       	jmp    ffffffff8001c322 <ZyanArgParseEx+0x81f>
ffffffff8001c174:	90                   	nop
ffffffff8001c175:	eb 04                	jmp    ffffffff8001c17b <ZyanArgParseEx+0x678>
ffffffff8001c177:	90                   	nop
ffffffff8001c178:	eb 01                	jmp    ffffffff8001c17b <ZyanArgParseEx+0x678>
ffffffff8001c17a:	90                   	nop
ffffffff8001c17b:	48 83 45 e0 01       	addq   $0x1,-0x20(%rbp)
ffffffff8001c180:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
ffffffff8001c187:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff8001c18b:	48 39 45 e0          	cmp    %rax,-0x20(%rbp)
ffffffff8001c18f:	0f 82 bf fa ff ff    	jb     ffffffff8001bc54 <ZyanArgParseEx+0x151>
ffffffff8001c195:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
ffffffff8001c19c:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff8001c1a0:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
ffffffff8001c1a4:	73 0c                	jae    ffffffff8001c1b2 <ZyanArgParseEx+0x6af>
ffffffff8001c1a6:	c7 45 f4 01 00 30 80 	movl   $0x80300001,-0xc(%rbp)
ffffffff8001c1ad:	e9 45 01 00 00       	jmp    ffffffff8001c2f7 <ZyanArgParseEx+0x7f4>
ffffffff8001c1b2:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
ffffffff8001c1b9:	48 8b 95 30 ff ff ff 	mov    -0xd0(%rbp),%rdx
ffffffff8001c1c0:	48 89 c6             	mov    %rax,%rsi
ffffffff8001c1c3:	48 89 d7             	mov    %rdx,%rdi
ffffffff8001c1c6:	e8 e6 e7 ff ff       	call   ffffffff8001a9b1 <ZyanVectorGetSize>
ffffffff8001c1cb:	89 45 a0             	mov    %eax,-0x60(%rbp)
ffffffff8001c1ce:	8b 45 a0             	mov    -0x60(%rbp),%eax
ffffffff8001c1d1:	85 c0                	test   %eax,%eax
ffffffff8001c1d3:	79 08                	jns    ffffffff8001c1dd <ZyanArgParseEx+0x6da>
ffffffff8001c1d5:	8b 45 a0             	mov    -0x60(%rbp),%eax
ffffffff8001c1d8:	e9 45 01 00 00       	jmp    ffffffff8001c322 <ZyanArgParseEx+0x81f>
ffffffff8001c1dd:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
ffffffff8001c1e4:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff8001c1e8:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
ffffffff8001c1ec:	e9 c0 00 00 00       	jmp    ffffffff8001c2b1 <ZyanArgParseEx+0x7ae>
ffffffff8001c1f1:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8001c1f5:	0f b6 40 09          	movzbl 0x9(%rax),%eax
ffffffff8001c1f9:	84 c0                	test   %al,%al
ffffffff8001c1fb:	0f 84 aa 00 00 00    	je     ffffffff8001c2ab <ZyanArgParseEx+0x7a8>
ffffffff8001c201:	c6 45 bf 00          	movb   $0x0,-0x41(%rbp)
ffffffff8001c205:	48 c7 45 b0 00 00 00 	movq   $0x0,-0x50(%rbp)
ffffffff8001c20c:	00 
ffffffff8001c20d:	eb 65                	jmp    ffffffff8001c274 <ZyanArgParseEx+0x771>
ffffffff8001c20f:	48 c7 85 58 ff ff ff 	movq   $0x0,-0xa8(%rbp)
ffffffff8001c216:	00 00 00 00 
ffffffff8001c21a:	48 8d 85 58 ff ff ff 	lea    -0xa8(%rbp),%rax
ffffffff8001c221:	48 8b 75 b0          	mov    -0x50(%rbp),%rsi
ffffffff8001c225:	48 8b 8d 30 ff ff ff 	mov    -0xd0(%rbp),%rcx
ffffffff8001c22c:	48 89 c2             	mov    %rax,%rdx
ffffffff8001c22f:	48 89 cf             	mov    %rcx,%rdi
ffffffff8001c232:	e8 a2 d8 ff ff       	call   ffffffff80019ad9 <ZyanVectorGetPointer>
ffffffff8001c237:	89 45 9c             	mov    %eax,-0x64(%rbp)
ffffffff8001c23a:	8b 45 9c             	mov    -0x64(%rbp),%eax
ffffffff8001c23d:	85 c0                	test   %eax,%eax
ffffffff8001c23f:	79 08                	jns    ffffffff8001c249 <ZyanArgParseEx+0x746>
ffffffff8001c241:	8b 45 9c             	mov    -0x64(%rbp),%eax
ffffffff8001c244:	e9 d9 00 00 00       	jmp    ffffffff8001c322 <ZyanArgParseEx+0x81f>
ffffffff8001c249:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
ffffffff8001c250:	48 8b 00             	mov    (%rax),%rax
ffffffff8001c253:	48 85 c0             	test   %rax,%rax
ffffffff8001c256:	74 16                	je     ffffffff8001c26e <ZyanArgParseEx+0x76b>
ffffffff8001c258:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
ffffffff8001c25f:	48 8b 00             	mov    (%rax),%rax
ffffffff8001c262:	48 39 45 c0          	cmp    %rax,-0x40(%rbp)
ffffffff8001c266:	75 07                	jne    ffffffff8001c26f <ZyanArgParseEx+0x76c>
ffffffff8001c268:	c6 45 bf 01          	movb   $0x1,-0x41(%rbp)
ffffffff8001c26c:	eb 13                	jmp    ffffffff8001c281 <ZyanArgParseEx+0x77e>
ffffffff8001c26e:	90                   	nop
ffffffff8001c26f:	48 83 45 b0 01       	addq   $0x1,-0x50(%rbp)
ffffffff8001c274:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
ffffffff8001c27b:	48 39 45 b0          	cmp    %rax,-0x50(%rbp)
ffffffff8001c27f:	72 8e                	jb     ffffffff8001c20f <ZyanArgParseEx+0x70c>
ffffffff8001c281:	80 7d bf 00          	cmpb   $0x0,-0x41(%rbp)
ffffffff8001c285:	75 25                	jne    ffffffff8001c2ac <ZyanArgParseEx+0x7a9>
ffffffff8001c287:	c7 45 f4 04 00 30 80 	movl   $0x80300004,-0xc(%rbp)
ffffffff8001c28e:	48 83 bd 28 ff ff ff 	cmpq   $0x0,-0xd8(%rbp)
ffffffff8001c295:	00 
ffffffff8001c296:	74 5e                	je     ffffffff8001c2f6 <ZyanArgParseEx+0x7f3>
ffffffff8001c298:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8001c29c:	48 8b 10             	mov    (%rax),%rdx
ffffffff8001c29f:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
ffffffff8001c2a6:	48 89 10             	mov    %rdx,(%rax)
ffffffff8001c2a9:	eb 4b                	jmp    ffffffff8001c2f6 <ZyanArgParseEx+0x7f3>
ffffffff8001c2ab:	90                   	nop
ffffffff8001c2ac:	48 83 45 c0 10       	addq   $0x10,-0x40(%rbp)
ffffffff8001c2b1:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
ffffffff8001c2b6:	74 10                	je     ffffffff8001c2c8 <ZyanArgParseEx+0x7c5>
ffffffff8001c2b8:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8001c2bc:	48 8b 00             	mov    (%rax),%rax
ffffffff8001c2bf:	48 85 c0             	test   %rax,%rax
ffffffff8001c2c2:	0f 85 29 ff ff ff    	jne    ffffffff8001c1f1 <ZyanArgParseEx+0x6ee>
ffffffff8001c2c8:	48 83 bd 28 ff ff ff 	cmpq   $0x0,-0xd8(%rbp)
ffffffff8001c2cf:	00 
ffffffff8001c2d0:	74 0e                	je     ffffffff8001c2e0 <ZyanArgParseEx+0x7dd>
ffffffff8001c2d2:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
ffffffff8001c2d9:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
ffffffff8001c2e0:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff8001c2e5:	eb 3b                	jmp    ffffffff8001c322 <ZyanArgParseEx+0x81f>
ffffffff8001c2e7:	90                   	nop
ffffffff8001c2e8:	eb 0d                	jmp    ffffffff8001c2f7 <ZyanArgParseEx+0x7f4>
ffffffff8001c2ea:	90                   	nop
ffffffff8001c2eb:	eb 0a                	jmp    ffffffff8001c2f7 <ZyanArgParseEx+0x7f4>
ffffffff8001c2ed:	90                   	nop
ffffffff8001c2ee:	eb 07                	jmp    ffffffff8001c2f7 <ZyanArgParseEx+0x7f4>
ffffffff8001c2f0:	90                   	nop
ffffffff8001c2f1:	eb 04                	jmp    ffffffff8001c2f7 <ZyanArgParseEx+0x7f4>
ffffffff8001c2f3:	90                   	nop
ffffffff8001c2f4:	eb 01                	jmp    ffffffff8001c2f7 <ZyanArgParseEx+0x7f4>
ffffffff8001c2f6:	90                   	nop
ffffffff8001c2f7:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
ffffffff8001c2fe:	48 89 c7             	mov    %rax,%rdi
ffffffff8001c301:	e8 c9 d4 ff ff       	call   ffffffff800197cf <ZyanVectorDestroy>
ffffffff8001c306:	89 85 68 ff ff ff    	mov    %eax,-0x98(%rbp)
ffffffff8001c30c:	8b 85 68 ff ff ff    	mov    -0x98(%rbp),%eax
ffffffff8001c312:	85 c0                	test   %eax,%eax
ffffffff8001c314:	79 08                	jns    ffffffff8001c31e <ZyanArgParseEx+0x81b>
ffffffff8001c316:	8b 85 68 ff ff ff    	mov    -0x98(%rbp),%eax
ffffffff8001c31c:	eb 04                	jmp    ffffffff8001c322 <ZyanArgParseEx+0x81f>
ffffffff8001c31e:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff8001c321:	90                   	nop
ffffffff8001c322:	c9                   	leave  
ffffffff8001c323:	c3                   	ret    

ffffffff8001c324 <ZycoreGetVersion>:
ffffffff8001c324:	f3 0f 1e fa          	endbr64 
ffffffff8001c328:	55                   	push   %rbp
ffffffff8001c329:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001c32c:	48 b8 00 00 00 00 01 	movabs $0x1000100000000,%rax
ffffffff8001c333:	00 01 00 
ffffffff8001c336:	5d                   	pop    %rbp
ffffffff8001c337:	c3                   	ret    

ffffffff8001c338 <ZyanBitsetInitVectorElements>:
ffffffff8001c338:	f3 0f 1e fa          	endbr64 
ffffffff8001c33c:	55                   	push   %rbp
ffffffff8001c33d:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001c340:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff8001c344:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff8001c348:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
ffffffff8001c34c:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
ffffffff8001c353:	00 
ffffffff8001c354:	eb 2a                	jmp    ffffffff8001c380 <ZyanBitsetInitVectorElements+0x48>
ffffffff8001c356:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001c35a:	48 8d 15 c6 18 02 00 	lea    0x218c6(%rip),%rdx        # ffffffff8003dc27 <zero.1>
ffffffff8001c361:	48 89 d6             	mov    %rdx,%rsi
ffffffff8001c364:	48 89 c7             	mov    %rax,%rdi
ffffffff8001c367:	e8 db d8 ff ff       	call   ffffffff80019c47 <ZyanVectorPushBack>
ffffffff8001c36c:	89 45 f4             	mov    %eax,-0xc(%rbp)
ffffffff8001c36f:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff8001c372:	85 c0                	test   %eax,%eax
ffffffff8001c374:	79 05                	jns    ffffffff8001c37b <ZyanBitsetInitVectorElements+0x43>
ffffffff8001c376:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff8001c379:	eb 15                	jmp    ffffffff8001c390 <ZyanBitsetInitVectorElements+0x58>
ffffffff8001c37b:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
ffffffff8001c380:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001c384:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
ffffffff8001c388:	72 cc                	jb     ffffffff8001c356 <ZyanBitsetInitVectorElements+0x1e>
ffffffff8001c38a:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff8001c38f:	90                   	nop
ffffffff8001c390:	c9                   	leave  
ffffffff8001c391:	c3                   	ret    

ffffffff8001c392 <ZyanBitsetOperationAND>:
ffffffff8001c392:	f3 0f 1e fa          	endbr64 
ffffffff8001c396:	55                   	push   %rbp
ffffffff8001c397:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001c39a:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff8001c39e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8001c3a2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff8001c3a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001c3aa:	0f b6 10             	movzbl (%rax),%edx
ffffffff8001c3ad:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8001c3b1:	0f b6 00             	movzbl (%rax),%eax
ffffffff8001c3b4:	21 d0                	and    %edx,%eax
ffffffff8001c3b6:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff8001c3ba:	88 02                	mov    %al,(%rdx)
ffffffff8001c3bc:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff8001c3c1:	c9                   	leave  
ffffffff8001c3c2:	c3                   	ret    

ffffffff8001c3c3 <ZyanBitsetOperationOR>:
ffffffff8001c3c3:	f3 0f 1e fa          	endbr64 
ffffffff8001c3c7:	55                   	push   %rbp
ffffffff8001c3c8:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001c3cb:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff8001c3cf:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8001c3d3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff8001c3d7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001c3db:	0f b6 10             	movzbl (%rax),%edx
ffffffff8001c3de:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8001c3e2:	0f b6 00             	movzbl (%rax),%eax
ffffffff8001c3e5:	09 d0                	or     %edx,%eax
ffffffff8001c3e7:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff8001c3eb:	88 02                	mov    %al,(%rdx)
ffffffff8001c3ed:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff8001c3f2:	c9                   	leave  
ffffffff8001c3f3:	c3                   	ret    

ffffffff8001c3f4 <ZyanBitsetOperationXOR>:
ffffffff8001c3f4:	f3 0f 1e fa          	endbr64 
ffffffff8001c3f8:	55                   	push   %rbp
ffffffff8001c3f9:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001c3fc:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff8001c400:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8001c404:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff8001c408:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001c40c:	0f b6 10             	movzbl (%rax),%edx
ffffffff8001c40f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8001c413:	0f b6 00             	movzbl (%rax),%eax
ffffffff8001c416:	31 d0                	xor    %edx,%eax
ffffffff8001c418:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff8001c41c:	88 02                	mov    %al,(%rdx)
ffffffff8001c41e:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff8001c423:	c9                   	leave  
ffffffff8001c424:	c3                   	ret    

ffffffff8001c425 <ZyanBitsetInitEx>:
ffffffff8001c425:	f3 0f 1e fa          	endbr64 
ffffffff8001c429:	55                   	push   %rbp
ffffffff8001c42a:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001c42d:	48 83 ec 30          	sub    $0x30,%rsp
ffffffff8001c431:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff8001c435:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
ffffffff8001c439:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
ffffffff8001c43d:	89 c8                	mov    %ecx,%eax
ffffffff8001c43f:	44 89 c2             	mov    %r8d,%edx
ffffffff8001c442:	88 45 d4             	mov    %al,-0x2c(%rbp)
ffffffff8001c445:	89 d0                	mov    %edx,%eax
ffffffff8001c447:	88 45 d0             	mov    %al,-0x30(%rbp)
ffffffff8001c44a:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
ffffffff8001c44f:	75 0a                	jne    ffffffff8001c45b <ZyanBitsetInitEx+0x36>
ffffffff8001c451:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff8001c456:	e9 ab 00 00 00       	jmp    ffffffff8001c506 <ZyanBitsetInitEx+0xe1>
ffffffff8001c45b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8001c45f:	48 c1 e8 03          	shr    $0x3,%rax
ffffffff8001c463:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff8001c467:	48 c1 ea 03          	shr    $0x3,%rdx
ffffffff8001c46b:	89 d2                	mov    %edx,%edx
ffffffff8001c46d:	48 39 d0             	cmp    %rdx,%rax
ffffffff8001c470:	75 0a                	jne    ffffffff8001c47c <ZyanBitsetInitEx+0x57>
ffffffff8001c472:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8001c476:	48 c1 e8 03          	shr    $0x3,%rax
ffffffff8001c47a:	eb 0b                	jmp    ffffffff8001c487 <ZyanBitsetInitEx+0x62>
ffffffff8001c47c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8001c480:	48 c1 e8 03          	shr    $0x3,%rax
ffffffff8001c484:	83 c0 01             	add    $0x1,%eax
ffffffff8001c487:	89 45 fc             	mov    %eax,-0x4(%rbp)
ffffffff8001c48a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001c48e:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff8001c492:	48 89 10             	mov    %rdx,(%rax)
ffffffff8001c495:	0f b6 55 d0          	movzbl -0x30(%rbp),%edx
ffffffff8001c499:	0f b6 4d d4          	movzbl -0x2c(%rbp),%ecx
ffffffff8001c49d:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8001c4a0:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
ffffffff8001c4a4:	48 8d 7e 08          	lea    0x8(%rsi),%rdi
ffffffff8001c4a8:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
ffffffff8001c4ac:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff8001c4b0:	52                   	push   %rdx
ffffffff8001c4b1:	41 89 c9             	mov    %ecx,%r9d
ffffffff8001c4b4:	49 89 f0             	mov    %rsi,%r8
ffffffff8001c4b7:	b9 00 00 00 00       	mov    $0x0,%ecx
ffffffff8001c4bc:	48 89 c2             	mov    %rax,%rdx
ffffffff8001c4bf:	be 01 00 00 00       	mov    $0x1,%esi
ffffffff8001c4c4:	e8 79 d1 ff ff       	call   ffffffff80019642 <ZyanVectorInitEx>
ffffffff8001c4c9:	48 83 c4 10          	add    $0x10,%rsp
ffffffff8001c4cd:	89 45 f8             	mov    %eax,-0x8(%rbp)
ffffffff8001c4d0:	8b 45 f8             	mov    -0x8(%rbp),%eax
ffffffff8001c4d3:	85 c0                	test   %eax,%eax
ffffffff8001c4d5:	79 05                	jns    ffffffff8001c4dc <ZyanBitsetInitEx+0xb7>
ffffffff8001c4d7:	8b 45 f8             	mov    -0x8(%rbp),%eax
ffffffff8001c4da:	eb 2a                	jmp    ffffffff8001c506 <ZyanBitsetInitEx+0xe1>
ffffffff8001c4dc:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8001c4df:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff8001c4e3:	48 83 c2 08          	add    $0x8,%rdx
ffffffff8001c4e7:	48 89 c6             	mov    %rax,%rsi
ffffffff8001c4ea:	48 89 d7             	mov    %rdx,%rdi
ffffffff8001c4ed:	e8 46 fe ff ff       	call   ffffffff8001c338 <ZyanBitsetInitVectorElements>
ffffffff8001c4f2:	89 45 f4             	mov    %eax,-0xc(%rbp)
ffffffff8001c4f5:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff8001c4f8:	85 c0                	test   %eax,%eax
ffffffff8001c4fa:	79 05                	jns    ffffffff8001c501 <ZyanBitsetInitEx+0xdc>
ffffffff8001c4fc:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff8001c4ff:	eb 05                	jmp    ffffffff8001c506 <ZyanBitsetInitEx+0xe1>
ffffffff8001c501:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff8001c506:	c9                   	leave  
ffffffff8001c507:	c3                   	ret    

ffffffff8001c508 <ZyanBitsetInitBuffer>:
ffffffff8001c508:	f3 0f 1e fa          	endbr64 
ffffffff8001c50c:	55                   	push   %rbp
ffffffff8001c50d:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001c510:	48 83 ec 30          	sub    $0x30,%rsp
ffffffff8001c514:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff8001c518:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
ffffffff8001c51c:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
ffffffff8001c520:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
ffffffff8001c524:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
ffffffff8001c529:	75 0a                	jne    ffffffff8001c535 <ZyanBitsetInitBuffer+0x2d>
ffffffff8001c52b:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff8001c530:	e9 a6 00 00 00       	jmp    ffffffff8001c5db <ZyanBitsetInitBuffer+0xd3>
ffffffff8001c535:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8001c539:	48 c1 e8 03          	shr    $0x3,%rax
ffffffff8001c53d:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff8001c541:	48 c1 ea 03          	shr    $0x3,%rdx
ffffffff8001c545:	89 d2                	mov    %edx,%edx
ffffffff8001c547:	48 39 d0             	cmp    %rdx,%rax
ffffffff8001c54a:	75 0a                	jne    ffffffff8001c556 <ZyanBitsetInitBuffer+0x4e>
ffffffff8001c54c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8001c550:	48 c1 e8 03          	shr    $0x3,%rax
ffffffff8001c554:	eb 0b                	jmp    ffffffff8001c561 <ZyanBitsetInitBuffer+0x59>
ffffffff8001c556:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8001c55a:	48 c1 e8 03          	shr    $0x3,%rax
ffffffff8001c55e:	83 c0 01             	add    $0x1,%eax
ffffffff8001c561:	89 45 fc             	mov    %eax,-0x4(%rbp)
ffffffff8001c564:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8001c567:	48 39 45 d0          	cmp    %rax,-0x30(%rbp)
ffffffff8001c56b:	73 07                	jae    ffffffff8001c574 <ZyanBitsetInitBuffer+0x6c>
ffffffff8001c56d:	b8 09 00 10 80       	mov    $0x80100009,%eax
ffffffff8001c572:	eb 67                	jmp    ffffffff8001c5db <ZyanBitsetInitBuffer+0xd3>
ffffffff8001c574:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001c578:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff8001c57c:	48 89 10             	mov    %rdx,(%rax)
ffffffff8001c57f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001c583:	48 83 c0 08          	add    $0x8,%rax
ffffffff8001c587:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
ffffffff8001c58b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff8001c58f:	41 b8 00 00 00 00    	mov    $0x0,%r8d
ffffffff8001c595:	be 01 00 00 00       	mov    $0x1,%esi
ffffffff8001c59a:	48 89 c7             	mov    %rax,%rdi
ffffffff8001c59d:	e8 8c d1 ff ff       	call   ffffffff8001972e <ZyanVectorInitCustomBuffer>
ffffffff8001c5a2:	89 45 f8             	mov    %eax,-0x8(%rbp)
ffffffff8001c5a5:	8b 45 f8             	mov    -0x8(%rbp),%eax
ffffffff8001c5a8:	85 c0                	test   %eax,%eax
ffffffff8001c5aa:	79 05                	jns    ffffffff8001c5b1 <ZyanBitsetInitBuffer+0xa9>
ffffffff8001c5ac:	8b 45 f8             	mov    -0x8(%rbp),%eax
ffffffff8001c5af:	eb 2a                	jmp    ffffffff8001c5db <ZyanBitsetInitBuffer+0xd3>
ffffffff8001c5b1:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8001c5b4:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff8001c5b8:	48 83 c2 08          	add    $0x8,%rdx
ffffffff8001c5bc:	48 89 c6             	mov    %rax,%rsi
ffffffff8001c5bf:	48 89 d7             	mov    %rdx,%rdi
ffffffff8001c5c2:	e8 71 fd ff ff       	call   ffffffff8001c338 <ZyanBitsetInitVectorElements>
ffffffff8001c5c7:	89 45 f4             	mov    %eax,-0xc(%rbp)
ffffffff8001c5ca:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff8001c5cd:	85 c0                	test   %eax,%eax
ffffffff8001c5cf:	79 05                	jns    ffffffff8001c5d6 <ZyanBitsetInitBuffer+0xce>
ffffffff8001c5d1:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff8001c5d4:	eb 05                	jmp    ffffffff8001c5db <ZyanBitsetInitBuffer+0xd3>
ffffffff8001c5d6:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff8001c5db:	c9                   	leave  
ffffffff8001c5dc:	c3                   	ret    

ffffffff8001c5dd <ZyanBitsetDestroy>:
ffffffff8001c5dd:	f3 0f 1e fa          	endbr64 
ffffffff8001c5e1:	55                   	push   %rbp
ffffffff8001c5e2:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001c5e5:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff8001c5e9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8001c5ed:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff8001c5f2:	75 07                	jne    ffffffff8001c5fb <ZyanBitsetDestroy+0x1e>
ffffffff8001c5f4:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff8001c5f9:	eb 10                	jmp    ffffffff8001c60b <ZyanBitsetDestroy+0x2e>
ffffffff8001c5fb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001c5ff:	48 83 c0 08          	add    $0x8,%rax
ffffffff8001c603:	48 89 c7             	mov    %rax,%rdi
ffffffff8001c606:	e8 c4 d1 ff ff       	call   ffffffff800197cf <ZyanVectorDestroy>
ffffffff8001c60b:	c9                   	leave  
ffffffff8001c60c:	c3                   	ret    

ffffffff8001c60d <ZyanBitsetPerformByteOperation>:
ffffffff8001c60d:	f3 0f 1e fa          	endbr64 
ffffffff8001c611:	55                   	push   %rbp
ffffffff8001c612:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001c615:	48 83 ec 70          	sub    $0x70,%rsp
ffffffff8001c619:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
ffffffff8001c61d:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
ffffffff8001c621:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
ffffffff8001c625:	48 83 7d a8 00       	cmpq   $0x0,-0x58(%rbp)
ffffffff8001c62a:	74 0e                	je     ffffffff8001c63a <ZyanBitsetPerformByteOperation+0x2d>
ffffffff8001c62c:	48 83 7d a0 00       	cmpq   $0x0,-0x60(%rbp)
ffffffff8001c631:	74 07                	je     ffffffff8001c63a <ZyanBitsetPerformByteOperation+0x2d>
ffffffff8001c633:	48 83 7d 98 00       	cmpq   $0x0,-0x68(%rbp)
ffffffff8001c638:	75 0a                	jne    ffffffff8001c644 <ZyanBitsetPerformByteOperation+0x37>
ffffffff8001c63a:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff8001c63f:	e9 ff 00 00 00       	jmp    ffffffff8001c743 <ZyanBitsetPerformByteOperation+0x136>
ffffffff8001c644:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff8001c648:	48 8d 50 08          	lea    0x8(%rax),%rdx
ffffffff8001c64c:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
ffffffff8001c650:	48 89 c6             	mov    %rax,%rsi
ffffffff8001c653:	48 89 d7             	mov    %rdx,%rdi
ffffffff8001c656:	e8 56 e3 ff ff       	call   ffffffff8001a9b1 <ZyanVectorGetSize>
ffffffff8001c65b:	89 45 f4             	mov    %eax,-0xc(%rbp)
ffffffff8001c65e:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff8001c661:	85 c0                	test   %eax,%eax
ffffffff8001c663:	79 08                	jns    ffffffff8001c66d <ZyanBitsetPerformByteOperation+0x60>
ffffffff8001c665:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff8001c668:	e9 d6 00 00 00       	jmp    ffffffff8001c743 <ZyanBitsetPerformByteOperation+0x136>
ffffffff8001c66d:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff8001c671:	48 8d 50 08          	lea    0x8(%rax),%rdx
ffffffff8001c675:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
ffffffff8001c679:	48 89 c6             	mov    %rax,%rsi
ffffffff8001c67c:	48 89 d7             	mov    %rdx,%rdi
ffffffff8001c67f:	e8 2d e3 ff ff       	call   ffffffff8001a9b1 <ZyanVectorGetSize>
ffffffff8001c684:	89 45 f0             	mov    %eax,-0x10(%rbp)
ffffffff8001c687:	8b 45 f0             	mov    -0x10(%rbp),%eax
ffffffff8001c68a:	85 c0                	test   %eax,%eax
ffffffff8001c68c:	79 08                	jns    ffffffff8001c696 <ZyanBitsetPerformByteOperation+0x89>
ffffffff8001c68e:	8b 45 f0             	mov    -0x10(%rbp),%eax
ffffffff8001c691:	e9 ad 00 00 00       	jmp    ffffffff8001c743 <ZyanBitsetPerformByteOperation+0x136>
ffffffff8001c696:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
ffffffff8001c69a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8001c69e:	48 39 c2             	cmp    %rax,%rdx
ffffffff8001c6a1:	48 0f 46 c2          	cmovbe %rdx,%rax
ffffffff8001c6a5:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff8001c6a9:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
ffffffff8001c6b0:	00 
ffffffff8001c6b1:	eb 7c                	jmp    ffffffff8001c72f <ZyanBitsetPerformByteOperation+0x122>
ffffffff8001c6b3:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff8001c6b7:	48 8d 48 08          	lea    0x8(%rax),%rcx
ffffffff8001c6bb:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
ffffffff8001c6bf:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
ffffffff8001c6c3:	48 89 c2             	mov    %rax,%rdx
ffffffff8001c6c6:	48 89 cf             	mov    %rcx,%rdi
ffffffff8001c6c9:	e8 73 d4 ff ff       	call   ffffffff80019b41 <ZyanVectorGetPointerMutable>
ffffffff8001c6ce:	89 45 e4             	mov    %eax,-0x1c(%rbp)
ffffffff8001c6d1:	8b 45 e4             	mov    -0x1c(%rbp),%eax
ffffffff8001c6d4:	85 c0                	test   %eax,%eax
ffffffff8001c6d6:	79 05                	jns    ffffffff8001c6dd <ZyanBitsetPerformByteOperation+0xd0>
ffffffff8001c6d8:	8b 45 e4             	mov    -0x1c(%rbp),%eax
ffffffff8001c6db:	eb 66                	jmp    ffffffff8001c743 <ZyanBitsetPerformByteOperation+0x136>
ffffffff8001c6dd:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff8001c6e1:	48 8d 48 08          	lea    0x8(%rax),%rcx
ffffffff8001c6e5:	48 8d 45 b8          	lea    -0x48(%rbp),%rax
ffffffff8001c6e9:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
ffffffff8001c6ed:	48 89 c2             	mov    %rax,%rdx
ffffffff8001c6f0:	48 89 cf             	mov    %rcx,%rdi
ffffffff8001c6f3:	e8 e1 d3 ff ff       	call   ffffffff80019ad9 <ZyanVectorGetPointer>
ffffffff8001c6f8:	89 45 e0             	mov    %eax,-0x20(%rbp)
ffffffff8001c6fb:	8b 45 e0             	mov    -0x20(%rbp),%eax
ffffffff8001c6fe:	85 c0                	test   %eax,%eax
ffffffff8001c700:	79 05                	jns    ffffffff8001c707 <ZyanBitsetPerformByteOperation+0xfa>
ffffffff8001c702:	8b 45 e0             	mov    -0x20(%rbp),%eax
ffffffff8001c705:	eb 3c                	jmp    ffffffff8001c743 <ZyanBitsetPerformByteOperation+0x136>
ffffffff8001c707:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
ffffffff8001c70b:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8001c70f:	48 8b 4d 98          	mov    -0x68(%rbp),%rcx
ffffffff8001c713:	48 89 d6             	mov    %rdx,%rsi
ffffffff8001c716:	48 89 c7             	mov    %rax,%rdi
ffffffff8001c719:	ff d1                	call   *%rcx
ffffffff8001c71b:	89 45 dc             	mov    %eax,-0x24(%rbp)
ffffffff8001c71e:	8b 45 dc             	mov    -0x24(%rbp),%eax
ffffffff8001c721:	85 c0                	test   %eax,%eax
ffffffff8001c723:	79 05                	jns    ffffffff8001c72a <ZyanBitsetPerformByteOperation+0x11d>
ffffffff8001c725:	8b 45 dc             	mov    -0x24(%rbp),%eax
ffffffff8001c728:	eb 19                	jmp    ffffffff8001c743 <ZyanBitsetPerformByteOperation+0x136>
ffffffff8001c72a:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
ffffffff8001c72f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001c733:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
ffffffff8001c737:	0f 82 76 ff ff ff    	jb     ffffffff8001c6b3 <ZyanBitsetPerformByteOperation+0xa6>
ffffffff8001c73d:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff8001c742:	90                   	nop
ffffffff8001c743:	c9                   	leave  
ffffffff8001c744:	c3                   	ret    

ffffffff8001c745 <ZyanBitsetAND>:
ffffffff8001c745:	f3 0f 1e fa          	endbr64 
ffffffff8001c749:	55                   	push   %rbp
ffffffff8001c74a:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001c74d:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff8001c751:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8001c755:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff8001c759:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
ffffffff8001c75d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001c761:	48 8d 15 2a fc ff ff 	lea    -0x3d6(%rip),%rdx        # ffffffff8001c392 <ZyanBitsetOperationAND>
ffffffff8001c768:	48 89 ce             	mov    %rcx,%rsi
ffffffff8001c76b:	48 89 c7             	mov    %rax,%rdi
ffffffff8001c76e:	e8 9a fe ff ff       	call   ffffffff8001c60d <ZyanBitsetPerformByteOperation>
ffffffff8001c773:	90                   	nop
ffffffff8001c774:	c9                   	leave  
ffffffff8001c775:	c3                   	ret    

ffffffff8001c776 <ZyanBitsetOR>:
ffffffff8001c776:	f3 0f 1e fa          	endbr64 
ffffffff8001c77a:	55                   	push   %rbp
ffffffff8001c77b:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001c77e:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff8001c782:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8001c786:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff8001c78a:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
ffffffff8001c78e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001c792:	48 8d 15 2a fc ff ff 	lea    -0x3d6(%rip),%rdx        # ffffffff8001c3c3 <ZyanBitsetOperationOR>
ffffffff8001c799:	48 89 ce             	mov    %rcx,%rsi
ffffffff8001c79c:	48 89 c7             	mov    %rax,%rdi
ffffffff8001c79f:	e8 69 fe ff ff       	call   ffffffff8001c60d <ZyanBitsetPerformByteOperation>
ffffffff8001c7a4:	90                   	nop
ffffffff8001c7a5:	c9                   	leave  
ffffffff8001c7a6:	c3                   	ret    

ffffffff8001c7a7 <ZyanBitsetXOR>:
ffffffff8001c7a7:	f3 0f 1e fa          	endbr64 
ffffffff8001c7ab:	55                   	push   %rbp
ffffffff8001c7ac:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001c7af:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff8001c7b3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8001c7b7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff8001c7bb:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
ffffffff8001c7bf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001c7c3:	48 8d 15 2a fc ff ff 	lea    -0x3d6(%rip),%rdx        # ffffffff8001c3f4 <ZyanBitsetOperationXOR>
ffffffff8001c7ca:	48 89 ce             	mov    %rcx,%rsi
ffffffff8001c7cd:	48 89 c7             	mov    %rax,%rdi
ffffffff8001c7d0:	e8 38 fe ff ff       	call   ffffffff8001c60d <ZyanBitsetPerformByteOperation>
ffffffff8001c7d5:	90                   	nop
ffffffff8001c7d6:	c9                   	leave  
ffffffff8001c7d7:	c3                   	ret    

ffffffff8001c7d8 <ZyanBitsetFlip>:
ffffffff8001c7d8:	f3 0f 1e fa          	endbr64 
ffffffff8001c7dc:	55                   	push   %rbp
ffffffff8001c7dd:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001c7e0:	48 83 ec 28          	sub    $0x28,%rsp
ffffffff8001c7e4:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
ffffffff8001c7e8:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
ffffffff8001c7ed:	75 07                	jne    ffffffff8001c7f6 <ZyanBitsetFlip+0x1e>
ffffffff8001c7ef:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff8001c7f4:	eb 7e                	jmp    ffffffff8001c874 <ZyanBitsetFlip+0x9c>
ffffffff8001c7f6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8001c7fa:	48 8d 50 08          	lea    0x8(%rax),%rdx
ffffffff8001c7fe:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
ffffffff8001c802:	48 89 c6             	mov    %rax,%rsi
ffffffff8001c805:	48 89 d7             	mov    %rdx,%rdi
ffffffff8001c808:	e8 a4 e1 ff ff       	call   ffffffff8001a9b1 <ZyanVectorGetSize>
ffffffff8001c80d:	89 45 f4             	mov    %eax,-0xc(%rbp)
ffffffff8001c810:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff8001c813:	85 c0                	test   %eax,%eax
ffffffff8001c815:	79 05                	jns    ffffffff8001c81c <ZyanBitsetFlip+0x44>
ffffffff8001c817:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff8001c81a:	eb 58                	jmp    ffffffff8001c874 <ZyanBitsetFlip+0x9c>
ffffffff8001c81c:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
ffffffff8001c823:	00 
ffffffff8001c824:	eb 3e                	jmp    ffffffff8001c864 <ZyanBitsetFlip+0x8c>
ffffffff8001c826:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8001c82a:	48 8d 48 08          	lea    0x8(%rax),%rcx
ffffffff8001c82e:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
ffffffff8001c832:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
ffffffff8001c836:	48 89 c2             	mov    %rax,%rdx
ffffffff8001c839:	48 89 cf             	mov    %rcx,%rdi
ffffffff8001c83c:	e8 00 d3 ff ff       	call   ffffffff80019b41 <ZyanVectorGetPointerMutable>
ffffffff8001c841:	89 45 f0             	mov    %eax,-0x10(%rbp)
ffffffff8001c844:	8b 45 f0             	mov    -0x10(%rbp),%eax
ffffffff8001c847:	85 c0                	test   %eax,%eax
ffffffff8001c849:	79 05                	jns    ffffffff8001c850 <ZyanBitsetFlip+0x78>
ffffffff8001c84b:	8b 45 f0             	mov    -0x10(%rbp),%eax
ffffffff8001c84e:	eb 24                	jmp    ffffffff8001c874 <ZyanBitsetFlip+0x9c>
ffffffff8001c850:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8001c854:	0f b6 00             	movzbl (%rax),%eax
ffffffff8001c857:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff8001c85b:	f7 d0                	not    %eax
ffffffff8001c85d:	88 02                	mov    %al,(%rdx)
ffffffff8001c85f:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
ffffffff8001c864:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001c868:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
ffffffff8001c86c:	72 b8                	jb     ffffffff8001c826 <ZyanBitsetFlip+0x4e>
ffffffff8001c86e:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff8001c873:	90                   	nop
ffffffff8001c874:	c9                   	leave  
ffffffff8001c875:	c3                   	ret    

ffffffff8001c876 <ZyanBitsetSet>:
ffffffff8001c876:	f3 0f 1e fa          	endbr64 
ffffffff8001c87a:	55                   	push   %rbp
ffffffff8001c87b:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001c87e:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff8001c882:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff8001c886:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
ffffffff8001c88a:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
ffffffff8001c88f:	75 07                	jne    ffffffff8001c898 <ZyanBitsetSet+0x22>
ffffffff8001c891:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff8001c896:	eb 72                	jmp    ffffffff8001c90a <ZyanBitsetSet+0x94>
ffffffff8001c898:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001c89c:	48 8b 00             	mov    (%rax),%rax
ffffffff8001c89f:	48 39 45 e0          	cmp    %rax,-0x20(%rbp)
ffffffff8001c8a3:	72 07                	jb     ffffffff8001c8ac <ZyanBitsetSet+0x36>
ffffffff8001c8a5:	b8 08 00 10 80       	mov    $0x80100008,%eax
ffffffff8001c8aa:	eb 5e                	jmp    ffffffff8001c90a <ZyanBitsetSet+0x94>
ffffffff8001c8ac:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8001c8b0:	48 c1 e8 03          	shr    $0x3,%rax
ffffffff8001c8b4:	48 89 c6             	mov    %rax,%rsi
ffffffff8001c8b7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001c8bb:	48 8d 48 08          	lea    0x8(%rax),%rcx
ffffffff8001c8bf:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
ffffffff8001c8c3:	48 89 c2             	mov    %rax,%rdx
ffffffff8001c8c6:	48 89 cf             	mov    %rcx,%rdi
ffffffff8001c8c9:	e8 73 d2 ff ff       	call   ffffffff80019b41 <ZyanVectorGetPointerMutable>
ffffffff8001c8ce:	89 45 fc             	mov    %eax,-0x4(%rbp)
ffffffff8001c8d1:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8001c8d4:	85 c0                	test   %eax,%eax
ffffffff8001c8d6:	79 05                	jns    ffffffff8001c8dd <ZyanBitsetSet+0x67>
ffffffff8001c8d8:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8001c8db:	eb 2d                	jmp    ffffffff8001c90a <ZyanBitsetSet+0x94>
ffffffff8001c8dd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8001c8e1:	0f b6 00             	movzbl (%rax),%eax
ffffffff8001c8e4:	89 c6                	mov    %eax,%esi
ffffffff8001c8e6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8001c8ea:	f7 d0                	not    %eax
ffffffff8001c8ec:	83 e0 07             	and    $0x7,%eax
ffffffff8001c8ef:	ba 01 00 00 00       	mov    $0x1,%edx
ffffffff8001c8f4:	89 c1                	mov    %eax,%ecx
ffffffff8001c8f6:	d3 e2                	shl    %cl,%edx
ffffffff8001c8f8:	89 d0                	mov    %edx,%eax
ffffffff8001c8fa:	09 c6                	or     %eax,%esi
ffffffff8001c8fc:	89 f2                	mov    %esi,%edx
ffffffff8001c8fe:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8001c902:	88 10                	mov    %dl,(%rax)
ffffffff8001c904:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff8001c909:	90                   	nop
ffffffff8001c90a:	c9                   	leave  
ffffffff8001c90b:	c3                   	ret    

ffffffff8001c90c <ZyanBitsetReset>:
ffffffff8001c90c:	f3 0f 1e fa          	endbr64 
ffffffff8001c910:	55                   	push   %rbp
ffffffff8001c911:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001c914:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff8001c918:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff8001c91c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
ffffffff8001c920:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
ffffffff8001c925:	75 07                	jne    ffffffff8001c92e <ZyanBitsetReset+0x22>
ffffffff8001c927:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff8001c92c:	eb 74                	jmp    ffffffff8001c9a2 <ZyanBitsetReset+0x96>
ffffffff8001c92e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001c932:	48 8b 00             	mov    (%rax),%rax
ffffffff8001c935:	48 39 45 e0          	cmp    %rax,-0x20(%rbp)
ffffffff8001c939:	72 07                	jb     ffffffff8001c942 <ZyanBitsetReset+0x36>
ffffffff8001c93b:	b8 08 00 10 80       	mov    $0x80100008,%eax
ffffffff8001c940:	eb 60                	jmp    ffffffff8001c9a2 <ZyanBitsetReset+0x96>
ffffffff8001c942:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8001c946:	48 c1 e8 03          	shr    $0x3,%rax
ffffffff8001c94a:	48 89 c6             	mov    %rax,%rsi
ffffffff8001c94d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001c951:	48 8d 48 08          	lea    0x8(%rax),%rcx
ffffffff8001c955:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
ffffffff8001c959:	48 89 c2             	mov    %rax,%rdx
ffffffff8001c95c:	48 89 cf             	mov    %rcx,%rdi
ffffffff8001c95f:	e8 dd d1 ff ff       	call   ffffffff80019b41 <ZyanVectorGetPointerMutable>
ffffffff8001c964:	89 45 fc             	mov    %eax,-0x4(%rbp)
ffffffff8001c967:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8001c96a:	85 c0                	test   %eax,%eax
ffffffff8001c96c:	79 05                	jns    ffffffff8001c973 <ZyanBitsetReset+0x67>
ffffffff8001c96e:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8001c971:	eb 2f                	jmp    ffffffff8001c9a2 <ZyanBitsetReset+0x96>
ffffffff8001c973:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8001c977:	0f b6 00             	movzbl (%rax),%eax
ffffffff8001c97a:	89 c6                	mov    %eax,%esi
ffffffff8001c97c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8001c980:	f7 d0                	not    %eax
ffffffff8001c982:	83 e0 07             	and    $0x7,%eax
ffffffff8001c985:	ba 01 00 00 00       	mov    $0x1,%edx
ffffffff8001c98a:	89 c1                	mov    %eax,%ecx
ffffffff8001c98c:	d3 e2                	shl    %cl,%edx
ffffffff8001c98e:	89 d0                	mov    %edx,%eax
ffffffff8001c990:	f7 d0                	not    %eax
ffffffff8001c992:	21 c6                	and    %eax,%esi
ffffffff8001c994:	89 f2                	mov    %esi,%edx
ffffffff8001c996:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8001c99a:	88 10                	mov    %dl,(%rax)
ffffffff8001c99c:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff8001c9a1:	90                   	nop
ffffffff8001c9a2:	c9                   	leave  
ffffffff8001c9a3:	c3                   	ret    

ffffffff8001c9a4 <ZyanBitsetAssign>:
ffffffff8001c9a4:	f3 0f 1e fa          	endbr64 
ffffffff8001c9a8:	55                   	push   %rbp
ffffffff8001c9a9:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001c9ac:	48 83 ec 18          	sub    $0x18,%rsp
ffffffff8001c9b0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8001c9b4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff8001c9b8:	89 d0                	mov    %edx,%eax
ffffffff8001c9ba:	88 45 ec             	mov    %al,-0x14(%rbp)
ffffffff8001c9bd:	80 7d ec 00          	cmpb   $0x0,-0x14(%rbp)
ffffffff8001c9c1:	74 15                	je     ffffffff8001c9d8 <ZyanBitsetAssign+0x34>
ffffffff8001c9c3:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff8001c9c7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001c9cb:	48 89 d6             	mov    %rdx,%rsi
ffffffff8001c9ce:	48 89 c7             	mov    %rax,%rdi
ffffffff8001c9d1:	e8 a0 fe ff ff       	call   ffffffff8001c876 <ZyanBitsetSet>
ffffffff8001c9d6:	eb 13                	jmp    ffffffff8001c9eb <ZyanBitsetAssign+0x47>
ffffffff8001c9d8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff8001c9dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001c9e0:	48 89 d6             	mov    %rdx,%rsi
ffffffff8001c9e3:	48 89 c7             	mov    %rax,%rdi
ffffffff8001c9e6:	e8 21 ff ff ff       	call   ffffffff8001c90c <ZyanBitsetReset>
ffffffff8001c9eb:	c9                   	leave  
ffffffff8001c9ec:	c3                   	ret    

ffffffff8001c9ed <ZyanBitsetToggle>:
ffffffff8001c9ed:	f3 0f 1e fa          	endbr64 
ffffffff8001c9f1:	55                   	push   %rbp
ffffffff8001c9f2:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001c9f5:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff8001c9f9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff8001c9fd:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
ffffffff8001ca01:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
ffffffff8001ca06:	75 07                	jne    ffffffff8001ca0f <ZyanBitsetToggle+0x22>
ffffffff8001ca08:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff8001ca0d:	eb 72                	jmp    ffffffff8001ca81 <ZyanBitsetToggle+0x94>
ffffffff8001ca0f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001ca13:	48 8b 00             	mov    (%rax),%rax
ffffffff8001ca16:	48 39 45 e0          	cmp    %rax,-0x20(%rbp)
ffffffff8001ca1a:	72 07                	jb     ffffffff8001ca23 <ZyanBitsetToggle+0x36>
ffffffff8001ca1c:	b8 08 00 10 80       	mov    $0x80100008,%eax
ffffffff8001ca21:	eb 5e                	jmp    ffffffff8001ca81 <ZyanBitsetToggle+0x94>
ffffffff8001ca23:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8001ca27:	48 c1 e8 03          	shr    $0x3,%rax
ffffffff8001ca2b:	48 89 c6             	mov    %rax,%rsi
ffffffff8001ca2e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001ca32:	48 8d 48 08          	lea    0x8(%rax),%rcx
ffffffff8001ca36:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
ffffffff8001ca3a:	48 89 c2             	mov    %rax,%rdx
ffffffff8001ca3d:	48 89 cf             	mov    %rcx,%rdi
ffffffff8001ca40:	e8 fc d0 ff ff       	call   ffffffff80019b41 <ZyanVectorGetPointerMutable>
ffffffff8001ca45:	89 45 fc             	mov    %eax,-0x4(%rbp)
ffffffff8001ca48:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8001ca4b:	85 c0                	test   %eax,%eax
ffffffff8001ca4d:	79 05                	jns    ffffffff8001ca54 <ZyanBitsetToggle+0x67>
ffffffff8001ca4f:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8001ca52:	eb 2d                	jmp    ffffffff8001ca81 <ZyanBitsetToggle+0x94>
ffffffff8001ca54:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8001ca58:	0f b6 00             	movzbl (%rax),%eax
ffffffff8001ca5b:	89 c6                	mov    %eax,%esi
ffffffff8001ca5d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8001ca61:	f7 d0                	not    %eax
ffffffff8001ca63:	83 e0 07             	and    $0x7,%eax
ffffffff8001ca66:	ba 01 00 00 00       	mov    $0x1,%edx
ffffffff8001ca6b:	89 c1                	mov    %eax,%ecx
ffffffff8001ca6d:	d3 e2                	shl    %cl,%edx
ffffffff8001ca6f:	89 d0                	mov    %edx,%eax
ffffffff8001ca71:	31 c6                	xor    %eax,%esi
ffffffff8001ca73:	89 f2                	mov    %esi,%edx
ffffffff8001ca75:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8001ca79:	88 10                	mov    %dl,(%rax)
ffffffff8001ca7b:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff8001ca80:	90                   	nop
ffffffff8001ca81:	c9                   	leave  
ffffffff8001ca82:	c3                   	ret    

ffffffff8001ca83 <ZyanBitsetTest>:
ffffffff8001ca83:	f3 0f 1e fa          	endbr64 
ffffffff8001ca87:	55                   	push   %rbp
ffffffff8001ca88:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001ca8b:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff8001ca8f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff8001ca93:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
ffffffff8001ca97:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
ffffffff8001ca9c:	75 07                	jne    ffffffff8001caa5 <ZyanBitsetTest+0x22>
ffffffff8001ca9e:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff8001caa3:	eb 72                	jmp    ffffffff8001cb17 <ZyanBitsetTest+0x94>
ffffffff8001caa5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001caa9:	48 8b 00             	mov    (%rax),%rax
ffffffff8001caac:	48 39 45 e0          	cmp    %rax,-0x20(%rbp)
ffffffff8001cab0:	72 07                	jb     ffffffff8001cab9 <ZyanBitsetTest+0x36>
ffffffff8001cab2:	b8 08 00 10 80       	mov    $0x80100008,%eax
ffffffff8001cab7:	eb 5e                	jmp    ffffffff8001cb17 <ZyanBitsetTest+0x94>
ffffffff8001cab9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8001cabd:	48 c1 e8 03          	shr    $0x3,%rax
ffffffff8001cac1:	48 89 c6             	mov    %rax,%rsi
ffffffff8001cac4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001cac8:	48 8d 48 08          	lea    0x8(%rax),%rcx
ffffffff8001cacc:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
ffffffff8001cad0:	48 89 c2             	mov    %rax,%rdx
ffffffff8001cad3:	48 89 cf             	mov    %rcx,%rdi
ffffffff8001cad6:	e8 fe cf ff ff       	call   ffffffff80019ad9 <ZyanVectorGetPointer>
ffffffff8001cadb:	89 45 fc             	mov    %eax,-0x4(%rbp)
ffffffff8001cade:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8001cae1:	85 c0                	test   %eax,%eax
ffffffff8001cae3:	79 05                	jns    ffffffff8001caea <ZyanBitsetTest+0x67>
ffffffff8001cae5:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8001cae8:	eb 2d                	jmp    ffffffff8001cb17 <ZyanBitsetTest+0x94>
ffffffff8001caea:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8001caee:	0f b6 00             	movzbl (%rax),%eax
ffffffff8001caf1:	0f b6 d0             	movzbl %al,%edx
ffffffff8001caf4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8001caf8:	f7 d0                	not    %eax
ffffffff8001cafa:	83 e0 07             	and    $0x7,%eax
ffffffff8001cafd:	89 c1                	mov    %eax,%ecx
ffffffff8001caff:	d3 fa                	sar    %cl,%edx
ffffffff8001cb01:	89 d0                	mov    %edx,%eax
ffffffff8001cb03:	83 e0 01             	and    $0x1,%eax
ffffffff8001cb06:	85 c0                	test   %eax,%eax
ffffffff8001cb08:	75 07                	jne    ffffffff8001cb11 <ZyanBitsetTest+0x8e>
ffffffff8001cb0a:	b8 03 00 10 00       	mov    $0x100003,%eax
ffffffff8001cb0f:	eb 06                	jmp    ffffffff8001cb17 <ZyanBitsetTest+0x94>
ffffffff8001cb11:	b8 02 00 10 00       	mov    $0x100002,%eax
ffffffff8001cb16:	90                   	nop
ffffffff8001cb17:	c9                   	leave  
ffffffff8001cb18:	c3                   	ret    

ffffffff8001cb19 <ZyanBitsetTestMSB>:
ffffffff8001cb19:	f3 0f 1e fa          	endbr64 
ffffffff8001cb1d:	55                   	push   %rbp
ffffffff8001cb1e:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001cb21:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff8001cb25:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8001cb29:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff8001cb2e:	75 07                	jne    ffffffff8001cb37 <ZyanBitsetTestMSB+0x1e>
ffffffff8001cb30:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff8001cb35:	eb 1a                	jmp    ffffffff8001cb51 <ZyanBitsetTestMSB+0x38>
ffffffff8001cb37:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001cb3b:	48 8b 00             	mov    (%rax),%rax
ffffffff8001cb3e:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
ffffffff8001cb42:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001cb46:	48 89 d6             	mov    %rdx,%rsi
ffffffff8001cb49:	48 89 c7             	mov    %rax,%rdi
ffffffff8001cb4c:	e8 32 ff ff ff       	call   ffffffff8001ca83 <ZyanBitsetTest>
ffffffff8001cb51:	c9                   	leave  
ffffffff8001cb52:	c3                   	ret    

ffffffff8001cb53 <ZyanBitsetTestLSB>:
ffffffff8001cb53:	f3 0f 1e fa          	endbr64 
ffffffff8001cb57:	55                   	push   %rbp
ffffffff8001cb58:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001cb5b:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff8001cb5f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8001cb63:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001cb67:	be 00 00 00 00       	mov    $0x0,%esi
ffffffff8001cb6c:	48 89 c7             	mov    %rax,%rdi
ffffffff8001cb6f:	e8 0f ff ff ff       	call   ffffffff8001ca83 <ZyanBitsetTest>
ffffffff8001cb74:	c9                   	leave  
ffffffff8001cb75:	c3                   	ret    

ffffffff8001cb76 <ZyanBitsetSetAll>:
ffffffff8001cb76:	f3 0f 1e fa          	endbr64 
ffffffff8001cb7a:	55                   	push   %rbp
ffffffff8001cb7b:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001cb7e:	48 83 ec 28          	sub    $0x28,%rsp
ffffffff8001cb82:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
ffffffff8001cb86:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
ffffffff8001cb8b:	75 07                	jne    ffffffff8001cb94 <ZyanBitsetSetAll+0x1e>
ffffffff8001cb8d:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff8001cb92:	eb 76                	jmp    ffffffff8001cc0a <ZyanBitsetSetAll+0x94>
ffffffff8001cb94:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8001cb98:	48 8d 50 08          	lea    0x8(%rax),%rdx
ffffffff8001cb9c:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
ffffffff8001cba0:	48 89 c6             	mov    %rax,%rsi
ffffffff8001cba3:	48 89 d7             	mov    %rdx,%rdi
ffffffff8001cba6:	e8 06 de ff ff       	call   ffffffff8001a9b1 <ZyanVectorGetSize>
ffffffff8001cbab:	89 45 f4             	mov    %eax,-0xc(%rbp)
ffffffff8001cbae:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff8001cbb1:	85 c0                	test   %eax,%eax
ffffffff8001cbb3:	79 05                	jns    ffffffff8001cbba <ZyanBitsetSetAll+0x44>
ffffffff8001cbb5:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff8001cbb8:	eb 50                	jmp    ffffffff8001cc0a <ZyanBitsetSetAll+0x94>
ffffffff8001cbba:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
ffffffff8001cbc1:	00 
ffffffff8001cbc2:	eb 36                	jmp    ffffffff8001cbfa <ZyanBitsetSetAll+0x84>
ffffffff8001cbc4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8001cbc8:	48 8d 48 08          	lea    0x8(%rax),%rcx
ffffffff8001cbcc:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
ffffffff8001cbd0:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
ffffffff8001cbd4:	48 89 c2             	mov    %rax,%rdx
ffffffff8001cbd7:	48 89 cf             	mov    %rcx,%rdi
ffffffff8001cbda:	e8 62 cf ff ff       	call   ffffffff80019b41 <ZyanVectorGetPointerMutable>
ffffffff8001cbdf:	89 45 f0             	mov    %eax,-0x10(%rbp)
ffffffff8001cbe2:	8b 45 f0             	mov    -0x10(%rbp),%eax
ffffffff8001cbe5:	85 c0                	test   %eax,%eax
ffffffff8001cbe7:	79 05                	jns    ffffffff8001cbee <ZyanBitsetSetAll+0x78>
ffffffff8001cbe9:	8b 45 f0             	mov    -0x10(%rbp),%eax
ffffffff8001cbec:	eb 1c                	jmp    ffffffff8001cc0a <ZyanBitsetSetAll+0x94>
ffffffff8001cbee:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8001cbf2:	c6 00 ff             	movb   $0xff,(%rax)
ffffffff8001cbf5:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
ffffffff8001cbfa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001cbfe:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
ffffffff8001cc02:	72 c0                	jb     ffffffff8001cbc4 <ZyanBitsetSetAll+0x4e>
ffffffff8001cc04:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff8001cc09:	90                   	nop
ffffffff8001cc0a:	c9                   	leave  
ffffffff8001cc0b:	c3                   	ret    

ffffffff8001cc0c <ZyanBitsetResetAll>:
ffffffff8001cc0c:	f3 0f 1e fa          	endbr64 
ffffffff8001cc10:	55                   	push   %rbp
ffffffff8001cc11:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001cc14:	48 83 ec 28          	sub    $0x28,%rsp
ffffffff8001cc18:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
ffffffff8001cc1c:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
ffffffff8001cc21:	75 07                	jne    ffffffff8001cc2a <ZyanBitsetResetAll+0x1e>
ffffffff8001cc23:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff8001cc28:	eb 76                	jmp    ffffffff8001cca0 <ZyanBitsetResetAll+0x94>
ffffffff8001cc2a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8001cc2e:	48 8d 50 08          	lea    0x8(%rax),%rdx
ffffffff8001cc32:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
ffffffff8001cc36:	48 89 c6             	mov    %rax,%rsi
ffffffff8001cc39:	48 89 d7             	mov    %rdx,%rdi
ffffffff8001cc3c:	e8 70 dd ff ff       	call   ffffffff8001a9b1 <ZyanVectorGetSize>
ffffffff8001cc41:	89 45 f4             	mov    %eax,-0xc(%rbp)
ffffffff8001cc44:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff8001cc47:	85 c0                	test   %eax,%eax
ffffffff8001cc49:	79 05                	jns    ffffffff8001cc50 <ZyanBitsetResetAll+0x44>
ffffffff8001cc4b:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff8001cc4e:	eb 50                	jmp    ffffffff8001cca0 <ZyanBitsetResetAll+0x94>
ffffffff8001cc50:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
ffffffff8001cc57:	00 
ffffffff8001cc58:	eb 36                	jmp    ffffffff8001cc90 <ZyanBitsetResetAll+0x84>
ffffffff8001cc5a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8001cc5e:	48 8d 48 08          	lea    0x8(%rax),%rcx
ffffffff8001cc62:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
ffffffff8001cc66:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
ffffffff8001cc6a:	48 89 c2             	mov    %rax,%rdx
ffffffff8001cc6d:	48 89 cf             	mov    %rcx,%rdi
ffffffff8001cc70:	e8 cc ce ff ff       	call   ffffffff80019b41 <ZyanVectorGetPointerMutable>
ffffffff8001cc75:	89 45 f0             	mov    %eax,-0x10(%rbp)
ffffffff8001cc78:	8b 45 f0             	mov    -0x10(%rbp),%eax
ffffffff8001cc7b:	85 c0                	test   %eax,%eax
ffffffff8001cc7d:	79 05                	jns    ffffffff8001cc84 <ZyanBitsetResetAll+0x78>
ffffffff8001cc7f:	8b 45 f0             	mov    -0x10(%rbp),%eax
ffffffff8001cc82:	eb 1c                	jmp    ffffffff8001cca0 <ZyanBitsetResetAll+0x94>
ffffffff8001cc84:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8001cc88:	c6 00 00             	movb   $0x0,(%rax)
ffffffff8001cc8b:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
ffffffff8001cc90:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001cc94:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
ffffffff8001cc98:	72 c0                	jb     ffffffff8001cc5a <ZyanBitsetResetAll+0x4e>
ffffffff8001cc9a:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff8001cc9f:	90                   	nop
ffffffff8001cca0:	c9                   	leave  
ffffffff8001cca1:	c3                   	ret    

ffffffff8001cca2 <ZyanBitsetPush>:
ffffffff8001cca2:	f3 0f 1e fa          	endbr64 
ffffffff8001cca6:	55                   	push   %rbp
ffffffff8001cca7:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001ccaa:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff8001ccae:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff8001ccb2:	89 f0                	mov    %esi,%eax
ffffffff8001ccb4:	88 45 e4             	mov    %al,-0x1c(%rbp)
ffffffff8001ccb7:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
ffffffff8001ccbc:	75 07                	jne    ffffffff8001ccc5 <ZyanBitsetPush+0x23>
ffffffff8001ccbe:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff8001ccc3:	eb 61                	jmp    ffffffff8001cd26 <ZyanBitsetPush+0x84>
ffffffff8001ccc5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001ccc9:	48 8b 00             	mov    (%rax),%rax
ffffffff8001cccc:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffff8001ccd0:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
ffffffff8001ccd4:	48 89 11             	mov    %rdx,(%rcx)
ffffffff8001ccd7:	83 e0 07             	and    $0x7,%eax
ffffffff8001ccda:	48 85 c0             	test   %rax,%rax
ffffffff8001ccdd:	75 29                	jne    ffffffff8001cd08 <ZyanBitsetPush+0x66>
ffffffff8001ccdf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001cce3:	48 83 c0 08          	add    $0x8,%rax
ffffffff8001cce7:	48 8d 15 3a 0f 02 00 	lea    0x20f3a(%rip),%rdx        # ffffffff8003dc28 <zero.0>
ffffffff8001ccee:	48 89 d6             	mov    %rdx,%rsi
ffffffff8001ccf1:	48 89 c7             	mov    %rax,%rdi
ffffffff8001ccf4:	e8 4e cf ff ff       	call   ffffffff80019c47 <ZyanVectorPushBack>
ffffffff8001ccf9:	89 45 fc             	mov    %eax,-0x4(%rbp)
ffffffff8001ccfc:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8001ccff:	85 c0                	test   %eax,%eax
ffffffff8001cd01:	79 05                	jns    ffffffff8001cd08 <ZyanBitsetPush+0x66>
ffffffff8001cd03:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8001cd06:	eb 1e                	jmp    ffffffff8001cd26 <ZyanBitsetPush+0x84>
ffffffff8001cd08:	0f b6 45 e4          	movzbl -0x1c(%rbp),%eax
ffffffff8001cd0c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff8001cd10:	48 8b 12             	mov    (%rdx),%rdx
ffffffff8001cd13:	48 8d 72 ff          	lea    -0x1(%rdx),%rsi
ffffffff8001cd17:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
ffffffff8001cd1b:	89 c2                	mov    %eax,%edx
ffffffff8001cd1d:	48 89 cf             	mov    %rcx,%rdi
ffffffff8001cd20:	e8 7f fc ff ff       	call   ffffffff8001c9a4 <ZyanBitsetAssign>
ffffffff8001cd25:	90                   	nop
ffffffff8001cd26:	c9                   	leave  
ffffffff8001cd27:	c3                   	ret    

ffffffff8001cd28 <ZyanBitsetPop>:
ffffffff8001cd28:	f3 0f 1e fa          	endbr64 
ffffffff8001cd2c:	55                   	push   %rbp
ffffffff8001cd2d:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001cd30:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff8001cd34:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8001cd38:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff8001cd3d:	75 07                	jne    ffffffff8001cd46 <ZyanBitsetPop+0x1e>
ffffffff8001cd3f:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff8001cd44:	eb 38                	jmp    ffffffff8001cd7e <ZyanBitsetPop+0x56>
ffffffff8001cd46:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001cd4a:	48 8b 00             	mov    (%rax),%rax
ffffffff8001cd4d:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
ffffffff8001cd51:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001cd55:	48 89 10             	mov    %rdx,(%rax)
ffffffff8001cd58:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001cd5c:	48 8b 00             	mov    (%rax),%rax
ffffffff8001cd5f:	83 e0 07             	and    $0x7,%eax
ffffffff8001cd62:	48 85 c0             	test   %rax,%rax
ffffffff8001cd65:	75 12                	jne    ffffffff8001cd79 <ZyanBitsetPop+0x51>
ffffffff8001cd67:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001cd6b:	48 83 c0 08          	add    $0x8,%rax
ffffffff8001cd6f:	48 89 c7             	mov    %rax,%rdi
ffffffff8001cd72:	e8 cb d5 ff ff       	call   ffffffff8001a342 <ZyanVectorPopBack>
ffffffff8001cd77:	eb 05                	jmp    ffffffff8001cd7e <ZyanBitsetPop+0x56>
ffffffff8001cd79:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff8001cd7e:	c9                   	leave  
ffffffff8001cd7f:	c3                   	ret    

ffffffff8001cd80 <ZyanBitsetClear>:
ffffffff8001cd80:	f3 0f 1e fa          	endbr64 
ffffffff8001cd84:	55                   	push   %rbp
ffffffff8001cd85:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001cd88:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff8001cd8c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8001cd90:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff8001cd95:	75 07                	jne    ffffffff8001cd9e <ZyanBitsetClear+0x1e>
ffffffff8001cd97:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff8001cd9c:	eb 1b                	jmp    ffffffff8001cdb9 <ZyanBitsetClear+0x39>
ffffffff8001cd9e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001cda2:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
ffffffff8001cda9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001cdad:	48 83 c0 08          	add    $0x8,%rax
ffffffff8001cdb1:	48 89 c7             	mov    %rax,%rdi
ffffffff8001cdb4:	e8 94 d6 ff ff       	call   ffffffff8001a44d <ZyanVectorClear>
ffffffff8001cdb9:	c9                   	leave  
ffffffff8001cdba:	c3                   	ret    

ffffffff8001cdbb <ZyanBitsetReserve>:
ffffffff8001cdbb:	f3 0f 1e fa          	endbr64 
ffffffff8001cdbf:	55                   	push   %rbp
ffffffff8001cdc0:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001cdc3:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff8001cdc7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8001cdcb:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff8001cdcf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8001cdd3:	48 c1 e8 03          	shr    $0x3,%rax
ffffffff8001cdd7:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff8001cddb:	48 c1 ea 03          	shr    $0x3,%rdx
ffffffff8001cddf:	89 d2                	mov    %edx,%edx
ffffffff8001cde1:	48 39 d0             	cmp    %rdx,%rax
ffffffff8001cde4:	75 0c                	jne    ffffffff8001cdf2 <ZyanBitsetReserve+0x37>
ffffffff8001cde6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8001cdea:	48 c1 e8 03          	shr    $0x3,%rax
ffffffff8001cdee:	89 c2                	mov    %eax,%edx
ffffffff8001cdf0:	eb 0d                	jmp    ffffffff8001cdff <ZyanBitsetReserve+0x44>
ffffffff8001cdf2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8001cdf6:	48 c1 e8 03          	shr    $0x3,%rax
ffffffff8001cdfa:	83 c0 01             	add    $0x1,%eax
ffffffff8001cdfd:	89 c2                	mov    %eax,%edx
ffffffff8001cdff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001ce03:	48 83 c0 08          	add    $0x8,%rax
ffffffff8001ce07:	48 89 d6             	mov    %rdx,%rsi
ffffffff8001ce0a:	48 89 c7             	mov    %rax,%rdi
ffffffff8001ce0d:	e8 d7 da ff ff       	call   ffffffff8001a8e9 <ZyanVectorReserve>
ffffffff8001ce12:	c9                   	leave  
ffffffff8001ce13:	c3                   	ret    

ffffffff8001ce14 <ZyanBitsetShrinkToFit>:
ffffffff8001ce14:	f3 0f 1e fa          	endbr64 
ffffffff8001ce18:	55                   	push   %rbp
ffffffff8001ce19:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001ce1c:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff8001ce20:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8001ce24:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001ce28:	48 83 c0 08          	add    $0x8,%rax
ffffffff8001ce2c:	48 89 c7             	mov    %rax,%rdi
ffffffff8001ce2f:	e8 0e db ff ff       	call   ffffffff8001a942 <ZyanVectorShrinkToFit>
ffffffff8001ce34:	c9                   	leave  
ffffffff8001ce35:	c3                   	ret    

ffffffff8001ce36 <ZyanBitsetGetSize>:
ffffffff8001ce36:	f3 0f 1e fa          	endbr64 
ffffffff8001ce3a:	55                   	push   %rbp
ffffffff8001ce3b:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001ce3e:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff8001ce42:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8001ce46:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff8001ce4a:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff8001ce4f:	75 07                	jne    ffffffff8001ce58 <ZyanBitsetGetSize+0x22>
ffffffff8001ce51:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff8001ce56:	eb 13                	jmp    ffffffff8001ce6b <ZyanBitsetGetSize+0x35>
ffffffff8001ce58:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001ce5c:	48 8b 10             	mov    (%rax),%rdx
ffffffff8001ce5f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8001ce63:	48 89 10             	mov    %rdx,(%rax)
ffffffff8001ce66:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff8001ce6b:	c9                   	leave  
ffffffff8001ce6c:	c3                   	ret    

ffffffff8001ce6d <ZyanBitsetGetCapacity>:
ffffffff8001ce6d:	f3 0f 1e fa          	endbr64 
ffffffff8001ce71:	55                   	push   %rbp
ffffffff8001ce72:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001ce75:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff8001ce79:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff8001ce7d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
ffffffff8001ce81:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff8001ce85:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001ce89:	48 89 d6             	mov    %rdx,%rsi
ffffffff8001ce8c:	48 89 c7             	mov    %rax,%rdi
ffffffff8001ce8f:	e8 67 00 00 00       	call   ffffffff8001cefb <ZyanBitsetGetCapacityBytes>
ffffffff8001ce94:	89 45 fc             	mov    %eax,-0x4(%rbp)
ffffffff8001ce97:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8001ce9a:	85 c0                	test   %eax,%eax
ffffffff8001ce9c:	79 05                	jns    ffffffff8001cea3 <ZyanBitsetGetCapacity+0x36>
ffffffff8001ce9e:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8001cea1:	eb 1b                	jmp    ffffffff8001cebe <ZyanBitsetGetCapacity+0x51>
ffffffff8001cea3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8001cea7:	48 8b 00             	mov    (%rax),%rax
ffffffff8001ceaa:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
ffffffff8001ceb1:	00 
ffffffff8001ceb2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8001ceb6:	48 89 10             	mov    %rdx,(%rax)
ffffffff8001ceb9:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff8001cebe:	c9                   	leave  
ffffffff8001cebf:	c3                   	ret    

ffffffff8001cec0 <ZyanBitsetGetSizeBytes>:
ffffffff8001cec0:	f3 0f 1e fa          	endbr64 
ffffffff8001cec4:	55                   	push   %rbp
ffffffff8001cec5:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001cec8:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff8001cecc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8001ced0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff8001ced4:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff8001ced9:	75 07                	jne    ffffffff8001cee2 <ZyanBitsetGetSizeBytes+0x22>
ffffffff8001cedb:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff8001cee0:	eb 17                	jmp    ffffffff8001cef9 <ZyanBitsetGetSizeBytes+0x39>
ffffffff8001cee2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001cee6:	48 83 c0 08          	add    $0x8,%rax
ffffffff8001ceea:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff8001ceee:	48 89 d6             	mov    %rdx,%rsi
ffffffff8001cef1:	48 89 c7             	mov    %rax,%rdi
ffffffff8001cef4:	e8 b8 da ff ff       	call   ffffffff8001a9b1 <ZyanVectorGetSize>
ffffffff8001cef9:	c9                   	leave  
ffffffff8001cefa:	c3                   	ret    

ffffffff8001cefb <ZyanBitsetGetCapacityBytes>:
ffffffff8001cefb:	f3 0f 1e fa          	endbr64 
ffffffff8001ceff:	55                   	push   %rbp
ffffffff8001cf00:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001cf03:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff8001cf07:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8001cf0b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff8001cf0f:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff8001cf14:	75 07                	jne    ffffffff8001cf1d <ZyanBitsetGetCapacityBytes+0x22>
ffffffff8001cf16:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff8001cf1b:	eb 17                	jmp    ffffffff8001cf34 <ZyanBitsetGetCapacityBytes+0x39>
ffffffff8001cf1d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001cf21:	48 83 c0 08          	add    $0x8,%rax
ffffffff8001cf25:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff8001cf29:	48 89 d6             	mov    %rdx,%rsi
ffffffff8001cf2c:	48 89 c7             	mov    %rax,%rdi
ffffffff8001cf2f:	e8 45 da ff ff       	call   ffffffff8001a979 <ZyanVectorGetCapacity>
ffffffff8001cf34:	c9                   	leave  
ffffffff8001cf35:	c3                   	ret    

ffffffff8001cf36 <ZyanBitsetCount>:
ffffffff8001cf36:	f3 0f 1e fa          	endbr64 
ffffffff8001cf3a:	55                   	push   %rbp
ffffffff8001cf3b:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001cf3e:	48 83 ec 40          	sub    $0x40,%rsp
ffffffff8001cf42:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
ffffffff8001cf46:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
ffffffff8001cf4a:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
ffffffff8001cf4f:	74 07                	je     ffffffff8001cf58 <ZyanBitsetCount+0x22>
ffffffff8001cf51:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
ffffffff8001cf56:	75 0a                	jne    ffffffff8001cf62 <ZyanBitsetCount+0x2c>
ffffffff8001cf58:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff8001cf5d:	e9 06 01 00 00       	jmp    ffffffff8001d068 <ZyanBitsetCount+0x132>
ffffffff8001cf62:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8001cf66:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
ffffffff8001cf6d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8001cf71:	48 8d 50 08          	lea    0x8(%rax),%rdx
ffffffff8001cf75:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
ffffffff8001cf79:	48 89 c6             	mov    %rax,%rsi
ffffffff8001cf7c:	48 89 d7             	mov    %rdx,%rdi
ffffffff8001cf7f:	e8 2d da ff ff       	call   ffffffff8001a9b1 <ZyanVectorGetSize>
ffffffff8001cf84:	89 45 f4             	mov    %eax,-0xc(%rbp)
ffffffff8001cf87:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff8001cf8a:	85 c0                	test   %eax,%eax
ffffffff8001cf8c:	79 08                	jns    ffffffff8001cf96 <ZyanBitsetCount+0x60>
ffffffff8001cf8e:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff8001cf91:	e9 d2 00 00 00       	jmp    ffffffff8001d068 <ZyanBitsetCount+0x132>
ffffffff8001cf96:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
ffffffff8001cf9d:	00 
ffffffff8001cf9e:	e9 95 00 00 00       	jmp    ffffffff8001d038 <ZyanBitsetCount+0x102>
ffffffff8001cfa3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8001cfa7:	48 8d 48 08          	lea    0x8(%rax),%rcx
ffffffff8001cfab:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
ffffffff8001cfaf:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
ffffffff8001cfb3:	48 89 c2             	mov    %rax,%rdx
ffffffff8001cfb6:	48 89 cf             	mov    %rcx,%rdi
ffffffff8001cfb9:	e8 1b cb ff ff       	call   ffffffff80019ad9 <ZyanVectorGetPointer>
ffffffff8001cfbe:	89 45 f0             	mov    %eax,-0x10(%rbp)
ffffffff8001cfc1:	8b 45 f0             	mov    -0x10(%rbp),%eax
ffffffff8001cfc4:	85 c0                	test   %eax,%eax
ffffffff8001cfc6:	79 08                	jns    ffffffff8001cfd0 <ZyanBitsetCount+0x9a>
ffffffff8001cfc8:	8b 45 f0             	mov    -0x10(%rbp),%eax
ffffffff8001cfcb:	e9 98 00 00 00       	jmp    ffffffff8001d068 <ZyanBitsetCount+0x132>
ffffffff8001cfd0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8001cfd4:	0f b6 00             	movzbl (%rax),%eax
ffffffff8001cfd7:	88 45 ef             	mov    %al,-0x11(%rbp)
ffffffff8001cfda:	0f b6 45 ef          	movzbl -0x11(%rbp),%eax
ffffffff8001cfde:	83 e0 55             	and    $0x55,%eax
ffffffff8001cfe1:	89 c2                	mov    %eax,%edx
ffffffff8001cfe3:	0f b6 45 ef          	movzbl -0x11(%rbp),%eax
ffffffff8001cfe7:	d0 e8                	shr    %al
ffffffff8001cfe9:	83 e0 55             	and    $0x55,%eax
ffffffff8001cfec:	01 d0                	add    %edx,%eax
ffffffff8001cfee:	88 45 ef             	mov    %al,-0x11(%rbp)
ffffffff8001cff1:	0f b6 45 ef          	movzbl -0x11(%rbp),%eax
ffffffff8001cff5:	83 e0 33             	and    $0x33,%eax
ffffffff8001cff8:	89 c2                	mov    %eax,%edx
ffffffff8001cffa:	0f b6 45 ef          	movzbl -0x11(%rbp),%eax
ffffffff8001cffe:	c0 e8 02             	shr    $0x2,%al
ffffffff8001d001:	83 e0 33             	and    $0x33,%eax
ffffffff8001d004:	01 d0                	add    %edx,%eax
ffffffff8001d006:	88 45 ef             	mov    %al,-0x11(%rbp)
ffffffff8001d009:	0f b6 45 ef          	movzbl -0x11(%rbp),%eax
ffffffff8001d00d:	83 e0 0f             	and    $0xf,%eax
ffffffff8001d010:	89 c2                	mov    %eax,%edx
ffffffff8001d012:	0f b6 45 ef          	movzbl -0x11(%rbp),%eax
ffffffff8001d016:	c0 e8 04             	shr    $0x4,%al
ffffffff8001d019:	01 d0                	add    %edx,%eax
ffffffff8001d01b:	88 45 ef             	mov    %al,-0x11(%rbp)
ffffffff8001d01e:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8001d022:	48 8b 10             	mov    (%rax),%rdx
ffffffff8001d025:	0f b6 45 ef          	movzbl -0x11(%rbp),%eax
ffffffff8001d029:	48 01 c2             	add    %rax,%rdx
ffffffff8001d02c:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8001d030:	48 89 10             	mov    %rdx,(%rax)
ffffffff8001d033:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
ffffffff8001d038:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8001d03c:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
ffffffff8001d040:	0f 82 5d ff ff ff    	jb     ffffffff8001cfa3 <ZyanBitsetCount+0x6d>
ffffffff8001d046:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8001d04a:	48 8b 10             	mov    (%rax),%rdx
ffffffff8001d04d:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8001d051:	48 8b 00             	mov    (%rax),%rax
ffffffff8001d054:	48 39 c2             	cmp    %rax,%rdx
ffffffff8001d057:	48 0f 46 c2          	cmovbe %rdx,%rax
ffffffff8001d05b:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
ffffffff8001d05f:	48 89 02             	mov    %rax,(%rdx)
ffffffff8001d062:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff8001d067:	90                   	nop
ffffffff8001d068:	c9                   	leave  
ffffffff8001d069:	c3                   	ret    

ffffffff8001d06a <ZyanBitsetAll>:
ffffffff8001d06a:	f3 0f 1e fa          	endbr64 
ffffffff8001d06e:	55                   	push   %rbp
ffffffff8001d06f:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001d072:	48 83 ec 38          	sub    $0x38,%rsp
ffffffff8001d076:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
ffffffff8001d07a:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
ffffffff8001d07f:	75 0a                	jne    ffffffff8001d08b <ZyanBitsetAll+0x21>
ffffffff8001d081:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff8001d086:	e9 b8 00 00 00       	jmp    ffffffff8001d143 <ZyanBitsetAll+0xd9>
ffffffff8001d08b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8001d08f:	48 8d 50 08          	lea    0x8(%rax),%rdx
ffffffff8001d093:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
ffffffff8001d097:	48 89 c6             	mov    %rax,%rsi
ffffffff8001d09a:	48 89 d7             	mov    %rdx,%rdi
ffffffff8001d09d:	e8 0f d9 ff ff       	call   ffffffff8001a9b1 <ZyanVectorGetSize>
ffffffff8001d0a2:	89 45 f4             	mov    %eax,-0xc(%rbp)
ffffffff8001d0a5:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff8001d0a8:	85 c0                	test   %eax,%eax
ffffffff8001d0aa:	79 08                	jns    ffffffff8001d0b4 <ZyanBitsetAll+0x4a>
ffffffff8001d0ac:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff8001d0af:	e9 8f 00 00 00       	jmp    ffffffff8001d143 <ZyanBitsetAll+0xd9>
ffffffff8001d0b4:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
ffffffff8001d0bb:	00 
ffffffff8001d0bc:	eb 75                	jmp    ffffffff8001d133 <ZyanBitsetAll+0xc9>
ffffffff8001d0be:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8001d0c2:	48 8d 48 08          	lea    0x8(%rax),%rcx
ffffffff8001d0c6:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
ffffffff8001d0ca:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
ffffffff8001d0ce:	48 89 c2             	mov    %rax,%rdx
ffffffff8001d0d1:	48 89 cf             	mov    %rcx,%rdi
ffffffff8001d0d4:	e8 00 ca ff ff       	call   ffffffff80019ad9 <ZyanVectorGetPointer>
ffffffff8001d0d9:	89 45 f0             	mov    %eax,-0x10(%rbp)
ffffffff8001d0dc:	8b 45 f0             	mov    -0x10(%rbp),%eax
ffffffff8001d0df:	85 c0                	test   %eax,%eax
ffffffff8001d0e1:	79 05                	jns    ffffffff8001d0e8 <ZyanBitsetAll+0x7e>
ffffffff8001d0e3:	8b 45 f0             	mov    -0x10(%rbp),%eax
ffffffff8001d0e6:	eb 5b                	jmp    ffffffff8001d143 <ZyanBitsetAll+0xd9>
ffffffff8001d0e8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8001d0ec:	48 83 e8 01          	sub    $0x1,%rax
ffffffff8001d0f0:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
ffffffff8001d0f4:	73 12                	jae    ffffffff8001d108 <ZyanBitsetAll+0x9e>
ffffffff8001d0f6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8001d0fa:	0f b6 00             	movzbl (%rax),%eax
ffffffff8001d0fd:	3c ff                	cmp    $0xff,%al
ffffffff8001d0ff:	74 2d                	je     ffffffff8001d12e <ZyanBitsetAll+0xc4>
ffffffff8001d101:	b8 03 00 10 00       	mov    $0x100003,%eax
ffffffff8001d106:	eb 3b                	jmp    ffffffff8001d143 <ZyanBitsetAll+0xd9>
ffffffff8001d108:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8001d10c:	48 8b 00             	mov    (%rax),%rax
ffffffff8001d10f:	83 e0 07             	and    $0x7,%eax
ffffffff8001d112:	83 e8 09             	sub    $0x9,%eax
ffffffff8001d115:	88 45 ef             	mov    %al,-0x11(%rbp)
ffffffff8001d118:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8001d11c:	0f b6 00             	movzbl (%rax),%eax
ffffffff8001d11f:	22 45 ef             	and    -0x11(%rbp),%al
ffffffff8001d122:	38 45 ef             	cmp    %al,-0x11(%rbp)
ffffffff8001d125:	74 07                	je     ffffffff8001d12e <ZyanBitsetAll+0xc4>
ffffffff8001d127:	b8 03 00 10 00       	mov    $0x100003,%eax
ffffffff8001d12c:	eb 15                	jmp    ffffffff8001d143 <ZyanBitsetAll+0xd9>
ffffffff8001d12e:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
ffffffff8001d133:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8001d137:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
ffffffff8001d13b:	72 81                	jb     ffffffff8001d0be <ZyanBitsetAll+0x54>
ffffffff8001d13d:	b8 02 00 10 00       	mov    $0x100002,%eax
ffffffff8001d142:	90                   	nop
ffffffff8001d143:	c9                   	leave  
ffffffff8001d144:	c3                   	ret    

ffffffff8001d145 <ZyanBitsetAny>:
ffffffff8001d145:	f3 0f 1e fa          	endbr64 
ffffffff8001d149:	55                   	push   %rbp
ffffffff8001d14a:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001d14d:	48 83 ec 38          	sub    $0x38,%rsp
ffffffff8001d151:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
ffffffff8001d155:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
ffffffff8001d15a:	75 0a                	jne    ffffffff8001d166 <ZyanBitsetAny+0x21>
ffffffff8001d15c:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff8001d161:	e9 b7 00 00 00       	jmp    ffffffff8001d21d <ZyanBitsetAny+0xd8>
ffffffff8001d166:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8001d16a:	48 8d 50 08          	lea    0x8(%rax),%rdx
ffffffff8001d16e:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
ffffffff8001d172:	48 89 c6             	mov    %rax,%rsi
ffffffff8001d175:	48 89 d7             	mov    %rdx,%rdi
ffffffff8001d178:	e8 34 d8 ff ff       	call   ffffffff8001a9b1 <ZyanVectorGetSize>
ffffffff8001d17d:	89 45 f4             	mov    %eax,-0xc(%rbp)
ffffffff8001d180:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff8001d183:	85 c0                	test   %eax,%eax
ffffffff8001d185:	79 08                	jns    ffffffff8001d18f <ZyanBitsetAny+0x4a>
ffffffff8001d187:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff8001d18a:	e9 8e 00 00 00       	jmp    ffffffff8001d21d <ZyanBitsetAny+0xd8>
ffffffff8001d18f:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
ffffffff8001d196:	00 
ffffffff8001d197:	eb 74                	jmp    ffffffff8001d20d <ZyanBitsetAny+0xc8>
ffffffff8001d199:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8001d19d:	48 8d 48 08          	lea    0x8(%rax),%rcx
ffffffff8001d1a1:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
ffffffff8001d1a5:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
ffffffff8001d1a9:	48 89 c2             	mov    %rax,%rdx
ffffffff8001d1ac:	48 89 cf             	mov    %rcx,%rdi
ffffffff8001d1af:	e8 25 c9 ff ff       	call   ffffffff80019ad9 <ZyanVectorGetPointer>
ffffffff8001d1b4:	89 45 f0             	mov    %eax,-0x10(%rbp)
ffffffff8001d1b7:	8b 45 f0             	mov    -0x10(%rbp),%eax
ffffffff8001d1ba:	85 c0                	test   %eax,%eax
ffffffff8001d1bc:	79 05                	jns    ffffffff8001d1c3 <ZyanBitsetAny+0x7e>
ffffffff8001d1be:	8b 45 f0             	mov    -0x10(%rbp),%eax
ffffffff8001d1c1:	eb 5a                	jmp    ffffffff8001d21d <ZyanBitsetAny+0xd8>
ffffffff8001d1c3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8001d1c7:	48 83 e8 01          	sub    $0x1,%rax
ffffffff8001d1cb:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
ffffffff8001d1cf:	73 12                	jae    ffffffff8001d1e3 <ZyanBitsetAny+0x9e>
ffffffff8001d1d1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8001d1d5:	0f b6 00             	movzbl (%rax),%eax
ffffffff8001d1d8:	84 c0                	test   %al,%al
ffffffff8001d1da:	74 2c                	je     ffffffff8001d208 <ZyanBitsetAny+0xc3>
ffffffff8001d1dc:	b8 02 00 10 00       	mov    $0x100002,%eax
ffffffff8001d1e1:	eb 3a                	jmp    ffffffff8001d21d <ZyanBitsetAny+0xd8>
ffffffff8001d1e3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8001d1e7:	48 8b 00             	mov    (%rax),%rax
ffffffff8001d1ea:	83 e0 07             	and    $0x7,%eax
ffffffff8001d1ed:	83 e8 09             	sub    $0x9,%eax
ffffffff8001d1f0:	88 45 ef             	mov    %al,-0x11(%rbp)
ffffffff8001d1f3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8001d1f7:	0f b6 00             	movzbl (%rax),%eax
ffffffff8001d1fa:	22 45 ef             	and    -0x11(%rbp),%al
ffffffff8001d1fd:	84 c0                	test   %al,%al
ffffffff8001d1ff:	74 07                	je     ffffffff8001d208 <ZyanBitsetAny+0xc3>
ffffffff8001d201:	b8 02 00 10 00       	mov    $0x100002,%eax
ffffffff8001d206:	eb 15                	jmp    ffffffff8001d21d <ZyanBitsetAny+0xd8>
ffffffff8001d208:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
ffffffff8001d20d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8001d211:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
ffffffff8001d215:	72 82                	jb     ffffffff8001d199 <ZyanBitsetAny+0x54>
ffffffff8001d217:	b8 03 00 10 00       	mov    $0x100003,%eax
ffffffff8001d21c:	90                   	nop
ffffffff8001d21d:	c9                   	leave  
ffffffff8001d21e:	c3                   	ret    

ffffffff8001d21f <ZyanBitsetNone>:
ffffffff8001d21f:	f3 0f 1e fa          	endbr64 
ffffffff8001d223:	55                   	push   %rbp
ffffffff8001d224:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001d227:	48 83 ec 38          	sub    $0x38,%rsp
ffffffff8001d22b:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
ffffffff8001d22f:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
ffffffff8001d234:	75 0a                	jne    ffffffff8001d240 <ZyanBitsetNone+0x21>
ffffffff8001d236:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff8001d23b:	e9 b7 00 00 00       	jmp    ffffffff8001d2f7 <ZyanBitsetNone+0xd8>
ffffffff8001d240:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8001d244:	48 8d 50 08          	lea    0x8(%rax),%rdx
ffffffff8001d248:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
ffffffff8001d24c:	48 89 c6             	mov    %rax,%rsi
ffffffff8001d24f:	48 89 d7             	mov    %rdx,%rdi
ffffffff8001d252:	e8 5a d7 ff ff       	call   ffffffff8001a9b1 <ZyanVectorGetSize>
ffffffff8001d257:	89 45 f4             	mov    %eax,-0xc(%rbp)
ffffffff8001d25a:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff8001d25d:	85 c0                	test   %eax,%eax
ffffffff8001d25f:	79 08                	jns    ffffffff8001d269 <ZyanBitsetNone+0x4a>
ffffffff8001d261:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff8001d264:	e9 8e 00 00 00       	jmp    ffffffff8001d2f7 <ZyanBitsetNone+0xd8>
ffffffff8001d269:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
ffffffff8001d270:	00 
ffffffff8001d271:	eb 74                	jmp    ffffffff8001d2e7 <ZyanBitsetNone+0xc8>
ffffffff8001d273:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8001d277:	48 8d 48 08          	lea    0x8(%rax),%rcx
ffffffff8001d27b:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
ffffffff8001d27f:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
ffffffff8001d283:	48 89 c2             	mov    %rax,%rdx
ffffffff8001d286:	48 89 cf             	mov    %rcx,%rdi
ffffffff8001d289:	e8 4b c8 ff ff       	call   ffffffff80019ad9 <ZyanVectorGetPointer>
ffffffff8001d28e:	89 45 f0             	mov    %eax,-0x10(%rbp)
ffffffff8001d291:	8b 45 f0             	mov    -0x10(%rbp),%eax
ffffffff8001d294:	85 c0                	test   %eax,%eax
ffffffff8001d296:	79 05                	jns    ffffffff8001d29d <ZyanBitsetNone+0x7e>
ffffffff8001d298:	8b 45 f0             	mov    -0x10(%rbp),%eax
ffffffff8001d29b:	eb 5a                	jmp    ffffffff8001d2f7 <ZyanBitsetNone+0xd8>
ffffffff8001d29d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8001d2a1:	48 83 e8 01          	sub    $0x1,%rax
ffffffff8001d2a5:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
ffffffff8001d2a9:	73 12                	jae    ffffffff8001d2bd <ZyanBitsetNone+0x9e>
ffffffff8001d2ab:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8001d2af:	0f b6 00             	movzbl (%rax),%eax
ffffffff8001d2b2:	84 c0                	test   %al,%al
ffffffff8001d2b4:	74 2c                	je     ffffffff8001d2e2 <ZyanBitsetNone+0xc3>
ffffffff8001d2b6:	b8 03 00 10 00       	mov    $0x100003,%eax
ffffffff8001d2bb:	eb 3a                	jmp    ffffffff8001d2f7 <ZyanBitsetNone+0xd8>
ffffffff8001d2bd:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8001d2c1:	48 8b 00             	mov    (%rax),%rax
ffffffff8001d2c4:	83 e0 07             	and    $0x7,%eax
ffffffff8001d2c7:	83 e8 09             	sub    $0x9,%eax
ffffffff8001d2ca:	88 45 ef             	mov    %al,-0x11(%rbp)
ffffffff8001d2cd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8001d2d1:	0f b6 00             	movzbl (%rax),%eax
ffffffff8001d2d4:	22 45 ef             	and    -0x11(%rbp),%al
ffffffff8001d2d7:	84 c0                	test   %al,%al
ffffffff8001d2d9:	74 07                	je     ffffffff8001d2e2 <ZyanBitsetNone+0xc3>
ffffffff8001d2db:	b8 03 00 10 00       	mov    $0x100003,%eax
ffffffff8001d2e0:	eb 15                	jmp    ffffffff8001d2f7 <ZyanBitsetNone+0xd8>
ffffffff8001d2e2:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
ffffffff8001d2e7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8001d2eb:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
ffffffff8001d2ef:	72 82                	jb     ffffffff8001d273 <ZyanBitsetNone+0x54>
ffffffff8001d2f1:	b8 02 00 10 00       	mov    $0x100002,%eax
ffffffff8001d2f6:	90                   	nop
ffffffff8001d2f7:	c9                   	leave  
ffffffff8001d2f8:	c3                   	ret    

ffffffff8001d2f9 <ZydisCategoryGetString>:
ffffffff8001d2f9:	f3 0f 1e fa          	endbr64 
ffffffff8001d2fd:	55                   	push   %rbp
ffffffff8001d2fe:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001d301:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff8001d305:	89 7d fc             	mov    %edi,-0x4(%rbp)
ffffffff8001d308:	83 7d fc 6c          	cmpl   $0x6c,-0x4(%rbp)
ffffffff8001d30c:	76 07                	jbe    ffffffff8001d315 <ZydisCategoryGetString+0x1c>
ffffffff8001d30e:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001d313:	eb 16                	jmp    ffffffff8001d32b <ZydisCategoryGetString+0x32>
ffffffff8001d315:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8001d318:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
ffffffff8001d31f:	00 
ffffffff8001d320:	48 8d 05 19 9f 08 00 	lea    0x89f19(%rip),%rax        # ffffffff800a7240 <STR_INSTRUCTIONCATEGORY>
ffffffff8001d327:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
ffffffff8001d32b:	c9                   	leave  
ffffffff8001d32c:	c3                   	ret    

ffffffff8001d32d <ZydisISASetGetString>:
ffffffff8001d32d:	f3 0f 1e fa          	endbr64 
ffffffff8001d331:	55                   	push   %rbp
ffffffff8001d332:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001d335:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff8001d339:	89 7d fc             	mov    %edi,-0x4(%rbp)
ffffffff8001d33c:	81 7d fc b4 00 00 00 	cmpl   $0xb4,-0x4(%rbp)
ffffffff8001d343:	76 07                	jbe    ffffffff8001d34c <ZydisISASetGetString+0x1f>
ffffffff8001d345:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001d34a:	eb 16                	jmp    ffffffff8001d362 <ZydisISASetGetString+0x35>
ffffffff8001d34c:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8001d34f:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
ffffffff8001d356:	00 
ffffffff8001d357:	48 8d 05 62 a2 08 00 	lea    0x8a262(%rip),%rax        # ffffffff800a75c0 <STR_ISASET>
ffffffff8001d35e:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
ffffffff8001d362:	c9                   	leave  
ffffffff8001d363:	c3                   	ret    

ffffffff8001d364 <ZydisISAExtGetString>:
ffffffff8001d364:	f3 0f 1e fa          	endbr64 
ffffffff8001d368:	55                   	push   %rbp
ffffffff8001d369:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001d36c:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff8001d370:	89 7d fc             	mov    %edi,-0x4(%rbp)
ffffffff8001d373:	83 7d fc 58          	cmpl   $0x58,-0x4(%rbp)
ffffffff8001d377:	76 07                	jbe    ffffffff8001d380 <ZydisISAExtGetString+0x1c>
ffffffff8001d379:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001d37e:	eb 16                	jmp    ffffffff8001d396 <ZydisISAExtGetString+0x32>
ffffffff8001d380:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8001d383:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
ffffffff8001d38a:	00 
ffffffff8001d38b:	48 8d 05 ee a7 08 00 	lea    0x8a7ee(%rip),%rax        # ffffffff800a7b80 <STR_ISAEXT>
ffffffff8001d392:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
ffffffff8001d396:	c9                   	leave  
ffffffff8001d397:	c3                   	ret    

ffffffff8001d398 <ZYAN_MEMCPY.lto_priv.4>:
ffffffff8001d398:	55                   	push   %rbp
ffffffff8001d399:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001d39c:	48 83 ec 28          	sub    $0x28,%rsp
ffffffff8001d3a0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff8001d3a4:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
ffffffff8001d3a8:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
ffffffff8001d3ac:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001d3b0:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8001d3b4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8001d3b8:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff8001d3bc:	eb 1d                	jmp    ffffffff8001d3db <ZYAN_MEMCPY.lto_priv.4+0x43>
ffffffff8001d3be:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff8001d3c2:	48 8d 42 01          	lea    0x1(%rdx),%rax
ffffffff8001d3c6:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff8001d3ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001d3ce:	48 8d 48 01          	lea    0x1(%rax),%rcx
ffffffff8001d3d2:	48 89 4d f8          	mov    %rcx,-0x8(%rbp)
ffffffff8001d3d6:	0f b6 12             	movzbl (%rdx),%edx
ffffffff8001d3d9:	88 10                	mov    %dl,(%rax)
ffffffff8001d3db:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8001d3df:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
ffffffff8001d3e3:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
ffffffff8001d3e7:	48 85 c0             	test   %rax,%rax
ffffffff8001d3ea:	75 d2                	jne    ffffffff8001d3be <ZYAN_MEMCPY.lto_priv.4+0x26>
ffffffff8001d3ec:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001d3f0:	c9                   	leave  
ffffffff8001d3f1:	c3                   	ret    

ffffffff8001d3f2 <ZYAN_MEMSET.lto_priv.2>:
ffffffff8001d3f2:	55                   	push   %rbp
ffffffff8001d3f3:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001d3f6:	48 83 ec 28          	sub    $0x28,%rsp
ffffffff8001d3fa:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff8001d3fe:	89 75 e4             	mov    %esi,-0x1c(%rbp)
ffffffff8001d401:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
ffffffff8001d405:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001d409:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8001d40d:	eb 11                	jmp    ffffffff8001d420 <ZYAN_MEMSET.lto_priv.2+0x2e>
ffffffff8001d40f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001d413:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffff8001d417:	48 89 55 f8          	mov    %rdx,-0x8(%rbp)
ffffffff8001d41b:	8b 55 e4             	mov    -0x1c(%rbp),%edx
ffffffff8001d41e:	88 10                	mov    %dl,(%rax)
ffffffff8001d420:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8001d424:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
ffffffff8001d428:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
ffffffff8001d42c:	48 85 c0             	test   %rax,%rax
ffffffff8001d42f:	75 de                	jne    ffffffff8001d40f <ZYAN_MEMSET.lto_priv.2+0x1d>
ffffffff8001d431:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001d435:	c9                   	leave  
ffffffff8001d436:	c3                   	ret    

ffffffff8001d437 <ZydisGetEncodableEncoding>:
ffffffff8001d437:	f3 0f 1e fa          	endbr64 
ffffffff8001d43b:	55                   	push   %rbp
ffffffff8001d43c:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001d43f:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff8001d443:	89 7d fc             	mov    %edi,-0x4(%rbp)
ffffffff8001d446:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8001d449:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
ffffffff8001d450:	00 
ffffffff8001d451:	48 8d 05 88 0a 02 00 	lea    0x20a88(%rip),%rax        # ffffffff8003dee0 <encoding_lookup.26>
ffffffff8001d458:	8b 04 02             	mov    (%rdx,%rax,1),%eax
ffffffff8001d45b:	c9                   	leave  
ffffffff8001d45c:	c3                   	ret    

ffffffff8001d45d <ZydisGetMachineModeWidth>:
ffffffff8001d45d:	f3 0f 1e fa          	endbr64 
ffffffff8001d461:	55                   	push   %rbp
ffffffff8001d462:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001d465:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff8001d469:	89 7d fc             	mov    %edi,-0x4(%rbp)
ffffffff8001d46c:	83 7d fc 05          	cmpl   $0x5,-0x4(%rbp)
ffffffff8001d470:	77 39                	ja     ffffffff8001d4ab <ZydisGetMachineModeWidth+0x4e>
ffffffff8001d472:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8001d475:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
ffffffff8001d47c:	00 
ffffffff8001d47d:	48 8d 05 a8 07 02 00 	lea    0x207a8(%rip),%rax        # ffffffff8003dc2c <zero.0+0x4>
ffffffff8001d484:	8b 04 02             	mov    (%rdx,%rax,1),%eax
ffffffff8001d487:	48 98                	cltq   
ffffffff8001d489:	48 8d 15 9c 07 02 00 	lea    0x2079c(%rip),%rdx        # ffffffff8003dc2c <zero.0+0x4>
ffffffff8001d490:	48 01 d0             	add    %rdx,%rax
ffffffff8001d493:	3e ff e0             	notrack jmp *%rax
ffffffff8001d496:	b8 10 00 00 00       	mov    $0x10,%eax
ffffffff8001d49b:	eb 10                	jmp    ffffffff8001d4ad <ZydisGetMachineModeWidth+0x50>
ffffffff8001d49d:	b8 20 00 00 00       	mov    $0x20,%eax
ffffffff8001d4a2:	eb 09                	jmp    ffffffff8001d4ad <ZydisGetMachineModeWidth+0x50>
ffffffff8001d4a4:	b8 40 00 00 00       	mov    $0x40,%eax
ffffffff8001d4a9:	eb 02                	jmp    ffffffff8001d4ad <ZydisGetMachineModeWidth+0x50>
ffffffff8001d4ab:	eb fe                	jmp    ffffffff8001d4ab <ZydisGetMachineModeWidth+0x4e>
ffffffff8001d4ad:	c9                   	leave  
ffffffff8001d4ae:	c3                   	ret    

ffffffff8001d4af <ZydisGetAszFromHint>:
ffffffff8001d4af:	f3 0f 1e fa          	endbr64 
ffffffff8001d4b3:	55                   	push   %rbp
ffffffff8001d4b4:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001d4b7:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff8001d4bb:	89 7d fc             	mov    %edi,-0x4(%rbp)
ffffffff8001d4be:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8001d4c1:	48 8d 15 30 0a 02 00 	lea    0x20a30(%rip),%rdx        # ffffffff8003def8 <lookup.25>
ffffffff8001d4c8:	0f b6 04 10          	movzbl (%rax,%rdx,1),%eax
ffffffff8001d4cc:	c9                   	leave  
ffffffff8001d4cd:	c3                   	ret    

ffffffff8001d4ce <ZydisGetOszFromHint>:
ffffffff8001d4ce:	f3 0f 1e fa          	endbr64 
ffffffff8001d4d2:	55                   	push   %rbp
ffffffff8001d4d3:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001d4d6:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff8001d4da:	89 7d fc             	mov    %edi,-0x4(%rbp)
ffffffff8001d4dd:	89 75 f8             	mov    %esi,-0x8(%rbp)
ffffffff8001d4e0:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
ffffffff8001d4e4:	75 08                	jne    ffffffff8001d4ee <ZydisGetOszFromHint+0x20>
ffffffff8001d4e6:	8b 45 f8             	mov    -0x8(%rbp),%eax
ffffffff8001d4e9:	c1 e0 04             	shl    $0x4,%eax
ffffffff8001d4ec:	eb 0e                	jmp    ffffffff8001d4fc <ZydisGetOszFromHint+0x2e>
ffffffff8001d4ee:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8001d4f1:	ba 04 00 00 00       	mov    $0x4,%edx
ffffffff8001d4f6:	89 c1                	mov    %eax,%ecx
ffffffff8001d4f8:	d3 e2                	shl    %cl,%edx
ffffffff8001d4fa:	89 d0                	mov    %edx,%eax
ffffffff8001d4fc:	c9                   	leave  
ffffffff8001d4fd:	c3                   	ret    

ffffffff8001d4fe <ZydisGetOperandSizeFromElementSize>:
ffffffff8001d4fe:	f3 0f 1e fa          	endbr64 
ffffffff8001d502:	55                   	push   %rbp
ffffffff8001d503:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001d506:	48 83 ec 28          	sub    $0x28,%rsp
ffffffff8001d50a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff8001d50e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
ffffffff8001d512:	89 d0                	mov    %edx,%eax
ffffffff8001d514:	89 ca                	mov    %ecx,%edx
ffffffff8001d516:	66 89 45 dc          	mov    %ax,-0x24(%rbp)
ffffffff8001d51a:	89 d0                	mov    %edx,%eax
ffffffff8001d51c:	88 45 d8             	mov    %al,-0x28(%rbp)
ffffffff8001d51f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001d523:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff8001d527:	0f b6 40 04          	movzbl 0x4(%rax),%eax
ffffffff8001d52b:	83 e0 0e             	and    $0xe,%eax
ffffffff8001d52e:	3c 08                	cmp    $0x8,%al
ffffffff8001d530:	75 43                	jne    ffffffff8001d575 <ZydisGetOperandSizeFromElementSize+0x77>
ffffffff8001d532:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001d536:	48 8b 00             	mov    (%rax),%rax
ffffffff8001d539:	8b 00                	mov    (%rax),%eax
ffffffff8001d53b:	85 c0                	test   %eax,%eax
ffffffff8001d53d:	75 36                	jne    ffffffff8001d575 <ZydisGetOperandSizeFromElementSize+0x77>
ffffffff8001d53f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8001d543:	48 83 c0 04          	add    $0x4,%rax
ffffffff8001d547:	0f b7 00             	movzwl (%rax),%eax
ffffffff8001d54a:	66 39 45 dc          	cmp    %ax,-0x24(%rbp)
ffffffff8001d54e:	75 0a                	jne    ffffffff8001d55a <ZydisGetOperandSizeFromElementSize+0x5c>
ffffffff8001d550:	b8 40 00 00 00       	mov    $0x40,%eax
ffffffff8001d555:	e9 35 01 00 00       	jmp    ffffffff8001d68f <ZydisGetOperandSizeFromElementSize+0x191>
ffffffff8001d55a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8001d55e:	0f b7 00             	movzwl (%rax),%eax
ffffffff8001d561:	66 39 45 dc          	cmp    %ax,-0x24(%rbp)
ffffffff8001d565:	0f 85 1e 01 00 00    	jne    ffffffff8001d689 <ZydisGetOperandSizeFromElementSize+0x18b>
ffffffff8001d56b:	b8 10 00 00 00       	mov    $0x10,%eax
ffffffff8001d570:	e9 1a 01 00 00       	jmp    ffffffff8001d68f <ZydisGetOperandSizeFromElementSize+0x191>
ffffffff8001d575:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001d579:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff8001d57d:	0f b6 40 04          	movzbl 0x4(%rax),%eax
ffffffff8001d581:	83 e0 0e             	and    $0xe,%eax
ffffffff8001d584:	3c 0a                	cmp    $0xa,%al
ffffffff8001d586:	75 2c                	jne    ffffffff8001d5b4 <ZydisGetOperandSizeFromElementSize+0xb6>
ffffffff8001d588:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001d58c:	48 8b 00             	mov    (%rax),%rax
ffffffff8001d58f:	8b 00                	mov    (%rax),%eax
ffffffff8001d591:	85 c0                	test   %eax,%eax
ffffffff8001d593:	75 1f                	jne    ffffffff8001d5b4 <ZydisGetOperandSizeFromElementSize+0xb6>
ffffffff8001d595:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8001d599:	48 83 c0 04          	add    $0x4,%rax
ffffffff8001d59d:	0f b7 00             	movzwl (%rax),%eax
ffffffff8001d5a0:	66 39 45 dc          	cmp    %ax,-0x24(%rbp)
ffffffff8001d5a4:	0f 85 e0 00 00 00    	jne    ffffffff8001d68a <ZydisGetOperandSizeFromElementSize+0x18c>
ffffffff8001d5aa:	b8 40 00 00 00       	mov    $0x40,%eax
ffffffff8001d5af:	e9 db 00 00 00       	jmp    ffffffff8001d68f <ZydisGetOperandSizeFromElementSize+0x191>
ffffffff8001d5b4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001d5b8:	48 8b 00             	mov    (%rax),%rax
ffffffff8001d5bb:	8b 00                	mov    (%rax),%eax
ffffffff8001d5bd:	89 c7                	mov    %eax,%edi
ffffffff8001d5bf:	e8 99 fe ff ff       	call   ffffffff8001d45d <ZydisGetMachineModeWidth>
ffffffff8001d5c4:	c0 e8 05             	shr    $0x5,%al
ffffffff8001d5c7:	88 45 fb             	mov    %al,-0x5(%rbp)
ffffffff8001d5ca:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
ffffffff8001d5d1:	e9 a7 00 00 00       	jmp    ffffffff8001d67d <ZydisGetOperandSizeFromElementSize+0x17f>
ffffffff8001d5d6:	0f b6 45 fb          	movzbl -0x5(%rbp),%eax
ffffffff8001d5da:	8b 55 fc             	mov    -0x4(%rbp),%edx
ffffffff8001d5dd:	48 63 ca             	movslq %edx,%rcx
ffffffff8001d5e0:	48 63 d0             	movslq %eax,%rdx
ffffffff8001d5e3:	48 89 d0             	mov    %rdx,%rax
ffffffff8001d5e6:	48 01 c0             	add    %rax,%rax
ffffffff8001d5e9:	48 01 d0             	add    %rdx,%rax
ffffffff8001d5ec:	48 8d 14 08          	lea    (%rax,%rcx,1),%rdx
ffffffff8001d5f0:	48 8d 05 09 09 02 00 	lea    0x20909(%rip),%rax        # ffffffff8003df00 <eosz_priority_lookup.24>
ffffffff8001d5f7:	48 01 d0             	add    %rdx,%rax
ffffffff8001d5fa:	0f b6 00             	movzbl (%rax),%eax
ffffffff8001d5fd:	88 45 fa             	mov    %al,-0x6(%rbp)
ffffffff8001d600:	80 7d fa ff          	cmpb   $0xff,-0x6(%rbp)
ffffffff8001d604:	74 72                	je     ffffffff8001d678 <ZydisGetOperandSizeFromElementSize+0x17a>
ffffffff8001d606:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001d60a:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff8001d60e:	0f b6 40 07          	movzbl 0x7(%rax),%eax
ffffffff8001d612:	c0 e8 05             	shr    $0x5,%al
ffffffff8001d615:	0f b6 d0             	movzbl %al,%edx
ffffffff8001d618:	0f be 45 fa          	movsbl -0x6(%rbp),%eax
ffffffff8001d61c:	89 c1                	mov    %eax,%ecx
ffffffff8001d61e:	d3 fa                	sar    %cl,%edx
ffffffff8001d620:	89 d0                	mov    %edx,%eax
ffffffff8001d622:	83 e0 01             	and    $0x1,%eax
ffffffff8001d625:	85 c0                	test   %eax,%eax
ffffffff8001d627:	74 4f                	je     ffffffff8001d678 <ZydisGetOperandSizeFromElementSize+0x17a>
ffffffff8001d629:	80 7d d8 00          	cmpb   $0x0,-0x28(%rbp)
ffffffff8001d62d:	74 19                	je     ffffffff8001d648 <ZydisGetOperandSizeFromElementSize+0x14a>
ffffffff8001d62f:	48 0f be 45 fa       	movsbq -0x6(%rbp),%rax
ffffffff8001d634:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
ffffffff8001d638:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8001d63c:	48 01 d0             	add    %rdx,%rax
ffffffff8001d63f:	0f b7 00             	movzwl (%rax),%eax
ffffffff8001d642:	66 39 45 dc          	cmp    %ax,-0x24(%rbp)
ffffffff8001d646:	74 1f                	je     ffffffff8001d667 <ZydisGetOperandSizeFromElementSize+0x169>
ffffffff8001d648:	80 7d d8 00          	cmpb   $0x0,-0x28(%rbp)
ffffffff8001d64c:	75 2b                	jne    ffffffff8001d679 <ZydisGetOperandSizeFromElementSize+0x17b>
ffffffff8001d64e:	48 0f be 45 fa       	movsbq -0x6(%rbp),%rax
ffffffff8001d653:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
ffffffff8001d657:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8001d65b:	48 01 d0             	add    %rdx,%rax
ffffffff8001d65e:	0f b7 00             	movzwl (%rax),%eax
ffffffff8001d661:	66 39 45 dc          	cmp    %ax,-0x24(%rbp)
ffffffff8001d665:	77 12                	ja     ffffffff8001d679 <ZydisGetOperandSizeFromElementSize+0x17b>
ffffffff8001d667:	0f be 45 fa          	movsbl -0x6(%rbp),%eax
ffffffff8001d66b:	ba 10 00 00 00       	mov    $0x10,%edx
ffffffff8001d670:	89 c1                	mov    %eax,%ecx
ffffffff8001d672:	d3 e2                	shl    %cl,%edx
ffffffff8001d674:	89 d0                	mov    %edx,%eax
ffffffff8001d676:	eb 17                	jmp    ffffffff8001d68f <ZydisGetOperandSizeFromElementSize+0x191>
ffffffff8001d678:	90                   	nop
ffffffff8001d679:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
ffffffff8001d67d:	83 7d fc 02          	cmpl   $0x2,-0x4(%rbp)
ffffffff8001d681:	0f 8e 4f ff ff ff    	jle    ffffffff8001d5d6 <ZydisGetOperandSizeFromElementSize+0xd8>
ffffffff8001d687:	eb 01                	jmp    ffffffff8001d68a <ZydisGetOperandSizeFromElementSize+0x18c>
ffffffff8001d689:	90                   	nop
ffffffff8001d68a:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001d68f:	c9                   	leave  
ffffffff8001d690:	c3                   	ret    

ffffffff8001d691 <ZydisGetScaledImmSize>:
ffffffff8001d691:	f3 0f 1e fa          	endbr64 
ffffffff8001d695:	55                   	push   %rbp
ffffffff8001d696:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001d699:	48 83 ec 28          	sub    $0x28,%rsp
ffffffff8001d69d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff8001d6a1:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
ffffffff8001d6a5:	89 d0                	mov    %edx,%eax
ffffffff8001d6a7:	88 45 dc             	mov    %al,-0x24(%rbp)
ffffffff8001d6aa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001d6ae:	0f b6 40 28          	movzbl 0x28(%rax),%eax
ffffffff8001d6b2:	84 c0                	test   %al,%al
ffffffff8001d6b4:	75 50                	jne    ffffffff8001d706 <ZydisGetScaledImmSize+0x75>
ffffffff8001d6b6:	0f b6 45 dc          	movzbl -0x24(%rbp),%eax
ffffffff8001d6ba:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
ffffffff8001d6be:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
ffffffff8001d6c2:	b9 00 00 00 00       	mov    $0x0,%ecx
ffffffff8001d6c7:	89 c2                	mov    %eax,%edx
ffffffff8001d6c9:	e8 30 fe ff ff       	call   ffffffff8001d4fe <ZydisGetOperandSizeFromElementSize>
ffffffff8001d6ce:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff8001d6d2:	88 42 28             	mov    %al,0x28(%rdx)
ffffffff8001d6d5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001d6d9:	0f b6 40 28          	movzbl 0x28(%rax),%eax
ffffffff8001d6dd:	84 c0                	test   %al,%al
ffffffff8001d6df:	74 1e                	je     ffffffff8001d6ff <ZydisGetScaledImmSize+0x6e>
ffffffff8001d6e1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001d6e5:	0f b6 40 28          	movzbl 0x28(%rax),%eax
ffffffff8001d6e9:	c0 e8 05             	shr    $0x5,%al
ffffffff8001d6ec:	0f b6 c0             	movzbl %al,%eax
ffffffff8001d6ef:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
ffffffff8001d6f3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8001d6f7:	48 01 d0             	add    %rdx,%rax
ffffffff8001d6fa:	0f b7 00             	movzwl (%rax),%eax
ffffffff8001d6fd:	eb 49                	jmp    ffffffff8001d748 <ZydisGetScaledImmSize+0xb7>
ffffffff8001d6ff:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001d704:	eb 42                	jmp    ffffffff8001d748 <ZydisGetScaledImmSize+0xb7>
ffffffff8001d706:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001d70a:	0f b6 40 28          	movzbl 0x28(%rax),%eax
ffffffff8001d70e:	c0 e8 05             	shr    $0x5,%al
ffffffff8001d711:	88 45 ff             	mov    %al,-0x1(%rbp)
ffffffff8001d714:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
ffffffff8001d718:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
ffffffff8001d71c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8001d720:	48 01 d0             	add    %rdx,%rax
ffffffff8001d723:	0f b7 10             	movzwl (%rax),%edx
ffffffff8001d726:	0f b6 45 dc          	movzbl -0x24(%rbp),%eax
ffffffff8001d72a:	66 39 c2             	cmp    %ax,%dx
ffffffff8001d72d:	72 14                	jb     ffffffff8001d743 <ZydisGetScaledImmSize+0xb2>
ffffffff8001d72f:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
ffffffff8001d733:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
ffffffff8001d737:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8001d73b:	48 01 d0             	add    %rdx,%rax
ffffffff8001d73e:	0f b7 00             	movzwl (%rax),%eax
ffffffff8001d741:	eb 05                	jmp    ffffffff8001d748 <ZydisGetScaledImmSize+0xb7>
ffffffff8001d743:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001d748:	c9                   	leave  
ffffffff8001d749:	c3                   	ret    

ffffffff8001d74a <ZydisGetSignedImmSize>:
ffffffff8001d74a:	f3 0f 1e fa          	endbr64 
ffffffff8001d74e:	55                   	push   %rbp
ffffffff8001d74f:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001d752:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff8001d756:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8001d75a:	48 83 7d f8 80       	cmpq   $0xffffffffffffff80,-0x8(%rbp)
ffffffff8001d75f:	7c 0e                	jl     ffffffff8001d76f <ZydisGetSignedImmSize+0x25>
ffffffff8001d761:	48 83 7d f8 7f       	cmpq   $0x7f,-0x8(%rbp)
ffffffff8001d766:	7f 07                	jg     ffffffff8001d76f <ZydisGetSignedImmSize+0x25>
ffffffff8001d768:	b8 08 00 00 00       	mov    $0x8,%eax
ffffffff8001d76d:	eb 42                	jmp    ffffffff8001d7b1 <ZydisGetSignedImmSize+0x67>
ffffffff8001d76f:	48 81 7d f8 00 80 ff 	cmpq   $0xffffffffffff8000,-0x8(%rbp)
ffffffff8001d776:	ff 
ffffffff8001d777:	7c 11                	jl     ffffffff8001d78a <ZydisGetSignedImmSize+0x40>
ffffffff8001d779:	48 81 7d f8 ff 7f 00 	cmpq   $0x7fff,-0x8(%rbp)
ffffffff8001d780:	00 
ffffffff8001d781:	7f 07                	jg     ffffffff8001d78a <ZydisGetSignedImmSize+0x40>
ffffffff8001d783:	b8 10 00 00 00       	mov    $0x10,%eax
ffffffff8001d788:	eb 27                	jmp    ffffffff8001d7b1 <ZydisGetSignedImmSize+0x67>
ffffffff8001d78a:	48 b8 ff ff ff 7f ff 	movabs $0xffffffff7fffffff,%rax
ffffffff8001d791:	ff ff ff 
ffffffff8001d794:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
ffffffff8001d798:	7e 12                	jle    ffffffff8001d7ac <ZydisGetSignedImmSize+0x62>
ffffffff8001d79a:	b8 00 00 00 80       	mov    $0x80000000,%eax
ffffffff8001d79f:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
ffffffff8001d7a3:	7d 07                	jge    ffffffff8001d7ac <ZydisGetSignedImmSize+0x62>
ffffffff8001d7a5:	b8 20 00 00 00       	mov    $0x20,%eax
ffffffff8001d7aa:	eb 05                	jmp    ffffffff8001d7b1 <ZydisGetSignedImmSize+0x67>
ffffffff8001d7ac:	b8 40 00 00 00       	mov    $0x40,%eax
ffffffff8001d7b1:	c9                   	leave  
ffffffff8001d7b2:	c3                   	ret    

ffffffff8001d7b3 <ZydisGetUnsignedImmSize>:
ffffffff8001d7b3:	f3 0f 1e fa          	endbr64 
ffffffff8001d7b7:	55                   	push   %rbp
ffffffff8001d7b8:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001d7bb:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff8001d7bf:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8001d7c3:	48 81 7d f8 ff 00 00 	cmpq   $0xff,-0x8(%rbp)
ffffffff8001d7ca:	00 
ffffffff8001d7cb:	77 07                	ja     ffffffff8001d7d4 <ZydisGetUnsignedImmSize+0x21>
ffffffff8001d7cd:	b8 08 00 00 00       	mov    $0x8,%eax
ffffffff8001d7d2:	eb 28                	jmp    ffffffff8001d7fc <ZydisGetUnsignedImmSize+0x49>
ffffffff8001d7d4:	48 81 7d f8 ff ff 00 	cmpq   $0xffff,-0x8(%rbp)
ffffffff8001d7db:	00 
ffffffff8001d7dc:	77 07                	ja     ffffffff8001d7e5 <ZydisGetUnsignedImmSize+0x32>
ffffffff8001d7de:	b8 10 00 00 00       	mov    $0x10,%eax
ffffffff8001d7e3:	eb 17                	jmp    ffffffff8001d7fc <ZydisGetUnsignedImmSize+0x49>
ffffffff8001d7e5:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
ffffffff8001d7ea:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
ffffffff8001d7ee:	77 07                	ja     ffffffff8001d7f7 <ZydisGetUnsignedImmSize+0x44>
ffffffff8001d7f0:	b8 20 00 00 00       	mov    $0x20,%eax
ffffffff8001d7f5:	eb 05                	jmp    ffffffff8001d7fc <ZydisGetUnsignedImmSize+0x49>
ffffffff8001d7f7:	b8 40 00 00 00       	mov    $0x40,%eax
ffffffff8001d7fc:	c9                   	leave  
ffffffff8001d7fd:	c3                   	ret    

ffffffff8001d7fe <ZydisIsImmSigned>:
ffffffff8001d7fe:	f3 0f 1e fa          	endbr64 
ffffffff8001d802:	55                   	push   %rbp
ffffffff8001d803:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001d806:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff8001d80a:	89 7d fc             	mov    %edi,-0x4(%rbp)
ffffffff8001d80d:	83 7d fc 22          	cmpl   $0x22,-0x4(%rbp)
ffffffff8001d811:	77 2d                	ja     ffffffff8001d840 <ZydisIsImmSigned+0x42>
ffffffff8001d813:	83 7d fc 15          	cmpl   $0x15,-0x4(%rbp)
ffffffff8001d817:	73 19                	jae    ffffffff8001d832 <ZydisIsImmSigned+0x34>
ffffffff8001d819:	83 7d fc 05          	cmpl   $0x5,-0x4(%rbp)
ffffffff8001d81d:	74 1a                	je     ffffffff8001d839 <ZydisIsImmSigned+0x3b>
ffffffff8001d81f:	83 7d fc 05          	cmpl   $0x5,-0x4(%rbp)
ffffffff8001d823:	72 1b                	jb     ffffffff8001d840 <ZydisIsImmSigned+0x42>
ffffffff8001d825:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8001d828:	83 e8 07             	sub    $0x7,%eax
ffffffff8001d82b:	83 f8 0d             	cmp    $0xd,%eax
ffffffff8001d82e:	77 10                	ja     ffffffff8001d840 <ZydisIsImmSigned+0x42>
ffffffff8001d830:	eb 07                	jmp    ffffffff8001d839 <ZydisIsImmSigned+0x3b>
ffffffff8001d832:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8001d837:	eb 09                	jmp    ffffffff8001d842 <ZydisIsImmSigned+0x44>
ffffffff8001d839:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001d83e:	eb 02                	jmp    ffffffff8001d842 <ZydisIsImmSigned+0x44>
ffffffff8001d840:	eb fe                	jmp    ffffffff8001d840 <ZydisIsImmSigned+0x42>
ffffffff8001d842:	c9                   	leave  
ffffffff8001d843:	c3                   	ret    

ffffffff8001d844 <ZydisGetEffectiveImmSize>:
ffffffff8001d844:	f3 0f 1e fa          	endbr64 
ffffffff8001d848:	55                   	push   %rbp
ffffffff8001d849:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001d84c:	48 83 ec 28          	sub    $0x28,%rsp
ffffffff8001d850:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff8001d854:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
ffffffff8001d858:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
ffffffff8001d85c:	c6 45 ff 00          	movb   $0x0,-0x1(%rbp)
ffffffff8001d860:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8001d864:	0f b6 40 09          	movzbl 0x9(%rax),%eax
ffffffff8001d868:	83 e0 3f             	and    $0x3f,%eax
ffffffff8001d86b:	0f b6 c0             	movzbl %al,%eax
ffffffff8001d86e:	89 c7                	mov    %eax,%edi
ffffffff8001d870:	e8 89 ff ff ff       	call   ffffffff8001d7fe <ZydisIsImmSigned>
ffffffff8001d875:	84 c0                	test   %al,%al
ffffffff8001d877:	74 0e                	je     ffffffff8001d887 <ZydisGetEffectiveImmSize+0x43>
ffffffff8001d879:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8001d87d:	48 89 c7             	mov    %rax,%rdi
ffffffff8001d880:	e8 c5 fe ff ff       	call   ffffffff8001d74a <ZydisGetSignedImmSize>
ffffffff8001d885:	eb 0c                	jmp    ffffffff8001d893 <ZydisGetEffectiveImmSize+0x4f>
ffffffff8001d887:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8001d88b:	48 89 c7             	mov    %rax,%rdi
ffffffff8001d88e:	e8 20 ff ff ff       	call   ffffffff8001d7b3 <ZydisGetUnsignedImmSize>
ffffffff8001d893:	88 45 fe             	mov    %al,-0x2(%rbp)
ffffffff8001d896:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8001d89a:	0f b6 40 09          	movzbl 0x9(%rax),%eax
ffffffff8001d89e:	83 e0 3f             	and    $0x3f,%eax
ffffffff8001d8a1:	0f b6 c0             	movzbl %al,%eax
ffffffff8001d8a4:	83 e8 05             	sub    $0x5,%eax
ffffffff8001d8a7:	83 f8 1d             	cmp    $0x1d,%eax
ffffffff8001d8aa:	0f 87 f0 01 00 00    	ja     ffffffff8001daa0 <ZydisGetEffectiveImmSize+0x25c>
ffffffff8001d8b0:	89 c0                	mov    %eax,%eax
ffffffff8001d8b2:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
ffffffff8001d8b9:	00 
ffffffff8001d8ba:	48 8d 05 83 03 02 00 	lea    0x20383(%rip),%rax        # ffffffff8003dc44 <zero.0+0x1c>
ffffffff8001d8c1:	8b 04 02             	mov    (%rdx,%rax,1),%eax
ffffffff8001d8c4:	48 98                	cltq   
ffffffff8001d8c6:	48 8d 15 77 03 02 00 	lea    0x20377(%rip),%rdx        # ffffffff8003dc44 <zero.0+0x1c>
ffffffff8001d8cd:	48 01 d0             	add    %rdx,%rax
ffffffff8001d8d0:	3e ff e0             	notrack jmp *%rax
ffffffff8001d8d3:	c6 45 ff 08          	movb   $0x8,-0x1(%rbp)
ffffffff8001d8d7:	e9 c7 01 00 00       	jmp    ffffffff8001daa3 <ZydisGetEffectiveImmSize+0x25f>
ffffffff8001d8dc:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8001d8e0:	48 83 f8 0f          	cmp    $0xf,%rax
ffffffff8001d8e4:	77 07                	ja     ffffffff8001d8ed <ZydisGetEffectiveImmSize+0xa9>
ffffffff8001d8e6:	b8 08 00 00 00       	mov    $0x8,%eax
ffffffff8001d8eb:	eb 05                	jmp    ffffffff8001d8f2 <ZydisGetEffectiveImmSize+0xae>
ffffffff8001d8ed:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001d8f2:	88 45 ff             	mov    %al,-0x1(%rbp)
ffffffff8001d8f5:	e9 a9 01 00 00       	jmp    ffffffff8001daa3 <ZydisGetEffectiveImmSize+0x25f>
ffffffff8001d8fa:	c6 45 ff 10          	movb   $0x10,-0x1(%rbp)
ffffffff8001d8fe:	e9 a0 01 00 00       	jmp    ffffffff8001daa3 <ZydisGetEffectiveImmSize+0x25f>
ffffffff8001d903:	c6 45 ff 20          	movb   $0x20,-0x1(%rbp)
ffffffff8001d907:	e9 97 01 00 00       	jmp    ffffffff8001daa3 <ZydisGetEffectiveImmSize+0x25f>
ffffffff8001d90c:	c6 45 ff 40          	movb   $0x40,-0x1(%rbp)
ffffffff8001d910:	e9 8e 01 00 00       	jmp    ffffffff8001daa3 <ZydisGetEffectiveImmSize+0x25f>
ffffffff8001d915:	0f b6 45 fe          	movzbl -0x2(%rbp),%eax
ffffffff8001d919:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
ffffffff8001d91d:	89 c2                	mov    %eax,%edx
ffffffff8001d91f:	48 8d 05 e6 05 02 00 	lea    0x205e6(%rip),%rax        # ffffffff8003df0c <simm16_32_64_sizes.23>
ffffffff8001d926:	48 89 c6             	mov    %rax,%rsi
ffffffff8001d929:	48 89 cf             	mov    %rcx,%rdi
ffffffff8001d92c:	e8 60 fd ff ff       	call   ffffffff8001d691 <ZydisGetScaledImmSize>
ffffffff8001d931:	e9 82 01 00 00       	jmp    ffffffff8001dab8 <ZydisGetEffectiveImmSize+0x274>
ffffffff8001d936:	0f b6 45 fe          	movzbl -0x2(%rbp),%eax
ffffffff8001d93a:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
ffffffff8001d93e:	89 c2                	mov    %eax,%edx
ffffffff8001d940:	48 8d 05 cb 05 02 00 	lea    0x205cb(%rip),%rax        # ffffffff8003df12 <simm32_32_64_sizes.22>
ffffffff8001d947:	48 89 c6             	mov    %rax,%rsi
ffffffff8001d94a:	48 89 cf             	mov    %rcx,%rdi
ffffffff8001d94d:	e8 3f fd ff ff       	call   ffffffff8001d691 <ZydisGetScaledImmSize>
ffffffff8001d952:	e9 61 01 00 00       	jmp    ffffffff8001dab8 <ZydisGetEffectiveImmSize+0x274>
ffffffff8001d957:	0f b6 45 fe          	movzbl -0x2(%rbp),%eax
ffffffff8001d95b:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
ffffffff8001d95f:	89 c2                	mov    %eax,%edx
ffffffff8001d961:	48 8d 05 b0 05 02 00 	lea    0x205b0(%rip),%rax        # ffffffff8003df18 <simm16_32_32_sizes.21>
ffffffff8001d968:	48 89 c6             	mov    %rax,%rsi
ffffffff8001d96b:	48 89 cf             	mov    %rcx,%rdi
ffffffff8001d96e:	e8 1e fd ff ff       	call   ffffffff8001d691 <ZydisGetScaledImmSize>
ffffffff8001d973:	e9 40 01 00 00       	jmp    ffffffff8001dab8 <ZydisGetEffectiveImmSize+0x274>
ffffffff8001d978:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001d97c:	48 8b 00             	mov    (%rax),%rax
ffffffff8001d97f:	8b 00                	mov    (%rax),%eax
ffffffff8001d981:	85 c0                	test   %eax,%eax
ffffffff8001d983:	75 31                	jne    ffffffff8001d9b6 <ZydisGetEffectiveImmSize+0x172>
ffffffff8001d985:	80 7d fe 1f          	cmpb   $0x1f,-0x2(%rbp)
ffffffff8001d989:	77 04                	ja     ffffffff8001d98f <ZydisGetEffectiveImmSize+0x14b>
ffffffff8001d98b:	c6 45 fe 20          	movb   $0x20,-0x2(%rbp)
ffffffff8001d98f:	80 7d fe 20          	cmpb   $0x20,-0x2(%rbp)
ffffffff8001d993:	74 0a                	je     ffffffff8001d99f <ZydisGetEffectiveImmSize+0x15b>
ffffffff8001d995:	80 7d fe 40          	cmpb   $0x40,-0x2(%rbp)
ffffffff8001d999:	0f 85 03 01 00 00    	jne    ffffffff8001daa2 <ZydisGetEffectiveImmSize+0x25e>
ffffffff8001d99f:	0f b6 45 fe          	movzbl -0x2(%rbp),%eax
ffffffff8001d9a3:	88 45 ff             	mov    %al,-0x1(%rbp)
ffffffff8001d9a6:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff8001d9aa:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
ffffffff8001d9ae:	88 42 29             	mov    %al,0x29(%rdx)
ffffffff8001d9b1:	e9 ec 00 00 00       	jmp    ffffffff8001daa2 <ZydisGetEffectiveImmSize+0x25e>
ffffffff8001d9b6:	80 7d fe 0f          	cmpb   $0xf,-0x2(%rbp)
ffffffff8001d9ba:	77 04                	ja     ffffffff8001d9c0 <ZydisGetEffectiveImmSize+0x17c>
ffffffff8001d9bc:	c6 45 fe 10          	movb   $0x10,-0x2(%rbp)
ffffffff8001d9c0:	80 7d fe 10          	cmpb   $0x10,-0x2(%rbp)
ffffffff8001d9c4:	74 0a                	je     ffffffff8001d9d0 <ZydisGetEffectiveImmSize+0x18c>
ffffffff8001d9c6:	80 7d fe 20          	cmpb   $0x20,-0x2(%rbp)
ffffffff8001d9ca:	0f 85 d2 00 00 00    	jne    ffffffff8001daa2 <ZydisGetEffectiveImmSize+0x25e>
ffffffff8001d9d0:	0f b6 45 fe          	movzbl -0x2(%rbp),%eax
ffffffff8001d9d4:	88 45 ff             	mov    %al,-0x1(%rbp)
ffffffff8001d9d7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff8001d9db:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
ffffffff8001d9df:	88 42 29             	mov    %al,0x29(%rdx)
ffffffff8001d9e2:	e9 bb 00 00 00       	jmp    ffffffff8001daa2 <ZydisGetEffectiveImmSize+0x25e>
ffffffff8001d9e7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8001d9eb:	0f b6 40 09          	movzbl 0x9(%rax),%eax
ffffffff8001d9ef:	83 e0 3f             	and    $0x3f,%eax
ffffffff8001d9f2:	83 e8 1c             	sub    $0x1c,%eax
ffffffff8001d9f5:	88 45 fd             	mov    %al,-0x3(%rbp)
ffffffff8001d9f8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001d9fc:	48 8b 00             	mov    (%rax),%rax
ffffffff8001d9ff:	8b 40 1c             	mov    0x1c(%rax),%eax
ffffffff8001da02:	85 c0                	test   %eax,%eax
ffffffff8001da04:	74 1f                	je     ffffffff8001da25 <ZydisGetEffectiveImmSize+0x1e1>
ffffffff8001da06:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001da0a:	48 8b 00             	mov    (%rax),%rax
ffffffff8001da0d:	8b 50 1c             	mov    0x1c(%rax),%edx
ffffffff8001da10:	0f b6 45 fd          	movzbl -0x3(%rbp),%eax
ffffffff8001da14:	83 c0 01             	add    $0x1,%eax
ffffffff8001da17:	39 c2                	cmp    %eax,%edx
ffffffff8001da19:	74 0a                	je     ffffffff8001da25 <ZydisGetEffectiveImmSize+0x1e1>
ffffffff8001da1b:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001da20:	e9 93 00 00 00       	jmp    ffffffff8001dab8 <ZydisGetEffectiveImmSize+0x274>
ffffffff8001da25:	0f b6 45 fd          	movzbl -0x3(%rbp),%eax
ffffffff8001da29:	ba 08 00 00 00       	mov    $0x8,%edx
ffffffff8001da2e:	89 c1                	mov    %eax,%ecx
ffffffff8001da30:	d3 e2                	shl    %cl,%edx
ffffffff8001da32:	89 d0                	mov    %edx,%eax
ffffffff8001da34:	88 45 ff             	mov    %al,-0x1(%rbp)
ffffffff8001da37:	eb 6a                	jmp    ffffffff8001daa3 <ZydisGetEffectiveImmSize+0x25f>
ffffffff8001da39:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001da3d:	48 8b 00             	mov    (%rax),%rax
ffffffff8001da40:	8b 40 1c             	mov    0x1c(%rax),%eax
ffffffff8001da43:	83 f8 04             	cmp    $0x4,%eax
ffffffff8001da46:	77 54                	ja     ffffffff8001da9c <ZydisGetEffectiveImmSize+0x258>
ffffffff8001da48:	89 c0                	mov    %eax,%eax
ffffffff8001da4a:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
ffffffff8001da51:	00 
ffffffff8001da52:	48 8d 05 63 02 02 00 	lea    0x20263(%rip),%rax        # ffffffff8003dcbc <zero.0+0x94>
ffffffff8001da59:	8b 04 02             	mov    (%rdx,%rax,1),%eax
ffffffff8001da5c:	48 98                	cltq   
ffffffff8001da5e:	48 8d 15 57 02 02 00 	lea    0x20257(%rip),%rdx        # ffffffff8003dcbc <zero.0+0x94>
ffffffff8001da65:	48 01 d0             	add    %rdx,%rax
ffffffff8001da68:	3e ff e0             	notrack jmp *%rax
ffffffff8001da6b:	0f b6 45 fe          	movzbl -0x2(%rbp),%eax
ffffffff8001da6f:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
ffffffff8001da73:	89 c2                	mov    %eax,%edx
ffffffff8001da75:	48 8d 05 a2 04 02 00 	lea    0x204a2(%rip),%rax        # ffffffff8003df1e <jimm16_32_32_sizes.20>
ffffffff8001da7c:	48 89 c6             	mov    %rax,%rsi
ffffffff8001da7f:	48 89 cf             	mov    %rcx,%rdi
ffffffff8001da82:	e8 0a fc ff ff       	call   ffffffff8001d691 <ZydisGetScaledImmSize>
ffffffff8001da87:	eb 2f                	jmp    ffffffff8001dab8 <ZydisGetEffectiveImmSize+0x274>
ffffffff8001da89:	c6 45 ff 10          	movb   $0x10,-0x1(%rbp)
ffffffff8001da8d:	eb 0f                	jmp    ffffffff8001da9e <ZydisGetEffectiveImmSize+0x25a>
ffffffff8001da8f:	c6 45 ff 20          	movb   $0x20,-0x1(%rbp)
ffffffff8001da93:	eb 09                	jmp    ffffffff8001da9e <ZydisGetEffectiveImmSize+0x25a>
ffffffff8001da95:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001da9a:	eb 1c                	jmp    ffffffff8001dab8 <ZydisGetEffectiveImmSize+0x274>
ffffffff8001da9c:	eb fe                	jmp    ffffffff8001da9c <ZydisGetEffectiveImmSize+0x258>
ffffffff8001da9e:	eb 03                	jmp    ffffffff8001daa3 <ZydisGetEffectiveImmSize+0x25f>
ffffffff8001daa0:	eb fe                	jmp    ffffffff8001daa0 <ZydisGetEffectiveImmSize+0x25c>
ffffffff8001daa2:	90                   	nop
ffffffff8001daa3:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
ffffffff8001daa7:	3a 45 fe             	cmp    -0x2(%rbp),%al
ffffffff8001daaa:	72 06                	jb     ffffffff8001dab2 <ZydisGetEffectiveImmSize+0x26e>
ffffffff8001daac:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
ffffffff8001dab0:	eb 05                	jmp    ffffffff8001dab7 <ZydisGetEffectiveImmSize+0x273>
ffffffff8001dab2:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001dab7:	90                   	nop
ffffffff8001dab8:	c9                   	leave  
ffffffff8001dab9:	c3                   	ret    

ffffffff8001daba <ZydisCheckOsz>:
ffffffff8001daba:	f3 0f 1e fa          	endbr64 
ffffffff8001dabe:	55                   	push   %rbp
ffffffff8001dabf:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001dac2:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff8001dac6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8001daca:	89 f0                	mov    %esi,%eax
ffffffff8001dacc:	66 89 45 f4          	mov    %ax,-0xc(%rbp)
ffffffff8001dad0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001dad4:	0f b6 40 28          	movzbl 0x28(%rax),%eax
ffffffff8001dad8:	84 c0                	test   %al,%al
ffffffff8001dada:	75 22                	jne    ffffffff8001dafe <ZydisCheckOsz+0x44>
ffffffff8001dadc:	66 83 7d f4 08       	cmpw   $0x8,-0xc(%rbp)
ffffffff8001dae1:	75 07                	jne    ffffffff8001daea <ZydisCheckOsz+0x30>
ffffffff8001dae3:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001dae8:	eb 25                	jmp    ffffffff8001db0f <ZydisCheckOsz+0x55>
ffffffff8001daea:	0f b7 45 f4          	movzwl -0xc(%rbp),%eax
ffffffff8001daee:	89 c2                	mov    %eax,%edx
ffffffff8001daf0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001daf4:	88 50 28             	mov    %dl,0x28(%rax)
ffffffff8001daf7:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8001dafc:	eb 11                	jmp    ffffffff8001db0f <ZydisCheckOsz+0x55>
ffffffff8001dafe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001db02:	0f b6 40 28          	movzbl 0x28(%rax),%eax
ffffffff8001db06:	0f b7 55 f4          	movzwl -0xc(%rbp),%edx
ffffffff8001db0a:	38 d0                	cmp    %dl,%al
ffffffff8001db0c:	0f 94 c0             	sete   %al
ffffffff8001db0f:	c9                   	leave  
ffffffff8001db10:	c3                   	ret    

ffffffff8001db11 <ZydisCheckAsz>:
ffffffff8001db11:	f3 0f 1e fa          	endbr64 
ffffffff8001db15:	55                   	push   %rbp
ffffffff8001db16:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001db19:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff8001db1d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8001db21:	89 f0                	mov    %esi,%eax
ffffffff8001db23:	66 89 45 f4          	mov    %ax,-0xc(%rbp)
ffffffff8001db27:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001db2b:	0f b6 40 29          	movzbl 0x29(%rax),%eax
ffffffff8001db2f:	84 c0                	test   %al,%al
ffffffff8001db31:	75 2f                	jne    ffffffff8001db62 <ZydisCheckAsz+0x51>
ffffffff8001db33:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001db37:	48 8b 00             	mov    (%rax),%rax
ffffffff8001db3a:	8b 00                	mov    (%rax),%eax
ffffffff8001db3c:	85 c0                	test   %eax,%eax
ffffffff8001db3e:	75 0e                	jne    ffffffff8001db4e <ZydisCheckAsz+0x3d>
ffffffff8001db40:	66 83 7d f4 10       	cmpw   $0x10,-0xc(%rbp)
ffffffff8001db45:	75 07                	jne    ffffffff8001db4e <ZydisCheckAsz+0x3d>
ffffffff8001db47:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001db4c:	eb 25                	jmp    ffffffff8001db73 <ZydisCheckAsz+0x62>
ffffffff8001db4e:	0f b7 45 f4          	movzwl -0xc(%rbp),%eax
ffffffff8001db52:	89 c2                	mov    %eax,%edx
ffffffff8001db54:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001db58:	88 50 29             	mov    %dl,0x29(%rax)
ffffffff8001db5b:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8001db60:	eb 11                	jmp    ffffffff8001db73 <ZydisCheckAsz+0x62>
ffffffff8001db62:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001db66:	0f b6 40 29          	movzbl 0x29(%rax),%eax
ffffffff8001db6a:	0f b7 55 f4          	movzwl -0xc(%rbp),%edx
ffffffff8001db6e:	38 d0                	cmp    %dl,%al
ffffffff8001db70:	0f 94 c0             	sete   %al
ffffffff8001db73:	c9                   	leave  
ffffffff8001db74:	c3                   	ret    

ffffffff8001db75 <ZydisIsRegisterAllowed>:
ffffffff8001db75:	f3 0f 1e fa          	endbr64 
ffffffff8001db79:	55                   	push   %rbp
ffffffff8001db7a:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001db7d:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff8001db81:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff8001db85:	89 75 e4             	mov    %esi,-0x1c(%rbp)
ffffffff8001db88:	89 55 e0             	mov    %edx,-0x20(%rbp)
ffffffff8001db8b:	8b 45 e4             	mov    -0x1c(%rbp),%eax
ffffffff8001db8e:	89 c7                	mov    %eax,%edi
ffffffff8001db90:	e8 cc 7b 00 00       	call   ffffffff80025761 <ZydisRegisterGetId>
ffffffff8001db95:	88 45 ff             	mov    %al,-0x1(%rbp)
ffffffff8001db98:	80 7d ff 00          	cmpb   $0x0,-0x1(%rbp)
ffffffff8001db9c:	78 04                	js     ffffffff8001dba2 <ZydisIsRegisterAllowed+0x2d>
ffffffff8001db9e:	80 7d ff 1f          	cmpb   $0x1f,-0x1(%rbp)
ffffffff8001dba2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001dba6:	48 8b 00             	mov    (%rax),%rax
ffffffff8001dba9:	8b 00                	mov    (%rax),%eax
ffffffff8001dbab:	85 c0                	test   %eax,%eax
ffffffff8001dbad:	75 39                	jne    ffffffff8001dbe8 <ZydisIsRegisterAllowed+0x73>
ffffffff8001dbaf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001dbb3:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff8001dbb7:	0f b6 40 06          	movzbl 0x6(%rax),%eax
ffffffff8001dbbb:	83 e0 07             	and    $0x7,%eax
ffffffff8001dbbe:	3c 04                	cmp    $0x4,%al
ffffffff8001dbc0:	74 40                	je     ffffffff8001dc02 <ZydisIsRegisterAllowed+0x8d>
ffffffff8001dbc2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001dbc6:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff8001dbca:	0f b6 40 06          	movzbl 0x6(%rax),%eax
ffffffff8001dbce:	83 e0 07             	and    $0x7,%eax
ffffffff8001dbd1:	3c 05                	cmp    $0x5,%al
ffffffff8001dbd3:	74 2d                	je     ffffffff8001dc02 <ZydisIsRegisterAllowed+0x8d>
ffffffff8001dbd5:	83 7d e0 01          	cmpl   $0x1,-0x20(%rbp)
ffffffff8001dbd9:	74 27                	je     ffffffff8001dc02 <ZydisIsRegisterAllowed+0x8d>
ffffffff8001dbdb:	80 7d ff 0f          	cmpb   $0xf,-0x1(%rbp)
ffffffff8001dbdf:	7e 21                	jle    ffffffff8001dc02 <ZydisIsRegisterAllowed+0x8d>
ffffffff8001dbe1:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001dbe6:	eb 1f                	jmp    ffffffff8001dc07 <ZydisIsRegisterAllowed+0x92>
ffffffff8001dbe8:	83 7d e0 04          	cmpl   $0x4,-0x20(%rbp)
ffffffff8001dbec:	75 07                	jne    ffffffff8001dbf5 <ZydisIsRegisterAllowed+0x80>
ffffffff8001dbee:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001dbf3:	eb 12                	jmp    ffffffff8001dc07 <ZydisIsRegisterAllowed+0x92>
ffffffff8001dbf5:	80 7d ff 07          	cmpb   $0x7,-0x1(%rbp)
ffffffff8001dbf9:	7e 07                	jle    ffffffff8001dc02 <ZydisIsRegisterAllowed+0x8d>
ffffffff8001dbfb:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001dc00:	eb 05                	jmp    ffffffff8001dc07 <ZydisIsRegisterAllowed+0x92>
ffffffff8001dc02:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8001dc07:	c9                   	leave  
ffffffff8001dc08:	c3                   	ret    

ffffffff8001dc09 <ZydisIsScaleValid>:
ffffffff8001dc09:	f3 0f 1e fa          	endbr64 
ffffffff8001dc0d:	55                   	push   %rbp
ffffffff8001dc0e:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001dc11:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff8001dc15:	89 f8                	mov    %edi,%eax
ffffffff8001dc17:	88 45 fc             	mov    %al,-0x4(%rbp)
ffffffff8001dc1a:	0f b6 45 fc          	movzbl -0x4(%rbp),%eax
ffffffff8001dc1e:	89 c2                	mov    %eax,%edx
ffffffff8001dc20:	83 fa 08             	cmp    $0x8,%edx
ffffffff8001dc23:	0f 97 c0             	seta   %al
ffffffff8001dc26:	84 c0                	test   %al,%al
ffffffff8001dc28:	75 23                	jne    ffffffff8001dc4d <ZydisIsScaleValid+0x44>
ffffffff8001dc2a:	89 d0                	mov    %edx,%eax
ffffffff8001dc2c:	ba 17 01 00 00       	mov    $0x117,%edx
ffffffff8001dc31:	89 c1                	mov    %eax,%ecx
ffffffff8001dc33:	48 d3 ea             	shr    %cl,%rdx
ffffffff8001dc36:	48 89 d0             	mov    %rdx,%rax
ffffffff8001dc39:	83 e0 01             	and    $0x1,%eax
ffffffff8001dc3c:	48 85 c0             	test   %rax,%rax
ffffffff8001dc3f:	0f 95 c0             	setne  %al
ffffffff8001dc42:	84 c0                	test   %al,%al
ffffffff8001dc44:	74 07                	je     ffffffff8001dc4d <ZydisIsScaleValid+0x44>
ffffffff8001dc46:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8001dc4b:	eb 05                	jmp    ffffffff8001dc52 <ZydisIsScaleValid+0x49>
ffffffff8001dc4d:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001dc52:	c9                   	leave  
ffffffff8001dc53:	c3                   	ret    

ffffffff8001dc54 <ZydisValidateRexType>:
ffffffff8001dc54:	f3 0f 1e fa          	endbr64 
ffffffff8001dc58:	55                   	push   %rbp
ffffffff8001dc59:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001dc5c:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff8001dc60:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8001dc64:	89 75 f4             	mov    %esi,-0xc(%rbp)
ffffffff8001dc67:	89 d0                	mov    %edx,%eax
ffffffff8001dc69:	88 45 f0             	mov    %al,-0x10(%rbp)
ffffffff8001dc6c:	83 7d f4 14          	cmpl   $0x14,-0xc(%rbp)
ffffffff8001dc70:	0f 87 8b 00 00 00    	ja     ffffffff8001dd01 <ZydisValidateRexType+0xad>
ffffffff8001dc76:	83 7d f4 09          	cmpl   $0x9,-0xc(%rbp)
ffffffff8001dc7a:	73 5a                	jae    ffffffff8001dcd6 <ZydisValidateRexType+0x82>
ffffffff8001dc7c:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
ffffffff8001dc80:	77 08                	ja     ffffffff8001dc8a <ZydisValidateRexType+0x36>
ffffffff8001dc82:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
ffffffff8001dc86:	75 0f                	jne    ffffffff8001dc97 <ZydisValidateRexType+0x43>
ffffffff8001dc88:	eb 77                	jmp    ffffffff8001dd01 <ZydisValidateRexType+0xad>
ffffffff8001dc8a:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff8001dc8d:	83 e8 05             	sub    $0x5,%eax
ffffffff8001dc90:	83 f8 03             	cmp    $0x3,%eax
ffffffff8001dc93:	77 6c                	ja     ffffffff8001dd01 <ZydisValidateRexType+0xad>
ffffffff8001dc95:	eb 0a                	jmp    ffffffff8001dca1 <ZydisValidateRexType+0x4d>
ffffffff8001dc97:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8001dc9c:	e9 ba 00 00 00       	jmp    ffffffff8001dd5b <ZydisValidateRexType+0x107>
ffffffff8001dca1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001dca5:	8b 40 30             	mov    0x30(%rax),%eax
ffffffff8001dca8:	85 c0                	test   %eax,%eax
ffffffff8001dcaa:	75 10                	jne    ffffffff8001dcbc <ZydisValidateRexType+0x68>
ffffffff8001dcac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001dcb0:	c7 40 30 02 00 00 00 	movl   $0x2,0x30(%rax)
ffffffff8001dcb7:	e9 93 00 00 00       	jmp    ffffffff8001dd4f <ZydisValidateRexType+0xfb>
ffffffff8001dcbc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001dcc0:	8b 40 30             	mov    0x30(%rax),%eax
ffffffff8001dcc3:	83 f8 01             	cmp    $0x1,%eax
ffffffff8001dcc6:	0f 85 83 00 00 00    	jne    ffffffff8001dd4f <ZydisValidateRexType+0xfb>
ffffffff8001dccc:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001dcd1:	e9 85 00 00 00       	jmp    ffffffff8001dd5b <ZydisValidateRexType+0x107>
ffffffff8001dcd6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001dcda:	8b 40 30             	mov    0x30(%rax),%eax
ffffffff8001dcdd:	85 c0                	test   %eax,%eax
ffffffff8001dcdf:	75 0d                	jne    ffffffff8001dcee <ZydisValidateRexType+0x9a>
ffffffff8001dce1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001dce5:	c7 40 30 01 00 00 00 	movl   $0x1,0x30(%rax)
ffffffff8001dcec:	eb 64                	jmp    ffffffff8001dd52 <ZydisValidateRexType+0xfe>
ffffffff8001dcee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001dcf2:	8b 40 30             	mov    0x30(%rax),%eax
ffffffff8001dcf5:	83 f8 02             	cmp    $0x2,%eax
ffffffff8001dcf8:	75 58                	jne    ffffffff8001dd52 <ZydisValidateRexType+0xfe>
ffffffff8001dcfa:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001dcff:	eb 5a                	jmp    ffffffff8001dd5b <ZydisValidateRexType+0x107>
ffffffff8001dd01:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff8001dd04:	89 c7                	mov    %eax,%edi
ffffffff8001dd06:	e8 56 7a 00 00       	call   ffffffff80025761 <ZydisRegisterGetId>
ffffffff8001dd0b:	3c 07                	cmp    $0x7,%al
ffffffff8001dd0d:	7f 15                	jg     ffffffff8001dd24 <ZydisValidateRexType+0xd0>
ffffffff8001dd0f:	80 7d f0 00          	cmpb   $0x0,-0x10(%rbp)
ffffffff8001dd13:	75 40                	jne    ffffffff8001dd55 <ZydisValidateRexType+0x101>
ffffffff8001dd15:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff8001dd18:	89 c7                	mov    %eax,%edi
ffffffff8001dd1a:	e8 81 7a 00 00       	call   ffffffff800257a0 <ZydisRegisterGetClass>
ffffffff8001dd1f:	83 f8 04             	cmp    $0x4,%eax
ffffffff8001dd22:	75 31                	jne    ffffffff8001dd55 <ZydisValidateRexType+0x101>
ffffffff8001dd24:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001dd28:	8b 40 30             	mov    0x30(%rax),%eax
ffffffff8001dd2b:	85 c0                	test   %eax,%eax
ffffffff8001dd2d:	75 0d                	jne    ffffffff8001dd3c <ZydisValidateRexType+0xe8>
ffffffff8001dd2f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001dd33:	c7 40 30 01 00 00 00 	movl   $0x1,0x30(%rax)
ffffffff8001dd3a:	eb 19                	jmp    ffffffff8001dd55 <ZydisValidateRexType+0x101>
ffffffff8001dd3c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001dd40:	8b 40 30             	mov    0x30(%rax),%eax
ffffffff8001dd43:	83 f8 02             	cmp    $0x2,%eax
ffffffff8001dd46:	75 0d                	jne    ffffffff8001dd55 <ZydisValidateRexType+0x101>
ffffffff8001dd48:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001dd4d:	eb 0c                	jmp    ffffffff8001dd5b <ZydisValidateRexType+0x107>
ffffffff8001dd4f:	90                   	nop
ffffffff8001dd50:	eb 04                	jmp    ffffffff8001dd56 <ZydisValidateRexType+0x102>
ffffffff8001dd52:	90                   	nop
ffffffff8001dd53:	eb 01                	jmp    ffffffff8001dd56 <ZydisValidateRexType+0x102>
ffffffff8001dd55:	90                   	nop
ffffffff8001dd56:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8001dd5b:	c9                   	leave  
ffffffff8001dd5c:	c3                   	ret    

ffffffff8001dd5d <ZydisIsValidAddressingClass>:
ffffffff8001dd5d:	f3 0f 1e fa          	endbr64 
ffffffff8001dd61:	55                   	push   %rbp
ffffffff8001dd62:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001dd65:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff8001dd69:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff8001dd6d:	89 75 e4             	mov    %esi,-0x1c(%rbp)
ffffffff8001dd70:	89 55 e0             	mov    %edx,-0x20(%rbp)
ffffffff8001dd73:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001dd77:	48 8b 00             	mov    (%rax),%rax
ffffffff8001dd7a:	8b 00                	mov    (%rax),%eax
ffffffff8001dd7c:	85 c0                	test   %eax,%eax
ffffffff8001dd7e:	0f 94 c0             	sete   %al
ffffffff8001dd81:	88 45 fe             	mov    %al,-0x2(%rbp)
ffffffff8001dd84:	83 7d e4 04          	cmpl   $0x4,-0x1c(%rbp)
ffffffff8001dd88:	74 58                	je     ffffffff8001dde2 <ZydisIsValidAddressingClass+0x85>
ffffffff8001dd8a:	83 7d e4 04          	cmpl   $0x4,-0x1c(%rbp)
ffffffff8001dd8e:	77 5b                	ja     ffffffff8001ddeb <ZydisIsValidAddressingClass+0x8e>
ffffffff8001dd90:	83 7d e4 03          	cmpl   $0x3,-0x1c(%rbp)
ffffffff8001dd94:	74 27                	je     ffffffff8001ddbd <ZydisIsValidAddressingClass+0x60>
ffffffff8001dd96:	83 7d e4 03          	cmpl   $0x3,-0x1c(%rbp)
ffffffff8001dd9a:	77 4f                	ja     ffffffff8001ddeb <ZydisIsValidAddressingClass+0x8e>
ffffffff8001dd9c:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
ffffffff8001dda0:	74 08                	je     ffffffff8001ddaa <ZydisIsValidAddressingClass+0x4d>
ffffffff8001dda2:	83 7d e4 02          	cmpl   $0x2,-0x1c(%rbp)
ffffffff8001dda6:	74 09                	je     ffffffff8001ddb1 <ZydisIsValidAddressingClass+0x54>
ffffffff8001dda8:	eb 41                	jmp    ffffffff8001ddeb <ZydisIsValidAddressingClass+0x8e>
ffffffff8001ddaa:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8001ddaf:	eb 6d                	jmp    ffffffff8001de1e <ZydisIsValidAddressingClass+0xc1>
ffffffff8001ddb1:	80 7d fe 00          	cmpb   $0x0,-0x2(%rbp)
ffffffff8001ddb5:	0f 94 c0             	sete   %al
ffffffff8001ddb8:	88 45 ff             	mov    %al,-0x1(%rbp)
ffffffff8001ddbb:	eb 35                	jmp    ffffffff8001ddf2 <ZydisIsValidAddressingClass+0x95>
ffffffff8001ddbd:	80 7d fe 00          	cmpb   $0x0,-0x2(%rbp)
ffffffff8001ddc1:	75 0e                	jne    ffffffff8001ddd1 <ZydisIsValidAddressingClass+0x74>
ffffffff8001ddc3:	8b 45 e0             	mov    -0x20(%rbp),%eax
ffffffff8001ddc6:	89 c7                	mov    %eax,%edi
ffffffff8001ddc8:	e8 94 79 00 00       	call   ffffffff80025761 <ZydisRegisterGetId>
ffffffff8001ddcd:	3c 07                	cmp    $0x7,%al
ffffffff8001ddcf:	7f 07                	jg     ffffffff8001ddd8 <ZydisIsValidAddressingClass+0x7b>
ffffffff8001ddd1:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8001ddd6:	eb 05                	jmp    ffffffff8001dddd <ZydisIsValidAddressingClass+0x80>
ffffffff8001ddd8:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001dddd:	88 45 ff             	mov    %al,-0x1(%rbp)
ffffffff8001dde0:	eb 10                	jmp    ffffffff8001ddf2 <ZydisIsValidAddressingClass+0x95>
ffffffff8001dde2:	0f b6 45 fe          	movzbl -0x2(%rbp),%eax
ffffffff8001dde6:	88 45 ff             	mov    %al,-0x1(%rbp)
ffffffff8001dde9:	eb 07                	jmp    ffffffff8001ddf2 <ZydisIsValidAddressingClass+0x95>
ffffffff8001ddeb:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001ddf0:	eb 2c                	jmp    ffffffff8001de1e <ZydisIsValidAddressingClass+0xc1>
ffffffff8001ddf2:	80 7d ff 00          	cmpb   $0x0,-0x1(%rbp)
ffffffff8001ddf6:	74 21                	je     ffffffff8001de19 <ZydisIsValidAddressingClass+0xbc>
ffffffff8001ddf8:	8b 4d e0             	mov    -0x20(%rbp),%ecx
ffffffff8001ddfb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001ddff:	ba 01 00 00 00       	mov    $0x1,%edx
ffffffff8001de04:	89 ce                	mov    %ecx,%esi
ffffffff8001de06:	48 89 c7             	mov    %rax,%rdi
ffffffff8001de09:	e8 46 fe ff ff       	call   ffffffff8001dc54 <ZydisValidateRexType>
ffffffff8001de0e:	84 c0                	test   %al,%al
ffffffff8001de10:	74 07                	je     ffffffff8001de19 <ZydisIsValidAddressingClass+0xbc>
ffffffff8001de12:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8001de17:	eb 05                	jmp    ffffffff8001de1e <ZydisIsValidAddressingClass+0xc1>
ffffffff8001de19:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001de1e:	c9                   	leave  
ffffffff8001de1f:	c3                   	ret    

ffffffff8001de20 <ZydisGetRm16>:
ffffffff8001de20:	f3 0f 1e fa          	endbr64 
ffffffff8001de24:	55                   	push   %rbp
ffffffff8001de25:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001de28:	48 83 ec 18          	sub    $0x18,%rsp
ffffffff8001de2c:	89 7d ec             	mov    %edi,-0x14(%rbp)
ffffffff8001de2f:	89 75 e8             	mov    %esi,-0x18(%rbp)
ffffffff8001de32:	c6 45 ff 00          	movb   $0x0,-0x1(%rbp)
ffffffff8001de36:	eb 4a                	jmp    ffffffff8001de82 <ZydisGetRm16+0x62>
ffffffff8001de38:	0f be 45 ff          	movsbl -0x1(%rbp),%eax
ffffffff8001de3c:	48 98                	cltq   
ffffffff8001de3e:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
ffffffff8001de45:	00 
ffffffff8001de46:	48 8d 05 f3 00 02 00 	lea    0x200f3(%rip),%rax        # ffffffff8003df40 <modrm16_lookup.19>
ffffffff8001de4d:	8b 04 02             	mov    (%rdx,%rax,1),%eax
ffffffff8001de50:	39 45 ec             	cmp    %eax,-0x14(%rbp)
ffffffff8001de53:	75 23                	jne    ffffffff8001de78 <ZydisGetRm16+0x58>
ffffffff8001de55:	0f be 45 ff          	movsbl -0x1(%rbp),%eax
ffffffff8001de59:	48 98                	cltq   
ffffffff8001de5b:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
ffffffff8001de62:	00 
ffffffff8001de63:	48 8d 05 da 00 02 00 	lea    0x200da(%rip),%rax        # ffffffff8003df44 <modrm16_lookup.19+0x4>
ffffffff8001de6a:	8b 04 02             	mov    (%rdx,%rax,1),%eax
ffffffff8001de6d:	39 45 e8             	cmp    %eax,-0x18(%rbp)
ffffffff8001de70:	75 06                	jne    ffffffff8001de78 <ZydisGetRm16+0x58>
ffffffff8001de72:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
ffffffff8001de76:	eb 15                	jmp    ffffffff8001de8d <ZydisGetRm16+0x6d>
ffffffff8001de78:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
ffffffff8001de7c:	83 c0 01             	add    $0x1,%eax
ffffffff8001de7f:	88 45 ff             	mov    %al,-0x1(%rbp)
ffffffff8001de82:	80 7d ff 07          	cmpb   $0x7,-0x1(%rbp)
ffffffff8001de86:	7e b0                	jle    ffffffff8001de38 <ZydisGetRm16+0x18>
ffffffff8001de88:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
ffffffff8001de8d:	c9                   	leave  
ffffffff8001de8e:	c3                   	ret    

ffffffff8001de8f <ZydisEncodeMvexBroadcastMode>:
ffffffff8001de8f:	f3 0f 1e fa          	endbr64 
ffffffff8001de93:	55                   	push   %rbp
ffffffff8001de94:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001de97:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff8001de9b:	89 7d fc             	mov    %edi,-0x4(%rbp)
ffffffff8001de9e:	83 7d fc 0b          	cmpl   $0xb,-0x4(%rbp)
ffffffff8001dea2:	77 2e                	ja     ffffffff8001ded2 <ZydisEncodeMvexBroadcastMode+0x43>
ffffffff8001dea4:	83 7d fc 0a          	cmpl   $0xa,-0x4(%rbp)
ffffffff8001dea8:	73 21                	jae    ffffffff8001decb <ZydisEncodeMvexBroadcastMode+0x3c>
ffffffff8001deaa:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
ffffffff8001deae:	74 0d                	je     ffffffff8001debd <ZydisEncodeMvexBroadcastMode+0x2e>
ffffffff8001deb0:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8001deb3:	83 e8 03             	sub    $0x3,%eax
ffffffff8001deb6:	83 f8 01             	cmp    $0x1,%eax
ffffffff8001deb9:	77 17                	ja     ffffffff8001ded2 <ZydisEncodeMvexBroadcastMode+0x43>
ffffffff8001debb:	eb 07                	jmp    ffffffff8001dec4 <ZydisEncodeMvexBroadcastMode+0x35>
ffffffff8001debd:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001dec2:	eb 10                	jmp    ffffffff8001ded4 <ZydisEncodeMvexBroadcastMode+0x45>
ffffffff8001dec4:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8001dec9:	eb 09                	jmp    ffffffff8001ded4 <ZydisEncodeMvexBroadcastMode+0x45>
ffffffff8001decb:	b8 02 00 00 00       	mov    $0x2,%eax
ffffffff8001ded0:	eb 02                	jmp    ffffffff8001ded4 <ZydisEncodeMvexBroadcastMode+0x45>
ffffffff8001ded2:	eb fe                	jmp    ffffffff8001ded2 <ZydisEncodeMvexBroadcastMode+0x43>
ffffffff8001ded4:	c9                   	leave  
ffffffff8001ded5:	c3                   	ret    

ffffffff8001ded6 <ZydisEncodeMvexConversionMode>:
ffffffff8001ded6:	f3 0f 1e fa          	endbr64 
ffffffff8001deda:	55                   	push   %rbp
ffffffff8001dedb:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001dede:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff8001dee2:	89 7d fc             	mov    %edi,-0x4(%rbp)
ffffffff8001dee5:	83 7d fc 05          	cmpl   $0x5,-0x4(%rbp)
ffffffff8001dee9:	77 4e                	ja     ffffffff8001df39 <ZydisEncodeMvexConversionMode+0x63>
ffffffff8001deeb:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8001deee:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
ffffffff8001def5:	00 
ffffffff8001def6:	48 8d 05 d3 fd 01 00 	lea    0x1fdd3(%rip),%rax        # ffffffff8003dcd0 <zero.0+0xa8>
ffffffff8001defd:	8b 04 02             	mov    (%rdx,%rax,1),%eax
ffffffff8001df00:	48 98                	cltq   
ffffffff8001df02:	48 8d 15 c7 fd 01 00 	lea    0x1fdc7(%rip),%rdx        # ffffffff8003dcd0 <zero.0+0xa8>
ffffffff8001df09:	48 01 d0             	add    %rdx,%rax
ffffffff8001df0c:	3e ff e0             	notrack jmp *%rax
ffffffff8001df0f:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001df14:	eb 25                	jmp    ffffffff8001df3b <ZydisEncodeMvexConversionMode+0x65>
ffffffff8001df16:	b8 03 00 00 00       	mov    $0x3,%eax
ffffffff8001df1b:	eb 1e                	jmp    ffffffff8001df3b <ZydisEncodeMvexConversionMode+0x65>
ffffffff8001df1d:	b8 04 00 00 00       	mov    $0x4,%eax
ffffffff8001df22:	eb 17                	jmp    ffffffff8001df3b <ZydisEncodeMvexConversionMode+0x65>
ffffffff8001df24:	b8 05 00 00 00       	mov    $0x5,%eax
ffffffff8001df29:	eb 10                	jmp    ffffffff8001df3b <ZydisEncodeMvexConversionMode+0x65>
ffffffff8001df2b:	b8 06 00 00 00       	mov    $0x6,%eax
ffffffff8001df30:	eb 09                	jmp    ffffffff8001df3b <ZydisEncodeMvexConversionMode+0x65>
ffffffff8001df32:	b8 07 00 00 00       	mov    $0x7,%eax
ffffffff8001df37:	eb 02                	jmp    ffffffff8001df3b <ZydisEncodeMvexConversionMode+0x65>
ffffffff8001df39:	eb fe                	jmp    ffffffff8001df39 <ZydisEncodeMvexConversionMode+0x63>
ffffffff8001df3b:	c9                   	leave  
ffffffff8001df3c:	c3                   	ret    

ffffffff8001df3d <ZydisGetCompDispScaleEvex>:
ffffffff8001df3d:	f3 0f 1e fa          	endbr64 
ffffffff8001df41:	55                   	push   %rbp
ffffffff8001df42:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001df45:	48 83 ec 18          	sub    $0x18,%rsp
ffffffff8001df49:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff8001df4d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001df51:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff8001df55:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8001df59:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001df5d:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff8001df61:	0f b6 40 08          	movzbl 0x8(%rax),%eax
ffffffff8001df65:	c0 e8 03             	shr    $0x3,%al
ffffffff8001df68:	83 e0 03             	and    $0x3,%eax
ffffffff8001df6b:	83 e8 01             	sub    $0x1,%eax
ffffffff8001df6e:	88 45 f7             	mov    %al,-0x9(%rbp)
ffffffff8001df71:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001df75:	0f b6 40 0d          	movzbl 0xd(%rax),%eax
ffffffff8001df79:	c0 e8 05             	shr    $0x5,%al
ffffffff8001df7c:	0f b6 c0             	movzbl %al,%eax
ffffffff8001df7f:	48 98                	cltq   
ffffffff8001df81:	48 8d 15 f8 ff 01 00 	lea    0x1fff8(%rip),%rdx        # ffffffff8003df80 <size_indexes.18>
ffffffff8001df88:	0f b6 04 10          	movzbl (%rax,%rdx,1),%eax
ffffffff8001df8c:	88 45 f6             	mov    %al,-0xa(%rbp)
ffffffff8001df8f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001df93:	0f b6 40 0d          	movzbl 0xd(%rax),%eax
ffffffff8001df97:	83 e0 1f             	and    $0x1f,%eax
ffffffff8001df9a:	0f b6 c0             	movzbl %al,%eax
ffffffff8001df9d:	83 f8 10             	cmp    $0x10,%eax
ffffffff8001dfa0:	0f 87 13 02 00 00    	ja     ffffffff8001e1b9 <ZydisGetCompDispScaleEvex+0x27c>
ffffffff8001dfa6:	89 c0                	mov    %eax,%eax
ffffffff8001dfa8:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
ffffffff8001dfaf:	00 
ffffffff8001dfb0:	48 8d 05 31 fd 01 00 	lea    0x1fd31(%rip),%rax        # ffffffff8003dce8 <zero.0+0xc0>
ffffffff8001dfb7:	8b 04 02             	mov    (%rdx,%rax,1),%eax
ffffffff8001dfba:	48 98                	cltq   
ffffffff8001dfbc:	48 8d 15 25 fd 01 00 	lea    0x1fd25(%rip),%rdx        # ffffffff8003dce8 <zero.0+0xc0>
ffffffff8001dfc3:	48 01 d0             	add    %rdx,%rax
ffffffff8001dfc6:	3e ff e0             	notrack jmp *%rax
ffffffff8001dfc9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001dfcd:	48 8b 00             	mov    (%rax),%rax
ffffffff8001dfd0:	8b 80 70 01 00 00    	mov    0x170(%rax),%eax
ffffffff8001dfd6:	85 c0                	test   %eax,%eax
ffffffff8001dfd8:	0f 95 c0             	setne  %al
ffffffff8001dfdb:	88 45 f3             	mov    %al,-0xd(%rbp)
ffffffff8001dfde:	0f b6 45 f3          	movzbl -0xd(%rbp),%eax
ffffffff8001dfe2:	0f b6 55 f6          	movzbl -0xa(%rbp),%edx
ffffffff8001dfe6:	0f b6 4d f7          	movzbl -0x9(%rbp),%ecx
ffffffff8001dfea:	48 63 f1             	movslq %ecx,%rsi
ffffffff8001dfed:	48 98                	cltq   
ffffffff8001dfef:	48 63 ca             	movslq %edx,%rcx
ffffffff8001dff2:	48 89 c2             	mov    %rax,%rdx
ffffffff8001dff5:	48 c1 e2 03          	shl    $0x3,%rdx
ffffffff8001dff9:	48 01 c2             	add    %rax,%rdx
ffffffff8001dffc:	48 89 c8             	mov    %rcx,%rax
ffffffff8001dfff:	48 01 c0             	add    %rax,%rax
ffffffff8001e002:	48 01 c8             	add    %rcx,%rax
ffffffff8001e005:	48 01 d0             	add    %rdx,%rax
ffffffff8001e008:	48 8d 14 30          	lea    (%rax,%rsi,1),%rdx
ffffffff8001e00c:	48 8d 05 7d ff 01 00 	lea    0x1ff7d(%rip),%rax        # ffffffff8003df90 <scales.17.lto_priv.0>
ffffffff8001e013:	48 01 d0             	add    %rdx,%rax
ffffffff8001e016:	0f b6 00             	movzbl (%rax),%eax
ffffffff8001e019:	e9 9d 01 00 00       	jmp    ffffffff8001e1bb <ZydisGetCompDispScaleEvex+0x27e>
ffffffff8001e01e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001e022:	48 8b 00             	mov    (%rax),%rax
ffffffff8001e025:	8b 80 70 01 00 00    	mov    0x170(%rax),%eax
ffffffff8001e02b:	85 c0                	test   %eax,%eax
ffffffff8001e02d:	0f 95 c0             	setne  %al
ffffffff8001e030:	88 45 f4             	mov    %al,-0xc(%rbp)
ffffffff8001e033:	0f b6 55 f4          	movzbl -0xc(%rbp),%edx
ffffffff8001e037:	0f b6 45 f6          	movzbl -0xa(%rbp),%eax
ffffffff8001e03b:	0f b6 4d f7          	movzbl -0x9(%rbp),%ecx
ffffffff8001e03f:	48 63 f1             	movslq %ecx,%rsi
ffffffff8001e042:	48 63 d2             	movslq %edx,%rdx
ffffffff8001e045:	48 63 c8             	movslq %eax,%rcx
ffffffff8001e048:	48 89 d0             	mov    %rdx,%rax
ffffffff8001e04b:	48 01 c0             	add    %rax,%rax
ffffffff8001e04e:	48 01 d0             	add    %rdx,%rax
ffffffff8001e051:	48 01 c0             	add    %rax,%rax
ffffffff8001e054:	48 89 ca             	mov    %rcx,%rdx
ffffffff8001e057:	48 01 d2             	add    %rdx,%rdx
ffffffff8001e05a:	48 01 ca             	add    %rcx,%rdx
ffffffff8001e05d:	48 01 d0             	add    %rdx,%rax
ffffffff8001e060:	48 8d 14 30          	lea    (%rax,%rsi,1),%rdx
ffffffff8001e064:	48 8d 05 3d ff 01 00 	lea    0x1ff3d(%rip),%rax        # ffffffff8003dfa8 <scales.16.lto_priv.0>
ffffffff8001e06b:	48 01 d0             	add    %rdx,%rax
ffffffff8001e06e:	0f b6 00             	movzbl (%rax),%eax
ffffffff8001e071:	e9 45 01 00 00       	jmp    ffffffff8001e1bb <ZydisGetCompDispScaleEvex+0x27e>
ffffffff8001e076:	0f b6 45 f7          	movzbl -0x9(%rbp),%eax
ffffffff8001e07a:	48 98                	cltq   
ffffffff8001e07c:	48 8d 15 31 ff 01 00 	lea    0x1ff31(%rip),%rdx        # ffffffff8003dfb4 <scales.15.lto_priv.0>
ffffffff8001e083:	0f b6 04 10          	movzbl (%rax,%rdx,1),%eax
ffffffff8001e087:	e9 2f 01 00 00       	jmp    ffffffff8001e1bb <ZydisGetCompDispScaleEvex+0x27e>
ffffffff8001e08c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001e090:	0f b6 40 0d          	movzbl 0xd(%rax),%eax
ffffffff8001e094:	c0 e8 05             	shr    $0x5,%al
ffffffff8001e097:	0f b6 c0             	movzbl %al,%eax
ffffffff8001e09a:	48 98                	cltq   
ffffffff8001e09c:	48 8d 15 14 ff 01 00 	lea    0x1ff14(%rip),%rdx        # ffffffff8003dfb7 <scales.14>
ffffffff8001e0a3:	0f b6 04 10          	movzbl (%rax,%rdx,1),%eax
ffffffff8001e0a7:	e9 0f 01 00 00       	jmp    ffffffff8001e1bb <ZydisGetCompDispScaleEvex+0x27e>
ffffffff8001e0ac:	0f b6 45 f6          	movzbl -0xa(%rbp),%eax
ffffffff8001e0b0:	48 98                	cltq   
ffffffff8001e0b2:	48 8d 15 04 ff 01 00 	lea    0x1ff04(%rip),%rdx        # ffffffff8003dfbd <scales.13>
ffffffff8001e0b9:	0f b6 04 10          	movzbl (%rax,%rdx,1),%eax
ffffffff8001e0bd:	e9 f9 00 00 00       	jmp    ffffffff8001e1bb <ZydisGetCompDispScaleEvex+0x27e>
ffffffff8001e0c2:	b8 04 00 00 00       	mov    $0x4,%eax
ffffffff8001e0c7:	e9 ef 00 00 00       	jmp    ffffffff8001e1bb <ZydisGetCompDispScaleEvex+0x27e>
ffffffff8001e0cc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001e0d0:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff8001e0d4:	0f b6 40 08          	movzbl 0x8(%rax),%eax
ffffffff8001e0d8:	83 e0 04             	and    $0x4,%eax
ffffffff8001e0db:	84 c0                	test   %al,%al
ffffffff8001e0dd:	74 0a                	je     ffffffff8001e0e9 <ZydisGetCompDispScaleEvex+0x1ac>
ffffffff8001e0df:	b8 04 00 00 00       	mov    $0x4,%eax
ffffffff8001e0e4:	e9 d2 00 00 00       	jmp    ffffffff8001e1bb <ZydisGetCompDispScaleEvex+0x27e>
ffffffff8001e0e9:	b8 03 00 00 00       	mov    $0x3,%eax
ffffffff8001e0ee:	e9 c8 00 00 00       	jmp    ffffffff8001e1bb <ZydisGetCompDispScaleEvex+0x27e>
ffffffff8001e0f3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001e0f7:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff8001e0fb:	0f b6 40 08          	movzbl 0x8(%rax),%eax
ffffffff8001e0ff:	83 e0 04             	and    $0x4,%eax
ffffffff8001e102:	84 c0                	test   %al,%al
ffffffff8001e104:	74 0a                	je     ffffffff8001e110 <ZydisGetCompDispScaleEvex+0x1d3>
ffffffff8001e106:	b8 05 00 00 00       	mov    $0x5,%eax
ffffffff8001e10b:	e9 ab 00 00 00       	jmp    ffffffff8001e1bb <ZydisGetCompDispScaleEvex+0x27e>
ffffffff8001e110:	b8 04 00 00 00       	mov    $0x4,%eax
ffffffff8001e115:	e9 a1 00 00 00       	jmp    ffffffff8001e1bb <ZydisGetCompDispScaleEvex+0x27e>
ffffffff8001e11a:	b8 05 00 00 00       	mov    $0x5,%eax
ffffffff8001e11f:	e9 97 00 00 00       	jmp    ffffffff8001e1bb <ZydisGetCompDispScaleEvex+0x27e>
ffffffff8001e124:	0f b6 45 f7          	movzbl -0x9(%rbp),%eax
ffffffff8001e128:	48 98                	cltq   
ffffffff8001e12a:	48 8d 15 8f fe 01 00 	lea    0x1fe8f(%rip),%rdx        # ffffffff8003dfc0 <scales.12>
ffffffff8001e131:	0f b6 04 10          	movzbl (%rax,%rdx,1),%eax
ffffffff8001e135:	e9 81 00 00 00       	jmp    ffffffff8001e1bb <ZydisGetCompDispScaleEvex+0x27e>
ffffffff8001e13a:	0f b6 45 f7          	movzbl -0x9(%rbp),%eax
ffffffff8001e13e:	48 98                	cltq   
ffffffff8001e140:	48 8d 15 7c fe 01 00 	lea    0x1fe7c(%rip),%rdx        # ffffffff8003dfc3 <scales.11>
ffffffff8001e147:	0f b6 04 10          	movzbl (%rax,%rdx,1),%eax
ffffffff8001e14b:	eb 6e                	jmp    ffffffff8001e1bb <ZydisGetCompDispScaleEvex+0x27e>
ffffffff8001e14d:	0f b6 45 f7          	movzbl -0x9(%rbp),%eax
ffffffff8001e151:	48 98                	cltq   
ffffffff8001e153:	48 8d 15 6c fe 01 00 	lea    0x1fe6c(%rip),%rdx        # ffffffff8003dfc6 <scales.10>
ffffffff8001e15a:	0f b6 04 10          	movzbl (%rax,%rdx,1),%eax
ffffffff8001e15e:	eb 5b                	jmp    ffffffff8001e1bb <ZydisGetCompDispScaleEvex+0x27e>
ffffffff8001e160:	b8 04 00 00 00       	mov    $0x4,%eax
ffffffff8001e165:	eb 54                	jmp    ffffffff8001e1bb <ZydisGetCompDispScaleEvex+0x27e>
ffffffff8001e167:	0f b6 45 f7          	movzbl -0x9(%rbp),%eax
ffffffff8001e16b:	48 98                	cltq   
ffffffff8001e16d:	48 8d 15 55 fe 01 00 	lea    0x1fe55(%rip),%rdx        # ffffffff8003dfc9 <scales.9>
ffffffff8001e174:	0f b6 04 10          	movzbl (%rax,%rdx,1),%eax
ffffffff8001e178:	eb 41                	jmp    ffffffff8001e1bb <ZydisGetCompDispScaleEvex+0x27e>
ffffffff8001e17a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001e17e:	48 8b 00             	mov    (%rax),%rax
ffffffff8001e181:	8b 80 70 01 00 00    	mov    0x170(%rax),%eax
ffffffff8001e187:	85 c0                	test   %eax,%eax
ffffffff8001e189:	0f 95 c0             	setne  %al
ffffffff8001e18c:	88 45 f5             	mov    %al,-0xb(%rbp)
ffffffff8001e18f:	0f b6 45 f5          	movzbl -0xb(%rbp),%eax
ffffffff8001e193:	0f b6 55 f7          	movzbl -0x9(%rbp),%edx
ffffffff8001e197:	48 63 ca             	movslq %edx,%rcx
ffffffff8001e19a:	48 63 d0             	movslq %eax,%rdx
ffffffff8001e19d:	48 89 d0             	mov    %rdx,%rax
ffffffff8001e1a0:	48 01 c0             	add    %rax,%rax
ffffffff8001e1a3:	48 01 d0             	add    %rdx,%rax
ffffffff8001e1a6:	48 8d 14 08          	lea    (%rax,%rcx,1),%rdx
ffffffff8001e1aa:	48 8d 05 1b fe 01 00 	lea    0x1fe1b(%rip),%rax        # ffffffff8003dfcc <scales.8>
ffffffff8001e1b1:	48 01 d0             	add    %rdx,%rax
ffffffff8001e1b4:	0f b6 00             	movzbl (%rax),%eax
ffffffff8001e1b7:	eb 02                	jmp    ffffffff8001e1bb <ZydisGetCompDispScaleEvex+0x27e>
ffffffff8001e1b9:	eb fe                	jmp    ffffffff8001e1b9 <ZydisGetCompDispScaleEvex+0x27c>
ffffffff8001e1bb:	c9                   	leave  
ffffffff8001e1bc:	c3                   	ret    

ffffffff8001e1bd <ZydisGetCompDispScaleMvex>:
ffffffff8001e1bd:	f3 0f 1e fa          	endbr64 
ffffffff8001e1c1:	55                   	push   %rbp
ffffffff8001e1c2:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001e1c5:	53                   	push   %rbx
ffffffff8001e1c6:	48 83 ec 28          	sub    $0x28,%rsp
ffffffff8001e1ca:	48 89 7d d0          	mov    %rdi,-0x30(%rbp)
ffffffff8001e1ce:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8001e1d2:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff8001e1d6:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff8001e1da:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001e1de:	0f b6 40 0d          	movzbl 0xd(%rax),%eax
ffffffff8001e1e2:	c0 e8 05             	shr    $0x5,%al
ffffffff8001e1e5:	83 e0 01             	and    $0x1,%eax
ffffffff8001e1e8:	88 45 f7             	mov    %al,-0x9(%rbp)
ffffffff8001e1eb:	80 7d f7 00          	cmpb   $0x0,-0x9(%rbp)
ffffffff8001e1ef:	74 1e                	je     ffffffff8001e20f <ZydisGetCompDispScaleMvex+0x52>
ffffffff8001e1f1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001e1f5:	0f b6 50 0d          	movzbl 0xd(%rax),%edx
ffffffff8001e1f9:	c0 ea 06             	shr    $0x6,%dl
ffffffff8001e1fc:	0f b6 d2             	movzbl %dl,%edx
ffffffff8001e1ff:	0f b6 40 0e          	movzbl 0xe(%rax),%eax
ffffffff8001e203:	83 e0 01             	and    $0x1,%eax
ffffffff8001e206:	48 c1 e0 02          	shl    $0x2,%rax
ffffffff8001e20a:	48 09 d0             	or     %rdx,%rax
ffffffff8001e20d:	84 c0                	test   %al,%al
ffffffff8001e20f:	80 7d f7 00          	cmpb   $0x0,-0x9(%rbp)
ffffffff8001e213:	75 62                	jne    ffffffff8001e277 <ZydisGetCompDispScaleMvex+0xba>
ffffffff8001e215:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001e219:	0f b6 50 0d          	movzbl 0xd(%rax),%edx
ffffffff8001e21d:	c0 ea 06             	shr    $0x6,%dl
ffffffff8001e220:	0f b6 d2             	movzbl %dl,%edx
ffffffff8001e223:	0f b6 40 0e          	movzbl 0xe(%rax),%eax
ffffffff8001e227:	83 e0 01             	and    $0x1,%eax
ffffffff8001e22a:	48 c1 e0 02          	shl    $0x2,%rax
ffffffff8001e22e:	48 09 d0             	or     %rdx,%rax
ffffffff8001e231:	84 c0                	test   %al,%al
ffffffff8001e233:	74 42                	je     ffffffff8001e277 <ZydisGetCompDispScaleMvex+0xba>
ffffffff8001e235:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001e239:	0f b6 50 0d          	movzbl 0xd(%rax),%edx
ffffffff8001e23d:	c0 ea 06             	shr    $0x6,%dl
ffffffff8001e240:	0f b6 d2             	movzbl %dl,%edx
ffffffff8001e243:	0f b6 40 0e          	movzbl 0xe(%rax),%eax
ffffffff8001e247:	83 e0 01             	and    $0x1,%eax
ffffffff8001e24a:	48 c1 e0 02          	shl    $0x2,%rax
ffffffff8001e24e:	48 09 d0             	or     %rdx,%rax
ffffffff8001e251:	0f b6 c0             	movzbl %al,%eax
ffffffff8001e254:	83 f8 02             	cmp    $0x2,%eax
ffffffff8001e257:	7f 06                	jg     ffffffff8001e25f <ZydisGetCompDispScaleMvex+0xa2>
ffffffff8001e259:	85 c0                	test   %eax,%eax
ffffffff8001e25b:	7f 0c                	jg     ffffffff8001e269 <ZydisGetCompDispScaleMvex+0xac>
ffffffff8001e25d:	eb 16                	jmp    ffffffff8001e275 <ZydisGetCompDispScaleMvex+0xb8>
ffffffff8001e25f:	83 e8 03             	sub    $0x3,%eax
ffffffff8001e262:	83 f8 01             	cmp    $0x1,%eax
ffffffff8001e265:	77 0e                	ja     ffffffff8001e275 <ZydisGetCompDispScaleMvex+0xb8>
ffffffff8001e267:	eb 06                	jmp    ffffffff8001e26f <ZydisGetCompDispScaleMvex+0xb2>
ffffffff8001e269:	c6 45 f7 01          	movb   $0x1,-0x9(%rbp)
ffffffff8001e26d:	eb 08                	jmp    ffffffff8001e277 <ZydisGetCompDispScaleMvex+0xba>
ffffffff8001e26f:	c6 45 f7 02          	movb   $0x2,-0x9(%rbp)
ffffffff8001e273:	eb 02                	jmp    ffffffff8001e277 <ZydisGetCompDispScaleMvex+0xba>
ffffffff8001e275:	eb fe                	jmp    ffffffff8001e275 <ZydisGetCompDispScaleMvex+0xb8>
ffffffff8001e277:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8001e27b:	48 8b 00             	mov    (%rax),%rax
ffffffff8001e27e:	8b 80 7c 01 00 00    	mov    0x17c(%rax),%eax
ffffffff8001e284:	89 c7                	mov    %eax,%edi
ffffffff8001e286:	e8 04 fc ff ff       	call   ffffffff8001de8f <ZydisEncodeMvexBroadcastMode>
ffffffff8001e28b:	89 c3                	mov    %eax,%ebx
ffffffff8001e28d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8001e291:	48 8b 00             	mov    (%rax),%rax
ffffffff8001e294:	8b 80 80 01 00 00    	mov    0x180(%rax),%eax
ffffffff8001e29a:	89 c7                	mov    %eax,%edi
ffffffff8001e29c:	e8 35 fc ff ff       	call   ffffffff8001ded6 <ZydisEncodeMvexConversionMode>
ffffffff8001e2a1:	09 d8                	or     %ebx,%eax
ffffffff8001e2a3:	88 45 e7             	mov    %al,-0x19(%rbp)
ffffffff8001e2a6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001e2aa:	0f b6 50 0c          	movzbl 0xc(%rax),%edx
ffffffff8001e2ae:	c0 ea 06             	shr    $0x6,%dl
ffffffff8001e2b1:	0f b6 d2             	movzbl %dl,%edx
ffffffff8001e2b4:	0f b6 40 0d          	movzbl 0xd(%rax),%eax
ffffffff8001e2b8:	83 e0 07             	and    $0x7,%eax
ffffffff8001e2bb:	48 c1 e0 02          	shl    $0x2,%rax
ffffffff8001e2bf:	48 09 d0             	or     %rdx,%rax
ffffffff8001e2c2:	0f b6 c0             	movzbl %al,%eax
ffffffff8001e2c5:	83 f8 19             	cmp    $0x19,%eax
ffffffff8001e2c8:	0f 8f 7f 01 00 00    	jg     ffffffff8001e44d <ZydisGetCompDispScaleMvex+0x290>
ffffffff8001e2ce:	83 f8 15             	cmp    $0x15,%eax
ffffffff8001e2d1:	7d 36                	jge    ffffffff8001e309 <ZydisGetCompDispScaleMvex+0x14c>
ffffffff8001e2d3:	83 f8 14             	cmp    $0x14,%eax
ffffffff8001e2d6:	0f 8f 71 01 00 00    	jg     ffffffff8001e44d <ZydisGetCompDispScaleMvex+0x290>
ffffffff8001e2dc:	83 f8 0a             	cmp    $0xa,%eax
ffffffff8001e2df:	7d 57                	jge    ffffffff8001e338 <ZydisGetCompDispScaleMvex+0x17b>
ffffffff8001e2e1:	83 f8 09             	cmp    $0x9,%eax
ffffffff8001e2e4:	0f 8f 63 01 00 00    	jg     ffffffff8001e44d <ZydisGetCompDispScaleMvex+0x290>
ffffffff8001e2ea:	83 f8 08             	cmp    $0x8,%eax
ffffffff8001e2ed:	0f 8d 9c 00 00 00    	jge    ffffffff8001e38f <ZydisGetCompDispScaleMvex+0x1d2>
ffffffff8001e2f3:	83 f8 03             	cmp    $0x3,%eax
ffffffff8001e2f6:	0f 8f 85 00 00 00    	jg     ffffffff8001e381 <ZydisGetCompDispScaleMvex+0x1c4>
ffffffff8001e2fc:	85 c0                	test   %eax,%eax
ffffffff8001e2fe:	0f 89 8b 00 00 00    	jns    ffffffff8001e38f <ZydisGetCompDispScaleMvex+0x1d2>
ffffffff8001e304:	e9 44 01 00 00       	jmp    ffffffff8001e44d <ZydisGetCompDispScaleMvex+0x290>
ffffffff8001e309:	83 e8 15             	sub    $0x15,%eax
ffffffff8001e30c:	83 f8 04             	cmp    $0x4,%eax
ffffffff8001e30f:	0f 87 38 01 00 00    	ja     ffffffff8001e44d <ZydisGetCompDispScaleMvex+0x290>
ffffffff8001e315:	89 c0                	mov    %eax,%eax
ffffffff8001e317:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
ffffffff8001e31e:	00 
ffffffff8001e31f:	48 8d 05 06 fa 01 00 	lea    0x1fa06(%rip),%rax        # ffffffff8003dd2c <zero.0+0x104>
ffffffff8001e326:	8b 04 02             	mov    (%rdx,%rax,1),%eax
ffffffff8001e329:	48 98                	cltq   
ffffffff8001e32b:	48 8d 15 fa f9 01 00 	lea    0x1f9fa(%rip),%rdx        # ffffffff8003dd2c <zero.0+0x104>
ffffffff8001e332:	48 01 d0             	add    %rdx,%rax
ffffffff8001e335:	3e ff e0             	notrack jmp *%rax
ffffffff8001e338:	89 c0                	mov    %eax,%eax
ffffffff8001e33a:	ba 01 00 00 00       	mov    $0x1,%edx
ffffffff8001e33f:	89 c1                	mov    %eax,%ecx
ffffffff8001e341:	48 d3 e2             	shl    %cl,%rdx
ffffffff8001e344:	48 89 d0             	mov    %rdx,%rax
ffffffff8001e347:	48 89 c2             	mov    %rax,%rdx
ffffffff8001e34a:	81 e2 00 c0 11 00    	and    $0x11c000,%edx
ffffffff8001e350:	48 85 d2             	test   %rdx,%rdx
ffffffff8001e353:	0f 95 c2             	setne  %dl
ffffffff8001e356:	84 d2                	test   %dl,%dl
ffffffff8001e358:	75 6f                	jne    ffffffff8001e3c9 <ZydisGetCompDispScaleMvex+0x20c>
ffffffff8001e35a:	48 89 c2             	mov    %rax,%rdx
ffffffff8001e35d:	81 e2 00 1c 04 00    	and    $0x41c00,%edx
ffffffff8001e363:	48 85 d2             	test   %rdx,%rdx
ffffffff8001e366:	0f 95 c2             	setne  %dl
ffffffff8001e369:	84 d2                	test   %dl,%dl
ffffffff8001e36b:	75 36                	jne    ffffffff8001e3a3 <ZydisGetCompDispScaleMvex+0x1e6>
ffffffff8001e36d:	25 00 20 0a 00       	and    $0xa2000,%eax
ffffffff8001e372:	48 85 c0             	test   %rax,%rax
ffffffff8001e375:	0f 95 c0             	setne  %al
ffffffff8001e378:	84 c0                	test   %al,%al
ffffffff8001e37a:	75 70                	jne    ffffffff8001e3ec <ZydisGetCompDispScaleMvex+0x22f>
ffffffff8001e37c:	e9 cc 00 00 00       	jmp    ffffffff8001e44d <ZydisGetCompDispScaleMvex+0x290>
ffffffff8001e381:	83 e8 04             	sub    $0x4,%eax
ffffffff8001e384:	83 f8 03             	cmp    $0x3,%eax
ffffffff8001e387:	0f 87 c0 00 00 00    	ja     ffffffff8001e44d <ZydisGetCompDispScaleMvex+0x290>
ffffffff8001e38d:	eb 0a                	jmp    ffffffff8001e399 <ZydisGetCompDispScaleMvex+0x1dc>
ffffffff8001e38f:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001e394:	e9 b6 00 00 00       	jmp    ffffffff8001e44f <ZydisGetCompDispScaleMvex+0x292>
ffffffff8001e399:	b8 06 00 00 00       	mov    $0x6,%eax
ffffffff8001e39e:	e9 ac 00 00 00       	jmp    ffffffff8001e44f <ZydisGetCompDispScaleMvex+0x292>
ffffffff8001e3a3:	0f b6 45 f7          	movzbl -0x9(%rbp),%eax
ffffffff8001e3a7:	0f b6 55 e7          	movzbl -0x19(%rbp),%edx
ffffffff8001e3ab:	48 63 d2             	movslq %edx,%rdx
ffffffff8001e3ae:	48 98                	cltq   
ffffffff8001e3b0:	48 c1 e0 03          	shl    $0x3,%rax
ffffffff8001e3b4:	48 01 c2             	add    %rax,%rdx
ffffffff8001e3b7:	48 8d 05 22 fc 01 00 	lea    0x1fc22(%rip),%rax        # ffffffff8003dfe0 <lookup.7>
ffffffff8001e3be:	48 01 d0             	add    %rdx,%rax
ffffffff8001e3c1:	0f b6 00             	movzbl (%rax),%eax
ffffffff8001e3c4:	e9 86 00 00 00       	jmp    ffffffff8001e44f <ZydisGetCompDispScaleMvex+0x292>
ffffffff8001e3c9:	0f b6 45 f7          	movzbl -0x9(%rbp),%eax
ffffffff8001e3cd:	0f b6 55 e7          	movzbl -0x19(%rbp),%edx
ffffffff8001e3d1:	48 63 d2             	movslq %edx,%rdx
ffffffff8001e3d4:	48 98                	cltq   
ffffffff8001e3d6:	48 c1 e0 03          	shl    $0x3,%rax
ffffffff8001e3da:	48 01 c2             	add    %rax,%rdx
ffffffff8001e3dd:	48 8d 05 1c fc 01 00 	lea    0x1fc1c(%rip),%rax        # ffffffff8003e000 <lookup.6>
ffffffff8001e3e4:	48 01 d0             	add    %rdx,%rax
ffffffff8001e3e7:	0f b6 00             	movzbl (%rax),%eax
ffffffff8001e3ea:	eb 63                	jmp    ffffffff8001e44f <ZydisGetCompDispScaleMvex+0x292>
ffffffff8001e3ec:	0f b6 45 f7          	movzbl -0x9(%rbp),%eax
ffffffff8001e3f0:	0f b6 55 e7          	movzbl -0x19(%rbp),%edx
ffffffff8001e3f4:	48 63 ca             	movslq %edx,%rcx
ffffffff8001e3f7:	48 63 d0             	movslq %eax,%rdx
ffffffff8001e3fa:	48 89 d0             	mov    %rdx,%rax
ffffffff8001e3fd:	48 01 c0             	add    %rax,%rax
ffffffff8001e400:	48 01 d0             	add    %rdx,%rax
ffffffff8001e403:	48 8d 14 08          	lea    (%rax,%rcx,1),%rdx
ffffffff8001e407:	48 8d 05 0a fc 01 00 	lea    0x1fc0a(%rip),%rax        # ffffffff8003e018 <lookup.5>
ffffffff8001e40e:	48 01 d0             	add    %rdx,%rax
ffffffff8001e411:	0f b6 00             	movzbl (%rax),%eax
ffffffff8001e414:	eb 39                	jmp    ffffffff8001e44f <ZydisGetCompDispScaleMvex+0x292>
ffffffff8001e416:	0f b6 45 f7          	movzbl -0x9(%rbp),%eax
ffffffff8001e41a:	0f b6 55 e7          	movzbl -0x19(%rbp),%edx
ffffffff8001e41e:	48 63 d2             	movslq %edx,%rdx
ffffffff8001e421:	48 98                	cltq   
ffffffff8001e423:	48 c1 e0 03          	shl    $0x3,%rax
ffffffff8001e427:	48 01 c2             	add    %rax,%rdx
ffffffff8001e42a:	48 8d 05 ff fb 01 00 	lea    0x1fbff(%rip),%rax        # ffffffff8003e030 <lookup.4>
ffffffff8001e431:	48 01 d0             	add    %rdx,%rax
ffffffff8001e434:	0f b6 00             	movzbl (%rax),%eax
ffffffff8001e437:	eb 16                	jmp    ffffffff8001e44f <ZydisGetCompDispScaleMvex+0x292>
ffffffff8001e439:	80 7d f7 00          	cmpb   $0x0,-0x9(%rbp)
ffffffff8001e43d:	75 07                	jne    ffffffff8001e446 <ZydisGetCompDispScaleMvex+0x289>
ffffffff8001e43f:	b8 06 00 00 00       	mov    $0x6,%eax
ffffffff8001e444:	eb 09                	jmp    ffffffff8001e44f <ZydisGetCompDispScaleMvex+0x292>
ffffffff8001e446:	b8 03 00 00 00       	mov    $0x3,%eax
ffffffff8001e44b:	eb 02                	jmp    ffffffff8001e44f <ZydisGetCompDispScaleMvex+0x292>
ffffffff8001e44d:	eb fe                	jmp    ffffffff8001e44d <ZydisGetCompDispScaleMvex+0x290>
ffffffff8001e44f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
ffffffff8001e453:	c9                   	leave  
ffffffff8001e454:	c3                   	ret    

ffffffff8001e455 <ZydisGetCompDispScale>:
ffffffff8001e455:	f3 0f 1e fa          	endbr64 
ffffffff8001e459:	55                   	push   %rbp
ffffffff8001e45a:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001e45d:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff8001e461:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8001e465:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001e469:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff8001e46d:	0f b6 40 06          	movzbl 0x6(%rax),%eax
ffffffff8001e471:	83 e0 07             	and    $0x7,%eax
ffffffff8001e474:	0f b6 c0             	movzbl %al,%eax
ffffffff8001e477:	83 f8 05             	cmp    $0x5,%eax
ffffffff8001e47a:	74 2c                	je     ffffffff8001e4a8 <ZydisGetCompDispScale+0x53>
ffffffff8001e47c:	83 f8 05             	cmp    $0x5,%eax
ffffffff8001e47f:	7f 35                	jg     ffffffff8001e4b6 <ZydisGetCompDispScale+0x61>
ffffffff8001e481:	83 f8 03             	cmp    $0x3,%eax
ffffffff8001e484:	7f 06                	jg     ffffffff8001e48c <ZydisGetCompDispScale+0x37>
ffffffff8001e486:	85 c0                	test   %eax,%eax
ffffffff8001e488:	79 09                	jns    ffffffff8001e493 <ZydisGetCompDispScale+0x3e>
ffffffff8001e48a:	eb 2a                	jmp    ffffffff8001e4b6 <ZydisGetCompDispScale+0x61>
ffffffff8001e48c:	83 f8 04             	cmp    $0x4,%eax
ffffffff8001e48f:	74 09                	je     ffffffff8001e49a <ZydisGetCompDispScale+0x45>
ffffffff8001e491:	eb 23                	jmp    ffffffff8001e4b6 <ZydisGetCompDispScale+0x61>
ffffffff8001e493:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001e498:	eb 1e                	jmp    ffffffff8001e4b8 <ZydisGetCompDispScale+0x63>
ffffffff8001e49a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001e49e:	48 89 c7             	mov    %rax,%rdi
ffffffff8001e4a1:	e8 97 fa ff ff       	call   ffffffff8001df3d <ZydisGetCompDispScaleEvex>
ffffffff8001e4a6:	eb 10                	jmp    ffffffff8001e4b8 <ZydisGetCompDispScale+0x63>
ffffffff8001e4a8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001e4ac:	48 89 c7             	mov    %rax,%rdi
ffffffff8001e4af:	e8 09 fd ff ff       	call   ffffffff8001e1bd <ZydisGetCompDispScaleMvex>
ffffffff8001e4b4:	eb 02                	jmp    ffffffff8001e4b8 <ZydisGetCompDispScale+0x63>
ffffffff8001e4b6:	eb fe                	jmp    ffffffff8001e4b6 <ZydisGetCompDispScale+0x61>
ffffffff8001e4b8:	c9                   	leave  
ffffffff8001e4b9:	c3                   	ret    

ffffffff8001e4ba <ZydisIsRegisterOperandCompatible>:
ffffffff8001e4ba:	f3 0f 1e fa          	endbr64 
ffffffff8001e4be:	55                   	push   %rbp
ffffffff8001e4bf:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001e4c2:	53                   	push   %rbx
ffffffff8001e4c3:	48 83 ec 48          	sub    $0x48,%rsp
ffffffff8001e4c7:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
ffffffff8001e4cb:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
ffffffff8001e4cf:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
ffffffff8001e4d3:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8001e4d7:	8b 40 04             	mov    0x4(%rax),%eax
ffffffff8001e4da:	89 c7                	mov    %eax,%edi
ffffffff8001e4dc:	e8 bf 72 00 00       	call   ffffffff800257a0 <ZydisRegisterGetClass>
ffffffff8001e4e1:	89 45 e8             	mov    %eax,-0x18(%rbp)
ffffffff8001e4e4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8001e4e8:	48 8b 00             	mov    (%rax),%rax
ffffffff8001e4eb:	8b 00                	mov    (%rax),%eax
ffffffff8001e4ed:	8b 55 e8             	mov    -0x18(%rbp),%edx
ffffffff8001e4f0:	89 d6                	mov    %edx,%esi
ffffffff8001e4f2:	89 c7                	mov    %eax,%edi
ffffffff8001e4f4:	e8 f1 74 00 00       	call   ffffffff800259ea <ZydisRegisterClassGetWidth>
ffffffff8001e4f9:	66 89 45 e6          	mov    %ax,-0x1a(%rbp)
ffffffff8001e4fd:	66 83 7d e6 00       	cmpw   $0x0,-0x1a(%rbp)
ffffffff8001e502:	75 0a                	jne    ffffffff8001e50e <ZydisIsRegisterOperandCompatible+0x54>
ffffffff8001e504:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001e509:	e9 8e 07 00 00       	jmp    ffffffff8001ec9c <ZydisIsRegisterOperandCompatible+0x7e2>
ffffffff8001e50e:	c6 45 ef 00          	movb   $0x0,-0x11(%rbp)
ffffffff8001e512:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff8001e516:	0f b6 00             	movzbl (%rax),%eax
ffffffff8001e519:	83 e0 3f             	and    $0x3f,%eax
ffffffff8001e51c:	0f b6 c0             	movzbl %al,%eax
ffffffff8001e51f:	83 f8 16             	cmp    $0x16,%eax
ffffffff8001e522:	0f 87 28 07 00 00    	ja     ffffffff8001ec50 <ZydisIsRegisterOperandCompatible+0x796>
ffffffff8001e528:	89 c0                	mov    %eax,%eax
ffffffff8001e52a:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
ffffffff8001e531:	00 
ffffffff8001e532:	48 8d 05 07 f8 01 00 	lea    0x1f807(%rip),%rax        # ffffffff8003dd40 <zero.0+0x118>
ffffffff8001e539:	8b 04 02             	mov    (%rdx,%rax,1),%eax
ffffffff8001e53c:	48 98                	cltq   
ffffffff8001e53e:	48 8d 15 fb f7 01 00 	lea    0x1f7fb(%rip),%rdx        # ffffffff8003dd40 <zero.0+0x118>
ffffffff8001e545:	48 01 d0             	add    %rdx,%rax
ffffffff8001e548:	3e ff e0             	notrack jmp *%rax
ffffffff8001e54b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff8001e54f:	0f b6 40 09          	movzbl 0x9(%rax),%eax
ffffffff8001e553:	83 e0 07             	and    $0x7,%eax
ffffffff8001e556:	0f b6 c0             	movzbl %al,%eax
ffffffff8001e559:	83 f8 02             	cmp    $0x2,%eax
ffffffff8001e55c:	0f 84 bc 00 00 00    	je     ffffffff8001e61e <ZydisIsRegisterOperandCompatible+0x164>
ffffffff8001e562:	83 f8 02             	cmp    $0x2,%eax
ffffffff8001e565:	0f 8f 22 01 00 00    	jg     ffffffff8001e68d <ZydisIsRegisterOperandCompatible+0x1d3>
ffffffff8001e56b:	85 c0                	test   %eax,%eax
ffffffff8001e56d:	74 0a                	je     ffffffff8001e579 <ZydisIsRegisterOperandCompatible+0xbf>
ffffffff8001e56f:	83 f8 01             	cmp    $0x1,%eax
ffffffff8001e572:	74 37                	je     ffffffff8001e5ab <ZydisIsRegisterOperandCompatible+0xf1>
ffffffff8001e574:	e9 14 01 00 00       	jmp    ffffffff8001e68d <ZydisIsRegisterOperandCompatible+0x1d3>
ffffffff8001e579:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff8001e57d:	0f b6 50 0a          	movzbl 0xa(%rax),%edx
ffffffff8001e581:	0f b6 40 0b          	movzbl 0xb(%rax),%eax
ffffffff8001e585:	83 e0 01             	and    $0x1,%eax
ffffffff8001e588:	48 c1 e0 08          	shl    $0x8,%rax
ffffffff8001e58c:	48 09 d0             	or     %rdx,%rax
ffffffff8001e58f:	0f b7 c0             	movzwl %ax,%eax
ffffffff8001e592:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
ffffffff8001e596:	8b 52 04             	mov    0x4(%rdx),%edx
ffffffff8001e599:	39 d0                	cmp    %edx,%eax
ffffffff8001e59b:	0f 84 ee 00 00 00    	je     ffffffff8001e68f <ZydisIsRegisterOperandCompatible+0x1d5>
ffffffff8001e5a1:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001e5a6:	e9 f1 06 00 00       	jmp    ffffffff8001ec9c <ZydisIsRegisterOperandCompatible+0x7e2>
ffffffff8001e5ab:	83 7d e8 01          	cmpl   $0x1,-0x18(%rbp)
ffffffff8001e5af:	74 1c                	je     ffffffff8001e5cd <ZydisIsRegisterOperandCompatible+0x113>
ffffffff8001e5b1:	83 7d e8 02          	cmpl   $0x2,-0x18(%rbp)
ffffffff8001e5b5:	74 16                	je     ffffffff8001e5cd <ZydisIsRegisterOperandCompatible+0x113>
ffffffff8001e5b7:	83 7d e8 03          	cmpl   $0x3,-0x18(%rbp)
ffffffff8001e5bb:	74 10                	je     ffffffff8001e5cd <ZydisIsRegisterOperandCompatible+0x113>
ffffffff8001e5bd:	83 7d e8 04          	cmpl   $0x4,-0x18(%rbp)
ffffffff8001e5c1:	74 0a                	je     ffffffff8001e5cd <ZydisIsRegisterOperandCompatible+0x113>
ffffffff8001e5c3:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001e5c8:	e9 cf 06 00 00       	jmp    ffffffff8001ec9c <ZydisIsRegisterOperandCompatible+0x7e2>
ffffffff8001e5cd:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff8001e5d1:	0f b6 40 0a          	movzbl 0xa(%rax),%eax
ffffffff8001e5d5:	83 e0 3f             	and    $0x3f,%eax
ffffffff8001e5d8:	0f b6 d8             	movzbl %al,%ebx
ffffffff8001e5db:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8001e5df:	8b 40 04             	mov    0x4(%rax),%eax
ffffffff8001e5e2:	89 c7                	mov    %eax,%edi
ffffffff8001e5e4:	e8 78 71 00 00       	call   ffffffff80025761 <ZydisRegisterGetId>
ffffffff8001e5e9:	0f be c0             	movsbl %al,%eax
ffffffff8001e5ec:	39 c3                	cmp    %eax,%ebx
ffffffff8001e5ee:	74 0a                	je     ffffffff8001e5fa <ZydisIsRegisterOperandCompatible+0x140>
ffffffff8001e5f0:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001e5f5:	e9 a2 06 00 00       	jmp    ffffffff8001ec9c <ZydisIsRegisterOperandCompatible+0x7e2>
ffffffff8001e5fa:	0f b7 45 e6          	movzwl -0x1a(%rbp),%eax
ffffffff8001e5fe:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
ffffffff8001e602:	89 c6                	mov    %eax,%esi
ffffffff8001e604:	48 89 d7             	mov    %rdx,%rdi
ffffffff8001e607:	e8 ae f4 ff ff       	call   ffffffff8001daba <ZydisCheckOsz>
ffffffff8001e60c:	84 c0                	test   %al,%al
ffffffff8001e60e:	0f 85 81 00 00 00    	jne    ffffffff8001e695 <ZydisIsRegisterOperandCompatible+0x1db>
ffffffff8001e614:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001e619:	e9 7e 06 00 00       	jmp    ffffffff8001ec9c <ZydisIsRegisterOperandCompatible+0x7e2>
ffffffff8001e61e:	83 7d e8 01          	cmpl   $0x1,-0x18(%rbp)
ffffffff8001e622:	74 1c                	je     ffffffff8001e640 <ZydisIsRegisterOperandCompatible+0x186>
ffffffff8001e624:	83 7d e8 02          	cmpl   $0x2,-0x18(%rbp)
ffffffff8001e628:	74 16                	je     ffffffff8001e640 <ZydisIsRegisterOperandCompatible+0x186>
ffffffff8001e62a:	83 7d e8 03          	cmpl   $0x3,-0x18(%rbp)
ffffffff8001e62e:	74 10                	je     ffffffff8001e640 <ZydisIsRegisterOperandCompatible+0x186>
ffffffff8001e630:	83 7d e8 04          	cmpl   $0x4,-0x18(%rbp)
ffffffff8001e634:	74 0a                	je     ffffffff8001e640 <ZydisIsRegisterOperandCompatible+0x186>
ffffffff8001e636:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001e63b:	e9 5c 06 00 00       	jmp    ffffffff8001ec9c <ZydisIsRegisterOperandCompatible+0x7e2>
ffffffff8001e640:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff8001e644:	0f b6 40 0a          	movzbl 0xa(%rax),%eax
ffffffff8001e648:	83 e0 3f             	and    $0x3f,%eax
ffffffff8001e64b:	0f b6 d8             	movzbl %al,%ebx
ffffffff8001e64e:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8001e652:	8b 40 04             	mov    0x4(%rax),%eax
ffffffff8001e655:	89 c7                	mov    %eax,%edi
ffffffff8001e657:	e8 05 71 00 00       	call   ffffffff80025761 <ZydisRegisterGetId>
ffffffff8001e65c:	0f be c0             	movsbl %al,%eax
ffffffff8001e65f:	39 c3                	cmp    %eax,%ebx
ffffffff8001e661:	74 0a                	je     ffffffff8001e66d <ZydisIsRegisterOperandCompatible+0x1b3>
ffffffff8001e663:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001e668:	e9 2f 06 00 00       	jmp    ffffffff8001ec9c <ZydisIsRegisterOperandCompatible+0x7e2>
ffffffff8001e66d:	0f b7 45 e6          	movzwl -0x1a(%rbp),%eax
ffffffff8001e671:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
ffffffff8001e675:	89 c6                	mov    %eax,%esi
ffffffff8001e677:	48 89 d7             	mov    %rdx,%rdi
ffffffff8001e67a:	e8 92 f4 ff ff       	call   ffffffff8001db11 <ZydisCheckAsz>
ffffffff8001e67f:	84 c0                	test   %al,%al
ffffffff8001e681:	75 18                	jne    ffffffff8001e69b <ZydisIsRegisterOperandCompatible+0x1e1>
ffffffff8001e683:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001e688:	e9 0f 06 00 00       	jmp    ffffffff8001ec9c <ZydisIsRegisterOperandCompatible+0x7e2>
ffffffff8001e68d:	eb fe                	jmp    ffffffff8001e68d <ZydisIsRegisterOperandCompatible+0x1d3>
ffffffff8001e68f:	90                   	nop
ffffffff8001e690:	e9 ee 05 00 00       	jmp    ffffffff8001ec83 <ZydisIsRegisterOperandCompatible+0x7c9>
ffffffff8001e695:	90                   	nop
ffffffff8001e696:	e9 e8 05 00 00       	jmp    ffffffff8001ec83 <ZydisIsRegisterOperandCompatible+0x7c9>
ffffffff8001e69b:	90                   	nop
ffffffff8001e69c:	e9 e2 05 00 00       	jmp    ffffffff8001ec83 <ZydisIsRegisterOperandCompatible+0x7c9>
ffffffff8001e6a1:	83 7d e8 01          	cmpl   $0x1,-0x18(%rbp)
ffffffff8001e6a5:	74 0a                	je     ffffffff8001e6b1 <ZydisIsRegisterOperandCompatible+0x1f7>
ffffffff8001e6a7:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001e6ac:	e9 eb 05 00 00       	jmp    ffffffff8001ec9c <ZydisIsRegisterOperandCompatible+0x7e2>
ffffffff8001e6b1:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8001e6b5:	8b 48 04             	mov    0x4(%rax),%ecx
ffffffff8001e6b8:	8b 55 e8             	mov    -0x18(%rbp),%edx
ffffffff8001e6bb:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8001e6bf:	89 ce                	mov    %ecx,%esi
ffffffff8001e6c1:	48 89 c7             	mov    %rax,%rdi
ffffffff8001e6c4:	e8 ac f4 ff ff       	call   ffffffff8001db75 <ZydisIsRegisterAllowed>
ffffffff8001e6c9:	84 c0                	test   %al,%al
ffffffff8001e6cb:	75 0a                	jne    ffffffff8001e6d7 <ZydisIsRegisterOperandCompatible+0x21d>
ffffffff8001e6cd:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001e6d2:	e9 c5 05 00 00       	jmp    ffffffff8001ec9c <ZydisIsRegisterOperandCompatible+0x7e2>
ffffffff8001e6d7:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8001e6db:	8b 48 04             	mov    0x4(%rax),%ecx
ffffffff8001e6de:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8001e6e2:	ba 00 00 00 00       	mov    $0x0,%edx
ffffffff8001e6e7:	89 ce                	mov    %ecx,%esi
ffffffff8001e6e9:	48 89 c7             	mov    %rax,%rdi
ffffffff8001e6ec:	e8 63 f5 ff ff       	call   ffffffff8001dc54 <ZydisValidateRexType>
ffffffff8001e6f1:	84 c0                	test   %al,%al
ffffffff8001e6f3:	0f 85 59 05 00 00    	jne    ffffffff8001ec52 <ZydisIsRegisterOperandCompatible+0x798>
ffffffff8001e6f9:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001e6fe:	e9 99 05 00 00       	jmp    ffffffff8001ec9c <ZydisIsRegisterOperandCompatible+0x7e2>
ffffffff8001e703:	83 7d e8 02          	cmpl   $0x2,-0x18(%rbp)
ffffffff8001e707:	74 0a                	je     ffffffff8001e713 <ZydisIsRegisterOperandCompatible+0x259>
ffffffff8001e709:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001e70e:	e9 89 05 00 00       	jmp    ffffffff8001ec9c <ZydisIsRegisterOperandCompatible+0x7e2>
ffffffff8001e713:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8001e717:	8b 48 04             	mov    0x4(%rax),%ecx
ffffffff8001e71a:	8b 55 e8             	mov    -0x18(%rbp),%edx
ffffffff8001e71d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8001e721:	89 ce                	mov    %ecx,%esi
ffffffff8001e723:	48 89 c7             	mov    %rax,%rdi
ffffffff8001e726:	e8 4a f4 ff ff       	call   ffffffff8001db75 <ZydisIsRegisterAllowed>
ffffffff8001e72b:	84 c0                	test   %al,%al
ffffffff8001e72d:	0f 85 22 05 00 00    	jne    ffffffff8001ec55 <ZydisIsRegisterOperandCompatible+0x79b>
ffffffff8001e733:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001e738:	e9 5f 05 00 00       	jmp    ffffffff8001ec9c <ZydisIsRegisterOperandCompatible+0x7e2>
ffffffff8001e73d:	83 7d e8 03          	cmpl   $0x3,-0x18(%rbp)
ffffffff8001e741:	74 0a                	je     ffffffff8001e74d <ZydisIsRegisterOperandCompatible+0x293>
ffffffff8001e743:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001e748:	e9 4f 05 00 00       	jmp    ffffffff8001ec9c <ZydisIsRegisterOperandCompatible+0x7e2>
ffffffff8001e74d:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8001e751:	8b 48 04             	mov    0x4(%rax),%ecx
ffffffff8001e754:	8b 55 e8             	mov    -0x18(%rbp),%edx
ffffffff8001e757:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8001e75b:	89 ce                	mov    %ecx,%esi
ffffffff8001e75d:	48 89 c7             	mov    %rax,%rdi
ffffffff8001e760:	e8 10 f4 ff ff       	call   ffffffff8001db75 <ZydisIsRegisterAllowed>
ffffffff8001e765:	84 c0                	test   %al,%al
ffffffff8001e767:	0f 85 eb 04 00 00    	jne    ffffffff8001ec58 <ZydisIsRegisterOperandCompatible+0x79e>
ffffffff8001e76d:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001e772:	e9 25 05 00 00       	jmp    ffffffff8001ec9c <ZydisIsRegisterOperandCompatible+0x7e2>
ffffffff8001e777:	83 7d e8 04          	cmpl   $0x4,-0x18(%rbp)
ffffffff8001e77b:	0f 84 da 04 00 00    	je     ffffffff8001ec5b <ZydisIsRegisterOperandCompatible+0x7a1>
ffffffff8001e781:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001e786:	e9 11 05 00 00       	jmp    ffffffff8001ec9c <ZydisIsRegisterOperandCompatible+0x7e2>
ffffffff8001e78b:	83 7d e8 02          	cmpl   $0x2,-0x18(%rbp)
ffffffff8001e78f:	74 16                	je     ffffffff8001e7a7 <ZydisIsRegisterOperandCompatible+0x2ed>
ffffffff8001e791:	83 7d e8 03          	cmpl   $0x3,-0x18(%rbp)
ffffffff8001e795:	74 10                	je     ffffffff8001e7a7 <ZydisIsRegisterOperandCompatible+0x2ed>
ffffffff8001e797:	83 7d e8 04          	cmpl   $0x4,-0x18(%rbp)
ffffffff8001e79b:	74 0a                	je     ffffffff8001e7a7 <ZydisIsRegisterOperandCompatible+0x2ed>
ffffffff8001e79d:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001e7a2:	e9 f5 04 00 00       	jmp    ffffffff8001ec9c <ZydisIsRegisterOperandCompatible+0x7e2>
ffffffff8001e7a7:	0f b7 45 e6          	movzwl -0x1a(%rbp),%eax
ffffffff8001e7ab:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
ffffffff8001e7af:	89 c6                	mov    %eax,%esi
ffffffff8001e7b1:	48 89 d7             	mov    %rdx,%rdi
ffffffff8001e7b4:	e8 01 f3 ff ff       	call   ffffffff8001daba <ZydisCheckOsz>
ffffffff8001e7b9:	84 c0                	test   %al,%al
ffffffff8001e7bb:	75 0a                	jne    ffffffff8001e7c7 <ZydisIsRegisterOperandCompatible+0x30d>
ffffffff8001e7bd:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001e7c2:	e9 d5 04 00 00       	jmp    ffffffff8001ec9c <ZydisIsRegisterOperandCompatible+0x7e2>
ffffffff8001e7c7:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8001e7cb:	8b 48 04             	mov    0x4(%rax),%ecx
ffffffff8001e7ce:	8b 55 e8             	mov    -0x18(%rbp),%edx
ffffffff8001e7d1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8001e7d5:	89 ce                	mov    %ecx,%esi
ffffffff8001e7d7:	48 89 c7             	mov    %rax,%rdi
ffffffff8001e7da:	e8 96 f3 ff ff       	call   ffffffff8001db75 <ZydisIsRegisterAllowed>
ffffffff8001e7df:	84 c0                	test   %al,%al
ffffffff8001e7e1:	75 0a                	jne    ffffffff8001e7ed <ZydisIsRegisterOperandCompatible+0x333>
ffffffff8001e7e3:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001e7e8:	e9 af 04 00 00       	jmp    ffffffff8001ec9c <ZydisIsRegisterOperandCompatible+0x7e2>
ffffffff8001e7ed:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8001e7f1:	8b 48 04             	mov    0x4(%rax),%ecx
ffffffff8001e7f4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8001e7f8:	ba 00 00 00 00       	mov    $0x0,%edx
ffffffff8001e7fd:	89 ce                	mov    %ecx,%esi
ffffffff8001e7ff:	48 89 c7             	mov    %rax,%rdi
ffffffff8001e802:	e8 4d f4 ff ff       	call   ffffffff8001dc54 <ZydisValidateRexType>
ffffffff8001e807:	84 c0                	test   %al,%al
ffffffff8001e809:	0f 85 4f 04 00 00    	jne    ffffffff8001ec5e <ZydisIsRegisterOperandCompatible+0x7a4>
ffffffff8001e80f:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001e814:	e9 83 04 00 00       	jmp    ffffffff8001ec9c <ZydisIsRegisterOperandCompatible+0x7e2>
ffffffff8001e819:	83 7d e8 03          	cmpl   $0x3,-0x18(%rbp)
ffffffff8001e81d:	74 10                	je     ffffffff8001e82f <ZydisIsRegisterOperandCompatible+0x375>
ffffffff8001e81f:	83 7d e8 04          	cmpl   $0x4,-0x18(%rbp)
ffffffff8001e823:	74 0a                	je     ffffffff8001e82f <ZydisIsRegisterOperandCompatible+0x375>
ffffffff8001e825:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001e82a:	e9 6d 04 00 00       	jmp    ffffffff8001ec9c <ZydisIsRegisterOperandCompatible+0x7e2>
ffffffff8001e82f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8001e833:	0f b6 40 28          	movzbl 0x28(%rax),%eax
ffffffff8001e837:	84 c0                	test   %al,%al
ffffffff8001e839:	75 1a                	jne    ffffffff8001e855 <ZydisIsRegisterOperandCompatible+0x39b>
ffffffff8001e83b:	83 7d e8 04          	cmpl   $0x4,-0x18(%rbp)
ffffffff8001e83f:	75 0a                	jne    ffffffff8001e84b <ZydisIsRegisterOperandCompatible+0x391>
ffffffff8001e841:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8001e845:	c6 40 28 40          	movb   $0x40,0x28(%rax)
ffffffff8001e849:	eb 24                	jmp    ffffffff8001e86f <ZydisIsRegisterOperandCompatible+0x3b5>
ffffffff8001e84b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8001e84f:	c6 40 34 01          	movb   $0x1,0x34(%rax)
ffffffff8001e853:	eb 1a                	jmp    ffffffff8001e86f <ZydisIsRegisterOperandCompatible+0x3b5>
ffffffff8001e855:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8001e859:	0f b6 40 28          	movzbl 0x28(%rax),%eax
ffffffff8001e85d:	0f b7 55 e6          	movzwl -0x1a(%rbp),%edx
ffffffff8001e861:	38 d0                	cmp    %dl,%al
ffffffff8001e863:	74 0a                	je     ffffffff8001e86f <ZydisIsRegisterOperandCompatible+0x3b5>
ffffffff8001e865:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001e86a:	e9 2d 04 00 00       	jmp    ffffffff8001ec9c <ZydisIsRegisterOperandCompatible+0x7e2>
ffffffff8001e86f:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8001e873:	8b 48 04             	mov    0x4(%rax),%ecx
ffffffff8001e876:	8b 55 e8             	mov    -0x18(%rbp),%edx
ffffffff8001e879:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8001e87d:	89 ce                	mov    %ecx,%esi
ffffffff8001e87f:	48 89 c7             	mov    %rax,%rdi
ffffffff8001e882:	e8 ee f2 ff ff       	call   ffffffff8001db75 <ZydisIsRegisterAllowed>
ffffffff8001e887:	84 c0                	test   %al,%al
ffffffff8001e889:	75 0a                	jne    ffffffff8001e895 <ZydisIsRegisterOperandCompatible+0x3db>
ffffffff8001e88b:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001e890:	e9 07 04 00 00       	jmp    ffffffff8001ec9c <ZydisIsRegisterOperandCompatible+0x7e2>
ffffffff8001e895:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8001e899:	8b 48 04             	mov    0x4(%rax),%ecx
ffffffff8001e89c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8001e8a0:	ba 00 00 00 00       	mov    $0x0,%edx
ffffffff8001e8a5:	89 ce                	mov    %ecx,%esi
ffffffff8001e8a7:	48 89 c7             	mov    %rax,%rdi
ffffffff8001e8aa:	e8 a5 f3 ff ff       	call   ffffffff8001dc54 <ZydisValidateRexType>
ffffffff8001e8af:	84 c0                	test   %al,%al
ffffffff8001e8b1:	0f 85 aa 03 00 00    	jne    ffffffff8001ec61 <ZydisIsRegisterOperandCompatible+0x7a7>
ffffffff8001e8b7:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001e8bc:	e9 db 03 00 00       	jmp    ffffffff8001ec9c <ZydisIsRegisterOperandCompatible+0x7e2>
ffffffff8001e8c1:	83 7d e8 02          	cmpl   $0x2,-0x18(%rbp)
ffffffff8001e8c5:	74 10                	je     ffffffff8001e8d7 <ZydisIsRegisterOperandCompatible+0x41d>
ffffffff8001e8c7:	83 7d e8 03          	cmpl   $0x3,-0x18(%rbp)
ffffffff8001e8cb:	74 0a                	je     ffffffff8001e8d7 <ZydisIsRegisterOperandCompatible+0x41d>
ffffffff8001e8cd:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001e8d2:	e9 c5 03 00 00       	jmp    ffffffff8001ec9c <ZydisIsRegisterOperandCompatible+0x7e2>
ffffffff8001e8d7:	0f b7 45 e6          	movzwl -0x1a(%rbp),%eax
ffffffff8001e8db:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
ffffffff8001e8df:	89 c6                	mov    %eax,%esi
ffffffff8001e8e1:	48 89 d7             	mov    %rdx,%rdi
ffffffff8001e8e4:	e8 d1 f1 ff ff       	call   ffffffff8001daba <ZydisCheckOsz>
ffffffff8001e8e9:	84 c0                	test   %al,%al
ffffffff8001e8eb:	75 1c                	jne    ffffffff8001e909 <ZydisIsRegisterOperandCompatible+0x44f>
ffffffff8001e8ed:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8001e8f1:	0f b6 40 28          	movzbl 0x28(%rax),%eax
ffffffff8001e8f5:	3c 40                	cmp    $0x40,%al
ffffffff8001e8f7:	75 06                	jne    ffffffff8001e8ff <ZydisIsRegisterOperandCompatible+0x445>
ffffffff8001e8f9:	83 7d e8 03          	cmpl   $0x3,-0x18(%rbp)
ffffffff8001e8fd:	74 0a                	je     ffffffff8001e909 <ZydisIsRegisterOperandCompatible+0x44f>
ffffffff8001e8ff:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001e904:	e9 93 03 00 00       	jmp    ffffffff8001ec9c <ZydisIsRegisterOperandCompatible+0x7e2>
ffffffff8001e909:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8001e90d:	8b 48 04             	mov    0x4(%rax),%ecx
ffffffff8001e910:	8b 55 e8             	mov    -0x18(%rbp),%edx
ffffffff8001e913:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8001e917:	89 ce                	mov    %ecx,%esi
ffffffff8001e919:	48 89 c7             	mov    %rax,%rdi
ffffffff8001e91c:	e8 54 f2 ff ff       	call   ffffffff8001db75 <ZydisIsRegisterAllowed>
ffffffff8001e921:	84 c0                	test   %al,%al
ffffffff8001e923:	0f 85 3b 03 00 00    	jne    ffffffff8001ec64 <ZydisIsRegisterOperandCompatible+0x7aa>
ffffffff8001e929:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001e92e:	e9 69 03 00 00       	jmp    ffffffff8001ec9c <ZydisIsRegisterOperandCompatible+0x7e2>
ffffffff8001e933:	83 7d e8 02          	cmpl   $0x2,-0x18(%rbp)
ffffffff8001e937:	74 16                	je     ffffffff8001e94f <ZydisIsRegisterOperandCompatible+0x495>
ffffffff8001e939:	83 7d e8 03          	cmpl   $0x3,-0x18(%rbp)
ffffffff8001e93d:	74 10                	je     ffffffff8001e94f <ZydisIsRegisterOperandCompatible+0x495>
ffffffff8001e93f:	83 7d e8 04          	cmpl   $0x4,-0x18(%rbp)
ffffffff8001e943:	74 0a                	je     ffffffff8001e94f <ZydisIsRegisterOperandCompatible+0x495>
ffffffff8001e945:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001e94a:	e9 4d 03 00 00       	jmp    ffffffff8001ec9c <ZydisIsRegisterOperandCompatible+0x7e2>
ffffffff8001e94f:	0f b7 45 e6          	movzwl -0x1a(%rbp),%eax
ffffffff8001e953:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
ffffffff8001e957:	89 c6                	mov    %eax,%esi
ffffffff8001e959:	48 89 d7             	mov    %rdx,%rdi
ffffffff8001e95c:	e8 b0 f1 ff ff       	call   ffffffff8001db11 <ZydisCheckAsz>
ffffffff8001e961:	84 c0                	test   %al,%al
ffffffff8001e963:	75 0a                	jne    ffffffff8001e96f <ZydisIsRegisterOperandCompatible+0x4b5>
ffffffff8001e965:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001e96a:	e9 2d 03 00 00       	jmp    ffffffff8001ec9c <ZydisIsRegisterOperandCompatible+0x7e2>
ffffffff8001e96f:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8001e973:	8b 48 04             	mov    0x4(%rax),%ecx
ffffffff8001e976:	8b 55 e8             	mov    -0x18(%rbp),%edx
ffffffff8001e979:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8001e97d:	89 ce                	mov    %ecx,%esi
ffffffff8001e97f:	48 89 c7             	mov    %rax,%rdi
ffffffff8001e982:	e8 ee f1 ff ff       	call   ffffffff8001db75 <ZydisIsRegisterAllowed>
ffffffff8001e987:	84 c0                	test   %al,%al
ffffffff8001e989:	0f 85 d8 02 00 00    	jne    ffffffff8001ec67 <ZydisIsRegisterOperandCompatible+0x7ad>
ffffffff8001e98f:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001e994:	e9 03 03 00 00       	jmp    ffffffff8001ec9c <ZydisIsRegisterOperandCompatible+0x7e2>
ffffffff8001e999:	83 7d e8 05          	cmpl   $0x5,-0x18(%rbp)
ffffffff8001e99d:	0f 84 c7 02 00 00    	je     ffffffff8001ec6a <ZydisIsRegisterOperandCompatible+0x7b0>
ffffffff8001e9a3:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001e9a8:	e9 ef 02 00 00       	jmp    ffffffff8001ec9c <ZydisIsRegisterOperandCompatible+0x7e2>
ffffffff8001e9ad:	83 7d e8 06          	cmpl   $0x6,-0x18(%rbp)
ffffffff8001e9b1:	0f 84 b6 02 00 00    	je     ffffffff8001ec6d <ZydisIsRegisterOperandCompatible+0x7b3>
ffffffff8001e9b7:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001e9bc:	e9 db 02 00 00       	jmp    ffffffff8001ec9c <ZydisIsRegisterOperandCompatible+0x7e2>
ffffffff8001e9c1:	83 7d e8 07          	cmpl   $0x7,-0x18(%rbp)
ffffffff8001e9c5:	74 0a                	je     ffffffff8001e9d1 <ZydisIsRegisterOperandCompatible+0x517>
ffffffff8001e9c7:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001e9cc:	e9 cb 02 00 00       	jmp    ffffffff8001ec9c <ZydisIsRegisterOperandCompatible+0x7e2>
ffffffff8001e9d1:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8001e9d5:	8b 48 04             	mov    0x4(%rax),%ecx
ffffffff8001e9d8:	8b 55 e8             	mov    -0x18(%rbp),%edx
ffffffff8001e9db:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8001e9df:	89 ce                	mov    %ecx,%esi
ffffffff8001e9e1:	48 89 c7             	mov    %rax,%rdi
ffffffff8001e9e4:	e8 8c f1 ff ff       	call   ffffffff8001db75 <ZydisIsRegisterAllowed>
ffffffff8001e9e9:	84 c0                	test   %al,%al
ffffffff8001e9eb:	75 0a                	jne    ffffffff8001e9f7 <ZydisIsRegisterOperandCompatible+0x53d>
ffffffff8001e9ed:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001e9f2:	e9 a5 02 00 00       	jmp    ffffffff8001ec9c <ZydisIsRegisterOperandCompatible+0x7e2>
ffffffff8001e9f7:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff8001e9fb:	0f b6 40 09          	movzbl 0x9(%rax),%eax
ffffffff8001e9ff:	83 e0 3f             	and    $0x3f,%eax
ffffffff8001ea02:	3c 05                	cmp    $0x5,%al
ffffffff8001ea04:	0f 94 c0             	sete   %al
ffffffff8001ea07:	88 45 ef             	mov    %al,-0x11(%rbp)
ffffffff8001ea0a:	e9 74 02 00 00       	jmp    ffffffff8001ec83 <ZydisIsRegisterOperandCompatible+0x7c9>
ffffffff8001ea0f:	83 7d e8 08          	cmpl   $0x8,-0x18(%rbp)
ffffffff8001ea13:	74 0a                	je     ffffffff8001ea1f <ZydisIsRegisterOperandCompatible+0x565>
ffffffff8001ea15:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001ea1a:	e9 7d 02 00 00       	jmp    ffffffff8001ec9c <ZydisIsRegisterOperandCompatible+0x7e2>
ffffffff8001ea1f:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8001ea23:	8b 48 04             	mov    0x4(%rax),%ecx
ffffffff8001ea26:	8b 55 e8             	mov    -0x18(%rbp),%edx
ffffffff8001ea29:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8001ea2d:	89 ce                	mov    %ecx,%esi
ffffffff8001ea2f:	48 89 c7             	mov    %rax,%rdi
ffffffff8001ea32:	e8 3e f1 ff ff       	call   ffffffff8001db75 <ZydisIsRegisterAllowed>
ffffffff8001ea37:	84 c0                	test   %al,%al
ffffffff8001ea39:	75 0a                	jne    ffffffff8001ea45 <ZydisIsRegisterOperandCompatible+0x58b>
ffffffff8001ea3b:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001ea40:	e9 57 02 00 00       	jmp    ffffffff8001ec9c <ZydisIsRegisterOperandCompatible+0x7e2>
ffffffff8001ea45:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff8001ea49:	0f b6 40 09          	movzbl 0x9(%rax),%eax
ffffffff8001ea4d:	83 e0 3f             	and    $0x3f,%eax
ffffffff8001ea50:	3c 05                	cmp    $0x5,%al
ffffffff8001ea52:	0f 94 c0             	sete   %al
ffffffff8001ea55:	88 45 ef             	mov    %al,-0x11(%rbp)
ffffffff8001ea58:	e9 26 02 00 00       	jmp    ffffffff8001ec83 <ZydisIsRegisterOperandCompatible+0x7c9>
ffffffff8001ea5d:	83 7d e8 09          	cmpl   $0x9,-0x18(%rbp)
ffffffff8001ea61:	74 0a                	je     ffffffff8001ea6d <ZydisIsRegisterOperandCompatible+0x5b3>
ffffffff8001ea63:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001ea68:	e9 2f 02 00 00       	jmp    ffffffff8001ec9c <ZydisIsRegisterOperandCompatible+0x7e2>
ffffffff8001ea6d:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8001ea71:	8b 48 04             	mov    0x4(%rax),%ecx
ffffffff8001ea74:	8b 55 e8             	mov    -0x18(%rbp),%edx
ffffffff8001ea77:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8001ea7b:	89 ce                	mov    %ecx,%esi
ffffffff8001ea7d:	48 89 c7             	mov    %rax,%rdi
ffffffff8001ea80:	e8 f0 f0 ff ff       	call   ffffffff8001db75 <ZydisIsRegisterAllowed>
ffffffff8001ea85:	84 c0                	test   %al,%al
ffffffff8001ea87:	0f 85 e3 01 00 00    	jne    ffffffff8001ec70 <ZydisIsRegisterOperandCompatible+0x7b6>
ffffffff8001ea8d:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001ea92:	e9 05 02 00 00       	jmp    ffffffff8001ec9c <ZydisIsRegisterOperandCompatible+0x7e2>
ffffffff8001ea97:	83 7d e8 0a          	cmpl   $0xa,-0x18(%rbp)
ffffffff8001ea9b:	0f 84 d2 01 00 00    	je     ffffffff8001ec73 <ZydisIsRegisterOperandCompatible+0x7b9>
ffffffff8001eaa1:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001eaa6:	e9 f1 01 00 00       	jmp    ffffffff8001ec9c <ZydisIsRegisterOperandCompatible+0x7e2>
ffffffff8001eaab:	83 7d e8 13          	cmpl   $0x13,-0x18(%rbp)
ffffffff8001eaaf:	0f 84 c1 01 00 00    	je     ffffffff8001ec76 <ZydisIsRegisterOperandCompatible+0x7bc>
ffffffff8001eab5:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001eaba:	e9 dd 01 00 00       	jmp    ffffffff8001ec9c <ZydisIsRegisterOperandCompatible+0x7e2>
ffffffff8001eabf:	83 7d e8 0d          	cmpl   $0xd,-0x18(%rbp)
ffffffff8001eac3:	74 0a                	je     ffffffff8001eacf <ZydisIsRegisterOperandCompatible+0x615>
ffffffff8001eac5:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001eaca:	e9 cd 01 00 00       	jmp    ffffffff8001ec9c <ZydisIsRegisterOperandCompatible+0x7e2>
ffffffff8001eacf:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff8001ead3:	0f b6 40 01          	movzbl 0x1(%rax),%eax
ffffffff8001ead7:	83 e0 0f             	and    $0xf,%eax
ffffffff8001eada:	0f b6 c0             	movzbl %al,%eax
ffffffff8001eadd:	83 e0 0a             	and    $0xa,%eax
ffffffff8001eae0:	85 c0                	test   %eax,%eax
ffffffff8001eae2:	0f 84 91 01 00 00    	je     ffffffff8001ec79 <ZydisIsRegisterOperandCompatible+0x7bf>
ffffffff8001eae8:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8001eaec:	8b 40 04             	mov    0x4(%rax),%eax
ffffffff8001eaef:	3d c7 00 00 00       	cmp    $0xc7,%eax
ffffffff8001eaf4:	0f 85 7f 01 00 00    	jne    ffffffff8001ec79 <ZydisIsRegisterOperandCompatible+0x7bf>
ffffffff8001eafa:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001eaff:	e9 98 01 00 00       	jmp    ffffffff8001ec9c <ZydisIsRegisterOperandCompatible+0x7e2>
ffffffff8001eb04:	83 7d e8 10          	cmpl   $0x10,-0x18(%rbp)
ffffffff8001eb08:	74 0a                	je     ffffffff8001eb14 <ZydisIsRegisterOperandCompatible+0x65a>
ffffffff8001eb0a:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001eb0f:	e9 88 01 00 00       	jmp    ffffffff8001ec9c <ZydisIsRegisterOperandCompatible+0x7e2>
ffffffff8001eb14:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8001eb18:	8b 40 04             	mov    0x4(%rax),%eax
ffffffff8001eb1b:	89 c7                	mov    %eax,%edi
ffffffff8001eb1d:	e8 3f 6c 00 00       	call   ffffffff80025761 <ZydisRegisterGetId>
ffffffff8001eb22:	88 45 d7             	mov    %al,-0x29(%rbp)
ffffffff8001eb25:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8001eb29:	48 8b 00             	mov    (%rax),%rax
ffffffff8001eb2c:	8b 00                	mov    (%rax),%eax
ffffffff8001eb2e:	85 c0                	test   %eax,%eax
ffffffff8001eb30:	74 10                	je     ffffffff8001eb42 <ZydisIsRegisterOperandCompatible+0x688>
ffffffff8001eb32:	80 7d d7 08          	cmpb   $0x8,-0x29(%rbp)
ffffffff8001eb36:	75 0a                	jne    ffffffff8001eb42 <ZydisIsRegisterOperandCompatible+0x688>
ffffffff8001eb38:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001eb3d:	e9 5a 01 00 00       	jmp    ffffffff8001ec9c <ZydisIsRegisterOperandCompatible+0x7e2>
ffffffff8001eb42:	0f be 45 d7          	movsbl -0x29(%rbp),%eax
ffffffff8001eb46:	48 98                	cltq   
ffffffff8001eb48:	48 8d 15 f1 f4 01 00 	lea    0x1f4f1(%rip),%rdx        # ffffffff8003e040 <cr_lookup.3>
ffffffff8001eb4f:	0f b6 04 10          	movzbl (%rax,%rdx,1),%eax
ffffffff8001eb53:	84 c0                	test   %al,%al
ffffffff8001eb55:	0f 85 21 01 00 00    	jne    ffffffff8001ec7c <ZydisIsRegisterOperandCompatible+0x7c2>
ffffffff8001eb5b:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001eb60:	e9 37 01 00 00       	jmp    ffffffff8001ec9c <ZydisIsRegisterOperandCompatible+0x7e2>
ffffffff8001eb65:	83 7d e8 11          	cmpl   $0x11,-0x18(%rbp)
ffffffff8001eb69:	74 0a                	je     ffffffff8001eb75 <ZydisIsRegisterOperandCompatible+0x6bb>
ffffffff8001eb6b:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001eb70:	e9 27 01 00 00       	jmp    ffffffff8001ec9c <ZydisIsRegisterOperandCompatible+0x7e2>
ffffffff8001eb75:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8001eb79:	8b 40 04             	mov    0x4(%rax),%eax
ffffffff8001eb7c:	3d ef 00 00 00       	cmp    $0xef,%eax
ffffffff8001eb81:	0f 86 f8 00 00 00    	jbe    ffffffff8001ec7f <ZydisIsRegisterOperandCompatible+0x7c5>
ffffffff8001eb87:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001eb8c:	e9 0b 01 00 00       	jmp    ffffffff8001ec9c <ZydisIsRegisterOperandCompatible+0x7e2>
ffffffff8001eb91:	83 7d e8 12          	cmpl   $0x12,-0x18(%rbp)
ffffffff8001eb95:	74 0a                	je     ffffffff8001eba1 <ZydisIsRegisterOperandCompatible+0x6e7>
ffffffff8001eb97:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001eb9c:	e9 fb 00 00 00       	jmp    ffffffff8001ec9c <ZydisIsRegisterOperandCompatible+0x7e2>
ffffffff8001eba1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8001eba5:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff8001eba9:	0f b6 40 06          	movzbl 0x6(%rax),%eax
ffffffff8001ebad:	83 e0 07             	and    $0x7,%eax
ffffffff8001ebb0:	3c 04                	cmp    $0x4,%al
ffffffff8001ebb2:	0f 85 ca 00 00 00    	jne    ffffffff8001ec82 <ZydisIsRegisterOperandCompatible+0x7c8>
ffffffff8001ebb8:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff8001ebbc:	0f b6 40 09          	movzbl 0x9(%rax),%eax
ffffffff8001ebc0:	83 e0 3f             	and    $0x3f,%eax
ffffffff8001ebc3:	3c 06                	cmp    $0x6,%al
ffffffff8001ebc5:	0f 85 b7 00 00 00    	jne    ffffffff8001ec82 <ZydisIsRegisterOperandCompatible+0x7c8>
ffffffff8001ebcb:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8001ebcf:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff8001ebd3:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
ffffffff8001ebd7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8001ebdb:	0f b6 40 0e          	movzbl 0xe(%rax),%eax
ffffffff8001ebdf:	83 e0 0c             	and    $0xc,%eax
ffffffff8001ebe2:	84 c0                	test   %al,%al
ffffffff8001ebe4:	74 0d                	je     ffffffff8001ebf3 <ZydisIsRegisterOperandCompatible+0x739>
ffffffff8001ebe6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8001ebea:	0f b6 40 0e          	movzbl 0xe(%rax),%eax
ffffffff8001ebee:	83 e0 0c             	and    $0xc,%eax
ffffffff8001ebf1:	3c 0c                	cmp    $0xc,%al
ffffffff8001ebf3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8001ebf7:	0f b6 40 0e          	movzbl 0xe(%rax),%eax
ffffffff8001ebfb:	83 e0 0c             	and    $0xc,%eax
ffffffff8001ebfe:	3c 08                	cmp    $0x8,%al
ffffffff8001ec00:	75 18                	jne    ffffffff8001ec1a <ZydisIsRegisterOperandCompatible+0x760>
ffffffff8001ec02:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8001ec06:	8b 40 04             	mov    0x4(%rax),%eax
ffffffff8001ec09:	3d f8 00 00 00       	cmp    $0xf8,%eax
ffffffff8001ec0e:	75 0a                	jne    ffffffff8001ec1a <ZydisIsRegisterOperandCompatible+0x760>
ffffffff8001ec10:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001ec15:	e9 82 00 00 00       	jmp    ffffffff8001ec9c <ZydisIsRegisterOperandCompatible+0x7e2>
ffffffff8001ec1a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8001ec1e:	0f b6 40 0e          	movzbl 0xe(%rax),%eax
ffffffff8001ec22:	83 e0 0c             	and    $0xc,%eax
ffffffff8001ec25:	3c 04                	cmp    $0x4,%al
ffffffff8001ec27:	75 59                	jne    ffffffff8001ec82 <ZydisIsRegisterOperandCompatible+0x7c8>
ffffffff8001ec29:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8001ec2d:	48 8b 00             	mov    (%rax),%rax
ffffffff8001ec30:	0f b6 80 79 01 00 00 	movzbl 0x179(%rax),%eax
ffffffff8001ec37:	84 c0                	test   %al,%al
ffffffff8001ec39:	74 47                	je     ffffffff8001ec82 <ZydisIsRegisterOperandCompatible+0x7c8>
ffffffff8001ec3b:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8001ec3f:	8b 40 04             	mov    0x4(%rax),%eax
ffffffff8001ec42:	3d f8 00 00 00       	cmp    $0xf8,%eax
ffffffff8001ec47:	75 39                	jne    ffffffff8001ec82 <ZydisIsRegisterOperandCompatible+0x7c8>
ffffffff8001ec49:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001ec4e:	eb 4c                	jmp    ffffffff8001ec9c <ZydisIsRegisterOperandCompatible+0x7e2>
ffffffff8001ec50:	eb fe                	jmp    ffffffff8001ec50 <ZydisIsRegisterOperandCompatible+0x796>
ffffffff8001ec52:	90                   	nop
ffffffff8001ec53:	eb 2e                	jmp    ffffffff8001ec83 <ZydisIsRegisterOperandCompatible+0x7c9>
ffffffff8001ec55:	90                   	nop
ffffffff8001ec56:	eb 2b                	jmp    ffffffff8001ec83 <ZydisIsRegisterOperandCompatible+0x7c9>
ffffffff8001ec58:	90                   	nop
ffffffff8001ec59:	eb 28                	jmp    ffffffff8001ec83 <ZydisIsRegisterOperandCompatible+0x7c9>
ffffffff8001ec5b:	90                   	nop
ffffffff8001ec5c:	eb 25                	jmp    ffffffff8001ec83 <ZydisIsRegisterOperandCompatible+0x7c9>
ffffffff8001ec5e:	90                   	nop
ffffffff8001ec5f:	eb 22                	jmp    ffffffff8001ec83 <ZydisIsRegisterOperandCompatible+0x7c9>
ffffffff8001ec61:	90                   	nop
ffffffff8001ec62:	eb 1f                	jmp    ffffffff8001ec83 <ZydisIsRegisterOperandCompatible+0x7c9>
ffffffff8001ec64:	90                   	nop
ffffffff8001ec65:	eb 1c                	jmp    ffffffff8001ec83 <ZydisIsRegisterOperandCompatible+0x7c9>
ffffffff8001ec67:	90                   	nop
ffffffff8001ec68:	eb 19                	jmp    ffffffff8001ec83 <ZydisIsRegisterOperandCompatible+0x7c9>
ffffffff8001ec6a:	90                   	nop
ffffffff8001ec6b:	eb 16                	jmp    ffffffff8001ec83 <ZydisIsRegisterOperandCompatible+0x7c9>
ffffffff8001ec6d:	90                   	nop
ffffffff8001ec6e:	eb 13                	jmp    ffffffff8001ec83 <ZydisIsRegisterOperandCompatible+0x7c9>
ffffffff8001ec70:	90                   	nop
ffffffff8001ec71:	eb 10                	jmp    ffffffff8001ec83 <ZydisIsRegisterOperandCompatible+0x7c9>
ffffffff8001ec73:	90                   	nop
ffffffff8001ec74:	eb 0d                	jmp    ffffffff8001ec83 <ZydisIsRegisterOperandCompatible+0x7c9>
ffffffff8001ec76:	90                   	nop
ffffffff8001ec77:	eb 0a                	jmp    ffffffff8001ec83 <ZydisIsRegisterOperandCompatible+0x7c9>
ffffffff8001ec79:	90                   	nop
ffffffff8001ec7a:	eb 07                	jmp    ffffffff8001ec83 <ZydisIsRegisterOperandCompatible+0x7c9>
ffffffff8001ec7c:	90                   	nop
ffffffff8001ec7d:	eb 04                	jmp    ffffffff8001ec83 <ZydisIsRegisterOperandCompatible+0x7c9>
ffffffff8001ec7f:	90                   	nop
ffffffff8001ec80:	eb 01                	jmp    ffffffff8001ec83 <ZydisIsRegisterOperandCompatible+0x7c9>
ffffffff8001ec82:	90                   	nop
ffffffff8001ec83:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8001ec87:	0f b6 40 08          	movzbl 0x8(%rax),%eax
ffffffff8001ec8b:	38 45 ef             	cmp    %al,-0x11(%rbp)
ffffffff8001ec8e:	74 07                	je     ffffffff8001ec97 <ZydisIsRegisterOperandCompatible+0x7dd>
ffffffff8001ec90:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001ec95:	eb 05                	jmp    ffffffff8001ec9c <ZydisIsRegisterOperandCompatible+0x7e2>
ffffffff8001ec97:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8001ec9c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
ffffffff8001eca0:	c9                   	leave  
ffffffff8001eca1:	c3                   	ret    

ffffffff8001eca2 <ZydisIsMemoryOperandCompatible>:
ffffffff8001eca2:	f3 0f 1e fa          	endbr64 
ffffffff8001eca6:	55                   	push   %rbp
ffffffff8001eca7:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001ecaa:	53                   	push   %rbx
ffffffff8001ecab:	48 83 ec 78          	sub    $0x78,%rsp
ffffffff8001ecaf:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
ffffffff8001ecb3:	48 89 75 90          	mov    %rsi,-0x70(%rbp)
ffffffff8001ecb7:	48 89 55 88          	mov    %rdx,-0x78(%rbp)
ffffffff8001ecbb:	48 8b 45 88          	mov    -0x78(%rbp),%rax
ffffffff8001ecbf:	0f b6 00             	movzbl (%rax),%eax
ffffffff8001ecc2:	83 e0 3f             	and    $0x3f,%eax
ffffffff8001ecc5:	0f b6 c0             	movzbl %al,%eax
ffffffff8001ecc8:	83 f8 20             	cmp    $0x20,%eax
ffffffff8001eccb:	74 33                	je     ffffffff8001ed00 <ZydisIsMemoryOperandCompatible+0x5e>
ffffffff8001eccd:	83 f8 20             	cmp    $0x20,%eax
ffffffff8001ecd0:	0f 8f 69 0c 00 00    	jg     ffffffff8001f93f <ZydisIsMemoryOperandCompatible+0xc9d>
ffffffff8001ecd6:	83 f8 1f             	cmp    $0x1f,%eax
ffffffff8001ecd9:	0f 84 2c 0b 00 00    	je     ffffffff8001f80b <ZydisIsMemoryOperandCompatible+0xb69>
ffffffff8001ecdf:	83 f8 1f             	cmp    $0x1f,%eax
ffffffff8001ece2:	0f 8f 57 0c 00 00    	jg     ffffffff8001f93f <ZydisIsMemoryOperandCompatible+0xc9d>
ffffffff8001ece8:	83 f8 1a             	cmp    $0x1a,%eax
ffffffff8001eceb:	7f 0a                	jg     ffffffff8001ecf7 <ZydisIsMemoryOperandCompatible+0x55>
ffffffff8001eced:	83 f8 17             	cmp    $0x17,%eax
ffffffff8001ecf0:	7d 0e                	jge    ffffffff8001ed00 <ZydisIsMemoryOperandCompatible+0x5e>
ffffffff8001ecf2:	e9 48 0c 00 00       	jmp    ffffffff8001f93f <ZydisIsMemoryOperandCompatible+0xc9d>
ffffffff8001ecf7:	83 f8 1e             	cmp    $0x1e,%eax
ffffffff8001ecfa:	0f 85 3f 0c 00 00    	jne    ffffffff8001f93f <ZydisIsMemoryOperandCompatible+0xc9d>
ffffffff8001ed00:	48 8b 45 88          	mov    -0x78(%rbp),%rax
ffffffff8001ed04:	0f b6 00             	movzbl (%rax),%eax
ffffffff8001ed07:	83 e0 3f             	and    $0x3f,%eax
ffffffff8001ed0a:	3c 20                	cmp    $0x20,%al
ffffffff8001ed0c:	75 16                	jne    ffffffff8001ed24 <ZydisIsMemoryOperandCompatible+0x82>
ffffffff8001ed0e:	48 8b 45 90          	mov    -0x70(%rbp),%rax
ffffffff8001ed12:	0f b6 40 18          	movzbl 0x18(%rax),%eax
ffffffff8001ed16:	84 c0                	test   %al,%al
ffffffff8001ed18:	74 0a                	je     ffffffff8001ed24 <ZydisIsMemoryOperandCompatible+0x82>
ffffffff8001ed1a:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001ed1f:	e9 23 0c 00 00       	jmp    ffffffff8001f947 <ZydisIsMemoryOperandCompatible+0xca5>
ffffffff8001ed24:	48 8b 45 90          	mov    -0x70(%rbp),%rax
ffffffff8001ed28:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff8001ed2c:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
ffffffff8001ed30:	c6 45 ef 00          	movb   $0x0,-0x11(%rbp)
ffffffff8001ed34:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
ffffffff8001ed39:	0f 84 ce 00 00 00    	je     ffffffff8001ee0d <ZydisIsMemoryOperandCompatible+0x16b>
ffffffff8001ed3f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8001ed43:	48 89 c7             	mov    %rax,%rdi
ffffffff8001ed46:	e8 ff e9 ff ff       	call   ffffffff8001d74a <ZydisGetSignedImmSize>
ffffffff8001ed4b:	88 45 ef             	mov    %al,-0x11(%rbp)
ffffffff8001ed4e:	80 7d ef 20          	cmpb   $0x20,-0x11(%rbp)
ffffffff8001ed52:	76 0a                	jbe    ffffffff8001ed5e <ZydisIsMemoryOperandCompatible+0xbc>
ffffffff8001ed54:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001ed59:	e9 e9 0b 00 00       	jmp    ffffffff8001f947 <ZydisIsMemoryOperandCompatible+0xca5>
ffffffff8001ed5e:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff8001ed62:	48 8b 00             	mov    (%rax),%rax
ffffffff8001ed65:	8b 00                	mov    (%rax),%eax
ffffffff8001ed67:	89 c7                	mov    %eax,%edi
ffffffff8001ed69:	e8 ef e6 ff ff       	call   ffffffff8001d45d <ZydisGetMachineModeWidth>
ffffffff8001ed6e:	3c 10                	cmp    $0x10,%al
ffffffff8001ed70:	75 22                	jne    ffffffff8001ed94 <ZydisIsMemoryOperandCompatible+0xf2>
ffffffff8001ed72:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8001ed76:	66 85 c0             	test   %ax,%ax
ffffffff8001ed79:	75 06                	jne    ffffffff8001ed81 <ZydisIsMemoryOperandCompatible+0xdf>
ffffffff8001ed7b:	c6 45 ef 00          	movb   $0x0,-0x11(%rbp)
ffffffff8001ed7f:	eb 13                	jmp    ffffffff8001ed94 <ZydisIsMemoryOperandCompatible+0xf2>
ffffffff8001ed81:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8001ed85:	48 0f bf c0          	movswq %ax,%rax
ffffffff8001ed89:	48 89 c7             	mov    %rax,%rdi
ffffffff8001ed8c:	e8 b9 e9 ff ff       	call   ffffffff8001d74a <ZydisGetSignedImmSize>
ffffffff8001ed91:	88 45 ef             	mov    %al,-0x11(%rbp)
ffffffff8001ed94:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff8001ed98:	48 89 c7             	mov    %rax,%rdi
ffffffff8001ed9b:	e8 b5 f6 ff ff       	call   ffffffff8001e455 <ZydisGetCompDispScale>
ffffffff8001eda0:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
ffffffff8001eda4:	88 42 2c             	mov    %al,0x2c(%rdx)
ffffffff8001eda7:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff8001edab:	0f b6 40 2c          	movzbl 0x2c(%rax),%eax
ffffffff8001edaf:	84 c0                	test   %al,%al
ffffffff8001edb1:	74 5a                	je     ffffffff8001ee0d <ZydisIsMemoryOperandCompatible+0x16b>
ffffffff8001edb3:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff8001edb7:	0f b6 40 2c          	movzbl 0x2c(%rax),%eax
ffffffff8001edbb:	0f b6 c0             	movzbl %al,%eax
ffffffff8001edbe:	ba 01 00 00 00       	mov    $0x1,%edx
ffffffff8001edc3:	89 c1                	mov    %eax,%ecx
ffffffff8001edc5:	d3 e2                	shl    %cl,%edx
ffffffff8001edc7:	89 d0                	mov    %edx,%eax
ffffffff8001edc9:	83 e8 01             	sub    $0x1,%eax
ffffffff8001edcc:	48 98                	cltq   
ffffffff8001edce:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
ffffffff8001edd2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8001edd6:	48 23 45 c8          	and    -0x38(%rbp),%rax
ffffffff8001edda:	48 85 c0             	test   %rax,%rax
ffffffff8001eddd:	75 24                	jne    ffffffff8001ee03 <ZydisIsMemoryOperandCompatible+0x161>
ffffffff8001eddf:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff8001ede3:	0f b6 40 2c          	movzbl 0x2c(%rax),%eax
ffffffff8001ede7:	0f b6 c0             	movzbl %al,%eax
ffffffff8001edea:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
ffffffff8001edee:	89 c1                	mov    %eax,%ecx
ffffffff8001edf0:	48 d3 fa             	sar    %cl,%rdx
ffffffff8001edf3:	48 89 d0             	mov    %rdx,%rax
ffffffff8001edf6:	48 89 c7             	mov    %rax,%rdi
ffffffff8001edf9:	e8 4c e9 ff ff       	call   ffffffff8001d74a <ZydisGetSignedImmSize>
ffffffff8001edfe:	88 45 ef             	mov    %al,-0x11(%rbp)
ffffffff8001ee01:	eb 0a                	jmp    ffffffff8001ee0d <ZydisIsMemoryOperandCompatible+0x16b>
ffffffff8001ee03:	80 7d ef 08          	cmpb   $0x8,-0x11(%rbp)
ffffffff8001ee07:	75 04                	jne    ffffffff8001ee0d <ZydisIsMemoryOperandCompatible+0x16b>
ffffffff8001ee09:	c6 45 ef 10          	movb   $0x10,-0x11(%rbp)
ffffffff8001ee0d:	48 8b 45 88          	mov    -0x78(%rbp),%rax
ffffffff8001ee11:	0f b6 00             	movzbl (%rax),%eax
ffffffff8001ee14:	83 e0 3f             	and    $0x3f,%eax
ffffffff8001ee17:	3c 1e                	cmp    $0x1e,%al
ffffffff8001ee19:	0f 84 69 04 00 00    	je     ffffffff8001f288 <ZydisIsMemoryOperandCompatible+0x5e6>
ffffffff8001ee1f:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff8001ee23:	0f b6 40 28          	movzbl 0x28(%rax),%eax
ffffffff8001ee27:	84 c0                	test   %al,%al
ffffffff8001ee29:	74 38                	je     ffffffff8001ee63 <ZydisIsMemoryOperandCompatible+0x1c1>
ffffffff8001ee2b:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff8001ee2f:	0f b6 40 28          	movzbl 0x28(%rax),%eax
ffffffff8001ee33:	c0 e8 05             	shr    $0x5,%al
ffffffff8001ee36:	88 45 b6             	mov    %al,-0x4a(%rbp)
ffffffff8001ee39:	0f b6 45 b6          	movzbl -0x4a(%rbp),%eax
ffffffff8001ee3d:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
ffffffff8001ee41:	48 98                	cltq   
ffffffff8001ee43:	0f b7 54 42 02       	movzwl 0x2(%rdx,%rax,2),%edx
ffffffff8001ee48:	48 8b 45 90          	mov    -0x70(%rbp),%rax
ffffffff8001ee4c:	0f b7 40 28          	movzwl 0x28(%rax),%eax
ffffffff8001ee50:	66 39 c2             	cmp    %ax,%dx
ffffffff8001ee53:	0f 84 af 04 00 00    	je     ffffffff8001f308 <ZydisIsMemoryOperandCompatible+0x666>
ffffffff8001ee59:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001ee5e:	e9 e4 0a 00 00       	jmp    ffffffff8001f947 <ZydisIsMemoryOperandCompatible+0xca5>
ffffffff8001ee63:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff8001ee67:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff8001ee6b:	0f b6 40 08          	movzbl 0x8(%rax),%eax
ffffffff8001ee6f:	83 e0 18             	and    $0x18,%eax
ffffffff8001ee72:	84 c0                	test   %al,%al
ffffffff8001ee74:	75 17                	jne    ffffffff8001ee8d <ZydisIsMemoryOperandCompatible+0x1eb>
ffffffff8001ee76:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff8001ee7a:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff8001ee7e:	0f b6 40 06          	movzbl 0x6(%rax),%eax
ffffffff8001ee82:	83 e0 07             	and    $0x7,%eax
ffffffff8001ee85:	3c 05                	cmp    $0x5,%al
ffffffff8001ee87:	0f 85 82 03 00 00    	jne    ffffffff8001f20f <ZydisIsMemoryOperandCompatible+0x56d>
ffffffff8001ee8d:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff8001ee91:	48 8b 00             	mov    (%rax),%rax
ffffffff8001ee94:	8b 00                	mov    (%rax),%eax
ffffffff8001ee96:	89 c7                	mov    %eax,%edi
ffffffff8001ee98:	e8 c0 e5 ff ff       	call   ffffffff8001d45d <ZydisGetMachineModeWidth>
ffffffff8001ee9d:	c0 e8 05             	shr    $0x5,%al
ffffffff8001eea0:	88 45 ee             	mov    %al,-0x12(%rbp)
ffffffff8001eea3:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff8001eea7:	0f b6 40 34          	movzbl 0x34(%rax),%eax
ffffffff8001eeab:	84 c0                	test   %al,%al
ffffffff8001eead:	74 0a                	je     ffffffff8001eeb9 <ZydisIsMemoryOperandCompatible+0x217>
ffffffff8001eeaf:	80 7d ee 02          	cmpb   $0x2,-0x12(%rbp)
ffffffff8001eeb3:	75 04                	jne    ffffffff8001eeb9 <ZydisIsMemoryOperandCompatible+0x217>
ffffffff8001eeb5:	c6 45 ee 01          	movb   $0x1,-0x12(%rbp)
ffffffff8001eeb9:	0f b6 45 ee          	movzbl -0x12(%rbp),%eax
ffffffff8001eebd:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
ffffffff8001eec1:	48 98                	cltq   
ffffffff8001eec3:	0f b7 44 42 02       	movzwl 0x2(%rdx,%rax,2),%eax
ffffffff8001eec8:	66 89 45 ec          	mov    %ax,-0x14(%rbp)
ffffffff8001eecc:	66 83 7d ec 00       	cmpw   $0x0,-0x14(%rbp)
ffffffff8001eed1:	0f 85 1c 03 00 00    	jne    ffffffff8001f1f3 <ZydisIsMemoryOperandCompatible+0x551>
ffffffff8001eed7:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff8001eedb:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff8001eedf:	0f b6 40 06          	movzbl 0x6(%rax),%eax
ffffffff8001eee3:	83 e0 07             	and    $0x7,%eax
ffffffff8001eee6:	3c 03                	cmp    $0x3,%al
ffffffff8001eee8:	0f 84 05 03 00 00    	je     ffffffff8001f1f3 <ZydisIsMemoryOperandCompatible+0x551>
ffffffff8001eeee:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff8001eef2:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff8001eef6:	0f b6 40 06          	movzbl 0x6(%rax),%eax
ffffffff8001eefa:	83 e0 07             	and    $0x7,%eax
ffffffff8001eefd:	3c 04                	cmp    $0x4,%al
ffffffff8001eeff:	74 11                	je     ffffffff8001ef12 <ZydisIsMemoryOperandCompatible+0x270>
ffffffff8001ef01:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff8001ef05:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff8001ef09:	0f b6 40 06          	movzbl 0x6(%rax),%eax
ffffffff8001ef0d:	83 e0 07             	and    $0x7,%eax
ffffffff8001ef10:	3c 05                	cmp    $0x5,%al
ffffffff8001ef12:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff8001ef16:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff8001ef1a:	0f b6 40 08          	movzbl 0x8(%rax),%eax
ffffffff8001ef1e:	c0 e8 03             	shr    $0x3,%al
ffffffff8001ef21:	83 e0 03             	and    $0x3,%eax
ffffffff8001ef24:	0f b6 c0             	movzbl %al,%eax
ffffffff8001ef27:	83 f8 03             	cmp    $0x3,%eax
ffffffff8001ef2a:	74 28                	je     ffffffff8001ef54 <ZydisIsMemoryOperandCompatible+0x2b2>
ffffffff8001ef2c:	83 f8 03             	cmp    $0x3,%eax
ffffffff8001ef2f:	7f 2b                	jg     ffffffff8001ef5c <ZydisIsMemoryOperandCompatible+0x2ba>
ffffffff8001ef31:	83 f8 02             	cmp    $0x2,%eax
ffffffff8001ef34:	74 16                	je     ffffffff8001ef4c <ZydisIsMemoryOperandCompatible+0x2aa>
ffffffff8001ef36:	83 f8 02             	cmp    $0x2,%eax
ffffffff8001ef39:	7f 21                	jg     ffffffff8001ef5c <ZydisIsMemoryOperandCompatible+0x2ba>
ffffffff8001ef3b:	85 c0                	test   %eax,%eax
ffffffff8001ef3d:	74 15                	je     ffffffff8001ef54 <ZydisIsMemoryOperandCompatible+0x2b2>
ffffffff8001ef3f:	83 f8 01             	cmp    $0x1,%eax
ffffffff8001ef42:	75 18                	jne    ffffffff8001ef5c <ZydisIsMemoryOperandCompatible+0x2ba>
ffffffff8001ef44:	66 c7 45 ec 10 00    	movw   $0x10,-0x14(%rbp)
ffffffff8001ef4a:	eb 12                	jmp    ffffffff8001ef5e <ZydisIsMemoryOperandCompatible+0x2bc>
ffffffff8001ef4c:	66 c7 45 ec 20 00    	movw   $0x20,-0x14(%rbp)
ffffffff8001ef52:	eb 0a                	jmp    ffffffff8001ef5e <ZydisIsMemoryOperandCompatible+0x2bc>
ffffffff8001ef54:	66 c7 45 ec 40 00    	movw   $0x40,-0x14(%rbp)
ffffffff8001ef5a:	eb 02                	jmp    ffffffff8001ef5e <ZydisIsMemoryOperandCompatible+0x2bc>
ffffffff8001ef5c:	eb fe                	jmp    ffffffff8001ef5c <ZydisIsMemoryOperandCompatible+0x2ba>
ffffffff8001ef5e:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff8001ef62:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff8001ef66:	0f b6 40 06          	movzbl 0x6(%rax),%eax
ffffffff8001ef6a:	83 e0 07             	and    $0x7,%eax
ffffffff8001ef6d:	3c 04                	cmp    $0x4,%al
ffffffff8001ef6f:	0f 85 b0 00 00 00    	jne    ffffffff8001f025 <ZydisIsMemoryOperandCompatible+0x383>
ffffffff8001ef75:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff8001ef79:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff8001ef7d:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
ffffffff8001ef81:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff8001ef85:	0f b6 40 0d          	movzbl 0xd(%rax),%eax
ffffffff8001ef89:	c0 e8 05             	shr    $0x5,%al
ffffffff8001ef8c:	0f b6 c0             	movzbl %al,%eax
ffffffff8001ef8f:	48 98                	cltq   
ffffffff8001ef91:	48 8d 15 b8 f0 01 00 	lea    0x1f0b8(%rip),%rdx        # ffffffff8003e050 <element_sizes.2>
ffffffff8001ef98:	0f b6 04 10          	movzbl (%rax,%rdx,1),%eax
ffffffff8001ef9c:	88 45 b7             	mov    %al,-0x49(%rbp)
ffffffff8001ef9f:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff8001efa3:	48 8b 00             	mov    (%rax),%rax
ffffffff8001efa6:	8b 80 70 01 00 00    	mov    0x170(%rax),%eax
ffffffff8001efac:	85 c0                	test   %eax,%eax
ffffffff8001efae:	75 1f                	jne    ffffffff8001efcf <ZydisIsMemoryOperandCompatible+0x32d>
ffffffff8001efb0:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff8001efb4:	0f b6 50 0e          	movzbl 0xe(%rax),%edx
ffffffff8001efb8:	c0 ea 07             	shr    $0x7,%dl
ffffffff8001efbb:	0f b6 d2             	movzbl %dl,%edx
ffffffff8001efbe:	0f b6 40 0f          	movzbl 0xf(%rax),%eax
ffffffff8001efc2:	83 e0 07             	and    $0x7,%eax
ffffffff8001efc5:	48 01 c0             	add    %rax,%rax
ffffffff8001efc8:	48 09 d0             	or     %rdx,%rax
ffffffff8001efcb:	84 c0                	test   %al,%al
ffffffff8001efcd:	74 0d                	je     ffffffff8001efdc <ZydisIsMemoryOperandCompatible+0x33a>
ffffffff8001efcf:	0f b6 45 b7          	movzbl -0x49(%rbp),%eax
ffffffff8001efd3:	66 89 45 ec          	mov    %ax,-0x14(%rbp)
ffffffff8001efd7:	e9 17 02 00 00       	jmp    ffffffff8001f1f3 <ZydisIsMemoryOperandCompatible+0x551>
ffffffff8001efdc:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff8001efe0:	0f b6 40 0d          	movzbl 0xd(%rax),%eax
ffffffff8001efe4:	83 e0 1f             	and    $0x1f,%eax
ffffffff8001efe7:	0f b6 c0             	movzbl %al,%eax
ffffffff8001efea:	83 f8 10             	cmp    $0x10,%eax
ffffffff8001efed:	74 23                	je     ffffffff8001f012 <ZydisIsMemoryOperandCompatible+0x370>
ffffffff8001efef:	83 f8 10             	cmp    $0x10,%eax
ffffffff8001eff2:	7f 2f                	jg     ffffffff8001f023 <ZydisIsMemoryOperandCompatible+0x381>
ffffffff8001eff4:	83 f8 01             	cmp    $0x1,%eax
ffffffff8001eff7:	0f 84 f2 01 00 00    	je     ffffffff8001f1ef <ZydisIsMemoryOperandCompatible+0x54d>
ffffffff8001effd:	83 f8 02             	cmp    $0x2,%eax
ffffffff8001f000:	75 21                	jne    ffffffff8001f023 <ZydisIsMemoryOperandCompatible+0x381>
ffffffff8001f002:	0f b7 45 ec          	movzwl -0x14(%rbp),%eax
ffffffff8001f006:	66 d1 e8             	shr    %ax
ffffffff8001f009:	66 89 45 ec          	mov    %ax,-0x14(%rbp)
ffffffff8001f00d:	e9 e1 01 00 00       	jmp    ffffffff8001f1f3 <ZydisIsMemoryOperandCompatible+0x551>
ffffffff8001f012:	0f b7 45 ec          	movzwl -0x14(%rbp),%eax
ffffffff8001f016:	66 c1 e8 02          	shr    $0x2,%ax
ffffffff8001f01a:	66 89 45 ec          	mov    %ax,-0x14(%rbp)
ffffffff8001f01e:	e9 d0 01 00 00       	jmp    ffffffff8001f1f3 <ZydisIsMemoryOperandCompatible+0x551>
ffffffff8001f023:	eb fe                	jmp    ffffffff8001f023 <ZydisIsMemoryOperandCompatible+0x381>
ffffffff8001f025:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff8001f029:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff8001f02d:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
ffffffff8001f031:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff8001f035:	48 8b 00             	mov    (%rax),%rax
ffffffff8001f038:	8b 80 80 01 00 00    	mov    0x180(%rax),%eax
ffffffff8001f03e:	83 f8 05             	cmp    $0x5,%eax
ffffffff8001f041:	0f 87 e8 00 00 00    	ja     ffffffff8001f12f <ZydisIsMemoryOperandCompatible+0x48d>
ffffffff8001f047:	83 f8 04             	cmp    $0x4,%eax
ffffffff8001f04a:	0f 83 c3 00 00 00    	jae    ffffffff8001f113 <ZydisIsMemoryOperandCompatible+0x471>
ffffffff8001f050:	83 f8 03             	cmp    $0x3,%eax
ffffffff8001f053:	0f 87 d6 00 00 00    	ja     ffffffff8001f12f <ZydisIsMemoryOperandCompatible+0x48d>
ffffffff8001f059:	83 f8 02             	cmp    $0x2,%eax
ffffffff8001f05c:	0f 83 bf 00 00 00    	jae    ffffffff8001f121 <ZydisIsMemoryOperandCompatible+0x47f>
ffffffff8001f062:	85 c0                	test   %eax,%eax
ffffffff8001f064:	74 0e                	je     ffffffff8001f074 <ZydisIsMemoryOperandCompatible+0x3d2>
ffffffff8001f066:	83 f8 01             	cmp    $0x1,%eax
ffffffff8001f069:	0f 84 a4 00 00 00    	je     ffffffff8001f113 <ZydisIsMemoryOperandCompatible+0x471>
ffffffff8001f06f:	e9 bb 00 00 00       	jmp    ffffffff8001f12f <ZydisIsMemoryOperandCompatible+0x48d>
ffffffff8001f074:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8001f078:	0f b6 50 0c          	movzbl 0xc(%rax),%edx
ffffffff8001f07c:	c0 ea 06             	shr    $0x6,%dl
ffffffff8001f07f:	0f b6 d2             	movzbl %dl,%edx
ffffffff8001f082:	0f b6 40 0d          	movzbl 0xd(%rax),%eax
ffffffff8001f086:	83 e0 07             	and    $0x7,%eax
ffffffff8001f089:	48 c1 e0 02          	shl    $0x2,%rax
ffffffff8001f08d:	48 09 d0             	or     %rdx,%rax
ffffffff8001f090:	0f b6 c0             	movzbl %al,%eax
ffffffff8001f093:	89 c2                	mov    %eax,%edx
ffffffff8001f095:	83 fa 19             	cmp    $0x19,%edx
ffffffff8001f098:	0f 97 c0             	seta   %al
ffffffff8001f09b:	84 c0                	test   %al,%al
ffffffff8001f09d:	75 70                	jne    ffffffff8001f10f <ZydisIsMemoryOperandCompatible+0x46d>
ffffffff8001f09f:	89 d0                	mov    %edx,%eax
ffffffff8001f0a1:	ba 01 00 00 00       	mov    $0x1,%edx
ffffffff8001f0a6:	89 c1                	mov    %eax,%ecx
ffffffff8001f0a8:	48 d3 e2             	shl    %cl,%rdx
ffffffff8001f0ab:	48 89 d0             	mov    %rdx,%rax
ffffffff8001f0ae:	48 89 c2             	mov    %rax,%rdx
ffffffff8001f0b1:	81 e2 00 54 55 01    	and    $0x1555400,%edx
ffffffff8001f0b7:	48 85 d2             	test   %rdx,%rdx
ffffffff8001f0ba:	0f 95 c2             	setne  %dl
ffffffff8001f0bd:	84 d2                	test   %dl,%dl
ffffffff8001f0bf:	75 24                	jne    ffffffff8001f0e5 <ZydisIsMemoryOperandCompatible+0x443>
ffffffff8001f0c1:	48 89 c2             	mov    %rax,%rdx
ffffffff8001f0c4:	81 e2 00 20 aa 02    	and    $0x2aa2000,%edx
ffffffff8001f0ca:	48 85 d2             	test   %rdx,%rdx
ffffffff8001f0cd:	0f 95 c2             	setne  %dl
ffffffff8001f0d0:	84 d2                	test   %dl,%dl
ffffffff8001f0d2:	75 1f                	jne    ffffffff8001f0f3 <ZydisIsMemoryOperandCompatible+0x451>
ffffffff8001f0d4:	25 00 88 00 00       	and    $0x8800,%eax
ffffffff8001f0d9:	48 85 c0             	test   %rax,%rax
ffffffff8001f0dc:	0f 95 c0             	setne  %al
ffffffff8001f0df:	84 c0                	test   %al,%al
ffffffff8001f0e1:	75 1e                	jne    ffffffff8001f101 <ZydisIsMemoryOperandCompatible+0x45f>
ffffffff8001f0e3:	eb 2a                	jmp    ffffffff8001f10f <ZydisIsMemoryOperandCompatible+0x46d>
ffffffff8001f0e5:	66 c7 45 ec 40 00    	movw   $0x40,-0x14(%rbp)
ffffffff8001f0eb:	66 c7 45 ea 04 00    	movw   $0x4,-0x16(%rbp)
ffffffff8001f0f1:	eb 1e                	jmp    ffffffff8001f111 <ZydisIsMemoryOperandCompatible+0x46f>
ffffffff8001f0f3:	66 c7 45 ec 40 00    	movw   $0x40,-0x14(%rbp)
ffffffff8001f0f9:	66 c7 45 ea 08 00    	movw   $0x8,-0x16(%rbp)
ffffffff8001f0ff:	eb 10                	jmp    ffffffff8001f111 <ZydisIsMemoryOperandCompatible+0x46f>
ffffffff8001f101:	66 c7 45 ec 20 00    	movw   $0x20,-0x14(%rbp)
ffffffff8001f107:	66 c7 45 ea 04 00    	movw   $0x4,-0x16(%rbp)
ffffffff8001f10d:	eb 02                	jmp    ffffffff8001f111 <ZydisIsMemoryOperandCompatible+0x46f>
ffffffff8001f10f:	eb fe                	jmp    ffffffff8001f10f <ZydisIsMemoryOperandCompatible+0x46d>
ffffffff8001f111:	eb 1e                	jmp    ffffffff8001f131 <ZydisIsMemoryOperandCompatible+0x48f>
ffffffff8001f113:	66 c7 45 ec 20 00    	movw   $0x20,-0x14(%rbp)
ffffffff8001f119:	66 c7 45 ea 02 00    	movw   $0x2,-0x16(%rbp)
ffffffff8001f11f:	eb 10                	jmp    ffffffff8001f131 <ZydisIsMemoryOperandCompatible+0x48f>
ffffffff8001f121:	66 c7 45 ec 10 00    	movw   $0x10,-0x14(%rbp)
ffffffff8001f127:	66 c7 45 ea 01 00    	movw   $0x1,-0x16(%rbp)
ffffffff8001f12d:	eb 02                	jmp    ffffffff8001f131 <ZydisIsMemoryOperandCompatible+0x48f>
ffffffff8001f12f:	eb fe                	jmp    ffffffff8001f12f <ZydisIsMemoryOperandCompatible+0x48d>
ffffffff8001f131:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8001f135:	0f b6 50 0d          	movzbl 0xd(%rax),%edx
ffffffff8001f139:	c0 ea 06             	shr    $0x6,%dl
ffffffff8001f13c:	0f b6 d2             	movzbl %dl,%edx
ffffffff8001f13f:	0f b6 40 0e          	movzbl 0xe(%rax),%eax
ffffffff8001f143:	83 e0 01             	and    $0x1,%eax
ffffffff8001f146:	48 c1 e0 02          	shl    $0x2,%rax
ffffffff8001f14a:	48 09 d0             	or     %rdx,%rax
ffffffff8001f14d:	84 c0                	test   %al,%al
ffffffff8001f14f:	74 0f                	je     ffffffff8001f160 <ZydisIsMemoryOperandCompatible+0x4be>
ffffffff8001f151:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff8001f155:	48 8b 00             	mov    (%rax),%rax
ffffffff8001f158:	8b 80 7c 01 00 00    	mov    0x17c(%rax),%eax
ffffffff8001f15e:	85 c0                	test   %eax,%eax
ffffffff8001f160:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8001f164:	0f b6 50 0d          	movzbl 0xd(%rax),%edx
ffffffff8001f168:	c0 ea 06             	shr    $0x6,%dl
ffffffff8001f16b:	0f b6 d2             	movzbl %dl,%edx
ffffffff8001f16e:	0f b6 40 0e          	movzbl 0xe(%rax),%eax
ffffffff8001f172:	83 e0 01             	and    $0x1,%eax
ffffffff8001f175:	48 c1 e0 02          	shl    $0x2,%rax
ffffffff8001f179:	48 09 d0             	or     %rdx,%rax
ffffffff8001f17c:	0f b6 c0             	movzbl %al,%eax
ffffffff8001f17f:	83 f8 04             	cmp    $0x4,%eax
ffffffff8001f182:	7f 2c                	jg     ffffffff8001f1b0 <ZydisIsMemoryOperandCompatible+0x50e>
ffffffff8001f184:	83 f8 03             	cmp    $0x3,%eax
ffffffff8001f187:	7d 1a                	jge    ffffffff8001f1a3 <ZydisIsMemoryOperandCompatible+0x501>
ffffffff8001f189:	85 c0                	test   %eax,%eax
ffffffff8001f18b:	74 25                	je     ffffffff8001f1b2 <ZydisIsMemoryOperandCompatible+0x510>
ffffffff8001f18d:	85 c0                	test   %eax,%eax
ffffffff8001f18f:	78 1f                	js     ffffffff8001f1b0 <ZydisIsMemoryOperandCompatible+0x50e>
ffffffff8001f191:	83 e8 01             	sub    $0x1,%eax
ffffffff8001f194:	83 f8 01             	cmp    $0x1,%eax
ffffffff8001f197:	77 17                	ja     ffffffff8001f1b0 <ZydisIsMemoryOperandCompatible+0x50e>
ffffffff8001f199:	0f b7 45 ea          	movzwl -0x16(%rbp),%eax
ffffffff8001f19d:	66 89 45 ec          	mov    %ax,-0x14(%rbp)
ffffffff8001f1a1:	eb 10                	jmp    ffffffff8001f1b3 <ZydisIsMemoryOperandCompatible+0x511>
ffffffff8001f1a3:	0f b7 45 ea          	movzwl -0x16(%rbp),%eax
ffffffff8001f1a7:	c1 e0 02             	shl    $0x2,%eax
ffffffff8001f1aa:	66 89 45 ec          	mov    %ax,-0x14(%rbp)
ffffffff8001f1ae:	eb 03                	jmp    ffffffff8001f1b3 <ZydisIsMemoryOperandCompatible+0x511>
ffffffff8001f1b0:	eb fe                	jmp    ffffffff8001f1b0 <ZydisIsMemoryOperandCompatible+0x50e>
ffffffff8001f1b2:	90                   	nop
ffffffff8001f1b3:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff8001f1b7:	48 8b 00             	mov    (%rax),%rax
ffffffff8001f1ba:	8b 80 7c 01 00 00    	mov    0x17c(%rax),%eax
ffffffff8001f1c0:	83 f8 0b             	cmp    $0xb,%eax
ffffffff8001f1c3:	77 28                	ja     ffffffff8001f1ed <ZydisIsMemoryOperandCompatible+0x54b>
ffffffff8001f1c5:	83 f8 0a             	cmp    $0xa,%eax
ffffffff8001f1c8:	73 16                	jae    ffffffff8001f1e0 <ZydisIsMemoryOperandCompatible+0x53e>
ffffffff8001f1ca:	85 c0                	test   %eax,%eax
ffffffff8001f1cc:	74 24                	je     ffffffff8001f1f2 <ZydisIsMemoryOperandCompatible+0x550>
ffffffff8001f1ce:	83 e8 03             	sub    $0x3,%eax
ffffffff8001f1d1:	83 f8 01             	cmp    $0x1,%eax
ffffffff8001f1d4:	77 17                	ja     ffffffff8001f1ed <ZydisIsMemoryOperandCompatible+0x54b>
ffffffff8001f1d6:	0f b7 45 ea          	movzwl -0x16(%rbp),%eax
ffffffff8001f1da:	66 89 45 ec          	mov    %ax,-0x14(%rbp)
ffffffff8001f1de:	eb 13                	jmp    ffffffff8001f1f3 <ZydisIsMemoryOperandCompatible+0x551>
ffffffff8001f1e0:	0f b7 45 ea          	movzwl -0x16(%rbp),%eax
ffffffff8001f1e4:	c1 e0 02             	shl    $0x2,%eax
ffffffff8001f1e7:	66 89 45 ec          	mov    %ax,-0x14(%rbp)
ffffffff8001f1eb:	eb 06                	jmp    ffffffff8001f1f3 <ZydisIsMemoryOperandCompatible+0x551>
ffffffff8001f1ed:	eb fe                	jmp    ffffffff8001f1ed <ZydisIsMemoryOperandCompatible+0x54b>
ffffffff8001f1ef:	90                   	nop
ffffffff8001f1f0:	eb 01                	jmp    ffffffff8001f1f3 <ZydisIsMemoryOperandCompatible+0x551>
ffffffff8001f1f2:	90                   	nop
ffffffff8001f1f3:	48 8b 45 90          	mov    -0x70(%rbp),%rax
ffffffff8001f1f7:	0f b7 40 28          	movzwl 0x28(%rax),%eax
ffffffff8001f1fb:	66 39 45 ec          	cmp    %ax,-0x14(%rbp)
ffffffff8001f1ff:	0f 84 02 01 00 00    	je     ffffffff8001f307 <ZydisIsMemoryOperandCompatible+0x665>
ffffffff8001f205:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001f20a:	e9 38 07 00 00       	jmp    ffffffff8001f947 <ZydisIsMemoryOperandCompatible+0xca5>
ffffffff8001f20f:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff8001f213:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff8001f217:	0f b6 40 08          	movzbl 0x8(%rax),%eax
ffffffff8001f21b:	83 e0 04             	and    $0x4,%eax
ffffffff8001f21e:	84 c0                	test   %al,%al
ffffffff8001f220:	74 0d                	je     ffffffff8001f22f <ZydisIsMemoryOperandCompatible+0x58d>
ffffffff8001f222:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff8001f226:	c6 40 28 40          	movb   $0x40,0x28(%rax)
ffffffff8001f22a:	e9 d9 00 00 00       	jmp    ffffffff8001f308 <ZydisIsMemoryOperandCompatible+0x666>
ffffffff8001f22f:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff8001f233:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff8001f237:	0f b6 40 08          	movzbl 0x8(%rax),%eax
ffffffff8001f23b:	83 e0 18             	and    $0x18,%eax
ffffffff8001f23e:	84 c0                	test   %al,%al
ffffffff8001f240:	75 44                	jne    ffffffff8001f286 <ZydisIsMemoryOperandCompatible+0x5e4>
ffffffff8001f242:	48 8b 45 90          	mov    -0x70(%rbp),%rax
ffffffff8001f246:	0f b7 40 28          	movzwl 0x28(%rax),%eax
ffffffff8001f24a:	0f b7 c0             	movzwl %ax,%eax
ffffffff8001f24d:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
ffffffff8001f251:	48 8d 72 02          	lea    0x2(%rdx),%rsi
ffffffff8001f255:	48 8b 7d 98          	mov    -0x68(%rbp),%rdi
ffffffff8001f259:	b9 01 00 00 00       	mov    $0x1,%ecx
ffffffff8001f25e:	89 c2                	mov    %eax,%edx
ffffffff8001f260:	e8 99 e2 ff ff       	call   ffffffff8001d4fe <ZydisGetOperandSizeFromElementSize>
ffffffff8001f265:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
ffffffff8001f269:	88 42 28             	mov    %al,0x28(%rdx)
ffffffff8001f26c:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff8001f270:	0f b6 40 28          	movzbl 0x28(%rax),%eax
ffffffff8001f274:	84 c0                	test   %al,%al
ffffffff8001f276:	0f 85 8c 00 00 00    	jne    ffffffff8001f308 <ZydisIsMemoryOperandCompatible+0x666>
ffffffff8001f27c:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001f281:	e9 c1 06 00 00       	jmp    ffffffff8001f947 <ZydisIsMemoryOperandCompatible+0xca5>
ffffffff8001f286:	eb fe                	jmp    ffffffff8001f286 <ZydisIsMemoryOperandCompatible+0x5e4>
ffffffff8001f288:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff8001f28c:	0f b6 40 29          	movzbl 0x29(%rax),%eax
ffffffff8001f290:	84 c0                	test   %al,%al
ffffffff8001f292:	74 22                	je     ffffffff8001f2b6 <ZydisIsMemoryOperandCompatible+0x614>
ffffffff8001f294:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff8001f298:	0f b6 40 29          	movzbl 0x29(%rax),%eax
ffffffff8001f29c:	0f b6 c0             	movzbl %al,%eax
ffffffff8001f29f:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
ffffffff8001f2a3:	0f b7 52 28          	movzwl 0x28(%rdx),%edx
ffffffff8001f2a7:	66 39 d0             	cmp    %dx,%ax
ffffffff8001f2aa:	74 5c                	je     ffffffff8001f308 <ZydisIsMemoryOperandCompatible+0x666>
ffffffff8001f2ac:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001f2b1:	e9 91 06 00 00       	jmp    ffffffff8001f947 <ZydisIsMemoryOperandCompatible+0xca5>
ffffffff8001f2b6:	48 8b 45 90          	mov    -0x70(%rbp),%rax
ffffffff8001f2ba:	0f b7 40 28          	movzwl 0x28(%rax),%eax
ffffffff8001f2be:	0f b7 c0             	movzwl %ax,%eax
ffffffff8001f2c1:	89 c2                	mov    %eax,%edx
ffffffff8001f2c3:	83 fa 08             	cmp    $0x8,%edx
ffffffff8001f2c6:	0f 97 c0             	seta   %al
ffffffff8001f2c9:	84 c0                	test   %al,%al
ffffffff8001f2cb:	75 30                	jne    ffffffff8001f2fd <ZydisIsMemoryOperandCompatible+0x65b>
ffffffff8001f2cd:	89 d0                	mov    %edx,%eax
ffffffff8001f2cf:	ba 14 01 00 00       	mov    $0x114,%edx
ffffffff8001f2d4:	89 c1                	mov    %eax,%ecx
ffffffff8001f2d6:	48 d3 ea             	shr    %cl,%rdx
ffffffff8001f2d9:	48 89 d0             	mov    %rdx,%rax
ffffffff8001f2dc:	83 e0 01             	and    $0x1,%eax
ffffffff8001f2df:	48 85 c0             	test   %rax,%rax
ffffffff8001f2e2:	0f 95 c0             	setne  %al
ffffffff8001f2e5:	84 c0                	test   %al,%al
ffffffff8001f2e7:	74 14                	je     ffffffff8001f2fd <ZydisIsMemoryOperandCompatible+0x65b>
ffffffff8001f2e9:	48 8b 45 90          	mov    -0x70(%rbp),%rax
ffffffff8001f2ed:	0f b7 40 28          	movzwl 0x28(%rax),%eax
ffffffff8001f2f1:	c1 e0 03             	shl    $0x3,%eax
ffffffff8001f2f4:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
ffffffff8001f2f8:	88 42 29             	mov    %al,0x29(%rdx)
ffffffff8001f2fb:	eb 0b                	jmp    ffffffff8001f308 <ZydisIsMemoryOperandCompatible+0x666>
ffffffff8001f2fd:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001f302:	e9 40 06 00 00       	jmp    ffffffff8001f947 <ZydisIsMemoryOperandCompatible+0xca5>
ffffffff8001f307:	90                   	nop
ffffffff8001f308:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
ffffffff8001f30f:	c6 45 e3 01          	movb   $0x1,-0x1d(%rbp)
ffffffff8001f313:	48 8b 45 88          	mov    -0x78(%rbp),%rax
ffffffff8001f317:	0f b6 00             	movzbl (%rax),%eax
ffffffff8001f31a:	83 e0 3f             	and    $0x3f,%eax
ffffffff8001f31d:	0f b6 c0             	movzbl %al,%eax
ffffffff8001f320:	83 f8 1a             	cmp    $0x1a,%eax
ffffffff8001f323:	74 23                	je     ffffffff8001f348 <ZydisIsMemoryOperandCompatible+0x6a6>
ffffffff8001f325:	83 f8 1a             	cmp    $0x1a,%eax
ffffffff8001f328:	7f 27                	jg     ffffffff8001f351 <ZydisIsMemoryOperandCompatible+0x6af>
ffffffff8001f32a:	83 f8 18             	cmp    $0x18,%eax
ffffffff8001f32d:	74 07                	je     ffffffff8001f336 <ZydisIsMemoryOperandCompatible+0x694>
ffffffff8001f32f:	83 f8 19             	cmp    $0x19,%eax
ffffffff8001f332:	74 0b                	je     ffffffff8001f33f <ZydisIsMemoryOperandCompatible+0x69d>
ffffffff8001f334:	eb 1b                	jmp    ffffffff8001f351 <ZydisIsMemoryOperandCompatible+0x6af>
ffffffff8001f336:	c7 45 e4 07 00 00 00 	movl   $0x7,-0x1c(%rbp)
ffffffff8001f33d:	eb 17                	jmp    ffffffff8001f356 <ZydisIsMemoryOperandCompatible+0x6b4>
ffffffff8001f33f:	c7 45 e4 08 00 00 00 	movl   $0x8,-0x1c(%rbp)
ffffffff8001f346:	eb 0e                	jmp    ffffffff8001f356 <ZydisIsMemoryOperandCompatible+0x6b4>
ffffffff8001f348:	c7 45 e4 09 00 00 00 	movl   $0x9,-0x1c(%rbp)
ffffffff8001f34f:	eb 05                	jmp    ffffffff8001f356 <ZydisIsMemoryOperandCompatible+0x6b4>
ffffffff8001f351:	c6 45 e3 00          	movb   $0x0,-0x1d(%rbp)
ffffffff8001f355:	90                   	nop
ffffffff8001f356:	48 8b 45 90          	mov    -0x70(%rbp),%rax
ffffffff8001f35a:	8b 40 10             	mov    0x10(%rax),%eax
ffffffff8001f35d:	3d c5 00 00 00       	cmp    $0xc5,%eax
ffffffff8001f362:	74 0e                	je     ffffffff8001f372 <ZydisIsMemoryOperandCompatible+0x6d0>
ffffffff8001f364:	48 8b 45 90          	mov    -0x70(%rbp),%rax
ffffffff8001f368:	8b 40 10             	mov    0x10(%rax),%eax
ffffffff8001f36b:	3d c4 00 00 00       	cmp    $0xc4,%eax
ffffffff8001f370:	75 07                	jne    ffffffff8001f379 <ZydisIsMemoryOperandCompatible+0x6d7>
ffffffff8001f372:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8001f377:	eb 05                	jmp    ffffffff8001f37e <ZydisIsMemoryOperandCompatible+0x6dc>
ffffffff8001f379:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001f37e:	88 45 b5             	mov    %al,-0x4b(%rbp)
ffffffff8001f381:	80 7d b5 00          	cmpb   $0x0,-0x4b(%rbp)
ffffffff8001f385:	74 42                	je     ffffffff8001f3c9 <ZydisIsMemoryOperandCompatible+0x727>
ffffffff8001f387:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff8001f38b:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff8001f38f:	0f b6 40 0a          	movzbl 0xa(%rax),%eax
ffffffff8001f393:	c0 e8 02             	shr    $0x2,%al
ffffffff8001f396:	83 e0 1f             	and    $0x1f,%eax
ffffffff8001f399:	c0 e8 03             	shr    $0x3,%al
ffffffff8001f39c:	83 e0 01             	and    $0x1,%eax
ffffffff8001f39f:	88 45 b4             	mov    %al,-0x4c(%rbp)
ffffffff8001f3a2:	80 7d b4 00          	cmpb   $0x0,-0x4c(%rbp)
ffffffff8001f3a6:	75 17                	jne    ffffffff8001f3bf <ZydisIsMemoryOperandCompatible+0x71d>
ffffffff8001f3a8:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff8001f3ac:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff8001f3b0:	0f b6 40 05          	movzbl 0x5(%rax),%eax
ffffffff8001f3b4:	0f b6 c0             	movzbl %al,%eax
ffffffff8001f3b7:	83 e0 07             	and    $0x7,%eax
ffffffff8001f3ba:	83 f8 04             	cmp    $0x4,%eax
ffffffff8001f3bd:	75 0a                	jne    ffffffff8001f3c9 <ZydisIsMemoryOperandCompatible+0x727>
ffffffff8001f3bf:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001f3c4:	e9 7e 05 00 00       	jmp    ffffffff8001f947 <ZydisIsMemoryOperandCompatible+0xca5>
ffffffff8001f3c9:	48 8b 45 90          	mov    -0x70(%rbp),%rax
ffffffff8001f3cd:	8b 40 10             	mov    0x10(%rax),%eax
ffffffff8001f3d0:	89 c7                	mov    %eax,%edi
ffffffff8001f3d2:	e8 c9 63 00 00       	call   ffffffff800257a0 <ZydisRegisterGetClass>
ffffffff8001f3d7:	89 45 b0             	mov    %eax,-0x50(%rbp)
ffffffff8001f3da:	83 7d b0 00          	cmpl   $0x0,-0x50(%rbp)
ffffffff8001f3de:	75 15                	jne    ffffffff8001f3f5 <ZydisIsMemoryOperandCompatible+0x753>
ffffffff8001f3e0:	48 8b 45 90          	mov    -0x70(%rbp),%rax
ffffffff8001f3e4:	8b 40 10             	mov    0x10(%rax),%eax
ffffffff8001f3e7:	85 c0                	test   %eax,%eax
ffffffff8001f3e9:	74 0a                	je     ffffffff8001f3f5 <ZydisIsMemoryOperandCompatible+0x753>
ffffffff8001f3eb:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001f3f0:	e9 52 05 00 00       	jmp    ffffffff8001f947 <ZydisIsMemoryOperandCompatible+0xca5>
ffffffff8001f3f5:	48 8b 45 90          	mov    -0x70(%rbp),%rax
ffffffff8001f3f9:	8b 40 14             	mov    0x14(%rax),%eax
ffffffff8001f3fc:	89 c7                	mov    %eax,%edi
ffffffff8001f3fe:	e8 9d 63 00 00       	call   ffffffff800257a0 <ZydisRegisterGetClass>
ffffffff8001f403:	89 45 ac             	mov    %eax,-0x54(%rbp)
ffffffff8001f406:	83 7d ac 00          	cmpl   $0x0,-0x54(%rbp)
ffffffff8001f40a:	75 15                	jne    ffffffff8001f421 <ZydisIsMemoryOperandCompatible+0x77f>
ffffffff8001f40c:	48 8b 45 90          	mov    -0x70(%rbp),%rax
ffffffff8001f410:	8b 40 14             	mov    0x14(%rax),%eax
ffffffff8001f413:	85 c0                	test   %eax,%eax
ffffffff8001f415:	74 0a                	je     ffffffff8001f421 <ZydisIsMemoryOperandCompatible+0x77f>
ffffffff8001f417:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001f41c:	e9 26 05 00 00       	jmp    ffffffff8001f947 <ZydisIsMemoryOperandCompatible+0xca5>
ffffffff8001f421:	80 7d e3 00          	cmpb   $0x0,-0x1d(%rbp)
ffffffff8001f425:	0f 84 c3 00 00 00    	je     ffffffff8001f4ee <ZydisIsMemoryOperandCompatible+0x84c>
ffffffff8001f42b:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff8001f42f:	48 8b 00             	mov    (%rax),%rax
ffffffff8001f432:	8b 00                	mov    (%rax),%eax
ffffffff8001f434:	89 c7                	mov    %eax,%edi
ffffffff8001f436:	e8 22 e0 ff ff       	call   ffffffff8001d45d <ZydisGetMachineModeWidth>
ffffffff8001f43b:	88 45 ab             	mov    %al,-0x55(%rbp)
ffffffff8001f43e:	48 8b 45 90          	mov    -0x70(%rbp),%rax
ffffffff8001f442:	8b 40 14             	mov    0x14(%rax),%eax
ffffffff8001f445:	89 c7                	mov    %eax,%edi
ffffffff8001f447:	e8 15 63 00 00       	call   ffffffff80025761 <ZydisRegisterGetId>
ffffffff8001f44c:	88 45 aa             	mov    %al,-0x56(%rbp)
ffffffff8001f44f:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff8001f453:	48 8b 00             	mov    (%rax),%rax
ffffffff8001f456:	8b 00                	mov    (%rax),%eax
ffffffff8001f458:	85 c0                	test   %eax,%eax
ffffffff8001f45a:	75 06                	jne    ffffffff8001f462 <ZydisIsMemoryOperandCompatible+0x7c0>
ffffffff8001f45c:	83 7d b0 04          	cmpl   $0x4,-0x50(%rbp)
ffffffff8001f460:	74 16                	je     ffffffff8001f478 <ZydisIsMemoryOperandCompatible+0x7d6>
ffffffff8001f462:	83 7d b0 03          	cmpl   $0x3,-0x50(%rbp)
ffffffff8001f466:	74 10                	je     ffffffff8001f478 <ZydisIsMemoryOperandCompatible+0x7d6>
ffffffff8001f468:	83 7d b0 00          	cmpl   $0x0,-0x50(%rbp)
ffffffff8001f46c:	74 0a                	je     ffffffff8001f478 <ZydisIsMemoryOperandCompatible+0x7d6>
ffffffff8001f46e:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001f473:	e9 cf 04 00 00       	jmp    ffffffff8001f947 <ZydisIsMemoryOperandCompatible+0xca5>
ffffffff8001f478:	83 7d b0 03          	cmpl   $0x3,-0x50(%rbp)
ffffffff8001f47c:	75 22                	jne    ffffffff8001f4a0 <ZydisIsMemoryOperandCompatible+0x7fe>
ffffffff8001f47e:	80 7d ab 40          	cmpb   $0x40,-0x55(%rbp)
ffffffff8001f482:	74 1c                	je     ffffffff8001f4a0 <ZydisIsMemoryOperandCompatible+0x7fe>
ffffffff8001f484:	48 8b 45 90          	mov    -0x70(%rbp),%rax
ffffffff8001f488:	8b 40 10             	mov    0x10(%rax),%eax
ffffffff8001f48b:	89 c7                	mov    %eax,%edi
ffffffff8001f48d:	e8 cf 62 00 00       	call   ffffffff80025761 <ZydisRegisterGetId>
ffffffff8001f492:	3c 07                	cmp    $0x7,%al
ffffffff8001f494:	7e 0a                	jle    ffffffff8001f4a0 <ZydisIsMemoryOperandCompatible+0x7fe>
ffffffff8001f496:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001f49b:	e9 a7 04 00 00       	jmp    ffffffff8001f947 <ZydisIsMemoryOperandCompatible+0xca5>
ffffffff8001f4a0:	c6 45 e2 07          	movb   $0x7,-0x1e(%rbp)
ffffffff8001f4a4:	80 7d ab 40          	cmpb   $0x40,-0x55(%rbp)
ffffffff8001f4a8:	75 22                	jne    ffffffff8001f4cc <ZydisIsMemoryOperandCompatible+0x82a>
ffffffff8001f4aa:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff8001f4ae:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff8001f4b2:	0f b6 40 06          	movzbl 0x6(%rax),%eax
ffffffff8001f4b6:	83 e0 07             	and    $0x7,%eax
ffffffff8001f4b9:	3c 03                	cmp    $0x3,%al
ffffffff8001f4bb:	74 07                	je     ffffffff8001f4c4 <ZydisIsMemoryOperandCompatible+0x822>
ffffffff8001f4bd:	b8 1f 00 00 00       	mov    $0x1f,%eax
ffffffff8001f4c2:	eb 05                	jmp    ffffffff8001f4c9 <ZydisIsMemoryOperandCompatible+0x827>
ffffffff8001f4c4:	b8 0f 00 00 00       	mov    $0xf,%eax
ffffffff8001f4c9:	88 45 e2             	mov    %al,-0x1e(%rbp)
ffffffff8001f4cc:	8b 45 ac             	mov    -0x54(%rbp),%eax
ffffffff8001f4cf:	3b 45 e4             	cmp    -0x1c(%rbp),%eax
ffffffff8001f4d2:	75 10                	jne    ffffffff8001f4e4 <ZydisIsMemoryOperandCompatible+0x842>
ffffffff8001f4d4:	0f be 55 aa          	movsbl -0x56(%rbp),%edx
ffffffff8001f4d8:	0f b6 45 e2          	movzbl -0x1e(%rbp),%eax
ffffffff8001f4dc:	39 c2                	cmp    %eax,%edx
ffffffff8001f4de:	0f 8e a9 00 00 00    	jle    ffffffff8001f58d <ZydisIsMemoryOperandCompatible+0x8eb>
ffffffff8001f4e4:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001f4e9:	e9 59 04 00 00       	jmp    ffffffff8001f947 <ZydisIsMemoryOperandCompatible+0xca5>
ffffffff8001f4ee:	48 8b 45 90          	mov    -0x70(%rbp),%rax
ffffffff8001f4f2:	8b 50 10             	mov    0x10(%rax),%edx
ffffffff8001f4f5:	8b 4d b0             	mov    -0x50(%rbp),%ecx
ffffffff8001f4f8:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff8001f4fc:	89 ce                	mov    %ecx,%esi
ffffffff8001f4fe:	48 89 c7             	mov    %rax,%rdi
ffffffff8001f501:	e8 57 e8 ff ff       	call   ffffffff8001dd5d <ZydisIsValidAddressingClass>
ffffffff8001f506:	84 c0                	test   %al,%al
ffffffff8001f508:	75 1d                	jne    ffffffff8001f527 <ZydisIsMemoryOperandCompatible+0x885>
ffffffff8001f50a:	80 7d b5 00          	cmpb   $0x0,-0x4b(%rbp)
ffffffff8001f50e:	74 0d                	je     ffffffff8001f51d <ZydisIsMemoryOperandCompatible+0x87b>
ffffffff8001f510:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff8001f514:	48 8b 00             	mov    (%rax),%rax
ffffffff8001f517:	8b 00                	mov    (%rax),%eax
ffffffff8001f519:	85 c0                	test   %eax,%eax
ffffffff8001f51b:	74 0a                	je     ffffffff8001f527 <ZydisIsMemoryOperandCompatible+0x885>
ffffffff8001f51d:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001f522:	e9 20 04 00 00       	jmp    ffffffff8001f947 <ZydisIsMemoryOperandCompatible+0xca5>
ffffffff8001f527:	48 8b 45 90          	mov    -0x70(%rbp),%rax
ffffffff8001f52b:	8b 50 14             	mov    0x14(%rax),%edx
ffffffff8001f52e:	8b 4d ac             	mov    -0x54(%rbp),%ecx
ffffffff8001f531:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff8001f535:	89 ce                	mov    %ecx,%esi
ffffffff8001f537:	48 89 c7             	mov    %rax,%rdi
ffffffff8001f53a:	e8 1e e8 ff ff       	call   ffffffff8001dd5d <ZydisIsValidAddressingClass>
ffffffff8001f53f:	84 c0                	test   %al,%al
ffffffff8001f541:	75 0a                	jne    ffffffff8001f54d <ZydisIsMemoryOperandCompatible+0x8ab>
ffffffff8001f543:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001f548:	e9 fa 03 00 00       	jmp    ffffffff8001f947 <ZydisIsMemoryOperandCompatible+0xca5>
ffffffff8001f54d:	83 7d b0 00          	cmpl   $0x0,-0x50(%rbp)
ffffffff8001f551:	74 18                	je     ffffffff8001f56b <ZydisIsMemoryOperandCompatible+0x8c9>
ffffffff8001f553:	83 7d ac 00          	cmpl   $0x0,-0x54(%rbp)
ffffffff8001f557:	74 12                	je     ffffffff8001f56b <ZydisIsMemoryOperandCompatible+0x8c9>
ffffffff8001f559:	8b 45 b0             	mov    -0x50(%rbp),%eax
ffffffff8001f55c:	3b 45 ac             	cmp    -0x54(%rbp),%eax
ffffffff8001f55f:	74 0a                	je     ffffffff8001f56b <ZydisIsMemoryOperandCompatible+0x8c9>
ffffffff8001f561:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001f566:	e9 dc 03 00 00       	jmp    ffffffff8001f947 <ZydisIsMemoryOperandCompatible+0xca5>
ffffffff8001f56b:	48 8b 45 90          	mov    -0x70(%rbp),%rax
ffffffff8001f56f:	8b 40 14             	mov    0x14(%rax),%eax
ffffffff8001f572:	83 f8 29             	cmp    $0x29,%eax
ffffffff8001f575:	74 0c                	je     ffffffff8001f583 <ZydisIsMemoryOperandCompatible+0x8e1>
ffffffff8001f577:	48 8b 45 90          	mov    -0x70(%rbp),%rax
ffffffff8001f57b:	8b 40 14             	mov    0x14(%rax),%eax
ffffffff8001f57e:	83 f8 39             	cmp    $0x39,%eax
ffffffff8001f581:	75 0a                	jne    ffffffff8001f58d <ZydisIsMemoryOperandCompatible+0x8eb>
ffffffff8001f583:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001f588:	e9 ba 03 00 00       	jmp    ffffffff8001f947 <ZydisIsMemoryOperandCompatible+0xca5>
ffffffff8001f58d:	83 7d ac 00          	cmpl   $0x0,-0x54(%rbp)
ffffffff8001f591:	74 24                	je     ffffffff8001f5b7 <ZydisIsMemoryOperandCompatible+0x915>
ffffffff8001f593:	48 8b 45 90          	mov    -0x70(%rbp),%rax
ffffffff8001f597:	0f b6 40 18          	movzbl 0x18(%rax),%eax
ffffffff8001f59b:	84 c0                	test   %al,%al
ffffffff8001f59d:	75 18                	jne    ffffffff8001f5b7 <ZydisIsMemoryOperandCompatible+0x915>
ffffffff8001f59f:	48 8b 45 88          	mov    -0x78(%rbp),%rax
ffffffff8001f5a3:	0f b6 00             	movzbl (%rax),%eax
ffffffff8001f5a6:	83 e0 3f             	and    $0x3f,%eax
ffffffff8001f5a9:	3c 20                	cmp    $0x20,%al
ffffffff8001f5ab:	74 0a                	je     ffffffff8001f5b7 <ZydisIsMemoryOperandCompatible+0x915>
ffffffff8001f5ad:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001f5b2:	e9 90 03 00 00       	jmp    ffffffff8001f947 <ZydisIsMemoryOperandCompatible+0xca5>
ffffffff8001f5b7:	83 7d ac 00          	cmpl   $0x0,-0x54(%rbp)
ffffffff8001f5bb:	75 16                	jne    ffffffff8001f5d3 <ZydisIsMemoryOperandCompatible+0x931>
ffffffff8001f5bd:	48 8b 45 90          	mov    -0x70(%rbp),%rax
ffffffff8001f5c1:	0f b6 40 18          	movzbl 0x18(%rax),%eax
ffffffff8001f5c5:	84 c0                	test   %al,%al
ffffffff8001f5c7:	74 0a                	je     ffffffff8001f5d3 <ZydisIsMemoryOperandCompatible+0x931>
ffffffff8001f5c9:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001f5ce:	e9 74 03 00 00       	jmp    ffffffff8001f947 <ZydisIsMemoryOperandCompatible+0xca5>
ffffffff8001f5d3:	c6 45 e1 00          	movb   $0x0,-0x1f(%rbp)
ffffffff8001f5d7:	c6 45 e0 00          	movb   $0x0,-0x20(%rbp)
ffffffff8001f5db:	83 7d b0 00          	cmpl   $0x0,-0x50(%rbp)
ffffffff8001f5df:	74 45                	je     ffffffff8001f626 <ZydisIsMemoryOperandCompatible+0x984>
ffffffff8001f5e1:	80 7d b5 00          	cmpb   $0x0,-0x4b(%rbp)
ffffffff8001f5e5:	74 22                	je     ffffffff8001f609 <ZydisIsMemoryOperandCompatible+0x967>
ffffffff8001f5e7:	48 8b 45 90          	mov    -0x70(%rbp),%rax
ffffffff8001f5eb:	8b 40 10             	mov    0x10(%rax),%eax
ffffffff8001f5ee:	3d c5 00 00 00       	cmp    $0xc5,%eax
ffffffff8001f5f3:	75 07                	jne    ffffffff8001f5fc <ZydisIsMemoryOperandCompatible+0x95a>
ffffffff8001f5f5:	b8 40 00 00 00       	mov    $0x40,%eax
ffffffff8001f5fa:	eb 05                	jmp    ffffffff8001f601 <ZydisIsMemoryOperandCompatible+0x95f>
ffffffff8001f5fc:	b8 20 00 00 00       	mov    $0x20,%eax
ffffffff8001f601:	88 45 e1             	mov    %al,-0x1f(%rbp)
ffffffff8001f604:	e9 01 01 00 00       	jmp    ffffffff8001f70a <ZydisIsMemoryOperandCompatible+0xa68>
ffffffff8001f609:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff8001f60d:	48 8b 00             	mov    (%rax),%rax
ffffffff8001f610:	8b 00                	mov    (%rax),%eax
ffffffff8001f612:	8b 55 b0             	mov    -0x50(%rbp),%edx
ffffffff8001f615:	89 d6                	mov    %edx,%esi
ffffffff8001f617:	89 c7                	mov    %eax,%edi
ffffffff8001f619:	e8 cc 63 00 00       	call   ffffffff800259ea <ZydisRegisterClassGetWidth>
ffffffff8001f61e:	88 45 e1             	mov    %al,-0x1f(%rbp)
ffffffff8001f621:	e9 e4 00 00 00       	jmp    ffffffff8001f70a <ZydisIsMemoryOperandCompatible+0xa68>
ffffffff8001f626:	83 7d ac 00          	cmpl   $0x0,-0x54(%rbp)
ffffffff8001f62a:	74 3b                	je     ffffffff8001f667 <ZydisIsMemoryOperandCompatible+0x9c5>
ffffffff8001f62c:	80 7d e3 00          	cmpb   $0x0,-0x1d(%rbp)
ffffffff8001f630:	74 18                	je     ffffffff8001f64a <ZydisIsMemoryOperandCompatible+0x9a8>
ffffffff8001f632:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff8001f636:	48 8b 00             	mov    (%rax),%rax
ffffffff8001f639:	8b 00                	mov    (%rax),%eax
ffffffff8001f63b:	89 c7                	mov    %eax,%edi
ffffffff8001f63d:	e8 1b de ff ff       	call   ffffffff8001d45d <ZydisGetMachineModeWidth>
ffffffff8001f642:	88 45 e1             	mov    %al,-0x1f(%rbp)
ffffffff8001f645:	e9 c0 00 00 00       	jmp    ffffffff8001f70a <ZydisIsMemoryOperandCompatible+0xa68>
ffffffff8001f64a:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff8001f64e:	48 8b 00             	mov    (%rax),%rax
ffffffff8001f651:	8b 00                	mov    (%rax),%eax
ffffffff8001f653:	8b 55 ac             	mov    -0x54(%rbp),%edx
ffffffff8001f656:	89 d6                	mov    %edx,%esi
ffffffff8001f658:	89 c7                	mov    %eax,%edi
ffffffff8001f65a:	e8 8b 63 00 00       	call   ffffffff800259ea <ZydisRegisterClassGetWidth>
ffffffff8001f65f:	88 45 e1             	mov    %al,-0x1f(%rbp)
ffffffff8001f662:	e9 a3 00 00 00       	jmp    ffffffff8001f70a <ZydisIsMemoryOperandCompatible+0xa68>
ffffffff8001f667:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff8001f66b:	0f b6 40 29          	movzbl 0x29(%rax),%eax
ffffffff8001f66f:	84 c0                	test   %al,%al
ffffffff8001f671:	74 0a                	je     ffffffff8001f67d <ZydisIsMemoryOperandCompatible+0x9db>
ffffffff8001f673:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff8001f677:	0f b6 40 29          	movzbl 0x29(%rax),%eax
ffffffff8001f67b:	eb 05                	jmp    ffffffff8001f682 <ZydisIsMemoryOperandCompatible+0x9e0>
ffffffff8001f67d:	b8 10 00 00 00       	mov    $0x10,%eax
ffffffff8001f682:	88 45 df             	mov    %al,-0x21(%rbp)
ffffffff8001f685:	80 7d df 10          	cmpb   $0x10,-0x21(%rbp)
ffffffff8001f689:	75 1c                	jne    ffffffff8001f6a7 <ZydisIsMemoryOperandCompatible+0xa05>
ffffffff8001f68b:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff8001f68f:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff8001f693:	0f b6 40 07          	movzbl 0x7(%rax),%eax
ffffffff8001f697:	c0 e8 02             	shr    $0x2,%al
ffffffff8001f69a:	83 e0 07             	and    $0x7,%eax
ffffffff8001f69d:	0f b6 c0             	movzbl %al,%eax
ffffffff8001f6a0:	83 e0 01             	and    $0x1,%eax
ffffffff8001f6a3:	85 c0                	test   %eax,%eax
ffffffff8001f6a5:	74 06                	je     ffffffff8001f6ad <ZydisIsMemoryOperandCompatible+0xa0b>
ffffffff8001f6a7:	80 7d df 40          	cmpb   $0x40,-0x21(%rbp)
ffffffff8001f6ab:	75 04                	jne    ffffffff8001f6b1 <ZydisIsMemoryOperandCompatible+0xa0f>
ffffffff8001f6ad:	c6 45 df 20          	movb   $0x20,-0x21(%rbp)
ffffffff8001f6b1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8001f6b5:	48 89 c7             	mov    %rax,%rdi
ffffffff8001f6b8:	e8 f6 e0 ff ff       	call   ffffffff8001d7b3 <ZydisGetUnsignedImmSize>
ffffffff8001f6bd:	3c 10                	cmp    $0x10,%al
ffffffff8001f6bf:	75 04                	jne    ffffffff8001f6c5 <ZydisIsMemoryOperandCompatible+0xa23>
ffffffff8001f6c1:	c6 45 ef 10          	movb   $0x10,-0x11(%rbp)
ffffffff8001f6c5:	0f b6 45 ef          	movzbl -0x11(%rbp),%eax
ffffffff8001f6c9:	3a 45 df             	cmp    -0x21(%rbp),%al
ffffffff8001f6cc:	73 07                	jae    ffffffff8001f6d5 <ZydisIsMemoryOperandCompatible+0xa33>
ffffffff8001f6ce:	0f b6 45 df          	movzbl -0x21(%rbp),%eax
ffffffff8001f6d2:	88 45 ef             	mov    %al,-0x11(%rbp)
ffffffff8001f6d5:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff8001f6d9:	48 8b 00             	mov    (%rax),%rax
ffffffff8001f6dc:	8b 00                	mov    (%rax),%eax
ffffffff8001f6de:	85 c0                	test   %eax,%eax
ffffffff8001f6e0:	75 1d                	jne    ffffffff8001f6ff <ZydisIsMemoryOperandCompatible+0xa5d>
ffffffff8001f6e2:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff8001f6e6:	0f b6 40 29          	movzbl 0x29(%rax),%eax
ffffffff8001f6ea:	3c 20                	cmp    $0x20,%al
ffffffff8001f6ec:	75 07                	jne    ffffffff8001f6f5 <ZydisIsMemoryOperandCompatible+0xa53>
ffffffff8001f6ee:	b8 20 00 00 00       	mov    $0x20,%eax
ffffffff8001f6f3:	eb 05                	jmp    ffffffff8001f6fa <ZydisIsMemoryOperandCompatible+0xa58>
ffffffff8001f6f5:	b8 40 00 00 00       	mov    $0x40,%eax
ffffffff8001f6fa:	88 45 e1             	mov    %al,-0x1f(%rbp)
ffffffff8001f6fd:	eb 07                	jmp    ffffffff8001f706 <ZydisIsMemoryOperandCompatible+0xa64>
ffffffff8001f6ff:	0f b6 45 ef          	movzbl -0x11(%rbp),%eax
ffffffff8001f703:	88 45 e1             	mov    %al,-0x1f(%rbp)
ffffffff8001f706:	c6 45 e0 01          	movb   $0x1,-0x20(%rbp)
ffffffff8001f70a:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff8001f70e:	48 8b 00             	mov    (%rax),%rax
ffffffff8001f711:	8b 00                	mov    (%rax),%eax
ffffffff8001f713:	85 c0                	test   %eax,%eax
ffffffff8001f715:	75 16                	jne    ffffffff8001f72d <ZydisIsMemoryOperandCompatible+0xa8b>
ffffffff8001f717:	80 7d b5 00          	cmpb   $0x0,-0x4b(%rbp)
ffffffff8001f71b:	74 77                	je     ffffffff8001f794 <ZydisIsMemoryOperandCompatible+0xaf2>
ffffffff8001f71d:	83 7d ac 00          	cmpl   $0x0,-0x54(%rbp)
ffffffff8001f721:	74 71                	je     ffffffff8001f794 <ZydisIsMemoryOperandCompatible+0xaf2>
ffffffff8001f723:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001f728:	e9 1a 02 00 00       	jmp    ffffffff8001f947 <ZydisIsMemoryOperandCompatible+0xca5>
ffffffff8001f72d:	80 7d e1 10          	cmpb   $0x10,-0x1f(%rbp)
ffffffff8001f731:	75 61                	jne    ffffffff8001f794 <ZydisIsMemoryOperandCompatible+0xaf2>
ffffffff8001f733:	80 7d e0 00          	cmpb   $0x0,-0x20(%rbp)
ffffffff8001f737:	75 5b                	jne    ffffffff8001f794 <ZydisIsMemoryOperandCompatible+0xaf2>
ffffffff8001f739:	80 7d ef 10          	cmpb   $0x10,-0x11(%rbp)
ffffffff8001f73d:	76 0a                	jbe    ffffffff8001f749 <ZydisIsMemoryOperandCompatible+0xaa7>
ffffffff8001f73f:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001f744:	e9 fe 01 00 00       	jmp    ffffffff8001f947 <ZydisIsMemoryOperandCompatible+0xca5>
ffffffff8001f749:	48 8b 45 90          	mov    -0x70(%rbp),%rax
ffffffff8001f74d:	8b 50 14             	mov    0x14(%rax),%edx
ffffffff8001f750:	48 8b 45 90          	mov    -0x70(%rbp),%rax
ffffffff8001f754:	8b 40 10             	mov    0x10(%rax),%eax
ffffffff8001f757:	89 d6                	mov    %edx,%esi
ffffffff8001f759:	89 c7                	mov    %eax,%edi
ffffffff8001f75b:	e8 c0 e6 ff ff       	call   ffffffff8001de20 <ZydisGetRm16>
ffffffff8001f760:	88 45 a9             	mov    %al,-0x57(%rbp)
ffffffff8001f763:	80 7d a9 ff          	cmpb   $0xff,-0x57(%rbp)
ffffffff8001f767:	75 0a                	jne    ffffffff8001f773 <ZydisIsMemoryOperandCompatible+0xad1>
ffffffff8001f769:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001f76e:	e9 d4 01 00 00       	jmp    ffffffff8001f947 <ZydisIsMemoryOperandCompatible+0xca5>
ffffffff8001f773:	80 7d a9 03          	cmpb   $0x3,-0x57(%rbp)
ffffffff8001f777:	0f 9e c0             	setle  %al
ffffffff8001f77a:	88 45 a8             	mov    %al,-0x58(%rbp)
ffffffff8001f77d:	48 8b 45 90          	mov    -0x70(%rbp),%rax
ffffffff8001f781:	0f b6 40 18          	movzbl 0x18(%rax),%eax
ffffffff8001f785:	38 45 a8             	cmp    %al,-0x58(%rbp)
ffffffff8001f788:	74 0a                	je     ffffffff8001f794 <ZydisIsMemoryOperandCompatible+0xaf2>
ffffffff8001f78a:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001f78f:	e9 b3 01 00 00       	jmp    ffffffff8001f947 <ZydisIsMemoryOperandCompatible+0xca5>
ffffffff8001f794:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff8001f798:	0f b6 40 29          	movzbl 0x29(%rax),%eax
ffffffff8001f79c:	84 c0                	test   %al,%al
ffffffff8001f79e:	74 17                	je     ffffffff8001f7b7 <ZydisIsMemoryOperandCompatible+0xb15>
ffffffff8001f7a0:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff8001f7a4:	0f b6 40 29          	movzbl 0x29(%rax),%eax
ffffffff8001f7a8:	38 45 e1             	cmp    %al,-0x1f(%rbp)
ffffffff8001f7ab:	74 15                	je     ffffffff8001f7c2 <ZydisIsMemoryOperandCompatible+0xb20>
ffffffff8001f7ad:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001f7b2:	e9 90 01 00 00       	jmp    ffffffff8001f947 <ZydisIsMemoryOperandCompatible+0xca5>
ffffffff8001f7b7:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
ffffffff8001f7bb:	0f b6 45 e1          	movzbl -0x1f(%rbp),%eax
ffffffff8001f7bf:	88 42 29             	mov    %al,0x29(%rdx)
ffffffff8001f7c2:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff8001f7c6:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff8001f7ca:	0f b6 40 04          	movzbl 0x4(%rax),%eax
ffffffff8001f7ce:	83 e0 30             	and    $0x30,%eax
ffffffff8001f7d1:	3c 10                	cmp    $0x10,%al
ffffffff8001f7d3:	75 26                	jne    ffffffff8001f7fb <ZydisIsMemoryOperandCompatible+0xb59>
ffffffff8001f7d5:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff8001f7d9:	0f b6 58 29          	movzbl 0x29(%rax),%ebx
ffffffff8001f7dd:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff8001f7e1:	48 8b 00             	mov    (%rax),%rax
ffffffff8001f7e4:	8b 00                	mov    (%rax),%eax
ffffffff8001f7e6:	89 c7                	mov    %eax,%edi
ffffffff8001f7e8:	e8 70 dc ff ff       	call   ffffffff8001d45d <ZydisGetMachineModeWidth>
ffffffff8001f7ed:	38 c3                	cmp    %al,%bl
ffffffff8001f7ef:	74 0a                	je     ffffffff8001f7fb <ZydisIsMemoryOperandCompatible+0xb59>
ffffffff8001f7f1:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001f7f6:	e9 4c 01 00 00       	jmp    ffffffff8001f947 <ZydisIsMemoryOperandCompatible+0xca5>
ffffffff8001f7fb:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
ffffffff8001f7ff:	0f b6 45 ef          	movzbl -0x11(%rbp),%eax
ffffffff8001f803:	88 42 2a             	mov    %al,0x2a(%rdx)
ffffffff8001f806:	e9 37 01 00 00       	jmp    ffffffff8001f942 <ZydisIsMemoryOperandCompatible+0xca0>
ffffffff8001f80b:	48 8b 45 90          	mov    -0x70(%rbp),%rax
ffffffff8001f80f:	8b 40 10             	mov    0x10(%rax),%eax
ffffffff8001f812:	85 c0                	test   %eax,%eax
ffffffff8001f814:	75 17                	jne    ffffffff8001f82d <ZydisIsMemoryOperandCompatible+0xb8b>
ffffffff8001f816:	48 8b 45 90          	mov    -0x70(%rbp),%rax
ffffffff8001f81a:	8b 40 14             	mov    0x14(%rax),%eax
ffffffff8001f81d:	85 c0                	test   %eax,%eax
ffffffff8001f81f:	75 0c                	jne    ffffffff8001f82d <ZydisIsMemoryOperandCompatible+0xb8b>
ffffffff8001f821:	48 8b 45 90          	mov    -0x70(%rbp),%rax
ffffffff8001f825:	0f b6 40 18          	movzbl 0x18(%rax),%eax
ffffffff8001f829:	84 c0                	test   %al,%al
ffffffff8001f82b:	74 0a                	je     ffffffff8001f837 <ZydisIsMemoryOperandCompatible+0xb95>
ffffffff8001f82d:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001f832:	e9 10 01 00 00       	jmp    ffffffff8001f947 <ZydisIsMemoryOperandCompatible+0xca5>
ffffffff8001f837:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff8001f83b:	0f b6 40 28          	movzbl 0x28(%rax),%eax
ffffffff8001f83f:	84 c0                	test   %al,%al
ffffffff8001f841:	74 34                	je     ffffffff8001f877 <ZydisIsMemoryOperandCompatible+0xbd5>
ffffffff8001f843:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff8001f847:	0f b6 40 28          	movzbl 0x28(%rax),%eax
ffffffff8001f84b:	c0 e8 05             	shr    $0x5,%al
ffffffff8001f84e:	88 45 dd             	mov    %al,-0x23(%rbp)
ffffffff8001f851:	0f b6 45 dd          	movzbl -0x23(%rbp),%eax
ffffffff8001f855:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
ffffffff8001f859:	48 98                	cltq   
ffffffff8001f85b:	0f b7 54 42 02       	movzwl 0x2(%rdx,%rax,2),%edx
ffffffff8001f860:	48 8b 45 90          	mov    -0x70(%rbp),%rax
ffffffff8001f864:	0f b7 40 28          	movzwl 0x28(%rax),%eax
ffffffff8001f868:	66 39 c2             	cmp    %ax,%dx
ffffffff8001f86b:	74 4a                	je     ffffffff8001f8b7 <ZydisIsMemoryOperandCompatible+0xc15>
ffffffff8001f86d:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001f872:	e9 d0 00 00 00       	jmp    ffffffff8001f947 <ZydisIsMemoryOperandCompatible+0xca5>
ffffffff8001f877:	48 8b 45 90          	mov    -0x70(%rbp),%rax
ffffffff8001f87b:	0f b7 40 28          	movzwl 0x28(%rax),%eax
ffffffff8001f87f:	0f b7 c0             	movzwl %ax,%eax
ffffffff8001f882:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
ffffffff8001f886:	48 8d 72 02          	lea    0x2(%rdx),%rsi
ffffffff8001f88a:	48 8b 7d 98          	mov    -0x68(%rbp),%rdi
ffffffff8001f88e:	b9 01 00 00 00       	mov    $0x1,%ecx
ffffffff8001f893:	89 c2                	mov    %eax,%edx
ffffffff8001f895:	e8 64 dc ff ff       	call   ffffffff8001d4fe <ZydisGetOperandSizeFromElementSize>
ffffffff8001f89a:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
ffffffff8001f89e:	88 42 28             	mov    %al,0x28(%rdx)
ffffffff8001f8a1:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff8001f8a5:	0f b6 40 28          	movzbl 0x28(%rax),%eax
ffffffff8001f8a9:	84 c0                	test   %al,%al
ffffffff8001f8ab:	75 0a                	jne    ffffffff8001f8b7 <ZydisIsMemoryOperandCompatible+0xc15>
ffffffff8001f8ad:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001f8b2:	e9 90 00 00 00       	jmp    ffffffff8001f947 <ZydisIsMemoryOperandCompatible+0xca5>
ffffffff8001f8b7:	48 8b 45 90          	mov    -0x70(%rbp),%rax
ffffffff8001f8bb:	48 8b 48 20          	mov    0x20(%rax),%rcx
ffffffff8001f8bf:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
ffffffff8001f8c3:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff8001f8c7:	48 89 ce             	mov    %rcx,%rsi
ffffffff8001f8ca:	48 89 c7             	mov    %rax,%rdi
ffffffff8001f8cd:	e8 72 df ff ff       	call   ffffffff8001d844 <ZydisGetEffectiveImmSize>
ffffffff8001f8d2:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
ffffffff8001f8d6:	88 42 2a             	mov    %al,0x2a(%rdx)
ffffffff8001f8d9:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff8001f8dd:	0f b6 40 2a          	movzbl 0x2a(%rax),%eax
ffffffff8001f8e1:	84 c0                	test   %al,%al
ffffffff8001f8e3:	75 07                	jne    ffffffff8001f8ec <ZydisIsMemoryOperandCompatible+0xc4a>
ffffffff8001f8e5:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001f8ea:	eb 5b                	jmp    ffffffff8001f947 <ZydisIsMemoryOperandCompatible+0xca5>
ffffffff8001f8ec:	48 8b 45 90          	mov    -0x70(%rbp),%rax
ffffffff8001f8f0:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff8001f8f4:	48 89 c7             	mov    %rax,%rdi
ffffffff8001f8f7:	e8 4e de ff ff       	call   ffffffff8001d74a <ZydisGetSignedImmSize>
ffffffff8001f8fc:	88 45 de             	mov    %al,-0x22(%rbp)
ffffffff8001f8ff:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff8001f903:	48 8b 00             	mov    (%rax),%rax
ffffffff8001f906:	8b 00                	mov    (%rax),%eax
ffffffff8001f908:	85 c0                	test   %eax,%eax
ffffffff8001f90a:	75 07                	jne    ffffffff8001f913 <ZydisIsMemoryOperandCompatible+0xc71>
ffffffff8001f90c:	b8 20 00 00 00       	mov    $0x20,%eax
ffffffff8001f911:	eb 05                	jmp    ffffffff8001f918 <ZydisIsMemoryOperandCompatible+0xc76>
ffffffff8001f913:	b8 10 00 00 00       	mov    $0x10,%eax
ffffffff8001f918:	88 45 dc             	mov    %al,-0x24(%rbp)
ffffffff8001f91b:	0f b6 45 de          	movzbl -0x22(%rbp),%eax
ffffffff8001f91f:	3a 45 dc             	cmp    -0x24(%rbp),%al
ffffffff8001f922:	73 07                	jae    ffffffff8001f92b <ZydisIsMemoryOperandCompatible+0xc89>
ffffffff8001f924:	0f b6 45 dc          	movzbl -0x24(%rbp),%eax
ffffffff8001f928:	88 45 de             	mov    %al,-0x22(%rbp)
ffffffff8001f92b:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff8001f92f:	0f b6 40 2a          	movzbl 0x2a(%rax),%eax
ffffffff8001f933:	38 45 de             	cmp    %al,-0x22(%rbp)
ffffffff8001f936:	73 09                	jae    ffffffff8001f941 <ZydisIsMemoryOperandCompatible+0xc9f>
ffffffff8001f938:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001f93d:	eb 08                	jmp    ffffffff8001f947 <ZydisIsMemoryOperandCompatible+0xca5>
ffffffff8001f93f:	eb fe                	jmp    ffffffff8001f93f <ZydisIsMemoryOperandCompatible+0xc9d>
ffffffff8001f941:	90                   	nop
ffffffff8001f942:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8001f947:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
ffffffff8001f94b:	c9                   	leave  
ffffffff8001f94c:	c3                   	ret    

ffffffff8001f94d <ZydisIsPointerOperandCompatible>:
ffffffff8001f94d:	f3 0f 1e fa          	endbr64 
ffffffff8001f951:	55                   	push   %rbp
ffffffff8001f952:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001f955:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff8001f959:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff8001f95d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
ffffffff8001f961:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001f965:	48 8b 00             	mov    (%rax),%rax
ffffffff8001f968:	8b 40 18             	mov    0x18(%rax),%eax
ffffffff8001f96b:	85 c0                	test   %eax,%eax
ffffffff8001f96d:	74 0d                	je     ffffffff8001f97c <ZydisIsPointerOperandCompatible+0x2f>
ffffffff8001f96f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001f973:	48 8b 00             	mov    (%rax),%rax
ffffffff8001f976:	8b 40 18             	mov    0x18(%rax),%eax
ffffffff8001f979:	83 f8 03             	cmp    $0x3,%eax
ffffffff8001f97c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8001f980:	8b 40 34             	mov    0x34(%rax),%eax
ffffffff8001f983:	89 c0                	mov    %eax,%eax
ffffffff8001f985:	48 89 c7             	mov    %rax,%rdi
ffffffff8001f988:	e8 26 de ff ff       	call   ffffffff8001d7b3 <ZydisGetUnsignedImmSize>
ffffffff8001f98d:	88 45 ff             	mov    %al,-0x1(%rbp)
ffffffff8001f990:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001f994:	48 8b 00             	mov    (%rax),%rax
ffffffff8001f997:	8b 40 1c             	mov    0x1c(%rax),%eax
ffffffff8001f99a:	85 c0                	test   %eax,%eax
ffffffff8001f99c:	75 12                	jne    ffffffff8001f9b0 <ZydisIsPointerOperandCompatible+0x63>
ffffffff8001f99e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001f9a2:	48 8b 00             	mov    (%rax),%rax
ffffffff8001f9a5:	8b 00                	mov    (%rax),%eax
ffffffff8001f9a7:	89 c7                	mov    %eax,%edi
ffffffff8001f9a9:	e8 af da ff ff       	call   ffffffff8001d45d <ZydisGetMachineModeWidth>
ffffffff8001f9ae:	eb 15                	jmp    ffffffff8001f9c5 <ZydisIsPointerOperandCompatible+0x78>
ffffffff8001f9b0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001f9b4:	48 8b 00             	mov    (%rax),%rax
ffffffff8001f9b7:	8b 40 1c             	mov    0x1c(%rax),%eax
ffffffff8001f9ba:	ba 04 00 00 00       	mov    $0x4,%edx
ffffffff8001f9bf:	89 c1                	mov    %eax,%ecx
ffffffff8001f9c1:	d3 e2                	shl    %cl,%edx
ffffffff8001f9c3:	89 d0                	mov    %edx,%eax
ffffffff8001f9c5:	88 45 fe             	mov    %al,-0x2(%rbp)
ffffffff8001f9c8:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
ffffffff8001f9cc:	3a 45 fe             	cmp    -0x2(%rbp),%al
ffffffff8001f9cf:	76 07                	jbe    ffffffff8001f9d8 <ZydisIsPointerOperandCompatible+0x8b>
ffffffff8001f9d1:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001f9d6:	eb 27                	jmp    ffffffff8001f9ff <ZydisIsPointerOperandCompatible+0xb2>
ffffffff8001f9d8:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff8001f9dc:	0f b6 45 fe          	movzbl -0x2(%rbp),%eax
ffffffff8001f9e0:	88 42 2a             	mov    %al,0x2a(%rdx)
ffffffff8001f9e3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001f9e7:	0f b6 40 2a          	movzbl 0x2a(%rax),%eax
ffffffff8001f9eb:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff8001f9ef:	88 42 28             	mov    %al,0x28(%rdx)
ffffffff8001f9f2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001f9f6:	c6 40 2b 10          	movb   $0x10,0x2b(%rax)
ffffffff8001f9fa:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8001f9ff:	c9                   	leave  
ffffffff8001fa00:	c3                   	ret    

ffffffff8001fa01 <ZydisIsImmediateOperandCompabile>:
ffffffff8001fa01:	f3 0f 1e fa          	endbr64 
ffffffff8001fa05:	55                   	push   %rbp
ffffffff8001fa06:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001fa09:	48 83 ec 28          	sub    $0x28,%rsp
ffffffff8001fa0d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff8001fa11:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
ffffffff8001fa15:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
ffffffff8001fa19:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8001fa1d:	0f b6 00             	movzbl (%rax),%eax
ffffffff8001fa20:	83 e0 3f             	and    $0x3f,%eax
ffffffff8001fa23:	0f b6 c0             	movzbl %al,%eax
ffffffff8001fa26:	83 f8 03             	cmp    $0x3,%eax
ffffffff8001fa29:	74 17                	je     ffffffff8001fa42 <ZydisIsImmediateOperandCompabile+0x41>
ffffffff8001fa2b:	83 f8 03             	cmp    $0x3,%eax
ffffffff8001fa2e:	0f 8c b3 00 00 00    	jl     ffffffff8001fae7 <ZydisIsImmediateOperandCompabile+0xe6>
ffffffff8001fa34:	83 e8 1b             	sub    $0x1b,%eax
ffffffff8001fa37:	83 f8 01             	cmp    $0x1,%eax
ffffffff8001fa3a:	0f 87 a7 00 00 00    	ja     ffffffff8001fae7 <ZydisIsImmediateOperandCompabile+0xe6>
ffffffff8001fa40:	eb 1c                	jmp    ffffffff8001fa5e <ZydisIsImmediateOperandCompabile+0x5d>
ffffffff8001fa42:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8001fa46:	48 8b 40 38          	mov    0x38(%rax),%rax
ffffffff8001fa4a:	48 83 f8 01          	cmp    $0x1,%rax
ffffffff8001fa4e:	0f 84 95 00 00 00    	je     ffffffff8001fae9 <ZydisIsImmediateOperandCompabile+0xe8>
ffffffff8001fa54:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001fa59:	e9 91 00 00 00       	jmp    ffffffff8001faef <ZydisIsImmediateOperandCompabile+0xee>
ffffffff8001fa5e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8001fa62:	48 8b 48 38          	mov    0x38(%rax),%rcx
ffffffff8001fa66:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff8001fa6a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001fa6e:	48 89 ce             	mov    %rcx,%rsi
ffffffff8001fa71:	48 89 c7             	mov    %rax,%rdi
ffffffff8001fa74:	e8 cb dd ff ff       	call   ffffffff8001d844 <ZydisGetEffectiveImmSize>
ffffffff8001fa79:	88 45 ff             	mov    %al,-0x1(%rbp)
ffffffff8001fa7c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8001fa80:	0f b6 40 09          	movzbl 0x9(%rax),%eax
ffffffff8001fa84:	83 e0 3f             	and    $0x3f,%eax
ffffffff8001fa87:	3c 05                	cmp    $0x5,%al
ffffffff8001fa89:	74 2a                	je     ffffffff8001fab5 <ZydisIsImmediateOperandCompabile+0xb4>
ffffffff8001fa8b:	80 7d ff 00          	cmpb   $0x0,-0x1(%rbp)
ffffffff8001fa8f:	75 07                	jne    ffffffff8001fa98 <ZydisIsImmediateOperandCompabile+0x97>
ffffffff8001fa91:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001fa96:	eb 57                	jmp    ffffffff8001faef <ZydisIsImmediateOperandCompabile+0xee>
ffffffff8001fa98:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001fa9c:	0f b6 40 2b          	movzbl 0x2b(%rax),%eax
ffffffff8001faa0:	84 c0                	test   %al,%al
ffffffff8001faa2:	74 1e                	je     ffffffff8001fac2 <ZydisIsImmediateOperandCompabile+0xc1>
ffffffff8001faa4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001faa8:	0f b6 40 2b          	movzbl 0x2b(%rax),%eax
ffffffff8001faac:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff8001fab0:	88 42 2a             	mov    %al,0x2a(%rdx)
ffffffff8001fab3:	eb 0d                	jmp    ffffffff8001fac2 <ZydisIsImmediateOperandCompabile+0xc1>
ffffffff8001fab5:	80 7d ff 08          	cmpb   $0x8,-0x1(%rbp)
ffffffff8001fab9:	74 07                	je     ffffffff8001fac2 <ZydisIsImmediateOperandCompabile+0xc1>
ffffffff8001fabb:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001fac0:	eb 2d                	jmp    ffffffff8001faef <ZydisIsImmediateOperandCompabile+0xee>
ffffffff8001fac2:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff8001fac6:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
ffffffff8001faca:	88 42 2b             	mov    %al,0x2b(%rdx)
ffffffff8001facd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8001fad1:	0f b6 00             	movzbl (%rax),%eax
ffffffff8001fad4:	83 e0 3f             	and    $0x3f,%eax
ffffffff8001fad7:	3c 1c                	cmp    $0x1c,%al
ffffffff8001fad9:	0f 94 c0             	sete   %al
ffffffff8001fadc:	89 c2                	mov    %eax,%edx
ffffffff8001fade:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001fae2:	88 50 35             	mov    %dl,0x35(%rax)
ffffffff8001fae5:	eb 03                	jmp    ffffffff8001faea <ZydisIsImmediateOperandCompabile+0xe9>
ffffffff8001fae7:	eb fe                	jmp    ffffffff8001fae7 <ZydisIsImmediateOperandCompabile+0xe6>
ffffffff8001fae9:	90                   	nop
ffffffff8001faea:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8001faef:	c9                   	leave  
ffffffff8001faf0:	c3                   	ret    

ffffffff8001faf1 <ZydisIsBroadcastModeCompatible>:
ffffffff8001faf1:	f3 0f 1e fa          	endbr64 
ffffffff8001faf5:	55                   	push   %rbp
ffffffff8001faf6:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001faf9:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff8001fafd:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff8001fb01:	89 75 e4             	mov    %esi,-0x1c(%rbp)
ffffffff8001fb04:	89 55 e0             	mov    %edx,-0x20(%rbp)
ffffffff8001fb07:	83 7d e0 00          	cmpl   $0x0,-0x20(%rbp)
ffffffff8001fb0b:	75 0a                	jne    ffffffff8001fb17 <ZydisIsBroadcastModeCompatible+0x26>
ffffffff8001fb0d:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8001fb12:	e9 22 01 00 00       	jmp    ffffffff8001fc39 <ZydisIsBroadcastModeCompatible+0x148>
ffffffff8001fb17:	c6 45 ff 00          	movb   $0x0,-0x1(%rbp)
ffffffff8001fb1b:	83 7d e4 03          	cmpl   $0x3,-0x1c(%rbp)
ffffffff8001fb1f:	74 20                	je     ffffffff8001fb41 <ZydisIsBroadcastModeCompatible+0x50>
ffffffff8001fb21:	83 7d e4 03          	cmpl   $0x3,-0x1c(%rbp)
ffffffff8001fb25:	77 20                	ja     ffffffff8001fb47 <ZydisIsBroadcastModeCompatible+0x56>
ffffffff8001fb27:	83 7d e4 01          	cmpl   $0x1,-0x1c(%rbp)
ffffffff8001fb2b:	74 08                	je     ffffffff8001fb35 <ZydisIsBroadcastModeCompatible+0x44>
ffffffff8001fb2d:	83 7d e4 02          	cmpl   $0x2,-0x1c(%rbp)
ffffffff8001fb31:	74 08                	je     ffffffff8001fb3b <ZydisIsBroadcastModeCompatible+0x4a>
ffffffff8001fb33:	eb 12                	jmp    ffffffff8001fb47 <ZydisIsBroadcastModeCompatible+0x56>
ffffffff8001fb35:	c6 45 ff 10          	movb   $0x10,-0x1(%rbp)
ffffffff8001fb39:	eb 0e                	jmp    ffffffff8001fb49 <ZydisIsBroadcastModeCompatible+0x58>
ffffffff8001fb3b:	c6 45 ff 20          	movb   $0x20,-0x1(%rbp)
ffffffff8001fb3f:	eb 08                	jmp    ffffffff8001fb49 <ZydisIsBroadcastModeCompatible+0x58>
ffffffff8001fb41:	c6 45 ff 40          	movb   $0x40,-0x1(%rbp)
ffffffff8001fb45:	eb 02                	jmp    ffffffff8001fb49 <ZydisIsBroadcastModeCompatible+0x58>
ffffffff8001fb47:	eb fe                	jmp    ffffffff8001fb47 <ZydisIsBroadcastModeCompatible+0x56>
ffffffff8001fb49:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001fb4d:	0f b6 40 0d          	movzbl 0xd(%rax),%eax
ffffffff8001fb51:	83 e0 1f             	and    $0x1f,%eax
ffffffff8001fb54:	0f b6 c0             	movzbl %al,%eax
ffffffff8001fb57:	83 f8 10             	cmp    $0x10,%eax
ffffffff8001fb5a:	74 1a                	je     ffffffff8001fb76 <ZydisIsBroadcastModeCompatible+0x85>
ffffffff8001fb5c:	83 f8 10             	cmp    $0x10,%eax
ffffffff8001fb5f:	7f 21                	jg     ffffffff8001fb82 <ZydisIsBroadcastModeCompatible+0x91>
ffffffff8001fb61:	83 f8 01             	cmp    $0x1,%eax
ffffffff8001fb64:	74 1e                	je     ffffffff8001fb84 <ZydisIsBroadcastModeCompatible+0x93>
ffffffff8001fb66:	83 f8 02             	cmp    $0x2,%eax
ffffffff8001fb69:	75 17                	jne    ffffffff8001fb82 <ZydisIsBroadcastModeCompatible+0x91>
ffffffff8001fb6b:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
ffffffff8001fb6f:	d0 e8                	shr    %al
ffffffff8001fb71:	88 45 ff             	mov    %al,-0x1(%rbp)
ffffffff8001fb74:	eb 0f                	jmp    ffffffff8001fb85 <ZydisIsBroadcastModeCompatible+0x94>
ffffffff8001fb76:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
ffffffff8001fb7a:	c0 e8 02             	shr    $0x2,%al
ffffffff8001fb7d:	88 45 ff             	mov    %al,-0x1(%rbp)
ffffffff8001fb80:	eb 03                	jmp    ffffffff8001fb85 <ZydisIsBroadcastModeCompatible+0x94>
ffffffff8001fb82:	eb fe                	jmp    ffffffff8001fb82 <ZydisIsBroadcastModeCompatible+0x91>
ffffffff8001fb84:	90                   	nop
ffffffff8001fb85:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001fb89:	0f b6 40 0d          	movzbl 0xd(%rax),%eax
ffffffff8001fb8d:	c0 e8 05             	shr    $0x5,%al
ffffffff8001fb90:	0f b6 c0             	movzbl %al,%eax
ffffffff8001fb93:	83 f8 04             	cmp    $0x4,%eax
ffffffff8001fb96:	74 1d                	je     ffffffff8001fbb5 <ZydisIsBroadcastModeCompatible+0xc4>
ffffffff8001fb98:	83 f8 04             	cmp    $0x4,%eax
ffffffff8001fb9b:	7f 1e                	jg     ffffffff8001fbbb <ZydisIsBroadcastModeCompatible+0xca>
ffffffff8001fb9d:	83 f8 02             	cmp    $0x2,%eax
ffffffff8001fba0:	74 07                	je     ffffffff8001fba9 <ZydisIsBroadcastModeCompatible+0xb8>
ffffffff8001fba2:	83 f8 03             	cmp    $0x3,%eax
ffffffff8001fba5:	74 08                	je     ffffffff8001fbaf <ZydisIsBroadcastModeCompatible+0xbe>
ffffffff8001fba7:	eb 12                	jmp    ffffffff8001fbbb <ZydisIsBroadcastModeCompatible+0xca>
ffffffff8001fba9:	c6 45 fe 02          	movb   $0x2,-0x2(%rbp)
ffffffff8001fbad:	eb 0e                	jmp    ffffffff8001fbbd <ZydisIsBroadcastModeCompatible+0xcc>
ffffffff8001fbaf:	c6 45 fe 04          	movb   $0x4,-0x2(%rbp)
ffffffff8001fbb3:	eb 08                	jmp    ffffffff8001fbbd <ZydisIsBroadcastModeCompatible+0xcc>
ffffffff8001fbb5:	c6 45 fe 08          	movb   $0x8,-0x2(%rbp)
ffffffff8001fbb9:	eb 02                	jmp    ffffffff8001fbbd <ZydisIsBroadcastModeCompatible+0xcc>
ffffffff8001fbbb:	eb fe                	jmp    ffffffff8001fbbb <ZydisIsBroadcastModeCompatible+0xca>
ffffffff8001fbbd:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
ffffffff8001fbc1:	0f b6 c0             	movzbl %al,%eax
ffffffff8001fbc4:	f6 75 fe             	divb   -0x2(%rbp)
ffffffff8001fbc7:	88 45 f7             	mov    %al,-0x9(%rbp)
ffffffff8001fbca:	0f b6 45 f7          	movzbl -0x9(%rbp),%eax
ffffffff8001fbce:	83 f8 20             	cmp    $0x20,%eax
ffffffff8001fbd1:	77 50                	ja     ffffffff8001fc23 <ZydisIsBroadcastModeCompatible+0x132>
ffffffff8001fbd3:	89 c0                	mov    %eax,%eax
ffffffff8001fbd5:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
ffffffff8001fbdc:	00 
ffffffff8001fbdd:	48 8d 05 b8 e1 01 00 	lea    0x1e1b8(%rip),%rax        # ffffffff8003dd9c <zero.0+0x174>
ffffffff8001fbe4:	8b 04 02             	mov    (%rdx,%rax,1),%eax
ffffffff8001fbe7:	48 98                	cltq   
ffffffff8001fbe9:	48 8d 15 ac e1 01 00 	lea    0x1e1ac(%rip),%rdx        # ffffffff8003dd9c <zero.0+0x174>
ffffffff8001fbf0:	48 01 d0             	add    %rdx,%rax
ffffffff8001fbf3:	3e ff e0             	notrack jmp *%rax
ffffffff8001fbf6:	c7 45 f8 01 00 00 00 	movl   $0x1,-0x8(%rbp)
ffffffff8001fbfd:	eb 26                	jmp    ffffffff8001fc25 <ZydisIsBroadcastModeCompatible+0x134>
ffffffff8001fbff:	c7 45 f8 02 00 00 00 	movl   $0x2,-0x8(%rbp)
ffffffff8001fc06:	eb 1d                	jmp    ffffffff8001fc25 <ZydisIsBroadcastModeCompatible+0x134>
ffffffff8001fc08:	c7 45 f8 03 00 00 00 	movl   $0x3,-0x8(%rbp)
ffffffff8001fc0f:	eb 14                	jmp    ffffffff8001fc25 <ZydisIsBroadcastModeCompatible+0x134>
ffffffff8001fc11:	c7 45 f8 04 00 00 00 	movl   $0x4,-0x8(%rbp)
ffffffff8001fc18:	eb 0b                	jmp    ffffffff8001fc25 <ZydisIsBroadcastModeCompatible+0x134>
ffffffff8001fc1a:	c7 45 f8 05 00 00 00 	movl   $0x5,-0x8(%rbp)
ffffffff8001fc21:	eb 02                	jmp    ffffffff8001fc25 <ZydisIsBroadcastModeCompatible+0x134>
ffffffff8001fc23:	eb fe                	jmp    ffffffff8001fc23 <ZydisIsBroadcastModeCompatible+0x132>
ffffffff8001fc25:	8b 45 e0             	mov    -0x20(%rbp),%eax
ffffffff8001fc28:	3b 45 f8             	cmp    -0x8(%rbp),%eax
ffffffff8001fc2b:	74 07                	je     ffffffff8001fc34 <ZydisIsBroadcastModeCompatible+0x143>
ffffffff8001fc2d:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001fc32:	eb 05                	jmp    ffffffff8001fc39 <ZydisIsBroadcastModeCompatible+0x148>
ffffffff8001fc34:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8001fc39:	c9                   	leave  
ffffffff8001fc3a:	c3                   	ret    

ffffffff8001fc3b <ZydisAreEvexFeaturesCompatible>:
ffffffff8001fc3b:	f3 0f 1e fa          	endbr64 
ffffffff8001fc3f:	55                   	push   %rbp
ffffffff8001fc40:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001fc43:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff8001fc47:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff8001fc4b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
ffffffff8001fc4f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001fc53:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff8001fc57:	0f b6 40 06          	movzbl 0x6(%rax),%eax
ffffffff8001fc5b:	83 e0 07             	and    $0x7,%eax
ffffffff8001fc5e:	3c 04                	cmp    $0x4,%al
ffffffff8001fc60:	74 0a                	je     ffffffff8001fc6c <ZydisAreEvexFeaturesCompatible+0x31>
ffffffff8001fc62:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8001fc67:	e9 a5 01 00 00       	jmp    ffffffff8001fe11 <ZydisAreEvexFeaturesCompatible+0x1d6>
ffffffff8001fc6c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001fc70:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff8001fc74:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8001fc78:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001fc7c:	0f b6 40 0e          	movzbl 0xe(%rax),%eax
ffffffff8001fc80:	83 e0 10             	and    $0x10,%eax
ffffffff8001fc83:	84 c0                	test   %al,%al
ffffffff8001fc85:	75 28                	jne    ffffffff8001fcaf <ZydisAreEvexFeaturesCompatible+0x74>
ffffffff8001fc87:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001fc8b:	0f b6 40 0e          	movzbl 0xe(%rax),%eax
ffffffff8001fc8f:	83 e0 60             	and    $0x60,%eax
ffffffff8001fc92:	3c 20                	cmp    $0x20,%al
ffffffff8001fc94:	74 19                	je     ffffffff8001fcaf <ZydisAreEvexFeaturesCompatible+0x74>
ffffffff8001fc96:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8001fc9a:	0f b6 80 79 01 00 00 	movzbl 0x179(%rax),%eax
ffffffff8001fca1:	84 c0                	test   %al,%al
ffffffff8001fca3:	74 0a                	je     ffffffff8001fcaf <ZydisAreEvexFeaturesCompatible+0x74>
ffffffff8001fca5:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001fcaa:	e9 62 01 00 00       	jmp    ffffffff8001fe11 <ZydisAreEvexFeaturesCompatible+0x1d6>
ffffffff8001fcaf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001fcb3:	0f b6 40 0e          	movzbl 0xe(%rax),%eax
ffffffff8001fcb7:	83 e0 03             	and    $0x3,%eax
ffffffff8001fcba:	0f b6 c0             	movzbl %al,%eax
ffffffff8001fcbd:	83 f8 03             	cmp    $0x3,%eax
ffffffff8001fcc0:	0f 84 17 01 00 00    	je     ffffffff8001fddd <ZydisAreEvexFeaturesCompatible+0x1a2>
ffffffff8001fcc6:	83 f8 03             	cmp    $0x3,%eax
ffffffff8001fcc9:	0f 8f 31 01 00 00    	jg     ffffffff8001fe00 <ZydisAreEvexFeaturesCompatible+0x1c5>
ffffffff8001fccf:	83 f8 02             	cmp    $0x2,%eax
ffffffff8001fcd2:	0f 84 b6 00 00 00    	je     ffffffff8001fd8e <ZydisAreEvexFeaturesCompatible+0x153>
ffffffff8001fcd8:	83 f8 02             	cmp    $0x2,%eax
ffffffff8001fcdb:	0f 8f 1f 01 00 00    	jg     ffffffff8001fe00 <ZydisAreEvexFeaturesCompatible+0x1c5>
ffffffff8001fce1:	85 c0                	test   %eax,%eax
ffffffff8001fce3:	74 0a                	je     ffffffff8001fcef <ZydisAreEvexFeaturesCompatible+0xb4>
ffffffff8001fce5:	83 f8 01             	cmp    $0x1,%eax
ffffffff8001fce8:	74 3e                	je     ffffffff8001fd28 <ZydisAreEvexFeaturesCompatible+0xed>
ffffffff8001fcea:	e9 11 01 00 00       	jmp    ffffffff8001fe00 <ZydisAreEvexFeaturesCompatible+0x1c5>
ffffffff8001fcef:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8001fcf3:	0f b6 80 78 01 00 00 	movzbl 0x178(%rax),%eax
ffffffff8001fcfa:	84 c0                	test   %al,%al
ffffffff8001fcfc:	75 20                	jne    ffffffff8001fd1e <ZydisAreEvexFeaturesCompatible+0xe3>
ffffffff8001fcfe:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8001fd02:	8b 80 70 01 00 00    	mov    0x170(%rax),%eax
ffffffff8001fd08:	85 c0                	test   %eax,%eax
ffffffff8001fd0a:	75 12                	jne    ffffffff8001fd1e <ZydisAreEvexFeaturesCompatible+0xe3>
ffffffff8001fd0c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8001fd10:	8b 80 74 01 00 00    	mov    0x174(%rax),%eax
ffffffff8001fd16:	85 c0                	test   %eax,%eax
ffffffff8001fd18:	0f 84 e4 00 00 00    	je     ffffffff8001fe02 <ZydisAreEvexFeaturesCompatible+0x1c7>
ffffffff8001fd1e:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001fd23:	e9 e9 00 00 00       	jmp    ffffffff8001fe11 <ZydisAreEvexFeaturesCompatible+0x1d6>
ffffffff8001fd28:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8001fd2c:	0f b6 80 78 01 00 00 	movzbl 0x178(%rax),%eax
ffffffff8001fd33:	84 c0                	test   %al,%al
ffffffff8001fd35:	75 0e                	jne    ffffffff8001fd45 <ZydisAreEvexFeaturesCompatible+0x10a>
ffffffff8001fd37:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8001fd3b:	8b 80 74 01 00 00    	mov    0x174(%rax),%eax
ffffffff8001fd41:	85 c0                	test   %eax,%eax
ffffffff8001fd43:	74 0a                	je     ffffffff8001fd4f <ZydisAreEvexFeaturesCompatible+0x114>
ffffffff8001fd45:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001fd4a:	e9 c2 00 00 00       	jmp    ffffffff8001fe11 <ZydisAreEvexFeaturesCompatible+0x1d6>
ffffffff8001fd4f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8001fd53:	8b 90 70 01 00 00    	mov    0x170(%rax),%edx
ffffffff8001fd59:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001fd5d:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff8001fd61:	0f b6 40 08          	movzbl 0x8(%rax),%eax
ffffffff8001fd65:	c0 e8 03             	shr    $0x3,%al
ffffffff8001fd68:	83 e0 03             	and    $0x3,%eax
ffffffff8001fd6b:	0f b6 c0             	movzbl %al,%eax
ffffffff8001fd6e:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
ffffffff8001fd72:	89 c6                	mov    %eax,%esi
ffffffff8001fd74:	48 89 cf             	mov    %rcx,%rdi
ffffffff8001fd77:	e8 75 fd ff ff       	call   ffffffff8001faf1 <ZydisIsBroadcastModeCompatible>
ffffffff8001fd7c:	84 c0                	test   %al,%al
ffffffff8001fd7e:	0f 85 81 00 00 00    	jne    ffffffff8001fe05 <ZydisAreEvexFeaturesCompatible+0x1ca>
ffffffff8001fd84:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001fd89:	e9 83 00 00 00       	jmp    ffffffff8001fe11 <ZydisAreEvexFeaturesCompatible+0x1d6>
ffffffff8001fd8e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8001fd92:	8b 80 70 01 00 00    	mov    0x170(%rax),%eax
ffffffff8001fd98:	85 c0                	test   %eax,%eax
ffffffff8001fd9a:	74 07                	je     ffffffff8001fda3 <ZydisAreEvexFeaturesCompatible+0x168>
ffffffff8001fd9c:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001fda1:	eb 6e                	jmp    ffffffff8001fe11 <ZydisAreEvexFeaturesCompatible+0x1d6>
ffffffff8001fda3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8001fda7:	8b 80 74 01 00 00    	mov    0x174(%rax),%eax
ffffffff8001fdad:	85 c0                	test   %eax,%eax
ffffffff8001fdaf:	75 16                	jne    ffffffff8001fdc7 <ZydisAreEvexFeaturesCompatible+0x18c>
ffffffff8001fdb1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8001fdb5:	0f b6 80 78 01 00 00 	movzbl 0x178(%rax),%eax
ffffffff8001fdbc:	84 c0                	test   %al,%al
ffffffff8001fdbe:	74 48                	je     ffffffff8001fe08 <ZydisAreEvexFeaturesCompatible+0x1cd>
ffffffff8001fdc0:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001fdc5:	eb 4a                	jmp    ffffffff8001fe11 <ZydisAreEvexFeaturesCompatible+0x1d6>
ffffffff8001fdc7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8001fdcb:	0f b6 80 78 01 00 00 	movzbl 0x178(%rax),%eax
ffffffff8001fdd2:	84 c0                	test   %al,%al
ffffffff8001fdd4:	75 32                	jne    ffffffff8001fe08 <ZydisAreEvexFeaturesCompatible+0x1cd>
ffffffff8001fdd6:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001fddb:	eb 34                	jmp    ffffffff8001fe11 <ZydisAreEvexFeaturesCompatible+0x1d6>
ffffffff8001fddd:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8001fde1:	8b 80 70 01 00 00    	mov    0x170(%rax),%eax
ffffffff8001fde7:	85 c0                	test   %eax,%eax
ffffffff8001fde9:	75 0e                	jne    ffffffff8001fdf9 <ZydisAreEvexFeaturesCompatible+0x1be>
ffffffff8001fdeb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8001fdef:	8b 80 74 01 00 00    	mov    0x174(%rax),%eax
ffffffff8001fdf5:	85 c0                	test   %eax,%eax
ffffffff8001fdf7:	74 12                	je     ffffffff8001fe0b <ZydisAreEvexFeaturesCompatible+0x1d0>
ffffffff8001fdf9:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001fdfe:	eb 11                	jmp    ffffffff8001fe11 <ZydisAreEvexFeaturesCompatible+0x1d6>
ffffffff8001fe00:	eb fe                	jmp    ffffffff8001fe00 <ZydisAreEvexFeaturesCompatible+0x1c5>
ffffffff8001fe02:	90                   	nop
ffffffff8001fe03:	eb 07                	jmp    ffffffff8001fe0c <ZydisAreEvexFeaturesCompatible+0x1d1>
ffffffff8001fe05:	90                   	nop
ffffffff8001fe06:	eb 04                	jmp    ffffffff8001fe0c <ZydisAreEvexFeaturesCompatible+0x1d1>
ffffffff8001fe08:	90                   	nop
ffffffff8001fe09:	eb 01                	jmp    ffffffff8001fe0c <ZydisAreEvexFeaturesCompatible+0x1d1>
ffffffff8001fe0b:	90                   	nop
ffffffff8001fe0c:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8001fe11:	c9                   	leave  
ffffffff8001fe12:	c3                   	ret    

ffffffff8001fe13 <ZydisAreMvexFeaturesCompatible>:
ffffffff8001fe13:	f3 0f 1e fa          	endbr64 
ffffffff8001fe17:	55                   	push   %rbp
ffffffff8001fe18:	48 89 e5             	mov    %rsp,%rbp
ffffffff8001fe1b:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff8001fe1f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff8001fe23:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
ffffffff8001fe27:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001fe2b:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff8001fe2f:	0f b6 40 06          	movzbl 0x6(%rax),%eax
ffffffff8001fe33:	83 e0 07             	and    $0x7,%eax
ffffffff8001fe36:	3c 05                	cmp    $0x5,%al
ffffffff8001fe38:	74 0a                	je     ffffffff8001fe44 <ZydisAreMvexFeaturesCompatible+0x31>
ffffffff8001fe3a:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8001fe3f:	e9 89 06 00 00       	jmp    ffffffff800204cd <ZydisAreMvexFeaturesCompatible+0x6ba>
ffffffff8001fe44:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001fe48:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff8001fe4c:	0f b6 40 05          	movzbl 0x5(%rax),%eax
ffffffff8001fe50:	c0 e8 06             	shr    $0x6,%al
ffffffff8001fe53:	3c 03                	cmp    $0x3,%al
ffffffff8001fe55:	75 19                	jne    ffffffff8001fe70 <ZydisAreMvexFeaturesCompatible+0x5d>
ffffffff8001fe57:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8001fe5b:	0f b6 80 8d 01 00 00 	movzbl 0x18d(%rax),%eax
ffffffff8001fe62:	84 c0                	test   %al,%al
ffffffff8001fe64:	74 0a                	je     ffffffff8001fe70 <ZydisAreMvexFeaturesCompatible+0x5d>
ffffffff8001fe66:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001fe6b:	e9 5d 06 00 00       	jmp    ffffffff800204cd <ZydisAreMvexFeaturesCompatible+0x6ba>
ffffffff8001fe70:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8001fe74:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff8001fe78:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8001fe7c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8001fe80:	0f b6 50 0c          	movzbl 0xc(%rax),%edx
ffffffff8001fe84:	c0 ea 06             	shr    $0x6,%dl
ffffffff8001fe87:	0f b6 d2             	movzbl %dl,%edx
ffffffff8001fe8a:	0f b6 40 0d          	movzbl 0xd(%rax),%eax
ffffffff8001fe8e:	83 e0 07             	and    $0x7,%eax
ffffffff8001fe91:	48 c1 e0 02          	shl    $0x2,%rax
ffffffff8001fe95:	48 09 d0             	or     %rdx,%rax
ffffffff8001fe98:	0f b6 c0             	movzbl %al,%eax
ffffffff8001fe9b:	83 f8 11             	cmp    $0x11,%eax
ffffffff8001fe9e:	0f 8f 86 00 00 00    	jg     ffffffff8001ff2a <ZydisAreMvexFeaturesCompatible+0x117>
ffffffff8001fea4:	85 c0                	test   %eax,%eax
ffffffff8001fea6:	79 56                	jns    ffffffff8001fefe <ZydisAreMvexFeaturesCompatible+0xeb>
ffffffff8001fea8:	e9 fa 05 00 00       	jmp    ffffffff800204a7 <ZydisAreMvexFeaturesCompatible+0x694>
ffffffff8001fead:	89 c0                	mov    %eax,%eax
ffffffff8001feaf:	ba 01 00 00 00       	mov    $0x1,%edx
ffffffff8001feb4:	89 c1                	mov    %eax,%ecx
ffffffff8001feb6:	48 d3 e2             	shl    %cl,%rdx
ffffffff8001feb9:	48 89 d0             	mov    %rdx,%rax
ffffffff8001febc:	48 89 c2             	mov    %rax,%rdx
ffffffff8001febf:	81 e2 00 00 a8 02    	and    $0x2a80000,%edx
ffffffff8001fec5:	48 85 d2             	test   %rdx,%rdx
ffffffff8001fec8:	0f 95 c2             	setne  %dl
ffffffff8001fecb:	84 d2                	test   %dl,%dl
ffffffff8001fecd:	75 72                	jne    ffffffff8001ff41 <ZydisAreMvexFeaturesCompatible+0x12e>
ffffffff8001fecf:	48 89 c2             	mov    %rax,%rdx
ffffffff8001fed2:	81 e2 00 00 10 01    	and    $0x1100000,%edx
ffffffff8001fed8:	48 85 d2             	test   %rdx,%rdx
ffffffff8001fedb:	0f 95 c2             	setne  %dl
ffffffff8001fede:	84 d2                	test   %dl,%dl
ffffffff8001fee0:	0f 85 30 05 00 00    	jne    ffffffff80020416 <ZydisAreMvexFeaturesCompatible+0x603>
ffffffff8001fee6:	25 00 00 44 00       	and    $0x440000,%eax
ffffffff8001feeb:	48 85 c0             	test   %rax,%rax
ffffffff8001feee:	0f 95 c0             	setne  %al
ffffffff8001fef1:	84 c0                	test   %al,%al
ffffffff8001fef3:	0f 85 d6 04 00 00    	jne    ffffffff800203cf <ZydisAreMvexFeaturesCompatible+0x5bc>
ffffffff8001fef9:	e9 a9 05 00 00       	jmp    ffffffff800204a7 <ZydisAreMvexFeaturesCompatible+0x694>
ffffffff8001fefe:	83 f8 11             	cmp    $0x11,%eax
ffffffff8001ff01:	0f 87 a0 05 00 00    	ja     ffffffff800204a7 <ZydisAreMvexFeaturesCompatible+0x694>
ffffffff8001ff07:	89 c0                	mov    %eax,%eax
ffffffff8001ff09:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
ffffffff8001ff10:	00 
ffffffff8001ff11:	48 8d 05 08 df 01 00 	lea    0x1df08(%rip),%rax        # ffffffff8003de20 <zero.0+0x1f8>
ffffffff8001ff18:	8b 04 02             	mov    (%rdx,%rax,1),%eax
ffffffff8001ff1b:	48 98                	cltq   
ffffffff8001ff1d:	48 8d 15 fc de 01 00 	lea    0x1defc(%rip),%rdx        # ffffffff8003de20 <zero.0+0x1f8>
ffffffff8001ff24:	48 01 d0             	add    %rdx,%rax
ffffffff8001ff27:	3e ff e0             	notrack jmp *%rax
ffffffff8001ff2a:	83 f8 19             	cmp    $0x19,%eax
ffffffff8001ff2d:	0f 8f 74 05 00 00    	jg     ffffffff800204a7 <ZydisAreMvexFeaturesCompatible+0x694>
ffffffff8001ff33:	83 f8 12             	cmp    $0x12,%eax
ffffffff8001ff36:	0f 8d 71 ff ff ff    	jge    ffffffff8001fead <ZydisAreMvexFeaturesCompatible+0x9a>
ffffffff8001ff3c:	e9 66 05 00 00       	jmp    ffffffff800204a7 <ZydisAreMvexFeaturesCompatible+0x694>
ffffffff8001ff41:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8001ff45:	8b 80 7c 01 00 00    	mov    0x17c(%rax),%eax
ffffffff8001ff4b:	85 c0                	test   %eax,%eax
ffffffff8001ff4d:	75 3d                	jne    ffffffff8001ff8c <ZydisAreMvexFeaturesCompatible+0x179>
ffffffff8001ff4f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8001ff53:	8b 80 80 01 00 00    	mov    0x180(%rax),%eax
ffffffff8001ff59:	85 c0                	test   %eax,%eax
ffffffff8001ff5b:	75 2f                	jne    ffffffff8001ff8c <ZydisAreMvexFeaturesCompatible+0x179>
ffffffff8001ff5d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8001ff61:	8b 80 84 01 00 00    	mov    0x184(%rax),%eax
ffffffff8001ff67:	85 c0                	test   %eax,%eax
ffffffff8001ff69:	75 21                	jne    ffffffff8001ff8c <ZydisAreMvexFeaturesCompatible+0x179>
ffffffff8001ff6b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8001ff6f:	8b 80 88 01 00 00    	mov    0x188(%rax),%eax
ffffffff8001ff75:	85 c0                	test   %eax,%eax
ffffffff8001ff77:	75 13                	jne    ffffffff8001ff8c <ZydisAreMvexFeaturesCompatible+0x179>
ffffffff8001ff79:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8001ff7d:	0f b6 80 8c 01 00 00 	movzbl 0x18c(%rax),%eax
ffffffff8001ff84:	84 c0                	test   %al,%al
ffffffff8001ff86:	0f 84 1d 05 00 00    	je     ffffffff800204a9 <ZydisAreMvexFeaturesCompatible+0x696>
ffffffff8001ff8c:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001ff91:	e9 37 05 00 00       	jmp    ffffffff800204cd <ZydisAreMvexFeaturesCompatible+0x6ba>
ffffffff8001ff96:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8001ff9a:	8b 80 7c 01 00 00    	mov    0x17c(%rax),%eax
ffffffff8001ffa0:	85 c0                	test   %eax,%eax
ffffffff8001ffa2:	75 2f                	jne    ffffffff8001ffd3 <ZydisAreMvexFeaturesCompatible+0x1c0>
ffffffff8001ffa4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8001ffa8:	8b 80 80 01 00 00    	mov    0x180(%rax),%eax
ffffffff8001ffae:	85 c0                	test   %eax,%eax
ffffffff8001ffb0:	75 21                	jne    ffffffff8001ffd3 <ZydisAreMvexFeaturesCompatible+0x1c0>
ffffffff8001ffb2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8001ffb6:	8b 80 88 01 00 00    	mov    0x188(%rax),%eax
ffffffff8001ffbc:	85 c0                	test   %eax,%eax
ffffffff8001ffbe:	75 13                	jne    ffffffff8001ffd3 <ZydisAreMvexFeaturesCompatible+0x1c0>
ffffffff8001ffc0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8001ffc4:	0f b6 80 8d 01 00 00 	movzbl 0x18d(%rax),%eax
ffffffff8001ffcb:	84 c0                	test   %al,%al
ffffffff8001ffcd:	0f 84 d9 04 00 00    	je     ffffffff800204ac <ZydisAreMvexFeaturesCompatible+0x699>
ffffffff8001ffd3:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8001ffd8:	e9 f0 04 00 00       	jmp    ffffffff800204cd <ZydisAreMvexFeaturesCompatible+0x6ba>
ffffffff8001ffdd:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8001ffe1:	8b 80 7c 01 00 00    	mov    0x17c(%rax),%eax
ffffffff8001ffe7:	85 c0                	test   %eax,%eax
ffffffff8001ffe9:	75 3d                	jne    ffffffff80020028 <ZydisAreMvexFeaturesCompatible+0x215>
ffffffff8001ffeb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8001ffef:	8b 80 80 01 00 00    	mov    0x180(%rax),%eax
ffffffff8001fff5:	85 c0                	test   %eax,%eax
ffffffff8001fff7:	75 2f                	jne    ffffffff80020028 <ZydisAreMvexFeaturesCompatible+0x215>
ffffffff8001fff9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8001fffd:	8b 80 84 01 00 00    	mov    0x184(%rax),%eax
ffffffff80020003:	85 c0                	test   %eax,%eax
ffffffff80020005:	75 21                	jne    ffffffff80020028 <ZydisAreMvexFeaturesCompatible+0x215>
ffffffff80020007:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8002000b:	8b 80 88 01 00 00    	mov    0x188(%rax),%eax
ffffffff80020011:	85 c0                	test   %eax,%eax
ffffffff80020013:	75 13                	jne    ffffffff80020028 <ZydisAreMvexFeaturesCompatible+0x215>
ffffffff80020015:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80020019:	0f b6 80 8d 01 00 00 	movzbl 0x18d(%rax),%eax
ffffffff80020020:	84 c0                	test   %al,%al
ffffffff80020022:	0f 84 87 04 00 00    	je     ffffffff800204af <ZydisAreMvexFeaturesCompatible+0x69c>
ffffffff80020028:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8002002d:	e9 9b 04 00 00       	jmp    ffffffff800204cd <ZydisAreMvexFeaturesCompatible+0x6ba>
ffffffff80020032:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80020036:	8b 80 7c 01 00 00    	mov    0x17c(%rax),%eax
ffffffff8002003c:	85 c0                	test   %eax,%eax
ffffffff8002003e:	75 2f                	jne    ffffffff8002006f <ZydisAreMvexFeaturesCompatible+0x25c>
ffffffff80020040:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80020044:	8b 80 80 01 00 00    	mov    0x180(%rax),%eax
ffffffff8002004a:	85 c0                	test   %eax,%eax
ffffffff8002004c:	75 21                	jne    ffffffff8002006f <ZydisAreMvexFeaturesCompatible+0x25c>
ffffffff8002004e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80020052:	8b 80 84 01 00 00    	mov    0x184(%rax),%eax
ffffffff80020058:	85 c0                	test   %eax,%eax
ffffffff8002005a:	75 13                	jne    ffffffff8002006f <ZydisAreMvexFeaturesCompatible+0x25c>
ffffffff8002005c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80020060:	0f b6 80 8c 01 00 00 	movzbl 0x18c(%rax),%eax
ffffffff80020067:	84 c0                	test   %al,%al
ffffffff80020069:	0f 84 43 04 00 00    	je     ffffffff800204b2 <ZydisAreMvexFeaturesCompatible+0x69f>
ffffffff8002006f:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80020074:	e9 54 04 00 00       	jmp    ffffffff800204cd <ZydisAreMvexFeaturesCompatible+0x6ba>
ffffffff80020079:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8002007d:	8b 80 84 01 00 00    	mov    0x184(%rax),%eax
ffffffff80020083:	85 c0                	test   %eax,%eax
ffffffff80020085:	75 1d                	jne    ffffffff800200a4 <ZydisAreMvexFeaturesCompatible+0x291>
ffffffff80020087:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8002008b:	8b 80 88 01 00 00    	mov    0x188(%rax),%eax
ffffffff80020091:	85 c0                	test   %eax,%eax
ffffffff80020093:	75 0f                	jne    ffffffff800200a4 <ZydisAreMvexFeaturesCompatible+0x291>
ffffffff80020095:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80020099:	0f b6 80 8c 01 00 00 	movzbl 0x18c(%rax),%eax
ffffffff800200a0:	84 c0                	test   %al,%al
ffffffff800200a2:	74 0a                	je     ffffffff800200ae <ZydisAreMvexFeaturesCompatible+0x29b>
ffffffff800200a4:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800200a9:	e9 1f 04 00 00       	jmp    ffffffff800204cd <ZydisAreMvexFeaturesCompatible+0x6ba>
ffffffff800200ae:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff800200b2:	8b 80 7c 01 00 00    	mov    0x17c(%rax),%eax
ffffffff800200b8:	85 c0                	test   %eax,%eax
ffffffff800200ba:	74 28                	je     ffffffff800200e4 <ZydisAreMvexFeaturesCompatible+0x2d1>
ffffffff800200bc:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff800200c0:	8b 80 7c 01 00 00    	mov    0x17c(%rax),%eax
ffffffff800200c6:	83 f8 04             	cmp    $0x4,%eax
ffffffff800200c9:	74 19                	je     ffffffff800200e4 <ZydisAreMvexFeaturesCompatible+0x2d1>
ffffffff800200cb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff800200cf:	8b 80 7c 01 00 00    	mov    0x17c(%rax),%eax
ffffffff800200d5:	83 f8 0b             	cmp    $0xb,%eax
ffffffff800200d8:	74 0a                	je     ffffffff800200e4 <ZydisAreMvexFeaturesCompatible+0x2d1>
ffffffff800200da:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800200df:	e9 e9 03 00 00       	jmp    ffffffff800204cd <ZydisAreMvexFeaturesCompatible+0x6ba>
ffffffff800200e4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff800200e8:	8b 80 80 01 00 00    	mov    0x180(%rax),%eax
ffffffff800200ee:	85 c0                	test   %eax,%eax
ffffffff800200f0:	74 46                	je     ffffffff80020138 <ZydisAreMvexFeaturesCompatible+0x325>
ffffffff800200f2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff800200f6:	8b 80 80 01 00 00    	mov    0x180(%rax),%eax
ffffffff800200fc:	83 f8 01             	cmp    $0x1,%eax
ffffffff800200ff:	74 37                	je     ffffffff80020138 <ZydisAreMvexFeaturesCompatible+0x325>
ffffffff80020101:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80020105:	8b 80 80 01 00 00    	mov    0x180(%rax),%eax
ffffffff8002010b:	83 f8 03             	cmp    $0x3,%eax
ffffffff8002010e:	74 28                	je     ffffffff80020138 <ZydisAreMvexFeaturesCompatible+0x325>
ffffffff80020110:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80020114:	8b 80 80 01 00 00    	mov    0x180(%rax),%eax
ffffffff8002011a:	83 f8 05             	cmp    $0x5,%eax
ffffffff8002011d:	74 19                	je     ffffffff80020138 <ZydisAreMvexFeaturesCompatible+0x325>
ffffffff8002011f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80020123:	8b 80 80 01 00 00    	mov    0x180(%rax),%eax
ffffffff80020129:	83 f8 04             	cmp    $0x4,%eax
ffffffff8002012c:	74 0a                	je     ffffffff80020138 <ZydisAreMvexFeaturesCompatible+0x325>
ffffffff8002012e:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80020133:	e9 95 03 00 00       	jmp    ffffffff800204cd <ZydisAreMvexFeaturesCompatible+0x6ba>
ffffffff80020138:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8002013c:	8b 80 7c 01 00 00    	mov    0x17c(%rax),%eax
ffffffff80020142:	85 c0                	test   %eax,%eax
ffffffff80020144:	0f 84 6b 03 00 00    	je     ffffffff800204b5 <ZydisAreMvexFeaturesCompatible+0x6a2>
ffffffff8002014a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8002014e:	8b 80 80 01 00 00    	mov    0x180(%rax),%eax
ffffffff80020154:	85 c0                	test   %eax,%eax
ffffffff80020156:	0f 84 59 03 00 00    	je     ffffffff800204b5 <ZydisAreMvexFeaturesCompatible+0x6a2>
ffffffff8002015c:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80020161:	e9 67 03 00 00       	jmp    ffffffff800204cd <ZydisAreMvexFeaturesCompatible+0x6ba>
ffffffff80020166:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8002016a:	8b 80 84 01 00 00    	mov    0x184(%rax),%eax
ffffffff80020170:	85 c0                	test   %eax,%eax
ffffffff80020172:	75 1d                	jne    ffffffff80020191 <ZydisAreMvexFeaturesCompatible+0x37e>
ffffffff80020174:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80020178:	8b 80 88 01 00 00    	mov    0x188(%rax),%eax
ffffffff8002017e:	85 c0                	test   %eax,%eax
ffffffff80020180:	75 0f                	jne    ffffffff80020191 <ZydisAreMvexFeaturesCompatible+0x37e>
ffffffff80020182:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80020186:	0f b6 80 8c 01 00 00 	movzbl 0x18c(%rax),%eax
ffffffff8002018d:	84 c0                	test   %al,%al
ffffffff8002018f:	74 0a                	je     ffffffff8002019b <ZydisAreMvexFeaturesCompatible+0x388>
ffffffff80020191:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80020196:	e9 32 03 00 00       	jmp    ffffffff800204cd <ZydisAreMvexFeaturesCompatible+0x6ba>
ffffffff8002019b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8002019f:	8b 80 7c 01 00 00    	mov    0x17c(%rax),%eax
ffffffff800201a5:	85 c0                	test   %eax,%eax
ffffffff800201a7:	74 28                	je     ffffffff800201d1 <ZydisAreMvexFeaturesCompatible+0x3be>
ffffffff800201a9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff800201ad:	8b 80 7c 01 00 00    	mov    0x17c(%rax),%eax
ffffffff800201b3:	83 f8 04             	cmp    $0x4,%eax
ffffffff800201b6:	74 19                	je     ffffffff800201d1 <ZydisAreMvexFeaturesCompatible+0x3be>
ffffffff800201b8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff800201bc:	8b 80 7c 01 00 00    	mov    0x17c(%rax),%eax
ffffffff800201c2:	83 f8 0b             	cmp    $0xb,%eax
ffffffff800201c5:	74 0a                	je     ffffffff800201d1 <ZydisAreMvexFeaturesCompatible+0x3be>
ffffffff800201c7:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800201cc:	e9 fc 02 00 00       	jmp    ffffffff800204cd <ZydisAreMvexFeaturesCompatible+0x6ba>
ffffffff800201d1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff800201d5:	8b 80 80 01 00 00    	mov    0x180(%rax),%eax
ffffffff800201db:	85 c0                	test   %eax,%eax
ffffffff800201dd:	74 46                	je     ffffffff80020225 <ZydisAreMvexFeaturesCompatible+0x412>
ffffffff800201df:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff800201e3:	8b 80 80 01 00 00    	mov    0x180(%rax),%eax
ffffffff800201e9:	83 f8 03             	cmp    $0x3,%eax
ffffffff800201ec:	74 37                	je     ffffffff80020225 <ZydisAreMvexFeaturesCompatible+0x412>
ffffffff800201ee:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff800201f2:	8b 80 80 01 00 00    	mov    0x180(%rax),%eax
ffffffff800201f8:	83 f8 02             	cmp    $0x2,%eax
ffffffff800201fb:	74 28                	je     ffffffff80020225 <ZydisAreMvexFeaturesCompatible+0x412>
ffffffff800201fd:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80020201:	8b 80 80 01 00 00    	mov    0x180(%rax),%eax
ffffffff80020207:	83 f8 05             	cmp    $0x5,%eax
ffffffff8002020a:	74 19                	je     ffffffff80020225 <ZydisAreMvexFeaturesCompatible+0x412>
ffffffff8002020c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80020210:	8b 80 80 01 00 00    	mov    0x180(%rax),%eax
ffffffff80020216:	83 f8 04             	cmp    $0x4,%eax
ffffffff80020219:	74 0a                	je     ffffffff80020225 <ZydisAreMvexFeaturesCompatible+0x412>
ffffffff8002021b:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80020220:	e9 a8 02 00 00       	jmp    ffffffff800204cd <ZydisAreMvexFeaturesCompatible+0x6ba>
ffffffff80020225:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80020229:	8b 80 7c 01 00 00    	mov    0x17c(%rax),%eax
ffffffff8002022f:	85 c0                	test   %eax,%eax
ffffffff80020231:	0f 84 81 02 00 00    	je     ffffffff800204b8 <ZydisAreMvexFeaturesCompatible+0x6a5>
ffffffff80020237:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8002023b:	8b 80 80 01 00 00    	mov    0x180(%rax),%eax
ffffffff80020241:	85 c0                	test   %eax,%eax
ffffffff80020243:	0f 84 6f 02 00 00    	je     ffffffff800204b8 <ZydisAreMvexFeaturesCompatible+0x6a5>
ffffffff80020249:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8002024e:	e9 7a 02 00 00       	jmp    ffffffff800204cd <ZydisAreMvexFeaturesCompatible+0x6ba>
ffffffff80020253:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80020257:	8b 80 80 01 00 00    	mov    0x180(%rax),%eax
ffffffff8002025d:	85 c0                	test   %eax,%eax
ffffffff8002025f:	75 2b                	jne    ffffffff8002028c <ZydisAreMvexFeaturesCompatible+0x479>
ffffffff80020261:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80020265:	8b 80 84 01 00 00    	mov    0x184(%rax),%eax
ffffffff8002026b:	85 c0                	test   %eax,%eax
ffffffff8002026d:	75 1d                	jne    ffffffff8002028c <ZydisAreMvexFeaturesCompatible+0x479>
ffffffff8002026f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80020273:	8b 80 88 01 00 00    	mov    0x188(%rax),%eax
ffffffff80020279:	85 c0                	test   %eax,%eax
ffffffff8002027b:	75 0f                	jne    ffffffff8002028c <ZydisAreMvexFeaturesCompatible+0x479>
ffffffff8002027d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80020281:	0f b6 80 8c 01 00 00 	movzbl 0x18c(%rax),%eax
ffffffff80020288:	84 c0                	test   %al,%al
ffffffff8002028a:	74 0a                	je     ffffffff80020296 <ZydisAreMvexFeaturesCompatible+0x483>
ffffffff8002028c:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80020291:	e9 37 02 00 00       	jmp    ffffffff800204cd <ZydisAreMvexFeaturesCompatible+0x6ba>
ffffffff80020296:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8002029a:	8b 80 7c 01 00 00    	mov    0x17c(%rax),%eax
ffffffff800202a0:	85 c0                	test   %eax,%eax
ffffffff800202a2:	0f 84 13 02 00 00    	je     ffffffff800204bb <ZydisAreMvexFeaturesCompatible+0x6a8>
ffffffff800202a8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff800202ac:	8b 80 7c 01 00 00    	mov    0x17c(%rax),%eax
ffffffff800202b2:	83 f8 04             	cmp    $0x4,%eax
ffffffff800202b5:	0f 84 00 02 00 00    	je     ffffffff800204bb <ZydisAreMvexFeaturesCompatible+0x6a8>
ffffffff800202bb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff800202bf:	8b 80 7c 01 00 00    	mov    0x17c(%rax),%eax
ffffffff800202c5:	83 f8 0b             	cmp    $0xb,%eax
ffffffff800202c8:	0f 84 ed 01 00 00    	je     ffffffff800204bb <ZydisAreMvexFeaturesCompatible+0x6a8>
ffffffff800202ce:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800202d3:	e9 f5 01 00 00       	jmp    ffffffff800204cd <ZydisAreMvexFeaturesCompatible+0x6ba>
ffffffff800202d8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff800202dc:	8b 80 80 01 00 00    	mov    0x180(%rax),%eax
ffffffff800202e2:	85 c0                	test   %eax,%eax
ffffffff800202e4:	75 2b                	jne    ffffffff80020311 <ZydisAreMvexFeaturesCompatible+0x4fe>
ffffffff800202e6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff800202ea:	8b 80 84 01 00 00    	mov    0x184(%rax),%eax
ffffffff800202f0:	85 c0                	test   %eax,%eax
ffffffff800202f2:	75 1d                	jne    ffffffff80020311 <ZydisAreMvexFeaturesCompatible+0x4fe>
ffffffff800202f4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff800202f8:	8b 80 88 01 00 00    	mov    0x188(%rax),%eax
ffffffff800202fe:	85 c0                	test   %eax,%eax
ffffffff80020300:	75 0f                	jne    ffffffff80020311 <ZydisAreMvexFeaturesCompatible+0x4fe>
ffffffff80020302:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80020306:	0f b6 80 8c 01 00 00 	movzbl 0x18c(%rax),%eax
ffffffff8002030d:	84 c0                	test   %al,%al
ffffffff8002030f:	74 0a                	je     ffffffff8002031b <ZydisAreMvexFeaturesCompatible+0x508>
ffffffff80020311:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80020316:	e9 b2 01 00 00       	jmp    ffffffff800204cd <ZydisAreMvexFeaturesCompatible+0x6ba>
ffffffff8002031b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8002031f:	8b 80 7c 01 00 00    	mov    0x17c(%rax),%eax
ffffffff80020325:	85 c0                	test   %eax,%eax
ffffffff80020327:	0f 84 91 01 00 00    	je     ffffffff800204be <ZydisAreMvexFeaturesCompatible+0x6ab>
ffffffff8002032d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80020331:	8b 80 7c 01 00 00    	mov    0x17c(%rax),%eax
ffffffff80020337:	83 f8 0b             	cmp    $0xb,%eax
ffffffff8002033a:	0f 84 7e 01 00 00    	je     ffffffff800204be <ZydisAreMvexFeaturesCompatible+0x6ab>
ffffffff80020340:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80020345:	e9 83 01 00 00       	jmp    ffffffff800204cd <ZydisAreMvexFeaturesCompatible+0x6ba>
ffffffff8002034a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8002034e:	8b 80 80 01 00 00    	mov    0x180(%rax),%eax
ffffffff80020354:	85 c0                	test   %eax,%eax
ffffffff80020356:	75 2b                	jne    ffffffff80020383 <ZydisAreMvexFeaturesCompatible+0x570>
ffffffff80020358:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8002035c:	8b 80 84 01 00 00    	mov    0x184(%rax),%eax
ffffffff80020362:	85 c0                	test   %eax,%eax
ffffffff80020364:	75 1d                	jne    ffffffff80020383 <ZydisAreMvexFeaturesCompatible+0x570>
ffffffff80020366:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8002036a:	8b 80 88 01 00 00    	mov    0x188(%rax),%eax
ffffffff80020370:	85 c0                	test   %eax,%eax
ffffffff80020372:	75 0f                	jne    ffffffff80020383 <ZydisAreMvexFeaturesCompatible+0x570>
ffffffff80020374:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80020378:	0f b6 80 8c 01 00 00 	movzbl 0x18c(%rax),%eax
ffffffff8002037f:	84 c0                	test   %al,%al
ffffffff80020381:	74 0a                	je     ffffffff8002038d <ZydisAreMvexFeaturesCompatible+0x57a>
ffffffff80020383:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80020388:	e9 40 01 00 00       	jmp    ffffffff800204cd <ZydisAreMvexFeaturesCompatible+0x6ba>
ffffffff8002038d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80020391:	8b 80 7c 01 00 00    	mov    0x17c(%rax),%eax
ffffffff80020397:	85 c0                	test   %eax,%eax
ffffffff80020399:	0f 84 22 01 00 00    	je     ffffffff800204c1 <ZydisAreMvexFeaturesCompatible+0x6ae>
ffffffff8002039f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff800203a3:	8b 80 7c 01 00 00    	mov    0x17c(%rax),%eax
ffffffff800203a9:	83 f8 03             	cmp    $0x3,%eax
ffffffff800203ac:	0f 84 0f 01 00 00    	je     ffffffff800204c1 <ZydisAreMvexFeaturesCompatible+0x6ae>
ffffffff800203b2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff800203b6:	8b 80 7c 01 00 00    	mov    0x17c(%rax),%eax
ffffffff800203bc:	83 f8 0a             	cmp    $0xa,%eax
ffffffff800203bf:	0f 84 fc 00 00 00    	je     ffffffff800204c1 <ZydisAreMvexFeaturesCompatible+0x6ae>
ffffffff800203c5:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800203ca:	e9 fe 00 00 00       	jmp    ffffffff800204cd <ZydisAreMvexFeaturesCompatible+0x6ba>
ffffffff800203cf:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff800203d3:	8b 80 7c 01 00 00    	mov    0x17c(%rax),%eax
ffffffff800203d9:	85 c0                	test   %eax,%eax
ffffffff800203db:	75 2f                	jne    ffffffff8002040c <ZydisAreMvexFeaturesCompatible+0x5f9>
ffffffff800203dd:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff800203e1:	8b 80 84 01 00 00    	mov    0x184(%rax),%eax
ffffffff800203e7:	85 c0                	test   %eax,%eax
ffffffff800203e9:	75 21                	jne    ffffffff8002040c <ZydisAreMvexFeaturesCompatible+0x5f9>
ffffffff800203eb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff800203ef:	8b 80 88 01 00 00    	mov    0x188(%rax),%eax
ffffffff800203f5:	85 c0                	test   %eax,%eax
ffffffff800203f7:	75 13                	jne    ffffffff8002040c <ZydisAreMvexFeaturesCompatible+0x5f9>
ffffffff800203f9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff800203fd:	0f b6 80 8c 01 00 00 	movzbl 0x18c(%rax),%eax
ffffffff80020404:	84 c0                	test   %al,%al
ffffffff80020406:	0f 84 b8 00 00 00    	je     ffffffff800204c4 <ZydisAreMvexFeaturesCompatible+0x6b1>
ffffffff8002040c:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80020411:	e9 b7 00 00 00       	jmp    ffffffff800204cd <ZydisAreMvexFeaturesCompatible+0x6ba>
ffffffff80020416:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8002041a:	8b 80 7c 01 00 00    	mov    0x17c(%rax),%eax
ffffffff80020420:	85 c0                	test   %eax,%eax
ffffffff80020422:	75 2b                	jne    ffffffff8002044f <ZydisAreMvexFeaturesCompatible+0x63c>
ffffffff80020424:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80020428:	8b 80 84 01 00 00    	mov    0x184(%rax),%eax
ffffffff8002042e:	85 c0                	test   %eax,%eax
ffffffff80020430:	75 1d                	jne    ffffffff8002044f <ZydisAreMvexFeaturesCompatible+0x63c>
ffffffff80020432:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80020436:	8b 80 88 01 00 00    	mov    0x188(%rax),%eax
ffffffff8002043c:	85 c0                	test   %eax,%eax
ffffffff8002043e:	75 0f                	jne    ffffffff8002044f <ZydisAreMvexFeaturesCompatible+0x63c>
ffffffff80020440:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80020444:	0f b6 80 8c 01 00 00 	movzbl 0x18c(%rax),%eax
ffffffff8002044b:	84 c0                	test   %al,%al
ffffffff8002044d:	74 07                	je     ffffffff80020456 <ZydisAreMvexFeaturesCompatible+0x643>
ffffffff8002044f:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80020454:	eb 77                	jmp    ffffffff800204cd <ZydisAreMvexFeaturesCompatible+0x6ba>
ffffffff80020456:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8002045a:	8b 80 80 01 00 00    	mov    0x180(%rax),%eax
ffffffff80020460:	85 c0                	test   %eax,%eax
ffffffff80020462:	74 63                	je     ffffffff800204c7 <ZydisAreMvexFeaturesCompatible+0x6b4>
ffffffff80020464:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80020468:	8b 80 80 01 00 00    	mov    0x180(%rax),%eax
ffffffff8002046e:	83 f8 03             	cmp    $0x3,%eax
ffffffff80020471:	74 54                	je     ffffffff800204c7 <ZydisAreMvexFeaturesCompatible+0x6b4>
ffffffff80020473:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80020477:	8b 80 80 01 00 00    	mov    0x180(%rax),%eax
ffffffff8002047d:	83 f8 02             	cmp    $0x2,%eax
ffffffff80020480:	74 45                	je     ffffffff800204c7 <ZydisAreMvexFeaturesCompatible+0x6b4>
ffffffff80020482:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80020486:	8b 80 80 01 00 00    	mov    0x180(%rax),%eax
ffffffff8002048c:	83 f8 05             	cmp    $0x5,%eax
ffffffff8002048f:	74 36                	je     ffffffff800204c7 <ZydisAreMvexFeaturesCompatible+0x6b4>
ffffffff80020491:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80020495:	8b 80 80 01 00 00    	mov    0x180(%rax),%eax
ffffffff8002049b:	83 f8 04             	cmp    $0x4,%eax
ffffffff8002049e:	74 27                	je     ffffffff800204c7 <ZydisAreMvexFeaturesCompatible+0x6b4>
ffffffff800204a0:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800204a5:	eb 26                	jmp    ffffffff800204cd <ZydisAreMvexFeaturesCompatible+0x6ba>
ffffffff800204a7:	eb fe                	jmp    ffffffff800204a7 <ZydisAreMvexFeaturesCompatible+0x694>
ffffffff800204a9:	90                   	nop
ffffffff800204aa:	eb 1c                	jmp    ffffffff800204c8 <ZydisAreMvexFeaturesCompatible+0x6b5>
ffffffff800204ac:	90                   	nop
ffffffff800204ad:	eb 19                	jmp    ffffffff800204c8 <ZydisAreMvexFeaturesCompatible+0x6b5>
ffffffff800204af:	90                   	nop
ffffffff800204b0:	eb 16                	jmp    ffffffff800204c8 <ZydisAreMvexFeaturesCompatible+0x6b5>
ffffffff800204b2:	90                   	nop
ffffffff800204b3:	eb 13                	jmp    ffffffff800204c8 <ZydisAreMvexFeaturesCompatible+0x6b5>
ffffffff800204b5:	90                   	nop
ffffffff800204b6:	eb 10                	jmp    ffffffff800204c8 <ZydisAreMvexFeaturesCompatible+0x6b5>
ffffffff800204b8:	90                   	nop
ffffffff800204b9:	eb 0d                	jmp    ffffffff800204c8 <ZydisAreMvexFeaturesCompatible+0x6b5>
ffffffff800204bb:	90                   	nop
ffffffff800204bc:	eb 0a                	jmp    ffffffff800204c8 <ZydisAreMvexFeaturesCompatible+0x6b5>
ffffffff800204be:	90                   	nop
ffffffff800204bf:	eb 07                	jmp    ffffffff800204c8 <ZydisAreMvexFeaturesCompatible+0x6b5>
ffffffff800204c1:	90                   	nop
ffffffff800204c2:	eb 04                	jmp    ffffffff800204c8 <ZydisAreMvexFeaturesCompatible+0x6b5>
ffffffff800204c4:	90                   	nop
ffffffff800204c5:	eb 01                	jmp    ffffffff800204c8 <ZydisAreMvexFeaturesCompatible+0x6b5>
ffffffff800204c7:	90                   	nop
ffffffff800204c8:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff800204cd:	c9                   	leave  
ffffffff800204ce:	c3                   	ret    

ffffffff800204cf <ZydisCheckConstraints>:
ffffffff800204cf:	f3 0f 1e fa          	endbr64 
ffffffff800204d3:	55                   	push   %rbp
ffffffff800204d4:	48 89 e5             	mov    %rsp,%rbp
ffffffff800204d7:	48 83 ec 60          	sub    $0x60,%rsp
ffffffff800204db:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
ffffffff800204df:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff800204e3:	48 8b 00             	mov    (%rax),%rax
ffffffff800204e6:	48 83 c0 30          	add    $0x30,%rax
ffffffff800204ea:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff800204ee:	c6 45 ff 00          	movb   $0x0,-0x1(%rbp)
ffffffff800204f2:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff800204f6:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff800204fa:	0f b6 40 06          	movzbl 0x6(%rax),%eax
ffffffff800204fe:	83 e0 07             	and    $0x7,%eax
ffffffff80020501:	0f b6 c0             	movzbl %al,%eax
ffffffff80020504:	83 f8 05             	cmp    $0x5,%eax
ffffffff80020507:	0f 84 9f 01 00 00    	je     ffffffff800206ac <ZydisCheckConstraints+0x1dd>
ffffffff8002050d:	83 f8 05             	cmp    $0x5,%eax
ffffffff80020510:	0f 8f b5 01 00 00    	jg     ffffffff800206cb <ZydisCheckConstraints+0x1fc>
ffffffff80020516:	83 f8 03             	cmp    $0x3,%eax
ffffffff80020519:	74 0e                	je     ffffffff80020529 <ZydisCheckConstraints+0x5a>
ffffffff8002051b:	83 f8 04             	cmp    $0x4,%eax
ffffffff8002051e:	0f 84 e1 00 00 00    	je     ffffffff80020605 <ZydisCheckConstraints+0x136>
ffffffff80020524:	e9 a2 01 00 00       	jmp    ffffffff800206cb <ZydisCheckConstraints+0x1fc>
ffffffff80020529:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff8002052d:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff80020531:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
ffffffff80020535:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80020539:	0f b6 40 0c          	movzbl 0xc(%rax),%eax
ffffffff8002053d:	83 e0 08             	and    $0x8,%eax
ffffffff80020540:	84 c0                	test   %al,%al
ffffffff80020542:	74 60                	je     ffffffff800205a4 <ZydisCheckConstraints+0xd5>
ffffffff80020544:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80020548:	8b 40 04             	mov    0x4(%rax),%eax
ffffffff8002054b:	89 c7                	mov    %eax,%edi
ffffffff8002054d:	e8 0f 52 00 00       	call   ffffffff80025761 <ZydisRegisterGetId>
ffffffff80020552:	88 45 c7             	mov    %al,-0x39(%rbp)
ffffffff80020555:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80020559:	48 83 c0 40          	add    $0x40,%rax
ffffffff8002055d:	8b 40 14             	mov    0x14(%rax),%eax
ffffffff80020560:	89 c7                	mov    %eax,%edi
ffffffff80020562:	e8 fa 51 00 00       	call   ffffffff80025761 <ZydisRegisterGetId>
ffffffff80020567:	88 45 c6             	mov    %al,-0x3a(%rbp)
ffffffff8002056a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8002056e:	48 83 e8 80          	sub    $0xffffffffffffff80,%rax
ffffffff80020572:	8b 40 04             	mov    0x4(%rax),%eax
ffffffff80020575:	89 c7                	mov    %eax,%edi
ffffffff80020577:	e8 e5 51 00 00       	call   ffffffff80025761 <ZydisRegisterGetId>
ffffffff8002057c:	88 45 c5             	mov    %al,-0x3b(%rbp)
ffffffff8002057f:	0f b6 45 c7          	movzbl -0x39(%rbp),%eax
ffffffff80020583:	3a 45 c6             	cmp    -0x3a(%rbp),%al
ffffffff80020586:	74 12                	je     ffffffff8002059a <ZydisCheckConstraints+0xcb>
ffffffff80020588:	0f b6 45 c7          	movzbl -0x39(%rbp),%eax
ffffffff8002058c:	3a 45 c5             	cmp    -0x3b(%rbp),%al
ffffffff8002058f:	74 09                	je     ffffffff8002059a <ZydisCheckConstraints+0xcb>
ffffffff80020591:	0f b6 45 c6          	movzbl -0x3a(%rbp),%eax
ffffffff80020595:	3a 45 c5             	cmp    -0x3b(%rbp),%al
ffffffff80020598:	75 0a                	jne    ffffffff800205a4 <ZydisCheckConstraints+0xd5>
ffffffff8002059a:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8002059f:	e9 7b 01 00 00       	jmp    ffffffff8002071f <ZydisCheckConstraints+0x250>
ffffffff800205a4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff800205a8:	0f b6 40 0c          	movzbl 0xc(%rax),%eax
ffffffff800205ac:	83 e0 20             	and    $0x20,%eax
ffffffff800205af:	84 c0                	test   %al,%al
ffffffff800205b1:	74 48                	je     ffffffff800205fb <ZydisCheckConstraints+0x12c>
ffffffff800205b3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff800205b7:	8b 40 04             	mov    0x4(%rax),%eax
ffffffff800205ba:	89 45 c0             	mov    %eax,-0x40(%rbp)
ffffffff800205bd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff800205c1:	48 83 c0 40          	add    $0x40,%rax
ffffffff800205c5:	8b 40 04             	mov    0x4(%rax),%eax
ffffffff800205c8:	89 45 bc             	mov    %eax,-0x44(%rbp)
ffffffff800205cb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff800205cf:	48 83 e8 80          	sub    $0xffffffffffffff80,%rax
ffffffff800205d3:	8b 40 04             	mov    0x4(%rax),%eax
ffffffff800205d6:	89 45 b8             	mov    %eax,-0x48(%rbp)
ffffffff800205d9:	8b 45 c0             	mov    -0x40(%rbp),%eax
ffffffff800205dc:	3b 45 bc             	cmp    -0x44(%rbp),%eax
ffffffff800205df:	74 10                	je     ffffffff800205f1 <ZydisCheckConstraints+0x122>
ffffffff800205e1:	8b 45 bc             	mov    -0x44(%rbp),%eax
ffffffff800205e4:	3b 45 b8             	cmp    -0x48(%rbp),%eax
ffffffff800205e7:	74 08                	je     ffffffff800205f1 <ZydisCheckConstraints+0x122>
ffffffff800205e9:	8b 45 c0             	mov    -0x40(%rbp),%eax
ffffffff800205ec:	3b 45 b8             	cmp    -0x48(%rbp),%eax
ffffffff800205ef:	75 0a                	jne    ffffffff800205fb <ZydisCheckConstraints+0x12c>
ffffffff800205f1:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800205f6:	e9 24 01 00 00       	jmp    ffffffff8002071f <ZydisCheckConstraints+0x250>
ffffffff800205fb:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff80020600:	e9 1a 01 00 00       	jmp    ffffffff8002071f <ZydisCheckConstraints+0x250>
ffffffff80020605:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff80020609:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff8002060d:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff80020611:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80020615:	0f b6 40 0c          	movzbl 0xc(%rax),%eax
ffffffff80020619:	c0 e8 03             	shr    $0x3,%al
ffffffff8002061c:	83 e0 01             	and    $0x1,%eax
ffffffff8002061f:	88 45 ff             	mov    %al,-0x1(%rbp)
ffffffff80020622:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80020626:	0f b6 40 0c          	movzbl 0xc(%rax),%eax
ffffffff8002062a:	83 e0 10             	and    $0x10,%eax
ffffffff8002062d:	84 c0                	test   %al,%al
ffffffff8002062f:	0f 84 9d 00 00 00    	je     ffffffff800206d2 <ZydisCheckConstraints+0x203>
ffffffff80020635:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80020639:	48 05 c0 00 00 00    	add    $0xc0,%rax
ffffffff8002063f:	8b 00                	mov    (%rax),%eax
ffffffff80020641:	83 f8 01             	cmp    $0x1,%eax
ffffffff80020644:	74 0f                	je     ffffffff80020655 <ZydisCheckConstraints+0x186>
ffffffff80020646:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8002064a:	48 05 c0 00 00 00    	add    $0xc0,%rax
ffffffff80020650:	8b 00                	mov    (%rax),%eax
ffffffff80020652:	83 f8 02             	cmp    $0x2,%eax
ffffffff80020655:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80020659:	8b 40 04             	mov    0x4(%rax),%eax
ffffffff8002065c:	89 45 dc             	mov    %eax,-0x24(%rbp)
ffffffff8002065f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80020663:	48 83 e8 80          	sub    $0xffffffffffffff80,%rax
ffffffff80020667:	8b 40 04             	mov    0x4(%rax),%eax
ffffffff8002066a:	89 45 d8             	mov    %eax,-0x28(%rbp)
ffffffff8002066d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80020671:	48 05 c0 00 00 00    	add    $0xc0,%rax
ffffffff80020677:	8b 00                	mov    (%rax),%eax
ffffffff80020679:	83 f8 01             	cmp    $0x1,%eax
ffffffff8002067c:	75 0f                	jne    ffffffff8002068d <ZydisCheckConstraints+0x1be>
ffffffff8002067e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80020682:	48 05 c0 00 00 00    	add    $0xc0,%rax
ffffffff80020688:	8b 40 04             	mov    0x4(%rax),%eax
ffffffff8002068b:	eb 05                	jmp    ffffffff80020692 <ZydisCheckConstraints+0x1c3>
ffffffff8002068d:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80020692:	89 45 d4             	mov    %eax,-0x2c(%rbp)
ffffffff80020695:	8b 45 dc             	mov    -0x24(%rbp),%eax
ffffffff80020698:	3b 45 d8             	cmp    -0x28(%rbp),%eax
ffffffff8002069b:	74 08                	je     ffffffff800206a5 <ZydisCheckConstraints+0x1d6>
ffffffff8002069d:	8b 45 dc             	mov    -0x24(%rbp),%eax
ffffffff800206a0:	3b 45 d4             	cmp    -0x2c(%rbp),%eax
ffffffff800206a3:	75 2d                	jne    ffffffff800206d2 <ZydisCheckConstraints+0x203>
ffffffff800206a5:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800206aa:	eb 73                	jmp    ffffffff8002071f <ZydisCheckConstraints+0x250>
ffffffff800206ac:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff800206b0:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff800206b4:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff800206b8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800206bc:	0f b6 40 0c          	movzbl 0xc(%rax),%eax
ffffffff800206c0:	c0 e8 03             	shr    $0x3,%al
ffffffff800206c3:	83 e0 01             	and    $0x1,%eax
ffffffff800206c6:	88 45 ff             	mov    %al,-0x1(%rbp)
ffffffff800206c9:	eb 08                	jmp    ffffffff800206d3 <ZydisCheckConstraints+0x204>
ffffffff800206cb:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff800206d0:	eb 4d                	jmp    ffffffff8002071f <ZydisCheckConstraints+0x250>
ffffffff800206d2:	90                   	nop
ffffffff800206d3:	80 7d ff 00          	cmpb   $0x0,-0x1(%rbp)
ffffffff800206d7:	74 41                	je     ffffffff8002071a <ZydisCheckConstraints+0x24b>
ffffffff800206d9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff800206dd:	8b 00                	mov    (%rax),%eax
ffffffff800206df:	83 f8 01             	cmp    $0x1,%eax
ffffffff800206e2:	75 36                	jne    ffffffff8002071a <ZydisCheckConstraints+0x24b>
ffffffff800206e4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff800206e8:	8b 40 04             	mov    0x4(%rax),%eax
ffffffff800206eb:	89 c7                	mov    %eax,%edi
ffffffff800206ed:	e8 6f 50 00 00       	call   ffffffff80025761 <ZydisRegisterGetId>
ffffffff800206f2:	88 45 d3             	mov    %al,-0x2d(%rbp)
ffffffff800206f5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff800206f9:	48 83 e8 80          	sub    $0xffffffffffffff80,%rax
ffffffff800206fd:	8b 40 14             	mov    0x14(%rax),%eax
ffffffff80020700:	89 c7                	mov    %eax,%edi
ffffffff80020702:	e8 5a 50 00 00       	call   ffffffff80025761 <ZydisRegisterGetId>
ffffffff80020707:	88 45 d2             	mov    %al,-0x2e(%rbp)
ffffffff8002070a:	0f b6 45 d3          	movzbl -0x2d(%rbp),%eax
ffffffff8002070e:	3a 45 d2             	cmp    -0x2e(%rbp),%al
ffffffff80020711:	75 07                	jne    ffffffff8002071a <ZydisCheckConstraints+0x24b>
ffffffff80020713:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80020718:	eb 05                	jmp    ffffffff8002071f <ZydisCheckConstraints+0x250>
ffffffff8002071a:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8002071f:	c9                   	leave  
ffffffff80020720:	c3                   	ret    

ffffffff80020721 <ZydisIsDefinitionCompatible>:
ffffffff80020721:	f3 0f 1e fa          	endbr64 
ffffffff80020725:	55                   	push   %rbp
ffffffff80020726:	48 89 e5             	mov    %rsp,%rbp
ffffffff80020729:	48 83 ec 30          	sub    $0x30,%rsp
ffffffff8002072d:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
ffffffff80020731:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
ffffffff80020735:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80020739:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff8002073d:	48 89 c7             	mov    %rax,%rdi
ffffffff80020740:	e8 13 51 01 00       	call   ffffffff80035858 <ZydisGetOperandDefinitions>
ffffffff80020745:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff80020749:	48 89 42 18          	mov    %rax,0x18(%rdx)
ffffffff8002074d:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
ffffffff80020751:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80020755:	48 89 d6             	mov    %rdx,%rsi
ffffffff80020758:	48 89 c7             	mov    %rax,%rdi
ffffffff8002075b:	e8 db f4 ff ff       	call   ffffffff8001fc3b <ZydisAreEvexFeaturesCompatible>
ffffffff80020760:	84 c0                	test   %al,%al
ffffffff80020762:	75 0a                	jne    ffffffff8002076e <ZydisIsDefinitionCompatible+0x4d>
ffffffff80020764:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80020769:	e9 4d 02 00 00       	jmp    ffffffff800209bb <ZydisIsDefinitionCompatible+0x29a>
ffffffff8002076e:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
ffffffff80020772:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80020776:	48 89 d6             	mov    %rdx,%rsi
ffffffff80020779:	48 89 c7             	mov    %rax,%rdi
ffffffff8002077c:	e8 92 f6 ff ff       	call   ffffffff8001fe13 <ZydisAreMvexFeaturesCompatible>
ffffffff80020781:	84 c0                	test   %al,%al
ffffffff80020783:	75 0a                	jne    ffffffff8002078f <ZydisIsDefinitionCompatible+0x6e>
ffffffff80020785:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8002078a:	e9 2c 02 00 00       	jmp    ffffffff800209bb <ZydisIsDefinitionCompatible+0x29a>
ffffffff8002078f:	c6 45 ff 00          	movb   $0x0,-0x1(%rbp)
ffffffff80020793:	e9 ec 00 00 00       	jmp    ffffffff80020884 <ZydisIsDefinitionCompatible+0x163>
ffffffff80020798:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
ffffffff8002079c:	48 98                	cltq   
ffffffff8002079e:	48 c1 e0 06          	shl    $0x6,%rax
ffffffff800207a2:	48 8d 50 30          	lea    0x30(%rax),%rdx
ffffffff800207a6:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff800207aa:	48 01 d0             	add    %rdx,%rax
ffffffff800207ad:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff800207b1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff800207b5:	48 8b 48 18          	mov    0x18(%rax),%rcx
ffffffff800207b9:	0f b6 55 ff          	movzbl -0x1(%rbp),%edx
ffffffff800207bd:	48 89 d0             	mov    %rdx,%rax
ffffffff800207c0:	48 01 c0             	add    %rax,%rax
ffffffff800207c3:	48 01 d0             	add    %rdx,%rax
ffffffff800207c6:	48 c1 e0 02          	shl    $0x2,%rax
ffffffff800207ca:	48 01 d0             	add    %rdx,%rax
ffffffff800207cd:	48 01 c8             	add    %rcx,%rax
ffffffff800207d0:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff800207d4:	c6 45 fe 00          	movb   $0x0,-0x2(%rbp)
ffffffff800207d8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff800207dc:	8b 00                	mov    (%rax),%eax
ffffffff800207de:	83 f8 04             	cmp    $0x4,%eax
ffffffff800207e1:	74 6f                	je     ffffffff80020852 <ZydisIsDefinitionCompatible+0x131>
ffffffff800207e3:	83 f8 04             	cmp    $0x4,%eax
ffffffff800207e6:	0f 87 82 00 00 00    	ja     ffffffff8002086e <ZydisIsDefinitionCompatible+0x14d>
ffffffff800207ec:	83 f8 03             	cmp    $0x3,%eax
ffffffff800207ef:	74 49                	je     ffffffff8002083a <ZydisIsDefinitionCompatible+0x119>
ffffffff800207f1:	83 f8 03             	cmp    $0x3,%eax
ffffffff800207f4:	77 78                	ja     ffffffff8002086e <ZydisIsDefinitionCompatible+0x14d>
ffffffff800207f6:	83 f8 01             	cmp    $0x1,%eax
ffffffff800207f9:	74 07                	je     ffffffff80020802 <ZydisIsDefinitionCompatible+0xe1>
ffffffff800207fb:	83 f8 02             	cmp    $0x2,%eax
ffffffff800207fe:	74 1e                	je     ffffffff8002081e <ZydisIsDefinitionCompatible+0xfd>
ffffffff80020800:	eb 6c                	jmp    ffffffff8002086e <ZydisIsDefinitionCompatible+0x14d>
ffffffff80020802:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff80020806:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
ffffffff8002080a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8002080e:	48 89 ce             	mov    %rcx,%rsi
ffffffff80020811:	48 89 c7             	mov    %rax,%rdi
ffffffff80020814:	e8 a1 dc ff ff       	call   ffffffff8001e4ba <ZydisIsRegisterOperandCompatible>
ffffffff80020819:	88 45 fe             	mov    %al,-0x2(%rbp)
ffffffff8002081c:	eb 52                	jmp    ffffffff80020870 <ZydisIsDefinitionCompatible+0x14f>
ffffffff8002081e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff80020822:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
ffffffff80020826:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8002082a:	48 89 ce             	mov    %rcx,%rsi
ffffffff8002082d:	48 89 c7             	mov    %rax,%rdi
ffffffff80020830:	e8 6d e4 ff ff       	call   ffffffff8001eca2 <ZydisIsMemoryOperandCompatible>
ffffffff80020835:	88 45 fe             	mov    %al,-0x2(%rbp)
ffffffff80020838:	eb 36                	jmp    ffffffff80020870 <ZydisIsDefinitionCompatible+0x14f>
ffffffff8002083a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff8002083e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80020842:	48 89 d6             	mov    %rdx,%rsi
ffffffff80020845:	48 89 c7             	mov    %rax,%rdi
ffffffff80020848:	e8 00 f1 ff ff       	call   ffffffff8001f94d <ZydisIsPointerOperandCompatible>
ffffffff8002084d:	88 45 fe             	mov    %al,-0x2(%rbp)
ffffffff80020850:	eb 1e                	jmp    ffffffff80020870 <ZydisIsDefinitionCompatible+0x14f>
ffffffff80020852:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff80020856:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
ffffffff8002085a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8002085e:	48 89 ce             	mov    %rcx,%rsi
ffffffff80020861:	48 89 c7             	mov    %rax,%rdi
ffffffff80020864:	e8 98 f1 ff ff       	call   ffffffff8001fa01 <ZydisIsImmediateOperandCompabile>
ffffffff80020869:	88 45 fe             	mov    %al,-0x2(%rbp)
ffffffff8002086c:	eb 02                	jmp    ffffffff80020870 <ZydisIsDefinitionCompatible+0x14f>
ffffffff8002086e:	eb fe                	jmp    ffffffff8002086e <ZydisIsDefinitionCompatible+0x14d>
ffffffff80020870:	80 7d fe 00          	cmpb   $0x0,-0x2(%rbp)
ffffffff80020874:	75 0a                	jne    ffffffff80020880 <ZydisIsDefinitionCompatible+0x15f>
ffffffff80020876:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8002087b:	e9 3b 01 00 00       	jmp    ffffffff800209bb <ZydisIsDefinitionCompatible+0x29a>
ffffffff80020880:	80 45 ff 01          	addb   $0x1,-0x1(%rbp)
ffffffff80020884:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff80020888:	0f b6 40 28          	movzbl 0x28(%rax),%eax
ffffffff8002088c:	38 45 ff             	cmp    %al,-0x1(%rbp)
ffffffff8002088f:	0f 82 03 ff ff ff    	jb     ffffffff80020798 <ZydisIsDefinitionCompatible+0x77>
ffffffff80020895:	c6 45 fd 00          	movb   $0x0,-0x3(%rbp)
ffffffff80020899:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8002089d:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff800208a1:	0f b6 40 08          	movzbl 0x8(%rax),%eax
ffffffff800208a5:	83 e0 60             	and    $0x60,%eax
ffffffff800208a8:	84 c0                	test   %al,%al
ffffffff800208aa:	0f 84 be 00 00 00    	je     ffffffff8002096e <ZydisIsDefinitionCompatible+0x24d>
ffffffff800208b0:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff800208b4:	8b 40 1c             	mov    0x1c(%rax),%eax
ffffffff800208b7:	83 f8 04             	cmp    $0x4,%eax
ffffffff800208ba:	0f 87 a8 00 00 00    	ja     ffffffff80020968 <ZydisIsDefinitionCompatible+0x247>
ffffffff800208c0:	89 c0                	mov    %eax,%eax
ffffffff800208c2:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
ffffffff800208c9:	00 
ffffffff800208ca:	48 8d 05 97 d5 01 00 	lea    0x1d597(%rip),%rax        # ffffffff8003de68 <zero.0+0x240>
ffffffff800208d1:	8b 04 02             	mov    (%rdx,%rax,1),%eax
ffffffff800208d4:	48 98                	cltq   
ffffffff800208d6:	48 8d 15 8b d5 01 00 	lea    0x1d58b(%rip),%rdx        # ffffffff8003de68 <zero.0+0x240>
ffffffff800208dd:	48 01 d0             	add    %rdx,%rax
ffffffff800208e0:	3e ff e0             	notrack jmp *%rax
ffffffff800208e3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff800208e7:	0f b6 40 35          	movzbl 0x35(%rax),%eax
ffffffff800208eb:	84 c0                	test   %al,%al
ffffffff800208ed:	74 13                	je     ffffffff80020902 <ZydisIsDefinitionCompatible+0x1e1>
ffffffff800208ef:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff800208f3:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff800208f7:	0f b6 40 08          	movzbl 0x8(%rax),%eax
ffffffff800208fb:	83 e0 60             	and    $0x60,%eax
ffffffff800208fe:	3c 20                	cmp    $0x20,%al
ffffffff80020900:	74 6b                	je     ffffffff8002096d <ZydisIsDefinitionCompatible+0x24c>
ffffffff80020902:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80020907:	e9 af 00 00 00       	jmp    ffffffff800209bb <ZydisIsDefinitionCompatible+0x29a>
ffffffff8002090c:	c6 45 fd 10          	movb   $0x10,-0x3(%rbp)
ffffffff80020910:	eb 5c                	jmp    ffffffff8002096e <ZydisIsDefinitionCompatible+0x24d>
ffffffff80020912:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80020916:	0f b6 40 35          	movzbl 0x35(%rax),%eax
ffffffff8002091a:	84 c0                	test   %al,%al
ffffffff8002091c:	74 27                	je     ffffffff80020945 <ZydisIsDefinitionCompatible+0x224>
ffffffff8002091e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80020922:	48 8b 00             	mov    (%rax),%rax
ffffffff80020925:	8b 00                	mov    (%rax),%eax
ffffffff80020927:	85 c0                	test   %eax,%eax
ffffffff80020929:	75 1a                	jne    ffffffff80020945 <ZydisIsDefinitionCompatible+0x224>
ffffffff8002092b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8002092f:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff80020933:	0f b6 40 04          	movzbl 0x4(%rax),%eax
ffffffff80020937:	83 e0 0e             	and    $0xe,%eax
ffffffff8002093a:	3c 0a                	cmp    $0xa,%al
ffffffff8002093c:	75 07                	jne    ffffffff80020945 <ZydisIsDefinitionCompatible+0x224>
ffffffff8002093e:	b8 40 00 00 00       	mov    $0x40,%eax
ffffffff80020943:	eb 05                	jmp    ffffffff8002094a <ZydisIsDefinitionCompatible+0x229>
ffffffff80020945:	b8 20 00 00 00       	mov    $0x20,%eax
ffffffff8002094a:	88 45 fd             	mov    %al,-0x3(%rbp)
ffffffff8002094d:	eb 1f                	jmp    ffffffff8002096e <ZydisIsDefinitionCompatible+0x24d>
ffffffff8002094f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80020953:	0f b6 40 35          	movzbl 0x35(%rax),%eax
ffffffff80020957:	84 c0                	test   %al,%al
ffffffff80020959:	74 07                	je     ffffffff80020962 <ZydisIsDefinitionCompatible+0x241>
ffffffff8002095b:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80020960:	eb 59                	jmp    ffffffff800209bb <ZydisIsDefinitionCompatible+0x29a>
ffffffff80020962:	c6 45 fd 40          	movb   $0x40,-0x3(%rbp)
ffffffff80020966:	eb 06                	jmp    ffffffff8002096e <ZydisIsDefinitionCompatible+0x24d>
ffffffff80020968:	eb fe                	jmp    ffffffff80020968 <ZydisIsDefinitionCompatible+0x247>
ffffffff8002096a:	90                   	nop
ffffffff8002096b:	eb 01                	jmp    ffffffff8002096e <ZydisIsDefinitionCompatible+0x24d>
ffffffff8002096d:	90                   	nop
ffffffff8002096e:	80 7d fd 00          	cmpb   $0x0,-0x3(%rbp)
ffffffff80020972:	74 2b                	je     ffffffff8002099f <ZydisIsDefinitionCompatible+0x27e>
ffffffff80020974:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80020978:	0f b6 40 28          	movzbl 0x28(%rax),%eax
ffffffff8002097c:	84 c0                	test   %al,%al
ffffffff8002097e:	74 14                	je     ffffffff80020994 <ZydisIsDefinitionCompatible+0x273>
ffffffff80020980:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80020984:	0f b6 40 28          	movzbl 0x28(%rax),%eax
ffffffff80020988:	38 45 fd             	cmp    %al,-0x3(%rbp)
ffffffff8002098b:	74 12                	je     ffffffff8002099f <ZydisIsDefinitionCompatible+0x27e>
ffffffff8002098d:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80020992:	eb 27                	jmp    ffffffff800209bb <ZydisIsDefinitionCompatible+0x29a>
ffffffff80020994:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff80020998:	0f b6 45 fd          	movzbl -0x3(%rbp),%eax
ffffffff8002099c:	88 42 28             	mov    %al,0x28(%rdx)
ffffffff8002099f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff800209a3:	48 89 c7             	mov    %rax,%rdi
ffffffff800209a6:	e8 24 fb ff ff       	call   ffffffff800204cf <ZydisCheckConstraints>
ffffffff800209ab:	84 c0                	test   %al,%al
ffffffff800209ad:	75 07                	jne    ffffffff800209b6 <ZydisIsDefinitionCompatible+0x295>
ffffffff800209af:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800209b4:	eb 05                	jmp    ffffffff800209bb <ZydisIsDefinitionCompatible+0x29a>
ffffffff800209b6:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff800209bb:	c9                   	leave  
ffffffff800209bc:	c3                   	ret    

ffffffff800209bd <ZydisArePrefixesCompatible>:
ffffffff800209bd:	f3 0f 1e fa          	endbr64 
ffffffff800209c1:	55                   	push   %rbp
ffffffff800209c2:	48 89 e5             	mov    %rsp,%rbp
ffffffff800209c5:	48 83 ec 18          	sub    $0x18,%rsp
ffffffff800209c9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff800209cd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800209d1:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff800209d5:	0f b6 40 0b          	movzbl 0xb(%rax),%eax
ffffffff800209d9:	83 e0 20             	and    $0x20,%eax
ffffffff800209dc:	84 c0                	test   %al,%al
ffffffff800209de:	75 24                	jne    ffffffff80020a04 <ZydisArePrefixesCompatible+0x47>
ffffffff800209e0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800209e4:	48 8b 50 20          	mov    0x20(%rax),%rdx
ffffffff800209e8:	48 b8 00 00 00 00 e0 	movabs $0x7e000000000,%rax
ffffffff800209ef:	07 00 00 
ffffffff800209f2:	48 21 d0             	and    %rdx,%rax
ffffffff800209f5:	48 85 c0             	test   %rax,%rax
ffffffff800209f8:	74 0a                	je     ffffffff80020a04 <ZydisArePrefixesCompatible+0x47>
ffffffff800209fa:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800209ff:	e9 23 02 00 00       	jmp    ffffffff80020c27 <ZydisArePrefixesCompatible+0x26a>
ffffffff80020a04:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80020a08:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff80020a0c:	0f b6 40 06          	movzbl 0x6(%rax),%eax
ffffffff80020a10:	83 e0 07             	and    $0x7,%eax
ffffffff80020a13:	84 c0                	test   %al,%al
ffffffff80020a15:	74 20                	je     ffffffff80020a37 <ZydisArePrefixesCompatible+0x7a>
ffffffff80020a17:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80020a1b:	48 8b 50 20          	mov    0x20(%rax),%rdx
ffffffff80020a1f:	48 b8 00 00 00 f8 1f 	movabs $0x1ff8000000,%rax
ffffffff80020a26:	00 00 00 
ffffffff80020a29:	48 21 d0             	and    %rdx,%rax
ffffffff80020a2c:	48 85 c0             	test   %rax,%rax
ffffffff80020a2f:	0f 94 c0             	sete   %al
ffffffff80020a32:	e9 f0 01 00 00       	jmp    ffffffff80020c27 <ZydisArePrefixesCompatible+0x26a>
ffffffff80020a37:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80020a3b:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff80020a3f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff80020a43:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80020a47:	0f b6 40 0b          	movzbl 0xb(%rax),%eax
ffffffff80020a4b:	83 e0 80             	and    $0xffffff80,%eax
ffffffff80020a4e:	84 c0                	test   %al,%al
ffffffff80020a50:	75 1c                	jne    ffffffff80020a6e <ZydisArePrefixesCompatible+0xb1>
ffffffff80020a52:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80020a56:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff80020a5a:	25 00 00 00 08       	and    $0x8000000,%eax
ffffffff80020a5f:	48 85 c0             	test   %rax,%rax
ffffffff80020a62:	74 0a                	je     ffffffff80020a6e <ZydisArePrefixesCompatible+0xb1>
ffffffff80020a64:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80020a69:	e9 b9 01 00 00       	jmp    ffffffff80020c27 <ZydisArePrefixesCompatible+0x26a>
ffffffff80020a6e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80020a72:	0f b6 40 0c          	movzbl 0xc(%rax),%eax
ffffffff80020a76:	83 e0 01             	and    $0x1,%eax
ffffffff80020a79:	84 c0                	test   %al,%al
ffffffff80020a7b:	75 1c                	jne    ffffffff80020a99 <ZydisArePrefixesCompatible+0xdc>
ffffffff80020a7d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80020a81:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff80020a85:	25 00 00 00 10       	and    $0x10000000,%eax
ffffffff80020a8a:	48 85 c0             	test   %rax,%rax
ffffffff80020a8d:	74 0a                	je     ffffffff80020a99 <ZydisArePrefixesCompatible+0xdc>
ffffffff80020a8f:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80020a94:	e9 8e 01 00 00       	jmp    ffffffff80020c27 <ZydisArePrefixesCompatible+0x26a>
ffffffff80020a99:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80020a9d:	0f b6 40 0c          	movzbl 0xc(%rax),%eax
ffffffff80020aa1:	83 e0 02             	and    $0x2,%eax
ffffffff80020aa4:	84 c0                	test   %al,%al
ffffffff80020aa6:	75 1c                	jne    ffffffff80020ac4 <ZydisArePrefixesCompatible+0x107>
ffffffff80020aa8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80020aac:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff80020ab0:	25 00 00 00 20       	and    $0x20000000,%eax
ffffffff80020ab5:	48 85 c0             	test   %rax,%rax
ffffffff80020ab8:	74 0a                	je     ffffffff80020ac4 <ZydisArePrefixesCompatible+0x107>
ffffffff80020aba:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80020abf:	e9 63 01 00 00       	jmp    ffffffff80020c27 <ZydisArePrefixesCompatible+0x26a>
ffffffff80020ac4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80020ac8:	0f b6 40 0c          	movzbl 0xc(%rax),%eax
ffffffff80020acc:	83 e0 04             	and    $0x4,%eax
ffffffff80020acf:	84 c0                	test   %al,%al
ffffffff80020ad1:	75 1c                	jne    ffffffff80020aef <ZydisArePrefixesCompatible+0x132>
ffffffff80020ad3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80020ad7:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff80020adb:	25 00 00 00 40       	and    $0x40000000,%eax
ffffffff80020ae0:	48 85 c0             	test   %rax,%rax
ffffffff80020ae3:	74 0a                	je     ffffffff80020aef <ZydisArePrefixesCompatible+0x132>
ffffffff80020ae5:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80020aea:	e9 38 01 00 00       	jmp    ffffffff80020c27 <ZydisArePrefixesCompatible+0x26a>
ffffffff80020aef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80020af3:	0f b6 40 0c          	movzbl 0xc(%rax),%eax
ffffffff80020af7:	83 e0 08             	and    $0x8,%eax
ffffffff80020afa:	84 c0                	test   %al,%al
ffffffff80020afc:	75 1c                	jne    ffffffff80020b1a <ZydisArePrefixesCompatible+0x15d>
ffffffff80020afe:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80020b02:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff80020b06:	25 00 00 00 80       	and    $0x80000000,%eax
ffffffff80020b0b:	48 85 c0             	test   %rax,%rax
ffffffff80020b0e:	74 0a                	je     ffffffff80020b1a <ZydisArePrefixesCompatible+0x15d>
ffffffff80020b10:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80020b15:	e9 0d 01 00 00       	jmp    ffffffff80020c27 <ZydisArePrefixesCompatible+0x26a>
ffffffff80020b1a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80020b1e:	0f b6 40 0c          	movzbl 0xc(%rax),%eax
ffffffff80020b22:	83 e0 10             	and    $0x10,%eax
ffffffff80020b25:	84 c0                	test   %al,%al
ffffffff80020b27:	75 24                	jne    ffffffff80020b4d <ZydisArePrefixesCompatible+0x190>
ffffffff80020b29:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80020b2d:	48 8b 50 20          	mov    0x20(%rax),%rdx
ffffffff80020b31:	48 b8 00 00 00 00 01 	movabs $0x100000000,%rax
ffffffff80020b38:	00 00 00 
ffffffff80020b3b:	48 21 d0             	and    %rdx,%rax
ffffffff80020b3e:	48 85 c0             	test   %rax,%rax
ffffffff80020b41:	74 0a                	je     ffffffff80020b4d <ZydisArePrefixesCompatible+0x190>
ffffffff80020b43:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80020b48:	e9 da 00 00 00       	jmp    ffffffff80020c27 <ZydisArePrefixesCompatible+0x26a>
ffffffff80020b4d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80020b51:	0f b6 40 0c          	movzbl 0xc(%rax),%eax
ffffffff80020b55:	83 e0 20             	and    $0x20,%eax
ffffffff80020b58:	84 c0                	test   %al,%al
ffffffff80020b5a:	75 24                	jne    ffffffff80020b80 <ZydisArePrefixesCompatible+0x1c3>
ffffffff80020b5c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80020b60:	48 8b 50 20          	mov    0x20(%rax),%rdx
ffffffff80020b64:	48 b8 00 00 00 00 02 	movabs $0x200000000,%rax
ffffffff80020b6b:	00 00 00 
ffffffff80020b6e:	48 21 d0             	and    %rdx,%rax
ffffffff80020b71:	48 85 c0             	test   %rax,%rax
ffffffff80020b74:	74 0a                	je     ffffffff80020b80 <ZydisArePrefixesCompatible+0x1c3>
ffffffff80020b76:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80020b7b:	e9 a7 00 00 00       	jmp    ffffffff80020c27 <ZydisArePrefixesCompatible+0x26a>
ffffffff80020b80:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80020b84:	0f b6 40 0d          	movzbl 0xd(%rax),%eax
ffffffff80020b88:	83 e0 01             	and    $0x1,%eax
ffffffff80020b8b:	84 c0                	test   %al,%al
ffffffff80020b8d:	75 21                	jne    ffffffff80020bb0 <ZydisArePrefixesCompatible+0x1f3>
ffffffff80020b8f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80020b93:	48 8b 50 20          	mov    0x20(%rax),%rdx
ffffffff80020b97:	48 b8 00 00 00 00 0c 	movabs $0xc00000000,%rax
ffffffff80020b9e:	00 00 00 
ffffffff80020ba1:	48 21 d0             	and    %rdx,%rax
ffffffff80020ba4:	48 85 c0             	test   %rax,%rax
ffffffff80020ba7:	74 07                	je     ffffffff80020bb0 <ZydisArePrefixesCompatible+0x1f3>
ffffffff80020ba9:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80020bae:	eb 77                	jmp    ffffffff80020c27 <ZydisArePrefixesCompatible+0x26a>
ffffffff80020bb0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80020bb4:	0f b6 40 0c          	movzbl 0xc(%rax),%eax
ffffffff80020bb8:	83 e0 40             	and    $0x40,%eax
ffffffff80020bbb:	84 c0                	test   %al,%al
ffffffff80020bbd:	75 21                	jne    ffffffff80020be0 <ZydisArePrefixesCompatible+0x223>
ffffffff80020bbf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80020bc3:	48 8b 50 20          	mov    0x20(%rax),%rdx
ffffffff80020bc7:	48 b8 00 00 00 00 10 	movabs $0x1000000000,%rax
ffffffff80020bce:	00 00 00 
ffffffff80020bd1:	48 21 d0             	and    %rdx,%rax
ffffffff80020bd4:	48 85 c0             	test   %rax,%rax
ffffffff80020bd7:	74 07                	je     ffffffff80020be0 <ZydisArePrefixesCompatible+0x223>
ffffffff80020bd9:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80020bde:	eb 47                	jmp    ffffffff80020c27 <ZydisArePrefixesCompatible+0x26a>
ffffffff80020be0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80020be4:	0f b6 40 0c          	movzbl 0xc(%rax),%eax
ffffffff80020be8:	83 e0 80             	and    $0xffffff80,%eax
ffffffff80020beb:	84 c0                	test   %al,%al
ffffffff80020bed:	75 33                	jne    ffffffff80020c22 <ZydisArePrefixesCompatible+0x265>
ffffffff80020bef:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80020bf3:	48 8b 50 20          	mov    0x20(%rax),%rdx
ffffffff80020bf7:	48 b8 00 00 00 00 03 	movabs $0x300000000,%rax
ffffffff80020bfe:	00 00 00 
ffffffff80020c01:	48 21 d0             	and    %rdx,%rax
ffffffff80020c04:	48 85 c0             	test   %rax,%rax
ffffffff80020c07:	74 19                	je     ffffffff80020c22 <ZydisArePrefixesCompatible+0x265>
ffffffff80020c09:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80020c0d:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff80020c11:	25 00 00 00 08       	and    $0x8000000,%eax
ffffffff80020c16:	48 85 c0             	test   %rax,%rax
ffffffff80020c19:	75 07                	jne    ffffffff80020c22 <ZydisArePrefixesCompatible+0x265>
ffffffff80020c1b:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80020c20:	eb 05                	jmp    ffffffff80020c27 <ZydisArePrefixesCompatible+0x26a>
ffffffff80020c22:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff80020c27:	c9                   	leave  
ffffffff80020c28:	c3                   	ret    

ffffffff80020c29 <ZydisGetOperandMask>:
ffffffff80020c29:	f3 0f 1e fa          	endbr64 
ffffffff80020c2d:	55                   	push   %rbp
ffffffff80020c2e:	48 89 e5             	mov    %rsp,%rbp
ffffffff80020c31:	48 83 ec 18          	sub    $0x18,%rsp
ffffffff80020c35:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff80020c39:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80020c3d:	0f b6 40 28          	movzbl 0x28(%rax),%eax
ffffffff80020c41:	0f b6 c0             	movzbl %al,%eax
ffffffff80020c44:	66 89 45 fe          	mov    %ax,-0x2(%rbp)
ffffffff80020c48:	c6 45 fd 03          	movb   $0x3,-0x3(%rbp)
ffffffff80020c4c:	c6 45 fc 00          	movb   $0x0,-0x4(%rbp)
ffffffff80020c50:	eb 30                	jmp    ffffffff80020c82 <ZydisGetOperandMask+0x59>
ffffffff80020c52:	0f b6 45 fc          	movzbl -0x4(%rbp),%eax
ffffffff80020c56:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff80020c5a:	48 98                	cltq   
ffffffff80020c5c:	48 c1 e0 06          	shl    $0x6,%rax
ffffffff80020c60:	48 01 d0             	add    %rdx,%rax
ffffffff80020c63:	48 83 c0 30          	add    $0x30,%rax
ffffffff80020c67:	8b 00                	mov    (%rax),%eax
ffffffff80020c69:	8d 50 ff             	lea    -0x1(%rax),%edx
ffffffff80020c6c:	0f b6 45 fd          	movzbl -0x3(%rbp),%eax
ffffffff80020c70:	89 c1                	mov    %eax,%ecx
ffffffff80020c72:	d3 e2                	shl    %cl,%edx
ffffffff80020c74:	89 d0                	mov    %edx,%eax
ffffffff80020c76:	66 09 45 fe          	or     %ax,-0x2(%rbp)
ffffffff80020c7a:	80 45 fd 02          	addb   $0x2,-0x3(%rbp)
ffffffff80020c7e:	80 45 fc 01          	addb   $0x1,-0x4(%rbp)
ffffffff80020c82:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80020c86:	0f b6 40 28          	movzbl 0x28(%rax),%eax
ffffffff80020c8a:	38 45 fc             	cmp    %al,-0x4(%rbp)
ffffffff80020c8d:	72 c3                	jb     ffffffff80020c52 <ZydisGetOperandMask+0x29>
ffffffff80020c8f:	0f b7 45 fe          	movzwl -0x2(%rbp),%eax
ffffffff80020c93:	c9                   	leave  
ffffffff80020c94:	c3                   	ret    

ffffffff80020c95 <ZydisHandleSwappableDefinition>:
ffffffff80020c95:	f3 0f 1e fa          	endbr64 
ffffffff80020c99:	55                   	push   %rbp
ffffffff80020c9a:	48 89 e5             	mov    %rsp,%rbp
ffffffff80020c9d:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff80020ca1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff80020ca5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80020ca9:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff80020cad:	0f b6 40 08          	movzbl 0x8(%rax),%eax
ffffffff80020cb1:	83 e0 80             	and    $0xffffff80,%eax
ffffffff80020cb4:	84 c0                	test   %al,%al
ffffffff80020cb6:	75 0a                	jne    ffffffff80020cc2 <ZydisHandleSwappableDefinition+0x2d>
ffffffff80020cb8:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80020cbd:	e9 3a 01 00 00       	jmp    ffffffff80020dfc <ZydisHandleSwappableDefinition+0x167>
ffffffff80020cc2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80020cc6:	48 8b 00             	mov    (%rax),%rax
ffffffff80020cc9:	8b 40 08             	mov    0x8(%rax),%eax
ffffffff80020ccc:	3d b0 01 00 00       	cmp    $0x1b0,%eax
ffffffff80020cd1:	75 42                	jne    ffffffff80020d15 <ZydisHandleSwappableDefinition+0x80>
ffffffff80020cd3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80020cd7:	48 8b 00             	mov    (%rax),%rax
ffffffff80020cda:	48 8b 80 a8 00 00 00 	mov    0xa8(%rax),%rax
ffffffff80020ce1:	48 89 c7             	mov    %rax,%rdi
ffffffff80020ce4:	e8 61 ca ff ff       	call   ffffffff8001d74a <ZydisGetSignedImmSize>
ffffffff80020ce9:	88 45 ff             	mov    %al,-0x1(%rbp)
ffffffff80020cec:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80020cf0:	48 8b 00             	mov    (%rax),%rax
ffffffff80020cf3:	8b 00                	mov    (%rax),%eax
ffffffff80020cf5:	85 c0                	test   %eax,%eax
ffffffff80020cf7:	75 1c                	jne    ffffffff80020d15 <ZydisHandleSwappableDefinition+0x80>
ffffffff80020cf9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80020cfd:	0f b6 40 28          	movzbl 0x28(%rax),%eax
ffffffff80020d01:	3c 40                	cmp    $0x40,%al
ffffffff80020d03:	75 10                	jne    ffffffff80020d15 <ZydisHandleSwappableDefinition+0x80>
ffffffff80020d05:	80 7d ff 3f          	cmpb   $0x3f,-0x1(%rbp)
ffffffff80020d09:	77 0a                	ja     ffffffff80020d15 <ZydisHandleSwappableDefinition+0x80>
ffffffff80020d0b:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff80020d10:	e9 e7 00 00 00       	jmp    ffffffff80020dfc <ZydisHandleSwappableDefinition+0x167>
ffffffff80020d15:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80020d19:	48 8b 00             	mov    (%rax),%rax
ffffffff80020d1c:	0f b6 40 28          	movzbl 0x28(%rax),%eax
ffffffff80020d20:	3c 02                	cmp    $0x2,%al
ffffffff80020d22:	74 0d                	je     ffffffff80020d31 <ZydisHandleSwappableDefinition+0x9c>
ffffffff80020d24:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80020d28:	48 8b 00             	mov    (%rax),%rax
ffffffff80020d2b:	0f b6 40 28          	movzbl 0x28(%rax),%eax
ffffffff80020d2f:	3c 03                	cmp    $0x3,%al
ffffffff80020d31:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80020d35:	48 8b 00             	mov    (%rax),%rax
ffffffff80020d38:	0f b6 40 28          	movzbl 0x28(%rax),%eax
ffffffff80020d3c:	3c 03                	cmp    $0x3,%al
ffffffff80020d3e:	75 07                	jne    ffffffff80020d47 <ZydisHandleSwappableDefinition+0xb2>
ffffffff80020d40:	b8 02 00 00 00       	mov    $0x2,%eax
ffffffff80020d45:	eb 05                	jmp    ffffffff80020d4c <ZydisHandleSwappableDefinition+0xb7>
ffffffff80020d47:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff80020d4c:	88 45 fe             	mov    %al,-0x2(%rbp)
ffffffff80020d4f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80020d53:	48 8b 00             	mov    (%rax),%rax
ffffffff80020d56:	8b 40 34             	mov    0x34(%rax),%eax
ffffffff80020d59:	89 c7                	mov    %eax,%edi
ffffffff80020d5b:	e8 01 4a 00 00       	call   ffffffff80025761 <ZydisRegisterGetId>
ffffffff80020d60:	88 45 fd             	mov    %al,-0x3(%rbp)
ffffffff80020d63:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80020d67:	48 8b 10             	mov    (%rax),%rdx
ffffffff80020d6a:	0f b6 45 fe          	movzbl -0x2(%rbp),%eax
ffffffff80020d6e:	48 98                	cltq   
ffffffff80020d70:	48 c1 e0 06          	shl    $0x6,%rax
ffffffff80020d74:	48 01 d0             	add    %rdx,%rax
ffffffff80020d77:	48 83 c0 34          	add    $0x34,%rax
ffffffff80020d7b:	8b 00                	mov    (%rax),%eax
ffffffff80020d7d:	89 c7                	mov    %eax,%edi
ffffffff80020d7f:	e8 dd 49 00 00       	call   ffffffff80025761 <ZydisRegisterGetId>
ffffffff80020d84:	88 45 fc             	mov    %al,-0x4(%rbp)
ffffffff80020d87:	80 7d fd 07          	cmpb   $0x7,-0x3(%rbp)
ffffffff80020d8b:	7f 6a                	jg     ffffffff80020df7 <ZydisHandleSwappableDefinition+0x162>
ffffffff80020d8d:	80 7d fc 07          	cmpb   $0x7,-0x4(%rbp)
ffffffff80020d91:	7e 64                	jle    ffffffff80020df7 <ZydisHandleSwappableDefinition+0x162>
ffffffff80020d93:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80020d97:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff80020d9b:	48 8d 50 09          	lea    0x9(%rax),%rdx
ffffffff80020d9f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80020da3:	48 89 50 08          	mov    %rdx,0x8(%rax)
ffffffff80020da7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80020dab:	48 8d 50 10          	lea    0x10(%rax),%rdx
ffffffff80020daf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80020db3:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff80020db7:	0f b7 00             	movzwl (%rax),%eax
ffffffff80020dba:	0f b7 c8             	movzwl %ax,%ecx
ffffffff80020dbd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80020dc1:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff80020dc5:	0f b6 40 06          	movzbl 0x6(%rax),%eax
ffffffff80020dc9:	83 e0 07             	and    $0x7,%eax
ffffffff80020dcc:	0f b6 c0             	movzbl %al,%eax
ffffffff80020dcf:	89 ce                	mov    %ecx,%esi
ffffffff80020dd1:	89 c7                	mov    %eax,%edi
ffffffff80020dd3:	e8 5f 49 01 00       	call   ffffffff80035737 <ZydisGetInstructionDefinition>
ffffffff80020dd8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80020ddc:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff80020de0:	48 89 c7             	mov    %rax,%rdi
ffffffff80020de3:	e8 70 4a 01 00       	call   ffffffff80035858 <ZydisGetOperandDefinitions>
ffffffff80020de8:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff80020dec:	48 89 42 18          	mov    %rax,0x18(%rdx)
ffffffff80020df0:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff80020df5:	eb 05                	jmp    ffffffff80020dfc <ZydisHandleSwappableDefinition+0x167>
ffffffff80020df7:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80020dfc:	c9                   	leave  
ffffffff80020dfd:	c3                   	ret    

ffffffff80020dfe <ZydisFindMatchingDefinition>:
ffffffff80020dfe:	f3 0f 1e fa          	endbr64 
ffffffff80020e02:	55                   	push   %rbp
ffffffff80020e03:	48 89 e5             	mov    %rsp,%rbp
ffffffff80020e06:	48 83 ec 40          	sub    $0x40,%rsp
ffffffff80020e0a:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
ffffffff80020e0e:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
ffffffff80020e12:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff80020e16:	ba 38 00 00 00       	mov    $0x38,%edx
ffffffff80020e1b:	be 00 00 00 00       	mov    $0x0,%esi
ffffffff80020e20:	48 89 c7             	mov    %rax,%rdi
ffffffff80020e23:	e8 ca c5 ff ff       	call   ffffffff8001d3f2 <ZYAN_MEMSET.lto_priv.2>
ffffffff80020e28:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff80020e2c:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
ffffffff80020e30:	48 89 10             	mov    %rdx,(%rax)
ffffffff80020e33:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80020e37:	48 8b 50 10          	mov    0x10(%rax),%rdx
ffffffff80020e3b:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff80020e3f:	48 89 50 20          	mov    %rdx,0x20(%rax)
ffffffff80020e43:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
ffffffff80020e4a:	00 
ffffffff80020e4b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80020e4f:	8b 50 08             	mov    0x8(%rax),%edx
ffffffff80020e52:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
ffffffff80020e56:	48 89 c6             	mov    %rax,%rsi
ffffffff80020e59:	89 d7                	mov    %edx,%edi
ffffffff80020e5b:	e8 f1 4e 01 00       	call   ffffffff80035d51 <ZydisGetEncodableInstructions>
ffffffff80020e60:	88 45 fe             	mov    %al,-0x2(%rbp)
ffffffff80020e63:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80020e67:	48 85 c0             	test   %rax,%rax
ffffffff80020e6a:	74 05                	je     ffffffff80020e71 <ZydisFindMatchingDefinition+0x73>
ffffffff80020e6c:	80 7d fe 00          	cmpb   $0x0,-0x2(%rbp)
ffffffff80020e70:	90                   	nop
ffffffff80020e71:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80020e75:	8b 00                	mov    (%rax),%eax
ffffffff80020e77:	89 c7                	mov    %eax,%edi
ffffffff80020e79:	e8 df c5 ff ff       	call   ffffffff8001d45d <ZydisGetMachineModeWidth>
ffffffff80020e7e:	c0 e8 04             	shr    $0x4,%al
ffffffff80020e81:	0f b6 c0             	movzbl %al,%eax
ffffffff80020e84:	89 45 f8             	mov    %eax,-0x8(%rbp)
ffffffff80020e87:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80020e8b:	8b 00                	mov    (%rax),%eax
ffffffff80020e8d:	83 f8 02             	cmp    $0x2,%eax
ffffffff80020e90:	74 0b                	je     ffffffff80020e9d <ZydisFindMatchingDefinition+0x9f>
ffffffff80020e92:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80020e96:	8b 00                	mov    (%rax),%eax
ffffffff80020e98:	83 f8 01             	cmp    $0x1,%eax
ffffffff80020e9b:	75 07                	jne    ffffffff80020ea4 <ZydisFindMatchingDefinition+0xa6>
ffffffff80020e9d:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff80020ea2:	eb 05                	jmp    ffffffff80020ea9 <ZydisFindMatchingDefinition+0xab>
ffffffff80020ea4:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80020ea9:	88 45 f7             	mov    %al,-0x9(%rbp)
ffffffff80020eac:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80020eb0:	8b 40 20             	mov    0x20(%rax),%eax
ffffffff80020eb3:	89 c7                	mov    %eax,%edi
ffffffff80020eb5:	e8 f5 c5 ff ff       	call   ffffffff8001d4af <ZydisGetAszFromHint>
ffffffff80020eba:	88 45 f6             	mov    %al,-0xa(%rbp)
ffffffff80020ebd:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80020ec1:	8b 40 24             	mov    0x24(%rax),%eax
ffffffff80020ec4:	8b 55 f8             	mov    -0x8(%rbp),%edx
ffffffff80020ec7:	89 d6                	mov    %edx,%esi
ffffffff80020ec9:	89 c7                	mov    %eax,%edi
ffffffff80020ecb:	e8 fe c5 ff ff       	call   ffffffff8001d4ce <ZydisGetOszFromHint>
ffffffff80020ed0:	88 45 f5             	mov    %al,-0xb(%rbp)
ffffffff80020ed3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80020ed7:	48 89 c7             	mov    %rax,%rdi
ffffffff80020eda:	e8 4a fd ff ff       	call   ffffffff80020c29 <ZydisGetOperandMask>
ffffffff80020edf:	66 89 45 f2          	mov    %ax,-0xe(%rbp)
ffffffff80020ee3:	c6 45 ff 00          	movb   $0x0,-0x1(%rbp)
ffffffff80020ee7:	e9 b7 04 00 00       	jmp    ffffffff800213a3 <ZydisFindMatchingDefinition+0x5a5>
ffffffff80020eec:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80020ef0:	0f b7 40 02          	movzwl 0x2(%rax),%eax
ffffffff80020ef4:	66 39 45 f2          	cmp    %ax,-0xe(%rbp)
ffffffff80020ef8:	0f 85 67 04 00 00    	jne    ffffffff80021365 <ZydisFindMatchingDefinition+0x567>
ffffffff80020efe:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
ffffffff80020f05:	00 
ffffffff80020f06:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80020f0a:	0f b7 00             	movzwl (%rax),%eax
ffffffff80020f0d:	0f b7 c8             	movzwl %ax,%ecx
ffffffff80020f10:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80020f14:	0f b6 40 06          	movzbl 0x6(%rax),%eax
ffffffff80020f18:	83 e0 07             	and    $0x7,%eax
ffffffff80020f1b:	0f b6 c0             	movzbl %al,%eax
ffffffff80020f1e:	48 8d 55 d8          	lea    -0x28(%rbp),%rdx
ffffffff80020f22:	89 ce                	mov    %ecx,%esi
ffffffff80020f24:	89 c7                	mov    %eax,%edi
ffffffff80020f26:	e8 0c 48 01 00       	call   ffffffff80035737 <ZydisGetInstructionDefinition>
ffffffff80020f2b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80020f2f:	0f b6 50 06          	movzbl 0x6(%rax),%edx
ffffffff80020f33:	c0 ea 07             	shr    $0x7,%dl
ffffffff80020f36:	0f b6 d2             	movzbl %dl,%edx
ffffffff80020f39:	0f b6 40 07          	movzbl 0x7(%rax),%eax
ffffffff80020f3d:	83 e0 03             	and    $0x3,%eax
ffffffff80020f40:	48 01 c0             	add    %rax,%rax
ffffffff80020f43:	48 09 d0             	or     %rdx,%rax
ffffffff80020f46:	0f b6 c0             	movzbl %al,%eax
ffffffff80020f49:	23 45 f8             	and    -0x8(%rbp),%eax
ffffffff80020f4c:	85 c0                	test   %eax,%eax
ffffffff80020f4e:	0f 84 14 04 00 00    	je     ffffffff80021368 <ZydisFindMatchingDefinition+0x56a>
ffffffff80020f54:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80020f58:	8b 40 04             	mov    0x4(%rax),%eax
ffffffff80020f5b:	85 c0                	test   %eax,%eax
ffffffff80020f5d:	74 28                	je     ffffffff80020f87 <ZydisFindMatchingDefinition+0x189>
ffffffff80020f5f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80020f63:	0f b6 40 06          	movzbl 0x6(%rax),%eax
ffffffff80020f67:	83 e0 07             	and    $0x7,%eax
ffffffff80020f6a:	0f b6 c0             	movzbl %al,%eax
ffffffff80020f6d:	89 c7                	mov    %eax,%edi
ffffffff80020f6f:	e8 c3 c4 ff ff       	call   ffffffff8001d437 <ZydisGetEncodableEncoding>
ffffffff80020f74:	89 c2                	mov    %eax,%edx
ffffffff80020f76:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80020f7a:	8b 40 04             	mov    0x4(%rax),%eax
ffffffff80020f7d:	21 d0                	and    %edx,%eax
ffffffff80020f7f:	85 c0                	test   %eax,%eax
ffffffff80020f81:	0f 84 e4 03 00 00    	je     ffffffff8002136b <ZydisFindMatchingDefinition+0x56d>
ffffffff80020f87:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80020f8b:	8b 00                	mov    (%rax),%eax
ffffffff80020f8d:	83 f8 05             	cmp    $0x5,%eax
ffffffff80020f90:	75 2e                	jne    ffffffff80020fc0 <ZydisFindMatchingDefinition+0x1c2>
ffffffff80020f92:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80020f96:	0f b6 40 05          	movzbl 0x5(%rax),%eax
ffffffff80020f9a:	83 e0 20             	and    $0x20,%eax
ffffffff80020f9d:	84 c0                	test   %al,%al
ffffffff80020f9f:	0f 85 c9 03 00 00    	jne    ffffffff8002136e <ZydisFindMatchingDefinition+0x570>
ffffffff80020fa5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80020fa9:	0f b6 40 06          	movzbl 0x6(%rax),%eax
ffffffff80020fad:	83 e0 07             	and    $0x7,%eax
ffffffff80020fb0:	0f b6 c0             	movzbl %al,%eax
ffffffff80020fb3:	83 e8 02             	sub    $0x2,%eax
ffffffff80020fb6:	83 f8 03             	cmp    $0x3,%eax
ffffffff80020fb9:	77 24                	ja     ffffffff80020fdf <ZydisFindMatchingDefinition+0x1e1>
ffffffff80020fbb:	e9 d3 03 00 00       	jmp    ffffffff80021393 <ZydisFindMatchingDefinition+0x595>
ffffffff80020fc0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80020fc4:	8b 00                	mov    (%rax),%eax
ffffffff80020fc6:	85 c0                	test   %eax,%eax
ffffffff80020fc8:	74 16                	je     ffffffff80020fe0 <ZydisFindMatchingDefinition+0x1e2>
ffffffff80020fca:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80020fce:	0f b6 40 06          	movzbl 0x6(%rax),%eax
ffffffff80020fd2:	83 e0 07             	and    $0x7,%eax
ffffffff80020fd5:	3c 05                	cmp    $0x5,%al
ffffffff80020fd7:	0f 84 94 03 00 00    	je     ffffffff80021371 <ZydisFindMatchingDefinition+0x573>
ffffffff80020fdd:	eb 01                	jmp    ffffffff80020fe0 <ZydisFindMatchingDefinition+0x1e2>
ffffffff80020fdf:	90                   	nop
ffffffff80020fe0:	80 7d f7 00          	cmpb   $0x0,-0x9(%rbp)
ffffffff80020fe4:	74 13                	je     ffffffff80020ff9 <ZydisFindMatchingDefinition+0x1fb>
ffffffff80020fe6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80020fea:	0f b6 40 05          	movzbl 0x5(%rax),%eax
ffffffff80020fee:	83 e0 40             	and    $0x40,%eax
ffffffff80020ff1:	84 c0                	test   %al,%al
ffffffff80020ff3:	0f 85 7b 03 00 00    	jne    ffffffff80021374 <ZydisFindMatchingDefinition+0x576>
ffffffff80020ff9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80020ffd:	8b 40 18             	mov    0x18(%rax),%eax
ffffffff80021000:	85 c0                	test   %eax,%eax
ffffffff80021002:	74 20                	je     ffffffff80021024 <ZydisFindMatchingDefinition+0x226>
ffffffff80021004:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80021008:	8b 50 18             	mov    0x18(%rax),%edx
ffffffff8002100b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8002100f:	0f b6 40 08          	movzbl 0x8(%rax),%eax
ffffffff80021013:	c0 e8 05             	shr    $0x5,%al
ffffffff80021016:	83 e0 03             	and    $0x3,%eax
ffffffff80021019:	0f b6 c0             	movzbl %al,%eax
ffffffff8002101c:	39 c2                	cmp    %eax,%edx
ffffffff8002101e:	0f 85 53 03 00 00    	jne    ffffffff80021377 <ZydisFindMatchingDefinition+0x579>
ffffffff80021024:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80021028:	0f b6 40 08          	movzbl 0x8(%rax),%eax
ffffffff8002102c:	83 e0 60             	and    $0x60,%eax
ffffffff8002102f:	84 c0                	test   %al,%al
ffffffff80021031:	75 0f                	jne    ffffffff80021042 <ZydisFindMatchingDefinition+0x244>
ffffffff80021033:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80021037:	8b 40 1c             	mov    0x1c(%rax),%eax
ffffffff8002103a:	85 c0                	test   %eax,%eax
ffffffff8002103c:	0f 85 38 03 00 00    	jne    ffffffff8002137a <ZydisFindMatchingDefinition+0x57c>
ffffffff80021042:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff80021046:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002104a:	48 89 50 08          	mov    %rdx,0x8(%rax)
ffffffff8002104e:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff80021052:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff80021056:	48 89 50 10          	mov    %rdx,0x10(%rax)
ffffffff8002105a:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002105e:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)
ffffffff80021065:	00 
ffffffff80021066:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8002106a:	0f b6 40 08          	movzbl 0x8(%rax),%eax
ffffffff8002106e:	83 e0 60             	and    $0x60,%eax
ffffffff80021071:	3c 20                	cmp    $0x20,%al
ffffffff80021073:	75 06                	jne    ffffffff8002107b <ZydisFindMatchingDefinition+0x27d>
ffffffff80021075:	0f b6 45 f6          	movzbl -0xa(%rbp),%eax
ffffffff80021079:	eb 05                	jmp    ffffffff80021080 <ZydisFindMatchingDefinition+0x282>
ffffffff8002107b:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80021080:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
ffffffff80021084:	88 42 29             	mov    %al,0x29(%rdx)
ffffffff80021087:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8002108b:	0f b6 40 08          	movzbl 0x8(%rax),%eax
ffffffff8002108f:	83 e0 60             	and    $0x60,%eax
ffffffff80021092:	3c 40                	cmp    $0x40,%al
ffffffff80021094:	75 06                	jne    ffffffff8002109c <ZydisFindMatchingDefinition+0x29e>
ffffffff80021096:	0f b6 45 f5          	movzbl -0xb(%rbp),%eax
ffffffff8002109a:	eb 05                	jmp    ffffffff800210a1 <ZydisFindMatchingDefinition+0x2a3>
ffffffff8002109c:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800210a1:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
ffffffff800210a5:	88 42 28             	mov    %al,0x28(%rdx)
ffffffff800210a8:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff800210ac:	c6 40 2c 00          	movb   $0x0,0x2c(%rax)
ffffffff800210b0:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff800210b4:	0f b6 40 2c          	movzbl 0x2c(%rax),%eax
ffffffff800210b8:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
ffffffff800210bc:	88 42 2b             	mov    %al,0x2b(%rdx)
ffffffff800210bf:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff800210c3:	0f b6 40 2b          	movzbl 0x2b(%rax),%eax
ffffffff800210c7:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
ffffffff800210cb:	88 42 2a             	mov    %al,0x2a(%rdx)
ffffffff800210ce:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff800210d2:	c7 40 30 00 00 00 00 	movl   $0x0,0x30(%rax)
ffffffff800210d9:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff800210dd:	c6 40 34 00          	movb   $0x0,0x34(%rax)
ffffffff800210e1:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff800210e5:	c6 40 35 00          	movb   $0x0,0x35(%rax)
ffffffff800210e9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff800210ed:	0f b6 40 04          	movzbl 0x4(%rax),%eax
ffffffff800210f1:	83 e0 0e             	and    $0xe,%eax
ffffffff800210f4:	3c 02                	cmp    $0x2,%al
ffffffff800210f6:	74 10                	je     ffffffff80021108 <ZydisFindMatchingDefinition+0x30a>
ffffffff800210f8:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff800210fc:	0f b6 40 28          	movzbl 0x28(%rax),%eax
ffffffff80021100:	3c 08                	cmp    $0x8,%al
ffffffff80021102:	0f 84 75 02 00 00    	je     ffffffff8002137d <ZydisFindMatchingDefinition+0x57f>
ffffffff80021108:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002110c:	48 89 c7             	mov    %rax,%rdi
ffffffff8002110f:	e8 a9 f8 ff ff       	call   ffffffff800209bd <ZydisArePrefixesCompatible>
ffffffff80021114:	84 c0                	test   %al,%al
ffffffff80021116:	0f 84 64 02 00 00    	je     ffffffff80021380 <ZydisFindMatchingDefinition+0x582>
ffffffff8002111c:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
ffffffff80021120:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff80021124:	48 89 d6             	mov    %rdx,%rsi
ffffffff80021127:	48 89 c7             	mov    %rax,%rdi
ffffffff8002112a:	e8 f2 f5 ff ff       	call   ffffffff80020721 <ZydisIsDefinitionCompatible>
ffffffff8002112f:	84 c0                	test   %al,%al
ffffffff80021131:	0f 84 4c 02 00 00    	je     ffffffff80021383 <ZydisFindMatchingDefinition+0x585>
ffffffff80021137:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002113b:	48 89 c7             	mov    %rax,%rdi
ffffffff8002113e:	e8 52 fb ff ff       	call   ffffffff80020c95 <ZydisHandleSwappableDefinition>
ffffffff80021143:	84 c0                	test   %al,%al
ffffffff80021145:	74 31                	je     ffffffff80021178 <ZydisFindMatchingDefinition+0x37a>
ffffffff80021147:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002114b:	48 8b 50 08          	mov    0x8(%rax),%rdx
ffffffff8002114f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80021153:	48 39 c2             	cmp    %rax,%rdx
ffffffff80021156:	0f 84 2a 02 00 00    	je     ffffffff80021386 <ZydisFindMatchingDefinition+0x588>
ffffffff8002115c:	80 45 ff 01          	addb   $0x1,-0x1(%rbp)
ffffffff80021160:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff80021164:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff80021168:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff8002116c:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff80021170:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff80021174:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
ffffffff80021178:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002117c:	0f b6 40 29          	movzbl 0x29(%rax),%eax
ffffffff80021180:	84 c0                	test   %al,%al
ffffffff80021182:	75 51                	jne    ffffffff800211d5 <ZydisFindMatchingDefinition+0x3d7>
ffffffff80021184:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80021188:	0f b6 40 07          	movzbl 0x7(%rax),%eax
ffffffff8002118c:	c0 e8 02             	shr    $0x2,%al
ffffffff8002118f:	83 e0 07             	and    $0x7,%eax
ffffffff80021192:	0f b6 c0             	movzbl %al,%eax
ffffffff80021195:	23 45 f8             	and    -0x8(%rbp),%eax
ffffffff80021198:	85 c0                	test   %eax,%eax
ffffffff8002119a:	74 0f                	je     ffffffff800211ab <ZydisFindMatchingDefinition+0x3ad>
ffffffff8002119c:	8b 45 f8             	mov    -0x8(%rbp),%eax
ffffffff8002119f:	c1 e0 04             	shl    $0x4,%eax
ffffffff800211a2:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
ffffffff800211a6:	88 42 29             	mov    %al,0x29(%rdx)
ffffffff800211a9:	eb 53                	jmp    ffffffff800211fe <ZydisFindMatchingDefinition+0x400>
ffffffff800211ab:	83 7d f8 01          	cmpl   $0x1,-0x8(%rbp)
ffffffff800211af:	75 0a                	jne    ffffffff800211bb <ZydisFindMatchingDefinition+0x3bd>
ffffffff800211b1:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff800211b5:	c6 40 29 20          	movb   $0x20,0x29(%rax)
ffffffff800211b9:	eb 43                	jmp    ffffffff800211fe <ZydisFindMatchingDefinition+0x400>
ffffffff800211bb:	83 7d f8 02          	cmpl   $0x2,-0x8(%rbp)
ffffffff800211bf:	75 0a                	jne    ffffffff800211cb <ZydisFindMatchingDefinition+0x3cd>
ffffffff800211c1:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff800211c5:	c6 40 29 10          	movb   $0x10,0x29(%rax)
ffffffff800211c9:	eb 33                	jmp    ffffffff800211fe <ZydisFindMatchingDefinition+0x400>
ffffffff800211cb:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff800211cf:	c6 40 29 20          	movb   $0x20,0x29(%rax)
ffffffff800211d3:	eb 29                	jmp    ffffffff800211fe <ZydisFindMatchingDefinition+0x400>
ffffffff800211d5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff800211d9:	0f b6 40 07          	movzbl 0x7(%rax),%eax
ffffffff800211dd:	c0 e8 02             	shr    $0x2,%al
ffffffff800211e0:	83 e0 07             	and    $0x7,%eax
ffffffff800211e3:	0f b6 d0             	movzbl %al,%edx
ffffffff800211e6:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff800211ea:	0f b6 40 29          	movzbl 0x29(%rax),%eax
ffffffff800211ee:	c0 e8 04             	shr    $0x4,%al
ffffffff800211f1:	0f b6 c0             	movzbl %al,%eax
ffffffff800211f4:	21 d0                	and    %edx,%eax
ffffffff800211f6:	85 c0                	test   %eax,%eax
ffffffff800211f8:	0f 84 8b 01 00 00    	je     ffffffff80021389 <ZydisFindMatchingDefinition+0x58b>
ffffffff800211fe:	83 7d f8 04          	cmpl   $0x4,-0x8(%rbp)
ffffffff80021202:	0f 85 8a 00 00 00    	jne    ffffffff80021292 <ZydisFindMatchingDefinition+0x494>
ffffffff80021208:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8002120c:	0f b6 40 04          	movzbl 0x4(%rax),%eax
ffffffff80021210:	83 e0 0e             	and    $0xe,%eax
ffffffff80021213:	3c 08                	cmp    $0x8,%al
ffffffff80021215:	75 46                	jne    ffffffff8002125d <ZydisFindMatchingDefinition+0x45f>
ffffffff80021217:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002121b:	0f b6 40 28          	movzbl 0x28(%rax),%eax
ffffffff8002121f:	84 c0                	test   %al,%al
ffffffff80021221:	75 29                	jne    ffffffff8002124c <ZydisFindMatchingDefinition+0x44e>
ffffffff80021223:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80021227:	0f b6 40 07          	movzbl 0x7(%rax),%eax
ffffffff8002122b:	c0 e8 05             	shr    $0x5,%al
ffffffff8002122e:	0f b6 c0             	movzbl %al,%eax
ffffffff80021231:	83 e0 04             	and    $0x4,%eax
ffffffff80021234:	85 c0                	test   %eax,%eax
ffffffff80021236:	74 0a                	je     ffffffff80021242 <ZydisFindMatchingDefinition+0x444>
ffffffff80021238:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002123c:	c6 40 28 40          	movb   $0x40,0x28(%rax)
ffffffff80021240:	eb 50                	jmp    ffffffff80021292 <ZydisFindMatchingDefinition+0x494>
ffffffff80021242:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff80021246:	c6 40 28 10          	movb   $0x10,0x28(%rax)
ffffffff8002124a:	eb 46                	jmp    ffffffff80021292 <ZydisFindMatchingDefinition+0x494>
ffffffff8002124c:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff80021250:	0f b6 40 28          	movzbl 0x28(%rax),%eax
ffffffff80021254:	3c 20                	cmp    $0x20,%al
ffffffff80021256:	75 3a                	jne    ffffffff80021292 <ZydisFindMatchingDefinition+0x494>
ffffffff80021258:	e9 36 01 00 00       	jmp    ffffffff80021393 <ZydisFindMatchingDefinition+0x595>
ffffffff8002125d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80021261:	0f b6 40 04          	movzbl 0x4(%rax),%eax
ffffffff80021265:	83 e0 0e             	and    $0xe,%eax
ffffffff80021268:	3c 0a                	cmp    $0xa,%al
ffffffff8002126a:	75 26                	jne    ffffffff80021292 <ZydisFindMatchingDefinition+0x494>
ffffffff8002126c:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff80021270:	0f b6 40 28          	movzbl 0x28(%rax),%eax
ffffffff80021274:	84 c0                	test   %al,%al
ffffffff80021276:	75 0a                	jne    ffffffff80021282 <ZydisFindMatchingDefinition+0x484>
ffffffff80021278:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002127c:	c6 40 28 40          	movb   $0x40,0x28(%rax)
ffffffff80021280:	eb 10                	jmp    ffffffff80021292 <ZydisFindMatchingDefinition+0x494>
ffffffff80021282:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff80021286:	0f b6 40 28          	movzbl 0x28(%rax),%eax
ffffffff8002128a:	3c 40                	cmp    $0x40,%al
ffffffff8002128c:	0f 85 fa 00 00 00    	jne    ffffffff8002138c <ZydisFindMatchingDefinition+0x58e>
ffffffff80021292:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff80021296:	0f b6 40 28          	movzbl 0x28(%rax),%eax
ffffffff8002129a:	84 c0                	test   %al,%al
ffffffff8002129c:	0f 85 82 00 00 00    	jne    ffffffff80021324 <ZydisFindMatchingDefinition+0x526>
ffffffff800212a2:	83 7d f8 04          	cmpl   $0x4,-0x8(%rbp)
ffffffff800212a6:	74 05                	je     ffffffff800212ad <ZydisFindMatchingDefinition+0x4af>
ffffffff800212a8:	8b 45 f8             	mov    -0x8(%rbp),%eax
ffffffff800212ab:	eb 05                	jmp    ffffffff800212b2 <ZydisFindMatchingDefinition+0x4b4>
ffffffff800212ad:	b8 02 00 00 00       	mov    $0x2,%eax
ffffffff800212b2:	89 45 ec             	mov    %eax,-0x14(%rbp)
ffffffff800212b5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff800212b9:	0f b6 40 07          	movzbl 0x7(%rax),%eax
ffffffff800212bd:	c0 e8 05             	shr    $0x5,%al
ffffffff800212c0:	0f b6 c0             	movzbl %al,%eax
ffffffff800212c3:	23 45 ec             	and    -0x14(%rbp),%eax
ffffffff800212c6:	85 c0                	test   %eax,%eax
ffffffff800212c8:	74 12                	je     ffffffff800212dc <ZydisFindMatchingDefinition+0x4de>
ffffffff800212ca:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff800212cd:	c1 e0 04             	shl    $0x4,%eax
ffffffff800212d0:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
ffffffff800212d4:	88 42 28             	mov    %al,0x28(%rdx)
ffffffff800212d7:	e9 82 00 00 00       	jmp    ffffffff8002135e <ZydisFindMatchingDefinition+0x560>
ffffffff800212dc:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff800212e0:	0f b6 40 07          	movzbl 0x7(%rax),%eax
ffffffff800212e4:	c0 e8 05             	shr    $0x5,%al
ffffffff800212e7:	0f b6 c0             	movzbl %al,%eax
ffffffff800212ea:	83 e0 01             	and    $0x1,%eax
ffffffff800212ed:	85 c0                	test   %eax,%eax
ffffffff800212ef:	74 0a                	je     ffffffff800212fb <ZydisFindMatchingDefinition+0x4fd>
ffffffff800212f1:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff800212f5:	c6 40 28 10          	movb   $0x10,0x28(%rax)
ffffffff800212f9:	eb 63                	jmp    ffffffff8002135e <ZydisFindMatchingDefinition+0x560>
ffffffff800212fb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff800212ff:	0f b6 40 07          	movzbl 0x7(%rax),%eax
ffffffff80021303:	c0 e8 05             	shr    $0x5,%al
ffffffff80021306:	0f b6 c0             	movzbl %al,%eax
ffffffff80021309:	83 e0 02             	and    $0x2,%eax
ffffffff8002130c:	85 c0                	test   %eax,%eax
ffffffff8002130e:	74 0a                	je     ffffffff8002131a <ZydisFindMatchingDefinition+0x51c>
ffffffff80021310:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff80021314:	c6 40 28 20          	movb   $0x20,0x28(%rax)
ffffffff80021318:	eb 44                	jmp    ffffffff8002135e <ZydisFindMatchingDefinition+0x560>
ffffffff8002131a:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002131e:	c6 40 28 40          	movb   $0x40,0x28(%rax)
ffffffff80021322:	eb 3a                	jmp    ffffffff8002135e <ZydisFindMatchingDefinition+0x560>
ffffffff80021324:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff80021328:	0f b6 40 34          	movzbl 0x34(%rax),%eax
ffffffff8002132c:	84 c0                	test   %al,%al
ffffffff8002132e:	74 0c                	je     ffffffff8002133c <ZydisFindMatchingDefinition+0x53e>
ffffffff80021330:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff80021334:	0f b6 40 28          	movzbl 0x28(%rax),%eax
ffffffff80021338:	3c 40                	cmp    $0x40,%al
ffffffff8002133a:	74 53                	je     ffffffff8002138f <ZydisFindMatchingDefinition+0x591>
ffffffff8002133c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80021340:	0f b6 40 07          	movzbl 0x7(%rax),%eax
ffffffff80021344:	c0 e8 05             	shr    $0x5,%al
ffffffff80021347:	0f b6 d0             	movzbl %al,%edx
ffffffff8002134a:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002134e:	0f b6 40 28          	movzbl 0x28(%rax),%eax
ffffffff80021352:	c0 e8 04             	shr    $0x4,%al
ffffffff80021355:	0f b6 c0             	movzbl %al,%eax
ffffffff80021358:	21 d0                	and    %edx,%eax
ffffffff8002135a:	85 c0                	test   %eax,%eax
ffffffff8002135c:	74 34                	je     ffffffff80021392 <ZydisFindMatchingDefinition+0x594>
ffffffff8002135e:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff80021363:	eb 51                	jmp    ffffffff800213b6 <ZydisFindMatchingDefinition+0x5b8>
ffffffff80021365:	90                   	nop
ffffffff80021366:	eb 2b                	jmp    ffffffff80021393 <ZydisFindMatchingDefinition+0x595>
ffffffff80021368:	90                   	nop
ffffffff80021369:	eb 28                	jmp    ffffffff80021393 <ZydisFindMatchingDefinition+0x595>
ffffffff8002136b:	90                   	nop
ffffffff8002136c:	eb 25                	jmp    ffffffff80021393 <ZydisFindMatchingDefinition+0x595>
ffffffff8002136e:	90                   	nop
ffffffff8002136f:	eb 22                	jmp    ffffffff80021393 <ZydisFindMatchingDefinition+0x595>
ffffffff80021371:	90                   	nop
ffffffff80021372:	eb 1f                	jmp    ffffffff80021393 <ZydisFindMatchingDefinition+0x595>
ffffffff80021374:	90                   	nop
ffffffff80021375:	eb 1c                	jmp    ffffffff80021393 <ZydisFindMatchingDefinition+0x595>
ffffffff80021377:	90                   	nop
ffffffff80021378:	eb 19                	jmp    ffffffff80021393 <ZydisFindMatchingDefinition+0x595>
ffffffff8002137a:	90                   	nop
ffffffff8002137b:	eb 16                	jmp    ffffffff80021393 <ZydisFindMatchingDefinition+0x595>
ffffffff8002137d:	90                   	nop
ffffffff8002137e:	eb 13                	jmp    ffffffff80021393 <ZydisFindMatchingDefinition+0x595>
ffffffff80021380:	90                   	nop
ffffffff80021381:	eb 10                	jmp    ffffffff80021393 <ZydisFindMatchingDefinition+0x595>
ffffffff80021383:	90                   	nop
ffffffff80021384:	eb 0d                	jmp    ffffffff80021393 <ZydisFindMatchingDefinition+0x595>
ffffffff80021386:	90                   	nop
ffffffff80021387:	eb 0a                	jmp    ffffffff80021393 <ZydisFindMatchingDefinition+0x595>
ffffffff80021389:	90                   	nop
ffffffff8002138a:	eb 07                	jmp    ffffffff80021393 <ZydisFindMatchingDefinition+0x595>
ffffffff8002138c:	90                   	nop
ffffffff8002138d:	eb 04                	jmp    ffffffff80021393 <ZydisFindMatchingDefinition+0x595>
ffffffff8002138f:	90                   	nop
ffffffff80021390:	eb 01                	jmp    ffffffff80021393 <ZydisFindMatchingDefinition+0x595>
ffffffff80021392:	90                   	nop
ffffffff80021393:	80 45 ff 01          	addb   $0x1,-0x1(%rbp)
ffffffff80021397:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8002139b:	48 83 c0 09          	add    $0x9,%rax
ffffffff8002139f:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff800213a3:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
ffffffff800213a7:	3a 45 fe             	cmp    -0x2(%rbp),%al
ffffffff800213aa:	0f 82 3c fb ff ff    	jb     ffffffff80020eec <ZydisFindMatchingDefinition+0xee>
ffffffff800213b0:	b8 0c 00 20 80       	mov    $0x8020000c,%eax
ffffffff800213b5:	90                   	nop
ffffffff800213b6:	c9                   	leave  
ffffffff800213b7:	c3                   	ret    

ffffffff800213b8 <ZydisEmitUInt>:
ffffffff800213b8:	f3 0f 1e fa          	endbr64 
ffffffff800213bc:	55                   	push   %rbp
ffffffff800213bd:	48 89 e5             	mov    %rsp,%rbp
ffffffff800213c0:	48 83 ec 28          	sub    $0x28,%rsp
ffffffff800213c4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff800213c8:	89 f0                	mov    %esi,%eax
ffffffff800213ca:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
ffffffff800213ce:	88 45 e4             	mov    %al,-0x1c(%rbp)
ffffffff800213d1:	80 7d e4 01          	cmpb   $0x1,-0x1c(%rbp)
ffffffff800213d5:	74 10                	je     ffffffff800213e7 <ZydisEmitUInt+0x2f>
ffffffff800213d7:	80 7d e4 02          	cmpb   $0x2,-0x1c(%rbp)
ffffffff800213db:	74 0a                	je     ffffffff800213e7 <ZydisEmitUInt+0x2f>
ffffffff800213dd:	80 7d e4 04          	cmpb   $0x4,-0x1c(%rbp)
ffffffff800213e1:	74 04                	je     ffffffff800213e7 <ZydisEmitUInt+0x2f>
ffffffff800213e3:	80 7d e4 08          	cmpb   $0x8,-0x1c(%rbp)
ffffffff800213e7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff800213eb:	48 8b 50 10          	mov    0x10(%rax),%rdx
ffffffff800213ef:	0f b6 45 e4          	movzbl -0x1c(%rbp),%eax
ffffffff800213f3:	48 01 d0             	add    %rdx,%rax
ffffffff800213f6:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff800213fa:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff800213fe:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff80021402:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
ffffffff80021406:	76 07                	jbe    ffffffff8002140f <ZydisEmitUInt+0x57>
ffffffff80021408:	b8 09 00 10 80       	mov    $0x80100009,%eax
ffffffff8002140d:	eb 37                	jmp    ffffffff80021446 <ZydisEmitUInt+0x8e>
ffffffff8002140f:	0f b6 55 e4          	movzbl -0x1c(%rbp),%edx
ffffffff80021413:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80021417:	48 8b 08             	mov    (%rax),%rcx
ffffffff8002141a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8002141e:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff80021422:	48 01 c1             	add    %rax,%rcx
ffffffff80021425:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
ffffffff80021429:	48 89 c6             	mov    %rax,%rsi
ffffffff8002142c:	48 89 cf             	mov    %rcx,%rdi
ffffffff8002142f:	e8 64 bf ff ff       	call   ffffffff8001d398 <ZYAN_MEMCPY.lto_priv.4>
ffffffff80021434:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80021438:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff8002143c:	48 89 50 10          	mov    %rdx,0x10(%rax)
ffffffff80021440:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff80021445:	90                   	nop
ffffffff80021446:	c9                   	leave  
ffffffff80021447:	c3                   	ret    

ffffffff80021448 <ZydisEmitByte>:
ffffffff80021448:	f3 0f 1e fa          	endbr64 
ffffffff8002144c:	55                   	push   %rbp
ffffffff8002144d:	48 89 e5             	mov    %rsp,%rbp
ffffffff80021450:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff80021454:	89 f8                	mov    %edi,%eax
ffffffff80021456:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff8002145a:	88 45 fc             	mov    %al,-0x4(%rbp)
ffffffff8002145d:	0f b6 45 fc          	movzbl -0x4(%rbp),%eax
ffffffff80021461:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff80021465:	be 01 00 00 00       	mov    $0x1,%esi
ffffffff8002146a:	48 89 c7             	mov    %rax,%rdi
ffffffff8002146d:	e8 46 ff ff ff       	call   ffffffff800213b8 <ZydisEmitUInt>
ffffffff80021472:	c9                   	leave  
ffffffff80021473:	c3                   	ret    

ffffffff80021474 <ZydisEmitLegacyPrefixes>:
ffffffff80021474:	f3 0f 1e fa          	endbr64 
ffffffff80021478:	55                   	push   %rbp
ffffffff80021479:	48 89 e5             	mov    %rsp,%rbp
ffffffff8002147c:	48 83 ec 50          	sub    $0x50,%rsp
ffffffff80021480:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
ffffffff80021484:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
ffffffff80021488:	c6 45 ff 00          	movb   $0x0,-0x1(%rbp)
ffffffff8002148c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff80021490:	8b 40 08             	mov    0x8(%rax),%eax
ffffffff80021493:	83 e8 02             	sub    $0x2,%eax
ffffffff80021496:	83 f8 03             	cmp    $0x3,%eax
ffffffff80021499:	77 06                	ja     ffffffff800214a1 <ZydisEmitLegacyPrefixes+0x2d>
ffffffff8002149b:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
ffffffff8002149f:	eb 01                	jmp    ffffffff800214a2 <ZydisEmitLegacyPrefixes+0x2e>
ffffffff800214a1:	90                   	nop
ffffffff800214a2:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff800214a6:	48 8b 00             	mov    (%rax),%rax
ffffffff800214a9:	25 00 00 00 08       	and    $0x8000000,%eax
ffffffff800214ae:	48 85 c0             	test   %rax,%rax
ffffffff800214b1:	74 23                	je     ffffffff800214d6 <ZydisEmitLegacyPrefixes+0x62>
ffffffff800214b3:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
ffffffff800214b7:	48 89 c6             	mov    %rax,%rsi
ffffffff800214ba:	bf f0 00 00 00       	mov    $0xf0,%edi
ffffffff800214bf:	e8 84 ff ff ff       	call   ffffffff80021448 <ZydisEmitByte>
ffffffff800214c4:	89 45 f8             	mov    %eax,-0x8(%rbp)
ffffffff800214c7:	8b 45 f8             	mov    -0x8(%rbp),%eax
ffffffff800214ca:	85 c0                	test   %eax,%eax
ffffffff800214cc:	79 08                	jns    ffffffff800214d6 <ZydisEmitLegacyPrefixes+0x62>
ffffffff800214ce:	8b 45 f8             	mov    -0x8(%rbp),%eax
ffffffff800214d1:	e9 9c 02 00 00       	jmp    ffffffff80021772 <ZydisEmitLegacyPrefixes+0x2fe>
ffffffff800214d6:	80 7d ff 00          	cmpb   $0x0,-0x1(%rbp)
ffffffff800214da:	75 78                	jne    ffffffff80021554 <ZydisEmitLegacyPrefixes+0xe0>
ffffffff800214dc:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff800214e0:	48 8b 10             	mov    (%rax),%rdx
ffffffff800214e3:	48 b8 00 00 00 c0 01 	movabs $0x1c0000000,%rax
ffffffff800214ea:	00 00 00 
ffffffff800214ed:	48 21 d0             	and    %rdx,%rax
ffffffff800214f0:	48 85 c0             	test   %rax,%rax
ffffffff800214f3:	74 23                	je     ffffffff80021518 <ZydisEmitLegacyPrefixes+0xa4>
ffffffff800214f5:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
ffffffff800214f9:	48 89 c6             	mov    %rax,%rsi
ffffffff800214fc:	bf f2 00 00 00       	mov    $0xf2,%edi
ffffffff80021501:	e8 42 ff ff ff       	call   ffffffff80021448 <ZydisEmitByte>
ffffffff80021506:	89 45 f4             	mov    %eax,-0xc(%rbp)
ffffffff80021509:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff8002150c:	85 c0                	test   %eax,%eax
ffffffff8002150e:	79 08                	jns    ffffffff80021518 <ZydisEmitLegacyPrefixes+0xa4>
ffffffff80021510:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff80021513:	e9 5a 02 00 00       	jmp    ffffffff80021772 <ZydisEmitLegacyPrefixes+0x2fe>
ffffffff80021518:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff8002151c:	48 8b 10             	mov    (%rax),%rdx
ffffffff8002151f:	48 b8 00 00 00 30 02 	movabs $0x230000000,%rax
ffffffff80021526:	00 00 00 
ffffffff80021529:	48 21 d0             	and    %rdx,%rax
ffffffff8002152c:	48 85 c0             	test   %rax,%rax
ffffffff8002152f:	74 23                	je     ffffffff80021554 <ZydisEmitLegacyPrefixes+0xe0>
ffffffff80021531:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
ffffffff80021535:	48 89 c6             	mov    %rax,%rsi
ffffffff80021538:	bf f3 00 00 00       	mov    $0xf3,%edi
ffffffff8002153d:	e8 06 ff ff ff       	call   ffffffff80021448 <ZydisEmitByte>
ffffffff80021542:	89 45 f0             	mov    %eax,-0x10(%rbp)
ffffffff80021545:	8b 45 f0             	mov    -0x10(%rbp),%eax
ffffffff80021548:	85 c0                	test   %eax,%eax
ffffffff8002154a:	79 08                	jns    ffffffff80021554 <ZydisEmitLegacyPrefixes+0xe0>
ffffffff8002154c:	8b 45 f0             	mov    -0x10(%rbp),%eax
ffffffff8002154f:	e9 1e 02 00 00       	jmp    ffffffff80021772 <ZydisEmitLegacyPrefixes+0x2fe>
ffffffff80021554:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff80021558:	48 8b 10             	mov    (%rax),%rdx
ffffffff8002155b:	48 b8 00 00 00 00 24 	movabs $0x2400000000,%rax
ffffffff80021562:	00 00 00 
ffffffff80021565:	48 21 d0             	and    %rdx,%rax
ffffffff80021568:	48 85 c0             	test   %rax,%rax
ffffffff8002156b:	74 23                	je     ffffffff80021590 <ZydisEmitLegacyPrefixes+0x11c>
ffffffff8002156d:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
ffffffff80021571:	48 89 c6             	mov    %rax,%rsi
ffffffff80021574:	bf 2e 00 00 00       	mov    $0x2e,%edi
ffffffff80021579:	e8 ca fe ff ff       	call   ffffffff80021448 <ZydisEmitByte>
ffffffff8002157e:	89 45 ec             	mov    %eax,-0x14(%rbp)
ffffffff80021581:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff80021584:	85 c0                	test   %eax,%eax
ffffffff80021586:	79 08                	jns    ffffffff80021590 <ZydisEmitLegacyPrefixes+0x11c>
ffffffff80021588:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff8002158b:	e9 e2 01 00 00       	jmp    ffffffff80021772 <ZydisEmitLegacyPrefixes+0x2fe>
ffffffff80021590:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff80021594:	48 8b 10             	mov    (%rax),%rdx
ffffffff80021597:	48 b8 00 00 00 00 40 	movabs $0x4000000000,%rax
ffffffff8002159e:	00 00 00 
ffffffff800215a1:	48 21 d0             	and    %rdx,%rax
ffffffff800215a4:	48 85 c0             	test   %rax,%rax
ffffffff800215a7:	74 23                	je     ffffffff800215cc <ZydisEmitLegacyPrefixes+0x158>
ffffffff800215a9:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
ffffffff800215ad:	48 89 c6             	mov    %rax,%rsi
ffffffff800215b0:	bf 36 00 00 00       	mov    $0x36,%edi
ffffffff800215b5:	e8 8e fe ff ff       	call   ffffffff80021448 <ZydisEmitByte>
ffffffff800215ba:	89 45 e8             	mov    %eax,-0x18(%rbp)
ffffffff800215bd:	8b 45 e8             	mov    -0x18(%rbp),%eax
ffffffff800215c0:	85 c0                	test   %eax,%eax
ffffffff800215c2:	79 08                	jns    ffffffff800215cc <ZydisEmitLegacyPrefixes+0x158>
ffffffff800215c4:	8b 45 e8             	mov    -0x18(%rbp),%eax
ffffffff800215c7:	e9 a6 01 00 00       	jmp    ffffffff80021772 <ZydisEmitLegacyPrefixes+0x2fe>
ffffffff800215cc:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff800215d0:	48 8b 10             	mov    (%rax),%rdx
ffffffff800215d3:	48 b8 00 00 00 00 88 	movabs $0x8800000000,%rax
ffffffff800215da:	00 00 00 
ffffffff800215dd:	48 21 d0             	and    %rdx,%rax
ffffffff800215e0:	48 85 c0             	test   %rax,%rax
ffffffff800215e3:	74 23                	je     ffffffff80021608 <ZydisEmitLegacyPrefixes+0x194>
ffffffff800215e5:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
ffffffff800215e9:	48 89 c6             	mov    %rax,%rsi
ffffffff800215ec:	bf 3e 00 00 00       	mov    $0x3e,%edi
ffffffff800215f1:	e8 52 fe ff ff       	call   ffffffff80021448 <ZydisEmitByte>
ffffffff800215f6:	89 45 e4             	mov    %eax,-0x1c(%rbp)
ffffffff800215f9:	8b 45 e4             	mov    -0x1c(%rbp),%eax
ffffffff800215fc:	85 c0                	test   %eax,%eax
ffffffff800215fe:	79 08                	jns    ffffffff80021608 <ZydisEmitLegacyPrefixes+0x194>
ffffffff80021600:	8b 45 e4             	mov    -0x1c(%rbp),%eax
ffffffff80021603:	e9 6a 01 00 00       	jmp    ffffffff80021772 <ZydisEmitLegacyPrefixes+0x2fe>
ffffffff80021608:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff8002160c:	48 8b 10             	mov    (%rax),%rdx
ffffffff8002160f:	48 b8 00 00 00 00 00 	movabs $0x10000000000,%rax
ffffffff80021616:	01 00 00 
ffffffff80021619:	48 21 d0             	and    %rdx,%rax
ffffffff8002161c:	48 85 c0             	test   %rax,%rax
ffffffff8002161f:	74 23                	je     ffffffff80021644 <ZydisEmitLegacyPrefixes+0x1d0>
ffffffff80021621:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
ffffffff80021625:	48 89 c6             	mov    %rax,%rsi
ffffffff80021628:	bf 26 00 00 00       	mov    $0x26,%edi
ffffffff8002162d:	e8 16 fe ff ff       	call   ffffffff80021448 <ZydisEmitByte>
ffffffff80021632:	89 45 e0             	mov    %eax,-0x20(%rbp)
ffffffff80021635:	8b 45 e0             	mov    -0x20(%rbp),%eax
ffffffff80021638:	85 c0                	test   %eax,%eax
ffffffff8002163a:	79 08                	jns    ffffffff80021644 <ZydisEmitLegacyPrefixes+0x1d0>
ffffffff8002163c:	8b 45 e0             	mov    -0x20(%rbp),%eax
ffffffff8002163f:	e9 2e 01 00 00       	jmp    ffffffff80021772 <ZydisEmitLegacyPrefixes+0x2fe>
ffffffff80021644:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff80021648:	48 8b 10             	mov    (%rax),%rdx
ffffffff8002164b:	48 b8 00 00 00 00 00 	movabs $0x20000000000,%rax
ffffffff80021652:	02 00 00 
ffffffff80021655:	48 21 d0             	and    %rdx,%rax
ffffffff80021658:	48 85 c0             	test   %rax,%rax
ffffffff8002165b:	74 23                	je     ffffffff80021680 <ZydisEmitLegacyPrefixes+0x20c>
ffffffff8002165d:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
ffffffff80021661:	48 89 c6             	mov    %rax,%rsi
ffffffff80021664:	bf 64 00 00 00       	mov    $0x64,%edi
ffffffff80021669:	e8 da fd ff ff       	call   ffffffff80021448 <ZydisEmitByte>
ffffffff8002166e:	89 45 dc             	mov    %eax,-0x24(%rbp)
ffffffff80021671:	8b 45 dc             	mov    -0x24(%rbp),%eax
ffffffff80021674:	85 c0                	test   %eax,%eax
ffffffff80021676:	79 08                	jns    ffffffff80021680 <ZydisEmitLegacyPrefixes+0x20c>
ffffffff80021678:	8b 45 dc             	mov    -0x24(%rbp),%eax
ffffffff8002167b:	e9 f2 00 00 00       	jmp    ffffffff80021772 <ZydisEmitLegacyPrefixes+0x2fe>
ffffffff80021680:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff80021684:	48 8b 10             	mov    (%rax),%rdx
ffffffff80021687:	48 b8 00 00 00 00 00 	movabs $0x40000000000,%rax
ffffffff8002168e:	04 00 00 
ffffffff80021691:	48 21 d0             	and    %rdx,%rax
ffffffff80021694:	48 85 c0             	test   %rax,%rax
ffffffff80021697:	74 23                	je     ffffffff800216bc <ZydisEmitLegacyPrefixes+0x248>
ffffffff80021699:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
ffffffff8002169d:	48 89 c6             	mov    %rax,%rsi
ffffffff800216a0:	bf 65 00 00 00       	mov    $0x65,%edi
ffffffff800216a5:	e8 9e fd ff ff       	call   ffffffff80021448 <ZydisEmitByte>
ffffffff800216aa:	89 45 d8             	mov    %eax,-0x28(%rbp)
ffffffff800216ad:	8b 45 d8             	mov    -0x28(%rbp),%eax
ffffffff800216b0:	85 c0                	test   %eax,%eax
ffffffff800216b2:	79 08                	jns    ffffffff800216bc <ZydisEmitLegacyPrefixes+0x248>
ffffffff800216b4:	8b 45 d8             	mov    -0x28(%rbp),%eax
ffffffff800216b7:	e9 b6 00 00 00       	jmp    ffffffff80021772 <ZydisEmitLegacyPrefixes+0x2fe>
ffffffff800216bc:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff800216c0:	48 8b 10             	mov    (%rax),%rdx
ffffffff800216c3:	48 b8 00 00 00 00 10 	movabs $0x1000000000,%rax
ffffffff800216ca:	00 00 00 
ffffffff800216cd:	48 21 d0             	and    %rdx,%rax
ffffffff800216d0:	48 85 c0             	test   %rax,%rax
ffffffff800216d3:	74 20                	je     ffffffff800216f5 <ZydisEmitLegacyPrefixes+0x281>
ffffffff800216d5:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
ffffffff800216d9:	48 89 c6             	mov    %rax,%rsi
ffffffff800216dc:	bf 3e 00 00 00       	mov    $0x3e,%edi
ffffffff800216e1:	e8 62 fd ff ff       	call   ffffffff80021448 <ZydisEmitByte>
ffffffff800216e6:	89 45 d4             	mov    %eax,-0x2c(%rbp)
ffffffff800216e9:	8b 45 d4             	mov    -0x2c(%rbp),%eax
ffffffff800216ec:	85 c0                	test   %eax,%eax
ffffffff800216ee:	79 05                	jns    ffffffff800216f5 <ZydisEmitLegacyPrefixes+0x281>
ffffffff800216f0:	8b 45 d4             	mov    -0x2c(%rbp),%eax
ffffffff800216f3:	eb 7d                	jmp    ffffffff80021772 <ZydisEmitLegacyPrefixes+0x2fe>
ffffffff800216f5:	80 7d ff 00          	cmpb   $0x0,-0x1(%rbp)
ffffffff800216f9:	75 39                	jne    ffffffff80021734 <ZydisEmitLegacyPrefixes+0x2c0>
ffffffff800216fb:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff800216ff:	48 8b 10             	mov    (%rax),%rdx
ffffffff80021702:	48 b8 00 00 00 00 00 	movabs $0x80000000000,%rax
ffffffff80021709:	08 00 00 
ffffffff8002170c:	48 21 d0             	and    %rdx,%rax
ffffffff8002170f:	48 85 c0             	test   %rax,%rax
ffffffff80021712:	74 20                	je     ffffffff80021734 <ZydisEmitLegacyPrefixes+0x2c0>
ffffffff80021714:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
ffffffff80021718:	48 89 c6             	mov    %rax,%rsi
ffffffff8002171b:	bf 66 00 00 00       	mov    $0x66,%edi
ffffffff80021720:	e8 23 fd ff ff       	call   ffffffff80021448 <ZydisEmitByte>
ffffffff80021725:	89 45 d0             	mov    %eax,-0x30(%rbp)
ffffffff80021728:	8b 45 d0             	mov    -0x30(%rbp),%eax
ffffffff8002172b:	85 c0                	test   %eax,%eax
ffffffff8002172d:	79 05                	jns    ffffffff80021734 <ZydisEmitLegacyPrefixes+0x2c0>
ffffffff8002172f:	8b 45 d0             	mov    -0x30(%rbp),%eax
ffffffff80021732:	eb 3e                	jmp    ffffffff80021772 <ZydisEmitLegacyPrefixes+0x2fe>
ffffffff80021734:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff80021738:	48 8b 10             	mov    (%rax),%rdx
ffffffff8002173b:	48 b8 00 00 00 00 00 	movabs $0x100000000000,%rax
ffffffff80021742:	10 00 00 
ffffffff80021745:	48 21 d0             	and    %rdx,%rax
ffffffff80021748:	48 85 c0             	test   %rax,%rax
ffffffff8002174b:	74 20                	je     ffffffff8002176d <ZydisEmitLegacyPrefixes+0x2f9>
ffffffff8002174d:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
ffffffff80021751:	48 89 c6             	mov    %rax,%rsi
ffffffff80021754:	bf 67 00 00 00       	mov    $0x67,%edi
ffffffff80021759:	e8 ea fc ff ff       	call   ffffffff80021448 <ZydisEmitByte>
ffffffff8002175e:	89 45 cc             	mov    %eax,-0x34(%rbp)
ffffffff80021761:	8b 45 cc             	mov    -0x34(%rbp),%eax
ffffffff80021764:	85 c0                	test   %eax,%eax
ffffffff80021766:	79 05                	jns    ffffffff8002176d <ZydisEmitLegacyPrefixes+0x2f9>
ffffffff80021768:	8b 45 cc             	mov    -0x34(%rbp),%eax
ffffffff8002176b:	eb 05                	jmp    ffffffff80021772 <ZydisEmitLegacyPrefixes+0x2fe>
ffffffff8002176d:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff80021772:	c9                   	leave  
ffffffff80021773:	c3                   	ret    

ffffffff80021774 <ZydisEncodeRexLowNibble>:
ffffffff80021774:	f3 0f 1e fa          	endbr64 
ffffffff80021778:	55                   	push   %rbp
ffffffff80021779:	48 89 e5             	mov    %rsp,%rbp
ffffffff8002177c:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff80021780:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff80021784:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
ffffffff80021788:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
ffffffff8002178d:	74 07                	je     ffffffff80021796 <ZydisEncodeRexLowNibble+0x22>
ffffffff8002178f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80021793:	c6 00 00             	movb   $0x0,(%rax)
ffffffff80021796:	c6 45 ff 00          	movb   $0x0,-0x1(%rbp)
ffffffff8002179a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002179e:	48 8b 00             	mov    (%rax),%rax
ffffffff800217a1:	83 e0 01             	and    $0x1,%eax
ffffffff800217a4:	48 85 c0             	test   %rax,%rax
ffffffff800217a7:	74 7e                	je     ffffffff80021827 <ZydisEncodeRexLowNibble+0xb3>
ffffffff800217a9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800217ad:	48 8b 00             	mov    (%rax),%rax
ffffffff800217b0:	83 e0 02             	and    $0x2,%eax
ffffffff800217b3:	48 85 c0             	test   %rax,%rax
ffffffff800217b6:	74 6f                	je     ffffffff80021827 <ZydisEncodeRexLowNibble+0xb3>
ffffffff800217b8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800217bc:	0f b6 40 1a          	movzbl 0x1a(%rax),%eax
ffffffff800217c0:	0f b6 c0             	movzbl %al,%eax
ffffffff800217c3:	83 e0 08             	and    $0x8,%eax
ffffffff800217c6:	85 c0                	test   %eax,%eax
ffffffff800217c8:	74 04                	je     ffffffff800217ce <ZydisEncodeRexLowNibble+0x5a>
ffffffff800217ca:	80 4d ff 01          	orb    $0x1,-0x1(%rbp)
ffffffff800217ce:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800217d2:	0f b6 40 19          	movzbl 0x19(%rax),%eax
ffffffff800217d6:	0f b6 c0             	movzbl %al,%eax
ffffffff800217d9:	83 e0 08             	and    $0x8,%eax
ffffffff800217dc:	85 c0                	test   %eax,%eax
ffffffff800217de:	74 04                	je     ffffffff800217e4 <ZydisEncodeRexLowNibble+0x70>
ffffffff800217e0:	80 4d ff 02          	orb    $0x2,-0x1(%rbp)
ffffffff800217e4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800217e8:	0f b6 40 16          	movzbl 0x16(%rax),%eax
ffffffff800217ec:	0f b6 c0             	movzbl %al,%eax
ffffffff800217ef:	83 e0 08             	and    $0x8,%eax
ffffffff800217f2:	85 c0                	test   %eax,%eax
ffffffff800217f4:	74 04                	je     ffffffff800217fa <ZydisEncodeRexLowNibble+0x86>
ffffffff800217f6:	80 4d ff 04          	orb    $0x4,-0x1(%rbp)
ffffffff800217fa:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
ffffffff800217ff:	0f 84 ad 00 00 00    	je     ffffffff800218b2 <ZydisEncodeRexLowNibble+0x13e>
ffffffff80021805:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80021809:	0f b6 40 16          	movzbl 0x16(%rax),%eax
ffffffff8002180d:	0f b6 c0             	movzbl %al,%eax
ffffffff80021810:	83 e0 10             	and    $0x10,%eax
ffffffff80021813:	85 c0                	test   %eax,%eax
ffffffff80021815:	0f 84 97 00 00 00    	je     ffffffff800218b2 <ZydisEncodeRexLowNibble+0x13e>
ffffffff8002181b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8002181f:	c6 00 01             	movb   $0x1,(%rax)
ffffffff80021822:	e9 8b 00 00 00       	jmp    ffffffff800218b2 <ZydisEncodeRexLowNibble+0x13e>
ffffffff80021827:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002182b:	48 8b 00             	mov    (%rax),%rax
ffffffff8002182e:	83 e0 01             	and    $0x1,%eax
ffffffff80021831:	48 85 c0             	test   %rax,%rax
ffffffff80021834:	74 64                	je     ffffffff8002189a <ZydisEncodeRexLowNibble+0x126>
ffffffff80021836:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002183a:	0f b6 40 17          	movzbl 0x17(%rax),%eax
ffffffff8002183e:	0f b6 c0             	movzbl %al,%eax
ffffffff80021841:	83 e0 08             	and    $0x8,%eax
ffffffff80021844:	85 c0                	test   %eax,%eax
ffffffff80021846:	74 04                	je     ffffffff8002184c <ZydisEncodeRexLowNibble+0xd8>
ffffffff80021848:	80 4d ff 01          	orb    $0x1,-0x1(%rbp)
ffffffff8002184c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80021850:	0f b6 40 17          	movzbl 0x17(%rax),%eax
ffffffff80021854:	0f b6 c0             	movzbl %al,%eax
ffffffff80021857:	83 e0 10             	and    $0x10,%eax
ffffffff8002185a:	85 c0                	test   %eax,%eax
ffffffff8002185c:	74 04                	je     ffffffff80021862 <ZydisEncodeRexLowNibble+0xee>
ffffffff8002185e:	80 4d ff 02          	orb    $0x2,-0x1(%rbp)
ffffffff80021862:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80021866:	0f b6 40 16          	movzbl 0x16(%rax),%eax
ffffffff8002186a:	0f b6 c0             	movzbl %al,%eax
ffffffff8002186d:	83 e0 08             	and    $0x8,%eax
ffffffff80021870:	85 c0                	test   %eax,%eax
ffffffff80021872:	74 04                	je     ffffffff80021878 <ZydisEncodeRexLowNibble+0x104>
ffffffff80021874:	80 4d ff 04          	orb    $0x4,-0x1(%rbp)
ffffffff80021878:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
ffffffff8002187d:	74 34                	je     ffffffff800218b3 <ZydisEncodeRexLowNibble+0x13f>
ffffffff8002187f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80021883:	0f b6 40 16          	movzbl 0x16(%rax),%eax
ffffffff80021887:	0f b6 c0             	movzbl %al,%eax
ffffffff8002188a:	83 e0 10             	and    $0x10,%eax
ffffffff8002188d:	85 c0                	test   %eax,%eax
ffffffff8002188f:	74 22                	je     ffffffff800218b3 <ZydisEncodeRexLowNibble+0x13f>
ffffffff80021891:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80021895:	c6 00 01             	movb   $0x1,(%rax)
ffffffff80021898:	eb 19                	jmp    ffffffff800218b3 <ZydisEncodeRexLowNibble+0x13f>
ffffffff8002189a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002189e:	0f b6 40 17          	movzbl 0x17(%rax),%eax
ffffffff800218a2:	0f b6 c0             	movzbl %al,%eax
ffffffff800218a5:	83 e0 08             	and    $0x8,%eax
ffffffff800218a8:	85 c0                	test   %eax,%eax
ffffffff800218aa:	74 07                	je     ffffffff800218b3 <ZydisEncodeRexLowNibble+0x13f>
ffffffff800218ac:	80 4d ff 01          	orb    $0x1,-0x1(%rbp)
ffffffff800218b0:	eb 01                	jmp    ffffffff800218b3 <ZydisEncodeRexLowNibble+0x13f>
ffffffff800218b2:	90                   	nop
ffffffff800218b3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800218b7:	0f b6 40 1b          	movzbl 0x1b(%rax),%eax
ffffffff800218bb:	84 c0                	test   %al,%al
ffffffff800218bd:	74 04                	je     ffffffff800218c3 <ZydisEncodeRexLowNibble+0x14f>
ffffffff800218bf:	80 4d ff 08          	orb    $0x8,-0x1(%rbp)
ffffffff800218c3:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
ffffffff800218c7:	c9                   	leave  
ffffffff800218c8:	c3                   	ret    

ffffffff800218c9 <ZydisEmitRex>:
ffffffff800218c9:	f3 0f 1e fa          	endbr64 
ffffffff800218cd:	55                   	push   %rbp
ffffffff800218ce:	48 89 e5             	mov    %rsp,%rbp
ffffffff800218d1:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff800218d5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff800218d9:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
ffffffff800218dd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800218e1:	be 00 00 00 00       	mov    $0x0,%esi
ffffffff800218e6:	48 89 c7             	mov    %rax,%rdi
ffffffff800218e9:	e8 86 fe ff ff       	call   ffffffff80021774 <ZydisEncodeRexLowNibble>
ffffffff800218ee:	88 45 ff             	mov    %al,-0x1(%rbp)
ffffffff800218f1:	80 7d ff 00          	cmpb   $0x0,-0x1(%rbp)
ffffffff800218f5:	75 0f                	jne    ffffffff80021906 <ZydisEmitRex+0x3d>
ffffffff800218f7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800218fb:	48 8b 00             	mov    (%rax),%rax
ffffffff800218fe:	83 e0 04             	and    $0x4,%eax
ffffffff80021901:	48 85 c0             	test   %rax,%rax
ffffffff80021904:	74 27                	je     ffffffff8002192d <ZydisEmitRex+0x64>
ffffffff80021906:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
ffffffff8002190a:	83 c8 40             	or     $0x40,%eax
ffffffff8002190d:	0f b6 c0             	movzbl %al,%eax
ffffffff80021910:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff80021914:	48 89 d6             	mov    %rdx,%rsi
ffffffff80021917:	89 c7                	mov    %eax,%edi
ffffffff80021919:	e8 2a fb ff ff       	call   ffffffff80021448 <ZydisEmitByte>
ffffffff8002191e:	89 45 f8             	mov    %eax,-0x8(%rbp)
ffffffff80021921:	8b 45 f8             	mov    -0x8(%rbp),%eax
ffffffff80021924:	85 c0                	test   %eax,%eax
ffffffff80021926:	79 05                	jns    ffffffff8002192d <ZydisEmitRex+0x64>
ffffffff80021928:	8b 45 f8             	mov    -0x8(%rbp),%eax
ffffffff8002192b:	eb 05                	jmp    ffffffff80021932 <ZydisEmitRex+0x69>
ffffffff8002192d:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff80021932:	c9                   	leave  
ffffffff80021933:	c3                   	ret    

ffffffff80021934 <ZydisEncodeVexCommons>:
ffffffff80021934:	f3 0f 1e fa          	endbr64 
ffffffff80021938:	55                   	push   %rbp
ffffffff80021939:	48 89 e5             	mov    %rsp,%rbp
ffffffff8002193c:	48 83 ec 30          	sub    $0x30,%rsp
ffffffff80021940:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff80021944:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff80021948:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
ffffffff8002194c:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
ffffffff80021950:	4c 89 45 d8          	mov    %r8,-0x28(%rbp)
ffffffff80021954:	4c 89 4d d0          	mov    %r9,-0x30(%rbp)
ffffffff80021958:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8002195c:	8b 40 0c             	mov    0xc(%rax),%eax
ffffffff8002195f:	83 f8 0b             	cmp    $0xb,%eax
ffffffff80021962:	77 35                	ja     ffffffff80021999 <ZydisEncodeVexCommons+0x65>
ffffffff80021964:	83 f8 09             	cmp    $0x9,%eax
ffffffff80021967:	73 1e                	jae    ffffffff80021987 <ZydisEncodeVexCommons+0x53>
ffffffff80021969:	83 f8 03             	cmp    $0x3,%eax
ffffffff8002196c:	76 08                	jbe    ffffffff80021976 <ZydisEncodeVexCommons+0x42>
ffffffff8002196e:	83 e8 05             	sub    $0x5,%eax
ffffffff80021971:	83 f8 01             	cmp    $0x1,%eax
ffffffff80021974:	77 23                	ja     ffffffff80021999 <ZydisEncodeVexCommons+0x65>
ffffffff80021976:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8002197a:	8b 40 0c             	mov    0xc(%rax),%eax
ffffffff8002197d:	89 c2                	mov    %eax,%edx
ffffffff8002197f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80021983:	88 10                	mov    %dl,(%rax)
ffffffff80021985:	eb 14                	jmp    ffffffff8002199b <ZydisEncodeVexCommons+0x67>
ffffffff80021987:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8002198b:	8b 40 0c             	mov    0xc(%rax),%eax
ffffffff8002198e:	83 e8 01             	sub    $0x1,%eax
ffffffff80021991:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff80021995:	88 02                	mov    %al,(%rdx)
ffffffff80021997:	eb 02                	jmp    ffffffff8002199b <ZydisEncodeVexCommons+0x67>
ffffffff80021999:	eb fe                	jmp    ffffffff80021999 <ZydisEncodeVexCommons+0x65>
ffffffff8002199b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8002199f:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%rax)
ffffffff800219a6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800219aa:	c6 00 00             	movb   $0x0,(%rax)
ffffffff800219ad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff800219b1:	48 8b 10             	mov    (%rax),%rdx
ffffffff800219b4:	48 b8 00 00 00 00 00 	movabs $0x80000000000,%rax
ffffffff800219bb:	08 00 00 
ffffffff800219be:	48 21 d0             	and    %rdx,%rax
ffffffff800219c1:	48 85 c0             	test   %rax,%rax
ffffffff800219c4:	74 09                	je     ffffffff800219cf <ZydisEncodeVexCommons+0x9b>
ffffffff800219c6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800219ca:	c6 00 01             	movb   $0x1,(%rax)
ffffffff800219cd:	eb 32                	jmp    ffffffff80021a01 <ZydisEncodeVexCommons+0xcd>
ffffffff800219cf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff800219d3:	48 8b 00             	mov    (%rax),%rax
ffffffff800219d6:	25 00 00 00 10       	and    $0x10000000,%eax
ffffffff800219db:	48 85 c0             	test   %rax,%rax
ffffffff800219de:	74 09                	je     ffffffff800219e9 <ZydisEncodeVexCommons+0xb5>
ffffffff800219e0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800219e4:	c6 00 02             	movb   $0x2,(%rax)
ffffffff800219e7:	eb 18                	jmp    ffffffff80021a01 <ZydisEncodeVexCommons+0xcd>
ffffffff800219e9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff800219ed:	48 8b 00             	mov    (%rax),%rax
ffffffff800219f0:	25 00 00 00 40       	and    $0x40000000,%eax
ffffffff800219f5:	48 85 c0             	test   %rax,%rax
ffffffff800219f8:	74 07                	je     ffffffff80021a01 <ZydisEncodeVexCommons+0xcd>
ffffffff800219fa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800219fe:	c6 00 03             	movb   $0x3,(%rax)
ffffffff80021a01:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80021a05:	0f b6 40 11          	movzbl 0x11(%rax),%eax
ffffffff80021a09:	f7 d0                	not    %eax
ffffffff80021a0b:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff80021a0f:	88 02                	mov    %al,(%rdx)
ffffffff80021a11:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
ffffffff80021a15:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80021a19:	48 89 d6             	mov    %rdx,%rsi
ffffffff80021a1c:	48 89 c7             	mov    %rax,%rdi
ffffffff80021a1f:	e8 50 fd ff ff       	call   ffffffff80021774 <ZydisEncodeRexLowNibble>
ffffffff80021a24:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff80021a28:	88 02                	mov    %al,(%rdx)
ffffffff80021a2a:	90                   	nop
ffffffff80021a2b:	c9                   	leave  
ffffffff80021a2c:	c3                   	ret    

ffffffff80021a2d <ZydisEmitXop>:
ffffffff80021a2d:	f3 0f 1e fa          	endbr64 
ffffffff80021a31:	55                   	push   %rbp
ffffffff80021a32:	48 89 e5             	mov    %rsp,%rbp
ffffffff80021a35:	48 83 ec 30          	sub    $0x30,%rsp
ffffffff80021a39:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
ffffffff80021a3d:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
ffffffff80021a41:	48 8d 75 ec          	lea    -0x14(%rbp),%rsi
ffffffff80021a45:	48 8d 4d ed          	lea    -0x13(%rbp),%rcx
ffffffff80021a49:	48 8d 55 ee          	lea    -0x12(%rbp),%rdx
ffffffff80021a4d:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
ffffffff80021a51:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
ffffffff80021a55:	41 b9 00 00 00 00    	mov    $0x0,%r9d
ffffffff80021a5b:	49 89 f0             	mov    %rsi,%r8
ffffffff80021a5e:	48 89 c6             	mov    %rax,%rsi
ffffffff80021a61:	e8 ce fe ff ff       	call   ffffffff80021934 <ZydisEncodeVexCommons>
ffffffff80021a66:	0f b6 45 ec          	movzbl -0x14(%rbp),%eax
ffffffff80021a6a:	0f b6 c0             	movzbl %al,%eax
ffffffff80021a6d:	f7 d0                	not    %eax
ffffffff80021a6f:	c1 e0 05             	shl    $0x5,%eax
ffffffff80021a72:	89 c2                	mov    %eax,%edx
ffffffff80021a74:	0f b6 45 ef          	movzbl -0x11(%rbp),%eax
ffffffff80021a78:	09 d0                	or     %edx,%eax
ffffffff80021a7a:	88 45 ff             	mov    %al,-0x1(%rbp)
ffffffff80021a7d:	0f b6 45 ec          	movzbl -0x14(%rbp),%eax
ffffffff80021a81:	0f b6 c0             	movzbl %al,%eax
ffffffff80021a84:	c1 e0 04             	shl    $0x4,%eax
ffffffff80021a87:	83 e0 80             	and    $0xffffff80,%eax
ffffffff80021a8a:	89 c2                	mov    %eax,%edx
ffffffff80021a8c:	0f b6 45 ed          	movzbl -0x13(%rbp),%eax
ffffffff80021a90:	0f b6 c0             	movzbl %al,%eax
ffffffff80021a93:	c1 e0 03             	shl    $0x3,%eax
ffffffff80021a96:	83 e0 78             	and    $0x78,%eax
ffffffff80021a99:	09 c2                	or     %eax,%edx
ffffffff80021a9b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80021a9f:	0f b6 40 14          	movzbl 0x14(%rax),%eax
ffffffff80021aa3:	0f b6 c0             	movzbl %al,%eax
ffffffff80021aa6:	c1 e0 02             	shl    $0x2,%eax
ffffffff80021aa9:	09 c2                	or     %eax,%edx
ffffffff80021aab:	0f b6 45 ee          	movzbl -0x12(%rbp),%eax
ffffffff80021aaf:	09 d0                	or     %edx,%eax
ffffffff80021ab1:	88 45 fe             	mov    %al,-0x2(%rbp)
ffffffff80021ab4:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff80021ab8:	48 89 c6             	mov    %rax,%rsi
ffffffff80021abb:	bf 8f 00 00 00       	mov    $0x8f,%edi
ffffffff80021ac0:	e8 83 f9 ff ff       	call   ffffffff80021448 <ZydisEmitByte>
ffffffff80021ac5:	89 45 f8             	mov    %eax,-0x8(%rbp)
ffffffff80021ac8:	8b 45 f8             	mov    -0x8(%rbp),%eax
ffffffff80021acb:	85 c0                	test   %eax,%eax
ffffffff80021acd:	79 05                	jns    ffffffff80021ad4 <ZydisEmitXop+0xa7>
ffffffff80021acf:	8b 45 f8             	mov    -0x8(%rbp),%eax
ffffffff80021ad2:	eb 48                	jmp    ffffffff80021b1c <ZydisEmitXop+0xef>
ffffffff80021ad4:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
ffffffff80021ad8:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
ffffffff80021adc:	48 89 d6             	mov    %rdx,%rsi
ffffffff80021adf:	89 c7                	mov    %eax,%edi
ffffffff80021ae1:	e8 62 f9 ff ff       	call   ffffffff80021448 <ZydisEmitByte>
ffffffff80021ae6:	89 45 f4             	mov    %eax,-0xc(%rbp)
ffffffff80021ae9:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff80021aec:	85 c0                	test   %eax,%eax
ffffffff80021aee:	79 05                	jns    ffffffff80021af5 <ZydisEmitXop+0xc8>
ffffffff80021af0:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff80021af3:	eb 27                	jmp    ffffffff80021b1c <ZydisEmitXop+0xef>
ffffffff80021af5:	0f b6 45 fe          	movzbl -0x2(%rbp),%eax
ffffffff80021af9:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
ffffffff80021afd:	48 89 d6             	mov    %rdx,%rsi
ffffffff80021b00:	89 c7                	mov    %eax,%edi
ffffffff80021b02:	e8 41 f9 ff ff       	call   ffffffff80021448 <ZydisEmitByte>
ffffffff80021b07:	89 45 f0             	mov    %eax,-0x10(%rbp)
ffffffff80021b0a:	8b 45 f0             	mov    -0x10(%rbp),%eax
ffffffff80021b0d:	85 c0                	test   %eax,%eax
ffffffff80021b0f:	79 05                	jns    ffffffff80021b16 <ZydisEmitXop+0xe9>
ffffffff80021b11:	8b 45 f0             	mov    -0x10(%rbp),%eax
ffffffff80021b14:	eb 06                	jmp    ffffffff80021b1c <ZydisEmitXop+0xef>
ffffffff80021b16:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff80021b1b:	90                   	nop
ffffffff80021b1c:	c9                   	leave  
ffffffff80021b1d:	c3                   	ret    

ffffffff80021b1e <ZydisEmitVex>:
ffffffff80021b1e:	f3 0f 1e fa          	endbr64 
ffffffff80021b22:	55                   	push   %rbp
ffffffff80021b23:	48 89 e5             	mov    %rsp,%rbp
ffffffff80021b26:	48 83 ec 30          	sub    $0x30,%rsp
ffffffff80021b2a:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
ffffffff80021b2e:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
ffffffff80021b32:	48 8d 75 e0          	lea    -0x20(%rbp),%rsi
ffffffff80021b36:	48 8d 4d e1          	lea    -0x1f(%rbp),%rcx
ffffffff80021b3a:	48 8d 55 e2          	lea    -0x1e(%rbp),%rdx
ffffffff80021b3e:	48 8d 45 e3          	lea    -0x1d(%rbp),%rax
ffffffff80021b42:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
ffffffff80021b46:	41 b9 00 00 00 00    	mov    $0x0,%r9d
ffffffff80021b4c:	49 89 f0             	mov    %rsi,%r8
ffffffff80021b4f:	48 89 c6             	mov    %rax,%rsi
ffffffff80021b52:	e8 dd fd ff ff       	call   ffffffff80021934 <ZydisEncodeVexCommons>
ffffffff80021b57:	0f b6 45 e3          	movzbl -0x1d(%rbp),%eax
ffffffff80021b5b:	3c 01                	cmp    $0x1,%al
ffffffff80021b5d:	75 12                	jne    ffffffff80021b71 <ZydisEmitVex+0x53>
ffffffff80021b5f:	0f b6 45 e0          	movzbl -0x20(%rbp),%eax
ffffffff80021b63:	0f b6 c0             	movzbl %al,%eax
ffffffff80021b66:	83 e0 0b             	and    $0xb,%eax
ffffffff80021b69:	85 c0                	test   %eax,%eax
ffffffff80021b6b:	0f 84 bd 00 00 00    	je     ffffffff80021c2e <ZydisEmitVex+0x110>
ffffffff80021b71:	0f b6 45 e0          	movzbl -0x20(%rbp),%eax
ffffffff80021b75:	0f b6 c0             	movzbl %al,%eax
ffffffff80021b78:	f7 d0                	not    %eax
ffffffff80021b7a:	c1 e0 05             	shl    $0x5,%eax
ffffffff80021b7d:	89 c2                	mov    %eax,%edx
ffffffff80021b7f:	0f b6 45 e3          	movzbl -0x1d(%rbp),%eax
ffffffff80021b83:	09 d0                	or     %edx,%eax
ffffffff80021b85:	88 45 f3             	mov    %al,-0xd(%rbp)
ffffffff80021b88:	0f b6 45 e0          	movzbl -0x20(%rbp),%eax
ffffffff80021b8c:	0f b6 c0             	movzbl %al,%eax
ffffffff80021b8f:	c1 e0 04             	shl    $0x4,%eax
ffffffff80021b92:	83 e0 80             	and    $0xffffff80,%eax
ffffffff80021b95:	89 c2                	mov    %eax,%edx
ffffffff80021b97:	0f b6 45 e1          	movzbl -0x1f(%rbp),%eax
ffffffff80021b9b:	0f b6 c0             	movzbl %al,%eax
ffffffff80021b9e:	c1 e0 03             	shl    $0x3,%eax
ffffffff80021ba1:	83 e0 78             	and    $0x78,%eax
ffffffff80021ba4:	09 c2                	or     %eax,%edx
ffffffff80021ba6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80021baa:	0f b6 40 14          	movzbl 0x14(%rax),%eax
ffffffff80021bae:	0f b6 c0             	movzbl %al,%eax
ffffffff80021bb1:	c1 e0 02             	shl    $0x2,%eax
ffffffff80021bb4:	09 c2                	or     %eax,%edx
ffffffff80021bb6:	0f b6 45 e2          	movzbl -0x1e(%rbp),%eax
ffffffff80021bba:	09 d0                	or     %edx,%eax
ffffffff80021bbc:	88 45 f2             	mov    %al,-0xe(%rbp)
ffffffff80021bbf:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff80021bc3:	48 89 c6             	mov    %rax,%rsi
ffffffff80021bc6:	bf c4 00 00 00       	mov    $0xc4,%edi
ffffffff80021bcb:	e8 78 f8 ff ff       	call   ffffffff80021448 <ZydisEmitByte>
ffffffff80021bd0:	89 45 ec             	mov    %eax,-0x14(%rbp)
ffffffff80021bd3:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff80021bd6:	85 c0                	test   %eax,%eax
ffffffff80021bd8:	79 08                	jns    ffffffff80021be2 <ZydisEmitVex+0xc4>
ffffffff80021bda:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff80021bdd:	e9 cd 00 00 00       	jmp    ffffffff80021caf <ZydisEmitVex+0x191>
ffffffff80021be2:	0f b6 45 f3          	movzbl -0xd(%rbp),%eax
ffffffff80021be6:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
ffffffff80021bea:	48 89 d6             	mov    %rdx,%rsi
ffffffff80021bed:	89 c7                	mov    %eax,%edi
ffffffff80021bef:	e8 54 f8 ff ff       	call   ffffffff80021448 <ZydisEmitByte>
ffffffff80021bf4:	89 45 e8             	mov    %eax,-0x18(%rbp)
ffffffff80021bf7:	8b 45 e8             	mov    -0x18(%rbp),%eax
ffffffff80021bfa:	85 c0                	test   %eax,%eax
ffffffff80021bfc:	79 08                	jns    ffffffff80021c06 <ZydisEmitVex+0xe8>
ffffffff80021bfe:	8b 45 e8             	mov    -0x18(%rbp),%eax
ffffffff80021c01:	e9 a9 00 00 00       	jmp    ffffffff80021caf <ZydisEmitVex+0x191>
ffffffff80021c06:	0f b6 45 f2          	movzbl -0xe(%rbp),%eax
ffffffff80021c0a:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
ffffffff80021c0e:	48 89 d6             	mov    %rdx,%rsi
ffffffff80021c11:	89 c7                	mov    %eax,%edi
ffffffff80021c13:	e8 30 f8 ff ff       	call   ffffffff80021448 <ZydisEmitByte>
ffffffff80021c18:	89 45 e4             	mov    %eax,-0x1c(%rbp)
ffffffff80021c1b:	8b 45 e4             	mov    -0x1c(%rbp),%eax
ffffffff80021c1e:	85 c0                	test   %eax,%eax
ffffffff80021c20:	0f 89 82 00 00 00    	jns    ffffffff80021ca8 <ZydisEmitVex+0x18a>
ffffffff80021c26:	8b 45 e4             	mov    -0x1c(%rbp),%eax
ffffffff80021c29:	e9 81 00 00 00       	jmp    ffffffff80021caf <ZydisEmitVex+0x191>
ffffffff80021c2e:	0f b6 45 e0          	movzbl -0x20(%rbp),%eax
ffffffff80021c32:	0f b6 c0             	movzbl %al,%eax
ffffffff80021c35:	f7 d0                	not    %eax
ffffffff80021c37:	c1 e0 05             	shl    $0x5,%eax
ffffffff80021c3a:	83 e0 80             	and    $0xffffff80,%eax
ffffffff80021c3d:	89 c2                	mov    %eax,%edx
ffffffff80021c3f:	0f b6 45 e1          	movzbl -0x1f(%rbp),%eax
ffffffff80021c43:	0f b6 c0             	movzbl %al,%eax
ffffffff80021c46:	c1 e0 03             	shl    $0x3,%eax
ffffffff80021c49:	83 e0 78             	and    $0x78,%eax
ffffffff80021c4c:	09 c2                	or     %eax,%edx
ffffffff80021c4e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80021c52:	0f b6 40 14          	movzbl 0x14(%rax),%eax
ffffffff80021c56:	0f b6 c0             	movzbl %al,%eax
ffffffff80021c59:	c1 e0 02             	shl    $0x2,%eax
ffffffff80021c5c:	09 c2                	or     %eax,%edx
ffffffff80021c5e:	0f b6 45 e2          	movzbl -0x1e(%rbp),%eax
ffffffff80021c62:	09 d0                	or     %edx,%eax
ffffffff80021c64:	88 45 ff             	mov    %al,-0x1(%rbp)
ffffffff80021c67:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff80021c6b:	48 89 c6             	mov    %rax,%rsi
ffffffff80021c6e:	bf c5 00 00 00       	mov    $0xc5,%edi
ffffffff80021c73:	e8 d0 f7 ff ff       	call   ffffffff80021448 <ZydisEmitByte>
ffffffff80021c78:	89 45 f8             	mov    %eax,-0x8(%rbp)
ffffffff80021c7b:	8b 45 f8             	mov    -0x8(%rbp),%eax
ffffffff80021c7e:	85 c0                	test   %eax,%eax
ffffffff80021c80:	79 05                	jns    ffffffff80021c87 <ZydisEmitVex+0x169>
ffffffff80021c82:	8b 45 f8             	mov    -0x8(%rbp),%eax
ffffffff80021c85:	eb 28                	jmp    ffffffff80021caf <ZydisEmitVex+0x191>
ffffffff80021c87:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
ffffffff80021c8b:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
ffffffff80021c8f:	48 89 d6             	mov    %rdx,%rsi
ffffffff80021c92:	89 c7                	mov    %eax,%edi
ffffffff80021c94:	e8 af f7 ff ff       	call   ffffffff80021448 <ZydisEmitByte>
ffffffff80021c99:	89 45 f4             	mov    %eax,-0xc(%rbp)
ffffffff80021c9c:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff80021c9f:	85 c0                	test   %eax,%eax
ffffffff80021ca1:	79 06                	jns    ffffffff80021ca9 <ZydisEmitVex+0x18b>
ffffffff80021ca3:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff80021ca6:	eb 07                	jmp    ffffffff80021caf <ZydisEmitVex+0x191>
ffffffff80021ca8:	90                   	nop
ffffffff80021ca9:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff80021cae:	90                   	nop
ffffffff80021caf:	c9                   	leave  
ffffffff80021cb0:	c3                   	ret    

ffffffff80021cb1 <ZydisEncodeEvexCommons>:
ffffffff80021cb1:	f3 0f 1e fa          	endbr64 
ffffffff80021cb5:	55                   	push   %rbp
ffffffff80021cb6:	48 89 e5             	mov    %rsp,%rbp
ffffffff80021cb9:	48 83 ec 30          	sub    $0x30,%rsp
ffffffff80021cbd:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff80021cc1:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
ffffffff80021cc5:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
ffffffff80021cc9:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
ffffffff80021ccd:	4c 8d 45 ff          	lea    -0x1(%rbp),%r8
ffffffff80021cd1:	48 8d 75 fc          	lea    -0x4(%rbp),%rsi
ffffffff80021cd5:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
ffffffff80021cd9:	48 8d 55 fd          	lea    -0x3(%rbp),%rdx
ffffffff80021cdd:	48 8d 45 fe          	lea    -0x2(%rbp),%rax
ffffffff80021ce1:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
ffffffff80021ce5:	4d 89 c1             	mov    %r8,%r9
ffffffff80021ce8:	49 89 f0             	mov    %rsi,%r8
ffffffff80021ceb:	48 89 c6             	mov    %rax,%rsi
ffffffff80021cee:	e8 41 fc ff ff       	call   ffffffff80021934 <ZydisEncodeVexCommons>
ffffffff80021cf3:	0f b6 45 fc          	movzbl -0x4(%rbp),%eax
ffffffff80021cf7:	0f b6 c0             	movzbl %al,%eax
ffffffff80021cfa:	f7 d0                	not    %eax
ffffffff80021cfc:	c1 e0 05             	shl    $0x5,%eax
ffffffff80021cff:	89 c2                	mov    %eax,%edx
ffffffff80021d01:	0f b6 45 fe          	movzbl -0x2(%rbp),%eax
ffffffff80021d05:	09 d0                	or     %edx,%eax
ffffffff80021d07:	89 c2                	mov    %eax,%edx
ffffffff80021d09:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80021d0d:	88 10                	mov    %dl,(%rax)
ffffffff80021d0f:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
ffffffff80021d13:	84 c0                	test   %al,%al
ffffffff80021d15:	75 10                	jne    ffffffff80021d27 <ZydisEncodeEvexCommons+0x76>
ffffffff80021d17:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80021d1b:	0f b6 00             	movzbl (%rax),%eax
ffffffff80021d1e:	83 c8 10             	or     $0x10,%eax
ffffffff80021d21:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff80021d25:	88 02                	mov    %al,(%rdx)
ffffffff80021d27:	0f b6 45 fc          	movzbl -0x4(%rbp),%eax
ffffffff80021d2b:	0f b6 c0             	movzbl %al,%eax
ffffffff80021d2e:	c1 e0 04             	shl    $0x4,%eax
ffffffff80021d31:	83 e0 80             	and    $0xffffff80,%eax
ffffffff80021d34:	89 c2                	mov    %eax,%edx
ffffffff80021d36:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff80021d3a:	0f b6 00             	movzbl (%rax),%eax
ffffffff80021d3d:	0f b6 c0             	movzbl %al,%eax
ffffffff80021d40:	c1 e0 03             	shl    $0x3,%eax
ffffffff80021d43:	83 e0 78             	and    $0x78,%eax
ffffffff80021d46:	09 d0                	or     %edx,%eax
ffffffff80021d48:	89 c2                	mov    %eax,%edx
ffffffff80021d4a:	0f b6 45 fd          	movzbl -0x3(%rbp),%eax
ffffffff80021d4e:	09 d0                	or     %edx,%eax
ffffffff80021d50:	83 c8 04             	or     $0x4,%eax
ffffffff80021d53:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff80021d57:	88 02                	mov    %al,(%rdx)
ffffffff80021d59:	90                   	nop
ffffffff80021d5a:	c9                   	leave  
ffffffff80021d5b:	c3                   	ret    

ffffffff80021d5c <ZydisEmitEvex>:
ffffffff80021d5c:	f3 0f 1e fa          	endbr64 
ffffffff80021d60:	55                   	push   %rbp
ffffffff80021d61:	48 89 e5             	mov    %rsp,%rbp
ffffffff80021d64:	48 83 ec 30          	sub    $0x30,%rsp
ffffffff80021d68:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
ffffffff80021d6c:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
ffffffff80021d70:	48 8d 4d e9          	lea    -0x17(%rbp),%rcx
ffffffff80021d74:	48 8d 55 ea          	lea    -0x16(%rbp),%rdx
ffffffff80021d78:	48 8d 45 eb          	lea    -0x15(%rbp),%rax
ffffffff80021d7c:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
ffffffff80021d80:	48 89 c6             	mov    %rax,%rsi
ffffffff80021d83:	e8 29 ff ff ff       	call   ffffffff80021cb1 <ZydisEncodeEvexCommons>
ffffffff80021d88:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80021d8c:	0f b6 40 14          	movzbl 0x14(%rax),%eax
ffffffff80021d90:	0f b6 c0             	movzbl %al,%eax
ffffffff80021d93:	c1 e0 05             	shl    $0x5,%eax
ffffffff80021d96:	89 c2                	mov    %eax,%edx
ffffffff80021d98:	0f b6 45 e9          	movzbl -0x17(%rbp),%eax
ffffffff80021d9c:	0f b6 c0             	movzbl %al,%eax
ffffffff80021d9f:	d1 f8                	sar    %eax
ffffffff80021da1:	83 e0 08             	and    $0x8,%eax
ffffffff80021da4:	09 c2                	or     %eax,%edx
ffffffff80021da6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80021daa:	0f b6 40 13          	movzbl 0x13(%rax),%eax
ffffffff80021dae:	09 d0                	or     %edx,%eax
ffffffff80021db0:	88 45 ff             	mov    %al,-0x1(%rbp)
ffffffff80021db3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80021db7:	0f b6 40 1c          	movzbl 0x1c(%rax),%eax
ffffffff80021dbb:	84 c0                	test   %al,%al
ffffffff80021dbd:	74 04                	je     ffffffff80021dc3 <ZydisEmitEvex+0x67>
ffffffff80021dbf:	80 4d ff 80          	orb    $0x80,-0x1(%rbp)
ffffffff80021dc3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80021dc7:	48 8b 10             	mov    (%rax),%rdx
ffffffff80021dca:	48 b8 00 00 00 00 00 	movabs $0x200000000000,%rax
ffffffff80021dd1:	20 00 00 
ffffffff80021dd4:	48 21 d0             	and    %rdx,%rax
ffffffff80021dd7:	48 85 c0             	test   %rax,%rax
ffffffff80021dda:	74 04                	je     ffffffff80021de0 <ZydisEmitEvex+0x84>
ffffffff80021ddc:	80 4d ff 10          	orb    $0x10,-0x1(%rbp)
ffffffff80021de0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80021de4:	0f b6 40 19          	movzbl 0x19(%rax),%eax
ffffffff80021de8:	0f b6 c0             	movzbl %al,%eax
ffffffff80021deb:	83 e0 10             	and    $0x10,%eax
ffffffff80021dee:	85 c0                	test   %eax,%eax
ffffffff80021df0:	74 04                	je     ffffffff80021df6 <ZydisEmitEvex+0x9a>
ffffffff80021df2:	80 65 ff f7          	andb   $0xf7,-0x1(%rbp)
ffffffff80021df6:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff80021dfa:	48 89 c6             	mov    %rax,%rsi
ffffffff80021dfd:	bf 62 00 00 00       	mov    $0x62,%edi
ffffffff80021e02:	e8 41 f6 ff ff       	call   ffffffff80021448 <ZydisEmitByte>
ffffffff80021e07:	89 45 f8             	mov    %eax,-0x8(%rbp)
ffffffff80021e0a:	8b 45 f8             	mov    -0x8(%rbp),%eax
ffffffff80021e0d:	85 c0                	test   %eax,%eax
ffffffff80021e0f:	79 05                	jns    ffffffff80021e16 <ZydisEmitEvex+0xba>
ffffffff80021e11:	8b 45 f8             	mov    -0x8(%rbp),%eax
ffffffff80021e14:	eb 6f                	jmp    ffffffff80021e85 <ZydisEmitEvex+0x129>
ffffffff80021e16:	0f b6 45 eb          	movzbl -0x15(%rbp),%eax
ffffffff80021e1a:	0f b6 c0             	movzbl %al,%eax
ffffffff80021e1d:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
ffffffff80021e21:	48 89 d6             	mov    %rdx,%rsi
ffffffff80021e24:	89 c7                	mov    %eax,%edi
ffffffff80021e26:	e8 1d f6 ff ff       	call   ffffffff80021448 <ZydisEmitByte>
ffffffff80021e2b:	89 45 f4             	mov    %eax,-0xc(%rbp)
ffffffff80021e2e:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff80021e31:	85 c0                	test   %eax,%eax
ffffffff80021e33:	79 05                	jns    ffffffff80021e3a <ZydisEmitEvex+0xde>
ffffffff80021e35:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff80021e38:	eb 4b                	jmp    ffffffff80021e85 <ZydisEmitEvex+0x129>
ffffffff80021e3a:	0f b6 45 ea          	movzbl -0x16(%rbp),%eax
ffffffff80021e3e:	0f b6 c0             	movzbl %al,%eax
ffffffff80021e41:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
ffffffff80021e45:	48 89 d6             	mov    %rdx,%rsi
ffffffff80021e48:	89 c7                	mov    %eax,%edi
ffffffff80021e4a:	e8 f9 f5 ff ff       	call   ffffffff80021448 <ZydisEmitByte>
ffffffff80021e4f:	89 45 f0             	mov    %eax,-0x10(%rbp)
ffffffff80021e52:	8b 45 f0             	mov    -0x10(%rbp),%eax
ffffffff80021e55:	85 c0                	test   %eax,%eax
ffffffff80021e57:	79 05                	jns    ffffffff80021e5e <ZydisEmitEvex+0x102>
ffffffff80021e59:	8b 45 f0             	mov    -0x10(%rbp),%eax
ffffffff80021e5c:	eb 27                	jmp    ffffffff80021e85 <ZydisEmitEvex+0x129>
ffffffff80021e5e:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
ffffffff80021e62:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
ffffffff80021e66:	48 89 d6             	mov    %rdx,%rsi
ffffffff80021e69:	89 c7                	mov    %eax,%edi
ffffffff80021e6b:	e8 d8 f5 ff ff       	call   ffffffff80021448 <ZydisEmitByte>
ffffffff80021e70:	89 45 ec             	mov    %eax,-0x14(%rbp)
ffffffff80021e73:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff80021e76:	85 c0                	test   %eax,%eax
ffffffff80021e78:	79 05                	jns    ffffffff80021e7f <ZydisEmitEvex+0x123>
ffffffff80021e7a:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff80021e7d:	eb 06                	jmp    ffffffff80021e85 <ZydisEmitEvex+0x129>
ffffffff80021e7f:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff80021e84:	90                   	nop
ffffffff80021e85:	c9                   	leave  
ffffffff80021e86:	c3                   	ret    

ffffffff80021e87 <ZydisEmitMvex>:
ffffffff80021e87:	f3 0f 1e fa          	endbr64 
ffffffff80021e8b:	55                   	push   %rbp
ffffffff80021e8c:	48 89 e5             	mov    %rsp,%rbp
ffffffff80021e8f:	48 83 ec 30          	sub    $0x30,%rsp
ffffffff80021e93:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
ffffffff80021e97:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
ffffffff80021e9b:	48 8d 4d e9          	lea    -0x17(%rbp),%rcx
ffffffff80021e9f:	48 8d 55 ea          	lea    -0x16(%rbp),%rdx
ffffffff80021ea3:	48 8d 45 eb          	lea    -0x15(%rbp),%rax
ffffffff80021ea7:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
ffffffff80021eab:	48 89 c6             	mov    %rax,%rsi
ffffffff80021eae:	e8 fe fd ff ff       	call   ffffffff80021cb1 <ZydisEncodeEvexCommons>
ffffffff80021eb3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80021eb7:	0f b6 40 12          	movzbl 0x12(%rax),%eax
ffffffff80021ebb:	0f b6 c0             	movzbl %al,%eax
ffffffff80021ebe:	c1 e0 04             	shl    $0x4,%eax
ffffffff80021ec1:	89 c2                	mov    %eax,%edx
ffffffff80021ec3:	0f b6 45 e9          	movzbl -0x17(%rbp),%eax
ffffffff80021ec7:	0f b6 c0             	movzbl %al,%eax
ffffffff80021eca:	d1 f8                	sar    %eax
ffffffff80021ecc:	83 e0 08             	and    $0x8,%eax
ffffffff80021ecf:	09 c2                	or     %eax,%edx
ffffffff80021ed1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80021ed5:	0f b6 40 13          	movzbl 0x13(%rax),%eax
ffffffff80021ed9:	09 d0                	or     %edx,%eax
ffffffff80021edb:	88 45 ff             	mov    %al,-0x1(%rbp)
ffffffff80021ede:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80021ee2:	0f b6 40 1d          	movzbl 0x1d(%rax),%eax
ffffffff80021ee6:	84 c0                	test   %al,%al
ffffffff80021ee8:	74 04                	je     ffffffff80021eee <ZydisEmitMvex+0x67>
ffffffff80021eea:	80 4d ff 80          	orb    $0x80,-0x1(%rbp)
ffffffff80021eee:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80021ef2:	0f b6 40 19          	movzbl 0x19(%rax),%eax
ffffffff80021ef6:	0f b6 c0             	movzbl %al,%eax
ffffffff80021ef9:	83 e0 10             	and    $0x10,%eax
ffffffff80021efc:	85 c0                	test   %eax,%eax
ffffffff80021efe:	74 04                	je     ffffffff80021f04 <ZydisEmitMvex+0x7d>
ffffffff80021f00:	80 65 ff f7          	andb   $0xf7,-0x1(%rbp)
ffffffff80021f04:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff80021f08:	48 89 c6             	mov    %rax,%rsi
ffffffff80021f0b:	bf 62 00 00 00       	mov    $0x62,%edi
ffffffff80021f10:	e8 33 f5 ff ff       	call   ffffffff80021448 <ZydisEmitByte>
ffffffff80021f15:	89 45 f8             	mov    %eax,-0x8(%rbp)
ffffffff80021f18:	8b 45 f8             	mov    -0x8(%rbp),%eax
ffffffff80021f1b:	85 c0                	test   %eax,%eax
ffffffff80021f1d:	79 05                	jns    ffffffff80021f24 <ZydisEmitMvex+0x9d>
ffffffff80021f1f:	8b 45 f8             	mov    -0x8(%rbp),%eax
ffffffff80021f22:	eb 74                	jmp    ffffffff80021f98 <ZydisEmitMvex+0x111>
ffffffff80021f24:	0f b6 45 eb          	movzbl -0x15(%rbp),%eax
ffffffff80021f28:	0f b6 c0             	movzbl %al,%eax
ffffffff80021f2b:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
ffffffff80021f2f:	48 89 d6             	mov    %rdx,%rsi
ffffffff80021f32:	89 c7                	mov    %eax,%edi
ffffffff80021f34:	e8 0f f5 ff ff       	call   ffffffff80021448 <ZydisEmitByte>
ffffffff80021f39:	89 45 f4             	mov    %eax,-0xc(%rbp)
ffffffff80021f3c:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff80021f3f:	85 c0                	test   %eax,%eax
ffffffff80021f41:	79 05                	jns    ffffffff80021f48 <ZydisEmitMvex+0xc1>
ffffffff80021f43:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff80021f46:	eb 50                	jmp    ffffffff80021f98 <ZydisEmitMvex+0x111>
ffffffff80021f48:	0f b6 45 ea          	movzbl -0x16(%rbp),%eax
ffffffff80021f4c:	0f b6 c0             	movzbl %al,%eax
ffffffff80021f4f:	25 fb 00 00 00       	and    $0xfb,%eax
ffffffff80021f54:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
ffffffff80021f58:	48 89 d6             	mov    %rdx,%rsi
ffffffff80021f5b:	89 c7                	mov    %eax,%edi
ffffffff80021f5d:	e8 e6 f4 ff ff       	call   ffffffff80021448 <ZydisEmitByte>
ffffffff80021f62:	89 45 f0             	mov    %eax,-0x10(%rbp)
ffffffff80021f65:	8b 45 f0             	mov    -0x10(%rbp),%eax
ffffffff80021f68:	85 c0                	test   %eax,%eax
ffffffff80021f6a:	79 05                	jns    ffffffff80021f71 <ZydisEmitMvex+0xea>
ffffffff80021f6c:	8b 45 f0             	mov    -0x10(%rbp),%eax
ffffffff80021f6f:	eb 27                	jmp    ffffffff80021f98 <ZydisEmitMvex+0x111>
ffffffff80021f71:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
ffffffff80021f75:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
ffffffff80021f79:	48 89 d6             	mov    %rdx,%rsi
ffffffff80021f7c:	89 c7                	mov    %eax,%edi
ffffffff80021f7e:	e8 c5 f4 ff ff       	call   ffffffff80021448 <ZydisEmitByte>
ffffffff80021f83:	89 45 ec             	mov    %eax,-0x14(%rbp)
ffffffff80021f86:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff80021f89:	85 c0                	test   %eax,%eax
ffffffff80021f8b:	79 05                	jns    ffffffff80021f92 <ZydisEmitMvex+0x10b>
ffffffff80021f8d:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff80021f90:	eb 06                	jmp    ffffffff80021f98 <ZydisEmitMvex+0x111>
ffffffff80021f92:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff80021f97:	90                   	nop
ffffffff80021f98:	c9                   	leave  
ffffffff80021f99:	c3                   	ret    

ffffffff80021f9a <ZydisEmitInstruction>:
ffffffff80021f9a:	f3 0f 1e fa          	endbr64 
ffffffff80021f9e:	55                   	push   %rbp
ffffffff80021f9f:	48 89 e5             	mov    %rsp,%rbp
ffffffff80021fa2:	48 83 ec 70          	sub    $0x70,%rsp
ffffffff80021fa6:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
ffffffff80021faa:	48 89 75 90          	mov    %rsi,-0x70(%rbp)
ffffffff80021fae:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
ffffffff80021fb2:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff80021fb6:	48 89 d6             	mov    %rdx,%rsi
ffffffff80021fb9:	48 89 c7             	mov    %rax,%rdi
ffffffff80021fbc:	e8 b3 f4 ff ff       	call   ffffffff80021474 <ZydisEmitLegacyPrefixes>
ffffffff80021fc1:	89 45 fc             	mov    %eax,-0x4(%rbp)
ffffffff80021fc4:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff80021fc7:	85 c0                	test   %eax,%eax
ffffffff80021fc9:	79 08                	jns    ffffffff80021fd3 <ZydisEmitInstruction+0x39>
ffffffff80021fcb:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff80021fce:	e9 f8 03 00 00       	jmp    ffffffff800223cb <ZydisEmitInstruction+0x431>
ffffffff80021fd3:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff80021fd7:	8b 40 08             	mov    0x8(%rax),%eax
ffffffff80021fda:	83 f8 05             	cmp    $0x5,%eax
ffffffff80021fdd:	0f 87 e0 00 00 00    	ja     ffffffff800220c3 <ZydisEmitInstruction+0x129>
ffffffff80021fe3:	89 c0                	mov    %eax,%eax
ffffffff80021fe5:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
ffffffff80021fec:	00 
ffffffff80021fed:	48 8d 05 88 be 01 00 	lea    0x1be88(%rip),%rax        # ffffffff8003de7c <zero.0+0x254>
ffffffff80021ff4:	8b 04 02             	mov    (%rdx,%rax,1),%eax
ffffffff80021ff7:	48 98                	cltq   
ffffffff80021ff9:	48 8d 15 7c be 01 00 	lea    0x1be7c(%rip),%rdx        # ffffffff8003de7c <zero.0+0x254>
ffffffff80022000:	48 01 d0             	add    %rdx,%rax
ffffffff80022003:	3e ff e0             	notrack jmp *%rax
ffffffff80022006:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
ffffffff8002200a:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff8002200e:	48 89 d6             	mov    %rdx,%rsi
ffffffff80022011:	48 89 c7             	mov    %rax,%rdi
ffffffff80022014:	e8 b0 f8 ff ff       	call   ffffffff800218c9 <ZydisEmitRex>
ffffffff80022019:	89 45 e8             	mov    %eax,-0x18(%rbp)
ffffffff8002201c:	8b 45 e8             	mov    -0x18(%rbp),%eax
ffffffff8002201f:	85 c0                	test   %eax,%eax
ffffffff80022021:	0f 89 9e 00 00 00    	jns    ffffffff800220c5 <ZydisEmitInstruction+0x12b>
ffffffff80022027:	8b 45 e8             	mov    -0x18(%rbp),%eax
ffffffff8002202a:	e9 9c 03 00 00       	jmp    ffffffff800223cb <ZydisEmitInstruction+0x431>
ffffffff8002202f:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
ffffffff80022033:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff80022037:	48 89 d6             	mov    %rdx,%rsi
ffffffff8002203a:	48 89 c7             	mov    %rax,%rdi
ffffffff8002203d:	e8 eb f9 ff ff       	call   ffffffff80021a2d <ZydisEmitXop>
ffffffff80022042:	89 45 ec             	mov    %eax,-0x14(%rbp)
ffffffff80022045:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff80022048:	85 c0                	test   %eax,%eax
ffffffff8002204a:	79 7c                	jns    ffffffff800220c8 <ZydisEmitInstruction+0x12e>
ffffffff8002204c:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff8002204f:	e9 77 03 00 00       	jmp    ffffffff800223cb <ZydisEmitInstruction+0x431>
ffffffff80022054:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
ffffffff80022058:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff8002205c:	48 89 d6             	mov    %rdx,%rsi
ffffffff8002205f:	48 89 c7             	mov    %rax,%rdi
ffffffff80022062:	e8 b7 fa ff ff       	call   ffffffff80021b1e <ZydisEmitVex>
ffffffff80022067:	89 45 f0             	mov    %eax,-0x10(%rbp)
ffffffff8002206a:	8b 45 f0             	mov    -0x10(%rbp),%eax
ffffffff8002206d:	85 c0                	test   %eax,%eax
ffffffff8002206f:	79 5a                	jns    ffffffff800220cb <ZydisEmitInstruction+0x131>
ffffffff80022071:	8b 45 f0             	mov    -0x10(%rbp),%eax
ffffffff80022074:	e9 52 03 00 00       	jmp    ffffffff800223cb <ZydisEmitInstruction+0x431>
ffffffff80022079:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
ffffffff8002207d:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff80022081:	48 89 d6             	mov    %rdx,%rsi
ffffffff80022084:	48 89 c7             	mov    %rax,%rdi
ffffffff80022087:	e8 d0 fc ff ff       	call   ffffffff80021d5c <ZydisEmitEvex>
ffffffff8002208c:	89 45 f4             	mov    %eax,-0xc(%rbp)
ffffffff8002208f:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff80022092:	85 c0                	test   %eax,%eax
ffffffff80022094:	79 38                	jns    ffffffff800220ce <ZydisEmitInstruction+0x134>
ffffffff80022096:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff80022099:	e9 2d 03 00 00       	jmp    ffffffff800223cb <ZydisEmitInstruction+0x431>
ffffffff8002209e:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
ffffffff800220a2:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff800220a6:	48 89 d6             	mov    %rdx,%rsi
ffffffff800220a9:	48 89 c7             	mov    %rax,%rdi
ffffffff800220ac:	e8 d6 fd ff ff       	call   ffffffff80021e87 <ZydisEmitMvex>
ffffffff800220b1:	89 45 f8             	mov    %eax,-0x8(%rbp)
ffffffff800220b4:	8b 45 f8             	mov    -0x8(%rbp),%eax
ffffffff800220b7:	85 c0                	test   %eax,%eax
ffffffff800220b9:	79 16                	jns    ffffffff800220d1 <ZydisEmitInstruction+0x137>
ffffffff800220bb:	8b 45 f8             	mov    -0x8(%rbp),%eax
ffffffff800220be:	e9 08 03 00 00       	jmp    ffffffff800223cb <ZydisEmitInstruction+0x431>
ffffffff800220c3:	eb fe                	jmp    ffffffff800220c3 <ZydisEmitInstruction+0x129>
ffffffff800220c5:	90                   	nop
ffffffff800220c6:	eb 0a                	jmp    ffffffff800220d2 <ZydisEmitInstruction+0x138>
ffffffff800220c8:	90                   	nop
ffffffff800220c9:	eb 07                	jmp    ffffffff800220d2 <ZydisEmitInstruction+0x138>
ffffffff800220cb:	90                   	nop
ffffffff800220cc:	eb 04                	jmp    ffffffff800220d2 <ZydisEmitInstruction+0x138>
ffffffff800220ce:	90                   	nop
ffffffff800220cf:	eb 01                	jmp    ffffffff800220d2 <ZydisEmitInstruction+0x138>
ffffffff800220d1:	90                   	nop
ffffffff800220d2:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff800220d6:	8b 40 0c             	mov    0xc(%rax),%eax
ffffffff800220d9:	83 f8 08             	cmp    $0x8,%eax
ffffffff800220dc:	0f 87 20 01 00 00    	ja     ffffffff80022202 <ZydisEmitInstruction+0x268>
ffffffff800220e2:	89 c0                	mov    %eax,%eax
ffffffff800220e4:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
ffffffff800220eb:	00 
ffffffff800220ec:	48 8d 05 a1 bd 01 00 	lea    0x1bda1(%rip),%rax        # ffffffff8003de94 <zero.0+0x26c>
ffffffff800220f3:	8b 04 02             	mov    (%rdx,%rax,1),%eax
ffffffff800220f6:	48 98                	cltq   
ffffffff800220f8:	48 8d 15 95 bd 01 00 	lea    0x1bd95(%rip),%rdx        # ffffffff8003de94 <zero.0+0x26c>
ffffffff800220ff:	48 01 d0             	add    %rdx,%rax
ffffffff80022102:	3e ff e0             	notrack jmp *%rax
ffffffff80022105:	48 8b 45 90          	mov    -0x70(%rbp),%rax
ffffffff80022109:	48 89 c6             	mov    %rax,%rsi
ffffffff8002210c:	bf 0f 00 00 00       	mov    $0xf,%edi
ffffffff80022111:	e8 32 f3 ff ff       	call   ffffffff80021448 <ZydisEmitByte>
ffffffff80022116:	89 45 cc             	mov    %eax,-0x34(%rbp)
ffffffff80022119:	8b 45 cc             	mov    -0x34(%rbp),%eax
ffffffff8002211c:	85 c0                	test   %eax,%eax
ffffffff8002211e:	0f 89 e3 00 00 00    	jns    ffffffff80022207 <ZydisEmitInstruction+0x26d>
ffffffff80022124:	8b 45 cc             	mov    -0x34(%rbp),%eax
ffffffff80022127:	e9 9f 02 00 00       	jmp    ffffffff800223cb <ZydisEmitInstruction+0x431>
ffffffff8002212c:	48 8b 45 90          	mov    -0x70(%rbp),%rax
ffffffff80022130:	48 89 c6             	mov    %rax,%rsi
ffffffff80022133:	bf 0f 00 00 00       	mov    $0xf,%edi
ffffffff80022138:	e8 0b f3 ff ff       	call   ffffffff80021448 <ZydisEmitByte>
ffffffff8002213d:	89 45 d4             	mov    %eax,-0x2c(%rbp)
ffffffff80022140:	8b 45 d4             	mov    -0x2c(%rbp),%eax
ffffffff80022143:	85 c0                	test   %eax,%eax
ffffffff80022145:	79 08                	jns    ffffffff8002214f <ZydisEmitInstruction+0x1b5>
ffffffff80022147:	8b 45 d4             	mov    -0x2c(%rbp),%eax
ffffffff8002214a:	e9 7c 02 00 00       	jmp    ffffffff800223cb <ZydisEmitInstruction+0x431>
ffffffff8002214f:	48 8b 45 90          	mov    -0x70(%rbp),%rax
ffffffff80022153:	48 89 c6             	mov    %rax,%rsi
ffffffff80022156:	bf 38 00 00 00       	mov    $0x38,%edi
ffffffff8002215b:	e8 e8 f2 ff ff       	call   ffffffff80021448 <ZydisEmitByte>
ffffffff80022160:	89 45 d0             	mov    %eax,-0x30(%rbp)
ffffffff80022163:	8b 45 d0             	mov    -0x30(%rbp),%eax
ffffffff80022166:	85 c0                	test   %eax,%eax
ffffffff80022168:	0f 89 9c 00 00 00    	jns    ffffffff8002220a <ZydisEmitInstruction+0x270>
ffffffff8002216e:	8b 45 d0             	mov    -0x30(%rbp),%eax
ffffffff80022171:	e9 55 02 00 00       	jmp    ffffffff800223cb <ZydisEmitInstruction+0x431>
ffffffff80022176:	48 8b 45 90          	mov    -0x70(%rbp),%rax
ffffffff8002217a:	48 89 c6             	mov    %rax,%rsi
ffffffff8002217d:	bf 0f 00 00 00       	mov    $0xf,%edi
ffffffff80022182:	e8 c1 f2 ff ff       	call   ffffffff80021448 <ZydisEmitByte>
ffffffff80022187:	89 45 dc             	mov    %eax,-0x24(%rbp)
ffffffff8002218a:	8b 45 dc             	mov    -0x24(%rbp),%eax
ffffffff8002218d:	85 c0                	test   %eax,%eax
ffffffff8002218f:	79 08                	jns    ffffffff80022199 <ZydisEmitInstruction+0x1ff>
ffffffff80022191:	8b 45 dc             	mov    -0x24(%rbp),%eax
ffffffff80022194:	e9 32 02 00 00       	jmp    ffffffff800223cb <ZydisEmitInstruction+0x431>
ffffffff80022199:	48 8b 45 90          	mov    -0x70(%rbp),%rax
ffffffff8002219d:	48 89 c6             	mov    %rax,%rsi
ffffffff800221a0:	bf 3a 00 00 00       	mov    $0x3a,%edi
ffffffff800221a5:	e8 9e f2 ff ff       	call   ffffffff80021448 <ZydisEmitByte>
ffffffff800221aa:	89 45 d8             	mov    %eax,-0x28(%rbp)
ffffffff800221ad:	8b 45 d8             	mov    -0x28(%rbp),%eax
ffffffff800221b0:	85 c0                	test   %eax,%eax
ffffffff800221b2:	79 59                	jns    ffffffff8002220d <ZydisEmitInstruction+0x273>
ffffffff800221b4:	8b 45 d8             	mov    -0x28(%rbp),%eax
ffffffff800221b7:	e9 0f 02 00 00       	jmp    ffffffff800223cb <ZydisEmitInstruction+0x431>
ffffffff800221bc:	48 8b 45 90          	mov    -0x70(%rbp),%rax
ffffffff800221c0:	48 89 c6             	mov    %rax,%rsi
ffffffff800221c3:	bf 0f 00 00 00       	mov    $0xf,%edi
ffffffff800221c8:	e8 7b f2 ff ff       	call   ffffffff80021448 <ZydisEmitByte>
ffffffff800221cd:	89 45 e4             	mov    %eax,-0x1c(%rbp)
ffffffff800221d0:	8b 45 e4             	mov    -0x1c(%rbp),%eax
ffffffff800221d3:	85 c0                	test   %eax,%eax
ffffffff800221d5:	79 08                	jns    ffffffff800221df <ZydisEmitInstruction+0x245>
ffffffff800221d7:	8b 45 e4             	mov    -0x1c(%rbp),%eax
ffffffff800221da:	e9 ec 01 00 00       	jmp    ffffffff800223cb <ZydisEmitInstruction+0x431>
ffffffff800221df:	48 8b 45 90          	mov    -0x70(%rbp),%rax
ffffffff800221e3:	48 89 c6             	mov    %rax,%rsi
ffffffff800221e6:	bf 0f 00 00 00       	mov    $0xf,%edi
ffffffff800221eb:	e8 58 f2 ff ff       	call   ffffffff80021448 <ZydisEmitByte>
ffffffff800221f0:	89 45 e0             	mov    %eax,-0x20(%rbp)
ffffffff800221f3:	8b 45 e0             	mov    -0x20(%rbp),%eax
ffffffff800221f6:	85 c0                	test   %eax,%eax
ffffffff800221f8:	79 16                	jns    ffffffff80022210 <ZydisEmitInstruction+0x276>
ffffffff800221fa:	8b 45 e0             	mov    -0x20(%rbp),%eax
ffffffff800221fd:	e9 c9 01 00 00       	jmp    ffffffff800223cb <ZydisEmitInstruction+0x431>
ffffffff80022202:	eb fe                	jmp    ffffffff80022202 <ZydisEmitInstruction+0x268>
ffffffff80022204:	90                   	nop
ffffffff80022205:	eb 0a                	jmp    ffffffff80022211 <ZydisEmitInstruction+0x277>
ffffffff80022207:	90                   	nop
ffffffff80022208:	eb 07                	jmp    ffffffff80022211 <ZydisEmitInstruction+0x277>
ffffffff8002220a:	90                   	nop
ffffffff8002220b:	eb 04                	jmp    ffffffff80022211 <ZydisEmitInstruction+0x277>
ffffffff8002220d:	90                   	nop
ffffffff8002220e:	eb 01                	jmp    ffffffff80022211 <ZydisEmitInstruction+0x277>
ffffffff80022210:	90                   	nop
ffffffff80022211:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff80022215:	8b 40 08             	mov    0x8(%rax),%eax
ffffffff80022218:	83 f8 01             	cmp    $0x1,%eax
ffffffff8002221b:	74 2b                	je     ffffffff80022248 <ZydisEmitInstruction+0x2ae>
ffffffff8002221d:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff80022221:	0f b6 40 10          	movzbl 0x10(%rax),%eax
ffffffff80022225:	0f b6 c0             	movzbl %al,%eax
ffffffff80022228:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
ffffffff8002222c:	48 89 d6             	mov    %rdx,%rsi
ffffffff8002222f:	89 c7                	mov    %eax,%edi
ffffffff80022231:	e8 12 f2 ff ff       	call   ffffffff80021448 <ZydisEmitByte>
ffffffff80022236:	89 45 c8             	mov    %eax,-0x38(%rbp)
ffffffff80022239:	8b 45 c8             	mov    -0x38(%rbp),%eax
ffffffff8002223c:	85 c0                	test   %eax,%eax
ffffffff8002223e:	79 08                	jns    ffffffff80022248 <ZydisEmitInstruction+0x2ae>
ffffffff80022240:	8b 45 c8             	mov    -0x38(%rbp),%eax
ffffffff80022243:	e9 83 01 00 00       	jmp    ffffffff800223cb <ZydisEmitInstruction+0x431>
ffffffff80022248:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff8002224c:	48 8b 00             	mov    (%rax),%rax
ffffffff8002224f:	83 e0 01             	and    $0x1,%eax
ffffffff80022252:	48 85 c0             	test   %rax,%rax
ffffffff80022255:	74 57                	je     ffffffff800222ae <ZydisEmitInstruction+0x314>
ffffffff80022257:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff8002225b:	0f b6 40 15          	movzbl 0x15(%rax),%eax
ffffffff8002225f:	0f b6 c0             	movzbl %al,%eax
ffffffff80022262:	c1 e0 06             	shl    $0x6,%eax
ffffffff80022265:	89 c2                	mov    %eax,%edx
ffffffff80022267:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff8002226b:	0f b6 40 16          	movzbl 0x16(%rax),%eax
ffffffff8002226f:	0f b6 c0             	movzbl %al,%eax
ffffffff80022272:	c1 e0 03             	shl    $0x3,%eax
ffffffff80022275:	83 e0 38             	and    $0x38,%eax
ffffffff80022278:	09 c2                	or     %eax,%edx
ffffffff8002227a:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff8002227e:	0f b6 40 17          	movzbl 0x17(%rax),%eax
ffffffff80022282:	83 e0 07             	and    $0x7,%eax
ffffffff80022285:	09 d0                	or     %edx,%eax
ffffffff80022287:	88 45 c7             	mov    %al,-0x39(%rbp)
ffffffff8002228a:	0f b6 45 c7          	movzbl -0x39(%rbp),%eax
ffffffff8002228e:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
ffffffff80022292:	48 89 d6             	mov    %rdx,%rsi
ffffffff80022295:	89 c7                	mov    %eax,%edi
ffffffff80022297:	e8 ac f1 ff ff       	call   ffffffff80021448 <ZydisEmitByte>
ffffffff8002229c:	89 45 c0             	mov    %eax,-0x40(%rbp)
ffffffff8002229f:	8b 45 c0             	mov    -0x40(%rbp),%eax
ffffffff800222a2:	85 c0                	test   %eax,%eax
ffffffff800222a4:	79 08                	jns    ffffffff800222ae <ZydisEmitInstruction+0x314>
ffffffff800222a6:	8b 45 c0             	mov    -0x40(%rbp),%eax
ffffffff800222a9:	e9 1d 01 00 00       	jmp    ffffffff800223cb <ZydisEmitInstruction+0x431>
ffffffff800222ae:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff800222b2:	48 8b 00             	mov    (%rax),%rax
ffffffff800222b5:	83 e0 02             	and    $0x2,%eax
ffffffff800222b8:	48 85 c0             	test   %rax,%rax
ffffffff800222bb:	74 57                	je     ffffffff80022314 <ZydisEmitInstruction+0x37a>
ffffffff800222bd:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff800222c1:	0f b6 40 18          	movzbl 0x18(%rax),%eax
ffffffff800222c5:	0f b6 c0             	movzbl %al,%eax
ffffffff800222c8:	c1 e0 06             	shl    $0x6,%eax
ffffffff800222cb:	89 c2                	mov    %eax,%edx
ffffffff800222cd:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff800222d1:	0f b6 40 19          	movzbl 0x19(%rax),%eax
ffffffff800222d5:	0f b6 c0             	movzbl %al,%eax
ffffffff800222d8:	c1 e0 03             	shl    $0x3,%eax
ffffffff800222db:	83 e0 38             	and    $0x38,%eax
ffffffff800222de:	09 c2                	or     %eax,%edx
ffffffff800222e0:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff800222e4:	0f b6 40 1a          	movzbl 0x1a(%rax),%eax
ffffffff800222e8:	83 e0 07             	and    $0x7,%eax
ffffffff800222eb:	09 d0                	or     %edx,%eax
ffffffff800222ed:	88 45 bf             	mov    %al,-0x41(%rbp)
ffffffff800222f0:	0f b6 45 bf          	movzbl -0x41(%rbp),%eax
ffffffff800222f4:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
ffffffff800222f8:	48 89 d6             	mov    %rdx,%rsi
ffffffff800222fb:	89 c7                	mov    %eax,%edi
ffffffff800222fd:	e8 46 f1 ff ff       	call   ffffffff80021448 <ZydisEmitByte>
ffffffff80022302:	89 45 b8             	mov    %eax,-0x48(%rbp)
ffffffff80022305:	8b 45 b8             	mov    -0x48(%rbp),%eax
ffffffff80022308:	85 c0                	test   %eax,%eax
ffffffff8002230a:	79 08                	jns    ffffffff80022314 <ZydisEmitInstruction+0x37a>
ffffffff8002230c:	8b 45 b8             	mov    -0x48(%rbp),%eax
ffffffff8002230f:	e9 b7 00 00 00       	jmp    ffffffff800223cb <ZydisEmitInstruction+0x431>
ffffffff80022314:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff80022318:	0f b6 40 1e          	movzbl 0x1e(%rax),%eax
ffffffff8002231c:	84 c0                	test   %al,%al
ffffffff8002231e:	74 33                	je     ffffffff80022353 <ZydisEmitInstruction+0x3b9>
ffffffff80022320:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff80022324:	0f b6 40 1e          	movzbl 0x1e(%rax),%eax
ffffffff80022328:	c0 e8 03             	shr    $0x3,%al
ffffffff8002232b:	0f b6 c0             	movzbl %al,%eax
ffffffff8002232e:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
ffffffff80022332:	48 8b 4a 20          	mov    0x20(%rdx),%rcx
ffffffff80022336:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
ffffffff8002233a:	89 c6                	mov    %eax,%esi
ffffffff8002233c:	48 89 cf             	mov    %rcx,%rdi
ffffffff8002233f:	e8 74 f0 ff ff       	call   ffffffff800213b8 <ZydisEmitUInt>
ffffffff80022344:	89 45 b4             	mov    %eax,-0x4c(%rbp)
ffffffff80022347:	8b 45 b4             	mov    -0x4c(%rbp),%eax
ffffffff8002234a:	85 c0                	test   %eax,%eax
ffffffff8002234c:	79 05                	jns    ffffffff80022353 <ZydisEmitInstruction+0x3b9>
ffffffff8002234e:	8b 45 b4             	mov    -0x4c(%rbp),%eax
ffffffff80022351:	eb 78                	jmp    ffffffff800223cb <ZydisEmitInstruction+0x431>
ffffffff80022353:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff80022357:	0f b6 40 1f          	movzbl 0x1f(%rax),%eax
ffffffff8002235b:	84 c0                	test   %al,%al
ffffffff8002235d:	74 33                	je     ffffffff80022392 <ZydisEmitInstruction+0x3f8>
ffffffff8002235f:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff80022363:	0f b6 40 1f          	movzbl 0x1f(%rax),%eax
ffffffff80022367:	c0 e8 03             	shr    $0x3,%al
ffffffff8002236a:	0f b6 c0             	movzbl %al,%eax
ffffffff8002236d:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
ffffffff80022371:	48 8b 4a 28          	mov    0x28(%rdx),%rcx
ffffffff80022375:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
ffffffff80022379:	89 c6                	mov    %eax,%esi
ffffffff8002237b:	48 89 cf             	mov    %rcx,%rdi
ffffffff8002237e:	e8 35 f0 ff ff       	call   ffffffff800213b8 <ZydisEmitUInt>
ffffffff80022383:	89 45 b0             	mov    %eax,-0x50(%rbp)
ffffffff80022386:	8b 45 b0             	mov    -0x50(%rbp),%eax
ffffffff80022389:	85 c0                	test   %eax,%eax
ffffffff8002238b:	79 05                	jns    ffffffff80022392 <ZydisEmitInstruction+0x3f8>
ffffffff8002238d:	8b 45 b0             	mov    -0x50(%rbp),%eax
ffffffff80022390:	eb 39                	jmp    ffffffff800223cb <ZydisEmitInstruction+0x431>
ffffffff80022392:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff80022396:	8b 40 08             	mov    0x8(%rax),%eax
ffffffff80022399:	83 f8 01             	cmp    $0x1,%eax
ffffffff8002239c:	75 28                	jne    ffffffff800223c6 <ZydisEmitInstruction+0x42c>
ffffffff8002239e:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff800223a2:	0f b6 40 10          	movzbl 0x10(%rax),%eax
ffffffff800223a6:	0f b6 c0             	movzbl %al,%eax
ffffffff800223a9:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
ffffffff800223ad:	48 89 d6             	mov    %rdx,%rsi
ffffffff800223b0:	89 c7                	mov    %eax,%edi
ffffffff800223b2:	e8 91 f0 ff ff       	call   ffffffff80021448 <ZydisEmitByte>
ffffffff800223b7:	89 45 ac             	mov    %eax,-0x54(%rbp)
ffffffff800223ba:	8b 45 ac             	mov    -0x54(%rbp),%eax
ffffffff800223bd:	85 c0                	test   %eax,%eax
ffffffff800223bf:	79 05                	jns    ffffffff800223c6 <ZydisEmitInstruction+0x42c>
ffffffff800223c1:	8b 45 ac             	mov    -0x54(%rbp),%eax
ffffffff800223c4:	eb 05                	jmp    ffffffff800223cb <ZydisEmitInstruction+0x431>
ffffffff800223c6:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff800223cb:	c9                   	leave  
ffffffff800223cc:	c3                   	ret    

ffffffff800223cd <ZydisBuildRegisterOperand>:
ffffffff800223cd:	f3 0f 1e fa          	endbr64 
ffffffff800223d1:	55                   	push   %rbp
ffffffff800223d2:	48 89 e5             	mov    %rsp,%rbp
ffffffff800223d5:	48 83 ec 30          	sub    $0x30,%rsp
ffffffff800223d9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff800223dd:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
ffffffff800223e1:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
ffffffff800223e5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff800223e9:	0f b6 00             	movzbl (%rax),%eax
ffffffff800223ec:	83 e0 3f             	and    $0x3f,%eax
ffffffff800223ef:	3c 01                	cmp    $0x1,%al
ffffffff800223f1:	0f 84 4b 01 00 00    	je     ffffffff80022542 <ZydisBuildRegisterOperand+0x175>
ffffffff800223f7:	c6 45 ff 00          	movb   $0x0,-0x1(%rbp)
ffffffff800223fb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800223ff:	8b 40 04             	mov    0x4(%rax),%eax
ffffffff80022402:	89 c7                	mov    %eax,%edi
ffffffff80022404:	e8 97 33 00 00       	call   ffffffff800257a0 <ZydisRegisterGetClass>
ffffffff80022409:	83 f8 01             	cmp    $0x1,%eax
ffffffff8002240c:	74 13                	je     ffffffff80022421 <ZydisBuildRegisterOperand+0x54>
ffffffff8002240e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80022412:	8b 40 04             	mov    0x4(%rax),%eax
ffffffff80022415:	89 c7                	mov    %eax,%edi
ffffffff80022417:	e8 45 33 00 00       	call   ffffffff80025761 <ZydisRegisterGetId>
ffffffff8002241c:	88 45 ff             	mov    %al,-0x1(%rbp)
ffffffff8002241f:	eb 47                	jmp    ffffffff80022468 <ZydisBuildRegisterOperand+0x9b>
ffffffff80022421:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80022425:	8b 40 04             	mov    0x4(%rax),%eax
ffffffff80022428:	83 e8 01             	sub    $0x1,%eax
ffffffff8002242b:	89 c2                	mov    %eax,%edx
ffffffff8002242d:	48 8d 05 2c bc 01 00 	lea    0x1bc2c(%rip),%rax        # ffffffff8003e060 <reg8_lookup.1>
ffffffff80022434:	0f b6 04 02          	movzbl (%rdx,%rax,1),%eax
ffffffff80022438:	88 45 ff             	mov    %al,-0x1(%rbp)
ffffffff8002243b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002243f:	8b 40 04             	mov    0x4(%rax),%eax
ffffffff80022442:	83 f8 08             	cmp    $0x8,%eax
ffffffff80022445:	76 21                	jbe    ffffffff80022468 <ZydisBuildRegisterOperand+0x9b>
ffffffff80022447:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002244b:	8b 40 04             	mov    0x4(%rax),%eax
ffffffff8002244e:	83 f8 0c             	cmp    $0xc,%eax
ffffffff80022451:	77 15                	ja     ffffffff80022468 <ZydisBuildRegisterOperand+0x9b>
ffffffff80022453:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80022457:	48 8b 00             	mov    (%rax),%rax
ffffffff8002245a:	48 83 c8 04          	or     $0x4,%rax
ffffffff8002245e:	48 89 c2             	mov    %rax,%rdx
ffffffff80022461:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80022465:	48 89 10             	mov    %rdx,(%rax)
ffffffff80022468:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8002246c:	0f b6 40 09          	movzbl 0x9(%rax),%eax
ffffffff80022470:	83 e0 3f             	and    $0x3f,%eax
ffffffff80022473:	0f b6 c0             	movzbl %al,%eax
ffffffff80022476:	83 f8 06             	cmp    $0x6,%eax
ffffffff80022479:	0f 87 c1 00 00 00    	ja     ffffffff80022540 <ZydisBuildRegisterOperand+0x173>
ffffffff8002247f:	89 c0                	mov    %eax,%eax
ffffffff80022481:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
ffffffff80022488:	00 
ffffffff80022489:	48 8d 05 28 ba 01 00 	lea    0x1ba28(%rip),%rax        # ffffffff8003deb8 <zero.0+0x290>
ffffffff80022490:	8b 04 02             	mov    (%rdx,%rax,1),%eax
ffffffff80022493:	48 98                	cltq   
ffffffff80022495:	48 8d 15 1c ba 01 00 	lea    0x1ba1c(%rip),%rdx        # ffffffff8003deb8 <zero.0+0x290>
ffffffff8002249c:	48 01 d0             	add    %rdx,%rax
ffffffff8002249f:	3e ff e0             	notrack jmp *%rax
ffffffff800224a2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff800224a6:	48 8b 00             	mov    (%rax),%rax
ffffffff800224a9:	48 83 c8 01          	or     $0x1,%rax
ffffffff800224ad:	48 89 c2             	mov    %rax,%rdx
ffffffff800224b0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff800224b4:	48 89 10             	mov    %rdx,(%rax)
ffffffff800224b7:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff800224bb:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
ffffffff800224bf:	88 42 16             	mov    %al,0x16(%rdx)
ffffffff800224c2:	eb 7f                	jmp    ffffffff80022543 <ZydisBuildRegisterOperand+0x176>
ffffffff800224c4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff800224c8:	48 8b 00             	mov    (%rax),%rax
ffffffff800224cb:	48 83 c8 01          	or     $0x1,%rax
ffffffff800224cf:	48 89 c2             	mov    %rax,%rdx
ffffffff800224d2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff800224d6:	48 89 10             	mov    %rdx,(%rax)
ffffffff800224d9:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff800224dd:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
ffffffff800224e1:	88 42 17             	mov    %al,0x17(%rdx)
ffffffff800224e4:	eb 5d                	jmp    ffffffff80022543 <ZydisBuildRegisterOperand+0x176>
ffffffff800224e6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff800224ea:	0f b6 50 10          	movzbl 0x10(%rax),%edx
ffffffff800224ee:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
ffffffff800224f2:	83 e0 07             	and    $0x7,%eax
ffffffff800224f5:	01 d0                	add    %edx,%eax
ffffffff800224f7:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff800224fb:	88 42 10             	mov    %al,0x10(%rdx)
ffffffff800224fe:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff80022502:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
ffffffff80022506:	88 42 17             	mov    %al,0x17(%rdx)
ffffffff80022509:	eb 38                	jmp    ffffffff80022543 <ZydisBuildRegisterOperand+0x176>
ffffffff8002250b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff8002250f:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
ffffffff80022513:	88 42 11             	mov    %al,0x11(%rdx)
ffffffff80022516:	eb 2b                	jmp    ffffffff80022543 <ZydisBuildRegisterOperand+0x176>
ffffffff80022518:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8002251c:	c6 40 1f 08          	movb   $0x8,0x1f(%rax)
ffffffff80022520:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
ffffffff80022524:	c1 e0 04             	shl    $0x4,%eax
ffffffff80022527:	48 98                	cltq   
ffffffff80022529:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff8002252d:	48 89 42 28          	mov    %rax,0x28(%rdx)
ffffffff80022531:	eb 10                	jmp    ffffffff80022543 <ZydisBuildRegisterOperand+0x176>
ffffffff80022533:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff80022537:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
ffffffff8002253b:	88 42 13             	mov    %al,0x13(%rdx)
ffffffff8002253e:	eb 03                	jmp    ffffffff80022543 <ZydisBuildRegisterOperand+0x176>
ffffffff80022540:	eb fe                	jmp    ffffffff80022540 <ZydisBuildRegisterOperand+0x173>
ffffffff80022542:	90                   	nop
ffffffff80022543:	c9                   	leave  
ffffffff80022544:	c3                   	ret    

ffffffff80022545 <ZydisBuildMemoryOperand>:
ffffffff80022545:	f3 0f 1e fa          	endbr64 
ffffffff80022549:	55                   	push   %rbp
ffffffff8002254a:	48 89 e5             	mov    %rsp,%rbp
ffffffff8002254d:	48 83 ec 30          	sub    $0x30,%rsp
ffffffff80022551:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff80022555:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
ffffffff80022559:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
ffffffff8002255d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80022561:	48 8b 00             	mov    (%rax),%rax
ffffffff80022564:	48 83 c8 01          	or     $0x1,%rax
ffffffff80022568:	48 89 c2             	mov    %rax,%rdx
ffffffff8002256b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8002256f:	48 89 10             	mov    %rdx,(%rax)
ffffffff80022572:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80022576:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff8002257a:	48 89 c2             	mov    %rax,%rdx
ffffffff8002257d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80022581:	48 89 50 20          	mov    %rdx,0x20(%rax)
ffffffff80022585:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80022589:	0f b6 40 29          	movzbl 0x29(%rax),%eax
ffffffff8002258d:	3c 10                	cmp    $0x10,%al
ffffffff8002258f:	0f 85 a3 00 00 00    	jne    ffffffff80022638 <ZydisBuildMemoryOperand+0xf3>
ffffffff80022595:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80022599:	8b 50 14             	mov    0x14(%rax),%edx
ffffffff8002259c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff800225a0:	8b 40 10             	mov    0x10(%rax),%eax
ffffffff800225a3:	89 d6                	mov    %edx,%esi
ffffffff800225a5:	89 c7                	mov    %eax,%edi
ffffffff800225a7:	e8 74 b8 ff ff       	call   ffffffff8001de20 <ZydisGetRm16>
ffffffff800225ac:	88 45 fd             	mov    %al,-0x3(%rbp)
ffffffff800225af:	80 7d fd ff          	cmpb   $0xff,-0x3(%rbp)
ffffffff800225b3:	74 68                	je     ffffffff8002261d <ZydisBuildMemoryOperand+0xd8>
ffffffff800225b5:	0f b6 45 fd          	movzbl -0x3(%rbp),%eax
ffffffff800225b9:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff800225bd:	88 42 17             	mov    %al,0x17(%rdx)
ffffffff800225c0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800225c4:	0f b6 40 2a          	movzbl 0x2a(%rax),%eax
ffffffff800225c8:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff800225cc:	88 42 1e             	mov    %al,0x1e(%rdx)
ffffffff800225cf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff800225d3:	0f b6 40 1e          	movzbl 0x1e(%rax),%eax
ffffffff800225d7:	0f b6 c0             	movzbl %al,%eax
ffffffff800225da:	83 f8 10             	cmp    $0x10,%eax
ffffffff800225dd:	74 32                	je     ffffffff80022611 <ZydisBuildMemoryOperand+0xcc>
ffffffff800225df:	83 f8 10             	cmp    $0x10,%eax
ffffffff800225e2:	7f 37                	jg     ffffffff8002261b <ZydisBuildMemoryOperand+0xd6>
ffffffff800225e4:	85 c0                	test   %eax,%eax
ffffffff800225e6:	74 07                	je     ffffffff800225ef <ZydisBuildMemoryOperand+0xaa>
ffffffff800225e8:	83 f8 08             	cmp    $0x8,%eax
ffffffff800225eb:	74 1a                	je     ffffffff80022607 <ZydisBuildMemoryOperand+0xc2>
ffffffff800225ed:	eb 2c                	jmp    ffffffff8002261b <ZydisBuildMemoryOperand+0xd6>
ffffffff800225ef:	80 7d fd 06          	cmpb   $0x6,-0x3(%rbp)
ffffffff800225f3:	75 3d                	jne    ffffffff80022632 <ZydisBuildMemoryOperand+0xed>
ffffffff800225f5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff800225f9:	c6 40 1e 08          	movb   $0x8,0x1e(%rax)
ffffffff800225fd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80022601:	c6 40 15 01          	movb   $0x1,0x15(%rax)
ffffffff80022605:	eb 2b                	jmp    ffffffff80022632 <ZydisBuildMemoryOperand+0xed>
ffffffff80022607:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8002260b:	c6 40 15 01          	movb   $0x1,0x15(%rax)
ffffffff8002260f:	eb 22                	jmp    ffffffff80022633 <ZydisBuildMemoryOperand+0xee>
ffffffff80022611:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80022615:	c6 40 15 02          	movb   $0x2,0x15(%rax)
ffffffff80022619:	eb 18                	jmp    ffffffff80022633 <ZydisBuildMemoryOperand+0xee>
ffffffff8002261b:	eb fe                	jmp    ffffffff8002261b <ZydisBuildMemoryOperand+0xd6>
ffffffff8002261d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80022621:	c6 40 17 06          	movb   $0x6,0x17(%rax)
ffffffff80022625:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80022629:	c6 40 1e 10          	movb   $0x10,0x1e(%rax)
ffffffff8002262d:	e9 37 02 00 00       	jmp    ffffffff80022869 <ZydisBuildMemoryOperand+0x324>
ffffffff80022632:	90                   	nop
ffffffff80022633:	e9 31 02 00 00       	jmp    ffffffff80022869 <ZydisBuildMemoryOperand+0x324>
ffffffff80022638:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8002263c:	8b 40 14             	mov    0x14(%rax),%eax
ffffffff8002263f:	85 c0                	test   %eax,%eax
ffffffff80022641:	0f 85 8d 00 00 00    	jne    ffffffff800226d4 <ZydisBuildMemoryOperand+0x18f>
ffffffff80022647:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8002264b:	8b 40 10             	mov    0x10(%rax),%eax
ffffffff8002264e:	85 c0                	test   %eax,%eax
ffffffff80022650:	75 51                	jne    ffffffff800226a3 <ZydisBuildMemoryOperand+0x15e>
ffffffff80022652:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80022656:	48 8b 00             	mov    (%rax),%rax
ffffffff80022659:	8b 00                	mov    (%rax),%eax
ffffffff8002265b:	85 c0                	test   %eax,%eax
ffffffff8002265d:	75 2f                	jne    ffffffff8002268e <ZydisBuildMemoryOperand+0x149>
ffffffff8002265f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80022663:	c6 40 17 04          	movb   $0x4,0x17(%rax)
ffffffff80022667:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8002266b:	48 8b 00             	mov    (%rax),%rax
ffffffff8002266e:	48 83 c8 02          	or     $0x2,%rax
ffffffff80022672:	48 89 c2             	mov    %rax,%rdx
ffffffff80022675:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80022679:	48 89 10             	mov    %rdx,(%rax)
ffffffff8002267c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80022680:	c6 40 1a 05          	movb   $0x5,0x1a(%rax)
ffffffff80022684:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80022688:	c6 40 19 04          	movb   $0x4,0x19(%rax)
ffffffff8002268c:	eb 08                	jmp    ffffffff80022696 <ZydisBuildMemoryOperand+0x151>
ffffffff8002268e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80022692:	c6 40 17 05          	movb   $0x5,0x17(%rax)
ffffffff80022696:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8002269a:	c6 40 1e 20          	movb   $0x20,0x1e(%rax)
ffffffff8002269e:	e9 c6 01 00 00       	jmp    ffffffff80022869 <ZydisBuildMemoryOperand+0x324>
ffffffff800226a3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff800226a7:	8b 40 10             	mov    0x10(%rax),%eax
ffffffff800226aa:	3d c5 00 00 00       	cmp    $0xc5,%eax
ffffffff800226af:	74 0e                	je     ffffffff800226bf <ZydisBuildMemoryOperand+0x17a>
ffffffff800226b1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff800226b5:	8b 40 10             	mov    0x10(%rax),%eax
ffffffff800226b8:	3d c4 00 00 00       	cmp    $0xc4,%eax
ffffffff800226bd:	75 15                	jne    ffffffff800226d4 <ZydisBuildMemoryOperand+0x18f>
ffffffff800226bf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff800226c3:	c6 40 17 05          	movb   $0x5,0x17(%rax)
ffffffff800226c7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff800226cb:	c6 40 1e 20          	movb   $0x20,0x1e(%rax)
ffffffff800226cf:	e9 95 01 00 00       	jmp    ffffffff80022869 <ZydisBuildMemoryOperand+0x324>
ffffffff800226d4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff800226d8:	8b 40 10             	mov    0x10(%rax),%eax
ffffffff800226db:	89 c7                	mov    %eax,%edi
ffffffff800226dd:	e8 7f 30 00 00       	call   ffffffff80025761 <ZydisRegisterGetId>
ffffffff800226e2:	88 45 ff             	mov    %al,-0x1(%rbp)
ffffffff800226e5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff800226e9:	8b 40 14             	mov    0x14(%rax),%eax
ffffffff800226ec:	89 c7                	mov    %eax,%edi
ffffffff800226ee:	e8 6e 30 00 00       	call   ffffffff80025761 <ZydisRegisterGetId>
ffffffff800226f3:	88 45 fe             	mov    %al,-0x2(%rbp)
ffffffff800226f6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800226fa:	0f b6 40 2a          	movzbl 0x2a(%rax),%eax
ffffffff800226fe:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff80022702:	88 42 1e             	mov    %al,0x1e(%rdx)
ffffffff80022705:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80022709:	0f b6 40 1e          	movzbl 0x1e(%rax),%eax
ffffffff8002270d:	0f b6 c0             	movzbl %al,%eax
ffffffff80022710:	83 f8 20             	cmp    $0x20,%eax
ffffffff80022713:	74 56                	je     ffffffff8002276b <ZydisBuildMemoryOperand+0x226>
ffffffff80022715:	83 f8 20             	cmp    $0x20,%eax
ffffffff80022718:	7f 5b                	jg     ffffffff80022775 <ZydisBuildMemoryOperand+0x230>
ffffffff8002271a:	83 f8 10             	cmp    $0x10,%eax
ffffffff8002271d:	74 44                	je     ffffffff80022763 <ZydisBuildMemoryOperand+0x21e>
ffffffff8002271f:	83 f8 10             	cmp    $0x10,%eax
ffffffff80022722:	7f 51                	jg     ffffffff80022775 <ZydisBuildMemoryOperand+0x230>
ffffffff80022724:	85 c0                	test   %eax,%eax
ffffffff80022726:	74 07                	je     ffffffff8002272f <ZydisBuildMemoryOperand+0x1ea>
ffffffff80022728:	83 f8 08             	cmp    $0x8,%eax
ffffffff8002272b:	74 2c                	je     ffffffff80022759 <ZydisBuildMemoryOperand+0x214>
ffffffff8002272d:	eb 46                	jmp    ffffffff80022775 <ZydisBuildMemoryOperand+0x230>
ffffffff8002272f:	80 7d ff 05          	cmpb   $0x5,-0x1(%rbp)
ffffffff80022733:	74 06                	je     ffffffff8002273b <ZydisBuildMemoryOperand+0x1f6>
ffffffff80022735:	80 7d ff 0d          	cmpb   $0xd,-0x1(%rbp)
ffffffff80022739:	75 3c                	jne    ffffffff80022777 <ZydisBuildMemoryOperand+0x232>
ffffffff8002273b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8002273f:	c6 40 1e 08          	movb   $0x8,0x1e(%rax)
ffffffff80022743:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80022747:	48 c7 40 20 00 00 00 	movq   $0x0,0x20(%rax)
ffffffff8002274e:	00 
ffffffff8002274f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80022753:	c6 40 15 01          	movb   $0x1,0x15(%rax)
ffffffff80022757:	eb 1e                	jmp    ffffffff80022777 <ZydisBuildMemoryOperand+0x232>
ffffffff80022759:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8002275d:	c6 40 15 01          	movb   $0x1,0x15(%rax)
ffffffff80022761:	eb 15                	jmp    ffffffff80022778 <ZydisBuildMemoryOperand+0x233>
ffffffff80022763:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80022767:	c6 40 1e 20          	movb   $0x20,0x1e(%rax)
ffffffff8002276b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8002276f:	c6 40 15 02          	movb   $0x2,0x15(%rax)
ffffffff80022773:	eb 03                	jmp    ffffffff80022778 <ZydisBuildMemoryOperand+0x233>
ffffffff80022775:	eb fe                	jmp    ffffffff80022775 <ZydisBuildMemoryOperand+0x230>
ffffffff80022777:	90                   	nop
ffffffff80022778:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8002277c:	8b 40 14             	mov    0x14(%rax),%eax
ffffffff8002277f:	85 c0                	test   %eax,%eax
ffffffff80022781:	75 33                	jne    ffffffff800227b6 <ZydisBuildMemoryOperand+0x271>
ffffffff80022783:	80 7d ff 04          	cmpb   $0x4,-0x1(%rbp)
ffffffff80022787:	74 2d                	je     ffffffff800227b6 <ZydisBuildMemoryOperand+0x271>
ffffffff80022789:	80 7d ff 0c          	cmpb   $0xc,-0x1(%rbp)
ffffffff8002278d:	74 27                	je     ffffffff800227b6 <ZydisBuildMemoryOperand+0x271>
ffffffff8002278f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80022793:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff80022797:	0f b6 40 05          	movzbl 0x5(%rax),%eax
ffffffff8002279b:	0f b6 c0             	movzbl %al,%eax
ffffffff8002279e:	83 e0 07             	and    $0x7,%eax
ffffffff800227a1:	83 f8 04             	cmp    $0x4,%eax
ffffffff800227a4:	74 10                	je     ffffffff800227b6 <ZydisBuildMemoryOperand+0x271>
ffffffff800227a6:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff800227aa:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
ffffffff800227ae:	88 42 17             	mov    %al,0x17(%rdx)
ffffffff800227b1:	e9 b3 00 00 00       	jmp    ffffffff80022869 <ZydisBuildMemoryOperand+0x324>
ffffffff800227b6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff800227ba:	c6 40 17 04          	movb   $0x4,0x17(%rax)
ffffffff800227be:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff800227c2:	48 8b 00             	mov    (%rax),%rax
ffffffff800227c5:	48 83 c8 02          	or     $0x2,%rax
ffffffff800227c9:	48 89 c2             	mov    %rax,%rdx
ffffffff800227cc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff800227d0:	48 89 10             	mov    %rdx,(%rax)
ffffffff800227d3:	80 7d ff ff          	cmpb   $0xff,-0x1(%rbp)
ffffffff800227d7:	74 0d                	je     ffffffff800227e6 <ZydisBuildMemoryOperand+0x2a1>
ffffffff800227d9:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff800227dd:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
ffffffff800227e1:	88 42 1a             	mov    %al,0x1a(%rdx)
ffffffff800227e4:	eb 18                	jmp    ffffffff800227fe <ZydisBuildMemoryOperand+0x2b9>
ffffffff800227e6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff800227ea:	c6 40 1a 05          	movb   $0x5,0x1a(%rax)
ffffffff800227ee:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff800227f2:	c6 40 15 00          	movb   $0x0,0x15(%rax)
ffffffff800227f6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff800227fa:	c6 40 1e 20          	movb   $0x20,0x1e(%rax)
ffffffff800227fe:	80 7d fe ff          	cmpb   $0xff,-0x2(%rbp)
ffffffff80022802:	74 0d                	je     ffffffff80022811 <ZydisBuildMemoryOperand+0x2cc>
ffffffff80022804:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff80022808:	0f b6 45 fe          	movzbl -0x2(%rbp),%eax
ffffffff8002280c:	88 42 19             	mov    %al,0x19(%rdx)
ffffffff8002280f:	eb 08                	jmp    ffffffff80022819 <ZydisBuildMemoryOperand+0x2d4>
ffffffff80022811:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80022815:	c6 40 19 04          	movb   $0x4,0x19(%rax)
ffffffff80022819:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8002281d:	0f b6 40 18          	movzbl 0x18(%rax),%eax
ffffffff80022821:	0f b6 c0             	movzbl %al,%eax
ffffffff80022824:	83 f8 08             	cmp    $0x8,%eax
ffffffff80022827:	74 33                	je     ffffffff8002285c <ZydisBuildMemoryOperand+0x317>
ffffffff80022829:	83 f8 08             	cmp    $0x8,%eax
ffffffff8002282c:	7f 38                	jg     ffffffff80022866 <ZydisBuildMemoryOperand+0x321>
ffffffff8002282e:	83 f8 04             	cmp    $0x4,%eax
ffffffff80022831:	74 1f                	je     ffffffff80022852 <ZydisBuildMemoryOperand+0x30d>
ffffffff80022833:	83 f8 04             	cmp    $0x4,%eax
ffffffff80022836:	7f 2e                	jg     ffffffff80022866 <ZydisBuildMemoryOperand+0x321>
ffffffff80022838:	83 f8 01             	cmp    $0x1,%eax
ffffffff8002283b:	7f 06                	jg     ffffffff80022843 <ZydisBuildMemoryOperand+0x2fe>
ffffffff8002283d:	85 c0                	test   %eax,%eax
ffffffff8002283f:	79 27                	jns    ffffffff80022868 <ZydisBuildMemoryOperand+0x323>
ffffffff80022841:	eb 23                	jmp    ffffffff80022866 <ZydisBuildMemoryOperand+0x321>
ffffffff80022843:	83 f8 02             	cmp    $0x2,%eax
ffffffff80022846:	75 1e                	jne    ffffffff80022866 <ZydisBuildMemoryOperand+0x321>
ffffffff80022848:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8002284c:	c6 40 18 01          	movb   $0x1,0x18(%rax)
ffffffff80022850:	eb 17                	jmp    ffffffff80022869 <ZydisBuildMemoryOperand+0x324>
ffffffff80022852:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80022856:	c6 40 18 02          	movb   $0x2,0x18(%rax)
ffffffff8002285a:	eb 0d                	jmp    ffffffff80022869 <ZydisBuildMemoryOperand+0x324>
ffffffff8002285c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80022860:	c6 40 18 03          	movb   $0x3,0x18(%rax)
ffffffff80022864:	eb 03                	jmp    ffffffff80022869 <ZydisBuildMemoryOperand+0x324>
ffffffff80022866:	eb fe                	jmp    ffffffff80022866 <ZydisBuildMemoryOperand+0x321>
ffffffff80022868:	90                   	nop
ffffffff80022869:	c9                   	leave  
ffffffff8002286a:	c3                   	ret    

ffffffff8002286b <ZydisBuildInstruction>:
ffffffff8002286b:	f3 0f 1e fa          	endbr64 
ffffffff8002286f:	55                   	push   %rbp
ffffffff80022870:	48 89 e5             	mov    %rsp,%rbp
ffffffff80022873:	48 83 ec 40          	sub    $0x40,%rsp
ffffffff80022877:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
ffffffff8002287b:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
ffffffff8002287f:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff80022883:	ba 30 00 00 00       	mov    $0x30,%edx
ffffffff80022888:	be 00 00 00 00       	mov    $0x0,%esi
ffffffff8002288d:	48 89 c7             	mov    %rax,%rdi
ffffffff80022890:	e8 5d ab ff ff       	call   ffffffff8001d3f2 <ZYAN_MEMSET.lto_priv.2>
ffffffff80022895:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80022899:	48 8b 50 20          	mov    0x20(%rax),%rdx
ffffffff8002289d:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff800228a1:	48 89 10             	mov    %rdx,(%rax)
ffffffff800228a4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff800228a8:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff800228ac:	0f b6 40 06          	movzbl 0x6(%rax),%eax
ffffffff800228b0:	83 e0 07             	and    $0x7,%eax
ffffffff800228b3:	0f b6 c0             	movzbl %al,%eax
ffffffff800228b6:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
ffffffff800228ba:	89 42 08             	mov    %eax,0x8(%rdx)
ffffffff800228bd:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff800228c1:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff800228c5:	0f b6 40 06          	movzbl 0x6(%rax),%eax
ffffffff800228c9:	c0 e8 03             	shr    $0x3,%al
ffffffff800228cc:	83 e0 0f             	and    $0xf,%eax
ffffffff800228cf:	0f b6 c0             	movzbl %al,%eax
ffffffff800228d2:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
ffffffff800228d6:	89 42 0c             	mov    %eax,0xc(%rdx)
ffffffff800228d9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff800228dd:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff800228e1:	0f b6 40 04          	movzbl 0x4(%rax),%eax
ffffffff800228e5:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
ffffffff800228e9:	88 42 10             	mov    %al,0x10(%rdx)
ffffffff800228ec:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff800228f0:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff800228f4:	0f b6 40 08          	movzbl 0x8(%rax),%eax
ffffffff800228f8:	c0 e8 02             	shr    $0x2,%al
ffffffff800228fb:	83 e0 01             	and    $0x1,%eax
ffffffff800228fe:	89 c2                	mov    %eax,%edx
ffffffff80022900:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff80022904:	88 50 1b             	mov    %dl,0x1b(%rax)
ffffffff80022907:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8002290b:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff8002290f:	0f b6 40 05          	movzbl 0x5(%rax),%eax
ffffffff80022913:	c0 e8 06             	shr    $0x6,%al
ffffffff80022916:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
ffffffff8002291a:	88 42 15             	mov    %al,0x15(%rdx)
ffffffff8002291d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80022921:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff80022925:	0f b6 40 05          	movzbl 0x5(%rax),%eax
ffffffff80022929:	c0 e8 03             	shr    $0x3,%al
ffffffff8002292c:	83 e0 07             	and    $0x7,%eax
ffffffff8002292f:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
ffffffff80022933:	88 42 16             	mov    %al,0x16(%rdx)
ffffffff80022936:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8002293a:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff8002293e:	0f b6 40 05          	movzbl 0x5(%rax),%eax
ffffffff80022942:	83 e0 07             	and    $0x7,%eax
ffffffff80022945:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
ffffffff80022949:	88 42 17             	mov    %al,0x17(%rdx)
ffffffff8002294c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80022950:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff80022954:	0f b6 40 05          	movzbl 0x5(%rax),%eax
ffffffff80022958:	84 c0                	test   %al,%al
ffffffff8002295a:	74 15                	je     ffffffff80022971 <ZydisBuildInstruction+0x106>
ffffffff8002295c:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff80022960:	48 8b 00             	mov    (%rax),%rax
ffffffff80022963:	48 83 c8 01          	or     $0x1,%rax
ffffffff80022967:	48 89 c2             	mov    %rax,%rdx
ffffffff8002296a:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002296e:	48 89 10             	mov    %rdx,(%rax)
ffffffff80022971:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80022975:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff80022979:	0f b6 40 08          	movzbl 0x8(%rax),%eax
ffffffff8002297d:	c0 e8 03             	shr    $0x3,%al
ffffffff80022980:	83 e0 03             	and    $0x3,%eax
ffffffff80022983:	0f b6 c0             	movzbl %al,%eax
ffffffff80022986:	83 f8 03             	cmp    $0x3,%eax
ffffffff80022989:	74 2b                	je     ffffffff800229b6 <ZydisBuildInstruction+0x14b>
ffffffff8002298b:	83 f8 03             	cmp    $0x3,%eax
ffffffff8002298e:	7f 30                	jg     ffffffff800229c0 <ZydisBuildInstruction+0x155>
ffffffff80022990:	83 f8 01             	cmp    $0x1,%eax
ffffffff80022993:	7f 06                	jg     ffffffff8002299b <ZydisBuildInstruction+0x130>
ffffffff80022995:	85 c0                	test   %eax,%eax
ffffffff80022997:	79 09                	jns    ffffffff800229a2 <ZydisBuildInstruction+0x137>
ffffffff80022999:	eb 25                	jmp    ffffffff800229c0 <ZydisBuildInstruction+0x155>
ffffffff8002299b:	83 f8 02             	cmp    $0x2,%eax
ffffffff8002299e:	74 0c                	je     ffffffff800229ac <ZydisBuildInstruction+0x141>
ffffffff800229a0:	eb 1e                	jmp    ffffffff800229c0 <ZydisBuildInstruction+0x155>
ffffffff800229a2:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff800229a6:	c6 40 14 00          	movb   $0x0,0x14(%rax)
ffffffff800229aa:	eb 16                	jmp    ffffffff800229c2 <ZydisBuildInstruction+0x157>
ffffffff800229ac:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff800229b0:	c6 40 14 01          	movb   $0x1,0x14(%rax)
ffffffff800229b4:	eb 0c                	jmp    ffffffff800229c2 <ZydisBuildInstruction+0x157>
ffffffff800229b6:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff800229ba:	c6 40 14 02          	movb   $0x2,0x14(%rax)
ffffffff800229be:	eb 02                	jmp    ffffffff800229c2 <ZydisBuildInstruction+0x157>
ffffffff800229c0:	eb fe                	jmp    ffffffff800229c0 <ZydisBuildInstruction+0x155>
ffffffff800229c2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff800229c6:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff800229ca:	0f b6 40 06          	movzbl 0x6(%rax),%eax
ffffffff800229ce:	83 e0 07             	and    $0x7,%eax
ffffffff800229d1:	3c 04                	cmp    $0x4,%al
ffffffff800229d3:	0f 85 01 01 00 00    	jne    ffffffff80022ada <ZydisBuildInstruction+0x26f>
ffffffff800229d9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff800229dd:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff800229e1:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff800229e5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff800229e9:	0f b6 40 0e          	movzbl 0xe(%rax),%eax
ffffffff800229ed:	83 e0 60             	and    $0x60,%eax
ffffffff800229f0:	3c 20                	cmp    $0x20,%al
ffffffff800229f2:	74 15                	je     ffffffff80022a09 <ZydisBuildInstruction+0x19e>
ffffffff800229f4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff800229f8:	48 8b 00             	mov    (%rax),%rax
ffffffff800229fb:	0f b6 80 79 01 00 00 	movzbl 0x179(%rax),%eax
ffffffff80022a02:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
ffffffff80022a06:	88 42 1c             	mov    %al,0x1c(%rdx)
ffffffff80022a09:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80022a0d:	48 8b 00             	mov    (%rax),%rax
ffffffff80022a10:	0f b6 80 78 01 00 00 	movzbl 0x178(%rax),%eax
ffffffff80022a17:	84 c0                	test   %al,%al
ffffffff80022a19:	75 11                	jne    ffffffff80022a2c <ZydisBuildInstruction+0x1c1>
ffffffff80022a1b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80022a1f:	48 8b 00             	mov    (%rax),%rax
ffffffff80022a22:	8b 80 70 01 00 00    	mov    0x170(%rax),%eax
ffffffff80022a28:	85 c0                	test   %eax,%eax
ffffffff80022a2a:	74 1b                	je     ffffffff80022a47 <ZydisBuildInstruction+0x1dc>
ffffffff80022a2c:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff80022a30:	48 8b 10             	mov    (%rax),%rdx
ffffffff80022a33:	48 b8 00 00 00 00 00 	movabs $0x200000000000,%rax
ffffffff80022a3a:	20 00 00 
ffffffff80022a3d:	48 09 c2             	or     %rax,%rdx
ffffffff80022a40:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff80022a44:	48 89 10             	mov    %rdx,(%rax)
ffffffff80022a47:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80022a4b:	48 8b 00             	mov    (%rax),%rax
ffffffff80022a4e:	8b 80 74 01 00 00    	mov    0x174(%rax),%eax
ffffffff80022a54:	85 c0                	test   %eax,%eax
ffffffff80022a56:	0f 84 fd 01 00 00    	je     ffffffff80022c59 <ZydisBuildInstruction+0x3ee>
ffffffff80022a5c:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff80022a60:	48 8b 10             	mov    (%rax),%rdx
ffffffff80022a63:	48 b8 00 00 00 00 00 	movabs $0x200000000000,%rax
ffffffff80022a6a:	20 00 00 
ffffffff80022a6d:	48 09 c2             	or     %rax,%rdx
ffffffff80022a70:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff80022a74:	48 89 10             	mov    %rdx,(%rax)
ffffffff80022a77:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80022a7b:	48 8b 00             	mov    (%rax),%rax
ffffffff80022a7e:	8b 80 74 01 00 00    	mov    0x174(%rax),%eax
ffffffff80022a84:	83 f8 04             	cmp    $0x4,%eax
ffffffff80022a87:	74 42                	je     ffffffff80022acb <ZydisBuildInstruction+0x260>
ffffffff80022a89:	83 f8 04             	cmp    $0x4,%eax
ffffffff80022a8c:	77 4a                	ja     ffffffff80022ad8 <ZydisBuildInstruction+0x26d>
ffffffff80022a8e:	83 f8 03             	cmp    $0x3,%eax
ffffffff80022a91:	74 2b                	je     ffffffff80022abe <ZydisBuildInstruction+0x253>
ffffffff80022a93:	83 f8 03             	cmp    $0x3,%eax
ffffffff80022a96:	77 40                	ja     ffffffff80022ad8 <ZydisBuildInstruction+0x26d>
ffffffff80022a98:	83 f8 01             	cmp    $0x1,%eax
ffffffff80022a9b:	74 07                	je     ffffffff80022aa4 <ZydisBuildInstruction+0x239>
ffffffff80022a9d:	83 f8 02             	cmp    $0x2,%eax
ffffffff80022aa0:	74 0f                	je     ffffffff80022ab1 <ZydisBuildInstruction+0x246>
ffffffff80022aa2:	eb 34                	jmp    ffffffff80022ad8 <ZydisBuildInstruction+0x26d>
ffffffff80022aa4:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff80022aa8:	c6 40 14 00          	movb   $0x0,0x14(%rax)
ffffffff80022aac:	e9 a8 01 00 00       	jmp    ffffffff80022c59 <ZydisBuildInstruction+0x3ee>
ffffffff80022ab1:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff80022ab5:	c6 40 14 01          	movb   $0x1,0x14(%rax)
ffffffff80022ab9:	e9 9b 01 00 00       	jmp    ffffffff80022c59 <ZydisBuildInstruction+0x3ee>
ffffffff80022abe:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff80022ac2:	c6 40 14 02          	movb   $0x2,0x14(%rax)
ffffffff80022ac6:	e9 8e 01 00 00       	jmp    ffffffff80022c59 <ZydisBuildInstruction+0x3ee>
ffffffff80022acb:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff80022acf:	c6 40 14 03          	movb   $0x3,0x14(%rax)
ffffffff80022ad3:	e9 81 01 00 00       	jmp    ffffffff80022c59 <ZydisBuildInstruction+0x3ee>
ffffffff80022ad8:	eb fe                	jmp    ffffffff80022ad8 <ZydisBuildInstruction+0x26d>
ffffffff80022ada:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80022ade:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff80022ae2:	0f b6 40 06          	movzbl 0x6(%rax),%eax
ffffffff80022ae6:	83 e0 07             	and    $0x7,%eax
ffffffff80022ae9:	3c 05                	cmp    $0x5,%al
ffffffff80022aeb:	0f 85 68 01 00 00    	jne    ffffffff80022c59 <ZydisBuildInstruction+0x3ee>
ffffffff80022af1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80022af5:	48 8b 00             	mov    (%rax),%rax
ffffffff80022af8:	8b 80 7c 01 00 00    	mov    0x17c(%rax),%eax
ffffffff80022afe:	89 c7                	mov    %eax,%edi
ffffffff80022b00:	e8 8a b3 ff ff       	call   ffffffff8001de8f <ZydisEncodeMvexBroadcastMode>
ffffffff80022b05:	89 c2                	mov    %eax,%edx
ffffffff80022b07:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff80022b0b:	0f b6 40 12          	movzbl 0x12(%rax),%eax
ffffffff80022b0f:	09 d0                	or     %edx,%eax
ffffffff80022b11:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
ffffffff80022b15:	88 42 12             	mov    %al,0x12(%rdx)
ffffffff80022b18:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80022b1c:	48 8b 00             	mov    (%rax),%rax
ffffffff80022b1f:	8b 80 80 01 00 00    	mov    0x180(%rax),%eax
ffffffff80022b25:	89 c7                	mov    %eax,%edi
ffffffff80022b27:	e8 aa b3 ff ff       	call   ffffffff8001ded6 <ZydisEncodeMvexConversionMode>
ffffffff80022b2c:	89 c2                	mov    %eax,%edx
ffffffff80022b2e:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff80022b32:	0f b6 40 12          	movzbl 0x12(%rax),%eax
ffffffff80022b36:	09 d0                	or     %edx,%eax
ffffffff80022b38:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
ffffffff80022b3c:	88 42 12             	mov    %al,0x12(%rdx)
ffffffff80022b3f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80022b43:	48 8b 00             	mov    (%rax),%rax
ffffffff80022b46:	8b 80 84 01 00 00    	mov    0x184(%rax),%eax
ffffffff80022b4c:	85 c0                	test   %eax,%eax
ffffffff80022b4e:	74 2d                	je     ffffffff80022b7d <ZydisBuildInstruction+0x312>
ffffffff80022b50:	83 e8 01             	sub    $0x1,%eax
ffffffff80022b53:	83 f8 03             	cmp    $0x3,%eax
ffffffff80022b56:	77 23                	ja     ffffffff80022b7b <ZydisBuildInstruction+0x310>
ffffffff80022b58:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff80022b5c:	0f b6 50 12          	movzbl 0x12(%rax),%edx
ffffffff80022b60:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80022b64:	48 8b 00             	mov    (%rax),%rax
ffffffff80022b67:	8b 80 84 01 00 00    	mov    0x184(%rax),%eax
ffffffff80022b6d:	83 e8 01             	sub    $0x1,%eax
ffffffff80022b70:	09 d0                	or     %edx,%eax
ffffffff80022b72:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
ffffffff80022b76:	88 42 12             	mov    %al,0x12(%rdx)
ffffffff80022b79:	eb 03                	jmp    ffffffff80022b7e <ZydisBuildInstruction+0x313>
ffffffff80022b7b:	eb fe                	jmp    ffffffff80022b7b <ZydisBuildInstruction+0x310>
ffffffff80022b7d:	90                   	nop
ffffffff80022b7e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80022b82:	48 8b 00             	mov    (%rax),%rax
ffffffff80022b85:	8b 80 88 01 00 00    	mov    0x188(%rax),%eax
ffffffff80022b8b:	85 c0                	test   %eax,%eax
ffffffff80022b8d:	74 2d                	je     ffffffff80022bbc <ZydisBuildInstruction+0x351>
ffffffff80022b8f:	83 e8 01             	sub    $0x1,%eax
ffffffff80022b92:	83 f8 07             	cmp    $0x7,%eax
ffffffff80022b95:	77 23                	ja     ffffffff80022bba <ZydisBuildInstruction+0x34f>
ffffffff80022b97:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff80022b9b:	0f b6 50 12          	movzbl 0x12(%rax),%edx
ffffffff80022b9f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80022ba3:	48 8b 00             	mov    (%rax),%rax
ffffffff80022ba6:	8b 80 88 01 00 00    	mov    0x188(%rax),%eax
ffffffff80022bac:	83 e8 01             	sub    $0x1,%eax
ffffffff80022baf:	09 d0                	or     %edx,%eax
ffffffff80022bb1:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
ffffffff80022bb5:	88 42 12             	mov    %al,0x12(%rdx)
ffffffff80022bb8:	eb 03                	jmp    ffffffff80022bbd <ZydisBuildInstruction+0x352>
ffffffff80022bba:	eb fe                	jmp    ffffffff80022bba <ZydisBuildInstruction+0x34f>
ffffffff80022bbc:	90                   	nop
ffffffff80022bbd:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80022bc1:	48 8b 00             	mov    (%rax),%rax
ffffffff80022bc4:	0f b6 80 8c 01 00 00 	movzbl 0x18c(%rax),%eax
ffffffff80022bcb:	84 c0                	test   %al,%al
ffffffff80022bcd:	75 23                	jne    ffffffff80022bf2 <ZydisBuildInstruction+0x387>
ffffffff80022bcf:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80022bd3:	48 8b 00             	mov    (%rax),%rax
ffffffff80022bd6:	0f b6 80 8d 01 00 00 	movzbl 0x18d(%rax),%eax
ffffffff80022bdd:	84 c0                	test   %al,%al
ffffffff80022bdf:	75 11                	jne    ffffffff80022bf2 <ZydisBuildInstruction+0x387>
ffffffff80022be1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80022be5:	48 8b 00             	mov    (%rax),%rax
ffffffff80022be8:	8b 80 84 01 00 00    	mov    0x184(%rax),%eax
ffffffff80022bee:	85 c0                	test   %eax,%eax
ffffffff80022bf0:	74 08                	je     ffffffff80022bfa <ZydisBuildInstruction+0x38f>
ffffffff80022bf2:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff80022bf6:	c6 40 1d 01          	movb   $0x1,0x1d(%rax)
ffffffff80022bfa:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80022bfe:	48 8b 00             	mov    (%rax),%rax
ffffffff80022c01:	0f b6 80 8c 01 00 00 	movzbl 0x18c(%rax),%eax
ffffffff80022c08:	84 c0                	test   %al,%al
ffffffff80022c0a:	74 12                	je     ffffffff80022c1e <ZydisBuildInstruction+0x3b3>
ffffffff80022c0c:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff80022c10:	0f b6 40 12          	movzbl 0x12(%rax),%eax
ffffffff80022c14:	83 c8 04             	or     $0x4,%eax
ffffffff80022c17:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
ffffffff80022c1b:	88 42 12             	mov    %al,0x12(%rdx)
ffffffff80022c1e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80022c22:	48 8b 00             	mov    (%rax),%rax
ffffffff80022c25:	8b 40 08             	mov    0x8(%rax),%eax
ffffffff80022c28:	3d be 04 00 00       	cmp    $0x4be,%eax
ffffffff80022c2d:	77 09                	ja     ffffffff80022c38 <ZydisBuildInstruction+0x3cd>
ffffffff80022c2f:	3d bd 04 00 00       	cmp    $0x4bd,%eax
ffffffff80022c34:	73 0e                	jae    ffffffff80022c44 <ZydisBuildInstruction+0x3d9>
ffffffff80022c36:	eb 20                	jmp    ffffffff80022c58 <ZydisBuildInstruction+0x3ed>
ffffffff80022c38:	2d bf 04 00 00       	sub    $0x4bf,%eax
ffffffff80022c3d:	83 f8 01             	cmp    $0x1,%eax
ffffffff80022c40:	77 16                	ja     ffffffff80022c58 <ZydisBuildInstruction+0x3ed>
ffffffff80022c42:	eb 0a                	jmp    ffffffff80022c4e <ZydisBuildInstruction+0x3e3>
ffffffff80022c44:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff80022c48:	c6 40 1d 00          	movb   $0x0,0x1d(%rax)
ffffffff80022c4c:	eb 0b                	jmp    ffffffff80022c59 <ZydisBuildInstruction+0x3ee>
ffffffff80022c4e:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff80022c52:	c6 40 1d 01          	movb   $0x1,0x1d(%rax)
ffffffff80022c56:	eb 01                	jmp    ffffffff80022c59 <ZydisBuildInstruction+0x3ee>
ffffffff80022c58:	90                   	nop
ffffffff80022c59:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80022c5d:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff80022c61:	0f b6 40 08          	movzbl 0x8(%rax),%eax
ffffffff80022c65:	83 e0 03             	and    $0x3,%eax
ffffffff80022c68:	0f b6 c0             	movzbl %al,%eax
ffffffff80022c6b:	83 f8 03             	cmp    $0x3,%eax
ffffffff80022c6e:	74 4e                	je     ffffffff80022cbe <ZydisBuildInstruction+0x453>
ffffffff80022c70:	83 f8 03             	cmp    $0x3,%eax
ffffffff80022c73:	7f 62                	jg     ffffffff80022cd7 <ZydisBuildInstruction+0x46c>
ffffffff80022c75:	83 f8 02             	cmp    $0x2,%eax
ffffffff80022c78:	74 2b                	je     ffffffff80022ca5 <ZydisBuildInstruction+0x43a>
ffffffff80022c7a:	83 f8 02             	cmp    $0x2,%eax
ffffffff80022c7d:	7f 58                	jg     ffffffff80022cd7 <ZydisBuildInstruction+0x46c>
ffffffff80022c7f:	85 c0                	test   %eax,%eax
ffffffff80022c81:	74 56                	je     ffffffff80022cd9 <ZydisBuildInstruction+0x46e>
ffffffff80022c83:	83 f8 01             	cmp    $0x1,%eax
ffffffff80022c86:	75 4f                	jne    ffffffff80022cd7 <ZydisBuildInstruction+0x46c>
ffffffff80022c88:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff80022c8c:	48 8b 10             	mov    (%rax),%rdx
ffffffff80022c8f:	48 b8 00 00 00 00 00 	movabs $0x80000000000,%rax
ffffffff80022c96:	08 00 00 
ffffffff80022c99:	48 09 c2             	or     %rax,%rdx
ffffffff80022c9c:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff80022ca0:	48 89 10             	mov    %rdx,(%rax)
ffffffff80022ca3:	eb 35                	jmp    ffffffff80022cda <ZydisBuildInstruction+0x46f>
ffffffff80022ca5:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff80022ca9:	48 8b 00             	mov    (%rax),%rax
ffffffff80022cac:	48 0d 00 00 00 40    	or     $0x40000000,%rax
ffffffff80022cb2:	48 89 c2             	mov    %rax,%rdx
ffffffff80022cb5:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff80022cb9:	48 89 10             	mov    %rdx,(%rax)
ffffffff80022cbc:	eb 1c                	jmp    ffffffff80022cda <ZydisBuildInstruction+0x46f>
ffffffff80022cbe:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff80022cc2:	48 8b 00             	mov    (%rax),%rax
ffffffff80022cc5:	48 0d 00 00 00 10    	or     $0x10000000,%rax
ffffffff80022ccb:	48 89 c2             	mov    %rax,%rdx
ffffffff80022cce:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff80022cd2:	48 89 10             	mov    %rdx,(%rax)
ffffffff80022cd5:	eb 03                	jmp    ffffffff80022cda <ZydisBuildInstruction+0x46f>
ffffffff80022cd7:	eb fe                	jmp    ffffffff80022cd7 <ZydisBuildInstruction+0x46c>
ffffffff80022cd9:	90                   	nop
ffffffff80022cda:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80022cde:	48 8b 00             	mov    (%rax),%rax
ffffffff80022ce1:	8b 00                	mov    (%rax),%eax
ffffffff80022ce3:	89 c7                	mov    %eax,%edi
ffffffff80022ce5:	e8 73 a7 ff ff       	call   ffffffff8001d45d <ZydisGetMachineModeWidth>
ffffffff80022cea:	88 45 ef             	mov    %al,-0x11(%rbp)
ffffffff80022ced:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80022cf1:	0f b6 40 29          	movzbl 0x29(%rax),%eax
ffffffff80022cf5:	38 45 ef             	cmp    %al,-0x11(%rbp)
ffffffff80022cf8:	74 1b                	je     ffffffff80022d15 <ZydisBuildInstruction+0x4aa>
ffffffff80022cfa:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff80022cfe:	48 8b 10             	mov    (%rax),%rdx
ffffffff80022d01:	48 b8 00 00 00 00 00 	movabs $0x100000000000,%rax
ffffffff80022d08:	10 00 00 
ffffffff80022d0b:	48 09 c2             	or     %rax,%rdx
ffffffff80022d0e:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff80022d12:	48 89 10             	mov    %rdx,(%rax)
ffffffff80022d15:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80022d19:	48 8b 00             	mov    (%rax),%rax
ffffffff80022d1c:	8b 00                	mov    (%rax),%eax
ffffffff80022d1e:	85 c0                	test   %eax,%eax
ffffffff80022d20:	75 75                	jne    ffffffff80022d97 <ZydisBuildInstruction+0x52c>
ffffffff80022d22:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80022d26:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff80022d2a:	0f b6 40 04          	movzbl 0x4(%rax),%eax
ffffffff80022d2e:	83 e0 0e             	and    $0xe,%eax
ffffffff80022d31:	3c 0a                	cmp    $0xa,%al
ffffffff80022d33:	74 62                	je     ffffffff80022d97 <ZydisBuildInstruction+0x52c>
ffffffff80022d35:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80022d39:	0f b6 40 28          	movzbl 0x28(%rax),%eax
ffffffff80022d3d:	0f b6 c0             	movzbl %al,%eax
ffffffff80022d40:	83 f8 40             	cmp    $0x40,%eax
ffffffff80022d43:	74 2e                	je     ffffffff80022d73 <ZydisBuildInstruction+0x508>
ffffffff80022d45:	83 f8 40             	cmp    $0x40,%eax
ffffffff80022d48:	7f 48                	jg     ffffffff80022d92 <ZydisBuildInstruction+0x527>
ffffffff80022d4a:	83 f8 10             	cmp    $0x10,%eax
ffffffff80022d4d:	74 07                	je     ffffffff80022d56 <ZydisBuildInstruction+0x4eb>
ffffffff80022d4f:	83 f8 20             	cmp    $0x20,%eax
ffffffff80022d52:	74 40                	je     ffffffff80022d94 <ZydisBuildInstruction+0x529>
ffffffff80022d54:	eb 3c                	jmp    ffffffff80022d92 <ZydisBuildInstruction+0x527>
ffffffff80022d56:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff80022d5a:	48 8b 10             	mov    (%rax),%rdx
ffffffff80022d5d:	48 b8 00 00 00 00 00 	movabs $0x80000000000,%rax
ffffffff80022d64:	08 00 00 
ffffffff80022d67:	48 09 c2             	or     %rax,%rdx
ffffffff80022d6a:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff80022d6e:	48 89 10             	mov    %rdx,(%rax)
ffffffff80022d71:	eb 22                	jmp    ffffffff80022d95 <ZydisBuildInstruction+0x52a>
ffffffff80022d73:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80022d77:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff80022d7b:	0f b6 40 04          	movzbl 0x4(%rax),%eax
ffffffff80022d7f:	83 e0 0e             	and    $0xe,%eax
ffffffff80022d82:	3c 08                	cmp    $0x8,%al
ffffffff80022d84:	0f 95 c0             	setne  %al
ffffffff80022d87:	89 c2                	mov    %eax,%edx
ffffffff80022d89:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff80022d8d:	88 50 1b             	mov    %dl,0x1b(%rax)
ffffffff80022d90:	eb 03                	jmp    ffffffff80022d95 <ZydisBuildInstruction+0x52a>
ffffffff80022d92:	eb fe                	jmp    ffffffff80022d92 <ZydisBuildInstruction+0x527>
ffffffff80022d94:	90                   	nop
ffffffff80022d95:	eb 28                	jmp    ffffffff80022dbf <ZydisBuildInstruction+0x554>
ffffffff80022d97:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80022d9b:	0f b6 40 28          	movzbl 0x28(%rax),%eax
ffffffff80022d9f:	38 45 ef             	cmp    %al,-0x11(%rbp)
ffffffff80022da2:	74 1b                	je     ffffffff80022dbf <ZydisBuildInstruction+0x554>
ffffffff80022da4:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff80022da8:	48 8b 10             	mov    (%rax),%rdx
ffffffff80022dab:	48 b8 00 00 00 00 00 	movabs $0x80000000000,%rax
ffffffff80022db2:	08 00 00 
ffffffff80022db5:	48 09 c2             	or     %rax,%rdx
ffffffff80022db8:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff80022dbc:	48 89 10             	mov    %rdx,(%rax)
ffffffff80022dbf:	c6 45 ff 00          	movb   $0x0,-0x1(%rbp)
ffffffff80022dc3:	e9 fc 01 00 00       	jmp    ffffffff80022fc4 <ZydisBuildInstruction+0x759>
ffffffff80022dc8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80022dcc:	48 8b 10             	mov    (%rax),%rdx
ffffffff80022dcf:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
ffffffff80022dd3:	48 98                	cltq   
ffffffff80022dd5:	48 c1 e0 06          	shl    $0x6,%rax
ffffffff80022dd9:	48 83 c0 30          	add    $0x30,%rax
ffffffff80022ddd:	48 01 d0             	add    %rdx,%rax
ffffffff80022de0:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff80022de4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80022de8:	48 8b 48 18          	mov    0x18(%rax),%rcx
ffffffff80022dec:	0f b6 55 ff          	movzbl -0x1(%rbp),%edx
ffffffff80022df0:	48 89 d0             	mov    %rdx,%rax
ffffffff80022df3:	48 01 c0             	add    %rax,%rax
ffffffff80022df6:	48 01 d0             	add    %rdx,%rax
ffffffff80022df9:	48 c1 e0 02          	shl    $0x2,%rax
ffffffff80022dfd:	48 01 d0             	add    %rdx,%rax
ffffffff80022e00:	48 01 c8             	add    %rcx,%rax
ffffffff80022e03:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
ffffffff80022e07:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80022e0b:	8b 00                	mov    (%rax),%eax
ffffffff80022e0d:	83 f8 04             	cmp    $0x4,%eax
ffffffff80022e10:	0f 84 1e 01 00 00    	je     ffffffff80022f34 <ZydisBuildInstruction+0x6c9>
ffffffff80022e16:	83 f8 04             	cmp    $0x4,%eax
ffffffff80022e19:	0f 87 9b 01 00 00    	ja     ffffffff80022fba <ZydisBuildInstruction+0x74f>
ffffffff80022e1f:	83 f8 03             	cmp    $0x3,%eax
ffffffff80022e22:	0f 84 c5 00 00 00    	je     ffffffff80022eed <ZydisBuildInstruction+0x682>
ffffffff80022e28:	83 f8 03             	cmp    $0x3,%eax
ffffffff80022e2b:	0f 87 89 01 00 00    	ja     ffffffff80022fba <ZydisBuildInstruction+0x74f>
ffffffff80022e31:	83 f8 01             	cmp    $0x1,%eax
ffffffff80022e34:	74 0a                	je     ffffffff80022e40 <ZydisBuildInstruction+0x5d5>
ffffffff80022e36:	83 f8 02             	cmp    $0x2,%eax
ffffffff80022e39:	74 21                	je     ffffffff80022e5c <ZydisBuildInstruction+0x5f1>
ffffffff80022e3b:	e9 7a 01 00 00       	jmp    ffffffff80022fba <ZydisBuildInstruction+0x74f>
ffffffff80022e40:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
ffffffff80022e44:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
ffffffff80022e48:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80022e4c:	48 89 ce             	mov    %rcx,%rsi
ffffffff80022e4f:	48 89 c7             	mov    %rax,%rdi
ffffffff80022e52:	e8 76 f5 ff ff       	call   ffffffff800223cd <ZydisBuildRegisterOperand>
ffffffff80022e57:	e9 64 01 00 00       	jmp    ffffffff80022fc0 <ZydisBuildInstruction+0x755>
ffffffff80022e5c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80022e60:	0f b6 00             	movzbl (%rax),%eax
ffffffff80022e63:	83 e0 3f             	and    $0x3f,%eax
ffffffff80022e66:	3c 1f                	cmp    $0x1f,%al
ffffffff80022e68:	74 5c                	je     ffffffff80022ec6 <ZydisBuildInstruction+0x65b>
ffffffff80022e6a:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
ffffffff80022e6e:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
ffffffff80022e72:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80022e76:	48 89 ce             	mov    %rcx,%rsi
ffffffff80022e79:	48 89 c7             	mov    %rax,%rdi
ffffffff80022e7c:	e8 c4 f6 ff ff       	call   ffffffff80022545 <ZydisBuildMemoryOperand>
ffffffff80022e81:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80022e85:	0f b6 40 2c          	movzbl 0x2c(%rax),%eax
ffffffff80022e89:	84 c0                	test   %al,%al
ffffffff80022e8b:	0f 84 2b 01 00 00    	je     ffffffff80022fbc <ZydisBuildInstruction+0x751>
ffffffff80022e91:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff80022e95:	0f b6 40 1e          	movzbl 0x1e(%rax),%eax
ffffffff80022e99:	3c 08                	cmp    $0x8,%al
ffffffff80022e9b:	0f 85 1b 01 00 00    	jne    ffffffff80022fbc <ZydisBuildInstruction+0x751>
ffffffff80022ea1:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff80022ea5:	48 8b 50 20          	mov    0x20(%rax),%rdx
ffffffff80022ea9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80022ead:	0f b6 40 2c          	movzbl 0x2c(%rax),%eax
ffffffff80022eb1:	0f b6 c0             	movzbl %al,%eax
ffffffff80022eb4:	89 c1                	mov    %eax,%ecx
ffffffff80022eb6:	48 d3 ea             	shr    %cl,%rdx
ffffffff80022eb9:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff80022ebd:	48 89 50 20          	mov    %rdx,0x20(%rax)
ffffffff80022ec1:	e9 f6 00 00 00       	jmp    ffffffff80022fbc <ZydisBuildInstruction+0x751>
ffffffff80022ec6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80022eca:	0f b6 40 2a          	movzbl 0x2a(%rax),%eax
ffffffff80022ece:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
ffffffff80022ed2:	88 42 1e             	mov    %al,0x1e(%rdx)
ffffffff80022ed5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80022ed9:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff80022edd:	48 89 c2             	mov    %rax,%rdx
ffffffff80022ee0:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff80022ee4:	48 89 50 20          	mov    %rdx,0x20(%rax)
ffffffff80022ee8:	e9 cf 00 00 00       	jmp    ffffffff80022fbc <ZydisBuildInstruction+0x751>
ffffffff80022eed:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80022ef1:	0f b6 40 2a          	movzbl 0x2a(%rax),%eax
ffffffff80022ef5:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
ffffffff80022ef9:	88 42 1e             	mov    %al,0x1e(%rdx)
ffffffff80022efc:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80022f00:	8b 40 34             	mov    0x34(%rax),%eax
ffffffff80022f03:	89 c2                	mov    %eax,%edx
ffffffff80022f05:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff80022f09:	48 89 50 20          	mov    %rdx,0x20(%rax)
ffffffff80022f0d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80022f11:	0f b6 40 2b          	movzbl 0x2b(%rax),%eax
ffffffff80022f15:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
ffffffff80022f19:	88 42 1f             	mov    %al,0x1f(%rdx)
ffffffff80022f1c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80022f20:	0f b7 40 30          	movzwl 0x30(%rax),%eax
ffffffff80022f24:	0f b7 c0             	movzwl %ax,%eax
ffffffff80022f27:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
ffffffff80022f2b:	48 89 42 28          	mov    %rax,0x28(%rdx)
ffffffff80022f2f:	e9 8c 00 00 00       	jmp    ffffffff80022fc0 <ZydisBuildInstruction+0x755>
ffffffff80022f34:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80022f38:	0f b6 00             	movzbl (%rax),%eax
ffffffff80022f3b:	83 e0 3f             	and    $0x3f,%eax
ffffffff80022f3e:	3c 03                	cmp    $0x3,%al
ffffffff80022f40:	74 7d                	je     ffffffff80022fbf <ZydisBuildInstruction+0x754>
ffffffff80022f42:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80022f46:	0f b6 40 09          	movzbl 0x9(%rax),%eax
ffffffff80022f4a:	83 e0 3f             	and    $0x3f,%eax
ffffffff80022f4d:	3c 05                	cmp    $0x5,%al
ffffffff80022f4f:	74 4c                	je     ffffffff80022f9d <ZydisBuildInstruction+0x732>
ffffffff80022f51:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff80022f55:	0f b6 40 1f          	movzbl 0x1f(%rax),%eax
ffffffff80022f59:	84 c0                	test   %al,%al
ffffffff80022f5b:	74 1f                	je     ffffffff80022f7c <ZydisBuildInstruction+0x711>
ffffffff80022f5d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80022f61:	0f b6 40 2a          	movzbl 0x2a(%rax),%eax
ffffffff80022f65:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
ffffffff80022f69:	88 42 1e             	mov    %al,0x1e(%rdx)
ffffffff80022f6c:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff80022f70:	48 8b 50 28          	mov    0x28(%rax),%rdx
ffffffff80022f74:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff80022f78:	48 89 50 20          	mov    %rdx,0x20(%rax)
ffffffff80022f7c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80022f80:	0f b6 40 2b          	movzbl 0x2b(%rax),%eax
ffffffff80022f84:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
ffffffff80022f88:	88 42 1f             	mov    %al,0x1f(%rdx)
ffffffff80022f8b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80022f8f:	48 8b 50 38          	mov    0x38(%rax),%rdx
ffffffff80022f93:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff80022f97:	48 89 50 28          	mov    %rdx,0x28(%rax)
ffffffff80022f9b:	eb 23                	jmp    ffffffff80022fc0 <ZydisBuildInstruction+0x755>
ffffffff80022f9d:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff80022fa1:	48 8b 50 28          	mov    0x28(%rax),%rdx
ffffffff80022fa5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80022fa9:	48 8b 40 38          	mov    0x38(%rax),%rax
ffffffff80022fad:	48 09 c2             	or     %rax,%rdx
ffffffff80022fb0:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff80022fb4:	48 89 50 28          	mov    %rdx,0x28(%rax)
ffffffff80022fb8:	eb 06                	jmp    ffffffff80022fc0 <ZydisBuildInstruction+0x755>
ffffffff80022fba:	eb fe                	jmp    ffffffff80022fba <ZydisBuildInstruction+0x74f>
ffffffff80022fbc:	90                   	nop
ffffffff80022fbd:	eb 01                	jmp    ffffffff80022fc0 <ZydisBuildInstruction+0x755>
ffffffff80022fbf:	90                   	nop
ffffffff80022fc0:	80 45 ff 01          	addb   $0x1,-0x1(%rbp)
ffffffff80022fc4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80022fc8:	48 8b 00             	mov    (%rax),%rax
ffffffff80022fcb:	0f b6 40 28          	movzbl 0x28(%rax),%eax
ffffffff80022fcf:	38 45 ff             	cmp    %al,-0x1(%rbp)
ffffffff80022fd2:	0f 82 f0 fd ff ff    	jb     ffffffff80022dc8 <ZydisBuildInstruction+0x55d>
ffffffff80022fd8:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff80022fdd:	c9                   	leave  
ffffffff80022fde:	c3                   	ret    

ffffffff80022fdf <ZydisEncoderCheckRequestSanity>:
ffffffff80022fdf:	f3 0f 1e fa          	endbr64 
ffffffff80022fe3:	55                   	push   %rbp
ffffffff80022fe4:	48 89 e5             	mov    %rsp,%rbp
ffffffff80022fe7:	48 83 ec 18          	sub    $0x18,%rsp
ffffffff80022feb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff80022fef:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80022ff3:	8b 00                	mov    (%rax),%eax
ffffffff80022ff5:	83 f8 05             	cmp    $0x5,%eax
ffffffff80022ff8:	0f 87 ed 00 00 00    	ja     ffffffff800230eb <ZydisEncoderCheckRequestSanity+0x10c>
ffffffff80022ffe:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80023002:	8b 40 04             	mov    0x4(%rax),%eax
ffffffff80023005:	83 f8 3f             	cmp    $0x3f,%eax
ffffffff80023008:	0f 87 dd 00 00 00    	ja     ffffffff800230eb <ZydisEncoderCheckRequestSanity+0x10c>
ffffffff8002300e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80023012:	8b 40 08             	mov    0x8(%rax),%eax
ffffffff80023015:	3d da 06 00 00       	cmp    $0x6da,%eax
ffffffff8002301a:	0f 87 cb 00 00 00    	ja     ffffffff800230eb <ZydisEncoderCheckRequestSanity+0x10c>
ffffffff80023020:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80023024:	8b 40 18             	mov    0x18(%rax),%eax
ffffffff80023027:	83 f8 03             	cmp    $0x3,%eax
ffffffff8002302a:	0f 87 bb 00 00 00    	ja     ffffffff800230eb <ZydisEncoderCheckRequestSanity+0x10c>
ffffffff80023030:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80023034:	8b 40 1c             	mov    0x1c(%rax),%eax
ffffffff80023037:	83 f8 04             	cmp    $0x4,%eax
ffffffff8002303a:	0f 87 ab 00 00 00    	ja     ffffffff800230eb <ZydisEncoderCheckRequestSanity+0x10c>
ffffffff80023040:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80023044:	8b 40 20             	mov    0x20(%rax),%eax
ffffffff80023047:	83 f8 03             	cmp    $0x3,%eax
ffffffff8002304a:	0f 87 9b 00 00 00    	ja     ffffffff800230eb <ZydisEncoderCheckRequestSanity+0x10c>
ffffffff80023050:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80023054:	8b 40 24             	mov    0x24(%rax),%eax
ffffffff80023057:	83 f8 04             	cmp    $0x4,%eax
ffffffff8002305a:	0f 87 8b 00 00 00    	ja     ffffffff800230eb <ZydisEncoderCheckRequestSanity+0x10c>
ffffffff80023060:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80023064:	8b 80 70 01 00 00    	mov    0x170(%rax),%eax
ffffffff8002306a:	83 f8 0c             	cmp    $0xc,%eax
ffffffff8002306d:	77 7c                	ja     ffffffff800230eb <ZydisEncoderCheckRequestSanity+0x10c>
ffffffff8002306f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80023073:	8b 80 74 01 00 00    	mov    0x174(%rax),%eax
ffffffff80023079:	83 f8 04             	cmp    $0x4,%eax
ffffffff8002307c:	77 6d                	ja     ffffffff800230eb <ZydisEncoderCheckRequestSanity+0x10c>
ffffffff8002307e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80023082:	8b 80 7c 01 00 00    	mov    0x17c(%rax),%eax
ffffffff80023088:	83 f8 0c             	cmp    $0xc,%eax
ffffffff8002308b:	77 5e                	ja     ffffffff800230eb <ZydisEncoderCheckRequestSanity+0x10c>
ffffffff8002308d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80023091:	8b 80 80 01 00 00    	mov    0x180(%rax),%eax
ffffffff80023097:	83 f8 05             	cmp    $0x5,%eax
ffffffff8002309a:	77 4f                	ja     ffffffff800230eb <ZydisEncoderCheckRequestSanity+0x10c>
ffffffff8002309c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800230a0:	8b 80 84 01 00 00    	mov    0x184(%rax),%eax
ffffffff800230a6:	83 f8 04             	cmp    $0x4,%eax
ffffffff800230a9:	77 40                	ja     ffffffff800230eb <ZydisEncoderCheckRequestSanity+0x10c>
ffffffff800230ab:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800230af:	8b 80 88 01 00 00    	mov    0x188(%rax),%eax
ffffffff800230b5:	83 f8 08             	cmp    $0x8,%eax
ffffffff800230b8:	77 31                	ja     ffffffff800230eb <ZydisEncoderCheckRequestSanity+0x10c>
ffffffff800230ba:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800230be:	0f b6 40 28          	movzbl 0x28(%rax),%eax
ffffffff800230c2:	3c 05                	cmp    $0x5,%al
ffffffff800230c4:	77 25                	ja     ffffffff800230eb <ZydisEncoderCheckRequestSanity+0x10c>
ffffffff800230c6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800230ca:	8b 40 08             	mov    0x8(%rax),%eax
ffffffff800230cd:	85 c0                	test   %eax,%eax
ffffffff800230cf:	74 1a                	je     ffffffff800230eb <ZydisEncoderCheckRequestSanity+0x10c>
ffffffff800230d1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800230d5:	48 8b 50 10          	mov    0x10(%rax),%rdx
ffffffff800230d9:	48 b8 ff ff ff 07 00 	movabs $0xfffff80007ffffff,%rax
ffffffff800230e0:	f8 ff ff 
ffffffff800230e3:	48 21 d0             	and    %rdx,%rax
ffffffff800230e6:	48 85 c0             	test   %rax,%rax
ffffffff800230e9:	74 0a                	je     ffffffff800230f5 <ZydisEncoderCheckRequestSanity+0x116>
ffffffff800230eb:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff800230f0:	e9 7a 03 00 00       	jmp    ffffffff8002346f <ZydisEncoderCheckRequestSanity+0x490>
ffffffff800230f5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800230f9:	48 8b 50 10          	mov    0x10(%rax),%rdx
ffffffff800230fd:	48 b8 00 00 00 00 e0 	movabs $0x7e000000000,%rax
ffffffff80023104:	07 00 00 
ffffffff80023107:	48 21 d0             	and    %rdx,%rax
ffffffff8002310a:	48 85 c0             	test   %rax,%rax
ffffffff8002310d:	0f 84 f6 00 00 00    	je     ffffffff80023209 <ZydisEncoderCheckRequestSanity+0x22a>
ffffffff80023113:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80023117:	8b 00                	mov    (%rax),%eax
ffffffff80023119:	85 c0                	test   %eax,%eax
ffffffff8002311b:	75 24                	jne    ffffffff80023141 <ZydisEncoderCheckRequestSanity+0x162>
ffffffff8002311d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80023121:	48 8b 50 10          	mov    0x10(%rax),%rdx
ffffffff80023125:	48 b8 00 00 00 00 e0 	movabs $0x1e000000000,%rax
ffffffff8002312c:	01 00 00 
ffffffff8002312f:	48 21 d0             	and    %rdx,%rax
ffffffff80023132:	48 85 c0             	test   %rax,%rax
ffffffff80023135:	74 0a                	je     ffffffff80023141 <ZydisEncoderCheckRequestSanity+0x162>
ffffffff80023137:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff8002313c:	e9 2e 03 00 00       	jmp    ffffffff8002346f <ZydisEncoderCheckRequestSanity+0x490>
ffffffff80023141:	c6 45 ff 00          	movb   $0x0,-0x1(%rbp)
ffffffff80023145:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80023149:	48 8b 50 10          	mov    0x10(%rax),%rdx
ffffffff8002314d:	48 b8 00 00 00 00 20 	movabs $0x2000000000,%rax
ffffffff80023154:	00 00 00 
ffffffff80023157:	48 21 d0             	and    %rdx,%rax
ffffffff8002315a:	48 85 c0             	test   %rax,%rax
ffffffff8002315d:	74 04                	je     ffffffff80023163 <ZydisEncoderCheckRequestSanity+0x184>
ffffffff8002315f:	80 45 ff 01          	addb   $0x1,-0x1(%rbp)
ffffffff80023163:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80023167:	48 8b 50 10          	mov    0x10(%rax),%rdx
ffffffff8002316b:	48 b8 00 00 00 00 40 	movabs $0x4000000000,%rax
ffffffff80023172:	00 00 00 
ffffffff80023175:	48 21 d0             	and    %rdx,%rax
ffffffff80023178:	48 85 c0             	test   %rax,%rax
ffffffff8002317b:	74 04                	je     ffffffff80023181 <ZydisEncoderCheckRequestSanity+0x1a2>
ffffffff8002317d:	80 45 ff 01          	addb   $0x1,-0x1(%rbp)
ffffffff80023181:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80023185:	48 8b 50 10          	mov    0x10(%rax),%rdx
ffffffff80023189:	48 b8 00 00 00 00 80 	movabs $0x8000000000,%rax
ffffffff80023190:	00 00 00 
ffffffff80023193:	48 21 d0             	and    %rdx,%rax
ffffffff80023196:	48 85 c0             	test   %rax,%rax
ffffffff80023199:	74 04                	je     ffffffff8002319f <ZydisEncoderCheckRequestSanity+0x1c0>
ffffffff8002319b:	80 45 ff 01          	addb   $0x1,-0x1(%rbp)
ffffffff8002319f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800231a3:	48 8b 50 10          	mov    0x10(%rax),%rdx
ffffffff800231a7:	48 b8 00 00 00 00 00 	movabs $0x10000000000,%rax
ffffffff800231ae:	01 00 00 
ffffffff800231b1:	48 21 d0             	and    %rdx,%rax
ffffffff800231b4:	48 85 c0             	test   %rax,%rax
ffffffff800231b7:	74 04                	je     ffffffff800231bd <ZydisEncoderCheckRequestSanity+0x1de>
ffffffff800231b9:	80 45 ff 01          	addb   $0x1,-0x1(%rbp)
ffffffff800231bd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800231c1:	48 8b 50 10          	mov    0x10(%rax),%rdx
ffffffff800231c5:	48 b8 00 00 00 00 00 	movabs $0x20000000000,%rax
ffffffff800231cc:	02 00 00 
ffffffff800231cf:	48 21 d0             	and    %rdx,%rax
ffffffff800231d2:	48 85 c0             	test   %rax,%rax
ffffffff800231d5:	74 04                	je     ffffffff800231db <ZydisEncoderCheckRequestSanity+0x1fc>
ffffffff800231d7:	80 45 ff 01          	addb   $0x1,-0x1(%rbp)
ffffffff800231db:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800231df:	48 8b 50 10          	mov    0x10(%rax),%rdx
ffffffff800231e3:	48 b8 00 00 00 00 00 	movabs $0x40000000000,%rax
ffffffff800231ea:	04 00 00 
ffffffff800231ed:	48 21 d0             	and    %rdx,%rax
ffffffff800231f0:	48 85 c0             	test   %rax,%rax
ffffffff800231f3:	74 04                	je     ffffffff800231f9 <ZydisEncoderCheckRequestSanity+0x21a>
ffffffff800231f5:	80 45 ff 01          	addb   $0x1,-0x1(%rbp)
ffffffff800231f9:	80 7d ff 01          	cmpb   $0x1,-0x1(%rbp)
ffffffff800231fd:	74 0a                	je     ffffffff80023209 <ZydisEncoderCheckRequestSanity+0x22a>
ffffffff800231ff:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff80023204:	e9 66 02 00 00       	jmp    ffffffff8002346f <ZydisEncoderCheckRequestSanity+0x490>
ffffffff80023209:	c6 45 fe 00          	movb   $0x0,-0x2(%rbp)
ffffffff8002320d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80023211:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff80023215:	25 00 00 00 10       	and    $0x10000000,%eax
ffffffff8002321a:	48 85 c0             	test   %rax,%rax
ffffffff8002321d:	74 04                	je     ffffffff80023223 <ZydisEncoderCheckRequestSanity+0x244>
ffffffff8002321f:	80 45 fe 01          	addb   $0x1,-0x2(%rbp)
ffffffff80023223:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80023227:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff8002322b:	25 00 00 00 20       	and    $0x20000000,%eax
ffffffff80023230:	48 85 c0             	test   %rax,%rax
ffffffff80023233:	74 04                	je     ffffffff80023239 <ZydisEncoderCheckRequestSanity+0x25a>
ffffffff80023235:	80 45 fe 01          	addb   $0x1,-0x2(%rbp)
ffffffff80023239:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002323d:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff80023241:	25 00 00 00 40       	and    $0x40000000,%eax
ffffffff80023246:	48 85 c0             	test   %rax,%rax
ffffffff80023249:	74 04                	je     ffffffff8002324f <ZydisEncoderCheckRequestSanity+0x270>
ffffffff8002324b:	80 45 fe 01          	addb   $0x1,-0x2(%rbp)
ffffffff8002324f:	80 7d fe 01          	cmpb   $0x1,-0x2(%rbp)
ffffffff80023253:	76 0a                	jbe    ffffffff8002325f <ZydisEncoderCheckRequestSanity+0x280>
ffffffff80023255:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff8002325a:	e9 10 02 00 00       	jmp    ffffffff8002346f <ZydisEncoderCheckRequestSanity+0x490>
ffffffff8002325f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80023263:	48 8b 50 10          	mov    0x10(%rax),%rdx
ffffffff80023267:	48 b8 00 00 00 00 01 	movabs $0x100000000,%rax
ffffffff8002326e:	00 00 00 
ffffffff80023271:	48 21 d0             	and    %rdx,%rax
ffffffff80023274:	48 85 c0             	test   %rax,%rax
ffffffff80023277:	74 24                	je     ffffffff8002329d <ZydisEncoderCheckRequestSanity+0x2be>
ffffffff80023279:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002327d:	48 8b 50 10          	mov    0x10(%rax),%rdx
ffffffff80023281:	48 b8 00 00 00 00 02 	movabs $0x200000000,%rax
ffffffff80023288:	00 00 00 
ffffffff8002328b:	48 21 d0             	and    %rdx,%rax
ffffffff8002328e:	48 85 c0             	test   %rax,%rax
ffffffff80023291:	74 0a                	je     ffffffff8002329d <ZydisEncoderCheckRequestSanity+0x2be>
ffffffff80023293:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff80023298:	e9 d2 01 00 00       	jmp    ffffffff8002346f <ZydisEncoderCheckRequestSanity+0x490>
ffffffff8002329d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800232a1:	48 8b 50 10          	mov    0x10(%rax),%rdx
ffffffff800232a5:	48 b8 00 00 00 00 04 	movabs $0x400000000,%rax
ffffffff800232ac:	00 00 00 
ffffffff800232af:	48 21 d0             	and    %rdx,%rax
ffffffff800232b2:	48 85 c0             	test   %rax,%rax
ffffffff800232b5:	74 24                	je     ffffffff800232db <ZydisEncoderCheckRequestSanity+0x2fc>
ffffffff800232b7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800232bb:	48 8b 50 10          	mov    0x10(%rax),%rdx
ffffffff800232bf:	48 b8 00 00 00 00 08 	movabs $0x800000000,%rax
ffffffff800232c6:	00 00 00 
ffffffff800232c9:	48 21 d0             	and    %rdx,%rax
ffffffff800232cc:	48 85 c0             	test   %rax,%rax
ffffffff800232cf:	74 0a                	je     ffffffff800232db <ZydisEncoderCheckRequestSanity+0x2fc>
ffffffff800232d1:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff800232d6:	e9 94 01 00 00       	jmp    ffffffff8002346f <ZydisEncoderCheckRequestSanity+0x490>
ffffffff800232db:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800232df:	48 8b 50 10          	mov    0x10(%rax),%rdx
ffffffff800232e3:	48 b8 00 00 00 00 10 	movabs $0x1000000000,%rax
ffffffff800232ea:	00 00 00 
ffffffff800232ed:	48 21 d0             	and    %rdx,%rax
ffffffff800232f0:	48 85 c0             	test   %rax,%rax
ffffffff800232f3:	74 24                	je     ffffffff80023319 <ZydisEncoderCheckRequestSanity+0x33a>
ffffffff800232f5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800232f9:	48 8b 50 10          	mov    0x10(%rax),%rdx
ffffffff800232fd:	48 b8 00 00 00 00 e0 	movabs $0x7e000000000,%rax
ffffffff80023304:	07 00 00 
ffffffff80023307:	48 21 d0             	and    %rdx,%rax
ffffffff8002330a:	48 85 c0             	test   %rax,%rax
ffffffff8002330d:	74 0a                	je     ffffffff80023319 <ZydisEncoderCheckRequestSanity+0x33a>
ffffffff8002330f:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff80023314:	e9 56 01 00 00       	jmp    ffffffff8002346f <ZydisEncoderCheckRequestSanity+0x490>
ffffffff80023319:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002331d:	8b 50 1c             	mov    0x1c(%rax),%edx
ffffffff80023320:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80023324:	8b 40 18             	mov    0x18(%rax),%eax
ffffffff80023327:	89 c1                	mov    %eax,%ecx
ffffffff80023329:	89 d0                	mov    %edx,%eax
ffffffff8002332b:	48 c1 e0 02          	shl    $0x2,%rax
ffffffff8002332f:	48 8d 14 08          	lea    (%rax,%rcx,1),%rdx
ffffffff80023333:	48 8d 05 46 ad 01 00 	lea    0x1ad46(%rip),%rax        # ffffffff8003e080 <branch_lookup.0>
ffffffff8002333a:	48 01 d0             	add    %rdx,%rax
ffffffff8002333d:	0f b6 00             	movzbl (%rax),%eax
ffffffff80023340:	84 c0                	test   %al,%al
ffffffff80023342:	75 0a                	jne    ffffffff8002334e <ZydisEncoderCheckRequestSanity+0x36f>
ffffffff80023344:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff80023349:	e9 21 01 00 00       	jmp    ffffffff8002346f <ZydisEncoderCheckRequestSanity+0x490>
ffffffff8002334e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80023352:	8b 00                	mov    (%rax),%eax
ffffffff80023354:	85 c0                	test   %eax,%eax
ffffffff80023356:	75 16                	jne    ffffffff8002336e <ZydisEncoderCheckRequestSanity+0x38f>
ffffffff80023358:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002335c:	8b 40 20             	mov    0x20(%rax),%eax
ffffffff8002335f:	83 f8 01             	cmp    $0x1,%eax
ffffffff80023362:	75 38                	jne    ffffffff8002339c <ZydisEncoderCheckRequestSanity+0x3bd>
ffffffff80023364:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff80023369:	e9 01 01 00 00       	jmp    ffffffff8002346f <ZydisEncoderCheckRequestSanity+0x490>
ffffffff8002336e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80023372:	8b 40 1c             	mov    0x1c(%rax),%eax
ffffffff80023375:	83 f8 04             	cmp    $0x4,%eax
ffffffff80023378:	74 18                	je     ffffffff80023392 <ZydisEncoderCheckRequestSanity+0x3b3>
ffffffff8002337a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002337e:	8b 40 20             	mov    0x20(%rax),%eax
ffffffff80023381:	83 f8 03             	cmp    $0x3,%eax
ffffffff80023384:	74 0c                	je     ffffffff80023392 <ZydisEncoderCheckRequestSanity+0x3b3>
ffffffff80023386:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002338a:	8b 40 24             	mov    0x24(%rax),%eax
ffffffff8002338d:	83 f8 04             	cmp    $0x4,%eax
ffffffff80023390:	75 0a                	jne    ffffffff8002339c <ZydisEncoderCheckRequestSanity+0x3bd>
ffffffff80023392:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff80023397:	e9 d3 00 00 00       	jmp    ffffffff8002346f <ZydisEncoderCheckRequestSanity+0x490>
ffffffff8002339c:	c6 45 fd 00          	movb   $0x0,-0x3(%rbp)
ffffffff800233a0:	e9 b4 00 00 00       	jmp    ffffffff80023459 <ZydisEncoderCheckRequestSanity+0x47a>
ffffffff800233a5:	0f b6 45 fd          	movzbl -0x3(%rbp),%eax
ffffffff800233a9:	48 98                	cltq   
ffffffff800233ab:	48 c1 e0 06          	shl    $0x6,%rax
ffffffff800233af:	48 8d 50 30          	lea    0x30(%rax),%rdx
ffffffff800233b3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800233b7:	48 01 d0             	add    %rdx,%rax
ffffffff800233ba:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff800233be:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff800233c2:	8b 00                	mov    (%rax),%eax
ffffffff800233c4:	85 c0                	test   %eax,%eax
ffffffff800233c6:	74 0b                	je     ffffffff800233d3 <ZydisEncoderCheckRequestSanity+0x3f4>
ffffffff800233c8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff800233cc:	8b 00                	mov    (%rax),%eax
ffffffff800233ce:	83 f8 04             	cmp    $0x4,%eax
ffffffff800233d1:	76 0a                	jbe    ffffffff800233dd <ZydisEncoderCheckRequestSanity+0x3fe>
ffffffff800233d3:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff800233d8:	e9 92 00 00 00       	jmp    ffffffff8002346f <ZydisEncoderCheckRequestSanity+0x490>
ffffffff800233dd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff800233e1:	8b 00                	mov    (%rax),%eax
ffffffff800233e3:	83 f8 04             	cmp    $0x4,%eax
ffffffff800233e6:	77 5f                	ja     ffffffff80023447 <ZydisEncoderCheckRequestSanity+0x468>
ffffffff800233e8:	83 f8 03             	cmp    $0x3,%eax
ffffffff800233eb:	73 61                	jae    ffffffff8002344e <ZydisEncoderCheckRequestSanity+0x46f>
ffffffff800233ed:	83 f8 01             	cmp    $0x1,%eax
ffffffff800233f0:	74 07                	je     ffffffff800233f9 <ZydisEncoderCheckRequestSanity+0x41a>
ffffffff800233f2:	83 f8 02             	cmp    $0x2,%eax
ffffffff800233f5:	74 17                	je     ffffffff8002340e <ZydisEncoderCheckRequestSanity+0x42f>
ffffffff800233f7:	eb 4e                	jmp    ffffffff80023447 <ZydisEncoderCheckRequestSanity+0x468>
ffffffff800233f9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff800233fd:	8b 40 04             	mov    0x4(%rax),%eax
ffffffff80023400:	3d 09 01 00 00       	cmp    $0x109,%eax
ffffffff80023405:	76 4a                	jbe    ffffffff80023451 <ZydisEncoderCheckRequestSanity+0x472>
ffffffff80023407:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff8002340c:	eb 61                	jmp    ffffffff8002346f <ZydisEncoderCheckRequestSanity+0x490>
ffffffff8002340e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80023412:	8b 40 10             	mov    0x10(%rax),%eax
ffffffff80023415:	3d 09 01 00 00       	cmp    $0x109,%eax
ffffffff8002341a:	77 24                	ja     ffffffff80023440 <ZydisEncoderCheckRequestSanity+0x461>
ffffffff8002341c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80023420:	8b 40 14             	mov    0x14(%rax),%eax
ffffffff80023423:	3d 09 01 00 00       	cmp    $0x109,%eax
ffffffff80023428:	77 16                	ja     ffffffff80023440 <ZydisEncoderCheckRequestSanity+0x461>
ffffffff8002342a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8002342e:	0f b6 40 18          	movzbl 0x18(%rax),%eax
ffffffff80023432:	0f b6 c0             	movzbl %al,%eax
ffffffff80023435:	89 c7                	mov    %eax,%edi
ffffffff80023437:	e8 cd a7 ff ff       	call   ffffffff8001dc09 <ZydisIsScaleValid>
ffffffff8002343c:	84 c0                	test   %al,%al
ffffffff8002343e:	75 14                	jne    ffffffff80023454 <ZydisEncoderCheckRequestSanity+0x475>
ffffffff80023440:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff80023445:	eb 28                	jmp    ffffffff8002346f <ZydisEncoderCheckRequestSanity+0x490>
ffffffff80023447:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff8002344c:	eb 21                	jmp    ffffffff8002346f <ZydisEncoderCheckRequestSanity+0x490>
ffffffff8002344e:	90                   	nop
ffffffff8002344f:	eb 04                	jmp    ffffffff80023455 <ZydisEncoderCheckRequestSanity+0x476>
ffffffff80023451:	90                   	nop
ffffffff80023452:	eb 01                	jmp    ffffffff80023455 <ZydisEncoderCheckRequestSanity+0x476>
ffffffff80023454:	90                   	nop
ffffffff80023455:	80 45 fd 01          	addb   $0x1,-0x3(%rbp)
ffffffff80023459:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002345d:	0f b6 40 28          	movzbl 0x28(%rax),%eax
ffffffff80023461:	38 45 fd             	cmp    %al,-0x3(%rbp)
ffffffff80023464:	0f 82 3b ff ff ff    	jb     ffffffff800233a5 <ZydisEncoderCheckRequestSanity+0x3c6>
ffffffff8002346a:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff8002346f:	c9                   	leave  
ffffffff80023470:	c3                   	ret    

ffffffff80023471 <ZydisEncoderEncodeInstruction>:
ffffffff80023471:	f3 0f 1e fa          	endbr64 
ffffffff80023475:	55                   	push   %rbp
ffffffff80023476:	48 89 e5             	mov    %rsp,%rbp
ffffffff80023479:	48 81 ec c0 00 00 00 	sub    $0xc0,%rsp
ffffffff80023480:	48 89 bd 58 ff ff ff 	mov    %rdi,-0xa8(%rbp)
ffffffff80023487:	48 89 b5 50 ff ff ff 	mov    %rsi,-0xb0(%rbp)
ffffffff8002348e:	48 89 95 48 ff ff ff 	mov    %rdx,-0xb8(%rbp)
ffffffff80023495:	48 83 bd 58 ff ff ff 	cmpq   $0x0,-0xa8(%rbp)
ffffffff8002349c:	00 
ffffffff8002349d:	74 14                	je     ffffffff800234b3 <ZydisEncoderEncodeInstruction+0x42>
ffffffff8002349f:	48 83 bd 50 ff ff ff 	cmpq   $0x0,-0xb0(%rbp)
ffffffff800234a6:	00 
ffffffff800234a7:	74 0a                	je     ffffffff800234b3 <ZydisEncoderEncodeInstruction+0x42>
ffffffff800234a9:	48 83 bd 48 ff ff ff 	cmpq   $0x0,-0xb8(%rbp)
ffffffff800234b0:	00 
ffffffff800234b1:	75 0a                	jne    ffffffff800234bd <ZydisEncoderEncodeInstruction+0x4c>
ffffffff800234b3:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff800234b8:	e9 c5 00 00 00       	jmp    ffffffff80023582 <ZydisEncoderEncodeInstruction+0x111>
ffffffff800234bd:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
ffffffff800234c4:	48 89 c7             	mov    %rax,%rdi
ffffffff800234c7:	e8 13 fb ff ff       	call   ffffffff80022fdf <ZydisEncoderCheckRequestSanity>
ffffffff800234cc:	89 45 fc             	mov    %eax,-0x4(%rbp)
ffffffff800234cf:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff800234d2:	85 c0                	test   %eax,%eax
ffffffff800234d4:	79 08                	jns    ffffffff800234de <ZydisEncoderEncodeInstruction+0x6d>
ffffffff800234d6:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff800234d9:	e9 a4 00 00 00       	jmp    ffffffff80023582 <ZydisEncoderEncodeInstruction+0x111>
ffffffff800234de:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
ffffffff800234e2:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
ffffffff800234e9:	48 89 c6             	mov    %rax,%rsi
ffffffff800234ec:	48 89 d7             	mov    %rdx,%rdi
ffffffff800234ef:	e8 0a d9 ff ff       	call   ffffffff80020dfe <ZydisFindMatchingDefinition>
ffffffff800234f4:	89 45 f8             	mov    %eax,-0x8(%rbp)
ffffffff800234f7:	8b 45 f8             	mov    -0x8(%rbp),%eax
ffffffff800234fa:	85 c0                	test   %eax,%eax
ffffffff800234fc:	79 05                	jns    ffffffff80023503 <ZydisEncoderEncodeInstruction+0x92>
ffffffff800234fe:	8b 45 f8             	mov    -0x8(%rbp),%eax
ffffffff80023501:	eb 7f                	jmp    ffffffff80023582 <ZydisEncoderEncodeInstruction+0x111>
ffffffff80023503:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
ffffffff8002350a:	48 89 45 90          	mov    %rax,-0x70(%rbp)
ffffffff8002350e:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
ffffffff80023515:	48 8b 00             	mov    (%rax),%rax
ffffffff80023518:	48 89 45 98          	mov    %rax,-0x68(%rbp)
ffffffff8002351c:	48 c7 45 a0 00 00 00 	movq   $0x0,-0x60(%rbp)
ffffffff80023523:	00 
ffffffff80023524:	48 8d 95 60 ff ff ff 	lea    -0xa0(%rbp),%rdx
ffffffff8002352b:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
ffffffff8002352f:	48 89 d6             	mov    %rdx,%rsi
ffffffff80023532:	48 89 c7             	mov    %rax,%rdi
ffffffff80023535:	e8 31 f3 ff ff       	call   ffffffff8002286b <ZydisBuildInstruction>
ffffffff8002353a:	89 45 f4             	mov    %eax,-0xc(%rbp)
ffffffff8002353d:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff80023540:	85 c0                	test   %eax,%eax
ffffffff80023542:	79 05                	jns    ffffffff80023549 <ZydisEncoderEncodeInstruction+0xd8>
ffffffff80023544:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff80023547:	eb 39                	jmp    ffffffff80023582 <ZydisEncoderEncodeInstruction+0x111>
ffffffff80023549:	48 8d 55 90          	lea    -0x70(%rbp),%rdx
ffffffff8002354d:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
ffffffff80023554:	48 89 d6             	mov    %rdx,%rsi
ffffffff80023557:	48 89 c7             	mov    %rax,%rdi
ffffffff8002355a:	e8 3b ea ff ff       	call   ffffffff80021f9a <ZydisEmitInstruction>
ffffffff8002355f:	89 45 f0             	mov    %eax,-0x10(%rbp)
ffffffff80023562:	8b 45 f0             	mov    -0x10(%rbp),%eax
ffffffff80023565:	85 c0                	test   %eax,%eax
ffffffff80023567:	79 05                	jns    ffffffff8002356e <ZydisEncoderEncodeInstruction+0xfd>
ffffffff80023569:	8b 45 f0             	mov    -0x10(%rbp),%eax
ffffffff8002356c:	eb 14                	jmp    ffffffff80023582 <ZydisEncoderEncodeInstruction+0x111>
ffffffff8002356e:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
ffffffff80023572:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
ffffffff80023579:	48 89 10             	mov    %rdx,(%rax)
ffffffff8002357c:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff80023581:	90                   	nop
ffffffff80023582:	c9                   	leave  
ffffffff80023583:	c3                   	ret    

ffffffff80023584 <ZydisEncoderDecodedInstructionToEncoderRequest>:
ffffffff80023584:	f3 0f 1e fa          	endbr64 
ffffffff80023588:	55                   	push   %rbp
ffffffff80023589:	48 89 e5             	mov    %rsp,%rbp
ffffffff8002358c:	48 83 ec 40          	sub    $0x40,%rsp
ffffffff80023590:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
ffffffff80023594:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
ffffffff80023598:	89 d0                	mov    %edx,%eax
ffffffff8002359a:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
ffffffff8002359e:	88 45 cc             	mov    %al,-0x34(%rbp)
ffffffff800235a1:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
ffffffff800235a6:	74 14                	je     ffffffff800235bc <ZydisEncoderDecodedInstructionToEncoderRequest+0x38>
ffffffff800235a8:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
ffffffff800235ad:	74 0d                	je     ffffffff800235bc <ZydisEncoderDecodedInstructionToEncoderRequest+0x38>
ffffffff800235af:	80 7d cc 00          	cmpb   $0x0,-0x34(%rbp)
ffffffff800235b3:	74 11                	je     ffffffff800235c6 <ZydisEncoderDecodedInstructionToEncoderRequest+0x42>
ffffffff800235b5:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
ffffffff800235ba:	75 0a                	jne    ffffffff800235c6 <ZydisEncoderDecodedInstructionToEncoderRequest+0x42>
ffffffff800235bc:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff800235c1:	e9 60 05 00 00       	jmp    ffffffff80023b26 <ZydisEncoderDecodedInstructionToEncoderRequest+0x5a2>
ffffffff800235c6:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff800235ca:	ba 90 01 00 00       	mov    $0x190,%edx
ffffffff800235cf:	be 00 00 00 00       	mov    $0x0,%esi
ffffffff800235d4:	48 89 c7             	mov    %rax,%rdi
ffffffff800235d7:	e8 16 9e ff ff       	call   ffffffff8001d3f2 <ZYAN_MEMSET.lto_priv.2>
ffffffff800235dc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff800235e0:	8b 10                	mov    (%rax),%edx
ffffffff800235e2:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff800235e6:	89 10                	mov    %edx,(%rax)
ffffffff800235e8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff800235ec:	8b 50 04             	mov    0x4(%rax),%edx
ffffffff800235ef:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff800235f3:	89 50 08             	mov    %edx,0x8(%rax)
ffffffff800235f6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff800235fa:	48 8b 50 20          	mov    0x20(%rax),%rdx
ffffffff800235fe:	48 b8 00 00 00 f8 ff 	movabs $0x7fff8000000,%rax
ffffffff80023605:	07 00 00 
ffffffff80023608:	48 21 c2             	and    %rax,%rdx
ffffffff8002360b:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002360f:	48 89 50 10          	mov    %rdx,0x10(%rax)
ffffffff80023613:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80023617:	8b 50 68             	mov    0x68(%rax),%edx
ffffffff8002361a:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002361e:	89 50 18             	mov    %edx,0x18(%rax)
ffffffff80023621:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80023625:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff80023629:	25 00 00 00 04       	and    $0x4000000,%eax
ffffffff8002362e:	48 85 c0             	test   %rax,%rax
ffffffff80023631:	75 1d                	jne    ffffffff80023650 <ZydisEncoderDecodedInstructionToEncoderRequest+0xcc>
ffffffff80023633:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff80023637:	48 8b 50 10          	mov    0x10(%rax),%rdx
ffffffff8002363b:	48 b8 ff ff ff ff 1f 	movabs $0xfffff81fffffffff,%rax
ffffffff80023642:	f8 ff ff 
ffffffff80023645:	48 21 c2             	and    %rax,%rdx
ffffffff80023648:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002364c:	48 89 50 10          	mov    %rdx,0x10(%rax)
ffffffff80023650:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80023654:	0f b6 40 17          	movzbl 0x17(%rax),%eax
ffffffff80023658:	0f b6 c0             	movzbl %al,%eax
ffffffff8002365b:	83 f8 40             	cmp    $0x40,%eax
ffffffff8002365e:	74 2b                	je     ffffffff8002368b <ZydisEncoderDecodedInstructionToEncoderRequest+0x107>
ffffffff80023660:	83 f8 40             	cmp    $0x40,%eax
ffffffff80023663:	7f 33                	jg     ffffffff80023698 <ZydisEncoderDecodedInstructionToEncoderRequest+0x114>
ffffffff80023665:	83 f8 10             	cmp    $0x10,%eax
ffffffff80023668:	74 07                	je     ffffffff80023671 <ZydisEncoderDecodedInstructionToEncoderRequest+0xed>
ffffffff8002366a:	83 f8 20             	cmp    $0x20,%eax
ffffffff8002366d:	74 0f                	je     ffffffff8002367e <ZydisEncoderDecodedInstructionToEncoderRequest+0xfa>
ffffffff8002366f:	eb 27                	jmp    ffffffff80023698 <ZydisEncoderDecodedInstructionToEncoderRequest+0x114>
ffffffff80023671:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff80023675:	c7 40 20 01 00 00 00 	movl   $0x1,0x20(%rax)
ffffffff8002367c:	eb 24                	jmp    ffffffff800236a2 <ZydisEncoderDecodedInstructionToEncoderRequest+0x11e>
ffffffff8002367e:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff80023682:	c7 40 20 02 00 00 00 	movl   $0x2,0x20(%rax)
ffffffff80023689:	eb 17                	jmp    ffffffff800236a2 <ZydisEncoderDecodedInstructionToEncoderRequest+0x11e>
ffffffff8002368b:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002368f:	c7 40 20 03 00 00 00 	movl   $0x3,0x20(%rax)
ffffffff80023696:	eb 0a                	jmp    ffffffff800236a2 <ZydisEncoderDecodedInstructionToEncoderRequest+0x11e>
ffffffff80023698:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff8002369d:	e9 84 04 00 00       	jmp    ffffffff80023b26 <ZydisEncoderDecodedInstructionToEncoderRequest+0x5a2>
ffffffff800236a2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff800236a6:	0f b6 40 16          	movzbl 0x16(%rax),%eax
ffffffff800236aa:	0f b6 c0             	movzbl %al,%eax
ffffffff800236ad:	83 f8 40             	cmp    $0x40,%eax
ffffffff800236b0:	74 42                	je     ffffffff800236f4 <ZydisEncoderDecodedInstructionToEncoderRequest+0x170>
ffffffff800236b2:	83 f8 40             	cmp    $0x40,%eax
ffffffff800236b5:	7f 4a                	jg     ffffffff80023701 <ZydisEncoderDecodedInstructionToEncoderRequest+0x17d>
ffffffff800236b7:	83 f8 20             	cmp    $0x20,%eax
ffffffff800236ba:	74 2b                	je     ffffffff800236e7 <ZydisEncoderDecodedInstructionToEncoderRequest+0x163>
ffffffff800236bc:	83 f8 20             	cmp    $0x20,%eax
ffffffff800236bf:	7f 40                	jg     ffffffff80023701 <ZydisEncoderDecodedInstructionToEncoderRequest+0x17d>
ffffffff800236c1:	83 f8 08             	cmp    $0x8,%eax
ffffffff800236c4:	74 07                	je     ffffffff800236cd <ZydisEncoderDecodedInstructionToEncoderRequest+0x149>
ffffffff800236c6:	83 f8 10             	cmp    $0x10,%eax
ffffffff800236c9:	74 0f                	je     ffffffff800236da <ZydisEncoderDecodedInstructionToEncoderRequest+0x156>
ffffffff800236cb:	eb 34                	jmp    ffffffff80023701 <ZydisEncoderDecodedInstructionToEncoderRequest+0x17d>
ffffffff800236cd:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff800236d1:	c7 40 24 01 00 00 00 	movl   $0x1,0x24(%rax)
ffffffff800236d8:	eb 31                	jmp    ffffffff8002370b <ZydisEncoderDecodedInstructionToEncoderRequest+0x187>
ffffffff800236da:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff800236de:	c7 40 24 02 00 00 00 	movl   $0x2,0x24(%rax)
ffffffff800236e5:	eb 24                	jmp    ffffffff8002370b <ZydisEncoderDecodedInstructionToEncoderRequest+0x187>
ffffffff800236e7:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff800236eb:	c7 40 24 03 00 00 00 	movl   $0x3,0x24(%rax)
ffffffff800236f2:	eb 17                	jmp    ffffffff8002370b <ZydisEncoderDecodedInstructionToEncoderRequest+0x187>
ffffffff800236f4:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff800236f8:	c7 40 24 04 00 00 00 	movl   $0x4,0x24(%rax)
ffffffff800236ff:	eb 0a                	jmp    ffffffff8002370b <ZydisEncoderDecodedInstructionToEncoderRequest+0x187>
ffffffff80023701:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff80023706:	e9 1b 04 00 00       	jmp    ffffffff80023b26 <ZydisEncoderDecodedInstructionToEncoderRequest+0x5a2>
ffffffff8002370b:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002370f:	8b 40 18             	mov    0x18(%rax),%eax
ffffffff80023712:	83 f8 03             	cmp    $0x3,%eax
ffffffff80023715:	77 76                	ja     ffffffff8002378d <ZydisEncoderDecodedInstructionToEncoderRequest+0x209>
ffffffff80023717:	83 f8 02             	cmp    $0x2,%eax
ffffffff8002371a:	73 25                	jae    ffffffff80023741 <ZydisEncoderDecodedInstructionToEncoderRequest+0x1bd>
ffffffff8002371c:	85 c0                	test   %eax,%eax
ffffffff8002371e:	74 07                	je     ffffffff80023727 <ZydisEncoderDecodedInstructionToEncoderRequest+0x1a3>
ffffffff80023720:	83 f8 01             	cmp    $0x1,%eax
ffffffff80023723:	74 0f                	je     ffffffff80023734 <ZydisEncoderDecodedInstructionToEncoderRequest+0x1b0>
ffffffff80023725:	eb 66                	jmp    ffffffff8002378d <ZydisEncoderDecodedInstructionToEncoderRequest+0x209>
ffffffff80023727:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002372b:	c7 40 1c 00 00 00 00 	movl   $0x0,0x1c(%rax)
ffffffff80023732:	eb 63                	jmp    ffffffff80023797 <ZydisEncoderDecodedInstructionToEncoderRequest+0x213>
ffffffff80023734:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff80023738:	c7 40 1c 01 00 00 00 	movl   $0x1,0x1c(%rax)
ffffffff8002373f:	eb 56                	jmp    ffffffff80023797 <ZydisEncoderDecodedInstructionToEncoderRequest+0x213>
ffffffff80023741:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80023745:	0f b6 40 16          	movzbl 0x16(%rax),%eax
ffffffff80023749:	0f b6 c0             	movzbl %al,%eax
ffffffff8002374c:	83 f8 40             	cmp    $0x40,%eax
ffffffff8002374f:	74 2b                	je     ffffffff8002377c <ZydisEncoderDecodedInstructionToEncoderRequest+0x1f8>
ffffffff80023751:	83 f8 40             	cmp    $0x40,%eax
ffffffff80023754:	7f 33                	jg     ffffffff80023789 <ZydisEncoderDecodedInstructionToEncoderRequest+0x205>
ffffffff80023756:	83 f8 10             	cmp    $0x10,%eax
ffffffff80023759:	74 07                	je     ffffffff80023762 <ZydisEncoderDecodedInstructionToEncoderRequest+0x1de>
ffffffff8002375b:	83 f8 20             	cmp    $0x20,%eax
ffffffff8002375e:	74 0f                	je     ffffffff8002376f <ZydisEncoderDecodedInstructionToEncoderRequest+0x1eb>
ffffffff80023760:	eb 27                	jmp    ffffffff80023789 <ZydisEncoderDecodedInstructionToEncoderRequest+0x205>
ffffffff80023762:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff80023766:	c7 40 1c 02 00 00 00 	movl   $0x2,0x1c(%rax)
ffffffff8002376d:	eb 1c                	jmp    ffffffff8002378b <ZydisEncoderDecodedInstructionToEncoderRequest+0x207>
ffffffff8002376f:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff80023773:	c7 40 1c 03 00 00 00 	movl   $0x3,0x1c(%rax)
ffffffff8002377a:	eb 0f                	jmp    ffffffff8002378b <ZydisEncoderDecodedInstructionToEncoderRequest+0x207>
ffffffff8002377c:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff80023780:	c7 40 1c 04 00 00 00 	movl   $0x4,0x1c(%rax)
ffffffff80023787:	eb 02                	jmp    ffffffff8002378b <ZydisEncoderDecodedInstructionToEncoderRequest+0x207>
ffffffff80023789:	eb fe                	jmp    ffffffff80023789 <ZydisEncoderDecodedInstructionToEncoderRequest+0x205>
ffffffff8002378b:	eb 0a                	jmp    ffffffff80023797 <ZydisEncoderDecodedInstructionToEncoderRequest+0x213>
ffffffff8002378d:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff80023792:	e9 8f 03 00 00       	jmp    ffffffff80023b26 <ZydisEncoderDecodedInstructionToEncoderRequest+0x5a2>
ffffffff80023797:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8002379b:	8b 40 0c             	mov    0xc(%rax),%eax
ffffffff8002379e:	83 f8 05             	cmp    $0x5,%eax
ffffffff800237a1:	0f 84 a6 00 00 00    	je     ffffffff8002384d <ZydisEncoderDecodedInstructionToEncoderRequest+0x2c9>
ffffffff800237a7:	83 f8 05             	cmp    $0x5,%eax
ffffffff800237aa:	0f 87 1a 01 00 00    	ja     ffffffff800238ca <ZydisEncoderDecodedInstructionToEncoderRequest+0x346>
ffffffff800237b0:	83 f8 03             	cmp    $0x3,%eax
ffffffff800237b3:	0f 86 1b 01 00 00    	jbe    ffffffff800238d4 <ZydisEncoderDecodedInstructionToEncoderRequest+0x350>
ffffffff800237b9:	83 f8 04             	cmp    $0x4,%eax
ffffffff800237bc:	0f 85 08 01 00 00    	jne    ffffffff800238ca <ZydisEncoderDecodedInstructionToEncoderRequest+0x346>
ffffffff800237c2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff800237c6:	0f b6 40 44          	movzbl 0x44(%rax),%eax
ffffffff800237ca:	84 c0                	test   %al,%al
ffffffff800237cc:	75 09                	jne    ffffffff800237d7 <ZydisEncoderDecodedInstructionToEncoderRequest+0x253>
ffffffff800237ce:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff800237d2:	8b 40 48             	mov    0x48(%rax),%eax
ffffffff800237d5:	eb 05                	jmp    ffffffff800237dc <ZydisEncoderDecodedInstructionToEncoderRequest+0x258>
ffffffff800237d7:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800237dc:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
ffffffff800237e0:	89 82 70 01 00 00    	mov    %eax,0x170(%rdx)
ffffffff800237e6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff800237ea:	8b 50 4c             	mov    0x4c(%rax),%edx
ffffffff800237ed:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff800237f1:	89 90 74 01 00 00    	mov    %edx,0x174(%rax)
ffffffff800237f7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff800237fb:	0f b6 40 58          	movzbl 0x58(%rax),%eax
ffffffff800237ff:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
ffffffff80023803:	88 82 78 01 00 00    	mov    %al,0x178(%rdx)
ffffffff80023809:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8002380d:	8b 40 3c             	mov    0x3c(%rax),%eax
ffffffff80023810:	83 f8 03             	cmp    $0x3,%eax
ffffffff80023813:	74 0c                	je     ffffffff80023821 <ZydisEncoderDecodedInstructionToEncoderRequest+0x29d>
ffffffff80023815:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80023819:	8b 40 3c             	mov    0x3c(%rax),%eax
ffffffff8002381c:	83 f8 05             	cmp    $0x5,%eax
ffffffff8002381f:	75 16                	jne    ffffffff80023837 <ZydisEncoderDecodedInstructionToEncoderRequest+0x2b3>
ffffffff80023821:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80023825:	0f b6 80 0c 01 00 00 	movzbl 0x10c(%rax),%eax
ffffffff8002382c:	84 c0                	test   %al,%al
ffffffff8002382e:	74 07                	je     ffffffff80023837 <ZydisEncoderDecodedInstructionToEncoderRequest+0x2b3>
ffffffff80023830:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff80023835:	eb 05                	jmp    ffffffff8002383c <ZydisEncoderDecodedInstructionToEncoderRequest+0x2b8>
ffffffff80023837:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8002383c:	89 c2                	mov    %eax,%edx
ffffffff8002383e:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff80023842:	88 90 79 01 00 00    	mov    %dl,0x179(%rax)
ffffffff80023848:	e9 88 00 00 00       	jmp    ffffffff800238d5 <ZydisEncoderDecodedInstructionToEncoderRequest+0x351>
ffffffff8002384d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80023851:	0f b6 40 44          	movzbl 0x44(%rax),%eax
ffffffff80023855:	84 c0                	test   %al,%al
ffffffff80023857:	75 09                	jne    ffffffff80023862 <ZydisEncoderDecodedInstructionToEncoderRequest+0x2de>
ffffffff80023859:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8002385d:	8b 40 48             	mov    0x48(%rax),%eax
ffffffff80023860:	eb 05                	jmp    ffffffff80023867 <ZydisEncoderDecodedInstructionToEncoderRequest+0x2e3>
ffffffff80023862:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80023867:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
ffffffff8002386b:	89 82 7c 01 00 00    	mov    %eax,0x17c(%rdx)
ffffffff80023871:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80023875:	8b 50 54             	mov    0x54(%rax),%edx
ffffffff80023878:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002387c:	89 90 80 01 00 00    	mov    %edx,0x180(%rax)
ffffffff80023882:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80023886:	8b 50 4c             	mov    0x4c(%rax),%edx
ffffffff80023889:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002388d:	89 90 84 01 00 00    	mov    %edx,0x184(%rax)
ffffffff80023893:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80023897:	8b 50 50             	mov    0x50(%rax),%edx
ffffffff8002389a:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002389e:	89 90 88 01 00 00    	mov    %edx,0x188(%rax)
ffffffff800238a4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff800238a8:	0f b6 40 58          	movzbl 0x58(%rax),%eax
ffffffff800238ac:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
ffffffff800238b0:	88 82 8c 01 00 00    	mov    %al,0x18c(%rdx)
ffffffff800238b6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff800238ba:	0f b6 40 59          	movzbl 0x59(%rax),%eax
ffffffff800238be:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
ffffffff800238c2:	88 82 8d 01 00 00    	mov    %al,0x18d(%rdx)
ffffffff800238c8:	eb 0b                	jmp    ffffffff800238d5 <ZydisEncoderDecodedInstructionToEncoderRequest+0x351>
ffffffff800238ca:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff800238cf:	e9 52 02 00 00       	jmp    ffffffff80023b26 <ZydisEncoderDecodedInstructionToEncoderRequest+0x5a2>
ffffffff800238d4:	90                   	nop
ffffffff800238d5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff800238d9:	8b 40 0c             	mov    0xc(%rax),%eax
ffffffff800238dc:	ba 01 00 00 00       	mov    $0x1,%edx
ffffffff800238e1:	89 c1                	mov    %eax,%ecx
ffffffff800238e3:	d3 e2                	shl    %cl,%edx
ffffffff800238e5:	89 d0                	mov    %edx,%eax
ffffffff800238e7:	89 c2                	mov    %eax,%edx
ffffffff800238e9:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff800238ed:	89 50 04             	mov    %edx,0x4(%rax)
ffffffff800238f0:	80 7d cc 05          	cmpb   $0x5,-0x34(%rbp)
ffffffff800238f4:	77 0d                	ja     ffffffff80023903 <ZydisEncoderDecodedInstructionToEncoderRequest+0x37f>
ffffffff800238f6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff800238fa:	0f b6 40 19          	movzbl 0x19(%rax),%eax
ffffffff800238fe:	38 45 cc             	cmp    %al,-0x34(%rbp)
ffffffff80023901:	76 0a                	jbe    ffffffff8002390d <ZydisEncoderDecodedInstructionToEncoderRequest+0x389>
ffffffff80023903:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff80023908:	e9 19 02 00 00       	jmp    ffffffff80023b26 <ZydisEncoderDecodedInstructionToEncoderRequest+0x5a2>
ffffffff8002390d:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
ffffffff80023911:	0f b6 45 cc          	movzbl -0x34(%rbp),%eax
ffffffff80023915:	88 42 28             	mov    %al,0x28(%rdx)
ffffffff80023918:	c6 45 ff 00          	movb   $0x0,-0x1(%rbp)
ffffffff8002391c:	e9 f3 01 00 00       	jmp    ffffffff80023b14 <ZydisEncoderDecodedInstructionToEncoderRequest+0x590>
ffffffff80023921:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
ffffffff80023925:	48 6b c0 68          	imul   $0x68,%rax,%rax
ffffffff80023929:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
ffffffff8002392d:	48 01 d0             	add    %rdx,%rax
ffffffff80023930:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff80023934:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
ffffffff80023938:	48 98                	cltq   
ffffffff8002393a:	48 c1 e0 06          	shl    $0x6,%rax
ffffffff8002393e:	48 8d 50 30          	lea    0x30(%rax),%rdx
ffffffff80023942:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff80023946:	48 01 d0             	add    %rdx,%rax
ffffffff80023949:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff8002394d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80023951:	8b 50 04             	mov    0x4(%rax),%edx
ffffffff80023954:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80023958:	89 10                	mov    %edx,(%rax)
ffffffff8002395a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8002395e:	8b 40 04             	mov    0x4(%rax),%eax
ffffffff80023961:	83 f8 04             	cmp    $0x4,%eax
ffffffff80023964:	0f 84 20 01 00 00    	je     ffffffff80023a8a <ZydisEncoderDecodedInstructionToEncoderRequest+0x506>
ffffffff8002396a:	83 f8 04             	cmp    $0x4,%eax
ffffffff8002396d:	0f 87 95 01 00 00    	ja     ffffffff80023b08 <ZydisEncoderDecodedInstructionToEncoderRequest+0x584>
ffffffff80023973:	83 f8 03             	cmp    $0x3,%eax
ffffffff80023976:	0f 84 eb 00 00 00    	je     ffffffff80023a67 <ZydisEncoderDecodedInstructionToEncoderRequest+0x4e3>
ffffffff8002397c:	83 f8 03             	cmp    $0x3,%eax
ffffffff8002397f:	0f 87 83 01 00 00    	ja     ffffffff80023b08 <ZydisEncoderDecodedInstructionToEncoderRequest+0x584>
ffffffff80023985:	83 f8 01             	cmp    $0x1,%eax
ffffffff80023988:	74 0a                	je     ffffffff80023994 <ZydisEncoderDecodedInstructionToEncoderRequest+0x410>
ffffffff8002398a:	83 f8 02             	cmp    $0x2,%eax
ffffffff8002398d:	74 2e                	je     ffffffff800239bd <ZydisEncoderDecodedInstructionToEncoderRequest+0x439>
ffffffff8002398f:	e9 74 01 00 00       	jmp    ffffffff80023b08 <ZydisEncoderDecodedInstructionToEncoderRequest+0x584>
ffffffff80023994:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80023998:	8b 50 24             	mov    0x24(%rax),%edx
ffffffff8002399b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002399f:	89 50 04             	mov    %edx,0x4(%rax)
ffffffff800239a2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff800239a6:	8b 40 10             	mov    0x10(%rax),%eax
ffffffff800239a9:	83 f8 05             	cmp    $0x5,%eax
ffffffff800239ac:	0f 94 c0             	sete   %al
ffffffff800239af:	89 c2                	mov    %eax,%edx
ffffffff800239b1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800239b5:	88 50 08             	mov    %dl,0x8(%rax)
ffffffff800239b8:	e9 53 01 00 00       	jmp    ffffffff80023b10 <ZydisEncoderDecodedInstructionToEncoderRequest+0x58c>
ffffffff800239bd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff800239c1:	8b 50 30             	mov    0x30(%rax),%edx
ffffffff800239c4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800239c8:	89 50 10             	mov    %edx,0x10(%rax)
ffffffff800239cb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff800239cf:	8b 50 34             	mov    0x34(%rax),%edx
ffffffff800239d2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800239d6:	89 50 14             	mov    %edx,0x14(%rax)
ffffffff800239d9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff800239dd:	8b 40 28             	mov    0x28(%rax),%eax
ffffffff800239e0:	83 f8 03             	cmp    $0x3,%eax
ffffffff800239e3:	74 0a                	je     ffffffff800239ef <ZydisEncoderDecodedInstructionToEncoderRequest+0x46b>
ffffffff800239e5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff800239e9:	0f b6 40 38          	movzbl 0x38(%rax),%eax
ffffffff800239ed:	eb 05                	jmp    ffffffff800239f4 <ZydisEncoderDecodedInstructionToEncoderRequest+0x470>
ffffffff800239ef:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800239f4:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff800239f8:	88 42 18             	mov    %al,0x18(%rdx)
ffffffff800239fb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff800239ff:	8b 40 10             	mov    0x10(%rax),%eax
ffffffff80023a02:	83 f8 0b             	cmp    $0xb,%eax
ffffffff80023a05:	75 22                	jne    ffffffff80023a29 <ZydisEncoderDecodedInstructionToEncoderRequest+0x4a5>
ffffffff80023a07:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80023a0b:	48 8d 50 20          	lea    0x20(%rax),%rdx
ffffffff80023a0f:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
ffffffff80023a13:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80023a17:	48 89 d1             	mov    %rdx,%rcx
ffffffff80023a1a:	ba 00 00 00 00       	mov    $0x0,%edx
ffffffff80023a1f:	48 89 c7             	mov    %rax,%rdi
ffffffff80023a22:	e8 e3 13 01 00       	call   ffffffff80034e0a <ZydisCalcAbsoluteAddress>
ffffffff80023a27:	eb 23                	jmp    ffffffff80023a4c <ZydisEncoderDecodedInstructionToEncoderRequest+0x4c8>
ffffffff80023a29:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80023a2d:	0f b6 40 40          	movzbl 0x40(%rax),%eax
ffffffff80023a31:	84 c0                	test   %al,%al
ffffffff80023a33:	74 0a                	je     ffffffff80023a3f <ZydisEncoderDecodedInstructionToEncoderRequest+0x4bb>
ffffffff80023a35:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80023a39:	48 8b 40 48          	mov    0x48(%rax),%rax
ffffffff80023a3d:	eb 05                	jmp    ffffffff80023a44 <ZydisEncoderDecodedInstructionToEncoderRequest+0x4c0>
ffffffff80023a3f:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80023a44:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff80023a48:	48 89 42 20          	mov    %rax,0x20(%rdx)
ffffffff80023a4c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80023a50:	0f b7 40 14          	movzwl 0x14(%rax),%eax
ffffffff80023a54:	66 c1 e8 03          	shr    $0x3,%ax
ffffffff80023a58:	89 c2                	mov    %eax,%edx
ffffffff80023a5a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80023a5e:	66 89 50 28          	mov    %dx,0x28(%rax)
ffffffff80023a62:	e9 a9 00 00 00       	jmp    ffffffff80023b10 <ZydisEncoderDecodedInstructionToEncoderRequest+0x58c>
ffffffff80023a67:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80023a6b:	0f b7 50 50          	movzwl 0x50(%rax),%edx
ffffffff80023a6f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80023a73:	66 89 50 30          	mov    %dx,0x30(%rax)
ffffffff80023a77:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80023a7b:	8b 50 54             	mov    0x54(%rax),%edx
ffffffff80023a7e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80023a82:	89 50 34             	mov    %edx,0x34(%rax)
ffffffff80023a85:	e9 86 00 00 00       	jmp    ffffffff80023b10 <ZydisEncoderDecodedInstructionToEncoderRequest+0x58c>
ffffffff80023a8a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80023a8e:	48 8b 50 60          	mov    0x60(%rax),%rdx
ffffffff80023a92:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80023a96:	48 89 50 38          	mov    %rdx,0x38(%rax)
ffffffff80023a9a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80023a9e:	0f b6 40 59          	movzbl 0x59(%rax),%eax
ffffffff80023aa2:	84 c0                	test   %al,%al
ffffffff80023aa4:	74 69                	je     ffffffff80023b0f <ZydisEncoderDecodedInstructionToEncoderRequest+0x58b>
ffffffff80023aa6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80023aaa:	8b 40 04             	mov    0x4(%rax),%eax
ffffffff80023aad:	3d bb 06 00 00       	cmp    $0x6bb,%eax
ffffffff80023ab2:	74 5b                	je     ffffffff80023b0f <ZydisEncoderDecodedInstructionToEncoderRequest+0x58b>
ffffffff80023ab4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80023ab8:	0f b6 80 48 01 00 00 	movzbl 0x148(%rax),%eax
ffffffff80023abf:	0f b6 c0             	movzbl %al,%eax
ffffffff80023ac2:	83 f8 20             	cmp    $0x20,%eax
ffffffff80023ac5:	74 2b                	je     ffffffff80023af2 <ZydisEncoderDecodedInstructionToEncoderRequest+0x56e>
ffffffff80023ac7:	83 f8 20             	cmp    $0x20,%eax
ffffffff80023aca:	7f 33                	jg     ffffffff80023aff <ZydisEncoderDecodedInstructionToEncoderRequest+0x57b>
ffffffff80023acc:	83 f8 08             	cmp    $0x8,%eax
ffffffff80023acf:	74 07                	je     ffffffff80023ad8 <ZydisEncoderDecodedInstructionToEncoderRequest+0x554>
ffffffff80023ad1:	83 f8 10             	cmp    $0x10,%eax
ffffffff80023ad4:	74 0f                	je     ffffffff80023ae5 <ZydisEncoderDecodedInstructionToEncoderRequest+0x561>
ffffffff80023ad6:	eb 27                	jmp    ffffffff80023aff <ZydisEncoderDecodedInstructionToEncoderRequest+0x57b>
ffffffff80023ad8:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff80023adc:	c7 40 1c 01 00 00 00 	movl   $0x1,0x1c(%rax)
ffffffff80023ae3:	eb 21                	jmp    ffffffff80023b06 <ZydisEncoderDecodedInstructionToEncoderRequest+0x582>
ffffffff80023ae5:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff80023ae9:	c7 40 1c 02 00 00 00 	movl   $0x2,0x1c(%rax)
ffffffff80023af0:	eb 14                	jmp    ffffffff80023b06 <ZydisEncoderDecodedInstructionToEncoderRequest+0x582>
ffffffff80023af2:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff80023af6:	c7 40 1c 03 00 00 00 	movl   $0x3,0x1c(%rax)
ffffffff80023afd:	eb 07                	jmp    ffffffff80023b06 <ZydisEncoderDecodedInstructionToEncoderRequest+0x582>
ffffffff80023aff:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff80023b04:	eb 20                	jmp    ffffffff80023b26 <ZydisEncoderDecodedInstructionToEncoderRequest+0x5a2>
ffffffff80023b06:	eb 07                	jmp    ffffffff80023b0f <ZydisEncoderDecodedInstructionToEncoderRequest+0x58b>
ffffffff80023b08:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff80023b0d:	eb 17                	jmp    ffffffff80023b26 <ZydisEncoderDecodedInstructionToEncoderRequest+0x5a2>
ffffffff80023b0f:	90                   	nop
ffffffff80023b10:	80 45 ff 01          	addb   $0x1,-0x1(%rbp)
ffffffff80023b14:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
ffffffff80023b18:	3a 45 cc             	cmp    -0x34(%rbp),%al
ffffffff80023b1b:	0f 82 00 fe ff ff    	jb     ffffffff80023921 <ZydisEncoderDecodedInstructionToEncoderRequest+0x39d>
ffffffff80023b21:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff80023b26:	c9                   	leave  
ffffffff80023b27:	c3                   	ret    

ffffffff80023b28 <ZYAN_MEMCPY.lto_priv.5>:
ffffffff80023b28:	55                   	push   %rbp
ffffffff80023b29:	48 89 e5             	mov    %rsp,%rbp
ffffffff80023b2c:	48 83 ec 28          	sub    $0x28,%rsp
ffffffff80023b30:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff80023b34:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
ffffffff80023b38:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
ffffffff80023b3c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80023b40:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff80023b44:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80023b48:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff80023b4c:	eb 1d                	jmp    ffffffff80023b6b <ZYAN_MEMCPY.lto_priv.5+0x43>
ffffffff80023b4e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff80023b52:	48 8d 42 01          	lea    0x1(%rdx),%rax
ffffffff80023b56:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff80023b5a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80023b5e:	48 8d 48 01          	lea    0x1(%rax),%rcx
ffffffff80023b62:	48 89 4d f8          	mov    %rcx,-0x8(%rbp)
ffffffff80023b66:	0f b6 12             	movzbl (%rdx),%edx
ffffffff80023b69:	88 10                	mov    %dl,(%rax)
ffffffff80023b6b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80023b6f:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
ffffffff80023b73:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
ffffffff80023b77:	48 85 c0             	test   %rax,%rax
ffffffff80023b7a:	75 d2                	jne    ffffffff80023b4e <ZYAN_MEMCPY.lto_priv.5+0x26>
ffffffff80023b7c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80023b80:	c9                   	leave  
ffffffff80023b81:	c3                   	ret    

ffffffff80023b82 <ZyanAbsI64.lto_priv.1>:
ffffffff80023b82:	55                   	push   %rbp
ffffffff80023b83:	48 89 e5             	mov    %rsp,%rbp
ffffffff80023b86:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80023b8a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff80023b8e:	48 b8 00 00 00 00 00 	movabs $0x8000000000000000,%rax
ffffffff80023b95:	00 00 80 
ffffffff80023b98:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
ffffffff80023b9c:	75 0c                	jne    ffffffff80023baa <ZyanAbsI64.lto_priv.1+0x28>
ffffffff80023b9e:	48 b8 00 00 00 00 00 	movabs $0x8000000000000000,%rax
ffffffff80023ba5:	00 00 80 
ffffffff80023ba8:	eb 0c                	jmp    ffffffff80023bb6 <ZyanAbsI64.lto_priv.1+0x34>
ffffffff80023baa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80023bae:	48 99                	cqto   
ffffffff80023bb0:	48 31 d0             	xor    %rdx,%rax
ffffffff80023bb3:	48 29 d0             	sub    %rdx,%rax
ffffffff80023bb6:	c9                   	leave  
ffffffff80023bb7:	c3                   	ret    

ffffffff80023bb8 <ZydisStringAppend.lto_priv.0>:
ffffffff80023bb8:	55                   	push   %rbp
ffffffff80023bb9:	48 89 e5             	mov    %rsp,%rbp
ffffffff80023bbc:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff80023bc0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff80023bc4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff80023bc8:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff80023bcd:	74 05                	je     ffffffff80023bd4 <ZydisStringAppend.lto_priv.0+0x1c>
ffffffff80023bcf:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
ffffffff80023bd4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80023bd8:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff80023bdc:	48 85 c0             	test   %rax,%rax
ffffffff80023bdf:	74 0b                	je     ffffffff80023bec <ZydisStringAppend.lto_priv.0+0x34>
ffffffff80023be1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80023be5:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff80023be9:	48 85 c0             	test   %rax,%rax
ffffffff80023bec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80023bf0:	48 8b 50 18          	mov    0x18(%rax),%rdx
ffffffff80023bf4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80023bf8:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff80023bfc:	48 01 d0             	add    %rdx,%rax
ffffffff80023bff:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
ffffffff80023c03:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80023c07:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff80023c0b:	48 39 c2             	cmp    %rax,%rdx
ffffffff80023c0e:	76 07                	jbe    ffffffff80023c17 <ZydisStringAppend.lto_priv.0+0x5f>
ffffffff80023c10:	b8 09 00 10 80       	mov    $0x80100009,%eax
ffffffff80023c15:	eb 74                	jmp    ffffffff80023c8b <ZydisStringAppend.lto_priv.0+0xd3>
ffffffff80023c17:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80023c1b:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff80023c1f:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
ffffffff80023c23:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80023c27:	48 8b 48 38          	mov    0x38(%rax),%rcx
ffffffff80023c2b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80023c2f:	48 8b 70 38          	mov    0x38(%rax),%rsi
ffffffff80023c33:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80023c37:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff80023c3b:	48 83 e8 01          	sub    $0x1,%rax
ffffffff80023c3f:	48 01 f0             	add    %rsi,%rax
ffffffff80023c42:	48 89 ce             	mov    %rcx,%rsi
ffffffff80023c45:	48 89 c7             	mov    %rax,%rdi
ffffffff80023c48:	e8 db fe ff ff       	call   ffffffff80023b28 <ZYAN_MEMCPY.lto_priv.5>
ffffffff80023c4d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80023c51:	48 8b 50 18          	mov    0x18(%rax),%rdx
ffffffff80023c55:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80023c59:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff80023c5d:	48 01 d0             	add    %rdx,%rax
ffffffff80023c60:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
ffffffff80023c64:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80023c68:	48 89 50 18          	mov    %rdx,0x18(%rax)
ffffffff80023c6c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80023c70:	48 8b 50 38          	mov    0x38(%rax),%rdx
ffffffff80023c74:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80023c78:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff80023c7c:	48 83 e8 01          	sub    $0x1,%rax
ffffffff80023c80:	48 01 d0             	add    %rdx,%rax
ffffffff80023c83:	c6 00 00             	movb   $0x0,(%rax)
ffffffff80023c86:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff80023c8b:	c9                   	leave  
ffffffff80023c8c:	c3                   	ret    

ffffffff80023c8d <ZydisStringAppendShort.lto_priv.0>:
ffffffff80023c8d:	55                   	push   %rbp
ffffffff80023c8e:	48 89 e5             	mov    %rsp,%rbp
ffffffff80023c91:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff80023c95:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff80023c99:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff80023c9d:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff80023ca2:	74 05                	je     ffffffff80023ca9 <ZydisStringAppendShort.lto_priv.0+0x1c>
ffffffff80023ca4:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
ffffffff80023ca9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80023cad:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff80023cb1:	48 85 c0             	test   %rax,%rax
ffffffff80023cb4:	74 0a                	je     ffffffff80023cc0 <ZydisStringAppendShort.lto_priv.0+0x33>
ffffffff80023cb6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80023cba:	0f b6 40 08          	movzbl 0x8(%rax),%eax
ffffffff80023cbe:	84 c0                	test   %al,%al
ffffffff80023cc0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80023cc4:	48 8b 50 18          	mov    0x18(%rax),%rdx
ffffffff80023cc8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80023ccc:	0f b6 40 08          	movzbl 0x8(%rax),%eax
ffffffff80023cd0:	0f b6 c0             	movzbl %al,%eax
ffffffff80023cd3:	48 01 c2             	add    %rax,%rdx
ffffffff80023cd6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80023cda:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff80023cde:	48 39 c2             	cmp    %rax,%rdx
ffffffff80023ce1:	76 07                	jbe    ffffffff80023cea <ZydisStringAppendShort.lto_priv.0+0x5d>
ffffffff80023ce3:	b8 09 00 10 80       	mov    $0x80100009,%eax
ffffffff80023ce8:	eb 5b                	jmp    ffffffff80023d45 <ZydisStringAppendShort.lto_priv.0+0xb8>
ffffffff80023cea:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80023cee:	0f b6 40 08          	movzbl 0x8(%rax),%eax
ffffffff80023cf2:	0f b6 c0             	movzbl %al,%eax
ffffffff80023cf5:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffff80023cf9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80023cfd:	48 8b 08             	mov    (%rax),%rcx
ffffffff80023d00:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80023d04:	48 8b 70 38          	mov    0x38(%rax),%rsi
ffffffff80023d08:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80023d0c:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff80023d10:	48 83 e8 01          	sub    $0x1,%rax
ffffffff80023d14:	48 01 f0             	add    %rsi,%rax
ffffffff80023d17:	48 89 ce             	mov    %rcx,%rsi
ffffffff80023d1a:	48 89 c7             	mov    %rax,%rdi
ffffffff80023d1d:	e8 06 fe ff ff       	call   ffffffff80023b28 <ZYAN_MEMCPY.lto_priv.5>
ffffffff80023d22:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80023d26:	48 8b 50 18          	mov    0x18(%rax),%rdx
ffffffff80023d2a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80023d2e:	0f b6 40 08          	movzbl 0x8(%rax),%eax
ffffffff80023d32:	0f b6 c0             	movzbl %al,%eax
ffffffff80023d35:	48 01 c2             	add    %rax,%rdx
ffffffff80023d38:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80023d3c:	48 89 50 18          	mov    %rdx,0x18(%rax)
ffffffff80023d40:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff80023d45:	c9                   	leave  
ffffffff80023d46:	c3                   	ret    

ffffffff80023d47 <ZydisStringAppendShortCase.lto_priv.0>:
ffffffff80023d47:	55                   	push   %rbp
ffffffff80023d48:	48 89 e5             	mov    %rsp,%rbp
ffffffff80023d4b:	48 83 ec 68          	sub    $0x68,%rsp
ffffffff80023d4f:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
ffffffff80023d53:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
ffffffff80023d57:	89 55 9c             	mov    %edx,-0x64(%rbp)
ffffffff80023d5a:	48 83 7d a8 00       	cmpq   $0x0,-0x58(%rbp)
ffffffff80023d5f:	74 05                	je     ffffffff80023d66 <ZydisStringAppendShortCase.lto_priv.0+0x1f>
ffffffff80023d61:	48 83 7d a0 00       	cmpq   $0x0,-0x60(%rbp)
ffffffff80023d66:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff80023d6a:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff80023d6e:	48 85 c0             	test   %rax,%rax
ffffffff80023d71:	74 0a                	je     ffffffff80023d7d <ZydisStringAppendShortCase.lto_priv.0+0x36>
ffffffff80023d73:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff80023d77:	0f b6 40 08          	movzbl 0x8(%rax),%eax
ffffffff80023d7b:	84 c0                	test   %al,%al
ffffffff80023d7d:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff80023d81:	48 8b 50 18          	mov    0x18(%rax),%rdx
ffffffff80023d85:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff80023d89:	0f b6 40 08          	movzbl 0x8(%rax),%eax
ffffffff80023d8d:	0f b6 c0             	movzbl %al,%eax
ffffffff80023d90:	48 01 c2             	add    %rax,%rdx
ffffffff80023d93:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff80023d97:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff80023d9b:	48 39 c2             	cmp    %rax,%rdx
ffffffff80023d9e:	76 0a                	jbe    ffffffff80023daa <ZydisStringAppendShortCase.lto_priv.0+0x63>
ffffffff80023da0:	b8 09 00 10 80       	mov    $0x80100009,%eax
ffffffff80023da5:	e9 7e 01 00 00       	jmp    ffffffff80023f28 <ZydisStringAppendShortCase.lto_priv.0+0x1e1>
ffffffff80023daa:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff80023dae:	0f b6 40 08          	movzbl 0x8(%rax),%eax
ffffffff80023db2:	0f b6 c0             	movzbl %al,%eax
ffffffff80023db5:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffff80023db9:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff80023dbd:	48 8b 08             	mov    (%rax),%rcx
ffffffff80023dc0:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff80023dc4:	48 8b 70 38          	mov    0x38(%rax),%rsi
ffffffff80023dc8:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff80023dcc:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff80023dd0:	48 83 e8 01          	sub    $0x1,%rax
ffffffff80023dd4:	48 01 f0             	add    %rsi,%rax
ffffffff80023dd7:	48 89 ce             	mov    %rcx,%rsi
ffffffff80023dda:	48 89 c7             	mov    %rax,%rdi
ffffffff80023ddd:	e8 46 fd ff ff       	call   ffffffff80023b28 <ZYAN_MEMCPY.lto_priv.5>
ffffffff80023de2:	83 7d 9c 02          	cmpl   $0x2,-0x64(%rbp)
ffffffff80023de6:	0f 84 9a 00 00 00    	je     ffffffff80023e86 <ZydisStringAppendShortCase.lto_priv.0+0x13f>
ffffffff80023dec:	83 7d 9c 02          	cmpl   $0x2,-0x64(%rbp)
ffffffff80023df0:	0f 87 0c 01 00 00    	ja     ffffffff80023f02 <ZydisStringAppendShortCase.lto_priv.0+0x1bb>
ffffffff80023df6:	83 7d 9c 00          	cmpl   $0x0,-0x64(%rbp)
ffffffff80023dfa:	0f 84 04 01 00 00    	je     ffffffff80023f04 <ZydisStringAppendShortCase.lto_priv.0+0x1bd>
ffffffff80023e00:	83 7d 9c 01          	cmpl   $0x1,-0x64(%rbp)
ffffffff80023e04:	0f 85 f8 00 00 00    	jne    ffffffff80023f02 <ZydisStringAppendShortCase.lto_priv.0+0x1bb>
ffffffff80023e0a:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff80023e0e:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff80023e12:	48 83 e8 01          	sub    $0x1,%rax
ffffffff80023e16:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
ffffffff80023e1a:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff80023e1e:	0f b6 40 08          	movzbl 0x8(%rax),%eax
ffffffff80023e22:	0f b6 c0             	movzbl %al,%eax
ffffffff80023e25:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
ffffffff80023e29:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff80023e2d:	48 8b 50 38          	mov    0x38(%rax),%rdx
ffffffff80023e31:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff80023e35:	48 01 d0             	add    %rdx,%rax
ffffffff80023e38:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff80023e3c:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff80023e40:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff80023e44:	eb 2d                	jmp    ffffffff80023e73 <ZydisStringAppendShortCase.lto_priv.0+0x12c>
ffffffff80023e46:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80023e4a:	0f b6 00             	movzbl (%rax),%eax
ffffffff80023e4d:	88 45 b7             	mov    %al,-0x49(%rbp)
ffffffff80023e50:	80 7d b7 40          	cmpb   $0x40,-0x49(%rbp)
ffffffff80023e54:	7e 13                	jle    ffffffff80023e69 <ZydisStringAppendShortCase.lto_priv.0+0x122>
ffffffff80023e56:	80 7d b7 5a          	cmpb   $0x5a,-0x49(%rbp)
ffffffff80023e5a:	7f 0d                	jg     ffffffff80023e69 <ZydisStringAppendShortCase.lto_priv.0+0x122>
ffffffff80023e5c:	0f b6 45 b7          	movzbl -0x49(%rbp),%eax
ffffffff80023e60:	83 c8 20             	or     $0x20,%eax
ffffffff80023e63:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff80023e67:	88 02                	mov    %al,(%rdx)
ffffffff80023e69:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
ffffffff80023e6e:	48 83 45 f0 01       	addq   $0x1,-0x10(%rbp)
ffffffff80023e73:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
ffffffff80023e77:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff80023e7b:	48 01 d0             	add    %rdx,%rax
ffffffff80023e7e:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
ffffffff80023e82:	72 c2                	jb     ffffffff80023e46 <ZydisStringAppendShortCase.lto_priv.0+0xff>
ffffffff80023e84:	eb 7f                	jmp    ffffffff80023f05 <ZydisStringAppendShortCase.lto_priv.0+0x1be>
ffffffff80023e86:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff80023e8a:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff80023e8e:	48 83 e8 01          	sub    $0x1,%rax
ffffffff80023e92:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
ffffffff80023e96:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff80023e9a:	0f b6 40 08          	movzbl 0x8(%rax),%eax
ffffffff80023e9e:	0f b6 c0             	movzbl %al,%eax
ffffffff80023ea1:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
ffffffff80023ea5:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff80023ea9:	48 8b 50 38          	mov    0x38(%rax),%rdx
ffffffff80023ead:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80023eb1:	48 01 d0             	add    %rdx,%rax
ffffffff80023eb4:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff80023eb8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80023ebc:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff80023ec0:	eb 2d                	jmp    ffffffff80023eef <ZydisStringAppendShortCase.lto_priv.0+0x1a8>
ffffffff80023ec2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80023ec6:	0f b6 00             	movzbl (%rax),%eax
ffffffff80023ec9:	88 45 cf             	mov    %al,-0x31(%rbp)
ffffffff80023ecc:	80 7d cf 60          	cmpb   $0x60,-0x31(%rbp)
ffffffff80023ed0:	7e 13                	jle    ffffffff80023ee5 <ZydisStringAppendShortCase.lto_priv.0+0x19e>
ffffffff80023ed2:	80 7d cf 7a          	cmpb   $0x7a,-0x31(%rbp)
ffffffff80023ed6:	7f 0d                	jg     ffffffff80023ee5 <ZydisStringAppendShortCase.lto_priv.0+0x19e>
ffffffff80023ed8:	0f b6 45 cf          	movzbl -0x31(%rbp),%eax
ffffffff80023edc:	83 e0 df             	and    $0xffffffdf,%eax
ffffffff80023edf:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff80023ee3:	88 02                	mov    %al,(%rdx)
ffffffff80023ee5:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
ffffffff80023eea:	48 83 45 e0 01       	addq   $0x1,-0x20(%rbp)
ffffffff80023eef:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff80023ef3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff80023ef7:	48 01 d0             	add    %rdx,%rax
ffffffff80023efa:	48 39 45 e0          	cmp    %rax,-0x20(%rbp)
ffffffff80023efe:	72 c2                	jb     ffffffff80023ec2 <ZydisStringAppendShortCase.lto_priv.0+0x17b>
ffffffff80023f00:	eb 03                	jmp    ffffffff80023f05 <ZydisStringAppendShortCase.lto_priv.0+0x1be>
ffffffff80023f02:	eb fe                	jmp    ffffffff80023f02 <ZydisStringAppendShortCase.lto_priv.0+0x1bb>
ffffffff80023f04:	90                   	nop
ffffffff80023f05:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff80023f09:	48 8b 50 18          	mov    0x18(%rax),%rdx
ffffffff80023f0d:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff80023f11:	0f b6 40 08          	movzbl 0x8(%rax),%eax
ffffffff80023f15:	0f b6 c0             	movzbl %al,%eax
ffffffff80023f18:	48 01 c2             	add    %rax,%rdx
ffffffff80023f1b:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff80023f1f:	48 89 50 18          	mov    %rdx,0x18(%rax)
ffffffff80023f23:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff80023f28:	c9                   	leave  
ffffffff80023f29:	c3                   	ret    

ffffffff80023f2a <ZydisStringAppendDecS.lto_priv.0>:
ffffffff80023f2a:	55                   	push   %rbp
ffffffff80023f2b:	48 89 e5             	mov    %rsp,%rbp
ffffffff80023f2e:	53                   	push   %rbx
ffffffff80023f2f:	48 83 ec 48          	sub    $0x48,%rsp
ffffffff80023f33:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
ffffffff80023f37:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
ffffffff80023f3b:	89 c8                	mov    %ecx,%eax
ffffffff80023f3d:	4c 89 45 c0          	mov    %r8,-0x40(%rbp)
ffffffff80023f41:	4c 89 4d b8          	mov    %r9,-0x48(%rbp)
ffffffff80023f45:	88 55 cc             	mov    %dl,-0x34(%rbp)
ffffffff80023f48:	88 45 c8             	mov    %al,-0x38(%rbp)
ffffffff80023f4b:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
ffffffff80023f50:	0f 89 80 00 00 00    	jns    ffffffff80023fd6 <ZydisStringAppendDecS.lto_priv.0+0xac>
ffffffff80023f56:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80023f5a:	48 8d 15 ff 4a 08 00 	lea    0x84aff(%rip),%rdx        # ffffffff800a8a60 <str_sub.3.lto_priv.0>
ffffffff80023f61:	48 89 d6             	mov    %rdx,%rsi
ffffffff80023f64:	48 89 c7             	mov    %rax,%rdi
ffffffff80023f67:	e8 21 fd ff ff       	call   ffffffff80023c8d <ZydisStringAppendShort.lto_priv.0>
ffffffff80023f6c:	89 45 e8             	mov    %eax,-0x18(%rbp)
ffffffff80023f6f:	8b 45 e8             	mov    -0x18(%rbp),%eax
ffffffff80023f72:	85 c0                	test   %eax,%eax
ffffffff80023f74:	79 08                	jns    ffffffff80023f7e <ZydisStringAppendDecS.lto_priv.0+0x54>
ffffffff80023f76:	8b 45 e8             	mov    -0x18(%rbp),%eax
ffffffff80023f79:	e9 a5 00 00 00       	jmp    ffffffff80024023 <ZydisStringAppendDecS.lto_priv.0+0xf9>
ffffffff80023f7e:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
ffffffff80023f83:	74 22                	je     ffffffff80023fa7 <ZydisStringAppendDecS.lto_priv.0+0x7d>
ffffffff80023f85:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
ffffffff80023f89:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80023f8d:	48 89 d6             	mov    %rdx,%rsi
ffffffff80023f90:	48 89 c7             	mov    %rax,%rdi
ffffffff80023f93:	e8 20 fc ff ff       	call   ffffffff80023bb8 <ZydisStringAppend.lto_priv.0>
ffffffff80023f98:	89 45 e4             	mov    %eax,-0x1c(%rbp)
ffffffff80023f9b:	8b 45 e4             	mov    -0x1c(%rbp),%eax
ffffffff80023f9e:	85 c0                	test   %eax,%eax
ffffffff80023fa0:	79 05                	jns    ffffffff80023fa7 <ZydisStringAppendDecS.lto_priv.0+0x7d>
ffffffff80023fa2:	8b 45 e4             	mov    -0x1c(%rbp),%eax
ffffffff80023fa5:	eb 7c                	jmp    ffffffff80024023 <ZydisStringAppendDecS.lto_priv.0+0xf9>
ffffffff80023fa7:	0f b6 5d cc          	movzbl -0x34(%rbp),%ebx
ffffffff80023fab:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff80023faf:	48 89 c7             	mov    %rax,%rdi
ffffffff80023fb2:	e8 cb fb ff ff       	call   ffffffff80023b82 <ZyanAbsI64.lto_priv.1>
ffffffff80023fb7:	48 89 c6             	mov    %rax,%rsi
ffffffff80023fba:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
ffffffff80023fbe:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80023fc2:	49 89 d0             	mov    %rdx,%r8
ffffffff80023fc5:	b9 00 00 00 00       	mov    $0x0,%ecx
ffffffff80023fca:	89 da                	mov    %ebx,%edx
ffffffff80023fcc:	48 89 c7             	mov    %rax,%rdi
ffffffff80023fcf:	e8 59 20 00 00       	call   ffffffff8002602d <ZydisStringAppendDecU>
ffffffff80023fd4:	eb 4d                	jmp    ffffffff80024023 <ZydisStringAppendDecS.lto_priv.0+0xf9>
ffffffff80023fd6:	80 7d c8 00          	cmpb   $0x0,-0x38(%rbp)
ffffffff80023fda:	74 25                	je     ffffffff80024001 <ZydisStringAppendDecS.lto_priv.0+0xd7>
ffffffff80023fdc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80023fe0:	48 8d 15 89 4a 08 00 	lea    0x84a89(%rip),%rdx        # ffffffff800a8a70 <str_add.2.lto_priv.0>
ffffffff80023fe7:	48 89 d6             	mov    %rdx,%rsi
ffffffff80023fea:	48 89 c7             	mov    %rax,%rdi
ffffffff80023fed:	e8 9b fc ff ff       	call   ffffffff80023c8d <ZydisStringAppendShort.lto_priv.0>
ffffffff80023ff2:	89 45 ec             	mov    %eax,-0x14(%rbp)
ffffffff80023ff5:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff80023ff8:	85 c0                	test   %eax,%eax
ffffffff80023ffa:	79 05                	jns    ffffffff80024001 <ZydisStringAppendDecS.lto_priv.0+0xd7>
ffffffff80023ffc:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff80023fff:	eb 22                	jmp    ffffffff80024023 <ZydisStringAppendDecS.lto_priv.0+0xf9>
ffffffff80024001:	0f b6 45 cc          	movzbl -0x34(%rbp),%eax
ffffffff80024005:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
ffffffff80024009:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
ffffffff8002400d:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
ffffffff80024011:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
ffffffff80024015:	49 89 c8             	mov    %rcx,%r8
ffffffff80024018:	48 89 d1             	mov    %rdx,%rcx
ffffffff8002401b:	89 c2                	mov    %eax,%edx
ffffffff8002401d:	e8 0b 20 00 00       	call   ffffffff8002602d <ZydisStringAppendDecU>
ffffffff80024022:	90                   	nop
ffffffff80024023:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
ffffffff80024027:	c9                   	leave  
ffffffff80024028:	c3                   	ret    

ffffffff80024029 <ZydisStringAppendHexS.lto_priv.0>:
ffffffff80024029:	55                   	push   %rbp
ffffffff8002402a:	48 89 e5             	mov    %rsp,%rbp
ffffffff8002402d:	41 55                	push   %r13
ffffffff8002402f:	41 54                	push   %r12
ffffffff80024031:	53                   	push   %rbx
ffffffff80024032:	48 83 ec 38          	sub    $0x38,%rsp
ffffffff80024036:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
ffffffff8002403a:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
ffffffff8002403e:	89 c8                	mov    %ecx,%eax
ffffffff80024040:	44 89 c6             	mov    %r8d,%esi
ffffffff80024043:	44 89 c9             	mov    %r9d,%ecx
ffffffff80024046:	88 55 bc             	mov    %dl,-0x44(%rbp)
ffffffff80024049:	88 45 b8             	mov    %al,-0x48(%rbp)
ffffffff8002404c:	89 f0                	mov    %esi,%eax
ffffffff8002404e:	88 45 b4             	mov    %al,-0x4c(%rbp)
ffffffff80024051:	89 c8                	mov    %ecx,%eax
ffffffff80024053:	88 45 b0             	mov    %al,-0x50(%rbp)
ffffffff80024056:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
ffffffff8002405b:	0f 89 95 00 00 00    	jns    ffffffff800240f6 <ZydisStringAppendHexS.lto_priv.0+0xcd>
ffffffff80024061:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80024065:	48 8d 15 14 4a 08 00 	lea    0x84a14(%rip),%rdx        # ffffffff800a8a80 <str_sub.1.lto_priv.0>
ffffffff8002406c:	48 89 d6             	mov    %rdx,%rsi
ffffffff8002406f:	48 89 c7             	mov    %rax,%rdi
ffffffff80024072:	e8 16 fc ff ff       	call   ffffffff80023c8d <ZydisStringAppendShort.lto_priv.0>
ffffffff80024077:	89 45 d8             	mov    %eax,-0x28(%rbp)
ffffffff8002407a:	8b 45 d8             	mov    -0x28(%rbp),%eax
ffffffff8002407d:	85 c0                	test   %eax,%eax
ffffffff8002407f:	79 08                	jns    ffffffff80024089 <ZydisStringAppendHexS.lto_priv.0+0x60>
ffffffff80024081:	8b 45 d8             	mov    -0x28(%rbp),%eax
ffffffff80024084:	e9 c8 00 00 00       	jmp    ffffffff80024151 <ZydisStringAppendHexS.lto_priv.0+0x128>
ffffffff80024089:	48 83 7d 10 00       	cmpq   $0x0,0x10(%rbp)
ffffffff8002408e:	74 22                	je     ffffffff800240b2 <ZydisStringAppendHexS.lto_priv.0+0x89>
ffffffff80024090:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80024094:	48 8b 75 10          	mov    0x10(%rbp),%rsi
ffffffff80024098:	48 89 c7             	mov    %rax,%rdi
ffffffff8002409b:	e8 18 fb ff ff       	call   ffffffff80023bb8 <ZydisStringAppend.lto_priv.0>
ffffffff800240a0:	89 45 d4             	mov    %eax,-0x2c(%rbp)
ffffffff800240a3:	8b 45 d4             	mov    -0x2c(%rbp),%eax
ffffffff800240a6:	85 c0                	test   %eax,%eax
ffffffff800240a8:	79 08                	jns    ffffffff800240b2 <ZydisStringAppendHexS.lto_priv.0+0x89>
ffffffff800240aa:	8b 45 d4             	mov    -0x2c(%rbp),%eax
ffffffff800240ad:	e9 9f 00 00 00       	jmp    ffffffff80024151 <ZydisStringAppendHexS.lto_priv.0+0x128>
ffffffff800240b2:	44 0f b6 6d b4       	movzbl -0x4c(%rbp),%r13d
ffffffff800240b7:	44 0f b6 65 b8       	movzbl -0x48(%rbp),%r12d
ffffffff800240bc:	0f b6 5d bc          	movzbl -0x44(%rbp),%ebx
ffffffff800240c0:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff800240c4:	48 89 c7             	mov    %rax,%rdi
ffffffff800240c7:	e8 b6 fa ff ff       	call   ffffffff80023b82 <ZyanAbsI64.lto_priv.1>
ffffffff800240cc:	48 89 c6             	mov    %rax,%rsi
ffffffff800240cf:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff800240d3:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff800240d7:	ff 75 18             	push   0x18(%rbp)
ffffffff800240da:	41 b9 00 00 00 00    	mov    $0x0,%r9d
ffffffff800240e0:	45 89 e8             	mov    %r13d,%r8d
ffffffff800240e3:	44 89 e1             	mov    %r12d,%ecx
ffffffff800240e6:	89 da                	mov    %ebx,%edx
ffffffff800240e8:	48 89 c7             	mov    %rax,%rdi
ffffffff800240eb:	e8 cf 1f 00 00       	call   ffffffff800260bf <ZydisStringAppendHexU>
ffffffff800240f0:	48 83 c4 10          	add    $0x10,%rsp
ffffffff800240f4:	eb 5b                	jmp    ffffffff80024151 <ZydisStringAppendHexS.lto_priv.0+0x128>
ffffffff800240f6:	80 7d b0 00          	cmpb   $0x0,-0x50(%rbp)
ffffffff800240fa:	74 25                	je     ffffffff80024121 <ZydisStringAppendHexS.lto_priv.0+0xf8>
ffffffff800240fc:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80024100:	48 8d 15 89 49 08 00 	lea    0x84989(%rip),%rdx        # ffffffff800a8a90 <str_add.0.lto_priv.0>
ffffffff80024107:	48 89 d6             	mov    %rdx,%rsi
ffffffff8002410a:	48 89 c7             	mov    %rax,%rdi
ffffffff8002410d:	e8 7b fb ff ff       	call   ffffffff80023c8d <ZydisStringAppendShort.lto_priv.0>
ffffffff80024112:	89 45 dc             	mov    %eax,-0x24(%rbp)
ffffffff80024115:	8b 45 dc             	mov    -0x24(%rbp),%eax
ffffffff80024118:	85 c0                	test   %eax,%eax
ffffffff8002411a:	79 05                	jns    ffffffff80024121 <ZydisStringAppendHexS.lto_priv.0+0xf8>
ffffffff8002411c:	8b 45 dc             	mov    -0x24(%rbp),%eax
ffffffff8002411f:	eb 30                	jmp    ffffffff80024151 <ZydisStringAppendHexS.lto_priv.0+0x128>
ffffffff80024121:	0f b6 4d b4          	movzbl -0x4c(%rbp),%ecx
ffffffff80024125:	0f b6 55 b8          	movzbl -0x48(%rbp),%edx
ffffffff80024129:	0f b6 45 bc          	movzbl -0x44(%rbp),%eax
ffffffff8002412d:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
ffffffff80024131:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
ffffffff80024135:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80024139:	ff 75 18             	push   0x18(%rbp)
ffffffff8002413c:	4c 8b 4d 10          	mov    0x10(%rbp),%r9
ffffffff80024140:	41 89 c8             	mov    %ecx,%r8d
ffffffff80024143:	89 d1                	mov    %edx,%ecx
ffffffff80024145:	89 c2                	mov    %eax,%edx
ffffffff80024147:	e8 73 1f 00 00       	call   ffffffff800260bf <ZydisStringAppendHexU>
ffffffff8002414c:	48 83 c4 10          	add    $0x10,%rsp
ffffffff80024150:	90                   	nop
ffffffff80024151:	48 8d 65 e8          	lea    -0x18(%rbp),%rsp
ffffffff80024155:	5b                   	pop    %rbx
ffffffff80024156:	41 5c                	pop    %r12
ffffffff80024158:	41 5d                	pop    %r13
ffffffff8002415a:	5d                   	pop    %rbp
ffffffff8002415b:	c3                   	ret    

ffffffff8002415c <ZydisFormatterBufferAppendPredefined.lto_priv.0>:
ffffffff8002415c:	55                   	push   %rbp
ffffffff8002415d:	48 89 e5             	mov    %rsp,%rbp
ffffffff80024160:	48 83 ec 30          	sub    $0x30,%rsp
ffffffff80024164:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
ffffffff80024168:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
ffffffff8002416c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80024170:	48 8b 40 28          	mov    0x28(%rax),%rax
ffffffff80024174:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff80024178:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff8002417d:	74 08                	je     ffffffff80024187 <ZydisFormatterBufferAppendPredefined.lto_priv.0+0x2b>
ffffffff8002417f:	48 81 7d f8 ff 00 00 	cmpq   $0xff,-0x8(%rbp)
ffffffff80024186:	00 
ffffffff80024187:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8002418b:	48 8b 50 08          	mov    0x8(%rax),%rdx
ffffffff8002418f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff80024193:	0f b6 00             	movzbl (%rax),%eax
ffffffff80024196:	0f b6 c0             	movzbl %al,%eax
ffffffff80024199:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
ffffffff8002419d:	48 01 c8             	add    %rcx,%rax
ffffffff800241a0:	48 39 c2             	cmp    %rax,%rdx
ffffffff800241a3:	77 0a                	ja     ffffffff800241af <ZydisFormatterBufferAppendPredefined.lto_priv.0+0x53>
ffffffff800241a5:	b8 09 00 10 80       	mov    $0x80100009,%eax
ffffffff800241aa:	e9 ce 00 00 00       	jmp    ffffffff8002427d <ZydisFormatterBufferAppendPredefined.lto_priv.0+0x121>
ffffffff800241af:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff800241b3:	48 8b 40 48          	mov    0x48(%rax),%rax
ffffffff800241b7:	48 83 e8 02          	sub    $0x2,%rax
ffffffff800241bb:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff800241bf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff800241c3:	89 c2                	mov    %eax,%edx
ffffffff800241c5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff800241c9:	88 50 01             	mov    %dl,0x1(%rax)
ffffffff800241cc:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff800241d0:	0f b6 00             	movzbl (%rax),%eax
ffffffff800241d3:	0f b6 c0             	movzbl %al,%eax
ffffffff800241d6:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
ffffffff800241da:	48 8d 72 02          	lea    0x2(%rdx),%rsi
ffffffff800241de:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff800241e2:	48 8b 4a 48          	mov    0x48(%rdx),%rcx
ffffffff800241e6:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff800241ea:	48 01 d1             	add    %rdx,%rcx
ffffffff800241ed:	48 89 c2             	mov    %rax,%rdx
ffffffff800241f0:	48 89 cf             	mov    %rcx,%rdi
ffffffff800241f3:	e8 30 f9 ff ff       	call   ffffffff80023b28 <ZYAN_MEMCPY.lto_priv.5>
ffffffff800241f8:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff800241fc:	0f b6 40 01          	movzbl 0x1(%rax),%eax
ffffffff80024200:	0f b6 c0             	movzbl %al,%eax
ffffffff80024203:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff80024207:	48 01 d0             	add    %rdx,%rax
ffffffff8002420a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff8002420e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80024212:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff80024216:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
ffffffff8002421a:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff8002421e:	48 89 42 08          	mov    %rax,0x8(%rdx)
ffffffff80024222:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80024226:	48 8b 50 48          	mov    0x48(%rax),%rdx
ffffffff8002422a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002422e:	48 01 c2             	add    %rax,%rdx
ffffffff80024231:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80024235:	48 89 50 48          	mov    %rdx,0x48(%rax)
ffffffff80024239:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8002423d:	0f b6 00             	movzbl (%rax),%eax
ffffffff80024240:	0f b6 d0             	movzbl %al,%edx
ffffffff80024243:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff80024247:	0f b6 40 01          	movzbl 0x1(%rax),%eax
ffffffff8002424b:	0f b6 c8             	movzbl %al,%ecx
ffffffff8002424e:	89 d0                	mov    %edx,%eax
ffffffff80024250:	29 c8                	sub    %ecx,%eax
ffffffff80024252:	48 98                	cltq   
ffffffff80024254:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff80024258:	48 89 42 28          	mov    %rax,0x28(%rdx)
ffffffff8002425c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80024260:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff80024264:	ba ff 00 00 00       	mov    $0xff,%edx
ffffffff80024269:	48 39 d0             	cmp    %rdx,%rax
ffffffff8002426c:	48 0f 47 c2          	cmova  %rdx,%rax
ffffffff80024270:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff80024274:	48 89 42 30          	mov    %rax,0x30(%rdx)
ffffffff80024278:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff8002427d:	c9                   	leave  
ffffffff8002427e:	c3                   	ret    

ffffffff8002427f <ZydisFormatterATTFormatInstruction>:
ffffffff8002427f:	f3 0f 1e fa          	endbr64 
ffffffff80024283:	55                   	push   %rbp
ffffffff80024284:	48 89 e5             	mov    %rsp,%rbp
ffffffff80024287:	48 81 ec 90 00 00 00 	sub    $0x90,%rsp
ffffffff8002428e:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
ffffffff80024292:	48 89 75 80          	mov    %rsi,-0x80(%rbp)
ffffffff80024296:	48 89 95 78 ff ff ff 	mov    %rdx,-0x88(%rbp)
ffffffff8002429d:	48 8b 45 88          	mov    -0x78(%rbp),%rax
ffffffff800242a1:	4c 8b 80 38 02 00 00 	mov    0x238(%rax),%r8
ffffffff800242a8:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
ffffffff800242af:	48 8b 4d 80          	mov    -0x80(%rbp),%rcx
ffffffff800242b3:	48 8b 45 88          	mov    -0x78(%rbp),%rax
ffffffff800242b7:	48 89 ce             	mov    %rcx,%rsi
ffffffff800242ba:	48 89 c7             	mov    %rax,%rdi
ffffffff800242bd:	41 ff d0             	call   *%r8
ffffffff800242c0:	89 45 dc             	mov    %eax,-0x24(%rbp)
ffffffff800242c3:	8b 45 dc             	mov    -0x24(%rbp),%eax
ffffffff800242c6:	85 c0                	test   %eax,%eax
ffffffff800242c8:	79 08                	jns    ffffffff800242d2 <ZydisFormatterATTFormatInstruction+0x53>
ffffffff800242ca:	8b 45 dc             	mov    -0x24(%rbp),%eax
ffffffff800242cd:	e9 a4 06 00 00       	jmp    ffffffff80024976 <ZydisFormatterATTFormatInstruction+0x6f7>
ffffffff800242d2:	48 8b 45 88          	mov    -0x78(%rbp),%rax
ffffffff800242d6:	4c 8b 80 f8 01 00 00 	mov    0x1f8(%rax),%r8
ffffffff800242dd:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
ffffffff800242e4:	48 8b 4d 80          	mov    -0x80(%rbp),%rcx
ffffffff800242e8:	48 8b 45 88          	mov    -0x78(%rbp),%rax
ffffffff800242ec:	48 89 ce             	mov    %rcx,%rsi
ffffffff800242ef:	48 89 c7             	mov    %rax,%rdi
ffffffff800242f2:	41 ff d0             	call   *%r8
ffffffff800242f5:	89 45 d8             	mov    %eax,-0x28(%rbp)
ffffffff800242f8:	8b 45 d8             	mov    -0x28(%rbp),%eax
ffffffff800242fb:	85 c0                	test   %eax,%eax
ffffffff800242fd:	79 08                	jns    ffffffff80024307 <ZydisFormatterATTFormatInstruction+0x88>
ffffffff800242ff:	8b 45 d8             	mov    -0x28(%rbp),%eax
ffffffff80024302:	e9 6f 06 00 00       	jmp    ffffffff80024976 <ZydisFormatterATTFormatInstruction+0x6f7>
ffffffff80024307:	48 8b 45 80          	mov    -0x80(%rbp),%rax
ffffffff8002430b:	0f b6 00             	movzbl (%rax),%eax
ffffffff8002430e:	84 c0                	test   %al,%al
ffffffff80024310:	74 0e                	je     ffffffff80024320 <ZydisFormatterATTFormatInstruction+0xa1>
ffffffff80024312:	48 8b 45 80          	mov    -0x80(%rbp),%rax
ffffffff80024316:	48 8b 40 48          	mov    0x48(%rax),%rax
ffffffff8002431a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8002431e:	eb 0c                	jmp    ffffffff8002432c <ZydisFormatterATTFormatInstruction+0xad>
ffffffff80024320:	48 8b 45 80          	mov    -0x80(%rbp),%rax
ffffffff80024324:	48 8b 40 28          	mov    0x28(%rax),%rax
ffffffff80024328:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8002432c:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
ffffffff80024333:	48 8b 00             	mov    (%rax),%rax
ffffffff80024336:	0f b6 40 19          	movzbl 0x19(%rax),%eax
ffffffff8002433a:	83 e8 01             	sub    $0x1,%eax
ffffffff8002433d:	88 45 d7             	mov    %al,-0x29(%rbp)
ffffffff80024340:	0f b6 45 d7          	movzbl -0x29(%rbp),%eax
ffffffff80024344:	88 45 f7             	mov    %al,-0x9(%rbp)
ffffffff80024347:	e9 1a 06 00 00       	jmp    ffffffff80024966 <ZydisFormatterATTFormatInstruction+0x6e7>
ffffffff8002434c:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
ffffffff80024353:	48 8b 50 08          	mov    0x8(%rax),%rdx
ffffffff80024357:	48 0f be 45 f7       	movsbq -0x9(%rbp),%rax
ffffffff8002435c:	48 6b c0 68          	imul   $0x68,%rax,%rax
ffffffff80024360:	48 01 d0             	add    %rdx,%rax
ffffffff80024363:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
ffffffff80024367:	80 7d f7 01          	cmpb   $0x1,-0x9(%rbp)
ffffffff8002436b:	75 1c                	jne    ffffffff80024389 <ZydisFormatterATTFormatInstruction+0x10a>
ffffffff8002436d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80024371:	8b 40 04             	mov    0x4(%rax),%eax
ffffffff80024374:	83 f8 01             	cmp    $0x1,%eax
ffffffff80024377:	75 10                	jne    ffffffff80024389 <ZydisFormatterATTFormatInstruction+0x10a>
ffffffff80024379:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8002437d:	8b 40 10             	mov    0x10(%rax),%eax
ffffffff80024380:	83 f8 06             	cmp    $0x6,%eax
ffffffff80024383:	0f 84 c9 05 00 00    	je     ffffffff80024952 <ZydisFormatterATTFormatInstruction+0x6d3>
ffffffff80024389:	48 8b 45 80          	mov    -0x80(%rbp),%rax
ffffffff8002438d:	0f b6 00             	movzbl (%rax),%eax
ffffffff80024390:	84 c0                	test   %al,%al
ffffffff80024392:	74 0e                	je     ffffffff800243a2 <ZydisFormatterATTFormatInstruction+0x123>
ffffffff80024394:	48 8b 45 80          	mov    -0x80(%rbp),%rax
ffffffff80024398:	48 8b 40 48          	mov    0x48(%rax),%rax
ffffffff8002439c:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff800243a0:	eb 0c                	jmp    ffffffff800243ae <ZydisFormatterATTFormatInstruction+0x12f>
ffffffff800243a2:	48 8b 45 80          	mov    -0x80(%rbp),%rax
ffffffff800243a6:	48 8b 40 28          	mov    0x28(%rax),%rax
ffffffff800243aa:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff800243ae:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800243b2:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
ffffffff800243b6:	74 63                	je     ffffffff8002441b <ZydisFormatterATTFormatInstruction+0x19c>
ffffffff800243b8:	48 8b 45 80          	mov    -0x80(%rbp),%rax
ffffffff800243bc:	0f b6 00             	movzbl (%rax),%eax
ffffffff800243bf:	84 c0                	test   %al,%al
ffffffff800243c1:	74 2c                	je     ffffffff800243ef <ZydisFormatterATTFormatInstruction+0x170>
ffffffff800243c3:	48 8d 15 e6 a0 01 00 	lea    0x1a0e6(%rip),%rdx        # ffffffff8003e4b0 <TOK_DATA_DELIM_OPERAND.lto_priv.0>
ffffffff800243ca:	48 8b 45 80          	mov    -0x80(%rbp),%rax
ffffffff800243ce:	48 89 d6             	mov    %rdx,%rsi
ffffffff800243d1:	48 89 c7             	mov    %rax,%rdi
ffffffff800243d4:	e8 83 fd ff ff       	call   ffffffff8002415c <ZydisFormatterBufferAppendPredefined.lto_priv.0>
ffffffff800243d9:	89 45 b8             	mov    %eax,-0x48(%rbp)
ffffffff800243dc:	8b 45 b8             	mov    -0x48(%rbp),%eax
ffffffff800243df:	85 c0                	test   %eax,%eax
ffffffff800243e1:	0f 89 93 00 00 00    	jns    ffffffff8002447a <ZydisFormatterATTFormatInstruction+0x1fb>
ffffffff800243e7:	8b 45 b8             	mov    -0x48(%rbp),%eax
ffffffff800243ea:	e9 87 05 00 00       	jmp    ffffffff80024976 <ZydisFormatterATTFormatInstruction+0x6f7>
ffffffff800243ef:	48 8b 45 80          	mov    -0x80(%rbp),%rax
ffffffff800243f3:	48 83 c0 10          	add    $0x10,%rax
ffffffff800243f7:	48 8d 15 da 40 08 00 	lea    0x840da(%rip),%rdx        # ffffffff800a84d8 <STR_DELIM_OPERAND.lto_priv.0>
ffffffff800243fe:	48 89 d6             	mov    %rdx,%rsi
ffffffff80024401:	48 89 c7             	mov    %rax,%rdi
ffffffff80024404:	e8 84 f8 ff ff       	call   ffffffff80023c8d <ZydisStringAppendShort.lto_priv.0>
ffffffff80024409:	89 45 bc             	mov    %eax,-0x44(%rbp)
ffffffff8002440c:	8b 45 bc             	mov    -0x44(%rbp),%eax
ffffffff8002440f:	85 c0                	test   %eax,%eax
ffffffff80024411:	79 67                	jns    ffffffff8002447a <ZydisFormatterATTFormatInstruction+0x1fb>
ffffffff80024413:	8b 45 bc             	mov    -0x44(%rbp),%eax
ffffffff80024416:	e9 5b 05 00 00       	jmp    ffffffff80024976 <ZydisFormatterATTFormatInstruction+0x6f7>
ffffffff8002441b:	48 8b 45 80          	mov    -0x80(%rbp),%rax
ffffffff8002441f:	0f b6 00             	movzbl (%rax),%eax
ffffffff80024422:	84 c0                	test   %al,%al
ffffffff80024424:	74 28                	je     ffffffff8002444e <ZydisFormatterATTFormatInstruction+0x1cf>
ffffffff80024426:	48 8d 15 7b a0 01 00 	lea    0x1a07b(%rip),%rdx        # ffffffff8003e4a8 <TOK_DATA_DELIM_MNEMONIC.lto_priv.0>
ffffffff8002442d:	48 8b 45 80          	mov    -0x80(%rbp),%rax
ffffffff80024431:	48 89 d6             	mov    %rdx,%rsi
ffffffff80024434:	48 89 c7             	mov    %rax,%rdi
ffffffff80024437:	e8 20 fd ff ff       	call   ffffffff8002415c <ZydisFormatterBufferAppendPredefined.lto_priv.0>
ffffffff8002443c:	89 45 c0             	mov    %eax,-0x40(%rbp)
ffffffff8002443f:	8b 45 c0             	mov    -0x40(%rbp),%eax
ffffffff80024442:	85 c0                	test   %eax,%eax
ffffffff80024444:	79 34                	jns    ffffffff8002447a <ZydisFormatterATTFormatInstruction+0x1fb>
ffffffff80024446:	8b 45 c0             	mov    -0x40(%rbp),%eax
ffffffff80024449:	e9 28 05 00 00       	jmp    ffffffff80024976 <ZydisFormatterATTFormatInstruction+0x6f7>
ffffffff8002444e:	48 8b 45 80          	mov    -0x80(%rbp),%rax
ffffffff80024452:	48 83 c0 10          	add    $0x10,%rax
ffffffff80024456:	48 8d 15 63 40 08 00 	lea    0x84063(%rip),%rdx        # ffffffff800a84c0 <STR_DELIM_MNEMONIC.lto_priv.0>
ffffffff8002445d:	48 89 d6             	mov    %rdx,%rsi
ffffffff80024460:	48 89 c7             	mov    %rax,%rdi
ffffffff80024463:	e8 25 f8 ff ff       	call   ffffffff80023c8d <ZydisStringAppendShort.lto_priv.0>
ffffffff80024468:	89 45 c4             	mov    %eax,-0x3c(%rbp)
ffffffff8002446b:	8b 45 c4             	mov    -0x3c(%rbp),%eax
ffffffff8002446e:	85 c0                	test   %eax,%eax
ffffffff80024470:	79 08                	jns    ffffffff8002447a <ZydisFormatterATTFormatInstruction+0x1fb>
ffffffff80024472:	8b 45 c4             	mov    -0x3c(%rbp),%eax
ffffffff80024475:	e9 fc 04 00 00       	jmp    ffffffff80024976 <ZydisFormatterATTFormatInstruction+0x6f7>
ffffffff8002447a:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
ffffffff80024481:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
ffffffff80024485:	48 89 50 10          	mov    %rdx,0x10(%rax)
ffffffff80024489:	48 8b 45 88          	mov    -0x78(%rbp),%rax
ffffffff8002448d:	48 8b 80 c8 01 00 00 	mov    0x1c8(%rax),%rax
ffffffff80024494:	48 85 c0             	test   %rax,%rax
ffffffff80024497:	74 67                	je     ffffffff80024500 <ZydisFormatterATTFormatInstruction+0x281>
ffffffff80024499:	48 8b 45 88          	mov    -0x78(%rbp),%rax
ffffffff8002449d:	4c 8b 80 c8 01 00 00 	mov    0x1c8(%rax),%r8
ffffffff800244a4:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
ffffffff800244ab:	48 8b 4d 80          	mov    -0x80(%rbp),%rcx
ffffffff800244af:	48 8b 45 88          	mov    -0x78(%rbp),%rax
ffffffff800244b3:	48 89 ce             	mov    %rcx,%rsi
ffffffff800244b6:	48 89 c7             	mov    %rax,%rdi
ffffffff800244b9:	41 ff d0             	call   *%r8
ffffffff800244bc:	89 45 e4             	mov    %eax,-0x1c(%rbp)
ffffffff800244bf:	81 7d e4 0b 00 20 00 	cmpl   $0x20000b,-0x1c(%rbp)
ffffffff800244c6:	75 29                	jne    ffffffff800244f1 <ZydisFormatterATTFormatInstruction+0x272>
ffffffff800244c8:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff800244cc:	48 8b 45 80          	mov    -0x80(%rbp),%rax
ffffffff800244d0:	48 89 d6             	mov    %rdx,%rsi
ffffffff800244d3:	48 89 c7             	mov    %rax,%rdi
ffffffff800244d6:	e8 b1 17 01 00       	call   ffffffff80035c8c <ZydisFormatterBufferRestore>
ffffffff800244db:	89 45 b4             	mov    %eax,-0x4c(%rbp)
ffffffff800244de:	8b 45 b4             	mov    -0x4c(%rbp),%eax
ffffffff800244e1:	85 c0                	test   %eax,%eax
ffffffff800244e3:	0f 89 6c 04 00 00    	jns    ffffffff80024955 <ZydisFormatterATTFormatInstruction+0x6d6>
ffffffff800244e9:	8b 45 b4             	mov    -0x4c(%rbp),%eax
ffffffff800244ec:	e9 85 04 00 00       	jmp    ffffffff80024976 <ZydisFormatterATTFormatInstruction+0x6f7>
ffffffff800244f1:	8b 45 e4             	mov    -0x1c(%rbp),%eax
ffffffff800244f4:	85 c0                	test   %eax,%eax
ffffffff800244f6:	79 08                	jns    ffffffff80024500 <ZydisFormatterATTFormatInstruction+0x281>
ffffffff800244f8:	8b 45 e4             	mov    -0x1c(%rbp),%eax
ffffffff800244fb:	e9 76 04 00 00       	jmp    ffffffff80024976 <ZydisFormatterATTFormatInstruction+0x6f7>
ffffffff80024500:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80024504:	8b 40 04             	mov    0x4(%rax),%eax
ffffffff80024507:	83 f8 04             	cmp    $0x4,%eax
ffffffff8002450a:	0f 84 a1 00 00 00    	je     ffffffff800245b1 <ZydisFormatterATTFormatInstruction+0x332>
ffffffff80024510:	83 f8 04             	cmp    $0x4,%eax
ffffffff80024513:	0f 87 c0 00 00 00    	ja     ffffffff800245d9 <ZydisFormatterATTFormatInstruction+0x35a>
ffffffff80024519:	83 f8 03             	cmp    $0x3,%eax
ffffffff8002451c:	74 6b                	je     ffffffff80024589 <ZydisFormatterATTFormatInstruction+0x30a>
ffffffff8002451e:	83 f8 03             	cmp    $0x3,%eax
ffffffff80024521:	0f 87 b2 00 00 00    	ja     ffffffff800245d9 <ZydisFormatterATTFormatInstruction+0x35a>
ffffffff80024527:	83 f8 01             	cmp    $0x1,%eax
ffffffff8002452a:	74 0a                	je     ffffffff80024536 <ZydisFormatterATTFormatInstruction+0x2b7>
ffffffff8002452c:	83 f8 02             	cmp    $0x2,%eax
ffffffff8002452f:	74 30                	je     ffffffff80024561 <ZydisFormatterATTFormatInstruction+0x2e2>
ffffffff80024531:	e9 a3 00 00 00       	jmp    ffffffff800245d9 <ZydisFormatterATTFormatInstruction+0x35a>
ffffffff80024536:	48 8b 45 88          	mov    -0x78(%rbp),%rax
ffffffff8002453a:	4c 8b 80 d8 01 00 00 	mov    0x1d8(%rax),%r8
ffffffff80024541:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
ffffffff80024548:	48 8b 4d 80          	mov    -0x80(%rbp),%rcx
ffffffff8002454c:	48 8b 45 88          	mov    -0x78(%rbp),%rax
ffffffff80024550:	48 89 ce             	mov    %rcx,%rsi
ffffffff80024553:	48 89 c7             	mov    %rax,%rdi
ffffffff80024556:	41 ff d0             	call   *%r8
ffffffff80024559:	89 45 e4             	mov    %eax,-0x1c(%rbp)
ffffffff8002455c:	e9 82 00 00 00       	jmp    ffffffff800245e3 <ZydisFormatterATTFormatInstruction+0x364>
ffffffff80024561:	48 8b 45 88          	mov    -0x78(%rbp),%rax
ffffffff80024565:	4c 8b 80 e0 01 00 00 	mov    0x1e0(%rax),%r8
ffffffff8002456c:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
ffffffff80024573:	48 8b 4d 80          	mov    -0x80(%rbp),%rcx
ffffffff80024577:	48 8b 45 88          	mov    -0x78(%rbp),%rax
ffffffff8002457b:	48 89 ce             	mov    %rcx,%rsi
ffffffff8002457e:	48 89 c7             	mov    %rax,%rdi
ffffffff80024581:	41 ff d0             	call   *%r8
ffffffff80024584:	89 45 e4             	mov    %eax,-0x1c(%rbp)
ffffffff80024587:	eb 5a                	jmp    ffffffff800245e3 <ZydisFormatterATTFormatInstruction+0x364>
ffffffff80024589:	48 8b 45 88          	mov    -0x78(%rbp),%rax
ffffffff8002458d:	4c 8b 80 e8 01 00 00 	mov    0x1e8(%rax),%r8
ffffffff80024594:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
ffffffff8002459b:	48 8b 4d 80          	mov    -0x80(%rbp),%rcx
ffffffff8002459f:	48 8b 45 88          	mov    -0x78(%rbp),%rax
ffffffff800245a3:	48 89 ce             	mov    %rcx,%rsi
ffffffff800245a6:	48 89 c7             	mov    %rax,%rdi
ffffffff800245a9:	41 ff d0             	call   *%r8
ffffffff800245ac:	89 45 e4             	mov    %eax,-0x1c(%rbp)
ffffffff800245af:	eb 32                	jmp    ffffffff800245e3 <ZydisFormatterATTFormatInstruction+0x364>
ffffffff800245b1:	48 8b 45 88          	mov    -0x78(%rbp),%rax
ffffffff800245b5:	4c 8b 80 f0 01 00 00 	mov    0x1f0(%rax),%r8
ffffffff800245bc:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
ffffffff800245c3:	48 8b 4d 80          	mov    -0x80(%rbp),%rcx
ffffffff800245c7:	48 8b 45 88          	mov    -0x78(%rbp),%rax
ffffffff800245cb:	48 89 ce             	mov    %rcx,%rsi
ffffffff800245ce:	48 89 c7             	mov    %rax,%rdi
ffffffff800245d1:	41 ff d0             	call   *%r8
ffffffff800245d4:	89 45 e4             	mov    %eax,-0x1c(%rbp)
ffffffff800245d7:	eb 0a                	jmp    ffffffff800245e3 <ZydisFormatterATTFormatInstruction+0x364>
ffffffff800245d9:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff800245de:	e9 93 03 00 00       	jmp    ffffffff80024976 <ZydisFormatterATTFormatInstruction+0x6f7>
ffffffff800245e3:	81 7d e4 0b 00 20 00 	cmpl   $0x20000b,-0x1c(%rbp)
ffffffff800245ea:	75 29                	jne    ffffffff80024615 <ZydisFormatterATTFormatInstruction+0x396>
ffffffff800245ec:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff800245f0:	48 8b 45 80          	mov    -0x80(%rbp),%rax
ffffffff800245f4:	48 89 d6             	mov    %rdx,%rsi
ffffffff800245f7:	48 89 c7             	mov    %rax,%rdi
ffffffff800245fa:	e8 8d 16 01 00       	call   ffffffff80035c8c <ZydisFormatterBufferRestore>
ffffffff800245ff:	89 45 90             	mov    %eax,-0x70(%rbp)
ffffffff80024602:	8b 45 90             	mov    -0x70(%rbp),%eax
ffffffff80024605:	85 c0                	test   %eax,%eax
ffffffff80024607:	0f 89 4b 03 00 00    	jns    ffffffff80024958 <ZydisFormatterATTFormatInstruction+0x6d9>
ffffffff8002460d:	8b 45 90             	mov    -0x70(%rbp),%eax
ffffffff80024610:	e9 61 03 00 00       	jmp    ffffffff80024976 <ZydisFormatterATTFormatInstruction+0x6f7>
ffffffff80024615:	8b 45 e4             	mov    -0x1c(%rbp),%eax
ffffffff80024618:	85 c0                	test   %eax,%eax
ffffffff8002461a:	79 08                	jns    ffffffff80024624 <ZydisFormatterATTFormatInstruction+0x3a5>
ffffffff8002461c:	8b 45 e4             	mov    -0x1c(%rbp),%eax
ffffffff8002461f:	e9 52 03 00 00       	jmp    ffffffff80024976 <ZydisFormatterATTFormatInstruction+0x6f7>
ffffffff80024624:	48 8b 45 88          	mov    -0x78(%rbp),%rax
ffffffff80024628:	48 8b 80 d0 01 00 00 	mov    0x1d0(%rax),%rax
ffffffff8002462f:	48 85 c0             	test   %rax,%rax
ffffffff80024632:	74 67                	je     ffffffff8002469b <ZydisFormatterATTFormatInstruction+0x41c>
ffffffff80024634:	48 8b 45 88          	mov    -0x78(%rbp),%rax
ffffffff80024638:	4c 8b 80 d0 01 00 00 	mov    0x1d0(%rax),%r8
ffffffff8002463f:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
ffffffff80024646:	48 8b 4d 80          	mov    -0x80(%rbp),%rcx
ffffffff8002464a:	48 8b 45 88          	mov    -0x78(%rbp),%rax
ffffffff8002464e:	48 89 ce             	mov    %rcx,%rsi
ffffffff80024651:	48 89 c7             	mov    %rax,%rdi
ffffffff80024654:	41 ff d0             	call   *%r8
ffffffff80024657:	89 45 e4             	mov    %eax,-0x1c(%rbp)
ffffffff8002465a:	81 7d e4 0b 00 20 00 	cmpl   $0x20000b,-0x1c(%rbp)
ffffffff80024661:	75 29                	jne    ffffffff8002468c <ZydisFormatterATTFormatInstruction+0x40d>
ffffffff80024663:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff80024667:	48 8b 45 80          	mov    -0x80(%rbp),%rax
ffffffff8002466b:	48 89 d6             	mov    %rdx,%rsi
ffffffff8002466e:	48 89 c7             	mov    %rax,%rdi
ffffffff80024671:	e8 16 16 01 00       	call   ffffffff80035c8c <ZydisFormatterBufferRestore>
ffffffff80024676:	89 45 b0             	mov    %eax,-0x50(%rbp)
ffffffff80024679:	8b 45 b0             	mov    -0x50(%rbp),%eax
ffffffff8002467c:	85 c0                	test   %eax,%eax
ffffffff8002467e:	0f 89 d7 02 00 00    	jns    ffffffff8002495b <ZydisFormatterATTFormatInstruction+0x6dc>
ffffffff80024684:	8b 45 b0             	mov    -0x50(%rbp),%eax
ffffffff80024687:	e9 ea 02 00 00       	jmp    ffffffff80024976 <ZydisFormatterATTFormatInstruction+0x6f7>
ffffffff8002468c:	8b 45 e4             	mov    -0x1c(%rbp),%eax
ffffffff8002468f:	85 c0                	test   %eax,%eax
ffffffff80024691:	78 08                	js     ffffffff8002469b <ZydisFormatterATTFormatInstruction+0x41c>
ffffffff80024693:	8b 45 e4             	mov    -0x1c(%rbp),%eax
ffffffff80024696:	e9 db 02 00 00       	jmp    ffffffff80024976 <ZydisFormatterATTFormatInstruction+0x6f7>
ffffffff8002469b:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
ffffffff800246a2:	48 8b 00             	mov    (%rax),%rax
ffffffff800246a5:	8b 40 0c             	mov    0xc(%rax),%eax
ffffffff800246a8:	83 f8 04             	cmp    $0x4,%eax
ffffffff800246ab:	74 16                	je     ffffffff800246c3 <ZydisFormatterATTFormatInstruction+0x444>
ffffffff800246ad:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
ffffffff800246b4:	48 8b 00             	mov    (%rax),%rax
ffffffff800246b7:	8b 40 0c             	mov    0xc(%rax),%eax
ffffffff800246ba:	83 f8 05             	cmp    $0x5,%eax
ffffffff800246bd:	0f 85 99 02 00 00    	jne    ffffffff8002495c <ZydisFormatterATTFormatInstruction+0x6dd>
ffffffff800246c3:	80 7d f7 00          	cmpb   $0x0,-0x9(%rbp)
ffffffff800246c7:	75 60                	jne    ffffffff80024729 <ZydisFormatterATTFormatInstruction+0x4aa>
ffffffff800246c9:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
ffffffff800246d0:	48 8b 00             	mov    (%rax),%rax
ffffffff800246d3:	0f b6 40 19          	movzbl 0x19(%rax),%eax
ffffffff800246d7:	3c 01                	cmp    $0x1,%al
ffffffff800246d9:	76 4e                	jbe    ffffffff80024729 <ZydisFormatterATTFormatInstruction+0x4aa>
ffffffff800246db:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
ffffffff800246e2:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff800246e6:	48 83 c0 68          	add    $0x68,%rax
ffffffff800246ea:	8b 40 10             	mov    0x10(%rax),%eax
ffffffff800246ed:	83 f8 06             	cmp    $0x6,%eax
ffffffff800246f0:	75 37                	jne    ffffffff80024729 <ZydisFormatterATTFormatInstruction+0x4aa>
ffffffff800246f2:	48 8b 45 88          	mov    -0x78(%rbp),%rax
ffffffff800246f6:	4c 8b 80 40 02 00 00 	mov    0x240(%rax),%r8
ffffffff800246fd:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
ffffffff80024704:	48 8b 75 80          	mov    -0x80(%rbp),%rsi
ffffffff80024708:	48 8b 45 88          	mov    -0x78(%rbp),%rax
ffffffff8002470c:	b9 01 00 00 00       	mov    $0x1,%ecx
ffffffff80024711:	48 89 c7             	mov    %rax,%rdi
ffffffff80024714:	41 ff d0             	call   *%r8
ffffffff80024717:	89 45 ac             	mov    %eax,-0x54(%rbp)
ffffffff8002471a:	8b 45 ac             	mov    -0x54(%rbp),%eax
ffffffff8002471d:	85 c0                	test   %eax,%eax
ffffffff8002471f:	79 08                	jns    ffffffff80024729 <ZydisFormatterATTFormatInstruction+0x4aa>
ffffffff80024721:	8b 45 ac             	mov    -0x54(%rbp),%eax
ffffffff80024724:	e9 4d 02 00 00       	jmp    ffffffff80024976 <ZydisFormatterATTFormatInstruction+0x6f7>
ffffffff80024729:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8002472d:	8b 40 04             	mov    0x4(%rax),%eax
ffffffff80024730:	83 f8 02             	cmp    $0x2,%eax
ffffffff80024733:	0f 85 bf 00 00 00    	jne    ffffffff800247f8 <ZydisFormatterATTFormatInstruction+0x579>
ffffffff80024739:	48 8b 45 88          	mov    -0x78(%rbp),%rax
ffffffff8002473d:	4c 8b 80 40 02 00 00 	mov    0x240(%rax),%r8
ffffffff80024744:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
ffffffff8002474b:	48 8b 75 80          	mov    -0x80(%rbp),%rsi
ffffffff8002474f:	48 8b 45 88          	mov    -0x78(%rbp),%rax
ffffffff80024753:	b9 02 00 00 00       	mov    $0x2,%ecx
ffffffff80024758:	48 89 c7             	mov    %rax,%rdi
ffffffff8002475b:	41 ff d0             	call   *%r8
ffffffff8002475e:	89 45 9c             	mov    %eax,-0x64(%rbp)
ffffffff80024761:	8b 45 9c             	mov    -0x64(%rbp),%eax
ffffffff80024764:	85 c0                	test   %eax,%eax
ffffffff80024766:	79 08                	jns    ffffffff80024770 <ZydisFormatterATTFormatInstruction+0x4f1>
ffffffff80024768:	8b 45 9c             	mov    -0x64(%rbp),%eax
ffffffff8002476b:	e9 06 02 00 00       	jmp    ffffffff80024976 <ZydisFormatterATTFormatInstruction+0x6f7>
ffffffff80024770:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
ffffffff80024777:	48 8b 00             	mov    (%rax),%rax
ffffffff8002477a:	8b 40 0c             	mov    0xc(%rax),%eax
ffffffff8002477d:	83 f8 05             	cmp    $0x5,%eax
ffffffff80024780:	0f 85 d6 01 00 00    	jne    ffffffff8002495c <ZydisFormatterATTFormatInstruction+0x6dd>
ffffffff80024786:	48 8b 45 88          	mov    -0x78(%rbp),%rax
ffffffff8002478a:	4c 8b 80 40 02 00 00 	mov    0x240(%rax),%r8
ffffffff80024791:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
ffffffff80024798:	48 8b 75 80          	mov    -0x80(%rbp),%rsi
ffffffff8002479c:	48 8b 45 88          	mov    -0x78(%rbp),%rax
ffffffff800247a0:	b9 06 00 00 00       	mov    $0x6,%ecx
ffffffff800247a5:	48 89 c7             	mov    %rax,%rdi
ffffffff800247a8:	41 ff d0             	call   *%r8
ffffffff800247ab:	89 45 98             	mov    %eax,-0x68(%rbp)
ffffffff800247ae:	8b 45 98             	mov    -0x68(%rbp),%eax
ffffffff800247b1:	85 c0                	test   %eax,%eax
ffffffff800247b3:	79 08                	jns    ffffffff800247bd <ZydisFormatterATTFormatInstruction+0x53e>
ffffffff800247b5:	8b 45 98             	mov    -0x68(%rbp),%eax
ffffffff800247b8:	e9 b9 01 00 00       	jmp    ffffffff80024976 <ZydisFormatterATTFormatInstruction+0x6f7>
ffffffff800247bd:	48 8b 45 88          	mov    -0x78(%rbp),%rax
ffffffff800247c1:	4c 8b 80 40 02 00 00 	mov    0x240(%rax),%r8
ffffffff800247c8:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
ffffffff800247cf:	48 8b 75 80          	mov    -0x80(%rbp),%rsi
ffffffff800247d3:	48 8b 45 88          	mov    -0x78(%rbp),%rax
ffffffff800247d7:	b9 07 00 00 00       	mov    $0x7,%ecx
ffffffff800247dc:	48 89 c7             	mov    %rax,%rdi
ffffffff800247df:	41 ff d0             	call   *%r8
ffffffff800247e2:	89 45 94             	mov    %eax,-0x6c(%rbp)
ffffffff800247e5:	8b 45 94             	mov    -0x6c(%rbp),%eax
ffffffff800247e8:	85 c0                	test   %eax,%eax
ffffffff800247ea:	0f 89 6c 01 00 00    	jns    ffffffff8002495c <ZydisFormatterATTFormatInstruction+0x6dd>
ffffffff800247f0:	8b 45 94             	mov    -0x6c(%rbp),%eax
ffffffff800247f3:	e9 7e 01 00 00       	jmp    ffffffff80024976 <ZydisFormatterATTFormatInstruction+0x6f7>
ffffffff800247f8:	0f be 55 f7          	movsbl -0x9(%rbp),%edx
ffffffff800247fc:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
ffffffff80024803:	48 8b 00             	mov    (%rax),%rax
ffffffff80024806:	0f b6 40 19          	movzbl 0x19(%rax),%eax
ffffffff8002480a:	0f b6 c0             	movzbl %al,%eax
ffffffff8002480d:	83 e8 01             	sub    $0x1,%eax
ffffffff80024810:	39 c2                	cmp    %eax,%edx
ffffffff80024812:	75 12                	jne    ffffffff80024826 <ZydisFormatterATTFormatInstruction+0x5a7>
ffffffff80024814:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80024818:	8b 40 04             	mov    0x4(%rax),%eax
ffffffff8002481b:	83 f8 04             	cmp    $0x4,%eax
ffffffff8002481e:	0f 95 c0             	setne  %al
ffffffff80024821:	88 45 e3             	mov    %al,-0x1d(%rbp)
ffffffff80024824:	eb 71                	jmp    ffffffff80024897 <ZydisFormatterATTFormatInstruction+0x618>
ffffffff80024826:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
ffffffff8002482d:	48 8b 00             	mov    (%rax),%rax
ffffffff80024830:	0f b6 40 19          	movzbl 0x19(%rax),%eax
ffffffff80024834:	0f b6 c0             	movzbl %al,%eax
ffffffff80024837:	0f be 55 f7          	movsbl -0x9(%rbp),%edx
ffffffff8002483b:	83 c2 01             	add    $0x1,%edx
ffffffff8002483e:	39 d0                	cmp    %edx,%eax
ffffffff80024840:	7e 4d                	jle    ffffffff8002488f <ZydisFormatterATTFormatInstruction+0x610>
ffffffff80024842:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
ffffffff80024849:	48 8b 50 08          	mov    0x8(%rax),%rdx
ffffffff8002484d:	48 0f be 45 f7       	movsbq -0x9(%rbp),%rax
ffffffff80024852:	48 83 c0 01          	add    $0x1,%rax
ffffffff80024856:	48 6b c0 68          	imul   $0x68,%rax,%rax
ffffffff8002485a:	48 01 d0             	add    %rdx,%rax
ffffffff8002485d:	8b 40 04             	mov    0x4(%rax),%eax
ffffffff80024860:	83 f8 04             	cmp    $0x4,%eax
ffffffff80024863:	74 23                	je     ffffffff80024888 <ZydisFormatterATTFormatInstruction+0x609>
ffffffff80024865:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
ffffffff8002486c:	48 8b 50 08          	mov    0x8(%rax),%rdx
ffffffff80024870:	48 0f be 45 f7       	movsbq -0x9(%rbp),%rax
ffffffff80024875:	48 83 c0 01          	add    $0x1,%rax
ffffffff80024879:	48 6b c0 68          	imul   $0x68,%rax,%rax
ffffffff8002487d:	48 01 d0             	add    %rdx,%rax
ffffffff80024880:	8b 40 08             	mov    0x8(%rax),%eax
ffffffff80024883:	83 f8 03             	cmp    $0x3,%eax
ffffffff80024886:	75 07                	jne    ffffffff8002488f <ZydisFormatterATTFormatInstruction+0x610>
ffffffff80024888:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8002488d:	eb 05                	jmp    ffffffff80024894 <ZydisFormatterATTFormatInstruction+0x615>
ffffffff8002488f:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80024894:	88 45 e3             	mov    %al,-0x1d(%rbp)
ffffffff80024897:	80 7d e3 00          	cmpb   $0x0,-0x1d(%rbp)
ffffffff8002489b:	0f 84 bb 00 00 00    	je     ffffffff8002495c <ZydisFormatterATTFormatInstruction+0x6dd>
ffffffff800248a1:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
ffffffff800248a8:	48 8b 00             	mov    (%rax),%rax
ffffffff800248ab:	8b 40 0c             	mov    0xc(%rax),%eax
ffffffff800248ae:	83 f8 05             	cmp    $0x5,%eax
ffffffff800248b1:	75 37                	jne    ffffffff800248ea <ZydisFormatterATTFormatInstruction+0x66b>
ffffffff800248b3:	48 8b 45 88          	mov    -0x78(%rbp),%rax
ffffffff800248b7:	4c 8b 80 40 02 00 00 	mov    0x240(%rax),%r8
ffffffff800248be:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
ffffffff800248c5:	48 8b 75 80          	mov    -0x80(%rbp),%rsi
ffffffff800248c9:	48 8b 45 88          	mov    -0x78(%rbp),%rax
ffffffff800248cd:	b9 05 00 00 00       	mov    $0x5,%ecx
ffffffff800248d2:	48 89 c7             	mov    %rax,%rdi
ffffffff800248d5:	41 ff d0             	call   *%r8
ffffffff800248d8:	89 45 a8             	mov    %eax,-0x58(%rbp)
ffffffff800248db:	8b 45 a8             	mov    -0x58(%rbp),%eax
ffffffff800248de:	85 c0                	test   %eax,%eax
ffffffff800248e0:	79 08                	jns    ffffffff800248ea <ZydisFormatterATTFormatInstruction+0x66b>
ffffffff800248e2:	8b 45 a8             	mov    -0x58(%rbp),%eax
ffffffff800248e5:	e9 8c 00 00 00       	jmp    ffffffff80024976 <ZydisFormatterATTFormatInstruction+0x6f7>
ffffffff800248ea:	48 8b 45 88          	mov    -0x78(%rbp),%rax
ffffffff800248ee:	4c 8b 80 40 02 00 00 	mov    0x240(%rax),%r8
ffffffff800248f5:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
ffffffff800248fc:	48 8b 75 80          	mov    -0x80(%rbp),%rsi
ffffffff80024900:	48 8b 45 88          	mov    -0x78(%rbp),%rax
ffffffff80024904:	b9 03 00 00 00       	mov    $0x3,%ecx
ffffffff80024909:	48 89 c7             	mov    %rax,%rdi
ffffffff8002490c:	41 ff d0             	call   *%r8
ffffffff8002490f:	89 45 a4             	mov    %eax,-0x5c(%rbp)
ffffffff80024912:	8b 45 a4             	mov    -0x5c(%rbp),%eax
ffffffff80024915:	85 c0                	test   %eax,%eax
ffffffff80024917:	79 05                	jns    ffffffff8002491e <ZydisFormatterATTFormatInstruction+0x69f>
ffffffff80024919:	8b 45 a4             	mov    -0x5c(%rbp),%eax
ffffffff8002491c:	eb 58                	jmp    ffffffff80024976 <ZydisFormatterATTFormatInstruction+0x6f7>
ffffffff8002491e:	48 8b 45 88          	mov    -0x78(%rbp),%rax
ffffffff80024922:	4c 8b 80 40 02 00 00 	mov    0x240(%rax),%r8
ffffffff80024929:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
ffffffff80024930:	48 8b 75 80          	mov    -0x80(%rbp),%rsi
ffffffff80024934:	48 8b 45 88          	mov    -0x78(%rbp),%rax
ffffffff80024938:	b9 04 00 00 00       	mov    $0x4,%ecx
ffffffff8002493d:	48 89 c7             	mov    %rax,%rdi
ffffffff80024940:	41 ff d0             	call   *%r8
ffffffff80024943:	89 45 a0             	mov    %eax,-0x60(%rbp)
ffffffff80024946:	8b 45 a0             	mov    -0x60(%rbp),%eax
ffffffff80024949:	85 c0                	test   %eax,%eax
ffffffff8002494b:	79 0f                	jns    ffffffff8002495c <ZydisFormatterATTFormatInstruction+0x6dd>
ffffffff8002494d:	8b 45 a0             	mov    -0x60(%rbp),%eax
ffffffff80024950:	eb 24                	jmp    ffffffff80024976 <ZydisFormatterATTFormatInstruction+0x6f7>
ffffffff80024952:	90                   	nop
ffffffff80024953:	eb 07                	jmp    ffffffff8002495c <ZydisFormatterATTFormatInstruction+0x6dd>
ffffffff80024955:	90                   	nop
ffffffff80024956:	eb 04                	jmp    ffffffff8002495c <ZydisFormatterATTFormatInstruction+0x6dd>
ffffffff80024958:	90                   	nop
ffffffff80024959:	eb 01                	jmp    ffffffff8002495c <ZydisFormatterATTFormatInstruction+0x6dd>
ffffffff8002495b:	90                   	nop
ffffffff8002495c:	0f b6 45 f7          	movzbl -0x9(%rbp),%eax
ffffffff80024960:	83 e8 01             	sub    $0x1,%eax
ffffffff80024963:	88 45 f7             	mov    %al,-0x9(%rbp)
ffffffff80024966:	80 7d f7 00          	cmpb   $0x0,-0x9(%rbp)
ffffffff8002496a:	0f 89 dc f9 ff ff    	jns    ffffffff8002434c <ZydisFormatterATTFormatInstruction+0xcd>
ffffffff80024970:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff80024975:	90                   	nop
ffffffff80024976:	c9                   	leave  
ffffffff80024977:	c3                   	ret    

ffffffff80024978 <ZydisFormatterATTFormatOperandMEM>:
ffffffff80024978:	f3 0f 1e fa          	endbr64 
ffffffff8002497c:	55                   	push   %rbp
ffffffff8002497d:	48 89 e5             	mov    %rsp,%rbp
ffffffff80024980:	48 83 ec 70          	sub    $0x70,%rsp
ffffffff80024984:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
ffffffff80024988:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
ffffffff8002498c:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
ffffffff80024990:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff80024994:	4c 8b 80 30 02 00 00 	mov    0x230(%rax),%r8
ffffffff8002499b:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
ffffffff8002499f:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
ffffffff800249a3:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff800249a7:	48 89 ce             	mov    %rcx,%rsi
ffffffff800249aa:	48 89 c7             	mov    %rax,%rdi
ffffffff800249ad:	41 ff d0             	call   *%r8
ffffffff800249b0:	89 45 fc             	mov    %eax,-0x4(%rbp)
ffffffff800249b3:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff800249b6:	85 c0                	test   %eax,%eax
ffffffff800249b8:	79 08                	jns    ffffffff800249c2 <ZydisFormatterATTFormatOperandMEM+0x4a>
ffffffff800249ba:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff800249bd:	e9 81 04 00 00       	jmp    ffffffff80024e43 <ZydisFormatterATTFormatOperandMEM+0x4cb>
ffffffff800249c2:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff800249c6:	0f b6 40 08          	movzbl 0x8(%rax),%eax
ffffffff800249ca:	84 c0                	test   %al,%al
ffffffff800249cc:	75 15                	jne    ffffffff800249e3 <ZydisFormatterATTFormatOperandMEM+0x6b>
ffffffff800249ce:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff800249d2:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff800249d6:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
ffffffff800249da:	74 07                	je     ffffffff800249e3 <ZydisFormatterATTFormatOperandMEM+0x6b>
ffffffff800249dc:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff800249e1:	eb 05                	jmp    ffffffff800249e8 <ZydisFormatterATTFormatOperandMEM+0x70>
ffffffff800249e3:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800249e8:	88 45 fb             	mov    %al,-0x5(%rbp)
ffffffff800249eb:	80 7d fb 00          	cmpb   $0x0,-0x5(%rbp)
ffffffff800249ef:	0f 84 88 00 00 00    	je     ffffffff80024a7d <ZydisFormatterATTFormatOperandMEM+0x105>
ffffffff800249f5:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff800249f9:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff800249fd:	0f b6 40 40          	movzbl 0x40(%rax),%eax
ffffffff80024a01:	84 c0                	test   %al,%al
ffffffff80024a03:	74 78                	je     ffffffff80024a7d <ZydisFormatterATTFormatOperandMEM+0x105>
ffffffff80024a05:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff80024a09:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff80024a0d:	8b 40 34             	mov    0x34(%rax),%eax
ffffffff80024a10:	85 c0                	test   %eax,%eax
ffffffff80024a12:	75 69                	jne    ffffffff80024a7d <ZydisFormatterATTFormatOperandMEM+0x105>
ffffffff80024a14:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff80024a18:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff80024a1c:	8b 40 30             	mov    0x30(%rax),%eax
ffffffff80024a1f:	85 c0                	test   %eax,%eax
ffffffff80024a21:	74 24                	je     ffffffff80024a47 <ZydisFormatterATTFormatOperandMEM+0xcf>
ffffffff80024a23:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff80024a27:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff80024a2b:	8b 40 30             	mov    0x30(%rax),%eax
ffffffff80024a2e:	3d c4 00 00 00       	cmp    $0xc4,%eax
ffffffff80024a33:	74 12                	je     ffffffff80024a47 <ZydisFormatterATTFormatOperandMEM+0xcf>
ffffffff80024a35:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff80024a39:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff80024a3d:	8b 40 30             	mov    0x30(%rax),%eax
ffffffff80024a40:	3d c5 00 00 00       	cmp    $0xc5,%eax
ffffffff80024a45:	75 36                	jne    ffffffff80024a7d <ZydisFormatterATTFormatOperandMEM+0x105>
ffffffff80024a47:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff80024a4b:	4c 8b 80 08 02 00 00 	mov    0x208(%rax),%r8
ffffffff80024a52:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
ffffffff80024a56:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
ffffffff80024a5a:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff80024a5e:	48 89 ce             	mov    %rcx,%rsi
ffffffff80024a61:	48 89 c7             	mov    %rax,%rdi
ffffffff80024a64:	41 ff d0             	call   *%r8
ffffffff80024a67:	89 45 f4             	mov    %eax,-0xc(%rbp)
ffffffff80024a6a:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff80024a6d:	85 c0                	test   %eax,%eax
ffffffff80024a6f:	0f 89 c7 03 00 00    	jns    ffffffff80024e3c <ZydisFormatterATTFormatOperandMEM+0x4c4>
ffffffff80024a75:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff80024a78:	e9 c6 03 00 00       	jmp    ffffffff80024e43 <ZydisFormatterATTFormatOperandMEM+0x4cb>
ffffffff80024a7d:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff80024a81:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff80024a85:	8b 40 30             	mov    0x30(%rax),%eax
ffffffff80024a88:	85 c0                	test   %eax,%eax
ffffffff80024a8a:	0f 95 c0             	setne  %al
ffffffff80024a8d:	88 45 f3             	mov    %al,-0xd(%rbp)
ffffffff80024a90:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff80024a94:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff80024a98:	8b 40 34             	mov    0x34(%rax),%eax
ffffffff80024a9b:	85 c0                	test   %eax,%eax
ffffffff80024a9d:	0f 95 c0             	setne  %al
ffffffff80024aa0:	88 45 f2             	mov    %al,-0xe(%rbp)
ffffffff80024aa3:	80 7d f3 00          	cmpb   $0x0,-0xd(%rbp)
ffffffff80024aa7:	75 0d                	jne    ffffffff80024ab6 <ZydisFormatterATTFormatOperandMEM+0x13e>
ffffffff80024aa9:	80 7d f2 00          	cmpb   $0x0,-0xe(%rbp)
ffffffff80024aad:	75 07                	jne    ffffffff80024ab6 <ZydisFormatterATTFormatOperandMEM+0x13e>
ffffffff80024aaf:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff80024ab4:	eb 05                	jmp    ffffffff80024abb <ZydisFormatterATTFormatOperandMEM+0x143>
ffffffff80024ab6:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80024abb:	88 45 f1             	mov    %al,-0xf(%rbp)
ffffffff80024abe:	80 7d f1 00          	cmpb   $0x0,-0xf(%rbp)
ffffffff80024ac2:	74 32                	je     ffffffff80024af6 <ZydisFormatterATTFormatOperandMEM+0x17e>
ffffffff80024ac4:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff80024ac8:	4c 8b 80 08 02 00 00 	mov    0x208(%rax),%r8
ffffffff80024acf:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
ffffffff80024ad3:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
ffffffff80024ad7:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff80024adb:	48 89 ce             	mov    %rcx,%rsi
ffffffff80024ade:	48 89 c7             	mov    %rax,%rdi
ffffffff80024ae1:	41 ff d0             	call   *%r8
ffffffff80024ae4:	89 45 e8             	mov    %eax,-0x18(%rbp)
ffffffff80024ae7:	8b 45 e8             	mov    -0x18(%rbp),%eax
ffffffff80024aea:	85 c0                	test   %eax,%eax
ffffffff80024aec:	79 5b                	jns    ffffffff80024b49 <ZydisFormatterATTFormatOperandMEM+0x1d1>
ffffffff80024aee:	8b 45 e8             	mov    -0x18(%rbp),%eax
ffffffff80024af1:	e9 4d 03 00 00       	jmp    ffffffff80024e43 <ZydisFormatterATTFormatOperandMEM+0x4cb>
ffffffff80024af6:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff80024afa:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff80024afe:	0f b6 40 40          	movzbl 0x40(%rax),%eax
ffffffff80024b02:	84 c0                	test   %al,%al
ffffffff80024b04:	74 43                	je     ffffffff80024b49 <ZydisFormatterATTFormatOperandMEM+0x1d1>
ffffffff80024b06:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff80024b0a:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff80024b0e:	48 8b 40 48          	mov    0x48(%rax),%rax
ffffffff80024b12:	48 85 c0             	test   %rax,%rax
ffffffff80024b15:	74 32                	je     ffffffff80024b49 <ZydisFormatterATTFormatOperandMEM+0x1d1>
ffffffff80024b17:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff80024b1b:	4c 8b 80 18 02 00 00 	mov    0x218(%rax),%r8
ffffffff80024b22:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
ffffffff80024b26:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
ffffffff80024b2a:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff80024b2e:	48 89 ce             	mov    %rcx,%rsi
ffffffff80024b31:	48 89 c7             	mov    %rax,%rdi
ffffffff80024b34:	41 ff d0             	call   *%r8
ffffffff80024b37:	89 45 ec             	mov    %eax,-0x14(%rbp)
ffffffff80024b3a:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff80024b3d:	85 c0                	test   %eax,%eax
ffffffff80024b3f:	79 08                	jns    ffffffff80024b49 <ZydisFormatterATTFormatOperandMEM+0x1d1>
ffffffff80024b41:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff80024b44:	e9 fa 02 00 00       	jmp    ffffffff80024e43 <ZydisFormatterATTFormatOperandMEM+0x4cb>
ffffffff80024b49:	80 7d f1 00          	cmpb   $0x0,-0xf(%rbp)
ffffffff80024b4d:	74 0a                	je     ffffffff80024b59 <ZydisFormatterATTFormatOperandMEM+0x1e1>
ffffffff80024b4f:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff80024b54:	e9 ea 02 00 00       	jmp    ffffffff80024e43 <ZydisFormatterATTFormatOperandMEM+0x4cb>
ffffffff80024b59:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff80024b5d:	0f b6 00             	movzbl (%rax),%eax
ffffffff80024b60:	84 c0                	test   %al,%al
ffffffff80024b62:	74 28                	je     ffffffff80024b8c <ZydisFormatterATTFormatOperandMEM+0x214>
ffffffff80024b64:	48 8d 15 79 99 01 00 	lea    0x19979(%rip),%rdx        # ffffffff8003e4e4 <TOK_DATA_MEMORY_BEGIN_ATT.lto_priv.0>
ffffffff80024b6b:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff80024b6f:	48 89 d6             	mov    %rdx,%rsi
ffffffff80024b72:	48 89 c7             	mov    %rax,%rdi
ffffffff80024b75:	e8 e2 f5 ff ff       	call   ffffffff8002415c <ZydisFormatterBufferAppendPredefined.lto_priv.0>
ffffffff80024b7a:	89 45 e0             	mov    %eax,-0x20(%rbp)
ffffffff80024b7d:	8b 45 e0             	mov    -0x20(%rbp),%eax
ffffffff80024b80:	85 c0                	test   %eax,%eax
ffffffff80024b82:	79 34                	jns    ffffffff80024bb8 <ZydisFormatterATTFormatOperandMEM+0x240>
ffffffff80024b84:	8b 45 e0             	mov    -0x20(%rbp),%eax
ffffffff80024b87:	e9 b7 02 00 00       	jmp    ffffffff80024e43 <ZydisFormatterATTFormatOperandMEM+0x4cb>
ffffffff80024b8c:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff80024b90:	48 83 c0 10          	add    $0x10,%rax
ffffffff80024b94:	48 8d 15 d5 39 08 00 	lea    0x839d5(%rip),%rdx        # ffffffff800a8570 <STR_MEMORY_BEGIN_ATT.lto_priv.0>
ffffffff80024b9b:	48 89 d6             	mov    %rdx,%rsi
ffffffff80024b9e:	48 89 c7             	mov    %rax,%rdi
ffffffff80024ba1:	e8 e7 f0 ff ff       	call   ffffffff80023c8d <ZydisStringAppendShort.lto_priv.0>
ffffffff80024ba6:	89 45 e4             	mov    %eax,-0x1c(%rbp)
ffffffff80024ba9:	8b 45 e4             	mov    -0x1c(%rbp),%eax
ffffffff80024bac:	85 c0                	test   %eax,%eax
ffffffff80024bae:	79 08                	jns    ffffffff80024bb8 <ZydisFormatterATTFormatOperandMEM+0x240>
ffffffff80024bb0:	8b 45 e4             	mov    -0x1c(%rbp),%eax
ffffffff80024bb3:	e9 8b 02 00 00       	jmp    ffffffff80024e43 <ZydisFormatterATTFormatOperandMEM+0x4cb>
ffffffff80024bb8:	80 7d f3 00          	cmpb   $0x0,-0xd(%rbp)
ffffffff80024bbc:	74 3a                	je     ffffffff80024bf8 <ZydisFormatterATTFormatOperandMEM+0x280>
ffffffff80024bbe:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff80024bc2:	4c 8b 80 00 02 00 00 	mov    0x200(%rax),%r8
ffffffff80024bc9:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff80024bcd:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff80024bd1:	8b 48 30             	mov    0x30(%rax),%ecx
ffffffff80024bd4:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
ffffffff80024bd8:	48 8b 75 a0          	mov    -0x60(%rbp),%rsi
ffffffff80024bdc:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff80024be0:	48 89 c7             	mov    %rax,%rdi
ffffffff80024be3:	41 ff d0             	call   *%r8
ffffffff80024be6:	89 45 dc             	mov    %eax,-0x24(%rbp)
ffffffff80024be9:	8b 45 dc             	mov    -0x24(%rbp),%eax
ffffffff80024bec:	85 c0                	test   %eax,%eax
ffffffff80024bee:	79 08                	jns    ffffffff80024bf8 <ZydisFormatterATTFormatOperandMEM+0x280>
ffffffff80024bf0:	8b 45 dc             	mov    -0x24(%rbp),%eax
ffffffff80024bf3:	e9 4b 02 00 00       	jmp    ffffffff80024e43 <ZydisFormatterATTFormatOperandMEM+0x4cb>
ffffffff80024bf8:	80 7d f2 00          	cmpb   $0x0,-0xe(%rbp)
ffffffff80024bfc:	0f 84 da 01 00 00    	je     ffffffff80024ddc <ZydisFormatterATTFormatOperandMEM+0x464>
ffffffff80024c02:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff80024c06:	0f b6 00             	movzbl (%rax),%eax
ffffffff80024c09:	84 c0                	test   %al,%al
ffffffff80024c0b:	74 28                	je     ffffffff80024c35 <ZydisFormatterATTFormatOperandMEM+0x2bd>
ffffffff80024c0d:	48 8d 15 8e 98 01 00 	lea    0x1988e(%rip),%rdx        # ffffffff8003e4a2 <TOK_DATA_DELIM_MEMORY.lto_priv.0>
ffffffff80024c14:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff80024c18:	48 89 d6             	mov    %rdx,%rsi
ffffffff80024c1b:	48 89 c7             	mov    %rax,%rdi
ffffffff80024c1e:	e8 39 f5 ff ff       	call   ffffffff8002415c <ZydisFormatterBufferAppendPredefined.lto_priv.0>
ffffffff80024c23:	89 45 d4             	mov    %eax,-0x2c(%rbp)
ffffffff80024c26:	8b 45 d4             	mov    -0x2c(%rbp),%eax
ffffffff80024c29:	85 c0                	test   %eax,%eax
ffffffff80024c2b:	79 34                	jns    ffffffff80024c61 <ZydisFormatterATTFormatOperandMEM+0x2e9>
ffffffff80024c2d:	8b 45 d4             	mov    -0x2c(%rbp),%eax
ffffffff80024c30:	e9 0e 02 00 00       	jmp    ffffffff80024e43 <ZydisFormatterATTFormatOperandMEM+0x4cb>
ffffffff80024c35:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff80024c39:	48 83 c0 10          	add    $0x10,%rax
ffffffff80024c3d:	48 8d 15 64 38 08 00 	lea    0x83864(%rip),%rdx        # ffffffff800a84a8 <STR_DELIM_MEMORY.lto_priv.0>
ffffffff80024c44:	48 89 d6             	mov    %rdx,%rsi
ffffffff80024c47:	48 89 c7             	mov    %rax,%rdi
ffffffff80024c4a:	e8 3e f0 ff ff       	call   ffffffff80023c8d <ZydisStringAppendShort.lto_priv.0>
ffffffff80024c4f:	89 45 d8             	mov    %eax,-0x28(%rbp)
ffffffff80024c52:	8b 45 d8             	mov    -0x28(%rbp),%eax
ffffffff80024c55:	85 c0                	test   %eax,%eax
ffffffff80024c57:	79 08                	jns    ffffffff80024c61 <ZydisFormatterATTFormatOperandMEM+0x2e9>
ffffffff80024c59:	8b 45 d8             	mov    -0x28(%rbp),%eax
ffffffff80024c5c:	e9 e2 01 00 00       	jmp    ffffffff80024e43 <ZydisFormatterATTFormatOperandMEM+0x4cb>
ffffffff80024c61:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff80024c65:	4c 8b 80 00 02 00 00 	mov    0x200(%rax),%r8
ffffffff80024c6c:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff80024c70:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff80024c74:	8b 48 34             	mov    0x34(%rax),%ecx
ffffffff80024c77:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
ffffffff80024c7b:	48 8b 75 a0          	mov    -0x60(%rbp),%rsi
ffffffff80024c7f:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff80024c83:	48 89 c7             	mov    %rax,%rdi
ffffffff80024c86:	41 ff d0             	call   *%r8
ffffffff80024c89:	89 45 d0             	mov    %eax,-0x30(%rbp)
ffffffff80024c8c:	8b 45 d0             	mov    -0x30(%rbp),%eax
ffffffff80024c8f:	85 c0                	test   %eax,%eax
ffffffff80024c91:	79 08                	jns    ffffffff80024c9b <ZydisFormatterATTFormatOperandMEM+0x323>
ffffffff80024c93:	8b 45 d0             	mov    -0x30(%rbp),%eax
ffffffff80024c96:	e9 a8 01 00 00       	jmp    ffffffff80024e43 <ZydisFormatterATTFormatOperandMEM+0x4cb>
ffffffff80024c9b:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff80024c9f:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff80024ca3:	0f b6 40 38          	movzbl 0x38(%rax),%eax
ffffffff80024ca7:	84 c0                	test   %al,%al
ffffffff80024ca9:	0f 84 2d 01 00 00    	je     ffffffff80024ddc <ZydisFormatterATTFormatOperandMEM+0x464>
ffffffff80024caf:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff80024cb3:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff80024cb7:	8b 40 28             	mov    0x28(%rax),%eax
ffffffff80024cba:	83 f8 03             	cmp    $0x3,%eax
ffffffff80024cbd:	0f 84 19 01 00 00    	je     ffffffff80024ddc <ZydisFormatterATTFormatOperandMEM+0x464>
ffffffff80024cc3:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff80024cc7:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff80024ccb:	0f b6 40 38          	movzbl 0x38(%rax),%eax
ffffffff80024ccf:	3c 01                	cmp    $0x1,%al
ffffffff80024cd1:	77 10                	ja     ffffffff80024ce3 <ZydisFormatterATTFormatOperandMEM+0x36b>
ffffffff80024cd3:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff80024cd7:	0f b6 40 06          	movzbl 0x6(%rax),%eax
ffffffff80024cdb:	84 c0                	test   %al,%al
ffffffff80024cdd:	0f 84 f9 00 00 00    	je     ffffffff80024ddc <ZydisFormatterATTFormatOperandMEM+0x464>
ffffffff80024ce3:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff80024ce7:	0f b6 00             	movzbl (%rax),%eax
ffffffff80024cea:	84 c0                	test   %al,%al
ffffffff80024cec:	74 23                	je     ffffffff80024d11 <ZydisFormatterATTFormatOperandMEM+0x399>
ffffffff80024cee:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff80024cf2:	be 02 00 00 00       	mov    $0x2,%esi
ffffffff80024cf7:	48 89 c7             	mov    %rax,%rdi
ffffffff80024cfa:	e8 0a 0e 01 00       	call   ffffffff80035b09 <ZydisFormatterBufferAppend>
ffffffff80024cff:	89 45 cc             	mov    %eax,-0x34(%rbp)
ffffffff80024d02:	8b 45 cc             	mov    -0x34(%rbp),%eax
ffffffff80024d05:	85 c0                	test   %eax,%eax
ffffffff80024d07:	79 08                	jns    ffffffff80024d11 <ZydisFormatterATTFormatOperandMEM+0x399>
ffffffff80024d09:	8b 45 cc             	mov    -0x34(%rbp),%eax
ffffffff80024d0c:	e9 32 01 00 00       	jmp    ffffffff80024e43 <ZydisFormatterATTFormatOperandMEM+0x4cb>
ffffffff80024d11:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff80024d15:	0f b6 00             	movzbl (%rax),%eax
ffffffff80024d18:	84 c0                	test   %al,%al
ffffffff80024d1a:	74 28                	je     ffffffff80024d44 <ZydisFormatterATTFormatOperandMEM+0x3cc>
ffffffff80024d1c:	48 8d 15 7f 97 01 00 	lea    0x1977f(%rip),%rdx        # ffffffff8003e4a2 <TOK_DATA_DELIM_MEMORY.lto_priv.0>
ffffffff80024d23:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff80024d27:	48 89 d6             	mov    %rdx,%rsi
ffffffff80024d2a:	48 89 c7             	mov    %rax,%rdi
ffffffff80024d2d:	e8 2a f4 ff ff       	call   ffffffff8002415c <ZydisFormatterBufferAppendPredefined.lto_priv.0>
ffffffff80024d32:	89 45 c4             	mov    %eax,-0x3c(%rbp)
ffffffff80024d35:	8b 45 c4             	mov    -0x3c(%rbp),%eax
ffffffff80024d38:	85 c0                	test   %eax,%eax
ffffffff80024d3a:	79 34                	jns    ffffffff80024d70 <ZydisFormatterATTFormatOperandMEM+0x3f8>
ffffffff80024d3c:	8b 45 c4             	mov    -0x3c(%rbp),%eax
ffffffff80024d3f:	e9 ff 00 00 00       	jmp    ffffffff80024e43 <ZydisFormatterATTFormatOperandMEM+0x4cb>
ffffffff80024d44:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff80024d48:	48 83 c0 10          	add    $0x10,%rax
ffffffff80024d4c:	48 8d 15 55 37 08 00 	lea    0x83755(%rip),%rdx        # ffffffff800a84a8 <STR_DELIM_MEMORY.lto_priv.0>
ffffffff80024d53:	48 89 d6             	mov    %rdx,%rsi
ffffffff80024d56:	48 89 c7             	mov    %rax,%rdi
ffffffff80024d59:	e8 2f ef ff ff       	call   ffffffff80023c8d <ZydisStringAppendShort.lto_priv.0>
ffffffff80024d5e:	89 45 c8             	mov    %eax,-0x38(%rbp)
ffffffff80024d61:	8b 45 c8             	mov    -0x38(%rbp),%eax
ffffffff80024d64:	85 c0                	test   %eax,%eax
ffffffff80024d66:	79 08                	jns    ffffffff80024d70 <ZydisFormatterATTFormatOperandMEM+0x3f8>
ffffffff80024d68:	8b 45 c8             	mov    -0x38(%rbp),%eax
ffffffff80024d6b:	e9 d3 00 00 00       	jmp    ffffffff80024e43 <ZydisFormatterATTFormatOperandMEM+0x4cb>
ffffffff80024d70:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff80024d74:	0f b6 00             	movzbl (%rax),%eax
ffffffff80024d77:	84 c0                	test   %al,%al
ffffffff80024d79:	74 23                	je     ffffffff80024d9e <ZydisFormatterATTFormatOperandMEM+0x426>
ffffffff80024d7b:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff80024d7f:	be 0b 00 00 00       	mov    $0xb,%esi
ffffffff80024d84:	48 89 c7             	mov    %rax,%rdi
ffffffff80024d87:	e8 7d 0d 01 00       	call   ffffffff80035b09 <ZydisFormatterBufferAppend>
ffffffff80024d8c:	89 45 c0             	mov    %eax,-0x40(%rbp)
ffffffff80024d8f:	8b 45 c0             	mov    -0x40(%rbp),%eax
ffffffff80024d92:	85 c0                	test   %eax,%eax
ffffffff80024d94:	79 08                	jns    ffffffff80024d9e <ZydisFormatterATTFormatOperandMEM+0x426>
ffffffff80024d96:	8b 45 c0             	mov    -0x40(%rbp),%eax
ffffffff80024d99:	e9 a5 00 00 00       	jmp    ffffffff80024e43 <ZydisFormatterATTFormatOperandMEM+0x4cb>
ffffffff80024d9e:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff80024da2:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff80024da6:	0f b6 40 38          	movzbl 0x38(%rax),%eax
ffffffff80024daa:	0f b6 c0             	movzbl %al,%eax
ffffffff80024dad:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
ffffffff80024db1:	48 8d 7a 10          	lea    0x10(%rdx),%rdi
ffffffff80024db5:	41 b8 00 00 00 00    	mov    $0x0,%r8d
ffffffff80024dbb:	b9 00 00 00 00       	mov    $0x0,%ecx
ffffffff80024dc0:	ba 00 00 00 00       	mov    $0x0,%edx
ffffffff80024dc5:	48 89 c6             	mov    %rax,%rsi
ffffffff80024dc8:	e8 60 12 00 00       	call   ffffffff8002602d <ZydisStringAppendDecU>
ffffffff80024dcd:	89 45 bc             	mov    %eax,-0x44(%rbp)
ffffffff80024dd0:	8b 45 bc             	mov    -0x44(%rbp),%eax
ffffffff80024dd3:	85 c0                	test   %eax,%eax
ffffffff80024dd5:	79 05                	jns    ffffffff80024ddc <ZydisFormatterATTFormatOperandMEM+0x464>
ffffffff80024dd7:	8b 45 bc             	mov    -0x44(%rbp),%eax
ffffffff80024dda:	eb 67                	jmp    ffffffff80024e43 <ZydisFormatterATTFormatOperandMEM+0x4cb>
ffffffff80024ddc:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff80024de0:	0f b6 00             	movzbl (%rax),%eax
ffffffff80024de3:	84 c0                	test   %al,%al
ffffffff80024de5:	74 25                	je     ffffffff80024e0c <ZydisFormatterATTFormatOperandMEM+0x494>
ffffffff80024de7:	48 8d 15 02 97 01 00 	lea    0x19702(%rip),%rdx        # ffffffff8003e4f0 <TOK_DATA_MEMORY_END_ATT.lto_priv.0>
ffffffff80024dee:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff80024df2:	48 89 d6             	mov    %rdx,%rsi
ffffffff80024df5:	48 89 c7             	mov    %rax,%rdi
ffffffff80024df8:	e8 5f f3 ff ff       	call   ffffffff8002415c <ZydisFormatterBufferAppendPredefined.lto_priv.0>
ffffffff80024dfd:	89 45 b4             	mov    %eax,-0x4c(%rbp)
ffffffff80024e00:	8b 45 b4             	mov    -0x4c(%rbp),%eax
ffffffff80024e03:	85 c0                	test   %eax,%eax
ffffffff80024e05:	79 2e                	jns    ffffffff80024e35 <ZydisFormatterATTFormatOperandMEM+0x4bd>
ffffffff80024e07:	8b 45 b4             	mov    -0x4c(%rbp),%eax
ffffffff80024e0a:	eb 37                	jmp    ffffffff80024e43 <ZydisFormatterATTFormatOperandMEM+0x4cb>
ffffffff80024e0c:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff80024e10:	48 83 c0 10          	add    $0x10,%rax
ffffffff80024e14:	48 8d 15 85 37 08 00 	lea    0x83785(%rip),%rdx        # ffffffff800a85a0 <STR_MEMORY_END_ATT.lto_priv.0>
ffffffff80024e1b:	48 89 d6             	mov    %rdx,%rsi
ffffffff80024e1e:	48 89 c7             	mov    %rax,%rdi
ffffffff80024e21:	e8 67 ee ff ff       	call   ffffffff80023c8d <ZydisStringAppendShort.lto_priv.0>
ffffffff80024e26:	89 45 b8             	mov    %eax,-0x48(%rbp)
ffffffff80024e29:	8b 45 b8             	mov    -0x48(%rbp),%eax
ffffffff80024e2c:	85 c0                	test   %eax,%eax
ffffffff80024e2e:	79 05                	jns    ffffffff80024e35 <ZydisFormatterATTFormatOperandMEM+0x4bd>
ffffffff80024e30:	8b 45 b8             	mov    -0x48(%rbp),%eax
ffffffff80024e33:	eb 0e                	jmp    ffffffff80024e43 <ZydisFormatterATTFormatOperandMEM+0x4cb>
ffffffff80024e35:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff80024e3a:	eb 07                	jmp    ffffffff80024e43 <ZydisFormatterATTFormatOperandMEM+0x4cb>
ffffffff80024e3c:	90                   	nop
ffffffff80024e3d:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff80024e42:	90                   	nop
ffffffff80024e43:	c9                   	leave  
ffffffff80024e44:	c3                   	ret    

ffffffff80024e45 <ZydisFormatterATTPrintMnemonic>:
ffffffff80024e45:	f3 0f 1e fa          	endbr64 
ffffffff80024e49:	55                   	push   %rbp
ffffffff80024e4a:	48 89 e5             	mov    %rsp,%rbp
ffffffff80024e4d:	48 83 ec 50          	sub    $0x50,%rsp
ffffffff80024e51:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
ffffffff80024e55:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
ffffffff80024e59:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
ffffffff80024e5d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff80024e61:	48 8b 00             	mov    (%rax),%rax
ffffffff80024e64:	8b 40 04             	mov    0x4(%rax),%eax
ffffffff80024e67:	89 c7                	mov    %eax,%edi
ffffffff80024e69:	e8 3b 16 01 00       	call   ffffffff800364a9 <ZydisMnemonicGetStringWrapped>
ffffffff80024e6e:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff80024e72:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
ffffffff80024e77:	75 72                	jne    ffffffff80024eeb <ZydisFormatterATTPrintMnemonic+0xa6>
ffffffff80024e79:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff80024e7d:	0f b6 00             	movzbl (%rax),%eax
ffffffff80024e80:	84 c0                	test   %al,%al
ffffffff80024e82:	74 28                	je     ffffffff80024eac <ZydisFormatterATTPrintMnemonic+0x67>
ffffffff80024e84:	48 8d 15 3d 96 01 00 	lea    0x1963d(%rip),%rdx        # ffffffff8003e4c8 <TOK_DATA_INVALID_MNEMONIC.lto_priv.0>
ffffffff80024e8b:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff80024e8f:	48 89 d6             	mov    %rdx,%rsi
ffffffff80024e92:	48 89 c7             	mov    %rax,%rdi
ffffffff80024e95:	e8 c2 f2 ff ff       	call   ffffffff8002415c <ZydisFormatterBufferAppendPredefined.lto_priv.0>
ffffffff80024e9a:	89 45 d0             	mov    %eax,-0x30(%rbp)
ffffffff80024e9d:	8b 45 d0             	mov    -0x30(%rbp),%eax
ffffffff80024ea0:	85 c0                	test   %eax,%eax
ffffffff80024ea2:	79 3d                	jns    ffffffff80024ee1 <ZydisFormatterATTPrintMnemonic+0x9c>
ffffffff80024ea4:	8b 45 d0             	mov    -0x30(%rbp),%eax
ffffffff80024ea7:	e9 2a 03 00 00       	jmp    ffffffff800251d6 <ZydisFormatterATTPrintMnemonic+0x391>
ffffffff80024eac:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80024eb0:	8b 40 38             	mov    0x38(%rax),%eax
ffffffff80024eb3:	89 c2                	mov    %eax,%edx
ffffffff80024eb5:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff80024eb9:	48 83 c0 10          	add    $0x10,%rax
ffffffff80024ebd:	48 8d 0d 7c 36 08 00 	lea    0x8367c(%rip),%rcx        # ffffffff800a8540 <STR_INVALID_MNEMONIC.lto_priv.0>
ffffffff80024ec4:	48 89 ce             	mov    %rcx,%rsi
ffffffff80024ec7:	48 89 c7             	mov    %rax,%rdi
ffffffff80024eca:	e8 78 ee ff ff       	call   ffffffff80023d47 <ZydisStringAppendShortCase.lto_priv.0>
ffffffff80024ecf:	89 45 d4             	mov    %eax,-0x2c(%rbp)
ffffffff80024ed2:	8b 45 d4             	mov    -0x2c(%rbp),%eax
ffffffff80024ed5:	85 c0                	test   %eax,%eax
ffffffff80024ed7:	79 08                	jns    ffffffff80024ee1 <ZydisFormatterATTPrintMnemonic+0x9c>
ffffffff80024ed9:	8b 45 d4             	mov    -0x2c(%rbp),%eax
ffffffff80024edc:	e9 f5 02 00 00       	jmp    ffffffff800251d6 <ZydisFormatterATTPrintMnemonic+0x391>
ffffffff80024ee1:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff80024ee6:	e9 eb 02 00 00       	jmp    ffffffff800251d6 <ZydisFormatterATTPrintMnemonic+0x391>
ffffffff80024eeb:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff80024eef:	0f b6 00             	movzbl (%rax),%eax
ffffffff80024ef2:	84 c0                	test   %al,%al
ffffffff80024ef4:	74 23                	je     ffffffff80024f19 <ZydisFormatterATTPrintMnemonic+0xd4>
ffffffff80024ef6:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff80024efa:	be 06 00 00 00       	mov    $0x6,%esi
ffffffff80024eff:	48 89 c7             	mov    %rax,%rdi
ffffffff80024f02:	e8 02 0c 01 00       	call   ffffffff80035b09 <ZydisFormatterBufferAppend>
ffffffff80024f07:	89 45 ec             	mov    %eax,-0x14(%rbp)
ffffffff80024f0a:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff80024f0d:	85 c0                	test   %eax,%eax
ffffffff80024f0f:	79 08                	jns    ffffffff80024f19 <ZydisFormatterATTPrintMnemonic+0xd4>
ffffffff80024f11:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff80024f14:	e9 bd 02 00 00       	jmp    ffffffff800251d6 <ZydisFormatterATTPrintMnemonic+0x391>
ffffffff80024f19:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff80024f1d:	48 8b 00             	mov    (%rax),%rax
ffffffff80024f20:	8b 40 68             	mov    0x68(%rax),%eax
ffffffff80024f23:	83 f8 03             	cmp    $0x3,%eax
ffffffff80024f26:	75 35                	jne    ffffffff80024f5d <ZydisFormatterATTPrintMnemonic+0x118>
ffffffff80024f28:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80024f2c:	8b 40 38             	mov    0x38(%rax),%eax
ffffffff80024f2f:	89 c2                	mov    %eax,%edx
ffffffff80024f31:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff80024f35:	48 83 c0 10          	add    $0x10,%rax
ffffffff80024f39:	48 8d 0d d8 35 08 00 	lea    0x835d8(%rip),%rcx        # ffffffff800a8518 <STR_FAR_ATT.lto_priv.0>
ffffffff80024f40:	48 89 ce             	mov    %rcx,%rsi
ffffffff80024f43:	48 89 c7             	mov    %rax,%rdi
ffffffff80024f46:	e8 fc ed ff ff       	call   ffffffff80023d47 <ZydisStringAppendShortCase.lto_priv.0>
ffffffff80024f4b:	89 45 e8             	mov    %eax,-0x18(%rbp)
ffffffff80024f4e:	8b 45 e8             	mov    -0x18(%rbp),%eax
ffffffff80024f51:	85 c0                	test   %eax,%eax
ffffffff80024f53:	79 08                	jns    ffffffff80024f5d <ZydisFormatterATTPrintMnemonic+0x118>
ffffffff80024f55:	8b 45 e8             	mov    -0x18(%rbp),%eax
ffffffff80024f58:	e9 79 02 00 00       	jmp    ffffffff800251d6 <ZydisFormatterATTPrintMnemonic+0x391>
ffffffff80024f5d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80024f61:	8b 40 38             	mov    0x38(%rax),%eax
ffffffff80024f64:	89 c2                	mov    %eax,%edx
ffffffff80024f66:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff80024f6a:	48 83 c0 10          	add    $0x10,%rax
ffffffff80024f6e:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
ffffffff80024f72:	48 89 ce             	mov    %rcx,%rsi
ffffffff80024f75:	48 89 c7             	mov    %rax,%rdi
ffffffff80024f78:	e8 ca ed ff ff       	call   ffffffff80023d47 <ZydisStringAppendShortCase.lto_priv.0>
ffffffff80024f7d:	89 45 e4             	mov    %eax,-0x1c(%rbp)
ffffffff80024f80:	8b 45 e4             	mov    -0x1c(%rbp),%eax
ffffffff80024f83:	85 c0                	test   %eax,%eax
ffffffff80024f85:	79 08                	jns    ffffffff80024f8f <ZydisFormatterATTPrintMnemonic+0x14a>
ffffffff80024f87:	8b 45 e4             	mov    -0x1c(%rbp),%eax
ffffffff80024f8a:	e9 47 02 00 00       	jmp    ffffffff800251d6 <ZydisFormatterATTPrintMnemonic+0x391>
ffffffff80024f8f:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
ffffffff80024f96:	c6 45 fb 00          	movb   $0x0,-0x5(%rbp)
ffffffff80024f9a:	eb 5b                	jmp    ffffffff80024ff7 <ZydisFormatterATTPrintMnemonic+0x1b2>
ffffffff80024f9c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff80024fa0:	48 8b 50 08          	mov    0x8(%rax),%rdx
ffffffff80024fa4:	0f b6 45 fb          	movzbl -0x5(%rbp),%eax
ffffffff80024fa8:	48 6b c0 68          	imul   $0x68,%rax,%rax
ffffffff80024fac:	48 01 d0             	add    %rdx,%rax
ffffffff80024faf:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
ffffffff80024fb3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80024fb7:	8b 40 04             	mov    0x4(%rax),%eax
ffffffff80024fba:	83 f8 02             	cmp    $0x2,%eax
ffffffff80024fbd:	75 34                	jne    ffffffff80024ff3 <ZydisFormatterATTPrintMnemonic+0x1ae>
ffffffff80024fbf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80024fc3:	8b 40 28             	mov    0x28(%rax),%eax
ffffffff80024fc6:	83 f8 01             	cmp    $0x1,%eax
ffffffff80024fc9:	74 0c                	je     ffffffff80024fd7 <ZydisFormatterATTPrintMnemonic+0x192>
ffffffff80024fcb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80024fcf:	8b 40 28             	mov    0x28(%rax),%eax
ffffffff80024fd2:	83 f8 04             	cmp    $0x4,%eax
ffffffff80024fd5:	75 1c                	jne    ffffffff80024ff3 <ZydisFormatterATTPrintMnemonic+0x1ae>
ffffffff80024fd7:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff80024fdb:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
ffffffff80024fdf:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80024fe3:	48 89 ce             	mov    %rcx,%rsi
ffffffff80024fe6:	48 89 c7             	mov    %rax,%rdi
ffffffff80024fe9:	e8 b1 a4 00 00       	call   ffffffff8002f49f <ZydisFormatterHelperGetExplicitSize>
ffffffff80024fee:	89 45 fc             	mov    %eax,-0x4(%rbp)
ffffffff80024ff1:	eb 14                	jmp    ffffffff80025007 <ZydisFormatterATTPrintMnemonic+0x1c2>
ffffffff80024ff3:	80 45 fb 01          	addb   $0x1,-0x5(%rbp)
ffffffff80024ff7:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff80024ffb:	48 8b 00             	mov    (%rax),%rax
ffffffff80024ffe:	0f b6 40 19          	movzbl 0x19(%rax),%eax
ffffffff80025002:	38 45 fb             	cmp    %al,-0x5(%rbp)
ffffffff80025005:	72 95                	jb     ffffffff80024f9c <ZydisFormatterATTPrintMnemonic+0x157>
ffffffff80025007:	81 7d fc 00 02 00 00 	cmpl   $0x200,-0x4(%rbp)
ffffffff8002500e:	0f 84 24 01 00 00    	je     ffffffff80025138 <ZydisFormatterATTPrintMnemonic+0x2f3>
ffffffff80025014:	81 7d fc 00 02 00 00 	cmpl   $0x200,-0x4(%rbp)
ffffffff8002501b:	0f 87 33 01 00 00    	ja     ffffffff80025154 <ZydisFormatterATTPrintMnemonic+0x30f>
ffffffff80025021:	81 7d fc 00 01 00 00 	cmpl   $0x100,-0x4(%rbp)
ffffffff80025028:	0f 84 ee 00 00 00    	je     ffffffff8002511c <ZydisFormatterATTPrintMnemonic+0x2d7>
ffffffff8002502e:	81 7d fc 00 01 00 00 	cmpl   $0x100,-0x4(%rbp)
ffffffff80025035:	0f 87 19 01 00 00    	ja     ffffffff80025154 <ZydisFormatterATTPrintMnemonic+0x30f>
ffffffff8002503b:	81 7d fc 80 00 00 00 	cmpl   $0x80,-0x4(%rbp)
ffffffff80025042:	0f 84 b8 00 00 00    	je     ffffffff80025100 <ZydisFormatterATTPrintMnemonic+0x2bb>
ffffffff80025048:	81 7d fc 80 00 00 00 	cmpl   $0x80,-0x4(%rbp)
ffffffff8002504f:	0f 87 ff 00 00 00    	ja     ffffffff80025154 <ZydisFormatterATTPrintMnemonic+0x30f>
ffffffff80025055:	83 7d fc 40          	cmpl   $0x40,-0x4(%rbp)
ffffffff80025059:	0f 84 85 00 00 00    	je     ffffffff800250e4 <ZydisFormatterATTPrintMnemonic+0x29f>
ffffffff8002505f:	83 7d fc 40          	cmpl   $0x40,-0x4(%rbp)
ffffffff80025063:	0f 87 eb 00 00 00    	ja     ffffffff80025154 <ZydisFormatterATTPrintMnemonic+0x30f>
ffffffff80025069:	83 7d fc 20          	cmpl   $0x20,-0x4(%rbp)
ffffffff8002506d:	74 59                	je     ffffffff800250c8 <ZydisFormatterATTPrintMnemonic+0x283>
ffffffff8002506f:	83 7d fc 20          	cmpl   $0x20,-0x4(%rbp)
ffffffff80025073:	0f 87 db 00 00 00    	ja     ffffffff80025154 <ZydisFormatterATTPrintMnemonic+0x30f>
ffffffff80025079:	83 7d fc 08          	cmpl   $0x8,-0x4(%rbp)
ffffffff8002507d:	74 0b                	je     ffffffff8002508a <ZydisFormatterATTPrintMnemonic+0x245>
ffffffff8002507f:	83 7d fc 10          	cmpl   $0x10,-0x4(%rbp)
ffffffff80025083:	74 24                	je     ffffffff800250a9 <ZydisFormatterATTPrintMnemonic+0x264>
ffffffff80025085:	e9 ca 00 00 00       	jmp    ffffffff80025154 <ZydisFormatterATTPrintMnemonic+0x30f>
ffffffff8002508a:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002508e:	48 83 c0 10          	add    $0x10,%rax
ffffffff80025092:	48 8d 15 57 38 08 00 	lea    0x83857(%rip),%rdx        # ffffffff800a88f0 <STR_SIZE_8_ATT.lto_priv.0>
ffffffff80025099:	48 89 d6             	mov    %rdx,%rsi
ffffffff8002509c:	48 89 c7             	mov    %rax,%rdi
ffffffff8002509f:	e8 e9 eb ff ff       	call   ffffffff80023c8d <ZydisStringAppendShort.lto_priv.0>
ffffffff800250a4:	e9 ac 00 00 00       	jmp    ffffffff80025155 <ZydisFormatterATTPrintMnemonic+0x310>
ffffffff800250a9:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff800250ad:	48 83 c0 10          	add    $0x10,%rax
ffffffff800250b1:	48 8d 15 60 38 08 00 	lea    0x83860(%rip),%rdx        # ffffffff800a8918 <STR_SIZE_16_ATT.lto_priv.0>
ffffffff800250b8:	48 89 d6             	mov    %rdx,%rsi
ffffffff800250bb:	48 89 c7             	mov    %rax,%rdi
ffffffff800250be:	e8 ca eb ff ff       	call   ffffffff80023c8d <ZydisStringAppendShort.lto_priv.0>
ffffffff800250c3:	e9 8d 00 00 00       	jmp    ffffffff80025155 <ZydisFormatterATTPrintMnemonic+0x310>
ffffffff800250c8:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff800250cc:	48 83 c0 10          	add    $0x10,%rax
ffffffff800250d0:	48 8d 15 69 38 08 00 	lea    0x83869(%rip),%rdx        # ffffffff800a8940 <STR_SIZE_32_ATT.lto_priv.0>
ffffffff800250d7:	48 89 d6             	mov    %rdx,%rsi
ffffffff800250da:	48 89 c7             	mov    %rax,%rdi
ffffffff800250dd:	e8 ab eb ff ff       	call   ffffffff80023c8d <ZydisStringAppendShort.lto_priv.0>
ffffffff800250e2:	eb 71                	jmp    ffffffff80025155 <ZydisFormatterATTPrintMnemonic+0x310>
ffffffff800250e4:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff800250e8:	48 83 c0 10          	add    $0x10,%rax
ffffffff800250ec:	48 8d 15 8d 38 08 00 	lea    0x8388d(%rip),%rdx        # ffffffff800a8980 <STR_SIZE_64_ATT.lto_priv.0>
ffffffff800250f3:	48 89 d6             	mov    %rdx,%rsi
ffffffff800250f6:	48 89 c7             	mov    %rax,%rdi
ffffffff800250f9:	e8 8f eb ff ff       	call   ffffffff80023c8d <ZydisStringAppendShort.lto_priv.0>
ffffffff800250fe:	eb 55                	jmp    ffffffff80025155 <ZydisFormatterATTPrintMnemonic+0x310>
ffffffff80025100:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff80025104:	48 83 c0 10          	add    $0x10,%rax
ffffffff80025108:	48 8d 15 b1 38 08 00 	lea    0x838b1(%rip),%rdx        # ffffffff800a89c0 <STR_SIZE_128_ATT.lto_priv.0>
ffffffff8002510f:	48 89 d6             	mov    %rdx,%rsi
ffffffff80025112:	48 89 c7             	mov    %rax,%rdi
ffffffff80025115:	e8 73 eb ff ff       	call   ffffffff80023c8d <ZydisStringAppendShort.lto_priv.0>
ffffffff8002511a:	eb 39                	jmp    ffffffff80025155 <ZydisFormatterATTPrintMnemonic+0x310>
ffffffff8002511c:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff80025120:	48 83 c0 10          	add    $0x10,%rax
ffffffff80025124:	48 8d 15 bd 38 08 00 	lea    0x838bd(%rip),%rdx        # ffffffff800a89e8 <STR_SIZE_256_ATT.lto_priv.0>
ffffffff8002512b:	48 89 d6             	mov    %rdx,%rsi
ffffffff8002512e:	48 89 c7             	mov    %rax,%rdi
ffffffff80025131:	e8 57 eb ff ff       	call   ffffffff80023c8d <ZydisStringAppendShort.lto_priv.0>
ffffffff80025136:	eb 1d                	jmp    ffffffff80025155 <ZydisFormatterATTPrintMnemonic+0x310>
ffffffff80025138:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002513c:	48 83 c0 10          	add    $0x10,%rax
ffffffff80025140:	48 8d 15 c9 38 08 00 	lea    0x838c9(%rip),%rdx        # ffffffff800a8a10 <STR_SIZE_512_ATT.lto_priv.0>
ffffffff80025147:	48 89 d6             	mov    %rdx,%rsi
ffffffff8002514a:	48 89 c7             	mov    %rax,%rdi
ffffffff8002514d:	e8 3b eb ff ff       	call   ffffffff80023c8d <ZydisStringAppendShort.lto_priv.0>
ffffffff80025152:	eb 01                	jmp    ffffffff80025155 <ZydisFormatterATTPrintMnemonic+0x310>
ffffffff80025154:	90                   	nop
ffffffff80025155:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80025159:	0f b6 40 09          	movzbl 0x9(%rax),%eax
ffffffff8002515d:	84 c0                	test   %al,%al
ffffffff8002515f:	74 6f                	je     ffffffff800251d0 <ZydisFormatterATTPrintMnemonic+0x38b>
ffffffff80025161:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff80025165:	48 8b 00             	mov    (%rax),%rax
ffffffff80025168:	8b 40 68             	mov    0x68(%rax),%eax
ffffffff8002516b:	83 f8 02             	cmp    $0x2,%eax
ffffffff8002516e:	74 33                	je     ffffffff800251a3 <ZydisFormatterATTPrintMnemonic+0x35e>
ffffffff80025170:	83 f8 02             	cmp    $0x2,%eax
ffffffff80025173:	77 53                	ja     ffffffff800251c8 <ZydisFormatterATTPrintMnemonic+0x383>
ffffffff80025175:	85 c0                	test   %eax,%eax
ffffffff80025177:	74 56                	je     ffffffff800251cf <ZydisFormatterATTPrintMnemonic+0x38a>
ffffffff80025179:	83 f8 01             	cmp    $0x1,%eax
ffffffff8002517c:	75 4a                	jne    ffffffff800251c8 <ZydisFormatterATTPrintMnemonic+0x383>
ffffffff8002517e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80025182:	8b 40 38             	mov    0x38(%rax),%eax
ffffffff80025185:	89 c2                	mov    %eax,%edx
ffffffff80025187:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002518b:	48 83 c0 10          	add    $0x10,%rax
ffffffff8002518f:	48 8d 0d 4a 37 08 00 	lea    0x8374a(%rip),%rcx        # ffffffff800a88e0 <STR_SHORT.lto_priv.0>
ffffffff80025196:	48 89 ce             	mov    %rcx,%rsi
ffffffff80025199:	48 89 c7             	mov    %rax,%rdi
ffffffff8002519c:	e8 a6 eb ff ff       	call   ffffffff80023d47 <ZydisStringAppendShortCase.lto_priv.0>
ffffffff800251a1:	eb 33                	jmp    ffffffff800251d6 <ZydisFormatterATTPrintMnemonic+0x391>
ffffffff800251a3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff800251a7:	8b 40 38             	mov    0x38(%rax),%eax
ffffffff800251aa:	89 c2                	mov    %eax,%edx
ffffffff800251ac:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff800251b0:	48 83 c0 10          	add    $0x10,%rax
ffffffff800251b4:	48 8d 0d 2d 34 08 00 	lea    0x8342d(%rip),%rcx        # ffffffff800a85e8 <STR_NEAR.lto_priv.0>
ffffffff800251bb:	48 89 ce             	mov    %rcx,%rsi
ffffffff800251be:	48 89 c7             	mov    %rax,%rdi
ffffffff800251c1:	e8 81 eb ff ff       	call   ffffffff80023d47 <ZydisStringAppendShortCase.lto_priv.0>
ffffffff800251c6:	eb 0e                	jmp    ffffffff800251d6 <ZydisFormatterATTPrintMnemonic+0x391>
ffffffff800251c8:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff800251cd:	eb 07                	jmp    ffffffff800251d6 <ZydisFormatterATTPrintMnemonic+0x391>
ffffffff800251cf:	90                   	nop
ffffffff800251d0:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff800251d5:	90                   	nop
ffffffff800251d6:	c9                   	leave  
ffffffff800251d7:	c3                   	ret    

ffffffff800251d8 <ZydisFormatterATTPrintRegister>:
ffffffff800251d8:	f3 0f 1e fa          	endbr64 
ffffffff800251dc:	55                   	push   %rbp
ffffffff800251dd:	48 89 e5             	mov    %rsp,%rbp
ffffffff800251e0:	48 83 ec 30          	sub    $0x30,%rsp
ffffffff800251e4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff800251e8:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
ffffffff800251ec:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
ffffffff800251f0:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
ffffffff800251f3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff800251f7:	0f b6 00             	movzbl (%rax),%eax
ffffffff800251fa:	84 c0                	test   %al,%al
ffffffff800251fc:	74 28                	je     ffffffff80025226 <ZydisFormatterATTPrintRegister+0x4e>
ffffffff800251fe:	48 8d 15 1b 95 01 00 	lea    0x1951b(%rip),%rdx        # ffffffff8003e720 <TOK_DATA_REGISTER.lto_priv.0>
ffffffff80025205:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80025209:	48 89 d6             	mov    %rdx,%rsi
ffffffff8002520c:	48 89 c7             	mov    %rax,%rdi
ffffffff8002520f:	e8 48 ef ff ff       	call   ffffffff8002415c <ZydisFormatterBufferAppendPredefined.lto_priv.0>
ffffffff80025214:	89 45 f8             	mov    %eax,-0x8(%rbp)
ffffffff80025217:	8b 45 f8             	mov    -0x8(%rbp),%eax
ffffffff8002521a:	85 c0                	test   %eax,%eax
ffffffff8002521c:	79 31                	jns    ffffffff8002524f <ZydisFormatterATTPrintRegister+0x77>
ffffffff8002521e:	8b 45 f8             	mov    -0x8(%rbp),%eax
ffffffff80025221:	e9 84 00 00 00       	jmp    ffffffff800252aa <ZydisFormatterATTPrintRegister+0xd2>
ffffffff80025226:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8002522a:	48 83 c0 10          	add    $0x10,%rax
ffffffff8002522e:	48 8d 15 93 36 08 00 	lea    0x83693(%rip),%rdx        # ffffffff800a88c8 <STR_REGISTER.lto_priv.0>
ffffffff80025235:	48 89 d6             	mov    %rdx,%rsi
ffffffff80025238:	48 89 c7             	mov    %rax,%rdi
ffffffff8002523b:	e8 4d ea ff ff       	call   ffffffff80023c8d <ZydisStringAppendShort.lto_priv.0>
ffffffff80025240:	89 45 fc             	mov    %eax,-0x4(%rbp)
ffffffff80025243:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff80025246:	85 c0                	test   %eax,%eax
ffffffff80025248:	79 05                	jns    ffffffff8002524f <ZydisFormatterATTPrintRegister+0x77>
ffffffff8002524a:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8002524d:	eb 5b                	jmp    ffffffff800252aa <ZydisFormatterATTPrintRegister+0xd2>
ffffffff8002524f:	8b 45 d4             	mov    -0x2c(%rbp),%eax
ffffffff80025252:	89 c7                	mov    %eax,%edi
ffffffff80025254:	e8 59 07 00 00       	call   ffffffff800259b2 <ZydisRegisterGetStringWrapped>
ffffffff80025259:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff8002525d:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
ffffffff80025262:	75 25                	jne    ffffffff80025289 <ZydisFormatterATTPrintRegister+0xb1>
ffffffff80025264:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80025268:	8b 40 3c             	mov    0x3c(%rax),%eax
ffffffff8002526b:	89 c2                	mov    %eax,%edx
ffffffff8002526d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80025271:	48 83 c0 10          	add    $0x10,%rax
ffffffff80025275:	48 8d 0d dc 32 08 00 	lea    0x832dc(%rip),%rcx        # ffffffff800a8558 <STR_INVALID_REG.lto_priv.0>
ffffffff8002527c:	48 89 ce             	mov    %rcx,%rsi
ffffffff8002527f:	48 89 c7             	mov    %rax,%rdi
ffffffff80025282:	e8 c0 ea ff ff       	call   ffffffff80023d47 <ZydisStringAppendShortCase.lto_priv.0>
ffffffff80025287:	eb 21                	jmp    ffffffff800252aa <ZydisFormatterATTPrintRegister+0xd2>
ffffffff80025289:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002528d:	8b 40 3c             	mov    0x3c(%rax),%eax
ffffffff80025290:	89 c2                	mov    %eax,%edx
ffffffff80025292:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80025296:	48 83 c0 10          	add    $0x10,%rax
ffffffff8002529a:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
ffffffff8002529e:	48 89 ce             	mov    %rcx,%rsi
ffffffff800252a1:	48 89 c7             	mov    %rax,%rdi
ffffffff800252a4:	e8 9e ea ff ff       	call   ffffffff80023d47 <ZydisStringAppendShortCase.lto_priv.0>
ffffffff800252a9:	90                   	nop
ffffffff800252aa:	c9                   	leave  
ffffffff800252ab:	c3                   	ret    

ffffffff800252ac <ZydisFormatterATTPrintAddressABS>:
ffffffff800252ac:	f3 0f 1e fa          	endbr64 
ffffffff800252b0:	55                   	push   %rbp
ffffffff800252b1:	48 89 e5             	mov    %rsp,%rbp
ffffffff800252b4:	48 83 ec 30          	sub    $0x30,%rsp
ffffffff800252b8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff800252bc:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
ffffffff800252c0:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
ffffffff800252c4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff800252c8:	48 8b 00             	mov    (%rax),%rax
ffffffff800252cb:	8b 40 68             	mov    0x68(%rax),%eax
ffffffff800252ce:	85 c0                	test   %eax,%eax
ffffffff800252d0:	74 69                	je     ffffffff8002533b <ZydisFormatterATTPrintAddressABS+0x8f>
ffffffff800252d2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff800252d6:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff800252da:	8b 40 04             	mov    0x4(%rax),%eax
ffffffff800252dd:	83 f8 02             	cmp    $0x2,%eax
ffffffff800252e0:	75 59                	jne    ffffffff8002533b <ZydisFormatterATTPrintAddressABS+0x8f>
ffffffff800252e2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff800252e6:	0f b6 00             	movzbl (%rax),%eax
ffffffff800252e9:	84 c0                	test   %al,%al
ffffffff800252eb:	74 25                	je     ffffffff80025312 <ZydisFormatterATTPrintAddressABS+0x66>
ffffffff800252ed:	48 8d 15 08 92 01 00 	lea    0x19208(%rip),%rdx        # ffffffff8003e4fc <TOK_DATA_MUL.lto_priv.0>
ffffffff800252f4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff800252f8:	48 89 d6             	mov    %rdx,%rsi
ffffffff800252fb:	48 89 c7             	mov    %rax,%rdi
ffffffff800252fe:	e8 59 ee ff ff       	call   ffffffff8002415c <ZydisFormatterBufferAppendPredefined.lto_priv.0>
ffffffff80025303:	89 45 f8             	mov    %eax,-0x8(%rbp)
ffffffff80025306:	8b 45 f8             	mov    -0x8(%rbp),%eax
ffffffff80025309:	85 c0                	test   %eax,%eax
ffffffff8002530b:	79 2e                	jns    ffffffff8002533b <ZydisFormatterATTPrintAddressABS+0x8f>
ffffffff8002530d:	8b 45 f8             	mov    -0x8(%rbp),%eax
ffffffff80025310:	eb 41                	jmp    ffffffff80025353 <ZydisFormatterATTPrintAddressABS+0xa7>
ffffffff80025312:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80025316:	48 83 c0 10          	add    $0x10,%rax
ffffffff8002531a:	48 8d 15 af 32 08 00 	lea    0x832af(%rip),%rdx        # ffffffff800a85d0 <STR_MUL.lto_priv.0>
ffffffff80025321:	48 89 d6             	mov    %rdx,%rsi
ffffffff80025324:	48 89 c7             	mov    %rax,%rdi
ffffffff80025327:	e8 61 e9 ff ff       	call   ffffffff80023c8d <ZydisStringAppendShort.lto_priv.0>
ffffffff8002532c:	89 45 fc             	mov    %eax,-0x4(%rbp)
ffffffff8002532f:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff80025332:	85 c0                	test   %eax,%eax
ffffffff80025334:	79 05                	jns    ffffffff8002533b <ZydisFormatterATTPrintAddressABS+0x8f>
ffffffff80025336:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff80025339:	eb 18                	jmp    ffffffff80025353 <ZydisFormatterATTPrintAddressABS+0xa7>
ffffffff8002533b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff8002533f:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
ffffffff80025343:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80025347:	48 89 ce             	mov    %rcx,%rsi
ffffffff8002534a:	48 89 c7             	mov    %rax,%rdi
ffffffff8002534d:	e8 9f a7 00 00       	call   ffffffff8002faf1 <ZydisFormatterBasePrintAddressABS>
ffffffff80025352:	90                   	nop
ffffffff80025353:	c9                   	leave  
ffffffff80025354:	c3                   	ret    

ffffffff80025355 <ZydisFormatterATTPrintDISP>:
ffffffff80025355:	f3 0f 1e fa          	endbr64 
ffffffff80025359:	55                   	push   %rbp
ffffffff8002535a:	48 89 e5             	mov    %rsp,%rbp
ffffffff8002535d:	48 83 ec 40          	sub    $0x40,%rsp
ffffffff80025361:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
ffffffff80025365:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
ffffffff80025369:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
ffffffff8002536d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff80025371:	0f b6 00             	movzbl (%rax),%eax
ffffffff80025374:	84 c0                	test   %al,%al
ffffffff80025376:	74 23                	je     ffffffff8002539b <ZydisFormatterATTPrintDISP+0x46>
ffffffff80025378:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8002537c:	be 0a 00 00 00       	mov    $0xa,%esi
ffffffff80025381:	48 89 c7             	mov    %rax,%rdi
ffffffff80025384:	e8 80 07 01 00       	call   ffffffff80035b09 <ZydisFormatterBufferAppend>
ffffffff80025389:	89 45 fc             	mov    %eax,-0x4(%rbp)
ffffffff8002538c:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8002538f:	85 c0                	test   %eax,%eax
ffffffff80025391:	79 08                	jns    ffffffff8002539b <ZydisFormatterATTPrintDISP+0x46>
ffffffff80025393:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff80025396:	e9 b3 02 00 00       	jmp    ffffffff8002564e <ZydisFormatterATTPrintDISP+0x2f9>
ffffffff8002539b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8002539f:	8b 40 20             	mov    0x20(%rax),%eax
ffffffff800253a2:	83 f8 01             	cmp    $0x1,%eax
ffffffff800253a5:	76 0e                	jbe    ffffffff800253b5 <ZydisFormatterATTPrintDISP+0x60>
ffffffff800253a7:	83 f8 02             	cmp    $0x2,%eax
ffffffff800253aa:	0f 84 50 01 00 00    	je     ffffffff80025500 <ZydisFormatterATTPrintDISP+0x1ab>
ffffffff800253b0:	e9 8d 02 00 00       	jmp    ffffffff80025642 <ZydisFormatterATTPrintDISP+0x2ed>
ffffffff800253b5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff800253b9:	8b 40 1c             	mov    0x1c(%rax),%eax
ffffffff800253bc:	85 c0                	test   %eax,%eax
ffffffff800253be:	74 0e                	je     ffffffff800253ce <ZydisFormatterATTPrintDISP+0x79>
ffffffff800253c0:	83 f8 01             	cmp    $0x1,%eax
ffffffff800253c3:	0f 84 89 00 00 00    	je     ffffffff80025452 <ZydisFormatterATTPrintDISP+0xfd>
ffffffff800253c9:	e9 22 01 00 00       	jmp    ffffffff800254f0 <ZydisFormatterATTPrintDISP+0x19b>
ffffffff800253ce:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff800253d2:	8b 40 1c             	mov    0x1c(%rax),%eax
ffffffff800253d5:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff800253d9:	89 c0                	mov    %eax,%eax
ffffffff800253db:	48 69 c0 b0 00 00 00 	imul   $0xb0,%rax,%rax
ffffffff800253e2:	48 01 d0             	add    %rdx,%rax
ffffffff800253e5:	48 05 a8 00 00 00    	add    $0xa8,%rax
ffffffff800253eb:	4c 8b 00             	mov    (%rax),%r8
ffffffff800253ee:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff800253f2:	8b 40 1c             	mov    0x1c(%rax),%eax
ffffffff800253f5:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff800253f9:	89 c0                	mov    %eax,%eax
ffffffff800253fb:	48 69 c0 b0 00 00 00 	imul   $0xb0,%rax,%rax
ffffffff80025402:	48 01 d0             	add    %rdx,%rax
ffffffff80025405:	48 83 c0 50          	add    $0x50,%rax
ffffffff80025409:	48 8b 08             	mov    (%rax),%rcx
ffffffff8002540c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80025410:	8b 40 24             	mov    0x24(%rax),%eax
ffffffff80025413:	0f b6 c0             	movzbl %al,%eax
ffffffff80025416:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
ffffffff8002541a:	48 8b 52 10          	mov    0x10(%rdx),%rdx
ffffffff8002541e:	48 8b 72 48          	mov    0x48(%rdx),%rsi
ffffffff80025422:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
ffffffff80025426:	48 8d 7a 10          	lea    0x10(%rdx),%rdi
ffffffff8002542a:	4d 89 c1             	mov    %r8,%r9
ffffffff8002542d:	49 89 c8             	mov    %rcx,%r8
ffffffff80025430:	b9 00 00 00 00       	mov    $0x0,%ecx
ffffffff80025435:	89 c2                	mov    %eax,%edx
ffffffff80025437:	e8 ee ea ff ff       	call   ffffffff80023f2a <ZydisStringAppendDecS.lto_priv.0>
ffffffff8002543c:	89 45 ec             	mov    %eax,-0x14(%rbp)
ffffffff8002543f:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff80025442:	85 c0                	test   %eax,%eax
ffffffff80025444:	0f 89 b0 00 00 00    	jns    ffffffff800254fa <ZydisFormatterATTPrintDISP+0x1a5>
ffffffff8002544a:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff8002544d:	e9 fc 01 00 00       	jmp    ffffffff8002564e <ZydisFormatterATTPrintDISP+0x2f9>
ffffffff80025452:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80025456:	8b 40 1c             	mov    0x1c(%rax),%eax
ffffffff80025459:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff8002545d:	89 c0                	mov    %eax,%eax
ffffffff8002545f:	48 69 c0 b0 00 00 00 	imul   $0xb0,%rax,%rax
ffffffff80025466:	48 01 d0             	add    %rdx,%rax
ffffffff80025469:	48 05 a8 00 00 00    	add    $0xa8,%rax
ffffffff8002546f:	4c 8b 00             	mov    (%rax),%r8
ffffffff80025472:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80025476:	8b 40 1c             	mov    0x1c(%rax),%eax
ffffffff80025479:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff8002547d:	89 c0                	mov    %eax,%eax
ffffffff8002547f:	48 69 c0 b0 00 00 00 	imul   $0xb0,%rax,%rax
ffffffff80025486:	48 01 d0             	add    %rdx,%rax
ffffffff80025489:	48 83 c0 50          	add    $0x50,%rax
ffffffff8002548d:	48 8b 08             	mov    (%rax),%rcx
ffffffff80025490:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80025494:	0f b6 40 48          	movzbl 0x48(%rax),%eax
ffffffff80025498:	44 0f b6 d0          	movzbl %al,%r10d
ffffffff8002549c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff800254a0:	0f b6 40 49          	movzbl 0x49(%rax),%eax
ffffffff800254a4:	0f b6 d0             	movzbl %al,%edx
ffffffff800254a7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff800254ab:	8b 40 24             	mov    0x24(%rax),%eax
ffffffff800254ae:	0f b6 c0             	movzbl %al,%eax
ffffffff800254b1:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
ffffffff800254b5:	48 8b 76 10          	mov    0x10(%rsi),%rsi
ffffffff800254b9:	48 8b 76 48          	mov    0x48(%rsi),%rsi
ffffffff800254bd:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
ffffffff800254c1:	48 83 c7 10          	add    $0x10,%rdi
ffffffff800254c5:	41 50                	push   %r8
ffffffff800254c7:	51                   	push   %rcx
ffffffff800254c8:	41 b9 00 00 00 00    	mov    $0x0,%r9d
ffffffff800254ce:	45 89 d0             	mov    %r10d,%r8d
ffffffff800254d1:	89 d1                	mov    %edx,%ecx
ffffffff800254d3:	89 c2                	mov    %eax,%edx
ffffffff800254d5:	e8 4f eb ff ff       	call   ffffffff80024029 <ZydisStringAppendHexS.lto_priv.0>
ffffffff800254da:	48 83 c4 10          	add    $0x10,%rsp
ffffffff800254de:	89 45 f0             	mov    %eax,-0x10(%rbp)
ffffffff800254e1:	8b 45 f0             	mov    -0x10(%rbp),%eax
ffffffff800254e4:	85 c0                	test   %eax,%eax
ffffffff800254e6:	79 12                	jns    ffffffff800254fa <ZydisFormatterATTPrintDISP+0x1a5>
ffffffff800254e8:	8b 45 f0             	mov    -0x10(%rbp),%eax
ffffffff800254eb:	e9 5e 01 00 00       	jmp    ffffffff8002564e <ZydisFormatterATTPrintDISP+0x2f9>
ffffffff800254f0:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff800254f5:	e9 54 01 00 00       	jmp    ffffffff8002564e <ZydisFormatterATTPrintDISP+0x2f9>
ffffffff800254fa:	90                   	nop
ffffffff800254fb:	e9 49 01 00 00       	jmp    ffffffff80025649 <ZydisFormatterATTPrintDISP+0x2f4>
ffffffff80025500:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80025504:	8b 40 1c             	mov    0x1c(%rax),%eax
ffffffff80025507:	85 c0                	test   %eax,%eax
ffffffff80025509:	74 0e                	je     ffffffff80025519 <ZydisFormatterATTPrintDISP+0x1c4>
ffffffff8002550b:	83 f8 01             	cmp    $0x1,%eax
ffffffff8002550e:	0f 84 8a 00 00 00    	je     ffffffff8002559e <ZydisFormatterATTPrintDISP+0x249>
ffffffff80025514:	e9 1f 01 00 00       	jmp    ffffffff80025638 <ZydisFormatterATTPrintDISP+0x2e3>
ffffffff80025519:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8002551d:	8b 40 1c             	mov    0x1c(%rax),%eax
ffffffff80025520:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff80025524:	89 c0                	mov    %eax,%eax
ffffffff80025526:	48 69 c0 b0 00 00 00 	imul   $0xb0,%rax,%rax
ffffffff8002552d:	48 01 d0             	add    %rdx,%rax
ffffffff80025530:	48 05 a8 00 00 00    	add    $0xa8,%rax
ffffffff80025536:	48 8b 30             	mov    (%rax),%rsi
ffffffff80025539:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8002553d:	8b 40 1c             	mov    0x1c(%rax),%eax
ffffffff80025540:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff80025544:	89 c0                	mov    %eax,%eax
ffffffff80025546:	48 69 c0 b0 00 00 00 	imul   $0xb0,%rax,%rax
ffffffff8002554d:	48 01 d0             	add    %rdx,%rax
ffffffff80025550:	48 83 c0 50          	add    $0x50,%rax
ffffffff80025554:	48 8b 10             	mov    (%rax),%rdx
ffffffff80025557:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8002555b:	8b 40 24             	mov    0x24(%rax),%eax
ffffffff8002555e:	0f b6 c0             	movzbl %al,%eax
ffffffff80025561:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
ffffffff80025565:	48 8b 49 10          	mov    0x10(%rcx),%rcx
ffffffff80025569:	48 8b 49 48          	mov    0x48(%rcx),%rcx
ffffffff8002556d:	49 89 c9             	mov    %rcx,%r9
ffffffff80025570:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
ffffffff80025574:	48 8d 79 10          	lea    0x10(%rcx),%rdi
ffffffff80025578:	49 89 f0             	mov    %rsi,%r8
ffffffff8002557b:	48 89 d1             	mov    %rdx,%rcx
ffffffff8002557e:	89 c2                	mov    %eax,%edx
ffffffff80025580:	4c 89 ce             	mov    %r9,%rsi
ffffffff80025583:	e8 a5 0a 00 00       	call   ffffffff8002602d <ZydisStringAppendDecU>
ffffffff80025588:	89 45 f4             	mov    %eax,-0xc(%rbp)
ffffffff8002558b:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff8002558e:	85 c0                	test   %eax,%eax
ffffffff80025590:	0f 89 a9 00 00 00    	jns    ffffffff8002563f <ZydisFormatterATTPrintDISP+0x2ea>
ffffffff80025596:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff80025599:	e9 b0 00 00 00       	jmp    ffffffff8002564e <ZydisFormatterATTPrintDISP+0x2f9>
ffffffff8002559e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff800255a2:	8b 40 1c             	mov    0x1c(%rax),%eax
ffffffff800255a5:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff800255a9:	89 c0                	mov    %eax,%eax
ffffffff800255ab:	48 69 c0 b0 00 00 00 	imul   $0xb0,%rax,%rax
ffffffff800255b2:	48 01 d0             	add    %rdx,%rax
ffffffff800255b5:	48 05 a8 00 00 00    	add    $0xa8,%rax
ffffffff800255bb:	48 8b 08             	mov    (%rax),%rcx
ffffffff800255be:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff800255c2:	8b 40 1c             	mov    0x1c(%rax),%eax
ffffffff800255c5:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff800255c9:	89 c0                	mov    %eax,%eax
ffffffff800255cb:	48 69 c0 b0 00 00 00 	imul   $0xb0,%rax,%rax
ffffffff800255d2:	48 01 d0             	add    %rdx,%rax
ffffffff800255d5:	48 83 c0 50          	add    $0x50,%rax
ffffffff800255d9:	4c 8b 08             	mov    (%rax),%r9
ffffffff800255dc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff800255e0:	0f b6 40 48          	movzbl 0x48(%rax),%eax
ffffffff800255e4:	44 0f b6 c0          	movzbl %al,%r8d
ffffffff800255e8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff800255ec:	0f b6 40 49          	movzbl 0x49(%rax),%eax
ffffffff800255f0:	0f b6 d0             	movzbl %al,%edx
ffffffff800255f3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff800255f7:	8b 40 24             	mov    0x24(%rax),%eax
ffffffff800255fa:	0f b6 c0             	movzbl %al,%eax
ffffffff800255fd:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
ffffffff80025601:	48 8b 76 10          	mov    0x10(%rsi),%rsi
ffffffff80025605:	48 8b 76 48          	mov    0x48(%rsi),%rsi
ffffffff80025609:	49 89 f2             	mov    %rsi,%r10
ffffffff8002560c:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
ffffffff80025610:	48 8d 7e 10          	lea    0x10(%rsi),%rdi
ffffffff80025614:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80025618:	51                   	push   %rcx
ffffffff80025619:	89 d1                	mov    %edx,%ecx
ffffffff8002561b:	89 c2                	mov    %eax,%edx
ffffffff8002561d:	4c 89 d6             	mov    %r10,%rsi
ffffffff80025620:	e8 9a 0a 00 00       	call   ffffffff800260bf <ZydisStringAppendHexU>
ffffffff80025625:	48 83 c4 10          	add    $0x10,%rsp
ffffffff80025629:	89 45 f8             	mov    %eax,-0x8(%rbp)
ffffffff8002562c:	8b 45 f8             	mov    -0x8(%rbp),%eax
ffffffff8002562f:	85 c0                	test   %eax,%eax
ffffffff80025631:	79 0c                	jns    ffffffff8002563f <ZydisFormatterATTPrintDISP+0x2ea>
ffffffff80025633:	8b 45 f8             	mov    -0x8(%rbp),%eax
ffffffff80025636:	eb 16                	jmp    ffffffff8002564e <ZydisFormatterATTPrintDISP+0x2f9>
ffffffff80025638:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff8002563d:	eb 0f                	jmp    ffffffff8002564e <ZydisFormatterATTPrintDISP+0x2f9>
ffffffff8002563f:	90                   	nop
ffffffff80025640:	eb 07                	jmp    ffffffff80025649 <ZydisFormatterATTPrintDISP+0x2f4>
ffffffff80025642:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff80025647:	eb 05                	jmp    ffffffff8002564e <ZydisFormatterATTPrintDISP+0x2f9>
ffffffff80025649:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff8002564e:	c9                   	leave  
ffffffff8002564f:	c3                   	ret    

ffffffff80025650 <ZydisFormatterATTPrintIMM>:
ffffffff80025650:	f3 0f 1e fa          	endbr64 
ffffffff80025654:	55                   	push   %rbp
ffffffff80025655:	48 89 e5             	mov    %rsp,%rbp
ffffffff80025658:	48 83 ec 30          	sub    $0x30,%rsp
ffffffff8002565c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff80025660:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
ffffffff80025664:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
ffffffff80025668:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8002566c:	0f b6 00             	movzbl (%rax),%eax
ffffffff8002566f:	84 c0                	test   %al,%al
ffffffff80025671:	74 25                	je     ffffffff80025698 <ZydisFormatterATTPrintIMM+0x48>
ffffffff80025673:	48 8d 15 46 8e 01 00 	lea    0x18e46(%rip),%rdx        # ffffffff8003e4c0 <TOK_DATA_IMMEDIATE.lto_priv.0>
ffffffff8002567a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8002567e:	48 89 d6             	mov    %rdx,%rsi
ffffffff80025681:	48 89 c7             	mov    %rax,%rdi
ffffffff80025684:	e8 d3 ea ff ff       	call   ffffffff8002415c <ZydisFormatterBufferAppendPredefined.lto_priv.0>
ffffffff80025689:	89 45 f8             	mov    %eax,-0x8(%rbp)
ffffffff8002568c:	8b 45 f8             	mov    -0x8(%rbp),%eax
ffffffff8002568f:	85 c0                	test   %eax,%eax
ffffffff80025691:	79 2e                	jns    ffffffff800256c1 <ZydisFormatterATTPrintIMM+0x71>
ffffffff80025693:	8b 45 f8             	mov    -0x8(%rbp),%eax
ffffffff80025696:	eb 41                	jmp    ffffffff800256d9 <ZydisFormatterATTPrintIMM+0x89>
ffffffff80025698:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8002569c:	48 83 c0 10          	add    $0x10,%rax
ffffffff800256a0:	48 8d 15 81 2e 08 00 	lea    0x82e81(%rip),%rdx        # ffffffff800a8528 <STR_IMMEDIATE.lto_priv.0>
ffffffff800256a7:	48 89 d6             	mov    %rdx,%rsi
ffffffff800256aa:	48 89 c7             	mov    %rax,%rdi
ffffffff800256ad:	e8 db e5 ff ff       	call   ffffffff80023c8d <ZydisStringAppendShort.lto_priv.0>
ffffffff800256b2:	89 45 fc             	mov    %eax,-0x4(%rbp)
ffffffff800256b5:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff800256b8:	85 c0                	test   %eax,%eax
ffffffff800256ba:	79 05                	jns    ffffffff800256c1 <ZydisFormatterATTPrintIMM+0x71>
ffffffff800256bc:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff800256bf:	eb 18                	jmp    ffffffff800256d9 <ZydisFormatterATTPrintIMM+0x89>
ffffffff800256c1:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff800256c5:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
ffffffff800256c9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800256cd:	48 89 ce             	mov    %rcx,%rsi
ffffffff800256d0:	48 89 c7             	mov    %rax,%rdi
ffffffff800256d3:	e8 d8 a9 00 00       	call   ffffffff800300b0 <ZydisFormatterBasePrintIMM>
ffffffff800256d8:	90                   	nop
ffffffff800256d9:	c9                   	leave  
ffffffff800256da:	c3                   	ret    

ffffffff800256db <ZydisRegisterEncode>:
ffffffff800256db:	f3 0f 1e fa          	endbr64 
ffffffff800256df:	55                   	push   %rbp
ffffffff800256e0:	48 89 e5             	mov    %rsp,%rbp
ffffffff800256e3:	48 83 ec 18          	sub    $0x18,%rsp
ffffffff800256e7:	89 7d ec             	mov    %edi,-0x14(%rbp)
ffffffff800256ea:	89 f0                	mov    %esi,%eax
ffffffff800256ec:	88 45 e8             	mov    %al,-0x18(%rbp)
ffffffff800256ef:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
ffffffff800256f3:	74 0c                	je     ffffffff80025701 <ZydisRegisterEncode+0x26>
ffffffff800256f5:	83 7d ec 0b          	cmpl   $0xb,-0x14(%rbp)
ffffffff800256f9:	74 06                	je     ffffffff80025701 <ZydisRegisterEncode+0x26>
ffffffff800256fb:	83 7d ec 0c          	cmpl   $0xc,-0x14(%rbp)
ffffffff800256ff:	75 07                	jne    ffffffff80025708 <ZydisRegisterEncode+0x2d>
ffffffff80025701:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80025706:	eb 57                	jmp    ffffffff8002575f <ZydisRegisterEncode+0x84>
ffffffff80025708:	83 7d ec 13          	cmpl   $0x13,-0x14(%rbp)
ffffffff8002570c:	76 07                	jbe    ffffffff80025715 <ZydisRegisterEncode+0x3a>
ffffffff8002570e:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80025713:	eb 4a                	jmp    ffffffff8002575f <ZydisRegisterEncode+0x84>
ffffffff80025715:	8b 55 ec             	mov    -0x14(%rbp),%edx
ffffffff80025718:	48 89 d0             	mov    %rdx,%rax
ffffffff8002571b:	48 01 c0             	add    %rax,%rax
ffffffff8002571e:	48 01 d0             	add    %rdx,%rax
ffffffff80025721:	48 c1 e0 02          	shl    $0x2,%rax
ffffffff80025725:	48 8d 15 b4 9d 01 00 	lea    0x19db4(%rip),%rdx        # ffffffff8003f4e0 <REG_CLASS_LOOKUP>
ffffffff8002572c:	48 01 d0             	add    %rdx,%rax
ffffffff8002572f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff80025733:	0f b6 45 e8          	movzbl -0x18(%rbp),%eax
ffffffff80025737:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff8002573b:	8b 4a 04             	mov    0x4(%rdx),%ecx
ffffffff8002573e:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff80025742:	8b 32                	mov    (%rdx),%esi
ffffffff80025744:	29 f1                	sub    %esi,%ecx
ffffffff80025746:	89 ca                	mov    %ecx,%edx
ffffffff80025748:	39 d0                	cmp    %edx,%eax
ffffffff8002574a:	77 0e                	ja     ffffffff8002575a <ZydisRegisterEncode+0x7f>
ffffffff8002574c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80025750:	8b 10                	mov    (%rax),%edx
ffffffff80025752:	0f b6 45 e8          	movzbl -0x18(%rbp),%eax
ffffffff80025756:	01 d0                	add    %edx,%eax
ffffffff80025758:	eb 05                	jmp    ffffffff8002575f <ZydisRegisterEncode+0x84>
ffffffff8002575a:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8002575f:	c9                   	leave  
ffffffff80025760:	c3                   	ret    

ffffffff80025761 <ZydisRegisterGetId>:
ffffffff80025761:	f3 0f 1e fa          	endbr64 
ffffffff80025765:	55                   	push   %rbp
ffffffff80025766:	48 89 e5             	mov    %rsp,%rbp
ffffffff80025769:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff8002576d:	89 7d fc             	mov    %edi,-0x4(%rbp)
ffffffff80025770:	81 7d fc 09 01 00 00 	cmpl   $0x109,-0x4(%rbp)
ffffffff80025777:	76 07                	jbe    ffffffff80025780 <ZydisRegisterGetId+0x1f>
ffffffff80025779:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
ffffffff8002577e:	eb 1e                	jmp    ffffffff8002579e <ZydisRegisterGetId+0x3d>
ffffffff80025780:	8b 55 fc             	mov    -0x4(%rbp),%edx
ffffffff80025783:	48 89 d0             	mov    %rdx,%rax
ffffffff80025786:	48 01 c0             	add    %rax,%rax
ffffffff80025789:	48 01 d0             	add    %rdx,%rax
ffffffff8002578c:	48 c1 e0 02          	shl    $0x2,%rax
ffffffff80025790:	48 89 c2             	mov    %rax,%rdx
ffffffff80025793:	48 8d 05 ca 90 01 00 	lea    0x190ca(%rip),%rax        # ffffffff8003e864 <REG_LOOKUP+0x4>
ffffffff8002579a:	0f b6 04 02          	movzbl (%rdx,%rax,1),%eax
ffffffff8002579e:	c9                   	leave  
ffffffff8002579f:	c3                   	ret    

ffffffff800257a0 <ZydisRegisterGetClass>:
ffffffff800257a0:	f3 0f 1e fa          	endbr64 
ffffffff800257a4:	55                   	push   %rbp
ffffffff800257a5:	48 89 e5             	mov    %rsp,%rbp
ffffffff800257a8:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff800257ac:	89 7d fc             	mov    %edi,-0x4(%rbp)
ffffffff800257af:	81 7d fc 09 01 00 00 	cmpl   $0x109,-0x4(%rbp)
ffffffff800257b6:	76 07                	jbe    ffffffff800257bf <ZydisRegisterGetClass+0x1f>
ffffffff800257b8:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800257bd:	eb 1d                	jmp    ffffffff800257dc <ZydisRegisterGetClass+0x3c>
ffffffff800257bf:	8b 55 fc             	mov    -0x4(%rbp),%edx
ffffffff800257c2:	48 89 d0             	mov    %rdx,%rax
ffffffff800257c5:	48 01 c0             	add    %rax,%rax
ffffffff800257c8:	48 01 d0             	add    %rdx,%rax
ffffffff800257cb:	48 c1 e0 02          	shl    $0x2,%rax
ffffffff800257cf:	48 89 c2             	mov    %rax,%rdx
ffffffff800257d2:	48 8d 05 87 90 01 00 	lea    0x19087(%rip),%rax        # ffffffff8003e860 <REG_LOOKUP>
ffffffff800257d9:	8b 04 02             	mov    (%rdx,%rax,1),%eax
ffffffff800257dc:	c9                   	leave  
ffffffff800257dd:	c3                   	ret    

ffffffff800257de <ZydisRegisterGetWidth>:
ffffffff800257de:	f3 0f 1e fa          	endbr64 
ffffffff800257e2:	55                   	push   %rbp
ffffffff800257e3:	48 89 e5             	mov    %rsp,%rbp
ffffffff800257e6:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff800257ea:	89 7d fc             	mov    %edi,-0x4(%rbp)
ffffffff800257ed:	89 75 f8             	mov    %esi,-0x8(%rbp)
ffffffff800257f0:	81 7d f8 09 01 00 00 	cmpl   $0x109,-0x8(%rbp)
ffffffff800257f7:	76 07                	jbe    ffffffff80025800 <ZydisRegisterGetWidth+0x22>
ffffffff800257f9:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800257fe:	eb 44                	jmp    ffffffff80025844 <ZydisRegisterGetWidth+0x66>
ffffffff80025800:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
ffffffff80025804:	75 20                	jne    ffffffff80025826 <ZydisRegisterGetWidth+0x48>
ffffffff80025806:	8b 55 f8             	mov    -0x8(%rbp),%edx
ffffffff80025809:	48 89 d0             	mov    %rdx,%rax
ffffffff8002580c:	48 01 c0             	add    %rax,%rax
ffffffff8002580f:	48 01 d0             	add    %rdx,%rax
ffffffff80025812:	48 c1 e0 02          	shl    $0x2,%rax
ffffffff80025816:	48 89 c2             	mov    %rax,%rdx
ffffffff80025819:	48 8d 05 48 90 01 00 	lea    0x19048(%rip),%rax        # ffffffff8003e868 <REG_LOOKUP+0x8>
ffffffff80025820:	0f b7 04 02          	movzwl (%rdx,%rax,1),%eax
ffffffff80025824:	eb 1e                	jmp    ffffffff80025844 <ZydisRegisterGetWidth+0x66>
ffffffff80025826:	8b 55 f8             	mov    -0x8(%rbp),%edx
ffffffff80025829:	48 89 d0             	mov    %rdx,%rax
ffffffff8002582c:	48 01 c0             	add    %rax,%rax
ffffffff8002582f:	48 01 d0             	add    %rdx,%rax
ffffffff80025832:	48 c1 e0 02          	shl    $0x2,%rax
ffffffff80025836:	48 89 c2             	mov    %rax,%rdx
ffffffff80025839:	48 8d 05 26 90 01 00 	lea    0x19026(%rip),%rax        # ffffffff8003e866 <REG_LOOKUP+0x6>
ffffffff80025840:	0f b7 04 02          	movzwl (%rdx,%rax,1),%eax
ffffffff80025844:	c9                   	leave  
ffffffff80025845:	c3                   	ret    

ffffffff80025846 <ZydisRegisterGetLargestEnclosing>:
ffffffff80025846:	f3 0f 1e fa          	endbr64 
ffffffff8002584a:	55                   	push   %rbp
ffffffff8002584b:	48 89 e5             	mov    %rsp,%rbp
ffffffff8002584e:	48 83 ec 18          	sub    $0x18,%rsp
ffffffff80025852:	89 7d ec             	mov    %edi,-0x14(%rbp)
ffffffff80025855:	89 75 e8             	mov    %esi,-0x18(%rbp)
ffffffff80025858:	81 7d e8 09 01 00 00 	cmpl   $0x109,-0x18(%rbp)
ffffffff8002585f:	76 0a                	jbe    ffffffff8002586b <ZydisRegisterGetLargestEnclosing+0x25>
ffffffff80025861:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80025866:	e9 0c 01 00 00       	jmp    ffffffff80025977 <ZydisRegisterGetLargestEnclosing+0x131>
ffffffff8002586b:	8b 55 e8             	mov    -0x18(%rbp),%edx
ffffffff8002586e:	48 89 d0             	mov    %rdx,%rax
ffffffff80025871:	48 01 c0             	add    %rax,%rax
ffffffff80025874:	48 01 d0             	add    %rdx,%rax
ffffffff80025877:	48 c1 e0 02          	shl    $0x2,%rax
ffffffff8002587b:	48 89 c2             	mov    %rax,%rdx
ffffffff8002587e:	48 8d 05 db 8f 01 00 	lea    0x18fdb(%rip),%rax        # ffffffff8003e860 <REG_LOOKUP>
ffffffff80025885:	8b 04 02             	mov    (%rdx,%rax,1),%eax
ffffffff80025888:	89 45 f8             	mov    %eax,-0x8(%rbp)
ffffffff8002588b:	83 7d f8 00          	cmpl   $0x0,-0x8(%rbp)
ffffffff8002588f:	74 0c                	je     ffffffff8002589d <ZydisRegisterGetLargestEnclosing+0x57>
ffffffff80025891:	83 7d f8 04          	cmpl   $0x4,-0x8(%rbp)
ffffffff80025895:	75 10                	jne    ffffffff800258a7 <ZydisRegisterGetLargestEnclosing+0x61>
ffffffff80025897:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
ffffffff8002589b:	74 0a                	je     ffffffff800258a7 <ZydisRegisterGetLargestEnclosing+0x61>
ffffffff8002589d:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800258a2:	e9 d0 00 00 00       	jmp    ffffffff80025977 <ZydisRegisterGetLargestEnclosing+0x131>
ffffffff800258a7:	8b 55 e8             	mov    -0x18(%rbp),%edx
ffffffff800258aa:	48 89 d0             	mov    %rdx,%rax
ffffffff800258ad:	48 01 c0             	add    %rax,%rax
ffffffff800258b0:	48 01 d0             	add    %rdx,%rax
ffffffff800258b3:	48 c1 e0 02          	shl    $0x2,%rax
ffffffff800258b7:	48 89 c2             	mov    %rax,%rdx
ffffffff800258ba:	48 8d 05 a3 8f 01 00 	lea    0x18fa3(%rip),%rax        # ffffffff8003e864 <REG_LOOKUP+0x4>
ffffffff800258c1:	0f b6 04 02          	movzbl (%rdx,%rax,1),%eax
ffffffff800258c5:	88 45 ff             	mov    %al,-0x1(%rbp)
ffffffff800258c8:	83 7d f8 09          	cmpl   $0x9,-0x8(%rbp)
ffffffff800258cc:	0f 87 a0 00 00 00    	ja     ffffffff80025972 <ZydisRegisterGetLargestEnclosing+0x12c>
ffffffff800258d2:	83 7d f8 07          	cmpl   $0x7,-0x8(%rbp)
ffffffff800258d6:	0f 83 89 00 00 00    	jae    ffffffff80025965 <ZydisRegisterGetLargestEnclosing+0x11f>
ffffffff800258dc:	83 7d f8 01          	cmpl   $0x1,-0x8(%rbp)
ffffffff800258e0:	74 17                	je     ffffffff800258f9 <ZydisRegisterGetLargestEnclosing+0xb3>
ffffffff800258e2:	83 7d f8 00          	cmpl   $0x0,-0x8(%rbp)
ffffffff800258e6:	0f 84 86 00 00 00    	je     ffffffff80025972 <ZydisRegisterGetLargestEnclosing+0x12c>
ffffffff800258ec:	8b 45 f8             	mov    -0x8(%rbp),%eax
ffffffff800258ef:	83 e8 02             	sub    $0x2,%eax
ffffffff800258f2:	83 f8 02             	cmp    $0x2,%eax
ffffffff800258f5:	77 7b                	ja     ffffffff80025972 <ZydisRegisterGetLargestEnclosing+0x12c>
ffffffff800258f7:	eb 14                	jmp    ffffffff8002590d <ZydisRegisterGetLargestEnclosing+0xc7>
ffffffff800258f9:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
ffffffff800258fd:	48 98                	cltq   
ffffffff800258ff:	48 8d 15 ea 9c 01 00 	lea    0x19cea(%rip),%rdx        # ffffffff8003f5f0 <GPR8_MAPPING.0>
ffffffff80025906:	0f b6 04 10          	movzbl (%rax,%rdx,1),%eax
ffffffff8002590a:	88 45 ff             	mov    %al,-0x1(%rbp)
ffffffff8002590d:	83 7d ec 05          	cmpl   $0x5,-0x14(%rbp)
ffffffff80025911:	77 4b                	ja     ffffffff8002595e <ZydisRegisterGetLargestEnclosing+0x118>
ffffffff80025913:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff80025916:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
ffffffff8002591d:	00 
ffffffff8002591e:	48 8d 05 ab 9c 01 00 	lea    0x19cab(%rip),%rax        # ffffffff8003f5d0 <REG_CLASS_LOOKUP+0xf0>
ffffffff80025925:	8b 04 02             	mov    (%rdx,%rax,1),%eax
ffffffff80025928:	48 98                	cltq   
ffffffff8002592a:	48 8d 15 9f 9c 01 00 	lea    0x19c9f(%rip),%rdx        # ffffffff8003f5d0 <REG_CLASS_LOOKUP+0xf0>
ffffffff80025931:	48 01 d0             	add    %rdx,%rax
ffffffff80025934:	3e ff e0             	notrack jmp *%rax
ffffffff80025937:	ba 35 00 00 00       	mov    $0x35,%edx
ffffffff8002593c:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
ffffffff80025940:	01 d0                	add    %edx,%eax
ffffffff80025942:	eb 33                	jmp    ffffffff80025977 <ZydisRegisterGetLargestEnclosing+0x131>
ffffffff80025944:	ba 25 00 00 00       	mov    $0x25,%edx
ffffffff80025949:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
ffffffff8002594d:	01 d0                	add    %edx,%eax
ffffffff8002594f:	eb 26                	jmp    ffffffff80025977 <ZydisRegisterGetLargestEnclosing+0x131>
ffffffff80025951:	ba 15 00 00 00       	mov    $0x15,%edx
ffffffff80025956:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
ffffffff8002595a:	01 d0                	add    %edx,%eax
ffffffff8002595c:	eb 19                	jmp    ffffffff80025977 <ZydisRegisterGetLargestEnclosing+0x131>
ffffffff8002595e:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80025963:	eb 12                	jmp    ffffffff80025977 <ZydisRegisterGetLargestEnclosing+0x131>
ffffffff80025965:	ba 98 00 00 00       	mov    $0x98,%edx
ffffffff8002596a:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
ffffffff8002596e:	01 d0                	add    %edx,%eax
ffffffff80025970:	eb 05                	jmp    ffffffff80025977 <ZydisRegisterGetLargestEnclosing+0x131>
ffffffff80025972:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80025977:	c9                   	leave  
ffffffff80025978:	c3                   	ret    

ffffffff80025979 <ZydisRegisterGetString>:
ffffffff80025979:	f3 0f 1e fa          	endbr64 
ffffffff8002597d:	55                   	push   %rbp
ffffffff8002597e:	48 89 e5             	mov    %rsp,%rbp
ffffffff80025981:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80025985:	89 7d fc             	mov    %edi,-0x4(%rbp)
ffffffff80025988:	81 7d fc 09 01 00 00 	cmpl   $0x109,-0x4(%rbp)
ffffffff8002598f:	76 07                	jbe    ffffffff80025998 <ZydisRegisterGetString+0x1f>
ffffffff80025991:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80025996:	eb 18                	jmp    ffffffff800259b0 <ZydisRegisterGetString+0x37>
ffffffff80025998:	8b 55 fc             	mov    -0x4(%rbp),%edx
ffffffff8002599b:	48 89 d0             	mov    %rdx,%rax
ffffffff8002599e:	48 c1 e0 03          	shl    $0x3,%rax
ffffffff800259a2:	48 01 c2             	add    %rax,%rdx
ffffffff800259a5:	48 8d 05 f4 30 08 00 	lea    0x830f4(%rip),%rax        # ffffffff800a8aa0 <STR_REGISTERS>
ffffffff800259ac:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
ffffffff800259b0:	c9                   	leave  
ffffffff800259b1:	c3                   	ret    

ffffffff800259b2 <ZydisRegisterGetStringWrapped>:
ffffffff800259b2:	f3 0f 1e fa          	endbr64 
ffffffff800259b6:	55                   	push   %rbp
ffffffff800259b7:	48 89 e5             	mov    %rsp,%rbp
ffffffff800259ba:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff800259be:	89 7d fc             	mov    %edi,-0x4(%rbp)
ffffffff800259c1:	81 7d fc 09 01 00 00 	cmpl   $0x109,-0x4(%rbp)
ffffffff800259c8:	76 07                	jbe    ffffffff800259d1 <ZydisRegisterGetStringWrapped+0x1f>
ffffffff800259ca:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800259cf:	eb 17                	jmp    ffffffff800259e8 <ZydisRegisterGetStringWrapped+0x36>
ffffffff800259d1:	8b 55 fc             	mov    -0x4(%rbp),%edx
ffffffff800259d4:	48 89 d0             	mov    %rdx,%rax
ffffffff800259d7:	48 c1 e0 03          	shl    $0x3,%rax
ffffffff800259db:	48 01 d0             	add    %rdx,%rax
ffffffff800259de:	48 8d 15 bb 30 08 00 	lea    0x830bb(%rip),%rdx        # ffffffff800a8aa0 <STR_REGISTERS>
ffffffff800259e5:	48 01 d0             	add    %rdx,%rax
ffffffff800259e8:	c9                   	leave  
ffffffff800259e9:	c3                   	ret    

ffffffff800259ea <ZydisRegisterClassGetWidth>:
ffffffff800259ea:	f3 0f 1e fa          	endbr64 
ffffffff800259ee:	55                   	push   %rbp
ffffffff800259ef:	48 89 e5             	mov    %rsp,%rbp
ffffffff800259f2:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff800259f6:	89 7d fc             	mov    %edi,-0x4(%rbp)
ffffffff800259f9:	89 75 f8             	mov    %esi,-0x8(%rbp)
ffffffff800259fc:	83 7d f8 13          	cmpl   $0x13,-0x8(%rbp)
ffffffff80025a00:	76 07                	jbe    ffffffff80025a09 <ZydisRegisterClassGetWidth+0x1f>
ffffffff80025a02:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80025a07:	eb 44                	jmp    ffffffff80025a4d <ZydisRegisterClassGetWidth+0x63>
ffffffff80025a09:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
ffffffff80025a0d:	75 20                	jne    ffffffff80025a2f <ZydisRegisterClassGetWidth+0x45>
ffffffff80025a0f:	8b 55 f8             	mov    -0x8(%rbp),%edx
ffffffff80025a12:	48 89 d0             	mov    %rdx,%rax
ffffffff80025a15:	48 01 c0             	add    %rax,%rax
ffffffff80025a18:	48 01 d0             	add    %rdx,%rax
ffffffff80025a1b:	48 c1 e0 02          	shl    $0x2,%rax
ffffffff80025a1f:	48 89 c2             	mov    %rax,%rdx
ffffffff80025a22:	48 8d 05 c1 9a 01 00 	lea    0x19ac1(%rip),%rax        # ffffffff8003f4ea <REG_CLASS_LOOKUP+0xa>
ffffffff80025a29:	0f b7 04 02          	movzwl (%rdx,%rax,1),%eax
ffffffff80025a2d:	eb 1e                	jmp    ffffffff80025a4d <ZydisRegisterClassGetWidth+0x63>
ffffffff80025a2f:	8b 55 f8             	mov    -0x8(%rbp),%edx
ffffffff80025a32:	48 89 d0             	mov    %rdx,%rax
ffffffff80025a35:	48 01 c0             	add    %rax,%rax
ffffffff80025a38:	48 01 d0             	add    %rdx,%rax
ffffffff80025a3b:	48 c1 e0 02          	shl    $0x2,%rax
ffffffff80025a3f:	48 89 c2             	mov    %rax,%rdx
ffffffff80025a42:	48 8d 05 9f 9a 01 00 	lea    0x19a9f(%rip),%rax        # ffffffff8003f4e8 <REG_CLASS_LOOKUP+0x8>
ffffffff80025a49:	0f b7 04 02          	movzwl (%rdx,%rax,1),%eax
ffffffff80025a4d:	c9                   	leave  
ffffffff80025a4e:	c3                   	ret    

ffffffff80025a4f <ZYAN_MEMCPY.lto_priv.6>:
ffffffff80025a4f:	55                   	push   %rbp
ffffffff80025a50:	48 89 e5             	mov    %rsp,%rbp
ffffffff80025a53:	48 83 ec 28          	sub    $0x28,%rsp
ffffffff80025a57:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff80025a5b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
ffffffff80025a5f:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
ffffffff80025a63:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80025a67:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff80025a6b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80025a6f:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff80025a73:	eb 1d                	jmp    ffffffff80025a92 <ZYAN_MEMCPY.lto_priv.6+0x43>
ffffffff80025a75:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff80025a79:	48 8d 42 01          	lea    0x1(%rdx),%rax
ffffffff80025a7d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff80025a81:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80025a85:	48 8d 48 01          	lea    0x1(%rax),%rcx
ffffffff80025a89:	48 89 4d f8          	mov    %rcx,-0x8(%rbp)
ffffffff80025a8d:	0f b6 12             	movzbl (%rdx),%edx
ffffffff80025a90:	88 10                	mov    %dl,(%rax)
ffffffff80025a92:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80025a96:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
ffffffff80025a9a:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
ffffffff80025a9e:	48 85 c0             	test   %rax,%rax
ffffffff80025aa1:	75 d2                	jne    ffffffff80025a75 <ZYAN_MEMCPY.lto_priv.6+0x26>
ffffffff80025aa3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80025aa7:	c9                   	leave  
ffffffff80025aa8:	c3                   	ret    

ffffffff80025aa9 <ZYAN_MEMSET.lto_priv.3>:
ffffffff80025aa9:	55                   	push   %rbp
ffffffff80025aaa:	48 89 e5             	mov    %rsp,%rbp
ffffffff80025aad:	48 83 ec 28          	sub    $0x28,%rsp
ffffffff80025ab1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff80025ab5:	89 75 e4             	mov    %esi,-0x1c(%rbp)
ffffffff80025ab8:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
ffffffff80025abc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80025ac0:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff80025ac4:	eb 11                	jmp    ffffffff80025ad7 <ZYAN_MEMSET.lto_priv.3+0x2e>
ffffffff80025ac6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80025aca:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffff80025ace:	48 89 55 f8          	mov    %rdx,-0x8(%rbp)
ffffffff80025ad2:	8b 55 e4             	mov    -0x1c(%rbp),%edx
ffffffff80025ad5:	88 10                	mov    %dl,(%rax)
ffffffff80025ad7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80025adb:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
ffffffff80025adf:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
ffffffff80025ae3:	48 85 c0             	test   %rax,%rax
ffffffff80025ae6:	75 de                	jne    ffffffff80025ac6 <ZYAN_MEMSET.lto_priv.3+0x1d>
ffffffff80025ae8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80025aec:	c9                   	leave  
ffffffff80025aed:	c3                   	ret    

ffffffff80025aee <ZydisStringAppend.lto_priv.1>:
ffffffff80025aee:	55                   	push   %rbp
ffffffff80025aef:	48 89 e5             	mov    %rsp,%rbp
ffffffff80025af2:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff80025af6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff80025afa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff80025afe:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff80025b03:	74 05                	je     ffffffff80025b0a <ZydisStringAppend.lto_priv.1+0x1c>
ffffffff80025b05:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
ffffffff80025b0a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80025b0e:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff80025b12:	48 85 c0             	test   %rax,%rax
ffffffff80025b15:	74 0b                	je     ffffffff80025b22 <ZydisStringAppend.lto_priv.1+0x34>
ffffffff80025b17:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80025b1b:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff80025b1f:	48 85 c0             	test   %rax,%rax
ffffffff80025b22:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80025b26:	48 8b 50 18          	mov    0x18(%rax),%rdx
ffffffff80025b2a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80025b2e:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff80025b32:	48 01 d0             	add    %rdx,%rax
ffffffff80025b35:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
ffffffff80025b39:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80025b3d:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff80025b41:	48 39 c2             	cmp    %rax,%rdx
ffffffff80025b44:	76 07                	jbe    ffffffff80025b4d <ZydisStringAppend.lto_priv.1+0x5f>
ffffffff80025b46:	b8 09 00 10 80       	mov    $0x80100009,%eax
ffffffff80025b4b:	eb 74                	jmp    ffffffff80025bc1 <ZydisStringAppend.lto_priv.1+0xd3>
ffffffff80025b4d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80025b51:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff80025b55:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
ffffffff80025b59:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80025b5d:	48 8b 48 38          	mov    0x38(%rax),%rcx
ffffffff80025b61:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80025b65:	48 8b 70 38          	mov    0x38(%rax),%rsi
ffffffff80025b69:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80025b6d:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff80025b71:	48 83 e8 01          	sub    $0x1,%rax
ffffffff80025b75:	48 01 f0             	add    %rsi,%rax
ffffffff80025b78:	48 89 ce             	mov    %rcx,%rsi
ffffffff80025b7b:	48 89 c7             	mov    %rax,%rdi
ffffffff80025b7e:	e8 cc fe ff ff       	call   ffffffff80025a4f <ZYAN_MEMCPY.lto_priv.6>
ffffffff80025b83:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80025b87:	48 8b 50 18          	mov    0x18(%rax),%rdx
ffffffff80025b8b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80025b8f:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff80025b93:	48 01 d0             	add    %rdx,%rax
ffffffff80025b96:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
ffffffff80025b9a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80025b9e:	48 89 50 18          	mov    %rdx,0x18(%rax)
ffffffff80025ba2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80025ba6:	48 8b 50 38          	mov    0x38(%rax),%rdx
ffffffff80025baa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80025bae:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff80025bb2:	48 83 e8 01          	sub    $0x1,%rax
ffffffff80025bb6:	48 01 d0             	add    %rdx,%rax
ffffffff80025bb9:	c6 00 00             	movb   $0x0,(%rax)
ffffffff80025bbc:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff80025bc1:	c9                   	leave  
ffffffff80025bc2:	c3                   	ret    

ffffffff80025bc3 <ZydisStringAppendDecU64>:
ffffffff80025bc3:	f3 0f 1e fa          	endbr64 
ffffffff80025bc7:	55                   	push   %rbp
ffffffff80025bc8:	48 89 e5             	mov    %rsp,%rbp
ffffffff80025bcb:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
ffffffff80025bcf:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
ffffffff80025bd3:	48 89 75 90          	mov    %rsi,-0x70(%rbp)
ffffffff80025bd7:	89 d0                	mov    %edx,%eax
ffffffff80025bd9:	88 45 8c             	mov    %al,-0x74(%rbp)
ffffffff80025bdc:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
ffffffff80025be0:	48 83 c0 14          	add    $0x14,%rax
ffffffff80025be4:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff80025be8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80025bec:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff80025bf0:	eb 5d                	jmp    ffffffff80025c4f <ZydisStringAppendDecU64+0x8c>
ffffffff80025bf2:	48 8b 45 90          	mov    -0x70(%rbp),%rax
ffffffff80025bf6:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
ffffffff80025bfa:	48 83 6d f8 02       	subq   $0x2,-0x8(%rbp)
ffffffff80025bff:	48 8b 45 90          	mov    -0x70(%rbp),%rax
ffffffff80025c03:	48 c1 e8 02          	shr    $0x2,%rax
ffffffff80025c07:	48 ba c3 f5 28 5c 8f 	movabs $0x28f5c28f5c28f5c3,%rdx
ffffffff80025c0e:	c2 f5 28 
ffffffff80025c11:	48 f7 e2             	mul    %rdx
ffffffff80025c14:	48 89 d0             	mov    %rdx,%rax
ffffffff80025c17:	48 c1 e8 02          	shr    $0x2,%rax
ffffffff80025c1b:	48 89 45 90          	mov    %rax,-0x70(%rbp)
ffffffff80025c1f:	48 8d 0d ca 76 01 00 	lea    0x176ca(%rip),%rcx        # ffffffff8003d2f0 <g_stivale2_header+0x62f0>
ffffffff80025c26:	48 8b 45 90          	mov    -0x70(%rbp),%rax
ffffffff80025c2a:	48 6b d0 64          	imul   $0x64,%rax,%rdx
ffffffff80025c2e:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff80025c32:	48 29 d0             	sub    %rdx,%rax
ffffffff80025c35:	48 01 c0             	add    %rax,%rax
ffffffff80025c38:	48 01 c1             	add    %rax,%rcx
ffffffff80025c3b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80025c3f:	ba 02 00 00 00       	mov    $0x2,%edx
ffffffff80025c44:	48 89 ce             	mov    %rcx,%rsi
ffffffff80025c47:	48 89 c7             	mov    %rax,%rdi
ffffffff80025c4a:	e8 00 fe ff ff       	call   ffffffff80025a4f <ZYAN_MEMCPY.lto_priv.6>
ffffffff80025c4f:	48 83 7d 90 63       	cmpq   $0x63,-0x70(%rbp)
ffffffff80025c54:	77 9c                	ja     ffffffff80025bf2 <ZydisStringAppendDecU64+0x2f>
ffffffff80025c56:	48 83 6d f8 02       	subq   $0x2,-0x8(%rbp)
ffffffff80025c5b:	48 8d 15 8e 76 01 00 	lea    0x1768e(%rip),%rdx        # ffffffff8003d2f0 <g_stivale2_header+0x62f0>
ffffffff80025c62:	48 8b 45 90          	mov    -0x70(%rbp),%rax
ffffffff80025c66:	48 01 c0             	add    %rax,%rax
ffffffff80025c69:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
ffffffff80025c6d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80025c71:	ba 02 00 00 00       	mov    $0x2,%edx
ffffffff80025c76:	48 89 ce             	mov    %rcx,%rsi
ffffffff80025c79:	48 89 c7             	mov    %rax,%rdi
ffffffff80025c7c:	e8 ce fd ff ff       	call   ffffffff80025a4f <ZYAN_MEMCPY.lto_priv.6>
ffffffff80025c81:	48 83 7d 90 09       	cmpq   $0x9,-0x70(%rbp)
ffffffff80025c86:	0f 96 c0             	setbe  %al
ffffffff80025c89:	0f b6 c0             	movzbl %al,%eax
ffffffff80025c8c:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff80025c90:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80025c94:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
ffffffff80025c98:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
ffffffff80025c9c:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
ffffffff80025ca0:	0f b6 45 8c          	movzbl -0x74(%rbp),%eax
ffffffff80025ca4:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff80025ca8:	48 39 c2             	cmp    %rax,%rdx
ffffffff80025cab:	48 0f 43 c2          	cmovae %rdx,%rax
ffffffff80025caf:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
ffffffff80025cb3:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff80025cb7:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff80025cbb:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
ffffffff80025cbf:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff80025cc3:	48 8b 50 18          	mov    0x18(%rax),%rdx
ffffffff80025cc7:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff80025ccb:	48 01 c2             	add    %rax,%rdx
ffffffff80025cce:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff80025cd2:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff80025cd6:	48 39 c2             	cmp    %rax,%rdx
ffffffff80025cd9:	76 0a                	jbe    ffffffff80025ce5 <ZydisStringAppendDecU64+0x122>
ffffffff80025cdb:	b8 09 00 10 80       	mov    $0x80100009,%eax
ffffffff80025ce0:	e9 a9 00 00 00       	jmp    ffffffff80025d8e <ZydisStringAppendDecU64+0x1cb>
ffffffff80025ce5:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
ffffffff80025cec:	00 
ffffffff80025ced:	0f b6 45 8c          	movzbl -0x74(%rbp),%eax
ffffffff80025cf1:	48 39 45 d8          	cmp    %rax,-0x28(%rbp)
ffffffff80025cf5:	73 30                	jae    ffffffff80025d27 <ZydisStringAppendDecU64+0x164>
ffffffff80025cf7:	0f b6 45 8c          	movzbl -0x74(%rbp),%eax
ffffffff80025cfb:	48 2b 45 d8          	sub    -0x28(%rbp),%rax
ffffffff80025cff:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff80025d03:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff80025d07:	48 8b 50 38          	mov    0x38(%rax),%rdx
ffffffff80025d0b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80025d0f:	48 83 e8 01          	sub    $0x1,%rax
ffffffff80025d13:	48 01 d0             	add    %rdx,%rax
ffffffff80025d16:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff80025d1a:	be 30 00 00 00       	mov    $0x30,%esi
ffffffff80025d1f:	48 89 c7             	mov    %rax,%rdi
ffffffff80025d22:	e8 82 fd ff ff       	call   ffffffff80025aa9 <ZYAN_MEMSET.lto_priv.3>
ffffffff80025d27:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff80025d2b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80025d2f:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
ffffffff80025d33:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff80025d37:	48 8b 50 38          	mov    0x38(%rax),%rdx
ffffffff80025d3b:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
ffffffff80025d3f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80025d43:	48 01 f0             	add    %rsi,%rax
ffffffff80025d46:	48 83 e8 01          	sub    $0x1,%rax
ffffffff80025d4a:	48 01 d0             	add    %rdx,%rax
ffffffff80025d4d:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff80025d51:	48 89 ce             	mov    %rcx,%rsi
ffffffff80025d54:	48 89 c7             	mov    %rax,%rdi
ffffffff80025d57:	e8 f3 fc ff ff       	call   ffffffff80025a4f <ZYAN_MEMCPY.lto_priv.6>
ffffffff80025d5c:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
ffffffff80025d60:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff80025d64:	48 01 c2             	add    %rax,%rdx
ffffffff80025d67:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff80025d6b:	48 89 50 18          	mov    %rdx,0x18(%rax)
ffffffff80025d6f:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff80025d73:	48 8b 50 38          	mov    0x38(%rax),%rdx
ffffffff80025d77:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff80025d7b:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff80025d7f:	48 83 e8 01          	sub    $0x1,%rax
ffffffff80025d83:	48 01 d0             	add    %rdx,%rax
ffffffff80025d86:	c6 00 00             	movb   $0x0,(%rax)
ffffffff80025d89:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff80025d8e:	c9                   	leave  
ffffffff80025d8f:	c3                   	ret    

ffffffff80025d90 <ZydisStringAppendHexU64>:
ffffffff80025d90:	f3 0f 1e fa          	endbr64 
ffffffff80025d94:	55                   	push   %rbp
ffffffff80025d95:	48 89 e5             	mov    %rsp,%rbp
ffffffff80025d98:	48 83 ec 50          	sub    $0x50,%rsp
ffffffff80025d9c:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
ffffffff80025da0:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
ffffffff80025da4:	89 c8                	mov    %ecx,%eax
ffffffff80025da6:	44 89 c1             	mov    %r8d,%ecx
ffffffff80025da9:	88 55 bc             	mov    %dl,-0x44(%rbp)
ffffffff80025dac:	88 45 b8             	mov    %al,-0x48(%rbp)
ffffffff80025daf:	89 c8                	mov    %ecx,%eax
ffffffff80025db1:	88 45 b4             	mov    %al,-0x4c(%rbp)
ffffffff80025db4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80025db8:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff80025dbc:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff80025dc0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80025dc4:	48 8b 50 20          	mov    0x20(%rax),%rdx
ffffffff80025dc8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80025dcc:	48 8b 48 18          	mov    0x18(%rax),%rcx
ffffffff80025dd0:	48 89 d0             	mov    %rdx,%rax
ffffffff80025dd3:	48 29 c8             	sub    %rcx,%rax
ffffffff80025dd6:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
ffffffff80025dda:	0f b6 45 bc          	movzbl -0x44(%rbp),%eax
ffffffff80025dde:	48 39 45 d8          	cmp    %rax,-0x28(%rbp)
ffffffff80025de2:	73 0a                	jae    ffffffff80025dee <ZydisStringAppendHexU64+0x5e>
ffffffff80025de4:	b8 09 00 10 80       	mov    $0x80100009,%eax
ffffffff80025de9:	e9 3d 02 00 00       	jmp    ffffffff8002602b <ZydisStringAppendHexU64+0x29b>
ffffffff80025dee:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
ffffffff80025df3:	0f 85 86 00 00 00    	jne    ffffffff80025e7f <ZydisStringAppendHexU64+0xef>
ffffffff80025df9:	80 7d bc 00          	cmpb   $0x0,-0x44(%rbp)
ffffffff80025dfd:	74 06                	je     ffffffff80025e05 <ZydisStringAppendHexU64+0x75>
ffffffff80025dff:	0f b6 45 bc          	movzbl -0x44(%rbp),%eax
ffffffff80025e03:	eb 05                	jmp    ffffffff80025e0a <ZydisStringAppendHexU64+0x7a>
ffffffff80025e05:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff80025e0a:	88 45 d5             	mov    %al,-0x2b(%rbp)
ffffffff80025e0d:	0f b6 45 d5          	movzbl -0x2b(%rbp),%eax
ffffffff80025e11:	48 39 45 d8          	cmp    %rax,-0x28(%rbp)
ffffffff80025e15:	73 0a                	jae    ffffffff80025e21 <ZydisStringAppendHexU64+0x91>
ffffffff80025e17:	b8 09 00 10 80       	mov    $0x80100009,%eax
ffffffff80025e1c:	e9 0a 02 00 00       	jmp    ffffffff8002602b <ZydisStringAppendHexU64+0x29b>
ffffffff80025e21:	0f b6 45 d5          	movzbl -0x2b(%rbp),%eax
ffffffff80025e25:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
ffffffff80025e29:	48 8b 4a 38          	mov    0x38(%rdx),%rcx
ffffffff80025e2d:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff80025e31:	48 83 ea 01          	sub    $0x1,%rdx
ffffffff80025e35:	48 01 d1             	add    %rdx,%rcx
ffffffff80025e38:	48 89 c2             	mov    %rax,%rdx
ffffffff80025e3b:	be 30 00 00 00       	mov    $0x30,%esi
ffffffff80025e40:	48 89 cf             	mov    %rcx,%rdi
ffffffff80025e43:	e8 61 fc ff ff       	call   ffffffff80025aa9 <ZYAN_MEMSET.lto_priv.3>
ffffffff80025e48:	0f b6 45 d5          	movzbl -0x2b(%rbp),%eax
ffffffff80025e4c:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff80025e50:	48 01 c2             	add    %rax,%rdx
ffffffff80025e53:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80025e57:	48 89 50 18          	mov    %rdx,0x18(%rax)
ffffffff80025e5b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80025e5f:	48 8b 50 38          	mov    0x38(%rax),%rdx
ffffffff80025e63:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80025e67:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff80025e6b:	48 83 e8 01          	sub    $0x1,%rax
ffffffff80025e6f:	48 01 d0             	add    %rdx,%rax
ffffffff80025e72:	c6 00 00             	movb   $0x0,(%rax)
ffffffff80025e75:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff80025e7a:	e9 ac 01 00 00       	jmp    ffffffff8002602b <ZydisStringAppendHexU64+0x29b>
ffffffff80025e7f:	c6 45 ff 00          	movb   $0x0,-0x1(%rbp)
ffffffff80025e83:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
ffffffff80025e8a:	00 
ffffffff80025e8b:	48 b8 00 00 00 00 ff 	movabs $0xffffffff00000000,%rax
ffffffff80025e92:	ff ff ff 
ffffffff80025e95:	48 23 45 c0          	and    -0x40(%rbp),%rax
ffffffff80025e99:	48 85 c0             	test   %rax,%rax
ffffffff80025e9c:	74 07                	je     ffffffff80025ea5 <ZydisStringAppendHexU64+0x115>
ffffffff80025e9e:	b8 0f 00 00 00       	mov    $0xf,%eax
ffffffff80025ea3:	eb 05                	jmp    ffffffff80025eaa <ZydisStringAppendHexU64+0x11a>
ffffffff80025ea5:	b8 07 00 00 00       	mov    $0x7,%eax
ffffffff80025eaa:	88 45 ef             	mov    %al,-0x11(%rbp)
ffffffff80025ead:	e9 3d 01 00 00       	jmp    ffffffff80025fef <ZydisStringAppendHexU64+0x25f>
ffffffff80025eb2:	0f be 45 ef          	movsbl -0x11(%rbp),%eax
ffffffff80025eb6:	c1 e0 02             	shl    $0x2,%eax
ffffffff80025eb9:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
ffffffff80025ebd:	89 c1                	mov    %eax,%ecx
ffffffff80025ebf:	48 d3 ea             	shr    %cl,%rdx
ffffffff80025ec2:	48 89 d0             	mov    %rdx,%rax
ffffffff80025ec5:	83 e0 0f             	and    $0xf,%eax
ffffffff80025ec8:	88 45 d7             	mov    %al,-0x29(%rbp)
ffffffff80025ecb:	80 7d ff 00          	cmpb   $0x0,-0x1(%rbp)
ffffffff80025ecf:	0f 85 b5 00 00 00    	jne    ffffffff80025f8a <ZydisStringAppendHexU64+0x1fa>
ffffffff80025ed5:	80 7d d7 00          	cmpb   $0x0,-0x29(%rbp)
ffffffff80025ed9:	0f 84 05 01 00 00    	je     ffffffff80025fe4 <ZydisStringAppendHexU64+0x254>
ffffffff80025edf:	80 7d b8 00          	cmpb   $0x0,-0x48(%rbp)
ffffffff80025ee3:	74 19                	je     ffffffff80025efe <ZydisStringAppendHexU64+0x16e>
ffffffff80025ee5:	80 7d d7 09          	cmpb   $0x9,-0x29(%rbp)
ffffffff80025ee9:	76 13                	jbe    ffffffff80025efe <ZydisStringAppendHexU64+0x16e>
ffffffff80025eeb:	0f b6 55 bc          	movzbl -0x44(%rbp),%edx
ffffffff80025eef:	0f be 45 ef          	movsbl -0x11(%rbp),%eax
ffffffff80025ef3:	39 c2                	cmp    %eax,%edx
ffffffff80025ef5:	7f 07                	jg     ffffffff80025efe <ZydisStringAppendHexU64+0x16e>
ffffffff80025ef7:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff80025efc:	eb 05                	jmp    ffffffff80025f03 <ZydisStringAppendHexU64+0x173>
ffffffff80025efe:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80025f03:	88 45 d6             	mov    %al,-0x2a(%rbp)
ffffffff80025f06:	48 0f be 55 ef       	movsbq -0x11(%rbp),%rdx
ffffffff80025f0b:	0f b6 45 d6          	movzbl -0x2a(%rbp),%eax
ffffffff80025f0f:	48 01 d0             	add    %rdx,%rax
ffffffff80025f12:	48 39 45 d8          	cmp    %rax,-0x28(%rbp)
ffffffff80025f16:	77 0a                	ja     ffffffff80025f22 <ZydisStringAppendHexU64+0x192>
ffffffff80025f18:	b8 09 00 10 80       	mov    $0x80100009,%eax
ffffffff80025f1d:	e9 09 01 00 00       	jmp    ffffffff8002602b <ZydisStringAppendHexU64+0x29b>
ffffffff80025f22:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80025f26:	48 8b 50 38          	mov    0x38(%rax),%rdx
ffffffff80025f2a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80025f2e:	48 83 e8 01          	sub    $0x1,%rax
ffffffff80025f32:	48 01 d0             	add    %rdx,%rax
ffffffff80025f35:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff80025f39:	80 7d d6 00          	cmpb   $0x0,-0x2a(%rbp)
ffffffff80025f3d:	74 17                	je     ffffffff80025f56 <ZydisStringAppendHexU64+0x1c6>
ffffffff80025f3f:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
ffffffff80025f43:	8d 50 01             	lea    0x1(%rax),%edx
ffffffff80025f46:	88 55 ff             	mov    %dl,-0x1(%rbp)
ffffffff80025f49:	0f b6 c0             	movzbl %al,%eax
ffffffff80025f4c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff80025f50:	48 01 d0             	add    %rdx,%rax
ffffffff80025f53:	c6 00 30             	movb   $0x30,(%rax)
ffffffff80025f56:	0f b6 55 bc          	movzbl -0x44(%rbp),%edx
ffffffff80025f5a:	0f be 45 ef          	movsbl -0x11(%rbp),%eax
ffffffff80025f5e:	39 c2                	cmp    %eax,%edx
ffffffff80025f60:	7e 28                	jle    ffffffff80025f8a <ZydisStringAppendHexU64+0x1fa>
ffffffff80025f62:	0f b6 55 ef          	movzbl -0x11(%rbp),%edx
ffffffff80025f66:	0f b6 45 bc          	movzbl -0x44(%rbp),%eax
ffffffff80025f6a:	29 d0                	sub    %edx,%eax
ffffffff80025f6c:	83 e8 01             	sub    $0x1,%eax
ffffffff80025f6f:	88 45 ff             	mov    %al,-0x1(%rbp)
ffffffff80025f72:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
ffffffff80025f76:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
ffffffff80025f7a:	48 89 c2             	mov    %rax,%rdx
ffffffff80025f7d:	be 30 00 00 00       	mov    $0x30,%esi
ffffffff80025f82:	48 89 cf             	mov    %rcx,%rdi
ffffffff80025f85:	e8 1f fb ff ff       	call   ffffffff80025aa9 <ZYAN_MEMSET.lto_priv.3>
ffffffff80025f8a:	80 7d b4 00          	cmpb   $0x0,-0x4c(%rbp)
ffffffff80025f8e:	74 2a                	je     ffffffff80025fba <ZydisStringAppendHexU64+0x22a>
ffffffff80025f90:	0f b6 4d d7          	movzbl -0x29(%rbp),%ecx
ffffffff80025f94:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
ffffffff80025f98:	8d 50 01             	lea    0x1(%rax),%edx
ffffffff80025f9b:	88 55 ff             	mov    %dl,-0x1(%rbp)
ffffffff80025f9e:	0f b6 c0             	movzbl %al,%eax
ffffffff80025fa1:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff80025fa5:	48 01 c2             	add    %rax,%rdx
ffffffff80025fa8:	48 63 c1             	movslq %ecx,%rax
ffffffff80025fab:	48 8d 0d 72 25 01 00 	lea    0x12572(%rip),%rcx        # ffffffff80038524 <g_stivale2_header+0x1524>
ffffffff80025fb2:	0f b6 04 08          	movzbl (%rax,%rcx,1),%eax
ffffffff80025fb6:	88 02                	mov    %al,(%rdx)
ffffffff80025fb8:	eb 2b                	jmp    ffffffff80025fe5 <ZydisStringAppendHexU64+0x255>
ffffffff80025fba:	0f b6 4d d7          	movzbl -0x29(%rbp),%ecx
ffffffff80025fbe:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
ffffffff80025fc2:	8d 50 01             	lea    0x1(%rax),%edx
ffffffff80025fc5:	88 55 ff             	mov    %dl,-0x1(%rbp)
ffffffff80025fc8:	0f b6 c0             	movzbl %al,%eax
ffffffff80025fcb:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff80025fcf:	48 01 c2             	add    %rax,%rdx
ffffffff80025fd2:	48 63 c1             	movslq %ecx,%rax
ffffffff80025fd5:	48 8d 0d 59 25 01 00 	lea    0x12559(%rip),%rcx        # ffffffff80038535 <g_stivale2_header+0x1535>
ffffffff80025fdc:	0f b6 04 08          	movzbl (%rax,%rcx,1),%eax
ffffffff80025fe0:	88 02                	mov    %al,(%rdx)
ffffffff80025fe2:	eb 01                	jmp    ffffffff80025fe5 <ZydisStringAppendHexU64+0x255>
ffffffff80025fe4:	90                   	nop
ffffffff80025fe5:	0f b6 45 ef          	movzbl -0x11(%rbp),%eax
ffffffff80025fe9:	83 e8 01             	sub    $0x1,%eax
ffffffff80025fec:	88 45 ef             	mov    %al,-0x11(%rbp)
ffffffff80025fef:	80 7d ef 00          	cmpb   $0x0,-0x11(%rbp)
ffffffff80025ff3:	0f 89 b9 fe ff ff    	jns    ffffffff80025eb2 <ZydisStringAppendHexU64+0x122>
ffffffff80025ff9:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
ffffffff80025ffd:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff80026001:	48 01 c2             	add    %rax,%rdx
ffffffff80026004:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80026008:	48 89 50 18          	mov    %rdx,0x18(%rax)
ffffffff8002600c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80026010:	48 8b 50 38          	mov    0x38(%rax),%rdx
ffffffff80026014:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80026018:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff8002601c:	48 83 e8 01          	sub    $0x1,%rax
ffffffff80026020:	48 01 d0             	add    %rdx,%rax
ffffffff80026023:	c6 00 00             	movb   $0x0,(%rax)
ffffffff80026026:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff8002602b:	c9                   	leave  
ffffffff8002602c:	c3                   	ret    

ffffffff8002602d <ZydisStringAppendDecU>:
ffffffff8002602d:	f3 0f 1e fa          	endbr64 
ffffffff80026031:	55                   	push   %rbp
ffffffff80026032:	48 89 e5             	mov    %rsp,%rbp
ffffffff80026035:	48 83 ec 40          	sub    $0x40,%rsp
ffffffff80026039:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff8002603d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
ffffffff80026041:	89 d0                	mov    %edx,%eax
ffffffff80026043:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
ffffffff80026047:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
ffffffff8002604b:	88 45 dc             	mov    %al,-0x24(%rbp)
ffffffff8002604e:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
ffffffff80026053:	74 22                	je     ffffffff80026077 <ZydisStringAppendDecU+0x4a>
ffffffff80026055:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
ffffffff80026059:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002605d:	48 89 d6             	mov    %rdx,%rsi
ffffffff80026060:	48 89 c7             	mov    %rax,%rdi
ffffffff80026063:	e8 86 fa ff ff       	call   ffffffff80025aee <ZydisStringAppend.lto_priv.1>
ffffffff80026068:	89 45 fc             	mov    %eax,-0x4(%rbp)
ffffffff8002606b:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8002606e:	85 c0                	test   %eax,%eax
ffffffff80026070:	79 05                	jns    ffffffff80026077 <ZydisStringAppendDecU+0x4a>
ffffffff80026072:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff80026075:	eb 46                	jmp    ffffffff800260bd <ZydisStringAppendDecU+0x90>
ffffffff80026077:	0f b6 45 dc          	movzbl -0x24(%rbp),%eax
ffffffff8002607b:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
ffffffff8002607f:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
ffffffff80026083:	89 c2                	mov    %eax,%edx
ffffffff80026085:	48 89 cf             	mov    %rcx,%rdi
ffffffff80026088:	e8 36 fb ff ff       	call   ffffffff80025bc3 <ZydisStringAppendDecU64>
ffffffff8002608d:	89 45 f8             	mov    %eax,-0x8(%rbp)
ffffffff80026090:	8b 45 f8             	mov    -0x8(%rbp),%eax
ffffffff80026093:	85 c0                	test   %eax,%eax
ffffffff80026095:	79 05                	jns    ffffffff8002609c <ZydisStringAppendDecU+0x6f>
ffffffff80026097:	8b 45 f8             	mov    -0x8(%rbp),%eax
ffffffff8002609a:	eb 21                	jmp    ffffffff800260bd <ZydisStringAppendDecU+0x90>
ffffffff8002609c:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
ffffffff800260a1:	74 15                	je     ffffffff800260b8 <ZydisStringAppendDecU+0x8b>
ffffffff800260a3:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
ffffffff800260a7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800260ab:	48 89 d6             	mov    %rdx,%rsi
ffffffff800260ae:	48 89 c7             	mov    %rax,%rdi
ffffffff800260b1:	e8 38 fa ff ff       	call   ffffffff80025aee <ZydisStringAppend.lto_priv.1>
ffffffff800260b6:	eb 05                	jmp    ffffffff800260bd <ZydisStringAppendDecU+0x90>
ffffffff800260b8:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff800260bd:	c9                   	leave  
ffffffff800260be:	c3                   	ret    

ffffffff800260bf <ZydisStringAppendHexU>:
ffffffff800260bf:	f3 0f 1e fa          	endbr64 
ffffffff800260c3:	55                   	push   %rbp
ffffffff800260c4:	48 89 e5             	mov    %rsp,%rbp
ffffffff800260c7:	48 83 ec 38          	sub    $0x38,%rsp
ffffffff800260cb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff800260cf:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
ffffffff800260d3:	89 c8                	mov    %ecx,%eax
ffffffff800260d5:	44 89 c1             	mov    %r8d,%ecx
ffffffff800260d8:	4c 89 4d c8          	mov    %r9,-0x38(%rbp)
ffffffff800260dc:	88 55 dc             	mov    %dl,-0x24(%rbp)
ffffffff800260df:	88 45 d8             	mov    %al,-0x28(%rbp)
ffffffff800260e2:	89 c8                	mov    %ecx,%eax
ffffffff800260e4:	88 45 d4             	mov    %al,-0x2c(%rbp)
ffffffff800260e7:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
ffffffff800260ec:	74 22                	je     ffffffff80026110 <ZydisStringAppendHexU+0x51>
ffffffff800260ee:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
ffffffff800260f2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800260f6:	48 89 d6             	mov    %rdx,%rsi
ffffffff800260f9:	48 89 c7             	mov    %rax,%rdi
ffffffff800260fc:	e8 ed f9 ff ff       	call   ffffffff80025aee <ZydisStringAppend.lto_priv.1>
ffffffff80026101:	89 45 fc             	mov    %eax,-0x4(%rbp)
ffffffff80026104:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff80026107:	85 c0                	test   %eax,%eax
ffffffff80026109:	79 05                	jns    ffffffff80026110 <ZydisStringAppendHexU+0x51>
ffffffff8002610b:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8002610e:	eb 4d                	jmp    ffffffff8002615d <ZydisStringAppendHexU+0x9e>
ffffffff80026110:	0f b6 4d d4          	movzbl -0x2c(%rbp),%ecx
ffffffff80026114:	0f b6 55 d8          	movzbl -0x28(%rbp),%edx
ffffffff80026118:	0f b6 45 dc          	movzbl -0x24(%rbp),%eax
ffffffff8002611c:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
ffffffff80026120:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
ffffffff80026124:	41 89 c8             	mov    %ecx,%r8d
ffffffff80026127:	89 d1                	mov    %edx,%ecx
ffffffff80026129:	89 c2                	mov    %eax,%edx
ffffffff8002612b:	e8 60 fc ff ff       	call   ffffffff80025d90 <ZydisStringAppendHexU64>
ffffffff80026130:	89 45 f8             	mov    %eax,-0x8(%rbp)
ffffffff80026133:	8b 45 f8             	mov    -0x8(%rbp),%eax
ffffffff80026136:	85 c0                	test   %eax,%eax
ffffffff80026138:	79 05                	jns    ffffffff8002613f <ZydisStringAppendHexU+0x80>
ffffffff8002613a:	8b 45 f8             	mov    -0x8(%rbp),%eax
ffffffff8002613d:	eb 1e                	jmp    ffffffff8002615d <ZydisStringAppendHexU+0x9e>
ffffffff8002613f:	48 83 7d 10 00       	cmpq   $0x0,0x10(%rbp)
ffffffff80026144:	74 12                	je     ffffffff80026158 <ZydisStringAppendHexU+0x99>
ffffffff80026146:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002614a:	48 8b 75 10          	mov    0x10(%rbp),%rsi
ffffffff8002614e:	48 89 c7             	mov    %rax,%rdi
ffffffff80026151:	e8 98 f9 ff ff       	call   ffffffff80025aee <ZydisStringAppend.lto_priv.1>
ffffffff80026156:	eb 05                	jmp    ffffffff8002615d <ZydisStringAppendHexU+0x9e>
ffffffff80026158:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff8002615d:	c9                   	leave  
ffffffff8002615e:	c3                   	ret    

ffffffff8002615f <ZydisGetVersion>:
ffffffff8002615f:	f3 0f 1e fa          	endbr64 
ffffffff80026163:	55                   	push   %rbp
ffffffff80026164:	48 89 e5             	mov    %rsp,%rbp
ffffffff80026167:	48 b8 00 00 00 00 00 	movabs $0x4000000000000,%rax
ffffffff8002616e:	00 04 00 
ffffffff80026171:	5d                   	pop    %rbp
ffffffff80026172:	c3                   	ret    

ffffffff80026173 <ZydisIsFeatureEnabled>:
ffffffff80026173:	f3 0f 1e fa          	endbr64 
ffffffff80026177:	55                   	push   %rbp
ffffffff80026178:	48 89 e5             	mov    %rsp,%rbp
ffffffff8002617b:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff8002617f:	89 7d fc             	mov    %edi,-0x4(%rbp)
ffffffff80026182:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
ffffffff80026186:	77 47                	ja     ffffffff800261cf <ZydisIsFeatureEnabled+0x5c>
ffffffff80026188:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8002618b:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
ffffffff80026192:	00 
ffffffff80026193:	48 8d 05 6a 94 01 00 	lea    0x1946a(%rip),%rax        # ffffffff8003f604 <GPR8_MAPPING.0+0x14>
ffffffff8002619a:	8b 04 02             	mov    (%rdx,%rax,1),%eax
ffffffff8002619d:	48 98                	cltq   
ffffffff8002619f:	48 8d 15 5e 94 01 00 	lea    0x1945e(%rip),%rdx        # ffffffff8003f604 <GPR8_MAPPING.0+0x14>
ffffffff800261a6:	48 01 d0             	add    %rdx,%rax
ffffffff800261a9:	3e ff e0             	notrack jmp *%rax
ffffffff800261ac:	b8 02 00 10 00       	mov    $0x100002,%eax
ffffffff800261b1:	eb 21                	jmp    ffffffff800261d4 <ZydisIsFeatureEnabled+0x61>
ffffffff800261b3:	b8 02 00 10 00       	mov    $0x100002,%eax
ffffffff800261b8:	eb 1a                	jmp    ffffffff800261d4 <ZydisIsFeatureEnabled+0x61>
ffffffff800261ba:	b8 02 00 10 00       	mov    $0x100002,%eax
ffffffff800261bf:	eb 13                	jmp    ffffffff800261d4 <ZydisIsFeatureEnabled+0x61>
ffffffff800261c1:	b8 02 00 10 00       	mov    $0x100002,%eax
ffffffff800261c6:	eb 0c                	jmp    ffffffff800261d4 <ZydisIsFeatureEnabled+0x61>
ffffffff800261c8:	b8 02 00 10 00       	mov    $0x100002,%eax
ffffffff800261cd:	eb 05                	jmp    ffffffff800261d4 <ZydisIsFeatureEnabled+0x61>
ffffffff800261cf:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff800261d4:	c9                   	leave  
ffffffff800261d5:	c3                   	ret    

ffffffff800261d6 <ZYAN_MEMCPY.lto_priv.7>:
ffffffff800261d6:	55                   	push   %rbp
ffffffff800261d7:	48 89 e5             	mov    %rsp,%rbp
ffffffff800261da:	48 83 ec 28          	sub    $0x28,%rsp
ffffffff800261de:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff800261e2:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
ffffffff800261e6:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
ffffffff800261ea:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800261ee:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff800261f2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff800261f6:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff800261fa:	eb 1d                	jmp    ffffffff80026219 <ZYAN_MEMCPY.lto_priv.7+0x43>
ffffffff800261fc:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff80026200:	48 8d 42 01          	lea    0x1(%rdx),%rax
ffffffff80026204:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff80026208:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8002620c:	48 8d 48 01          	lea    0x1(%rax),%rcx
ffffffff80026210:	48 89 4d f8          	mov    %rcx,-0x8(%rbp)
ffffffff80026214:	0f b6 12             	movzbl (%rdx),%edx
ffffffff80026217:	88 10                	mov    %dl,(%rax)
ffffffff80026219:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8002621d:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
ffffffff80026221:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
ffffffff80026225:	48 85 c0             	test   %rax,%rax
ffffffff80026228:	75 d2                	jne    ffffffff800261fc <ZYAN_MEMCPY.lto_priv.7+0x26>
ffffffff8002622a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002622e:	c9                   	leave  
ffffffff8002622f:	c3                   	ret    

ffffffff80026230 <ZYAN_MEMSET.lto_priv.4>:
ffffffff80026230:	55                   	push   %rbp
ffffffff80026231:	48 89 e5             	mov    %rsp,%rbp
ffffffff80026234:	48 83 ec 28          	sub    $0x28,%rsp
ffffffff80026238:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff8002623c:	89 75 e4             	mov    %esi,-0x1c(%rbp)
ffffffff8002623f:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
ffffffff80026243:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80026247:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8002624b:	eb 11                	jmp    ffffffff8002625e <ZYAN_MEMSET.lto_priv.4+0x2e>
ffffffff8002624d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80026251:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffff80026255:	48 89 55 f8          	mov    %rdx,-0x8(%rbp)
ffffffff80026259:	8b 55 e4             	mov    -0x1c(%rbp),%edx
ffffffff8002625c:	88 10                	mov    %dl,(%rax)
ffffffff8002625e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80026262:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
ffffffff80026266:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
ffffffff8002626a:	48 85 c0             	test   %rax,%rax
ffffffff8002626d:	75 de                	jne    ffffffff8002624d <ZYAN_MEMSET.lto_priv.4+0x1d>
ffffffff8002626f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80026273:	c9                   	leave  
ffffffff80026274:	c3                   	ret    

ffffffff80026275 <ZydisDecoderTreeGetRootNode>:
ffffffff80026275:	55                   	push   %rbp
ffffffff80026276:	48 89 e5             	mov    %rsp,%rbp
ffffffff80026279:	48 8d 05 8e 90 07 00 	lea    0x7908e(%rip),%rax        # ffffffff8009f30e <zydis_decoder_tree_root>
ffffffff80026280:	5d                   	pop    %rbp
ffffffff80026281:	c3                   	ret    

ffffffff80026282 <ZydisInputPeek>:
ffffffff80026282:	f3 0f 1e fa          	endbr64 
ffffffff80026286:	55                   	push   %rbp
ffffffff80026287:	48 89 e5             	mov    %rsp,%rbp
ffffffff8002628a:	48 83 ec 18          	sub    $0x18,%rsp
ffffffff8002628e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff80026292:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff80026296:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
ffffffff8002629a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8002629e:	0f b6 40 08          	movzbl 0x8(%rax),%eax
ffffffff800262a2:	3c 0e                	cmp    $0xe,%al
ffffffff800262a4:	76 07                	jbe    ffffffff800262ad <ZydisInputPeek+0x2b>
ffffffff800262a6:	b8 02 00 20 80       	mov    $0x80200002,%eax
ffffffff800262ab:	eb 2a                	jmp    ffffffff800262d7 <ZydisInputPeek+0x55>
ffffffff800262ad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff800262b1:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff800262b5:	48 85 c0             	test   %rax,%rax
ffffffff800262b8:	74 18                	je     ffffffff800262d2 <ZydisInputPeek+0x50>
ffffffff800262ba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff800262be:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff800262c2:	0f b6 00             	movzbl (%rax),%eax
ffffffff800262c5:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff800262c9:	88 02                	mov    %al,(%rdx)
ffffffff800262cb:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff800262d0:	eb 05                	jmp    ffffffff800262d7 <ZydisInputPeek+0x55>
ffffffff800262d2:	b8 00 00 20 80       	mov    $0x80200000,%eax
ffffffff800262d7:	c9                   	leave  
ffffffff800262d8:	c3                   	ret    

ffffffff800262d9 <ZydisInputSkip>:
ffffffff800262d9:	f3 0f 1e fa          	endbr64 
ffffffff800262dd:	55                   	push   %rbp
ffffffff800262de:	48 89 e5             	mov    %rsp,%rbp
ffffffff800262e1:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff800262e5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff800262e9:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff800262ed:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff800262f1:	0f b6 40 08          	movzbl 0x8(%rax),%eax
ffffffff800262f5:	83 c0 01             	add    $0x1,%eax
ffffffff800262f8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff800262fc:	88 42 08             	mov    %al,0x8(%rdx)
ffffffff800262ff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80026303:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff80026307:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffff8002630b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8002630f:	48 89 50 10          	mov    %rdx,0x10(%rax)
ffffffff80026313:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80026317:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff8002631b:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
ffffffff8002631f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80026323:	48 89 50 18          	mov    %rdx,0x18(%rax)
ffffffff80026327:	90                   	nop
ffffffff80026328:	c9                   	leave  
ffffffff80026329:	c3                   	ret    

ffffffff8002632a <ZydisInputNext>:
ffffffff8002632a:	f3 0f 1e fa          	endbr64 
ffffffff8002632e:	55                   	push   %rbp
ffffffff8002632f:	48 89 e5             	mov    %rsp,%rbp
ffffffff80026332:	48 83 ec 18          	sub    $0x18,%rsp
ffffffff80026336:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8002633a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff8002633e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
ffffffff80026342:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80026346:	0f b6 40 08          	movzbl 0x8(%rax),%eax
ffffffff8002634a:	3c 0e                	cmp    $0xe,%al
ffffffff8002634c:	76 07                	jbe    ffffffff80026355 <ZydisInputNext+0x2b>
ffffffff8002634e:	b8 02 00 20 80       	mov    $0x80200002,%eax
ffffffff80026353:	eb 5c                	jmp    ffffffff800263b1 <ZydisInputNext+0x87>
ffffffff80026355:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80026359:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff8002635d:	48 85 c0             	test   %rax,%rax
ffffffff80026360:	74 4a                	je     ffffffff800263ac <ZydisInputNext+0x82>
ffffffff80026362:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80026366:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff8002636a:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffff8002636e:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
ffffffff80026372:	48 89 51 10          	mov    %rdx,0x10(%rcx)
ffffffff80026376:	0f b6 00             	movzbl (%rax),%eax
ffffffff80026379:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff8002637d:	88 02                	mov    %al,(%rdx)
ffffffff8002637f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80026383:	0f b6 40 08          	movzbl 0x8(%rax),%eax
ffffffff80026387:	83 c0 01             	add    $0x1,%eax
ffffffff8002638a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff8002638e:	88 42 08             	mov    %al,0x8(%rdx)
ffffffff80026391:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80026395:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff80026399:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
ffffffff8002639d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff800263a1:	48 89 50 18          	mov    %rdx,0x18(%rax)
ffffffff800263a5:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff800263aa:	eb 05                	jmp    ffffffff800263b1 <ZydisInputNext+0x87>
ffffffff800263ac:	b8 00 00 20 80       	mov    $0x80200000,%eax
ffffffff800263b1:	c9                   	leave  
ffffffff800263b2:	c3                   	ret    

ffffffff800263b3 <ZydisInputNextBytes>:
ffffffff800263b3:	f3 0f 1e fa          	endbr64 
ffffffff800263b7:	55                   	push   %rbp
ffffffff800263b8:	48 89 e5             	mov    %rsp,%rbp
ffffffff800263bb:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff800263bf:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff800263c3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff800263c7:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
ffffffff800263cb:	89 c8                	mov    %ecx,%eax
ffffffff800263cd:	88 45 e4             	mov    %al,-0x1c(%rbp)
ffffffff800263d0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff800263d4:	0f b6 40 08          	movzbl 0x8(%rax),%eax
ffffffff800263d8:	0f b6 d0             	movzbl %al,%edx
ffffffff800263db:	0f b6 45 e4          	movzbl -0x1c(%rbp),%eax
ffffffff800263df:	01 d0                	add    %edx,%eax
ffffffff800263e1:	83 f8 0f             	cmp    $0xf,%eax
ffffffff800263e4:	7e 07                	jle    ffffffff800263ed <ZydisInputNextBytes+0x3a>
ffffffff800263e6:	b8 02 00 20 80       	mov    $0x80200002,%eax
ffffffff800263eb:	eb 7e                	jmp    ffffffff8002646b <ZydisInputNextBytes+0xb8>
ffffffff800263ed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff800263f1:	48 8b 50 18          	mov    0x18(%rax),%rdx
ffffffff800263f5:	0f b6 45 e4          	movzbl -0x1c(%rbp),%eax
ffffffff800263f9:	48 39 c2             	cmp    %rax,%rdx
ffffffff800263fc:	72 68                	jb     ffffffff80026466 <ZydisInputNextBytes+0xb3>
ffffffff800263fe:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80026402:	0f b6 50 08          	movzbl 0x8(%rax),%edx
ffffffff80026406:	0f b6 45 e4          	movzbl -0x1c(%rbp),%eax
ffffffff8002640a:	01 d0                	add    %edx,%eax
ffffffff8002640c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff80026410:	88 42 08             	mov    %al,0x8(%rdx)
ffffffff80026413:	0f b6 45 e4          	movzbl -0x1c(%rbp),%eax
ffffffff80026417:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff8002641b:	48 8b 72 10          	mov    0x10(%rdx),%rsi
ffffffff8002641f:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
ffffffff80026423:	48 89 c2             	mov    %rax,%rdx
ffffffff80026426:	48 89 cf             	mov    %rcx,%rdi
ffffffff80026429:	e8 a8 fd ff ff       	call   ffffffff800261d6 <ZYAN_MEMCPY.lto_priv.7>
ffffffff8002642e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80026432:	48 8b 50 10          	mov    0x10(%rax),%rdx
ffffffff80026436:	0f b6 45 e4          	movzbl -0x1c(%rbp),%eax
ffffffff8002643a:	48 01 c2             	add    %rax,%rdx
ffffffff8002643d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80026441:	48 89 50 10          	mov    %rdx,0x10(%rax)
ffffffff80026445:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80026449:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff8002644d:	0f b6 4d e4          	movzbl -0x1c(%rbp),%ecx
ffffffff80026451:	48 29 c8             	sub    %rcx,%rax
ffffffff80026454:	48 89 c2             	mov    %rax,%rdx
ffffffff80026457:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8002645b:	48 89 50 18          	mov    %rdx,0x18(%rax)
ffffffff8002645f:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff80026464:	eb 05                	jmp    ffffffff8002646b <ZydisInputNextBytes+0xb8>
ffffffff80026466:	b8 00 00 20 80       	mov    $0x80200000,%eax
ffffffff8002646b:	c9                   	leave  
ffffffff8002646c:	c3                   	ret    

ffffffff8002646d <ZydisDecodeREX>:
ffffffff8002646d:	f3 0f 1e fa          	endbr64 
ffffffff80026471:	55                   	push   %rbp
ffffffff80026472:	48 89 e5             	mov    %rsp,%rbp
ffffffff80026475:	48 83 ec 18          	sub    $0x18,%rsp
ffffffff80026479:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8002647d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff80026481:	89 d0                	mov    %edx,%eax
ffffffff80026483:	88 45 ec             	mov    %al,-0x14(%rbp)
ffffffff80026486:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8002648a:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff8002648e:	48 83 c8 04          	or     $0x4,%rax
ffffffff80026492:	48 89 c2             	mov    %rax,%rdx
ffffffff80026495:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80026499:	48 89 50 20          	mov    %rdx,0x20(%rax)
ffffffff8002649d:	0f b6 45 ec          	movzbl -0x14(%rbp),%eax
ffffffff800264a1:	c0 e8 03             	shr    $0x3,%al
ffffffff800264a4:	83 e0 01             	and    $0x1,%eax
ffffffff800264a7:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff800264ab:	88 82 ec 00 00 00    	mov    %al,0xec(%rdx)
ffffffff800264b1:	0f b6 45 ec          	movzbl -0x14(%rbp),%eax
ffffffff800264b5:	c0 e8 02             	shr    $0x2,%al
ffffffff800264b8:	83 e0 01             	and    $0x1,%eax
ffffffff800264bb:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff800264bf:	88 82 ed 00 00 00    	mov    %al,0xed(%rdx)
ffffffff800264c5:	0f b6 45 ec          	movzbl -0x14(%rbp),%eax
ffffffff800264c9:	d0 e8                	shr    %al
ffffffff800264cb:	83 e0 01             	and    $0x1,%eax
ffffffff800264ce:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff800264d2:	88 82 ee 00 00 00    	mov    %al,0xee(%rdx)
ffffffff800264d8:	0f b6 45 ec          	movzbl -0x14(%rbp),%eax
ffffffff800264dc:	83 e0 01             	and    $0x1,%eax
ffffffff800264df:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff800264e3:	88 82 ef 00 00 00    	mov    %al,0xef(%rdx)
ffffffff800264e9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff800264ed:	0f b6 80 ec 00 00 00 	movzbl 0xec(%rax),%eax
ffffffff800264f4:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff800264f8:	88 42 0a             	mov    %al,0xa(%rdx)
ffffffff800264fb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff800264ff:	0f b6 80 ed 00 00 00 	movzbl 0xed(%rax),%eax
ffffffff80026506:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff8002650a:	88 42 0b             	mov    %al,0xb(%rdx)
ffffffff8002650d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80026511:	0f b6 80 ee 00 00 00 	movzbl 0xee(%rax),%eax
ffffffff80026518:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff8002651c:	88 42 0c             	mov    %al,0xc(%rdx)
ffffffff8002651f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80026523:	0f b6 80 ef 00 00 00 	movzbl 0xef(%rax),%eax
ffffffff8002652a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff8002652e:	88 42 0d             	mov    %al,0xd(%rdx)
ffffffff80026531:	90                   	nop
ffffffff80026532:	c9                   	leave  
ffffffff80026533:	c3                   	ret    

ffffffff80026534 <ZydisDecodeXOP>:
ffffffff80026534:	f3 0f 1e fa          	endbr64 
ffffffff80026538:	55                   	push   %rbp
ffffffff80026539:	48 89 e5             	mov    %rsp,%rbp
ffffffff8002653c:	48 83 ec 18          	sub    $0x18,%rsp
ffffffff80026540:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff80026544:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff80026548:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
ffffffff8002654c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80026550:	8b 00                	mov    (%rax),%eax
ffffffff80026552:	83 f8 05             	cmp    $0x5,%eax
ffffffff80026555:	75 0a                	jne    ffffffff80026561 <ZydisDecodeXOP+0x2d>
ffffffff80026557:	b8 01 00 20 80       	mov    $0x80200001,%eax
ffffffff8002655c:	e9 ba 01 00 00       	jmp    ffffffff8002671b <ZydisDecodeXOP+0x1e7>
ffffffff80026561:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80026565:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff80026569:	48 83 c8 08          	or     $0x8,%rax
ffffffff8002656d:	48 89 c2             	mov    %rax,%rdx
ffffffff80026570:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80026574:	48 89 50 20          	mov    %rdx,0x20(%rax)
ffffffff80026578:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002657c:	48 83 c0 01          	add    $0x1,%rax
ffffffff80026580:	0f b6 00             	movzbl (%rax),%eax
ffffffff80026583:	c0 e8 07             	shr    $0x7,%al
ffffffff80026586:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff8002658a:	88 82 f1 00 00 00    	mov    %al,0xf1(%rdx)
ffffffff80026590:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80026594:	48 83 c0 01          	add    $0x1,%rax
ffffffff80026598:	0f b6 00             	movzbl (%rax),%eax
ffffffff8002659b:	c0 e8 06             	shr    $0x6,%al
ffffffff8002659e:	83 e0 01             	and    $0x1,%eax
ffffffff800265a1:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff800265a5:	88 82 f2 00 00 00    	mov    %al,0xf2(%rdx)
ffffffff800265ab:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800265af:	48 83 c0 01          	add    $0x1,%rax
ffffffff800265b3:	0f b6 00             	movzbl (%rax),%eax
ffffffff800265b6:	c0 e8 05             	shr    $0x5,%al
ffffffff800265b9:	83 e0 01             	and    $0x1,%eax
ffffffff800265bc:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff800265c0:	88 82 f3 00 00 00    	mov    %al,0xf3(%rdx)
ffffffff800265c6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800265ca:	48 83 c0 01          	add    $0x1,%rax
ffffffff800265ce:	0f b6 00             	movzbl (%rax),%eax
ffffffff800265d1:	83 e0 1f             	and    $0x1f,%eax
ffffffff800265d4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff800265d8:	88 82 f4 00 00 00    	mov    %al,0xf4(%rdx)
ffffffff800265de:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff800265e2:	0f b6 80 f4 00 00 00 	movzbl 0xf4(%rax),%eax
ffffffff800265e9:	3c 07                	cmp    $0x7,%al
ffffffff800265eb:	76 0f                	jbe    ffffffff800265fc <ZydisDecodeXOP+0xc8>
ffffffff800265ed:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff800265f1:	0f b6 80 f4 00 00 00 	movzbl 0xf4(%rax),%eax
ffffffff800265f8:	3c 0a                	cmp    $0xa,%al
ffffffff800265fa:	76 0a                	jbe    ffffffff80026606 <ZydisDecodeXOP+0xd2>
ffffffff800265fc:	b8 07 00 20 80       	mov    $0x80200007,%eax
ffffffff80026601:	e9 15 01 00 00       	jmp    ffffffff8002671b <ZydisDecodeXOP+0x1e7>
ffffffff80026606:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002660a:	48 83 c0 02          	add    $0x2,%rax
ffffffff8002660e:	0f b6 00             	movzbl (%rax),%eax
ffffffff80026611:	c0 e8 07             	shr    $0x7,%al
ffffffff80026614:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff80026618:	88 82 f5 00 00 00    	mov    %al,0xf5(%rdx)
ffffffff8002661e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80026622:	48 83 c0 02          	add    $0x2,%rax
ffffffff80026626:	0f b6 00             	movzbl (%rax),%eax
ffffffff80026629:	c0 e8 03             	shr    $0x3,%al
ffffffff8002662c:	83 e0 0f             	and    $0xf,%eax
ffffffff8002662f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff80026633:	88 82 f6 00 00 00    	mov    %al,0xf6(%rdx)
ffffffff80026639:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002663d:	48 83 c0 02          	add    $0x2,%rax
ffffffff80026641:	0f b6 00             	movzbl (%rax),%eax
ffffffff80026644:	c0 e8 02             	shr    $0x2,%al
ffffffff80026647:	83 e0 01             	and    $0x1,%eax
ffffffff8002664a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff8002664e:	88 82 f7 00 00 00    	mov    %al,0xf7(%rdx)
ffffffff80026654:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80026658:	48 83 c0 02          	add    $0x2,%rax
ffffffff8002665c:	0f b6 00             	movzbl (%rax),%eax
ffffffff8002665f:	83 e0 03             	and    $0x3,%eax
ffffffff80026662:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff80026666:	88 82 f8 00 00 00    	mov    %al,0xf8(%rdx)
ffffffff8002666c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80026670:	0f b6 80 f5 00 00 00 	movzbl 0xf5(%rax),%eax
ffffffff80026677:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff8002667b:	88 42 0a             	mov    %al,0xa(%rdx)
ffffffff8002667e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80026682:	0f b6 80 f1 00 00 00 	movzbl 0xf1(%rax),%eax
ffffffff80026689:	0f b6 c0             	movzbl %al,%eax
ffffffff8002668c:	83 e0 01             	and    $0x1,%eax
ffffffff8002668f:	85 c0                	test   %eax,%eax
ffffffff80026691:	0f 94 c0             	sete   %al
ffffffff80026694:	89 c2                	mov    %eax,%edx
ffffffff80026696:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8002669a:	88 50 0b             	mov    %dl,0xb(%rax)
ffffffff8002669d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff800266a1:	0f b6 80 f2 00 00 00 	movzbl 0xf2(%rax),%eax
ffffffff800266a8:	0f b6 c0             	movzbl %al,%eax
ffffffff800266ab:	83 e0 01             	and    $0x1,%eax
ffffffff800266ae:	85 c0                	test   %eax,%eax
ffffffff800266b0:	0f 94 c0             	sete   %al
ffffffff800266b3:	89 c2                	mov    %eax,%edx
ffffffff800266b5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff800266b9:	88 50 0c             	mov    %dl,0xc(%rax)
ffffffff800266bc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff800266c0:	0f b6 80 f3 00 00 00 	movzbl 0xf3(%rax),%eax
ffffffff800266c7:	0f b6 c0             	movzbl %al,%eax
ffffffff800266ca:	83 e0 01             	and    $0x1,%eax
ffffffff800266cd:	85 c0                	test   %eax,%eax
ffffffff800266cf:	0f 94 c0             	sete   %al
ffffffff800266d2:	89 c2                	mov    %eax,%edx
ffffffff800266d4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff800266d8:	88 50 0d             	mov    %dl,0xd(%rax)
ffffffff800266db:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff800266df:	0f b6 80 f7 00 00 00 	movzbl 0xf7(%rax),%eax
ffffffff800266e6:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff800266ea:	88 42 0e             	mov    %al,0xe(%rdx)
ffffffff800266ed:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff800266f1:	0f b6 80 f7 00 00 00 	movzbl 0xf7(%rax),%eax
ffffffff800266f8:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff800266fc:	88 42 0f             	mov    %al,0xf(%rdx)
ffffffff800266ff:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80026703:	0f b6 80 f6 00 00 00 	movzbl 0xf6(%rax),%eax
ffffffff8002670a:	f7 d0                	not    %eax
ffffffff8002670c:	83 e0 0f             	and    $0xf,%eax
ffffffff8002670f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff80026713:	88 42 12             	mov    %al,0x12(%rdx)
ffffffff80026716:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff8002671b:	c9                   	leave  
ffffffff8002671c:	c3                   	ret    

ffffffff8002671d <ZydisDecodeVEX>:
ffffffff8002671d:	f3 0f 1e fa          	endbr64 
ffffffff80026721:	55                   	push   %rbp
ffffffff80026722:	48 89 e5             	mov    %rsp,%rbp
ffffffff80026725:	48 83 ec 18          	sub    $0x18,%rsp
ffffffff80026729:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8002672d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff80026731:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
ffffffff80026735:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80026739:	0f b6 00             	movzbl (%rax),%eax
ffffffff8002673c:	3c c4                	cmp    $0xc4,%al
ffffffff8002673e:	74 09                	je     ffffffff80026749 <ZydisDecodeVEX+0x2c>
ffffffff80026740:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80026744:	0f b6 00             	movzbl (%rax),%eax
ffffffff80026747:	3c c5                	cmp    $0xc5,%al
ffffffff80026749:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8002674d:	8b 00                	mov    (%rax),%eax
ffffffff8002674f:	83 f8 05             	cmp    $0x5,%eax
ffffffff80026752:	75 0a                	jne    ffffffff8002675e <ZydisDecodeVEX+0x41>
ffffffff80026754:	b8 01 00 20 80       	mov    $0x80200001,%eax
ffffffff80026759:	e9 7d 02 00 00       	jmp    ffffffff800269db <ZydisDecodeVEX+0x2be>
ffffffff8002675e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80026762:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff80026766:	48 83 c8 10          	or     $0x10,%rax
ffffffff8002676a:	48 89 c2             	mov    %rax,%rdx
ffffffff8002676d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80026771:	48 89 50 20          	mov    %rdx,0x20(%rax)
ffffffff80026775:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80026779:	0f b6 00             	movzbl (%rax),%eax
ffffffff8002677c:	0f b6 c0             	movzbl %al,%eax
ffffffff8002677f:	3d c4 00 00 00       	cmp    $0xc4,%eax
ffffffff80026784:	74 10                	je     ffffffff80026796 <ZydisDecodeVEX+0x79>
ffffffff80026786:	3d c5 00 00 00       	cmp    $0xc5,%eax
ffffffff8002678b:	0f 84 e1 00 00 00    	je     ffffffff80026872 <ZydisDecodeVEX+0x155>
ffffffff80026791:	e9 7b 01 00 00       	jmp    ffffffff80026911 <ZydisDecodeVEX+0x1f4>
ffffffff80026796:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8002679a:	c6 80 03 01 00 00 03 	movb   $0x3,0x103(%rax)
ffffffff800267a1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800267a5:	48 83 c0 01          	add    $0x1,%rax
ffffffff800267a9:	0f b6 00             	movzbl (%rax),%eax
ffffffff800267ac:	c0 e8 07             	shr    $0x7,%al
ffffffff800267af:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff800267b3:	88 82 fa 00 00 00    	mov    %al,0xfa(%rdx)
ffffffff800267b9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800267bd:	48 83 c0 01          	add    $0x1,%rax
ffffffff800267c1:	0f b6 00             	movzbl (%rax),%eax
ffffffff800267c4:	c0 e8 06             	shr    $0x6,%al
ffffffff800267c7:	83 e0 01             	and    $0x1,%eax
ffffffff800267ca:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff800267ce:	88 82 fb 00 00 00    	mov    %al,0xfb(%rdx)
ffffffff800267d4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800267d8:	48 83 c0 01          	add    $0x1,%rax
ffffffff800267dc:	0f b6 00             	movzbl (%rax),%eax
ffffffff800267df:	c0 e8 05             	shr    $0x5,%al
ffffffff800267e2:	83 e0 01             	and    $0x1,%eax
ffffffff800267e5:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff800267e9:	88 82 fc 00 00 00    	mov    %al,0xfc(%rdx)
ffffffff800267ef:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800267f3:	48 83 c0 01          	add    $0x1,%rax
ffffffff800267f7:	0f b6 00             	movzbl (%rax),%eax
ffffffff800267fa:	83 e0 1f             	and    $0x1f,%eax
ffffffff800267fd:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff80026801:	88 82 fd 00 00 00    	mov    %al,0xfd(%rdx)
ffffffff80026807:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002680b:	48 83 c0 02          	add    $0x2,%rax
ffffffff8002680f:	0f b6 00             	movzbl (%rax),%eax
ffffffff80026812:	c0 e8 07             	shr    $0x7,%al
ffffffff80026815:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff80026819:	88 82 fe 00 00 00    	mov    %al,0xfe(%rdx)
ffffffff8002681f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80026823:	48 83 c0 02          	add    $0x2,%rax
ffffffff80026827:	0f b6 00             	movzbl (%rax),%eax
ffffffff8002682a:	c0 e8 03             	shr    $0x3,%al
ffffffff8002682d:	83 e0 0f             	and    $0xf,%eax
ffffffff80026830:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff80026834:	88 82 ff 00 00 00    	mov    %al,0xff(%rdx)
ffffffff8002683a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002683e:	48 83 c0 02          	add    $0x2,%rax
ffffffff80026842:	0f b6 00             	movzbl (%rax),%eax
ffffffff80026845:	c0 e8 02             	shr    $0x2,%al
ffffffff80026848:	83 e0 01             	and    $0x1,%eax
ffffffff8002684b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff8002684f:	88 82 00 01 00 00    	mov    %al,0x100(%rdx)
ffffffff80026855:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80026859:	48 83 c0 02          	add    $0x2,%rax
ffffffff8002685d:	0f b6 00             	movzbl (%rax),%eax
ffffffff80026860:	83 e0 03             	and    $0x3,%eax
ffffffff80026863:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff80026867:	88 82 01 01 00 00    	mov    %al,0x101(%rdx)
ffffffff8002686d:	e9 a1 00 00 00       	jmp    ffffffff80026913 <ZydisDecodeVEX+0x1f6>
ffffffff80026872:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80026876:	c6 80 03 01 00 00 02 	movb   $0x2,0x103(%rax)
ffffffff8002687d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80026881:	48 83 c0 01          	add    $0x1,%rax
ffffffff80026885:	0f b6 00             	movzbl (%rax),%eax
ffffffff80026888:	c0 e8 07             	shr    $0x7,%al
ffffffff8002688b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff8002688f:	88 82 fa 00 00 00    	mov    %al,0xfa(%rdx)
ffffffff80026895:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80026899:	c6 80 fb 00 00 00 01 	movb   $0x1,0xfb(%rax)
ffffffff800268a0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff800268a4:	c6 80 fc 00 00 00 01 	movb   $0x1,0xfc(%rax)
ffffffff800268ab:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff800268af:	c6 80 fd 00 00 00 01 	movb   $0x1,0xfd(%rax)
ffffffff800268b6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff800268ba:	c6 80 fe 00 00 00 00 	movb   $0x0,0xfe(%rax)
ffffffff800268c1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800268c5:	48 83 c0 01          	add    $0x1,%rax
ffffffff800268c9:	0f b6 00             	movzbl (%rax),%eax
ffffffff800268cc:	c0 e8 03             	shr    $0x3,%al
ffffffff800268cf:	83 e0 0f             	and    $0xf,%eax
ffffffff800268d2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff800268d6:	88 82 ff 00 00 00    	mov    %al,0xff(%rdx)
ffffffff800268dc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800268e0:	48 83 c0 01          	add    $0x1,%rax
ffffffff800268e4:	0f b6 00             	movzbl (%rax),%eax
ffffffff800268e7:	c0 e8 02             	shr    $0x2,%al
ffffffff800268ea:	83 e0 01             	and    $0x1,%eax
ffffffff800268ed:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff800268f1:	88 82 00 01 00 00    	mov    %al,0x100(%rdx)
ffffffff800268f7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800268fb:	48 83 c0 01          	add    $0x1,%rax
ffffffff800268ff:	0f b6 00             	movzbl (%rax),%eax
ffffffff80026902:	83 e0 03             	and    $0x3,%eax
ffffffff80026905:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff80026909:	88 82 01 01 00 00    	mov    %al,0x101(%rdx)
ffffffff8002690f:	eb 02                	jmp    ffffffff80026913 <ZydisDecodeVEX+0x1f6>
ffffffff80026911:	eb fe                	jmp    ffffffff80026911 <ZydisDecodeVEX+0x1f4>
ffffffff80026913:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80026917:	0f b6 80 fd 00 00 00 	movzbl 0xfd(%rax),%eax
ffffffff8002691e:	3c 03                	cmp    $0x3,%al
ffffffff80026920:	76 0a                	jbe    ffffffff8002692c <ZydisDecodeVEX+0x20f>
ffffffff80026922:	b8 07 00 20 80       	mov    $0x80200007,%eax
ffffffff80026927:	e9 af 00 00 00       	jmp    ffffffff800269db <ZydisDecodeVEX+0x2be>
ffffffff8002692c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80026930:	0f b6 80 fe 00 00 00 	movzbl 0xfe(%rax),%eax
ffffffff80026937:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff8002693b:	88 42 0a             	mov    %al,0xa(%rdx)
ffffffff8002693e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80026942:	0f b6 80 fa 00 00 00 	movzbl 0xfa(%rax),%eax
ffffffff80026949:	0f b6 c0             	movzbl %al,%eax
ffffffff8002694c:	83 e0 01             	and    $0x1,%eax
ffffffff8002694f:	85 c0                	test   %eax,%eax
ffffffff80026951:	0f 94 c0             	sete   %al
ffffffff80026954:	89 c2                	mov    %eax,%edx
ffffffff80026956:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8002695a:	88 50 0b             	mov    %dl,0xb(%rax)
ffffffff8002695d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80026961:	0f b6 80 fb 00 00 00 	movzbl 0xfb(%rax),%eax
ffffffff80026968:	0f b6 c0             	movzbl %al,%eax
ffffffff8002696b:	83 e0 01             	and    $0x1,%eax
ffffffff8002696e:	85 c0                	test   %eax,%eax
ffffffff80026970:	0f 94 c0             	sete   %al
ffffffff80026973:	89 c2                	mov    %eax,%edx
ffffffff80026975:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80026979:	88 50 0c             	mov    %dl,0xc(%rax)
ffffffff8002697c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80026980:	0f b6 80 fc 00 00 00 	movzbl 0xfc(%rax),%eax
ffffffff80026987:	0f b6 c0             	movzbl %al,%eax
ffffffff8002698a:	83 e0 01             	and    $0x1,%eax
ffffffff8002698d:	85 c0                	test   %eax,%eax
ffffffff8002698f:	0f 94 c0             	sete   %al
ffffffff80026992:	89 c2                	mov    %eax,%edx
ffffffff80026994:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80026998:	88 50 0d             	mov    %dl,0xd(%rax)
ffffffff8002699b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8002699f:	0f b6 80 00 01 00 00 	movzbl 0x100(%rax),%eax
ffffffff800269a6:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff800269aa:	88 42 0e             	mov    %al,0xe(%rdx)
ffffffff800269ad:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff800269b1:	0f b6 80 00 01 00 00 	movzbl 0x100(%rax),%eax
ffffffff800269b8:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff800269bc:	88 42 0f             	mov    %al,0xf(%rdx)
ffffffff800269bf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff800269c3:	0f b6 80 ff 00 00 00 	movzbl 0xff(%rax),%eax
ffffffff800269ca:	f7 d0                	not    %eax
ffffffff800269cc:	83 e0 0f             	and    $0xf,%eax
ffffffff800269cf:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff800269d3:	88 42 12             	mov    %al,0x12(%rdx)
ffffffff800269d6:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff800269db:	c9                   	leave  
ffffffff800269dc:	c3                   	ret    

ffffffff800269dd <ZydisDecodeEVEX>:
ffffffff800269dd:	f3 0f 1e fa          	endbr64 
ffffffff800269e1:	55                   	push   %rbp
ffffffff800269e2:	48 89 e5             	mov    %rsp,%rbp
ffffffff800269e5:	48 83 ec 18          	sub    $0x18,%rsp
ffffffff800269e9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff800269ed:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff800269f1:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
ffffffff800269f5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff800269f9:	8b 00                	mov    (%rax),%eax
ffffffff800269fb:	83 f8 05             	cmp    $0x5,%eax
ffffffff800269fe:	75 0a                	jne    ffffffff80026a0a <ZydisDecodeEVEX+0x2d>
ffffffff80026a00:	b8 01 00 20 80       	mov    $0x80200001,%eax
ffffffff80026a05:	e9 55 03 00 00       	jmp    ffffffff80026d5f <ZydisDecodeEVEX+0x382>
ffffffff80026a0a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80026a0e:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff80026a12:	48 83 c8 20          	or     $0x20,%rax
ffffffff80026a16:	48 89 c2             	mov    %rax,%rdx
ffffffff80026a19:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80026a1d:	48 89 50 20          	mov    %rdx,0x20(%rax)
ffffffff80026a21:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80026a25:	48 83 c0 01          	add    $0x1,%rax
ffffffff80026a29:	0f b6 00             	movzbl (%rax),%eax
ffffffff80026a2c:	c0 e8 07             	shr    $0x7,%al
ffffffff80026a2f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff80026a33:	88 82 04 01 00 00    	mov    %al,0x104(%rdx)
ffffffff80026a39:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80026a3d:	48 83 c0 01          	add    $0x1,%rax
ffffffff80026a41:	0f b6 00             	movzbl (%rax),%eax
ffffffff80026a44:	c0 e8 06             	shr    $0x6,%al
ffffffff80026a47:	83 e0 01             	and    $0x1,%eax
ffffffff80026a4a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff80026a4e:	88 82 05 01 00 00    	mov    %al,0x105(%rdx)
ffffffff80026a54:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80026a58:	48 83 c0 01          	add    $0x1,%rax
ffffffff80026a5c:	0f b6 00             	movzbl (%rax),%eax
ffffffff80026a5f:	c0 e8 05             	shr    $0x5,%al
ffffffff80026a62:	83 e0 01             	and    $0x1,%eax
ffffffff80026a65:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff80026a69:	88 82 06 01 00 00    	mov    %al,0x106(%rdx)
ffffffff80026a6f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80026a73:	48 83 c0 01          	add    $0x1,%rax
ffffffff80026a77:	0f b6 00             	movzbl (%rax),%eax
ffffffff80026a7a:	c0 e8 04             	shr    $0x4,%al
ffffffff80026a7d:	83 e0 01             	and    $0x1,%eax
ffffffff80026a80:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff80026a84:	88 82 07 01 00 00    	mov    %al,0x107(%rdx)
ffffffff80026a8a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80026a8e:	48 83 c0 01          	add    $0x1,%rax
ffffffff80026a92:	0f b6 00             	movzbl (%rax),%eax
ffffffff80026a95:	0f b6 c0             	movzbl %al,%eax
ffffffff80026a98:	83 e0 08             	and    $0x8,%eax
ffffffff80026a9b:	85 c0                	test   %eax,%eax
ffffffff80026a9d:	74 0a                	je     ffffffff80026aa9 <ZydisDecodeEVEX+0xcc>
ffffffff80026a9f:	b8 08 00 20 80       	mov    $0x80200008,%eax
ffffffff80026aa4:	e9 b6 02 00 00       	jmp    ffffffff80026d5f <ZydisDecodeEVEX+0x382>
ffffffff80026aa9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80026aad:	48 83 c0 01          	add    $0x1,%rax
ffffffff80026ab1:	0f b6 00             	movzbl (%rax),%eax
ffffffff80026ab4:	83 e0 07             	and    $0x7,%eax
ffffffff80026ab7:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff80026abb:	88 82 08 01 00 00    	mov    %al,0x108(%rdx)
ffffffff80026ac1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80026ac5:	0f b6 80 08 01 00 00 	movzbl 0x108(%rax),%eax
ffffffff80026acc:	84 c0                	test   %al,%al
ffffffff80026ace:	74 1e                	je     ffffffff80026aee <ZydisDecodeEVEX+0x111>
ffffffff80026ad0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80026ad4:	0f b6 80 08 01 00 00 	movzbl 0x108(%rax),%eax
ffffffff80026adb:	3c 04                	cmp    $0x4,%al
ffffffff80026add:	74 0f                	je     ffffffff80026aee <ZydisDecodeEVEX+0x111>
ffffffff80026adf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80026ae3:	0f b6 80 08 01 00 00 	movzbl 0x108(%rax),%eax
ffffffff80026aea:	3c 07                	cmp    $0x7,%al
ffffffff80026aec:	75 0a                	jne    ffffffff80026af8 <ZydisDecodeEVEX+0x11b>
ffffffff80026aee:	b8 07 00 20 80       	mov    $0x80200007,%eax
ffffffff80026af3:	e9 67 02 00 00       	jmp    ffffffff80026d5f <ZydisDecodeEVEX+0x382>
ffffffff80026af8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80026afc:	48 83 c0 02          	add    $0x2,%rax
ffffffff80026b00:	0f b6 00             	movzbl (%rax),%eax
ffffffff80026b03:	c0 e8 07             	shr    $0x7,%al
ffffffff80026b06:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff80026b0a:	88 82 09 01 00 00    	mov    %al,0x109(%rdx)
ffffffff80026b10:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80026b14:	48 83 c0 02          	add    $0x2,%rax
ffffffff80026b18:	0f b6 00             	movzbl (%rax),%eax
ffffffff80026b1b:	c0 e8 03             	shr    $0x3,%al
ffffffff80026b1e:	83 e0 0f             	and    $0xf,%eax
ffffffff80026b21:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff80026b25:	88 82 0a 01 00 00    	mov    %al,0x10a(%rdx)
ffffffff80026b2b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80026b2f:	48 83 c0 02          	add    $0x2,%rax
ffffffff80026b33:	0f b6 00             	movzbl (%rax),%eax
ffffffff80026b36:	83 e0 03             	and    $0x3,%eax
ffffffff80026b39:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff80026b3d:	88 82 0b 01 00 00    	mov    %al,0x10b(%rdx)
ffffffff80026b43:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80026b47:	48 83 c0 03          	add    $0x3,%rax
ffffffff80026b4b:	0f b6 00             	movzbl (%rax),%eax
ffffffff80026b4e:	c0 e8 07             	shr    $0x7,%al
ffffffff80026b51:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff80026b55:	88 82 0c 01 00 00    	mov    %al,0x10c(%rdx)
ffffffff80026b5b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80026b5f:	48 83 c0 03          	add    $0x3,%rax
ffffffff80026b63:	0f b6 00             	movzbl (%rax),%eax
ffffffff80026b66:	c0 e8 06             	shr    $0x6,%al
ffffffff80026b69:	83 e0 01             	and    $0x1,%eax
ffffffff80026b6c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff80026b70:	88 82 0d 01 00 00    	mov    %al,0x10d(%rdx)
ffffffff80026b76:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80026b7a:	48 83 c0 03          	add    $0x3,%rax
ffffffff80026b7e:	0f b6 00             	movzbl (%rax),%eax
ffffffff80026b81:	c0 e8 05             	shr    $0x5,%al
ffffffff80026b84:	83 e0 01             	and    $0x1,%eax
ffffffff80026b87:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff80026b8b:	88 82 0e 01 00 00    	mov    %al,0x10e(%rdx)
ffffffff80026b91:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80026b95:	48 83 c0 03          	add    $0x3,%rax
ffffffff80026b99:	0f b6 00             	movzbl (%rax),%eax
ffffffff80026b9c:	c0 e8 04             	shr    $0x4,%al
ffffffff80026b9f:	83 e0 01             	and    $0x1,%eax
ffffffff80026ba2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff80026ba6:	88 82 0f 01 00 00    	mov    %al,0x10f(%rdx)
ffffffff80026bac:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80026bb0:	48 83 c0 03          	add    $0x3,%rax
ffffffff80026bb4:	0f b6 00             	movzbl (%rax),%eax
ffffffff80026bb7:	c0 e8 03             	shr    $0x3,%al
ffffffff80026bba:	83 e0 01             	and    $0x1,%eax
ffffffff80026bbd:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff80026bc1:	88 82 10 01 00 00    	mov    %al,0x110(%rdx)
ffffffff80026bc7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80026bcb:	0f b6 80 10 01 00 00 	movzbl 0x110(%rax),%eax
ffffffff80026bd2:	84 c0                	test   %al,%al
ffffffff80026bd4:	75 14                	jne    ffffffff80026bea <ZydisDecodeEVEX+0x20d>
ffffffff80026bd6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80026bda:	8b 00                	mov    (%rax),%eax
ffffffff80026bdc:	85 c0                	test   %eax,%eax
ffffffff80026bde:	74 0a                	je     ffffffff80026bea <ZydisDecodeEVEX+0x20d>
ffffffff80026be0:	b8 08 00 20 80       	mov    $0x80200008,%eax
ffffffff80026be5:	e9 75 01 00 00       	jmp    ffffffff80026d5f <ZydisDecodeEVEX+0x382>
ffffffff80026bea:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80026bee:	48 83 c0 03          	add    $0x3,%rax
ffffffff80026bf2:	0f b6 00             	movzbl (%rax),%eax
ffffffff80026bf5:	83 e0 07             	and    $0x7,%eax
ffffffff80026bf8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff80026bfc:	88 82 11 01 00 00    	mov    %al,0x111(%rdx)
ffffffff80026c02:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80026c06:	0f b6 80 0c 01 00 00 	movzbl 0x10c(%rax),%eax
ffffffff80026c0d:	84 c0                	test   %al,%al
ffffffff80026c0f:	74 19                	je     ffffffff80026c2a <ZydisDecodeEVEX+0x24d>
ffffffff80026c11:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80026c15:	0f b6 80 11 01 00 00 	movzbl 0x111(%rax),%eax
ffffffff80026c1c:	84 c0                	test   %al,%al
ffffffff80026c1e:	75 0a                	jne    ffffffff80026c2a <ZydisDecodeEVEX+0x24d>
ffffffff80026c20:	b8 0a 00 20 80       	mov    $0x8020000a,%eax
ffffffff80026c25:	e9 35 01 00 00       	jmp    ffffffff80026d5f <ZydisDecodeEVEX+0x382>
ffffffff80026c2a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80026c2e:	0f b6 80 09 01 00 00 	movzbl 0x109(%rax),%eax
ffffffff80026c35:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff80026c39:	88 42 0a             	mov    %al,0xa(%rdx)
ffffffff80026c3c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80026c40:	0f b6 80 04 01 00 00 	movzbl 0x104(%rax),%eax
ffffffff80026c47:	0f b6 c0             	movzbl %al,%eax
ffffffff80026c4a:	83 e0 01             	and    $0x1,%eax
ffffffff80026c4d:	85 c0                	test   %eax,%eax
ffffffff80026c4f:	0f 94 c0             	sete   %al
ffffffff80026c52:	89 c2                	mov    %eax,%edx
ffffffff80026c54:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80026c58:	88 50 0b             	mov    %dl,0xb(%rax)
ffffffff80026c5b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80026c5f:	0f b6 80 05 01 00 00 	movzbl 0x105(%rax),%eax
ffffffff80026c66:	0f b6 c0             	movzbl %al,%eax
ffffffff80026c69:	83 e0 01             	and    $0x1,%eax
ffffffff80026c6c:	85 c0                	test   %eax,%eax
ffffffff80026c6e:	0f 94 c0             	sete   %al
ffffffff80026c71:	89 c2                	mov    %eax,%edx
ffffffff80026c73:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80026c77:	88 50 0c             	mov    %dl,0xc(%rax)
ffffffff80026c7a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80026c7e:	0f b6 80 06 01 00 00 	movzbl 0x106(%rax),%eax
ffffffff80026c85:	0f b6 c0             	movzbl %al,%eax
ffffffff80026c88:	83 e0 01             	and    $0x1,%eax
ffffffff80026c8b:	85 c0                	test   %eax,%eax
ffffffff80026c8d:	0f 94 c0             	sete   %al
ffffffff80026c90:	89 c2                	mov    %eax,%edx
ffffffff80026c92:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80026c96:	88 50 0d             	mov    %dl,0xd(%rax)
ffffffff80026c99:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80026c9d:	48 83 c0 03          	add    $0x3,%rax
ffffffff80026ca1:	0f b6 00             	movzbl (%rax),%eax
ffffffff80026ca4:	c0 e8 05             	shr    $0x5,%al
ffffffff80026ca7:	83 e0 03             	and    $0x3,%eax
ffffffff80026caa:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff80026cae:	88 42 0f             	mov    %al,0xf(%rdx)
ffffffff80026cb1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80026cb5:	0f b6 80 07 01 00 00 	movzbl 0x107(%rax),%eax
ffffffff80026cbc:	0f b6 c0             	movzbl %al,%eax
ffffffff80026cbf:	83 e0 01             	and    $0x1,%eax
ffffffff80026cc2:	85 c0                	test   %eax,%eax
ffffffff80026cc4:	0f 94 c0             	sete   %al
ffffffff80026cc7:	89 c2                	mov    %eax,%edx
ffffffff80026cc9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80026ccd:	88 50 10             	mov    %dl,0x10(%rax)
ffffffff80026cd0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80026cd4:	0f b6 80 10 01 00 00 	movzbl 0x110(%rax),%eax
ffffffff80026cdb:	0f b6 c0             	movzbl %al,%eax
ffffffff80026cde:	83 e0 01             	and    $0x1,%eax
ffffffff80026ce1:	85 c0                	test   %eax,%eax
ffffffff80026ce3:	0f 94 c0             	sete   %al
ffffffff80026ce6:	89 c2                	mov    %eax,%edx
ffffffff80026ce8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80026cec:	88 50 11             	mov    %dl,0x11(%rax)
ffffffff80026cef:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80026cf3:	0f b6 80 0a 01 00 00 	movzbl 0x10a(%rax),%eax
ffffffff80026cfa:	f7 d0                	not    %eax
ffffffff80026cfc:	83 e0 0f             	and    $0xf,%eax
ffffffff80026cff:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff80026d03:	88 42 12             	mov    %al,0x12(%rdx)
ffffffff80026d06:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80026d0a:	0f b6 80 11 01 00 00 	movzbl 0x111(%rax),%eax
ffffffff80026d11:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff80026d15:	88 42 13             	mov    %al,0x13(%rdx)
ffffffff80026d18:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80026d1c:	0f b6 80 10 01 00 00 	movzbl 0x110(%rax),%eax
ffffffff80026d23:	84 c0                	test   %al,%al
ffffffff80026d25:	75 11                	jne    ffffffff80026d38 <ZydisDecodeEVEX+0x35b>
ffffffff80026d27:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80026d2b:	8b 00                	mov    (%rax),%eax
ffffffff80026d2d:	85 c0                	test   %eax,%eax
ffffffff80026d2f:	74 07                	je     ffffffff80026d38 <ZydisDecodeEVEX+0x35b>
ffffffff80026d31:	b8 08 00 20 80       	mov    $0x80200008,%eax
ffffffff80026d36:	eb 27                	jmp    ffffffff80026d5f <ZydisDecodeEVEX+0x382>
ffffffff80026d38:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80026d3c:	0f b6 80 0f 01 00 00 	movzbl 0x10f(%rax),%eax
ffffffff80026d43:	84 c0                	test   %al,%al
ffffffff80026d45:	75 13                	jne    ffffffff80026d5a <ZydisDecodeEVEX+0x37d>
ffffffff80026d47:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80026d4b:	0f b6 40 0f          	movzbl 0xf(%rax),%eax
ffffffff80026d4f:	3c 03                	cmp    $0x3,%al
ffffffff80026d51:	75 07                	jne    ffffffff80026d5a <ZydisDecodeEVEX+0x37d>
ffffffff80026d53:	b8 08 00 20 80       	mov    $0x80200008,%eax
ffffffff80026d58:	eb 05                	jmp    ffffffff80026d5f <ZydisDecodeEVEX+0x382>
ffffffff80026d5a:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff80026d5f:	c9                   	leave  
ffffffff80026d60:	c3                   	ret    

ffffffff80026d61 <ZydisDecodeMVEX>:
ffffffff80026d61:	f3 0f 1e fa          	endbr64 
ffffffff80026d65:	55                   	push   %rbp
ffffffff80026d66:	48 89 e5             	mov    %rsp,%rbp
ffffffff80026d69:	48 83 ec 18          	sub    $0x18,%rsp
ffffffff80026d6d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff80026d71:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff80026d75:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
ffffffff80026d79:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80026d7d:	8b 00                	mov    (%rax),%eax
ffffffff80026d7f:	85 c0                	test   %eax,%eax
ffffffff80026d81:	74 0a                	je     ffffffff80026d8d <ZydisDecodeMVEX+0x2c>
ffffffff80026d83:	b8 01 00 20 80       	mov    $0x80200001,%eax
ffffffff80026d88:	e9 45 02 00 00       	jmp    ffffffff80026fd2 <ZydisDecodeMVEX+0x271>
ffffffff80026d8d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80026d91:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff80026d95:	48 83 c8 40          	or     $0x40,%rax
ffffffff80026d99:	48 89 c2             	mov    %rax,%rdx
ffffffff80026d9c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80026da0:	48 89 50 20          	mov    %rdx,0x20(%rax)
ffffffff80026da4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80026da8:	48 83 c0 01          	add    $0x1,%rax
ffffffff80026dac:	0f b6 00             	movzbl (%rax),%eax
ffffffff80026daf:	c0 e8 07             	shr    $0x7,%al
ffffffff80026db2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff80026db6:	88 82 13 01 00 00    	mov    %al,0x113(%rdx)
ffffffff80026dbc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80026dc0:	48 83 c0 01          	add    $0x1,%rax
ffffffff80026dc4:	0f b6 00             	movzbl (%rax),%eax
ffffffff80026dc7:	c0 e8 06             	shr    $0x6,%al
ffffffff80026dca:	83 e0 01             	and    $0x1,%eax
ffffffff80026dcd:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff80026dd1:	88 82 14 01 00 00    	mov    %al,0x114(%rdx)
ffffffff80026dd7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80026ddb:	48 83 c0 01          	add    $0x1,%rax
ffffffff80026ddf:	0f b6 00             	movzbl (%rax),%eax
ffffffff80026de2:	c0 e8 05             	shr    $0x5,%al
ffffffff80026de5:	83 e0 01             	and    $0x1,%eax
ffffffff80026de8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff80026dec:	88 82 15 01 00 00    	mov    %al,0x115(%rdx)
ffffffff80026df2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80026df6:	48 83 c0 01          	add    $0x1,%rax
ffffffff80026dfa:	0f b6 00             	movzbl (%rax),%eax
ffffffff80026dfd:	c0 e8 04             	shr    $0x4,%al
ffffffff80026e00:	83 e0 01             	and    $0x1,%eax
ffffffff80026e03:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff80026e07:	88 82 16 01 00 00    	mov    %al,0x116(%rdx)
ffffffff80026e0d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80026e11:	48 83 c0 01          	add    $0x1,%rax
ffffffff80026e15:	0f b6 00             	movzbl (%rax),%eax
ffffffff80026e18:	83 e0 0f             	and    $0xf,%eax
ffffffff80026e1b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff80026e1f:	88 82 17 01 00 00    	mov    %al,0x117(%rdx)
ffffffff80026e25:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80026e29:	0f b6 80 17 01 00 00 	movzbl 0x117(%rax),%eax
ffffffff80026e30:	3c 03                	cmp    $0x3,%al
ffffffff80026e32:	76 0a                	jbe    ffffffff80026e3e <ZydisDecodeMVEX+0xdd>
ffffffff80026e34:	b8 07 00 20 80       	mov    $0x80200007,%eax
ffffffff80026e39:	e9 94 01 00 00       	jmp    ffffffff80026fd2 <ZydisDecodeMVEX+0x271>
ffffffff80026e3e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80026e42:	48 83 c0 02          	add    $0x2,%rax
ffffffff80026e46:	0f b6 00             	movzbl (%rax),%eax
ffffffff80026e49:	c0 e8 07             	shr    $0x7,%al
ffffffff80026e4c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff80026e50:	88 82 18 01 00 00    	mov    %al,0x118(%rdx)
ffffffff80026e56:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80026e5a:	48 83 c0 02          	add    $0x2,%rax
ffffffff80026e5e:	0f b6 00             	movzbl (%rax),%eax
ffffffff80026e61:	c0 e8 03             	shr    $0x3,%al
ffffffff80026e64:	83 e0 0f             	and    $0xf,%eax
ffffffff80026e67:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff80026e6b:	88 82 19 01 00 00    	mov    %al,0x119(%rdx)
ffffffff80026e71:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80026e75:	48 83 c0 02          	add    $0x2,%rax
ffffffff80026e79:	0f b6 00             	movzbl (%rax),%eax
ffffffff80026e7c:	83 e0 03             	and    $0x3,%eax
ffffffff80026e7f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff80026e83:	88 82 1a 01 00 00    	mov    %al,0x11a(%rdx)
ffffffff80026e89:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80026e8d:	48 83 c0 03          	add    $0x3,%rax
ffffffff80026e91:	0f b6 00             	movzbl (%rax),%eax
ffffffff80026e94:	c0 e8 07             	shr    $0x7,%al
ffffffff80026e97:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff80026e9b:	88 82 1b 01 00 00    	mov    %al,0x11b(%rdx)
ffffffff80026ea1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80026ea5:	48 83 c0 03          	add    $0x3,%rax
ffffffff80026ea9:	0f b6 00             	movzbl (%rax),%eax
ffffffff80026eac:	c0 e8 04             	shr    $0x4,%al
ffffffff80026eaf:	83 e0 07             	and    $0x7,%eax
ffffffff80026eb2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff80026eb6:	88 82 1c 01 00 00    	mov    %al,0x11c(%rdx)
ffffffff80026ebc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80026ec0:	48 83 c0 03          	add    $0x3,%rax
ffffffff80026ec4:	0f b6 00             	movzbl (%rax),%eax
ffffffff80026ec7:	c0 e8 03             	shr    $0x3,%al
ffffffff80026eca:	83 e0 01             	and    $0x1,%eax
ffffffff80026ecd:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff80026ed1:	88 82 1d 01 00 00    	mov    %al,0x11d(%rdx)
ffffffff80026ed7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80026edb:	48 83 c0 03          	add    $0x3,%rax
ffffffff80026edf:	0f b6 00             	movzbl (%rax),%eax
ffffffff80026ee2:	83 e0 07             	and    $0x7,%eax
ffffffff80026ee5:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff80026ee9:	88 82 1e 01 00 00    	mov    %al,0x11e(%rdx)
ffffffff80026eef:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80026ef3:	0f b6 80 18 01 00 00 	movzbl 0x118(%rax),%eax
ffffffff80026efa:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff80026efe:	88 42 0a             	mov    %al,0xa(%rdx)
ffffffff80026f01:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80026f05:	0f b6 80 13 01 00 00 	movzbl 0x113(%rax),%eax
ffffffff80026f0c:	0f b6 c0             	movzbl %al,%eax
ffffffff80026f0f:	83 e0 01             	and    $0x1,%eax
ffffffff80026f12:	85 c0                	test   %eax,%eax
ffffffff80026f14:	0f 94 c0             	sete   %al
ffffffff80026f17:	89 c2                	mov    %eax,%edx
ffffffff80026f19:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80026f1d:	88 50 0b             	mov    %dl,0xb(%rax)
ffffffff80026f20:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80026f24:	0f b6 80 14 01 00 00 	movzbl 0x114(%rax),%eax
ffffffff80026f2b:	0f b6 c0             	movzbl %al,%eax
ffffffff80026f2e:	83 e0 01             	and    $0x1,%eax
ffffffff80026f31:	85 c0                	test   %eax,%eax
ffffffff80026f33:	0f 94 c0             	sete   %al
ffffffff80026f36:	89 c2                	mov    %eax,%edx
ffffffff80026f38:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80026f3c:	88 50 0c             	mov    %dl,0xc(%rax)
ffffffff80026f3f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80026f43:	0f b6 80 15 01 00 00 	movzbl 0x115(%rax),%eax
ffffffff80026f4a:	0f b6 c0             	movzbl %al,%eax
ffffffff80026f4d:	83 e0 01             	and    $0x1,%eax
ffffffff80026f50:	85 c0                	test   %eax,%eax
ffffffff80026f52:	0f 94 c0             	sete   %al
ffffffff80026f55:	89 c2                	mov    %eax,%edx
ffffffff80026f57:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80026f5b:	88 50 0d             	mov    %dl,0xd(%rax)
ffffffff80026f5e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80026f62:	0f b6 80 16 01 00 00 	movzbl 0x116(%rax),%eax
ffffffff80026f69:	0f b6 c0             	movzbl %al,%eax
ffffffff80026f6c:	83 e0 01             	and    $0x1,%eax
ffffffff80026f6f:	85 c0                	test   %eax,%eax
ffffffff80026f71:	0f 94 c0             	sete   %al
ffffffff80026f74:	89 c2                	mov    %eax,%edx
ffffffff80026f76:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80026f7a:	88 50 10             	mov    %dl,0x10(%rax)
ffffffff80026f7d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80026f81:	0f b6 80 1d 01 00 00 	movzbl 0x11d(%rax),%eax
ffffffff80026f88:	0f b6 c0             	movzbl %al,%eax
ffffffff80026f8b:	83 e0 01             	and    $0x1,%eax
ffffffff80026f8e:	85 c0                	test   %eax,%eax
ffffffff80026f90:	0f 94 c0             	sete   %al
ffffffff80026f93:	89 c2                	mov    %eax,%edx
ffffffff80026f95:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80026f99:	88 50 11             	mov    %dl,0x11(%rax)
ffffffff80026f9c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80026fa0:	c6 40 0f 02          	movb   $0x2,0xf(%rax)
ffffffff80026fa4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80026fa8:	0f b6 80 19 01 00 00 	movzbl 0x119(%rax),%eax
ffffffff80026faf:	f7 d0                	not    %eax
ffffffff80026fb1:	83 e0 0f             	and    $0xf,%eax
ffffffff80026fb4:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff80026fb8:	88 42 12             	mov    %al,0x12(%rdx)
ffffffff80026fbb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80026fbf:	0f b6 80 1e 01 00 00 	movzbl 0x11e(%rax),%eax
ffffffff80026fc6:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff80026fca:	88 42 13             	mov    %al,0x13(%rdx)
ffffffff80026fcd:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff80026fd2:	c9                   	leave  
ffffffff80026fd3:	c3                   	ret    

ffffffff80026fd4 <ZydisDecodeModRM>:
ffffffff80026fd4:	f3 0f 1e fa          	endbr64 
ffffffff80026fd8:	55                   	push   %rbp
ffffffff80026fd9:	48 89 e5             	mov    %rsp,%rbp
ffffffff80026fdc:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff80026fe0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff80026fe4:	89 f0                	mov    %esi,%eax
ffffffff80026fe6:	88 45 f4             	mov    %al,-0xc(%rbp)
ffffffff80026fe9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80026fed:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff80026ff1:	48 83 c8 01          	or     $0x1,%rax
ffffffff80026ff5:	48 89 c2             	mov    %rax,%rdx
ffffffff80026ff8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80026ffc:	48 89 50 20          	mov    %rdx,0x20(%rax)
ffffffff80027000:	0f b6 45 f4          	movzbl -0xc(%rbp),%eax
ffffffff80027004:	c0 e8 06             	shr    $0x6,%al
ffffffff80027007:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff8002700b:	88 82 20 01 00 00    	mov    %al,0x120(%rdx)
ffffffff80027011:	0f b6 45 f4          	movzbl -0xc(%rbp),%eax
ffffffff80027015:	c0 e8 03             	shr    $0x3,%al
ffffffff80027018:	83 e0 07             	and    $0x7,%eax
ffffffff8002701b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff8002701f:	88 82 21 01 00 00    	mov    %al,0x121(%rdx)
ffffffff80027025:	0f b6 45 f4          	movzbl -0xc(%rbp),%eax
ffffffff80027029:	83 e0 07             	and    $0x7,%eax
ffffffff8002702c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff80027030:	88 82 22 01 00 00    	mov    %al,0x122(%rdx)
ffffffff80027036:	90                   	nop
ffffffff80027037:	c9                   	leave  
ffffffff80027038:	c3                   	ret    

ffffffff80027039 <ZydisDecodeSIB>:
ffffffff80027039:	f3 0f 1e fa          	endbr64 
ffffffff8002703d:	55                   	push   %rbp
ffffffff8002703e:	48 89 e5             	mov    %rsp,%rbp
ffffffff80027041:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff80027045:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff80027049:	89 f0                	mov    %esi,%eax
ffffffff8002704b:	88 45 f4             	mov    %al,-0xc(%rbp)
ffffffff8002704e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80027052:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff80027056:	48 83 c8 02          	or     $0x2,%rax
ffffffff8002705a:	48 89 c2             	mov    %rax,%rdx
ffffffff8002705d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80027061:	48 89 50 20          	mov    %rdx,0x20(%rax)
ffffffff80027065:	0f b6 45 f4          	movzbl -0xc(%rbp),%eax
ffffffff80027069:	c0 e8 06             	shr    $0x6,%al
ffffffff8002706c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff80027070:	88 82 24 01 00 00    	mov    %al,0x124(%rdx)
ffffffff80027076:	0f b6 45 f4          	movzbl -0xc(%rbp),%eax
ffffffff8002707a:	c0 e8 03             	shr    $0x3,%al
ffffffff8002707d:	83 e0 07             	and    $0x7,%eax
ffffffff80027080:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff80027084:	88 82 25 01 00 00    	mov    %al,0x125(%rdx)
ffffffff8002708a:	0f b6 45 f4          	movzbl -0xc(%rbp),%eax
ffffffff8002708e:	83 e0 07             	and    $0x7,%eax
ffffffff80027091:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff80027095:	88 82 26 01 00 00    	mov    %al,0x126(%rdx)
ffffffff8002709b:	90                   	nop
ffffffff8002709c:	c9                   	leave  
ffffffff8002709d:	c3                   	ret    

ffffffff8002709e <ZydisReadDisplacement>:
ffffffff8002709e:	f3 0f 1e fa          	endbr64 
ffffffff800270a2:	55                   	push   %rbp
ffffffff800270a3:	48 89 e5             	mov    %rsp,%rbp
ffffffff800270a6:	48 83 ec 38          	sub    $0x38,%rsp
ffffffff800270aa:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
ffffffff800270ae:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
ffffffff800270b2:	89 d0                	mov    %edx,%eax
ffffffff800270b4:	88 45 cc             	mov    %al,-0x34(%rbp)
ffffffff800270b7:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
ffffffff800270bb:	0f b6 45 cc          	movzbl -0x34(%rbp),%eax
ffffffff800270bf:	88 82 30 01 00 00    	mov    %al,0x130(%rdx)
ffffffff800270c5:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff800270c9:	0f b6 40 08          	movzbl 0x8(%rax),%eax
ffffffff800270cd:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
ffffffff800270d1:	88 82 31 01 00 00    	mov    %al,0x131(%rdx)
ffffffff800270d7:	0f b6 45 cc          	movzbl -0x34(%rbp),%eax
ffffffff800270db:	83 f8 40             	cmp    $0x40,%eax
ffffffff800270de:	0f 84 ee 00 00 00    	je     ffffffff800271d2 <ZydisReadDisplacement+0x134>
ffffffff800270e4:	83 f8 40             	cmp    $0x40,%eax
ffffffff800270e7:	0f 8f 21 01 00 00    	jg     ffffffff8002720e <ZydisReadDisplacement+0x170>
ffffffff800270ed:	83 f8 20             	cmp    $0x20,%eax
ffffffff800270f0:	0f 84 9f 00 00 00    	je     ffffffff80027195 <ZydisReadDisplacement+0xf7>
ffffffff800270f6:	83 f8 20             	cmp    $0x20,%eax
ffffffff800270f9:	0f 8f 0f 01 00 00    	jg     ffffffff8002720e <ZydisReadDisplacement+0x170>
ffffffff800270ff:	83 f8 08             	cmp    $0x8,%eax
ffffffff80027102:	74 0a                	je     ffffffff8002710e <ZydisReadDisplacement+0x70>
ffffffff80027104:	83 f8 10             	cmp    $0x10,%eax
ffffffff80027107:	74 49                	je     ffffffff80027152 <ZydisReadDisplacement+0xb4>
ffffffff80027109:	e9 00 01 00 00       	jmp    ffffffff8002720e <ZydisReadDisplacement+0x170>
ffffffff8002710e:	48 8d 45 e1          	lea    -0x1f(%rbp),%rax
ffffffff80027112:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
ffffffff80027116:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
ffffffff8002711a:	48 89 c2             	mov    %rax,%rdx
ffffffff8002711d:	48 89 cf             	mov    %rcx,%rdi
ffffffff80027120:	e8 05 f2 ff ff       	call   ffffffff8002632a <ZydisInputNext>
ffffffff80027125:	89 45 f0             	mov    %eax,-0x10(%rbp)
ffffffff80027128:	8b 45 f0             	mov    -0x10(%rbp),%eax
ffffffff8002712b:	85 c0                	test   %eax,%eax
ffffffff8002712d:	79 08                	jns    ffffffff80027137 <ZydisReadDisplacement+0x99>
ffffffff8002712f:	8b 45 f0             	mov    -0x10(%rbp),%eax
ffffffff80027132:	e9 df 00 00 00       	jmp    ffffffff80027216 <ZydisReadDisplacement+0x178>
ffffffff80027137:	48 8d 45 e1          	lea    -0x1f(%rbp),%rax
ffffffff8002713b:	0f b6 00             	movzbl (%rax),%eax
ffffffff8002713e:	48 0f be c0          	movsbq %al,%rax
ffffffff80027142:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
ffffffff80027146:	48 89 82 28 01 00 00 	mov    %rax,0x128(%rdx)
ffffffff8002714d:	e9 be 00 00 00       	jmp    ffffffff80027210 <ZydisReadDisplacement+0x172>
ffffffff80027152:	48 8d 45 e2          	lea    -0x1e(%rbp),%rax
ffffffff80027156:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
ffffffff8002715a:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
ffffffff8002715e:	b9 02 00 00 00       	mov    $0x2,%ecx
ffffffff80027163:	48 89 c2             	mov    %rax,%rdx
ffffffff80027166:	e8 48 f2 ff ff       	call   ffffffff800263b3 <ZydisInputNextBytes>
ffffffff8002716b:	89 45 f4             	mov    %eax,-0xc(%rbp)
ffffffff8002716e:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff80027171:	85 c0                	test   %eax,%eax
ffffffff80027173:	79 08                	jns    ffffffff8002717d <ZydisReadDisplacement+0xdf>
ffffffff80027175:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff80027178:	e9 99 00 00 00       	jmp    ffffffff80027216 <ZydisReadDisplacement+0x178>
ffffffff8002717d:	48 8d 45 e2          	lea    -0x1e(%rbp),%rax
ffffffff80027181:	0f b7 00             	movzwl (%rax),%eax
ffffffff80027184:	48 0f bf c0          	movswq %ax,%rax
ffffffff80027188:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
ffffffff8002718c:	48 89 82 28 01 00 00 	mov    %rax,0x128(%rdx)
ffffffff80027193:	eb 7b                	jmp    ffffffff80027210 <ZydisReadDisplacement+0x172>
ffffffff80027195:	48 8d 45 e4          	lea    -0x1c(%rbp),%rax
ffffffff80027199:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
ffffffff8002719d:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
ffffffff800271a1:	b9 04 00 00 00       	mov    $0x4,%ecx
ffffffff800271a6:	48 89 c2             	mov    %rax,%rdx
ffffffff800271a9:	e8 05 f2 ff ff       	call   ffffffff800263b3 <ZydisInputNextBytes>
ffffffff800271ae:	89 45 f8             	mov    %eax,-0x8(%rbp)
ffffffff800271b1:	8b 45 f8             	mov    -0x8(%rbp),%eax
ffffffff800271b4:	85 c0                	test   %eax,%eax
ffffffff800271b6:	79 05                	jns    ffffffff800271bd <ZydisReadDisplacement+0x11f>
ffffffff800271b8:	8b 45 f8             	mov    -0x8(%rbp),%eax
ffffffff800271bb:	eb 59                	jmp    ffffffff80027216 <ZydisReadDisplacement+0x178>
ffffffff800271bd:	48 8d 45 e4          	lea    -0x1c(%rbp),%rax
ffffffff800271c1:	8b 00                	mov    (%rax),%eax
ffffffff800271c3:	48 98                	cltq   
ffffffff800271c5:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
ffffffff800271c9:	48 89 82 28 01 00 00 	mov    %rax,0x128(%rdx)
ffffffff800271d0:	eb 3e                	jmp    ffffffff80027210 <ZydisReadDisplacement+0x172>
ffffffff800271d2:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
ffffffff800271d6:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
ffffffff800271da:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
ffffffff800271de:	b9 08 00 00 00       	mov    $0x8,%ecx
ffffffff800271e3:	48 89 c2             	mov    %rax,%rdx
ffffffff800271e6:	e8 c8 f1 ff ff       	call   ffffffff800263b3 <ZydisInputNextBytes>
ffffffff800271eb:	89 45 fc             	mov    %eax,-0x4(%rbp)
ffffffff800271ee:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff800271f1:	85 c0                	test   %eax,%eax
ffffffff800271f3:	79 05                	jns    ffffffff800271fa <ZydisReadDisplacement+0x15c>
ffffffff800271f5:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff800271f8:	eb 1c                	jmp    ffffffff80027216 <ZydisReadDisplacement+0x178>
ffffffff800271fa:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
ffffffff800271fe:	48 8b 10             	mov    (%rax),%rdx
ffffffff80027201:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff80027205:	48 89 90 28 01 00 00 	mov    %rdx,0x128(%rax)
ffffffff8002720c:	eb 02                	jmp    ffffffff80027210 <ZydisReadDisplacement+0x172>
ffffffff8002720e:	eb fe                	jmp    ffffffff8002720e <ZydisReadDisplacement+0x170>
ffffffff80027210:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff80027215:	90                   	nop
ffffffff80027216:	c9                   	leave  
ffffffff80027217:	c3                   	ret    

ffffffff80027218 <ZydisReadImmediate>:
ffffffff80027218:	f3 0f 1e fa          	endbr64 
ffffffff8002721c:	55                   	push   %rbp
ffffffff8002721d:	48 89 e5             	mov    %rsp,%rbp
ffffffff80027220:	48 83 ec 40          	sub    $0x40,%rsp
ffffffff80027224:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
ffffffff80027228:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
ffffffff8002722c:	89 c8                	mov    %ecx,%eax
ffffffff8002722e:	44 89 c6             	mov    %r8d,%esi
ffffffff80027231:	44 89 c9             	mov    %r9d,%ecx
ffffffff80027234:	88 55 cc             	mov    %dl,-0x34(%rbp)
ffffffff80027237:	88 45 c8             	mov    %al,-0x38(%rbp)
ffffffff8002723a:	89 f0                	mov    %esi,%eax
ffffffff8002723c:	88 45 c4             	mov    %al,-0x3c(%rbp)
ffffffff8002723f:	89 c8                	mov    %ecx,%eax
ffffffff80027241:	88 45 c0             	mov    %al,-0x40(%rbp)
ffffffff80027244:	80 7d cc 00          	cmpb   $0x0,-0x34(%rbp)
ffffffff80027248:	74 04                	je     ffffffff8002724e <ZydisReadImmediate+0x36>
ffffffff8002724a:	80 7d cc 01          	cmpb   $0x1,-0x34(%rbp)
ffffffff8002724e:	80 7d c4 00          	cmpb   $0x0,-0x3c(%rbp)
ffffffff80027252:	75 04                	jne    ffffffff80027258 <ZydisReadImmediate+0x40>
ffffffff80027254:	80 7d c0 00          	cmpb   $0x0,-0x40(%rbp)
ffffffff80027258:	0f b6 45 cc          	movzbl -0x34(%rbp),%eax
ffffffff8002725c:	48 63 d0             	movslq %eax,%rdx
ffffffff8002725f:	48 89 d0             	mov    %rdx,%rax
ffffffff80027262:	48 01 c0             	add    %rax,%rax
ffffffff80027265:	48 01 d0             	add    %rdx,%rax
ffffffff80027268:	48 c1 e0 03          	shl    $0x3,%rax
ffffffff8002726c:	0f b6 45 cc          	movzbl -0x34(%rbp),%eax
ffffffff80027270:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
ffffffff80027274:	48 63 d0             	movslq %eax,%rdx
ffffffff80027277:	48 89 d0             	mov    %rdx,%rax
ffffffff8002727a:	48 01 c0             	add    %rax,%rax
ffffffff8002727d:	48 01 d0             	add    %rdx,%rax
ffffffff80027280:	48 c1 e0 03          	shl    $0x3,%rax
ffffffff80027284:	48 01 c8             	add    %rcx,%rax
ffffffff80027287:	48 8d 90 48 01 00 00 	lea    0x148(%rax),%rdx
ffffffff8002728e:	0f b6 45 c8          	movzbl -0x38(%rbp),%eax
ffffffff80027292:	88 02                	mov    %al,(%rdx)
ffffffff80027294:	0f b6 45 cc          	movzbl -0x34(%rbp),%eax
ffffffff80027298:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
ffffffff8002729c:	0f b6 52 08          	movzbl 0x8(%rdx),%edx
ffffffff800272a0:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
ffffffff800272a4:	48 63 c8             	movslq %eax,%rcx
ffffffff800272a7:	48 89 c8             	mov    %rcx,%rax
ffffffff800272aa:	48 01 c0             	add    %rax,%rax
ffffffff800272ad:	48 01 c8             	add    %rcx,%rax
ffffffff800272b0:	48 c1 e0 03          	shl    $0x3,%rax
ffffffff800272b4:	48 01 f0             	add    %rsi,%rax
ffffffff800272b7:	48 05 49 01 00 00    	add    $0x149,%rax
ffffffff800272bd:	88 10                	mov    %dl,(%rax)
ffffffff800272bf:	0f b6 45 cc          	movzbl -0x34(%rbp),%eax
ffffffff800272c3:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
ffffffff800272c7:	48 63 d0             	movslq %eax,%rdx
ffffffff800272ca:	48 89 d0             	mov    %rdx,%rax
ffffffff800272cd:	48 01 c0             	add    %rax,%rax
ffffffff800272d0:	48 01 d0             	add    %rdx,%rax
ffffffff800272d3:	48 c1 e0 03          	shl    $0x3,%rax
ffffffff800272d7:	48 01 c8             	add    %rcx,%rax
ffffffff800272da:	48 8d 90 38 01 00 00 	lea    0x138(%rax),%rdx
ffffffff800272e1:	0f b6 45 c4          	movzbl -0x3c(%rbp),%eax
ffffffff800272e5:	88 02                	mov    %al,(%rdx)
ffffffff800272e7:	0f b6 45 cc          	movzbl -0x34(%rbp),%eax
ffffffff800272eb:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
ffffffff800272ef:	48 63 d0             	movslq %eax,%rdx
ffffffff800272f2:	48 89 d0             	mov    %rdx,%rax
ffffffff800272f5:	48 01 c0             	add    %rax,%rax
ffffffff800272f8:	48 01 d0             	add    %rdx,%rax
ffffffff800272fb:	48 c1 e0 03          	shl    $0x3,%rax
ffffffff800272ff:	48 01 c8             	add    %rcx,%rax
ffffffff80027302:	48 8d 90 39 01 00 00 	lea    0x139(%rax),%rdx
ffffffff80027309:	0f b6 45 c0          	movzbl -0x40(%rbp),%eax
ffffffff8002730d:	88 02                	mov    %al,(%rdx)
ffffffff8002730f:	0f b6 45 c8          	movzbl -0x38(%rbp),%eax
ffffffff80027313:	83 f8 40             	cmp    $0x40,%eax
ffffffff80027316:	0f 84 e4 01 00 00    	je     ffffffff80027500 <ZydisReadImmediate+0x2e8>
ffffffff8002731c:	83 f8 40             	cmp    $0x40,%eax
ffffffff8002731f:	0f 8f 60 02 00 00    	jg     ffffffff80027585 <ZydisReadImmediate+0x36d>
ffffffff80027325:	83 f8 20             	cmp    $0x20,%eax
ffffffff80027328:	0f 84 42 01 00 00    	je     ffffffff80027470 <ZydisReadImmediate+0x258>
ffffffff8002732e:	83 f8 20             	cmp    $0x20,%eax
ffffffff80027331:	0f 8f 4e 02 00 00    	jg     ffffffff80027585 <ZydisReadImmediate+0x36d>
ffffffff80027337:	83 f8 08             	cmp    $0x8,%eax
ffffffff8002733a:	74 0e                	je     ffffffff8002734a <ZydisReadImmediate+0x132>
ffffffff8002733c:	83 f8 10             	cmp    $0x10,%eax
ffffffff8002733f:	0f 84 97 00 00 00    	je     ffffffff800273dc <ZydisReadImmediate+0x1c4>
ffffffff80027345:	e9 3b 02 00 00       	jmp    ffffffff80027585 <ZydisReadImmediate+0x36d>
ffffffff8002734a:	48 8d 45 e1          	lea    -0x1f(%rbp),%rax
ffffffff8002734e:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
ffffffff80027352:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
ffffffff80027356:	48 89 c2             	mov    %rax,%rdx
ffffffff80027359:	48 89 cf             	mov    %rcx,%rdi
ffffffff8002735c:	e8 c9 ef ff ff       	call   ffffffff8002632a <ZydisInputNext>
ffffffff80027361:	89 45 f0             	mov    %eax,-0x10(%rbp)
ffffffff80027364:	8b 45 f0             	mov    -0x10(%rbp),%eax
ffffffff80027367:	85 c0                	test   %eax,%eax
ffffffff80027369:	79 08                	jns    ffffffff80027373 <ZydisReadImmediate+0x15b>
ffffffff8002736b:	8b 45 f0             	mov    -0x10(%rbp),%eax
ffffffff8002736e:	e9 1a 02 00 00       	jmp    ffffffff8002758d <ZydisReadImmediate+0x375>
ffffffff80027373:	80 7d c4 00          	cmpb   $0x0,-0x3c(%rbp)
ffffffff80027377:	74 33                	je     ffffffff800273ac <ZydisReadImmediate+0x194>
ffffffff80027379:	0f b6 45 e1          	movzbl -0x1f(%rbp),%eax
ffffffff8002737d:	89 c2                	mov    %eax,%edx
ffffffff8002737f:	0f b6 45 cc          	movzbl -0x34(%rbp),%eax
ffffffff80027383:	48 0f be d2          	movsbq %dl,%rdx
ffffffff80027387:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
ffffffff8002738b:	48 63 c8             	movslq %eax,%rcx
ffffffff8002738e:	48 89 c8             	mov    %rcx,%rax
ffffffff80027391:	48 01 c0             	add    %rax,%rax
ffffffff80027394:	48 01 c8             	add    %rcx,%rax
ffffffff80027397:	48 c1 e0 03          	shl    $0x3,%rax
ffffffff8002739b:	48 01 f0             	add    %rsi,%rax
ffffffff8002739e:	48 05 40 01 00 00    	add    $0x140,%rax
ffffffff800273a4:	48 89 10             	mov    %rdx,(%rax)
ffffffff800273a7:	e9 db 01 00 00       	jmp    ffffffff80027587 <ZydisReadImmediate+0x36f>
ffffffff800273ac:	0f b6 45 e1          	movzbl -0x1f(%rbp),%eax
ffffffff800273b0:	0f b6 4d cc          	movzbl -0x34(%rbp),%ecx
ffffffff800273b4:	0f b6 d0             	movzbl %al,%edx
ffffffff800273b7:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
ffffffff800273bb:	48 63 c9             	movslq %ecx,%rcx
ffffffff800273be:	48 89 c8             	mov    %rcx,%rax
ffffffff800273c1:	48 01 c0             	add    %rax,%rax
ffffffff800273c4:	48 01 c8             	add    %rcx,%rax
ffffffff800273c7:	48 c1 e0 03          	shl    $0x3,%rax
ffffffff800273cb:	48 01 f0             	add    %rsi,%rax
ffffffff800273ce:	48 05 40 01 00 00    	add    $0x140,%rax
ffffffff800273d4:	48 89 10             	mov    %rdx,(%rax)
ffffffff800273d7:	e9 ab 01 00 00       	jmp    ffffffff80027587 <ZydisReadImmediate+0x36f>
ffffffff800273dc:	48 8d 45 e2          	lea    -0x1e(%rbp),%rax
ffffffff800273e0:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
ffffffff800273e4:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
ffffffff800273e8:	b9 02 00 00 00       	mov    $0x2,%ecx
ffffffff800273ed:	48 89 c2             	mov    %rax,%rdx
ffffffff800273f0:	e8 be ef ff ff       	call   ffffffff800263b3 <ZydisInputNextBytes>
ffffffff800273f5:	89 45 f4             	mov    %eax,-0xc(%rbp)
ffffffff800273f8:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff800273fb:	85 c0                	test   %eax,%eax
ffffffff800273fd:	79 08                	jns    ffffffff80027407 <ZydisReadImmediate+0x1ef>
ffffffff800273ff:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff80027402:	e9 86 01 00 00       	jmp    ffffffff8002758d <ZydisReadImmediate+0x375>
ffffffff80027407:	80 7d c4 00          	cmpb   $0x0,-0x3c(%rbp)
ffffffff8002740b:	74 33                	je     ffffffff80027440 <ZydisReadImmediate+0x228>
ffffffff8002740d:	0f b7 45 e2          	movzwl -0x1e(%rbp),%eax
ffffffff80027411:	89 c2                	mov    %eax,%edx
ffffffff80027413:	0f b6 45 cc          	movzbl -0x34(%rbp),%eax
ffffffff80027417:	48 0f bf d2          	movswq %dx,%rdx
ffffffff8002741b:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
ffffffff8002741f:	48 63 c8             	movslq %eax,%rcx
ffffffff80027422:	48 89 c8             	mov    %rcx,%rax
ffffffff80027425:	48 01 c0             	add    %rax,%rax
ffffffff80027428:	48 01 c8             	add    %rcx,%rax
ffffffff8002742b:	48 c1 e0 03          	shl    $0x3,%rax
ffffffff8002742f:	48 01 f0             	add    %rsi,%rax
ffffffff80027432:	48 05 40 01 00 00    	add    $0x140,%rax
ffffffff80027438:	48 89 10             	mov    %rdx,(%rax)
ffffffff8002743b:	e9 47 01 00 00       	jmp    ffffffff80027587 <ZydisReadImmediate+0x36f>
ffffffff80027440:	0f b7 55 e2          	movzwl -0x1e(%rbp),%edx
ffffffff80027444:	0f b6 45 cc          	movzbl -0x34(%rbp),%eax
ffffffff80027448:	0f b7 d2             	movzwl %dx,%edx
ffffffff8002744b:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
ffffffff8002744f:	48 63 c8             	movslq %eax,%rcx
ffffffff80027452:	48 89 c8             	mov    %rcx,%rax
ffffffff80027455:	48 01 c0             	add    %rax,%rax
ffffffff80027458:	48 01 c8             	add    %rcx,%rax
ffffffff8002745b:	48 c1 e0 03          	shl    $0x3,%rax
ffffffff8002745f:	48 01 f0             	add    %rsi,%rax
ffffffff80027462:	48 05 40 01 00 00    	add    $0x140,%rax
ffffffff80027468:	48 89 10             	mov    %rdx,(%rax)
ffffffff8002746b:	e9 17 01 00 00       	jmp    ffffffff80027587 <ZydisReadImmediate+0x36f>
ffffffff80027470:	48 8d 45 e4          	lea    -0x1c(%rbp),%rax
ffffffff80027474:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
ffffffff80027478:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
ffffffff8002747c:	b9 04 00 00 00       	mov    $0x4,%ecx
ffffffff80027481:	48 89 c2             	mov    %rax,%rdx
ffffffff80027484:	e8 2a ef ff ff       	call   ffffffff800263b3 <ZydisInputNextBytes>
ffffffff80027489:	89 45 f8             	mov    %eax,-0x8(%rbp)
ffffffff8002748c:	8b 45 f8             	mov    -0x8(%rbp),%eax
ffffffff8002748f:	85 c0                	test   %eax,%eax
ffffffff80027491:	79 08                	jns    ffffffff8002749b <ZydisReadImmediate+0x283>
ffffffff80027493:	8b 45 f8             	mov    -0x8(%rbp),%eax
ffffffff80027496:	e9 f2 00 00 00       	jmp    ffffffff8002758d <ZydisReadImmediate+0x375>
ffffffff8002749b:	80 7d c4 00          	cmpb   $0x0,-0x3c(%rbp)
ffffffff8002749f:	74 31                	je     ffffffff800274d2 <ZydisReadImmediate+0x2ba>
ffffffff800274a1:	8b 45 e4             	mov    -0x1c(%rbp),%eax
ffffffff800274a4:	89 c2                	mov    %eax,%edx
ffffffff800274a6:	0f b6 45 cc          	movzbl -0x34(%rbp),%eax
ffffffff800274aa:	48 63 d2             	movslq %edx,%rdx
ffffffff800274ad:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
ffffffff800274b1:	48 63 c8             	movslq %eax,%rcx
ffffffff800274b4:	48 89 c8             	mov    %rcx,%rax
ffffffff800274b7:	48 01 c0             	add    %rax,%rax
ffffffff800274ba:	48 01 c8             	add    %rcx,%rax
ffffffff800274bd:	48 c1 e0 03          	shl    $0x3,%rax
ffffffff800274c1:	48 01 f0             	add    %rsi,%rax
ffffffff800274c4:	48 05 40 01 00 00    	add    $0x140,%rax
ffffffff800274ca:	48 89 10             	mov    %rdx,(%rax)
ffffffff800274cd:	e9 b5 00 00 00       	jmp    ffffffff80027587 <ZydisReadImmediate+0x36f>
ffffffff800274d2:	8b 55 e4             	mov    -0x1c(%rbp),%edx
ffffffff800274d5:	0f b6 45 cc          	movzbl -0x34(%rbp),%eax
ffffffff800274d9:	89 d6                	mov    %edx,%esi
ffffffff800274db:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
ffffffff800274df:	48 63 d0             	movslq %eax,%rdx
ffffffff800274e2:	48 89 d0             	mov    %rdx,%rax
ffffffff800274e5:	48 01 c0             	add    %rax,%rax
ffffffff800274e8:	48 01 d0             	add    %rdx,%rax
ffffffff800274eb:	48 c1 e0 03          	shl    $0x3,%rax
ffffffff800274ef:	48 01 c8             	add    %rcx,%rax
ffffffff800274f2:	48 05 40 01 00 00    	add    $0x140,%rax
ffffffff800274f8:	48 89 30             	mov    %rsi,(%rax)
ffffffff800274fb:	e9 87 00 00 00       	jmp    ffffffff80027587 <ZydisReadImmediate+0x36f>
ffffffff80027500:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
ffffffff80027504:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
ffffffff80027508:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
ffffffff8002750c:	b9 08 00 00 00       	mov    $0x8,%ecx
ffffffff80027511:	48 89 c2             	mov    %rax,%rdx
ffffffff80027514:	e8 9a ee ff ff       	call   ffffffff800263b3 <ZydisInputNextBytes>
ffffffff80027519:	89 45 fc             	mov    %eax,-0x4(%rbp)
ffffffff8002751c:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8002751f:	85 c0                	test   %eax,%eax
ffffffff80027521:	79 05                	jns    ffffffff80027528 <ZydisReadImmediate+0x310>
ffffffff80027523:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff80027526:	eb 65                	jmp    ffffffff8002758d <ZydisReadImmediate+0x375>
ffffffff80027528:	80 7d c4 00          	cmpb   $0x0,-0x3c(%rbp)
ffffffff8002752c:	74 2d                	je     ffffffff8002755b <ZydisReadImmediate+0x343>
ffffffff8002752e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff80027532:	0f b6 45 cc          	movzbl -0x34(%rbp),%eax
ffffffff80027536:	48 89 d6             	mov    %rdx,%rsi
ffffffff80027539:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
ffffffff8002753d:	48 63 d0             	movslq %eax,%rdx
ffffffff80027540:	48 89 d0             	mov    %rdx,%rax
ffffffff80027543:	48 01 c0             	add    %rax,%rax
ffffffff80027546:	48 01 d0             	add    %rdx,%rax
ffffffff80027549:	48 c1 e0 03          	shl    $0x3,%rax
ffffffff8002754d:	48 01 c8             	add    %rcx,%rax
ffffffff80027550:	48 05 40 01 00 00    	add    $0x140,%rax
ffffffff80027556:	48 89 30             	mov    %rsi,(%rax)
ffffffff80027559:	eb 2c                	jmp    ffffffff80027587 <ZydisReadImmediate+0x36f>
ffffffff8002755b:	0f b6 45 cc          	movzbl -0x34(%rbp),%eax
ffffffff8002755f:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
ffffffff80027563:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
ffffffff80027567:	48 63 d0             	movslq %eax,%rdx
ffffffff8002756a:	48 89 d0             	mov    %rdx,%rax
ffffffff8002756d:	48 01 c0             	add    %rax,%rax
ffffffff80027570:	48 01 d0             	add    %rdx,%rax
ffffffff80027573:	48 c1 e0 03          	shl    $0x3,%rax
ffffffff80027577:	48 01 f0             	add    %rsi,%rax
ffffffff8002757a:	48 05 40 01 00 00    	add    $0x140,%rax
ffffffff80027580:	48 89 08             	mov    %rcx,(%rax)
ffffffff80027583:	eb 02                	jmp    ffffffff80027587 <ZydisReadImmediate+0x36f>
ffffffff80027585:	eb fe                	jmp    ffffffff80027585 <ZydisReadImmediate+0x36d>
ffffffff80027587:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff8002758c:	90                   	nop
ffffffff8002758d:	c9                   	leave  
ffffffff8002758e:	c3                   	ret    

ffffffff8002758f <ZydisCalcRegisterId>:
ffffffff8002758f:	f3 0f 1e fa          	endbr64 
ffffffff80027593:	55                   	push   %rbp
ffffffff80027594:	48 89 e5             	mov    %rsp,%rbp
ffffffff80027597:	48 83 ec 28          	sub    $0x28,%rsp
ffffffff8002759b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff8002759f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
ffffffff800275a3:	89 55 dc             	mov    %edx,-0x24(%rbp)
ffffffff800275a6:	89 4d d8             	mov    %ecx,-0x28(%rbp)
ffffffff800275a9:	83 7d dc 09          	cmpl   $0x9,-0x24(%rbp)
ffffffff800275ad:	0f 87 38 01 00 00    	ja     ffffffff800276eb <ZydisCalcRegisterId+0x15c>
ffffffff800275b3:	8b 45 dc             	mov    -0x24(%rbp),%eax
ffffffff800275b6:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
ffffffff800275bd:	00 
ffffffff800275be:	48 8d 05 53 80 01 00 	lea    0x18053(%rip),%rax        # ffffffff8003f618 <GPR8_MAPPING.0+0x28>
ffffffff800275c5:	8b 04 02             	mov    (%rdx,%rax,1),%eax
ffffffff800275c8:	48 98                	cltq   
ffffffff800275ca:	48 8d 15 47 80 01 00 	lea    0x18047(%rip),%rdx        # ffffffff8003f618 <GPR8_MAPPING.0+0x28>
ffffffff800275d1:	48 01 d0             	add    %rdx,%rax
ffffffff800275d4:	3e ff e0             	notrack jmp *%rax
ffffffff800275d7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800275db:	0f b6 40 15          	movzbl 0x15(%rax),%eax
ffffffff800275df:	e9 09 01 00 00       	jmp    ffffffff800276ed <ZydisCalcRegisterId+0x15e>
ffffffff800275e4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800275e8:	0f b6 40 17          	movzbl 0x17(%rax),%eax
ffffffff800275ec:	e9 fc 00 00 00       	jmp    ffffffff800276ed <ZydisCalcRegisterId+0x15e>
ffffffff800275f1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800275f5:	0f b6 40 16          	movzbl 0x16(%rax),%eax
ffffffff800275f9:	e9 ef 00 00 00       	jmp    ffffffff800276ed <ZydisCalcRegisterId+0x15e>
ffffffff800275fe:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80027602:	0f b6 40 18          	movzbl 0x18(%rax),%eax
ffffffff80027606:	e9 e2 00 00 00       	jmp    ffffffff800276ed <ZydisCalcRegisterId+0x15e>
ffffffff8002760b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002760f:	0f b6 40 19          	movzbl 0x19(%rax),%eax
ffffffff80027613:	e9 d5 00 00 00       	jmp    ffffffff800276ed <ZydisCalcRegisterId+0x15e>
ffffffff80027618:	83 7d d8 01          	cmpl   $0x1,-0x28(%rbp)
ffffffff8002761c:	74 10                	je     ffffffff8002762e <ZydisCalcRegisterId+0x9f>
ffffffff8002761e:	83 7d d8 02          	cmpl   $0x2,-0x28(%rbp)
ffffffff80027622:	74 0a                	je     ffffffff8002762e <ZydisCalcRegisterId+0x9f>
ffffffff80027624:	83 7d d8 03          	cmpl   $0x3,-0x28(%rbp)
ffffffff80027628:	74 04                	je     ffffffff8002762e <ZydisCalcRegisterId+0x9f>
ffffffff8002762a:	83 7d d8 04          	cmpl   $0x4,-0x28(%rbp)
ffffffff8002762e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80027632:	0f b6 40 14          	movzbl 0x14(%rax),%eax
ffffffff80027636:	83 e0 0f             	and    $0xf,%eax
ffffffff80027639:	88 45 ff             	mov    %al,-0x1(%rbp)
ffffffff8002763c:	80 7d ff 07          	cmpb   $0x7,-0x1(%rbp)
ffffffff80027640:	76 04                	jbe    ffffffff80027646 <ZydisCalcRegisterId+0xb7>
ffffffff80027642:	80 6d ff 08          	subb   $0x8,-0x1(%rbp)
ffffffff80027646:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8002764a:	8b 00                	mov    (%rax),%eax
ffffffff8002764c:	85 c0                	test   %eax,%eax
ffffffff8002764e:	74 09                	je     ffffffff80027659 <ZydisCalcRegisterId+0xca>
ffffffff80027650:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
ffffffff80027654:	e9 94 00 00 00       	jmp    ffffffff800276ed <ZydisCalcRegisterId+0x15e>
ffffffff80027659:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002765d:	0f b6 40 0d          	movzbl 0xd(%rax),%eax
ffffffff80027661:	0f b6 c0             	movzbl %al,%eax
ffffffff80027664:	c1 e0 03             	shl    $0x3,%eax
ffffffff80027667:	89 c2                	mov    %eax,%edx
ffffffff80027669:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
ffffffff8002766d:	09 d0                	or     %edx,%eax
ffffffff8002766f:	eb 7c                	jmp    ffffffff800276ed <ZydisCalcRegisterId+0x15e>
ffffffff80027671:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80027675:	8b 00                	mov    (%rax),%eax
ffffffff80027677:	85 c0                	test   %eax,%eax
ffffffff80027679:	74 14                	je     ffffffff8002768f <ZydisCalcRegisterId+0x100>
ffffffff8002767b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8002767f:	48 8b 80 40 01 00 00 	mov    0x140(%rax),%rax
ffffffff80027686:	48 c1 e8 04          	shr    $0x4,%rax
ffffffff8002768a:	83 e0 07             	and    $0x7,%eax
ffffffff8002768d:	eb 5e                	jmp    ffffffff800276ed <ZydisCalcRegisterId+0x15e>
ffffffff8002768f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80027693:	48 8b 80 40 01 00 00 	mov    0x140(%rax),%rax
ffffffff8002769a:	48 c1 e8 04          	shr    $0x4,%rax
ffffffff8002769e:	83 e0 0f             	and    $0xf,%eax
ffffffff800276a1:	88 45 fe             	mov    %al,-0x2(%rbp)
ffffffff800276a4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff800276a8:	8b 40 0c             	mov    0xc(%rax),%eax
ffffffff800276ab:	83 f8 04             	cmp    $0x4,%eax
ffffffff800276ae:	74 0c                	je     ffffffff800276bc <ZydisCalcRegisterId+0x12d>
ffffffff800276b0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff800276b4:	8b 40 0c             	mov    0xc(%rax),%eax
ffffffff800276b7:	83 f8 05             	cmp    $0x5,%eax
ffffffff800276ba:	75 1f                	jne    ffffffff800276db <ZydisCalcRegisterId+0x14c>
ffffffff800276bc:	8b 45 d8             	mov    -0x28(%rbp),%eax
ffffffff800276bf:	83 e8 07             	sub    $0x7,%eax
ffffffff800276c2:	83 f8 02             	cmp    $0x2,%eax
ffffffff800276c5:	77 13                	ja     ffffffff800276da <ZydisCalcRegisterId+0x14b>
ffffffff800276c7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff800276cb:	48 8b 80 40 01 00 00 	mov    0x140(%rax),%rax
ffffffff800276d2:	01 c0                	add    %eax,%eax
ffffffff800276d4:	83 e0 10             	and    $0x10,%eax
ffffffff800276d7:	08 45 fe             	or     %al,-0x2(%rbp)
ffffffff800276da:	90                   	nop
ffffffff800276db:	0f b6 45 fe          	movzbl -0x2(%rbp),%eax
ffffffff800276df:	eb 0c                	jmp    ffffffff800276ed <ZydisCalcRegisterId+0x15e>
ffffffff800276e1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800276e5:	0f b6 40 13          	movzbl 0x13(%rax),%eax
ffffffff800276e9:	eb 02                	jmp    ffffffff800276ed <ZydisCalcRegisterId+0x15e>
ffffffff800276eb:	eb fe                	jmp    ffffffff800276eb <ZydisCalcRegisterId+0x15c>
ffffffff800276ed:	c9                   	leave  
ffffffff800276ee:	c3                   	ret    

ffffffff800276ef <ZydisSetOperandSizeAndElementInfo>:
ffffffff800276ef:	f3 0f 1e fa          	endbr64 
ffffffff800276f3:	55                   	push   %rbp
ffffffff800276f4:	48 89 e5             	mov    %rsp,%rbp
ffffffff800276f7:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff800276fb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff800276ff:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff80027703:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
ffffffff80027707:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
ffffffff8002770b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002770f:	8b 40 04             	mov    0x4(%rax),%eax
ffffffff80027712:	83 f8 04             	cmp    $0x4,%eax
ffffffff80027715:	0f 84 17 05 00 00    	je     ffffffff80027c32 <ZydisSetOperandSizeAndElementInfo+0x543>
ffffffff8002771b:	83 f8 04             	cmp    $0x4,%eax
ffffffff8002771e:	0f 87 35 05 00 00    	ja     ffffffff80027c59 <ZydisSetOperandSizeAndElementInfo+0x56a>
ffffffff80027724:	83 f8 03             	cmp    $0x3,%eax
ffffffff80027727:	0f 84 c1 04 00 00    	je     ffffffff80027bee <ZydisSetOperandSizeAndElementInfo+0x4ff>
ffffffff8002772d:	83 f8 03             	cmp    $0x3,%eax
ffffffff80027730:	0f 87 23 05 00 00    	ja     ffffffff80027c59 <ZydisSetOperandSizeAndElementInfo+0x56a>
ffffffff80027736:	83 f8 01             	cmp    $0x1,%eax
ffffffff80027739:	74 0e                	je     ffffffff80027749 <ZydisSetOperandSizeAndElementInfo+0x5a>
ffffffff8002773b:	83 f8 02             	cmp    $0x2,%eax
ffffffff8002773e:	0f 84 85 00 00 00    	je     ffffffff800277c9 <ZydisSetOperandSizeAndElementInfo+0xda>
ffffffff80027744:	e9 10 05 00 00       	jmp    ffffffff80027c59 <ZydisSetOperandSizeAndElementInfo+0x56a>
ffffffff80027749:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8002774d:	0f b6 40 08          	movzbl 0x8(%rax),%eax
ffffffff80027751:	0f b6 c0             	movzbl %al,%eax
ffffffff80027754:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff80027758:	48 98                	cltq   
ffffffff8002775a:	0f b7 44 42 02       	movzwl 0x2(%rdx,%rax,2),%eax
ffffffff8002775f:	66 85 c0             	test   %ax,%ax
ffffffff80027762:	74 27                	je     ffffffff8002778b <ZydisSetOperandSizeAndElementInfo+0x9c>
ffffffff80027764:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80027768:	0f b6 40 08          	movzbl 0x8(%rax),%eax
ffffffff8002776c:	0f b6 c0             	movzbl %al,%eax
ffffffff8002776f:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff80027773:	48 98                	cltq   
ffffffff80027775:	0f b7 44 42 02       	movzwl 0x2(%rdx,%rax,2),%eax
ffffffff8002777a:	8d 14 c5 00 00 00 00 	lea    0x0(,%rax,8),%edx
ffffffff80027781:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80027785:	66 89 50 14          	mov    %dx,0x14(%rax)
ffffffff80027789:	eb 1e                	jmp    ffffffff800277a9 <ZydisSetOperandSizeAndElementInfo+0xba>
ffffffff8002778b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002778f:	8b 50 24             	mov    0x24(%rax),%edx
ffffffff80027792:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80027796:	8b 00                	mov    (%rax),%eax
ffffffff80027798:	89 d6                	mov    %edx,%esi
ffffffff8002779a:	89 c7                	mov    %eax,%edi
ffffffff8002779c:	e8 3d e0 ff ff       	call   ffffffff800257de <ZydisRegisterGetWidth>
ffffffff800277a1:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff800277a5:	66 89 42 14          	mov    %ax,0x14(%rdx)
ffffffff800277a9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800277ad:	c7 40 18 03 00 00 00 	movl   $0x3,0x18(%rax)
ffffffff800277b4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800277b8:	0f b7 50 14          	movzwl 0x14(%rax),%edx
ffffffff800277bc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800277c0:	66 89 50 1c          	mov    %dx,0x1c(%rax)
ffffffff800277c4:	e9 92 04 00 00       	jmp    ffffffff80027c5b <ZydisSetOperandSizeAndElementInfo+0x56c>
ffffffff800277c9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff800277cd:	8b 40 0c             	mov    0xc(%rax),%eax
ffffffff800277d0:	83 f8 05             	cmp    $0x5,%eax
ffffffff800277d3:	0f 84 b6 01 00 00    	je     ffffffff8002798f <ZydisSetOperandSizeAndElementInfo+0x2a0>
ffffffff800277d9:	83 f8 05             	cmp    $0x5,%eax
ffffffff800277dc:	0f 87 08 04 00 00    	ja     ffffffff80027bea <ZydisSetOperandSizeAndElementInfo+0x4fb>
ffffffff800277e2:	83 f8 03             	cmp    $0x3,%eax
ffffffff800277e5:	76 0e                	jbe    ffffffff800277f5 <ZydisSetOperandSizeAndElementInfo+0x106>
ffffffff800277e7:	83 f8 04             	cmp    $0x4,%eax
ffffffff800277ea:	0f 84 83 00 00 00    	je     ffffffff80027873 <ZydisSetOperandSizeAndElementInfo+0x184>
ffffffff800277f0:	e9 f5 03 00 00       	jmp    ffffffff80027bea <ZydisSetOperandSizeAndElementInfo+0x4fb>
ffffffff800277f5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800277f9:	8b 40 28             	mov    0x28(%rax),%eax
ffffffff800277fc:	83 f8 02             	cmp    $0x2,%eax
ffffffff800277ff:	75 23                	jne    ffffffff80027824 <ZydisSetOperandSizeAndElementInfo+0x135>
ffffffff80027801:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80027805:	0f b6 40 17          	movzbl 0x17(%rax),%eax
ffffffff80027809:	0f b6 c0             	movzbl %al,%eax
ffffffff8002780c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff80027810:	66 89 42 14          	mov    %ax,0x14(%rdx)
ffffffff80027814:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80027818:	c7 40 18 03 00 00 00 	movl   $0x3,0x18(%rax)
ffffffff8002781f:	e9 c8 03 00 00       	jmp    ffffffff80027bec <ZydisSetOperandSizeAndElementInfo+0x4fd>
ffffffff80027824:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80027828:	0f b6 40 08          	movzbl 0x8(%rax),%eax
ffffffff8002782c:	0f b6 c0             	movzbl %al,%eax
ffffffff8002782f:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff80027833:	48 98                	cltq   
ffffffff80027835:	0f b7 44 42 02       	movzwl 0x2(%rdx,%rax,2),%eax
ffffffff8002783a:	66 85 c0             	test   %ax,%ax
ffffffff8002783d:	75 0a                	jne    ffffffff80027849 <ZydisSetOperandSizeAndElementInfo+0x15a>
ffffffff8002783f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80027843:	8b 40 5c             	mov    0x5c(%rax),%eax
ffffffff80027846:	83 f8 04             	cmp    $0x4,%eax
ffffffff80027849:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8002784d:	0f b6 40 08          	movzbl 0x8(%rax),%eax
ffffffff80027851:	0f b6 c0             	movzbl %al,%eax
ffffffff80027854:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff80027858:	48 98                	cltq   
ffffffff8002785a:	0f b7 44 42 02       	movzwl 0x2(%rdx,%rax,2),%eax
ffffffff8002785f:	8d 14 c5 00 00 00 00 	lea    0x0(,%rax,8),%edx
ffffffff80027866:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002786a:	66 89 50 14          	mov    %dx,0x14(%rax)
ffffffff8002786e:	e9 79 03 00 00       	jmp    ffffffff80027bec <ZydisSetOperandSizeAndElementInfo+0x4fd>
ffffffff80027873:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80027877:	0f b6 40 08          	movzbl 0x8(%rax),%eax
ffffffff8002787b:	0f b6 c0             	movzbl %al,%eax
ffffffff8002787e:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff80027882:	48 98                	cltq   
ffffffff80027884:	0f b7 44 42 02       	movzwl 0x2(%rdx,%rax,2),%eax
ffffffff80027889:	66 85 c0             	test   %ax,%ax
ffffffff8002788c:	74 2a                	je     ffffffff800278b8 <ZydisSetOperandSizeAndElementInfo+0x1c9>
ffffffff8002788e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80027892:	0f b6 40 08          	movzbl 0x8(%rax),%eax
ffffffff80027896:	0f b6 c0             	movzbl %al,%eax
ffffffff80027899:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff8002789d:	48 98                	cltq   
ffffffff8002789f:	0f b7 44 42 02       	movzwl 0x2(%rdx,%rax,2),%eax
ffffffff800278a4:	8d 14 c5 00 00 00 00 	lea    0x0(,%rax,8),%edx
ffffffff800278ab:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800278af:	66 89 50 14          	mov    %dx,0x14(%rax)
ffffffff800278b3:	e9 34 03 00 00       	jmp    ffffffff80027bec <ZydisSetOperandSizeAndElementInfo+0x4fd>
ffffffff800278b8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff800278bc:	0f b6 40 1a          	movzbl 0x1a(%rax),%eax
ffffffff800278c0:	0f b6 c0             	movzbl %al,%eax
ffffffff800278c3:	83 f8 10             	cmp    $0x10,%eax
ffffffff800278c6:	0f 84 84 00 00 00    	je     ffffffff80027950 <ZydisSetOperandSizeAndElementInfo+0x261>
ffffffff800278cc:	83 f8 10             	cmp    $0x10,%eax
ffffffff800278cf:	0f 8f b3 00 00 00    	jg     ffffffff80027988 <ZydisSetOperandSizeAndElementInfo+0x299>
ffffffff800278d5:	83 f8 01             	cmp    $0x1,%eax
ffffffff800278d8:	74 0a                	je     ffffffff800278e4 <ZydisSetOperandSizeAndElementInfo+0x1f5>
ffffffff800278da:	83 f8 02             	cmp    $0x2,%eax
ffffffff800278dd:	74 3a                	je     ffffffff80027919 <ZydisSetOperandSizeAndElementInfo+0x22a>
ffffffff800278df:	e9 a4 00 00 00       	jmp    ffffffff80027988 <ZydisSetOperandSizeAndElementInfo+0x299>
ffffffff800278e4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff800278e8:	8b 40 48             	mov    0x48(%rax),%eax
ffffffff800278eb:	85 c0                	test   %eax,%eax
ffffffff800278ed:	74 18                	je     ffffffff80027907 <ZydisSetOperandSizeAndElementInfo+0x218>
ffffffff800278ef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff800278f3:	0f b6 40 1b          	movzbl 0x1b(%rax),%eax
ffffffff800278f7:	0f b6 c0             	movzbl %al,%eax
ffffffff800278fa:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff800278fe:	66 89 42 14          	mov    %ax,0x14(%rdx)
ffffffff80027902:	e9 83 00 00 00       	jmp    ffffffff8002798a <ZydisSetOperandSizeAndElementInfo+0x29b>
ffffffff80027907:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8002790b:	0f b7 50 38          	movzwl 0x38(%rax),%edx
ffffffff8002790f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80027913:	66 89 50 14          	mov    %dx,0x14(%rax)
ffffffff80027917:	eb 71                	jmp    ffffffff8002798a <ZydisSetOperandSizeAndElementInfo+0x29b>
ffffffff80027919:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8002791d:	8b 40 48             	mov    0x48(%rax),%eax
ffffffff80027920:	85 c0                	test   %eax,%eax
ffffffff80027922:	74 15                	je     ffffffff80027939 <ZydisSetOperandSizeAndElementInfo+0x24a>
ffffffff80027924:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80027928:	0f b6 40 1b          	movzbl 0x1b(%rax),%eax
ffffffff8002792c:	0f b6 c0             	movzbl %al,%eax
ffffffff8002792f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff80027933:	66 89 42 14          	mov    %ax,0x14(%rdx)
ffffffff80027937:	eb 51                	jmp    ffffffff8002798a <ZydisSetOperandSizeAndElementInfo+0x29b>
ffffffff80027939:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8002793d:	0f b7 40 38          	movzwl 0x38(%rax),%eax
ffffffff80027941:	66 d1 e8             	shr    %ax
ffffffff80027944:	89 c2                	mov    %eax,%edx
ffffffff80027946:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002794a:	66 89 50 14          	mov    %dx,0x14(%rax)
ffffffff8002794e:	eb 3a                	jmp    ffffffff8002798a <ZydisSetOperandSizeAndElementInfo+0x29b>
ffffffff80027950:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80027954:	8b 40 48             	mov    0x48(%rax),%eax
ffffffff80027957:	85 c0                	test   %eax,%eax
ffffffff80027959:	74 15                	je     ffffffff80027970 <ZydisSetOperandSizeAndElementInfo+0x281>
ffffffff8002795b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8002795f:	0f b6 40 1b          	movzbl 0x1b(%rax),%eax
ffffffff80027963:	0f b6 c0             	movzbl %al,%eax
ffffffff80027966:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff8002796a:	66 89 42 14          	mov    %ax,0x14(%rdx)
ffffffff8002796e:	eb 1a                	jmp    ffffffff8002798a <ZydisSetOperandSizeAndElementInfo+0x29b>
ffffffff80027970:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80027974:	0f b7 40 38          	movzwl 0x38(%rax),%eax
ffffffff80027978:	66 c1 e8 02          	shr    $0x2,%ax
ffffffff8002797c:	89 c2                	mov    %eax,%edx
ffffffff8002797e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80027982:	66 89 50 14          	mov    %dx,0x14(%rax)
ffffffff80027986:	eb 02                	jmp    ffffffff8002798a <ZydisSetOperandSizeAndElementInfo+0x29b>
ffffffff80027988:	eb fe                	jmp    ffffffff80027988 <ZydisSetOperandSizeAndElementInfo+0x299>
ffffffff8002798a:	e9 5d 02 00 00       	jmp    ffffffff80027bec <ZydisSetOperandSizeAndElementInfo+0x4fd>
ffffffff8002798f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80027993:	0f b6 40 08          	movzbl 0x8(%rax),%eax
ffffffff80027997:	0f b6 c0             	movzbl %al,%eax
ffffffff8002799a:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff8002799e:	48 98                	cltq   
ffffffff800279a0:	0f b7 44 42 02       	movzwl 0x2(%rdx,%rax,2),%eax
ffffffff800279a5:	66 85 c0             	test   %ax,%ax
ffffffff800279a8:	74 2a                	je     ffffffff800279d4 <ZydisSetOperandSizeAndElementInfo+0x2e5>
ffffffff800279aa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff800279ae:	0f b6 40 08          	movzbl 0x8(%rax),%eax
ffffffff800279b2:	0f b6 c0             	movzbl %al,%eax
ffffffff800279b5:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff800279b9:	48 98                	cltq   
ffffffff800279bb:	0f b7 44 42 02       	movzwl 0x2(%rdx,%rax,2),%eax
ffffffff800279c0:	8d 14 c5 00 00 00 00 	lea    0x0(,%rax,8),%edx
ffffffff800279c7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800279cb:	66 89 50 14          	mov    %dx,0x14(%rax)
ffffffff800279cf:	e9 18 02 00 00       	jmp    ffffffff80027bec <ZydisSetOperandSizeAndElementInfo+0x4fd>
ffffffff800279d4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff800279d8:	8b 40 54             	mov    0x54(%rax),%eax
ffffffff800279db:	83 f8 05             	cmp    $0x5,%eax
ffffffff800279de:	0f 87 b7 01 00 00    	ja     ffffffff80027b9b <ZydisSetOperandSizeAndElementInfo+0x4ac>
ffffffff800279e4:	89 c0                	mov    %eax,%eax
ffffffff800279e6:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
ffffffff800279ed:	00 
ffffffff800279ee:	48 8d 05 4b 7c 01 00 	lea    0x17c4b(%rip),%rax        # ffffffff8003f640 <GPR8_MAPPING.0+0x50>
ffffffff800279f5:	8b 04 02             	mov    (%rdx,%rax,1),%eax
ffffffff800279f8:	48 98                	cltq   
ffffffff800279fa:	48 8d 15 3f 7c 01 00 	lea    0x17c3f(%rip),%rdx        # ffffffff8003f640 <GPR8_MAPPING.0+0x50>
ffffffff80027a01:	48 01 d0             	add    %rdx,%rax
ffffffff80027a04:	3e ff e0             	notrack jmp *%rax
ffffffff80027a07:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80027a0b:	66 c7 40 14 00 02    	movw   $0x200,0x14(%rax)
ffffffff80027a11:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80027a15:	0f b6 40 1c          	movzbl 0x1c(%rax),%eax
ffffffff80027a19:	0f b6 c0             	movzbl %al,%eax
ffffffff80027a1c:	83 e8 0a             	sub    $0xa,%eax
ffffffff80027a1f:	83 f8 0f             	cmp    $0xf,%eax
ffffffff80027a22:	0f 87 c4 00 00 00    	ja     ffffffff80027aec <ZydisSetOperandSizeAndElementInfo+0x3fd>
ffffffff80027a28:	89 c0                	mov    %eax,%eax
ffffffff80027a2a:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
ffffffff80027a31:	00 
ffffffff80027a32:	48 8d 05 1f 7c 01 00 	lea    0x17c1f(%rip),%rax        # ffffffff8003f658 <GPR8_MAPPING.0+0x68>
ffffffff80027a39:	8b 04 02             	mov    (%rdx,%rax,1),%eax
ffffffff80027a3c:	48 98                	cltq   
ffffffff80027a3e:	48 8d 15 13 7c 01 00 	lea    0x17c13(%rip),%rdx        # ffffffff8003f658 <GPR8_MAPPING.0+0x68>
ffffffff80027a45:	48 01 d0             	add    %rdx,%rax
ffffffff80027a48:	3e ff e0             	notrack jmp *%rax
ffffffff80027a4b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80027a4f:	c7 40 18 05 00 00 00 	movl   $0x5,0x18(%rax)
ffffffff80027a56:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80027a5a:	66 c7 40 1c 20 00    	movw   $0x20,0x1c(%rax)
ffffffff80027a60:	e9 89 00 00 00       	jmp    ffffffff80027aee <ZydisSetOperandSizeAndElementInfo+0x3ff>
ffffffff80027a65:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80027a69:	66 c7 40 14 00 01    	movw   $0x100,0x14(%rax)
ffffffff80027a6f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80027a73:	c7 40 18 05 00 00 00 	movl   $0x5,0x18(%rax)
ffffffff80027a7a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80027a7e:	66 c7 40 1c 20 00    	movw   $0x20,0x1c(%rax)
ffffffff80027a84:	eb 68                	jmp    ffffffff80027aee <ZydisSetOperandSizeAndElementInfo+0x3ff>
ffffffff80027a86:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80027a8a:	c7 40 18 03 00 00 00 	movl   $0x3,0x18(%rax)
ffffffff80027a91:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80027a95:	66 c7 40 1c 20 00    	movw   $0x20,0x1c(%rax)
ffffffff80027a9b:	eb 51                	jmp    ffffffff80027aee <ZydisSetOperandSizeAndElementInfo+0x3ff>
ffffffff80027a9d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80027aa1:	66 c7 40 14 00 01    	movw   $0x100,0x14(%rax)
ffffffff80027aa7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80027aab:	c7 40 18 03 00 00 00 	movl   $0x3,0x18(%rax)
ffffffff80027ab2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80027ab6:	66 c7 40 1c 20 00    	movw   $0x20,0x1c(%rax)
ffffffff80027abc:	eb 30                	jmp    ffffffff80027aee <ZydisSetOperandSizeAndElementInfo+0x3ff>
ffffffff80027abe:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80027ac2:	c7 40 18 06 00 00 00 	movl   $0x6,0x18(%rax)
ffffffff80027ac9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80027acd:	66 c7 40 1c 40 00    	movw   $0x40,0x1c(%rax)
ffffffff80027ad3:	eb 19                	jmp    ffffffff80027aee <ZydisSetOperandSizeAndElementInfo+0x3ff>
ffffffff80027ad5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80027ad9:	c7 40 18 03 00 00 00 	movl   $0x3,0x18(%rax)
ffffffff80027ae0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80027ae4:	66 c7 40 1c 40 00    	movw   $0x40,0x1c(%rax)
ffffffff80027aea:	eb 02                	jmp    ffffffff80027aee <ZydisSetOperandSizeAndElementInfo+0x3ff>
ffffffff80027aec:	eb fe                	jmp    ffffffff80027aec <ZydisSetOperandSizeAndElementInfo+0x3fd>
ffffffff80027aee:	e9 aa 00 00 00       	jmp    ffffffff80027b9d <ZydisSetOperandSizeAndElementInfo+0x4ae>
ffffffff80027af3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80027af7:	66 c7 40 14 00 01    	movw   $0x100,0x14(%rax)
ffffffff80027afd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80027b01:	c7 40 18 04 00 00 00 	movl   $0x4,0x18(%rax)
ffffffff80027b08:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80027b0c:	66 c7 40 1c 10 00    	movw   $0x10,0x1c(%rax)
ffffffff80027b12:	e9 86 00 00 00       	jmp    ffffffff80027b9d <ZydisSetOperandSizeAndElementInfo+0x4ae>
ffffffff80027b17:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80027b1b:	66 c7 40 14 00 01    	movw   $0x100,0x14(%rax)
ffffffff80027b21:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80027b25:	c7 40 18 03 00 00 00 	movl   $0x3,0x18(%rax)
ffffffff80027b2c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80027b30:	66 c7 40 1c 10 00    	movw   $0x10,0x1c(%rax)
ffffffff80027b36:	eb 65                	jmp    ffffffff80027b9d <ZydisSetOperandSizeAndElementInfo+0x4ae>
ffffffff80027b38:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80027b3c:	66 c7 40 14 00 01    	movw   $0x100,0x14(%rax)
ffffffff80027b42:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80027b46:	c7 40 18 02 00 00 00 	movl   $0x2,0x18(%rax)
ffffffff80027b4d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80027b51:	66 c7 40 1c 10 00    	movw   $0x10,0x1c(%rax)
ffffffff80027b57:	eb 44                	jmp    ffffffff80027b9d <ZydisSetOperandSizeAndElementInfo+0x4ae>
ffffffff80027b59:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80027b5d:	66 c7 40 14 80 00    	movw   $0x80,0x14(%rax)
ffffffff80027b63:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80027b67:	c7 40 18 03 00 00 00 	movl   $0x3,0x18(%rax)
ffffffff80027b6e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80027b72:	66 c7 40 1c 08 00    	movw   $0x8,0x1c(%rax)
ffffffff80027b78:	eb 23                	jmp    ffffffff80027b9d <ZydisSetOperandSizeAndElementInfo+0x4ae>
ffffffff80027b7a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80027b7e:	66 c7 40 14 80 00    	movw   $0x80,0x14(%rax)
ffffffff80027b84:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80027b88:	c7 40 18 02 00 00 00 	movl   $0x2,0x18(%rax)
ffffffff80027b8f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80027b93:	66 c7 40 1c 08 00    	movw   $0x8,0x1c(%rax)
ffffffff80027b99:	eb 02                	jmp    ffffffff80027b9d <ZydisSetOperandSizeAndElementInfo+0x4ae>
ffffffff80027b9b:	eb fe                	jmp    ffffffff80027b9b <ZydisSetOperandSizeAndElementInfo+0x4ac>
ffffffff80027b9d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80027ba1:	8b 40 48             	mov    0x48(%rax),%eax
ffffffff80027ba4:	83 f8 0b             	cmp    $0xb,%eax
ffffffff80027ba7:	77 3c                	ja     ffffffff80027be5 <ZydisSetOperandSizeAndElementInfo+0x4f6>
ffffffff80027ba9:	83 f8 0a             	cmp    $0xa,%eax
ffffffff80027bac:	73 1e                	jae    ffffffff80027bcc <ZydisSetOperandSizeAndElementInfo+0x4dd>
ffffffff80027bae:	85 c0                	test   %eax,%eax
ffffffff80027bb0:	74 35                	je     ffffffff80027be7 <ZydisSetOperandSizeAndElementInfo+0x4f8>
ffffffff80027bb2:	83 e8 03             	sub    $0x3,%eax
ffffffff80027bb5:	83 f8 01             	cmp    $0x1,%eax
ffffffff80027bb8:	77 2b                	ja     ffffffff80027be5 <ZydisSetOperandSizeAndElementInfo+0x4f6>
ffffffff80027bba:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80027bbe:	0f b7 50 1c          	movzwl 0x1c(%rax),%edx
ffffffff80027bc2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80027bc6:	66 89 50 14          	mov    %dx,0x14(%rax)
ffffffff80027bca:	eb 1c                	jmp    ffffffff80027be8 <ZydisSetOperandSizeAndElementInfo+0x4f9>
ffffffff80027bcc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80027bd0:	0f b7 40 1c          	movzwl 0x1c(%rax),%eax
ffffffff80027bd4:	8d 14 85 00 00 00 00 	lea    0x0(,%rax,4),%edx
ffffffff80027bdb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80027bdf:	66 89 50 14          	mov    %dx,0x14(%rax)
ffffffff80027be3:	eb 03                	jmp    ffffffff80027be8 <ZydisSetOperandSizeAndElementInfo+0x4f9>
ffffffff80027be5:	eb fe                	jmp    ffffffff80027be5 <ZydisSetOperandSizeAndElementInfo+0x4f6>
ffffffff80027be7:	90                   	nop
ffffffff80027be8:	eb 02                	jmp    ffffffff80027bec <ZydisSetOperandSizeAndElementInfo+0x4fd>
ffffffff80027bea:	eb fe                	jmp    ffffffff80027bea <ZydisSetOperandSizeAndElementInfo+0x4fb>
ffffffff80027bec:	eb 6d                	jmp    ffffffff80027c5b <ZydisSetOperandSizeAndElementInfo+0x56c>
ffffffff80027bee:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80027bf2:	0f b6 80 48 01 00 00 	movzbl 0x148(%rax),%eax
ffffffff80027bf9:	3c 10                	cmp    $0x10,%al
ffffffff80027bfb:	74 0d                	je     ffffffff80027c0a <ZydisSetOperandSizeAndElementInfo+0x51b>
ffffffff80027bfd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80027c01:	0f b6 80 48 01 00 00 	movzbl 0x148(%rax),%eax
ffffffff80027c08:	3c 20                	cmp    $0x20,%al
ffffffff80027c0a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80027c0e:	0f b6 80 48 01 00 00 	movzbl 0x148(%rax),%eax
ffffffff80027c15:	0f b6 d0             	movzbl %al,%edx
ffffffff80027c18:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80027c1c:	0f b6 80 60 01 00 00 	movzbl 0x160(%rax),%eax
ffffffff80027c23:	0f b6 c0             	movzbl %al,%eax
ffffffff80027c26:	01 c2                	add    %eax,%edx
ffffffff80027c28:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80027c2c:	66 89 50 14          	mov    %dx,0x14(%rax)
ffffffff80027c30:	eb 29                	jmp    ffffffff80027c5b <ZydisSetOperandSizeAndElementInfo+0x56c>
ffffffff80027c32:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80027c36:	0f b6 40 08          	movzbl 0x8(%rax),%eax
ffffffff80027c3a:	0f b6 c0             	movzbl %al,%eax
ffffffff80027c3d:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff80027c41:	48 98                	cltq   
ffffffff80027c43:	0f b7 44 42 02       	movzwl 0x2(%rdx,%rax,2),%eax
ffffffff80027c48:	8d 14 c5 00 00 00 00 	lea    0x0(,%rax,8),%edx
ffffffff80027c4f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80027c53:	66 89 50 14          	mov    %dx,0x14(%rax)
ffffffff80027c57:	eb 02                	jmp    ffffffff80027c5b <ZydisSetOperandSizeAndElementInfo+0x56c>
ffffffff80027c59:	eb fe                	jmp    ffffffff80027c59 <ZydisSetOperandSizeAndElementInfo+0x56a>
ffffffff80027c5b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80027c5f:	0f b6 40 08          	movzbl 0x8(%rax),%eax
ffffffff80027c63:	83 e0 1f             	and    $0x1f,%eax
ffffffff80027c66:	84 c0                	test   %al,%al
ffffffff80027c68:	74 54                	je     ffffffff80027cbe <ZydisSetOperandSizeAndElementInfo+0x5cf>
ffffffff80027c6a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80027c6e:	0f b6 40 08          	movzbl 0x8(%rax),%eax
ffffffff80027c72:	83 e0 1f             	and    $0x1f,%eax
ffffffff80027c75:	3c 01                	cmp    $0x1,%al
ffffffff80027c77:	74 45                	je     ffffffff80027cbe <ZydisSetOperandSizeAndElementInfo+0x5cf>
ffffffff80027c79:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80027c7d:	48 8d 50 1c          	lea    0x1c(%rax),%rdx
ffffffff80027c81:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80027c85:	48 8d 48 18          	lea    0x18(%rax),%rcx
ffffffff80027c89:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80027c8d:	0f b6 40 08          	movzbl 0x8(%rax),%eax
ffffffff80027c91:	83 e0 1f             	and    $0x1f,%eax
ffffffff80027c94:	0f b6 c0             	movzbl %al,%eax
ffffffff80027c97:	48 89 ce             	mov    %rcx,%rsi
ffffffff80027c9a:	89 c7                	mov    %eax,%edi
ffffffff80027c9c:	e8 26 dc 00 00       	call   ffffffff800358c7 <ZydisGetElementInfo>
ffffffff80027ca1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80027ca5:	0f b7 40 1c          	movzwl 0x1c(%rax),%eax
ffffffff80027ca9:	66 85 c0             	test   %ax,%ax
ffffffff80027cac:	75 10                	jne    ffffffff80027cbe <ZydisSetOperandSizeAndElementInfo+0x5cf>
ffffffff80027cae:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80027cb2:	0f b7 50 14          	movzwl 0x14(%rax),%edx
ffffffff80027cb6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80027cba:	66 89 50 1c          	mov    %dx,0x1c(%rax)
ffffffff80027cbe:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80027cc2:	0f b7 40 1c          	movzwl 0x1c(%rax),%eax
ffffffff80027cc6:	66 85 c0             	test   %ax,%ax
ffffffff80027cc9:	74 3d                	je     ffffffff80027d08 <ZydisSetOperandSizeAndElementInfo+0x619>
ffffffff80027ccb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80027ccf:	0f b7 40 14          	movzwl 0x14(%rax),%eax
ffffffff80027cd3:	66 85 c0             	test   %ax,%ax
ffffffff80027cd6:	74 30                	je     ffffffff80027d08 <ZydisSetOperandSizeAndElementInfo+0x619>
ffffffff80027cd8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80027cdc:	8b 40 18             	mov    0x18(%rax),%eax
ffffffff80027cdf:	83 f8 09             	cmp    $0x9,%eax
ffffffff80027ce2:	74 24                	je     ffffffff80027d08 <ZydisSetOperandSizeAndElementInfo+0x619>
ffffffff80027ce4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80027ce8:	0f b7 40 14          	movzwl 0x14(%rax),%eax
ffffffff80027cec:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff80027cf0:	0f b7 4a 1c          	movzwl 0x1c(%rdx),%ecx
ffffffff80027cf4:	ba 00 00 00 00       	mov    $0x0,%edx
ffffffff80027cf9:	66 f7 f1             	div    %cx
ffffffff80027cfc:	89 c2                	mov    %eax,%edx
ffffffff80027cfe:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80027d02:	66 89 50 1e          	mov    %dx,0x1e(%rax)
ffffffff80027d06:	eb 0b                	jmp    ffffffff80027d13 <ZydisSetOperandSizeAndElementInfo+0x624>
ffffffff80027d08:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80027d0c:	66 c7 40 1e 01 00    	movw   $0x1,0x1e(%rax)
ffffffff80027d12:	90                   	nop
ffffffff80027d13:	90                   	nop
ffffffff80027d14:	c9                   	leave  
ffffffff80027d15:	c3                   	ret    

ffffffff80027d16 <ZydisDecodeOperandRegister>:
ffffffff80027d16:	f3 0f 1e fa          	endbr64 
ffffffff80027d1a:	55                   	push   %rbp
ffffffff80027d1b:	48 89 e5             	mov    %rsp,%rbp
ffffffff80027d1e:	48 83 ec 18          	sub    $0x18,%rsp
ffffffff80027d22:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff80027d26:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff80027d2a:	89 55 ec             	mov    %edx,-0x14(%rbp)
ffffffff80027d2d:	89 c8                	mov    %ecx,%eax
ffffffff80027d2f:	88 45 e8             	mov    %al,-0x18(%rbp)
ffffffff80027d32:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80027d36:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%rax)
ffffffff80027d3d:	83 7d ec 01          	cmpl   $0x1,-0x14(%rbp)
ffffffff80027d41:	75 3a                	jne    ffffffff80027d7d <ZydisDecodeOperandRegister+0x67>
ffffffff80027d43:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80027d47:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff80027d4b:	83 e0 04             	and    $0x4,%eax
ffffffff80027d4e:	48 85 c0             	test   %rax,%rax
ffffffff80027d51:	74 18                	je     ffffffff80027d6b <ZydisDecodeOperandRegister+0x55>
ffffffff80027d53:	80 7d e8 03          	cmpb   $0x3,-0x18(%rbp)
ffffffff80027d57:	76 12                	jbe    ffffffff80027d6b <ZydisDecodeOperandRegister+0x55>
ffffffff80027d59:	0f b6 45 e8          	movzbl -0x18(%rbp),%eax
ffffffff80027d5d:	83 c0 05             	add    $0x5,%eax
ffffffff80027d60:	89 c2                	mov    %eax,%edx
ffffffff80027d62:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80027d66:	89 50 24             	mov    %edx,0x24(%rax)
ffffffff80027d69:	eb 29                	jmp    ffffffff80027d94 <ZydisDecodeOperandRegister+0x7e>
ffffffff80027d6b:	0f b6 45 e8          	movzbl -0x18(%rbp),%eax
ffffffff80027d6f:	83 c0 01             	add    $0x1,%eax
ffffffff80027d72:	89 c2                	mov    %eax,%edx
ffffffff80027d74:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80027d78:	89 50 24             	mov    %edx,0x24(%rax)
ffffffff80027d7b:	eb 17                	jmp    ffffffff80027d94 <ZydisDecodeOperandRegister+0x7e>
ffffffff80027d7d:	0f b6 45 e8          	movzbl -0x18(%rbp),%eax
ffffffff80027d81:	8b 55 ec             	mov    -0x14(%rbp),%edx
ffffffff80027d84:	89 c6                	mov    %eax,%esi
ffffffff80027d86:	89 d7                	mov    %edx,%edi
ffffffff80027d88:	e8 4e d9 ff ff       	call   ffffffff800256db <ZydisRegisterEncode>
ffffffff80027d8d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff80027d91:	89 42 24             	mov    %eax,0x24(%rdx)
ffffffff80027d94:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff80027d99:	c9                   	leave  
ffffffff80027d9a:	c3                   	ret    

ffffffff80027d9b <ZydisDecodeOperandMemory>:
ffffffff80027d9b:	f3 0f 1e fa          	endbr64 
ffffffff80027d9f:	55                   	push   %rbp
ffffffff80027da0:	48 89 e5             	mov    %rsp,%rbp
ffffffff80027da3:	48 83 ec 30          	sub    $0x30,%rsp
ffffffff80027da7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff80027dab:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
ffffffff80027daf:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
ffffffff80027db3:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
ffffffff80027db6:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
ffffffff80027dba:	74 25                	je     ffffffff80027de1 <ZydisDecodeOperandMemory+0x46>
ffffffff80027dbc:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80027dc0:	0f b6 80 22 01 00 00 	movzbl 0x122(%rax),%eax
ffffffff80027dc7:	3c 04                	cmp    $0x4,%al
ffffffff80027dc9:	75 16                	jne    ffffffff80027de1 <ZydisDecodeOperandMemory+0x46>
ffffffff80027dcb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80027dcf:	0f b6 40 17          	movzbl 0x17(%rax),%eax
ffffffff80027dd3:	3c 20                	cmp    $0x20,%al
ffffffff80027dd5:	74 0a                	je     ffffffff80027de1 <ZydisDecodeOperandMemory+0x46>
ffffffff80027dd7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80027ddb:	0f b6 40 17          	movzbl 0x17(%rax),%eax
ffffffff80027ddf:	3c 40                	cmp    $0x40,%al
ffffffff80027de1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80027de5:	c7 40 04 02 00 00 00 	movl   $0x2,0x4(%rax)
ffffffff80027dec:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80027df0:	c7 40 28 01 00 00 00 	movl   $0x1,0x28(%rax)
ffffffff80027df7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80027dfb:	0f b6 80 22 01 00 00 	movzbl 0x122(%rax),%eax
ffffffff80027e02:	88 45 fe             	mov    %al,-0x2(%rbp)
ffffffff80027e05:	c6 45 ff 00          	movb   $0x0,-0x1(%rbp)
ffffffff80027e09:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80027e0d:	0f b6 40 17          	movzbl 0x17(%rax),%eax
ffffffff80027e11:	0f b6 c0             	movzbl %al,%eax
ffffffff80027e14:	83 f8 40             	cmp    $0x40,%eax
ffffffff80027e17:	0f 84 4a 02 00 00    	je     ffffffff80028067 <ZydisDecodeOperandMemory+0x2cc>
ffffffff80027e1d:	83 f8 40             	cmp    $0x40,%eax
ffffffff80027e20:	0f 8f d6 03 00 00    	jg     ffffffff800281fc <ZydisDecodeOperandMemory+0x461>
ffffffff80027e26:	83 f8 10             	cmp    $0x10,%eax
ffffffff80027e29:	74 0e                	je     ffffffff80027e39 <ZydisDecodeOperandMemory+0x9e>
ffffffff80027e2b:	83 f8 20             	cmp    $0x20,%eax
ffffffff80027e2e:	0f 84 a6 00 00 00    	je     ffffffff80027eda <ZydisDecodeOperandMemory+0x13f>
ffffffff80027e34:	e9 c3 03 00 00       	jmp    ffffffff800281fc <ZydisDecodeOperandMemory+0x461>
ffffffff80027e39:	0f b6 45 fe          	movzbl -0x2(%rbp),%eax
ffffffff80027e3d:	48 98                	cltq   
ffffffff80027e3f:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
ffffffff80027e46:	00 
ffffffff80027e47:	48 8d 05 52 7b 01 00 	lea    0x17b52(%rip),%rax        # ffffffff8003f9a0 <bases.38>
ffffffff80027e4e:	8b 14 02             	mov    (%rdx,%rax,1),%edx
ffffffff80027e51:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80027e55:	89 50 30             	mov    %edx,0x30(%rax)
ffffffff80027e58:	0f b6 45 fe          	movzbl -0x2(%rbp),%eax
ffffffff80027e5c:	48 98                	cltq   
ffffffff80027e5e:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
ffffffff80027e65:	00 
ffffffff80027e66:	48 8d 05 53 7b 01 00 	lea    0x17b53(%rip),%rax        # ffffffff8003f9c0 <indices.37>
ffffffff80027e6d:	8b 14 02             	mov    (%rdx,%rax,1),%edx
ffffffff80027e70:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80027e74:	89 50 34             	mov    %edx,0x34(%rax)
ffffffff80027e77:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80027e7b:	8b 40 34             	mov    0x34(%rax),%eax
ffffffff80027e7e:	85 c0                	test   %eax,%eax
ffffffff80027e80:	0f 95 c0             	setne  %al
ffffffff80027e83:	89 c2                	mov    %eax,%edx
ffffffff80027e85:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80027e89:	88 50 38             	mov    %dl,0x38(%rax)
ffffffff80027e8c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80027e90:	0f b6 80 20 01 00 00 	movzbl 0x120(%rax),%eax
ffffffff80027e97:	0f b6 c0             	movzbl %al,%eax
ffffffff80027e9a:	83 f8 02             	cmp    $0x2,%eax
ffffffff80027e9d:	74 2d                	je     ffffffff80027ecc <ZydisDecodeOperandMemory+0x131>
ffffffff80027e9f:	83 f8 02             	cmp    $0x2,%eax
ffffffff80027ea2:	7f 2e                	jg     ffffffff80027ed2 <ZydisDecodeOperandMemory+0x137>
ffffffff80027ea4:	85 c0                	test   %eax,%eax
ffffffff80027ea6:	74 07                	je     ffffffff80027eaf <ZydisDecodeOperandMemory+0x114>
ffffffff80027ea8:	83 f8 01             	cmp    $0x1,%eax
ffffffff80027eab:	74 19                	je     ffffffff80027ec6 <ZydisDecodeOperandMemory+0x12b>
ffffffff80027ead:	eb 23                	jmp    ffffffff80027ed2 <ZydisDecodeOperandMemory+0x137>
ffffffff80027eaf:	80 7d fe 06          	cmpb   $0x6,-0x2(%rbp)
ffffffff80027eb3:	75 1f                	jne    ffffffff80027ed4 <ZydisDecodeOperandMemory+0x139>
ffffffff80027eb5:	c6 45 ff 10          	movb   $0x10,-0x1(%rbp)
ffffffff80027eb9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80027ebd:	c7 40 30 00 00 00 00 	movl   $0x0,0x30(%rax)
ffffffff80027ec4:	eb 0e                	jmp    ffffffff80027ed4 <ZydisDecodeOperandMemory+0x139>
ffffffff80027ec6:	c6 45 ff 08          	movb   $0x8,-0x1(%rbp)
ffffffff80027eca:	eb 09                	jmp    ffffffff80027ed5 <ZydisDecodeOperandMemory+0x13a>
ffffffff80027ecc:	c6 45 ff 10          	movb   $0x10,-0x1(%rbp)
ffffffff80027ed0:	eb 03                	jmp    ffffffff80027ed5 <ZydisDecodeOperandMemory+0x13a>
ffffffff80027ed2:	eb fe                	jmp    ffffffff80027ed2 <ZydisDecodeOperandMemory+0x137>
ffffffff80027ed4:	90                   	nop
ffffffff80027ed5:	e9 28 03 00 00       	jmp    ffffffff80028202 <ZydisDecodeOperandMemory+0x467>
ffffffff80027eda:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
ffffffff80027ede:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80027ee2:	b9 03 00 00 00       	mov    $0x3,%ecx
ffffffff80027ee7:	ba 05 00 00 00       	mov    $0x5,%edx
ffffffff80027eec:	48 89 c7             	mov    %rax,%rdi
ffffffff80027eef:	e8 9b f6 ff ff       	call   ffffffff8002758f <ZydisCalcRegisterId>
ffffffff80027ef4:	0f b6 c0             	movzbl %al,%eax
ffffffff80027ef7:	83 c0 25             	add    $0x25,%eax
ffffffff80027efa:	89 c2                	mov    %eax,%edx
ffffffff80027efc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80027f00:	89 50 30             	mov    %edx,0x30(%rax)
ffffffff80027f03:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80027f07:	0f b6 80 20 01 00 00 	movzbl 0x120(%rax),%eax
ffffffff80027f0e:	0f b6 c0             	movzbl %al,%eax
ffffffff80027f11:	83 f8 02             	cmp    $0x2,%eax
ffffffff80027f14:	74 44                	je     ffffffff80027f5a <ZydisDecodeOperandMemory+0x1bf>
ffffffff80027f16:	83 f8 02             	cmp    $0x2,%eax
ffffffff80027f19:	7f 45                	jg     ffffffff80027f60 <ZydisDecodeOperandMemory+0x1c5>
ffffffff80027f1b:	85 c0                	test   %eax,%eax
ffffffff80027f1d:	74 07                	je     ffffffff80027f26 <ZydisDecodeOperandMemory+0x18b>
ffffffff80027f1f:	83 f8 01             	cmp    $0x1,%eax
ffffffff80027f22:	74 30                	je     ffffffff80027f54 <ZydisDecodeOperandMemory+0x1b9>
ffffffff80027f24:	eb 3a                	jmp    ffffffff80027f60 <ZydisDecodeOperandMemory+0x1c5>
ffffffff80027f26:	80 7d fe 05          	cmpb   $0x5,-0x2(%rbp)
ffffffff80027f2a:	75 36                	jne    ffffffff80027f62 <ZydisDecodeOperandMemory+0x1c7>
ffffffff80027f2c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80027f30:	8b 00                	mov    (%rax),%eax
ffffffff80027f32:	85 c0                	test   %eax,%eax
ffffffff80027f34:	75 0d                	jne    ffffffff80027f43 <ZydisDecodeOperandMemory+0x1a8>
ffffffff80027f36:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80027f3a:	c7 40 30 c4 00 00 00 	movl   $0xc4,0x30(%rax)
ffffffff80027f41:	eb 0b                	jmp    ffffffff80027f4e <ZydisDecodeOperandMemory+0x1b3>
ffffffff80027f43:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80027f47:	c7 40 30 00 00 00 00 	movl   $0x0,0x30(%rax)
ffffffff80027f4e:	c6 45 ff 20          	movb   $0x20,-0x1(%rbp)
ffffffff80027f52:	eb 0e                	jmp    ffffffff80027f62 <ZydisDecodeOperandMemory+0x1c7>
ffffffff80027f54:	c6 45 ff 08          	movb   $0x8,-0x1(%rbp)
ffffffff80027f58:	eb 09                	jmp    ffffffff80027f63 <ZydisDecodeOperandMemory+0x1c8>
ffffffff80027f5a:	c6 45 ff 20          	movb   $0x20,-0x1(%rbp)
ffffffff80027f5e:	eb 03                	jmp    ffffffff80027f63 <ZydisDecodeOperandMemory+0x1c8>
ffffffff80027f60:	eb fe                	jmp    ffffffff80027f60 <ZydisDecodeOperandMemory+0x1c5>
ffffffff80027f62:	90                   	nop
ffffffff80027f63:	80 7d fe 04          	cmpb   $0x4,-0x2(%rbp)
ffffffff80027f67:	0f 85 e2 00 00 00    	jne    ffffffff8002804f <ZydisDecodeOperandMemory+0x2b4>
ffffffff80027f6d:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
ffffffff80027f71:	74 05                	je     ffffffff80027f78 <ZydisDecodeOperandMemory+0x1dd>
ffffffff80027f73:	8b 45 d4             	mov    -0x2c(%rbp),%eax
ffffffff80027f76:	eb 05                	jmp    ffffffff80027f7d <ZydisDecodeOperandMemory+0x1e2>
ffffffff80027f78:	b8 03 00 00 00       	mov    $0x3,%eax
ffffffff80027f7d:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
ffffffff80027f81:	74 07                	je     ffffffff80027f8a <ZydisDecodeOperandMemory+0x1ef>
ffffffff80027f83:	ba 07 00 00 00       	mov    $0x7,%edx
ffffffff80027f88:	eb 05                	jmp    ffffffff80027f8f <ZydisDecodeOperandMemory+0x1f4>
ffffffff80027f8a:	ba 06 00 00 00       	mov    $0x6,%edx
ffffffff80027f8f:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
ffffffff80027f93:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
ffffffff80027f97:	89 c1                	mov    %eax,%ecx
ffffffff80027f99:	e8 f1 f5 ff ff       	call   ffffffff8002758f <ZydisCalcRegisterId>
ffffffff80027f9e:	0f b6 d0             	movzbl %al,%edx
ffffffff80027fa1:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
ffffffff80027fa5:	74 05                	je     ffffffff80027fac <ZydisDecodeOperandMemory+0x211>
ffffffff80027fa7:	8b 45 d4             	mov    -0x2c(%rbp),%eax
ffffffff80027faa:	eb 05                	jmp    ffffffff80027fb1 <ZydisDecodeOperandMemory+0x216>
ffffffff80027fac:	b8 03 00 00 00       	mov    $0x3,%eax
ffffffff80027fb1:	89 d6                	mov    %edx,%esi
ffffffff80027fb3:	89 c7                	mov    %eax,%edi
ffffffff80027fb5:	e8 21 d7 ff ff       	call   ffffffff800256db <ZydisRegisterEncode>
ffffffff80027fba:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff80027fbe:	89 42 34             	mov    %eax,0x34(%rdx)
ffffffff80027fc1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80027fc5:	0f b6 80 24 01 00 00 	movzbl 0x124(%rax),%eax
ffffffff80027fcc:	0f b6 c0             	movzbl %al,%eax
ffffffff80027fcf:	ba 01 00 00 00       	mov    $0x1,%edx
ffffffff80027fd4:	89 c1                	mov    %eax,%ecx
ffffffff80027fd6:	d3 e2                	shl    %cl,%edx
ffffffff80027fd8:	89 d0                	mov    %edx,%eax
ffffffff80027fda:	89 c2                	mov    %eax,%edx
ffffffff80027fdc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80027fe0:	88 50 38             	mov    %dl,0x38(%rax)
ffffffff80027fe3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80027fe7:	8b 40 34             	mov    0x34(%rax),%eax
ffffffff80027fea:	83 f8 29             	cmp    $0x29,%eax
ffffffff80027fed:	75 13                	jne    ffffffff80028002 <ZydisDecodeOperandMemory+0x267>
ffffffff80027fef:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80027ff3:	c7 40 34 00 00 00 00 	movl   $0x0,0x34(%rax)
ffffffff80027ffa:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80027ffe:	c6 40 38 00          	movb   $0x0,0x38(%rax)
ffffffff80028002:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80028006:	8b 40 30             	mov    0x30(%rax),%eax
ffffffff80028009:	83 f8 2a             	cmp    $0x2a,%eax
ffffffff8002800c:	0f 85 ec 01 00 00    	jne    ffffffff800281fe <ZydisDecodeOperandMemory+0x463>
ffffffff80028012:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80028016:	0f b6 80 20 01 00 00 	movzbl 0x120(%rax),%eax
ffffffff8002801d:	84 c0                	test   %al,%al
ffffffff8002801f:	75 0b                	jne    ffffffff8002802c <ZydisDecodeOperandMemory+0x291>
ffffffff80028021:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80028025:	c7 40 30 00 00 00 00 	movl   $0x0,0x30(%rax)
ffffffff8002802c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80028030:	0f b6 80 20 01 00 00 	movzbl 0x120(%rax),%eax
ffffffff80028037:	3c 01                	cmp    $0x1,%al
ffffffff80028039:	75 07                	jne    ffffffff80028042 <ZydisDecodeOperandMemory+0x2a7>
ffffffff8002803b:	b8 08 00 00 00       	mov    $0x8,%eax
ffffffff80028040:	eb 05                	jmp    ffffffff80028047 <ZydisDecodeOperandMemory+0x2ac>
ffffffff80028042:	b8 20 00 00 00       	mov    $0x20,%eax
ffffffff80028047:	88 45 ff             	mov    %al,-0x1(%rbp)
ffffffff8002804a:	e9 af 01 00 00       	jmp    ffffffff800281fe <ZydisDecodeOperandMemory+0x463>
ffffffff8002804f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80028053:	c7 40 34 00 00 00 00 	movl   $0x0,0x34(%rax)
ffffffff8002805a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8002805e:	c6 40 38 00          	movb   $0x0,0x38(%rax)
ffffffff80028062:	e9 97 01 00 00       	jmp    ffffffff800281fe <ZydisDecodeOperandMemory+0x463>
ffffffff80028067:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
ffffffff8002806b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002806f:	b9 04 00 00 00       	mov    $0x4,%ecx
ffffffff80028074:	ba 05 00 00 00       	mov    $0x5,%edx
ffffffff80028079:	48 89 c7             	mov    %rax,%rdi
ffffffff8002807c:	e8 0e f5 ff ff       	call   ffffffff8002758f <ZydisCalcRegisterId>
ffffffff80028081:	0f b6 c0             	movzbl %al,%eax
ffffffff80028084:	83 c0 35             	add    $0x35,%eax
ffffffff80028087:	89 c2                	mov    %eax,%edx
ffffffff80028089:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8002808d:	89 50 30             	mov    %edx,0x30(%rax)
ffffffff80028090:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80028094:	0f b6 80 20 01 00 00 	movzbl 0x120(%rax),%eax
ffffffff8002809b:	0f b6 c0             	movzbl %al,%eax
ffffffff8002809e:	83 f8 02             	cmp    $0x2,%eax
ffffffff800280a1:	74 44                	je     ffffffff800280e7 <ZydisDecodeOperandMemory+0x34c>
ffffffff800280a3:	83 f8 02             	cmp    $0x2,%eax
ffffffff800280a6:	7f 45                	jg     ffffffff800280ed <ZydisDecodeOperandMemory+0x352>
ffffffff800280a8:	85 c0                	test   %eax,%eax
ffffffff800280aa:	74 07                	je     ffffffff800280b3 <ZydisDecodeOperandMemory+0x318>
ffffffff800280ac:	83 f8 01             	cmp    $0x1,%eax
ffffffff800280af:	74 30                	je     ffffffff800280e1 <ZydisDecodeOperandMemory+0x346>
ffffffff800280b1:	eb 3a                	jmp    ffffffff800280ed <ZydisDecodeOperandMemory+0x352>
ffffffff800280b3:	80 7d fe 05          	cmpb   $0x5,-0x2(%rbp)
ffffffff800280b7:	75 36                	jne    ffffffff800280ef <ZydisDecodeOperandMemory+0x354>
ffffffff800280b9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff800280bd:	8b 00                	mov    (%rax),%eax
ffffffff800280bf:	85 c0                	test   %eax,%eax
ffffffff800280c1:	75 0d                	jne    ffffffff800280d0 <ZydisDecodeOperandMemory+0x335>
ffffffff800280c3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff800280c7:	c7 40 30 c5 00 00 00 	movl   $0xc5,0x30(%rax)
ffffffff800280ce:	eb 0b                	jmp    ffffffff800280db <ZydisDecodeOperandMemory+0x340>
ffffffff800280d0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff800280d4:	c7 40 30 00 00 00 00 	movl   $0x0,0x30(%rax)
ffffffff800280db:	c6 45 ff 20          	movb   $0x20,-0x1(%rbp)
ffffffff800280df:	eb 0e                	jmp    ffffffff800280ef <ZydisDecodeOperandMemory+0x354>
ffffffff800280e1:	c6 45 ff 08          	movb   $0x8,-0x1(%rbp)
ffffffff800280e5:	eb 09                	jmp    ffffffff800280f0 <ZydisDecodeOperandMemory+0x355>
ffffffff800280e7:	c6 45 ff 20          	movb   $0x20,-0x1(%rbp)
ffffffff800280eb:	eb 03                	jmp    ffffffff800280f0 <ZydisDecodeOperandMemory+0x355>
ffffffff800280ed:	eb fe                	jmp    ffffffff800280ed <ZydisDecodeOperandMemory+0x352>
ffffffff800280ef:	90                   	nop
ffffffff800280f0:	0f b6 45 fe          	movzbl -0x2(%rbp),%eax
ffffffff800280f4:	83 e0 07             	and    $0x7,%eax
ffffffff800280f7:	83 f8 04             	cmp    $0x4,%eax
ffffffff800280fa:	0f 85 e7 00 00 00    	jne    ffffffff800281e7 <ZydisDecodeOperandMemory+0x44c>
ffffffff80028100:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
ffffffff80028104:	74 05                	je     ffffffff8002810b <ZydisDecodeOperandMemory+0x370>
ffffffff80028106:	8b 45 d4             	mov    -0x2c(%rbp),%eax
ffffffff80028109:	eb 05                	jmp    ffffffff80028110 <ZydisDecodeOperandMemory+0x375>
ffffffff8002810b:	b8 04 00 00 00       	mov    $0x4,%eax
ffffffff80028110:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
ffffffff80028114:	74 07                	je     ffffffff8002811d <ZydisDecodeOperandMemory+0x382>
ffffffff80028116:	ba 07 00 00 00       	mov    $0x7,%edx
ffffffff8002811b:	eb 05                	jmp    ffffffff80028122 <ZydisDecodeOperandMemory+0x387>
ffffffff8002811d:	ba 06 00 00 00       	mov    $0x6,%edx
ffffffff80028122:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
ffffffff80028126:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
ffffffff8002812a:	89 c1                	mov    %eax,%ecx
ffffffff8002812c:	e8 5e f4 ff ff       	call   ffffffff8002758f <ZydisCalcRegisterId>
ffffffff80028131:	0f b6 d0             	movzbl %al,%edx
ffffffff80028134:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
ffffffff80028138:	74 05                	je     ffffffff8002813f <ZydisDecodeOperandMemory+0x3a4>
ffffffff8002813a:	8b 45 d4             	mov    -0x2c(%rbp),%eax
ffffffff8002813d:	eb 05                	jmp    ffffffff80028144 <ZydisDecodeOperandMemory+0x3a9>
ffffffff8002813f:	b8 04 00 00 00       	mov    $0x4,%eax
ffffffff80028144:	89 d6                	mov    %edx,%esi
ffffffff80028146:	89 c7                	mov    %eax,%edi
ffffffff80028148:	e8 8e d5 ff ff       	call   ffffffff800256db <ZydisRegisterEncode>
ffffffff8002814d:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff80028151:	89 42 34             	mov    %eax,0x34(%rdx)
ffffffff80028154:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80028158:	0f b6 80 24 01 00 00 	movzbl 0x124(%rax),%eax
ffffffff8002815f:	0f b6 c0             	movzbl %al,%eax
ffffffff80028162:	ba 01 00 00 00       	mov    $0x1,%edx
ffffffff80028167:	89 c1                	mov    %eax,%ecx
ffffffff80028169:	d3 e2                	shl    %cl,%edx
ffffffff8002816b:	89 d0                	mov    %edx,%eax
ffffffff8002816d:	89 c2                	mov    %eax,%edx
ffffffff8002816f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80028173:	88 50 38             	mov    %dl,0x38(%rax)
ffffffff80028176:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8002817a:	8b 40 34             	mov    0x34(%rax),%eax
ffffffff8002817d:	83 f8 39             	cmp    $0x39,%eax
ffffffff80028180:	75 13                	jne    ffffffff80028195 <ZydisDecodeOperandMemory+0x3fa>
ffffffff80028182:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80028186:	c7 40 34 00 00 00 00 	movl   $0x0,0x34(%rax)
ffffffff8002818d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80028191:	c6 40 38 00          	movb   $0x0,0x38(%rax)
ffffffff80028195:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80028199:	8b 40 30             	mov    0x30(%rax),%eax
ffffffff8002819c:	83 f8 3a             	cmp    $0x3a,%eax
ffffffff8002819f:	74 0c                	je     ffffffff800281ad <ZydisDecodeOperandMemory+0x412>
ffffffff800281a1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff800281a5:	8b 40 30             	mov    0x30(%rax),%eax
ffffffff800281a8:	83 f8 42             	cmp    $0x42,%eax
ffffffff800281ab:	75 54                	jne    ffffffff80028201 <ZydisDecodeOperandMemory+0x466>
ffffffff800281ad:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff800281b1:	0f b6 80 20 01 00 00 	movzbl 0x120(%rax),%eax
ffffffff800281b8:	84 c0                	test   %al,%al
ffffffff800281ba:	75 0b                	jne    ffffffff800281c7 <ZydisDecodeOperandMemory+0x42c>
ffffffff800281bc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff800281c0:	c7 40 30 00 00 00 00 	movl   $0x0,0x30(%rax)
ffffffff800281c7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff800281cb:	0f b6 80 20 01 00 00 	movzbl 0x120(%rax),%eax
ffffffff800281d2:	3c 01                	cmp    $0x1,%al
ffffffff800281d4:	75 07                	jne    ffffffff800281dd <ZydisDecodeOperandMemory+0x442>
ffffffff800281d6:	b8 08 00 00 00       	mov    $0x8,%eax
ffffffff800281db:	eb 05                	jmp    ffffffff800281e2 <ZydisDecodeOperandMemory+0x447>
ffffffff800281dd:	b8 20 00 00 00       	mov    $0x20,%eax
ffffffff800281e2:	88 45 ff             	mov    %al,-0x1(%rbp)
ffffffff800281e5:	eb 1a                	jmp    ffffffff80028201 <ZydisDecodeOperandMemory+0x466>
ffffffff800281e7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff800281eb:	c7 40 34 00 00 00 00 	movl   $0x0,0x34(%rax)
ffffffff800281f2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff800281f6:	c6 40 38 00          	movb   $0x0,0x38(%rax)
ffffffff800281fa:	eb 05                	jmp    ffffffff80028201 <ZydisDecodeOperandMemory+0x466>
ffffffff800281fc:	eb fe                	jmp    ffffffff800281fc <ZydisDecodeOperandMemory+0x461>
ffffffff800281fe:	90                   	nop
ffffffff800281ff:	eb 01                	jmp    ffffffff80028202 <ZydisDecodeOperandMemory+0x467>
ffffffff80028201:	90                   	nop
ffffffff80028202:	80 7d ff 00          	cmpb   $0x0,-0x1(%rbp)
ffffffff80028206:	74 1b                	je     ffffffff80028223 <ZydisDecodeOperandMemory+0x488>
ffffffff80028208:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8002820c:	c6 40 40 01          	movb   $0x1,0x40(%rax)
ffffffff80028210:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80028214:	48 8b 90 28 01 00 00 	mov    0x128(%rax),%rdx
ffffffff8002821b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8002821f:	48 89 50 48          	mov    %rdx,0x48(%rax)
ffffffff80028223:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff80028228:	c9                   	leave  
ffffffff80028229:	c3                   	ret    

ffffffff8002822a <ZydisDecodeOperandImplicitRegister>:
ffffffff8002822a:	f3 0f 1e fa          	endbr64 
ffffffff8002822e:	55                   	push   %rbp
ffffffff8002822f:	48 89 e5             	mov    %rsp,%rbp
ffffffff80028232:	48 83 ec 28          	sub    $0x28,%rsp
ffffffff80028236:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8002823a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff8002823e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
ffffffff80028242:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
ffffffff80028246:	4c 89 45 d8          	mov    %r8,-0x28(%rbp)
ffffffff8002824a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8002824e:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%rax)
ffffffff80028255:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80028259:	0f b6 40 09          	movzbl 0x9(%rax),%eax
ffffffff8002825d:	83 e0 07             	and    $0x7,%eax
ffffffff80028260:	0f b6 c0             	movzbl %al,%eax
ffffffff80028263:	83 f8 06             	cmp    $0x6,%eax
ffffffff80028266:	0f 87 c0 01 00 00    	ja     ffffffff8002842c <ZydisDecodeOperandImplicitRegister+0x202>
ffffffff8002826c:	89 c0                	mov    %eax,%eax
ffffffff8002826e:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
ffffffff80028275:	00 
ffffffff80028276:	48 8d 05 1b 74 01 00 	lea    0x1741b(%rip),%rax        # ffffffff8003f698 <GPR8_MAPPING.0+0xa8>
ffffffff8002827d:	8b 04 02             	mov    (%rdx,%rax,1),%eax
ffffffff80028280:	48 98                	cltq   
ffffffff80028282:	48 8d 15 0f 74 01 00 	lea    0x1740f(%rip),%rdx        # ffffffff8003f698 <GPR8_MAPPING.0+0xa8>
ffffffff80028289:	48 01 d0             	add    %rdx,%rax
ffffffff8002828c:	3e ff e0             	notrack jmp *%rax
ffffffff8002828f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80028293:	0f b6 50 0a          	movzbl 0xa(%rax),%edx
ffffffff80028297:	0f b6 40 0b          	movzbl 0xb(%rax),%eax
ffffffff8002829b:	83 e0 01             	and    $0x1,%eax
ffffffff8002829e:	48 c1 e0 08          	shl    $0x8,%rax
ffffffff800282a2:	48 09 d0             	or     %rdx,%rax
ffffffff800282a5:	0f b7 c0             	movzwl %ax,%eax
ffffffff800282a8:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff800282ac:	89 42 24             	mov    %eax,0x24(%rdx)
ffffffff800282af:	e9 7a 01 00 00       	jmp    ffffffff8002842e <ZydisDecodeOperandImplicitRegister+0x204>
ffffffff800282b4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff800282b8:	0f b6 40 0a          	movzbl 0xa(%rax),%eax
ffffffff800282bc:	83 e0 3f             	and    $0x3f,%eax
ffffffff800282bf:	0f b6 c0             	movzbl %al,%eax
ffffffff800282c2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff800282c6:	0f b6 52 08          	movzbl 0x8(%rdx),%edx
ffffffff800282ca:	0f b6 d2             	movzbl %dl,%edx
ffffffff800282cd:	48 63 d2             	movslq %edx,%rdx
ffffffff800282d0:	48 8d 0c 95 00 00 00 	lea    0x0(,%rdx,4),%rcx
ffffffff800282d7:	00 
ffffffff800282d8:	48 8d 15 01 77 01 00 	lea    0x17701(%rip),%rdx        # ffffffff8003f9e0 <lookup.36>
ffffffff800282df:	8b 14 11             	mov    (%rcx,%rdx,1),%edx
ffffffff800282e2:	89 c6                	mov    %eax,%esi
ffffffff800282e4:	89 d7                	mov    %edx,%edi
ffffffff800282e6:	e8 f0 d3 ff ff       	call   ffffffff800256db <ZydisRegisterEncode>
ffffffff800282eb:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff800282ef:	89 42 24             	mov    %eax,0x24(%rdx)
ffffffff800282f2:	e9 37 01 00 00       	jmp    ffffffff8002842e <ZydisDecodeOperandImplicitRegister+0x204>
ffffffff800282f7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff800282fb:	0f b6 40 0a          	movzbl 0xa(%rax),%eax
ffffffff800282ff:	83 e0 3f             	and    $0x3f,%eax
ffffffff80028302:	0f b6 d0             	movzbl %al,%edx
ffffffff80028305:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80028309:	0f b6 40 17          	movzbl 0x17(%rax),%eax
ffffffff8002830d:	3c 10                	cmp    $0x10,%al
ffffffff8002830f:	74 1a                	je     ffffffff8002832b <ZydisDecodeOperandImplicitRegister+0x101>
ffffffff80028311:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80028315:	0f b6 40 17          	movzbl 0x17(%rax),%eax
ffffffff80028319:	3c 20                	cmp    $0x20,%al
ffffffff8002831b:	75 07                	jne    ffffffff80028324 <ZydisDecodeOperandImplicitRegister+0xfa>
ffffffff8002831d:	b8 03 00 00 00       	mov    $0x3,%eax
ffffffff80028322:	eb 0c                	jmp    ffffffff80028330 <ZydisDecodeOperandImplicitRegister+0x106>
ffffffff80028324:	b8 04 00 00 00       	mov    $0x4,%eax
ffffffff80028329:	eb 05                	jmp    ffffffff80028330 <ZydisDecodeOperandImplicitRegister+0x106>
ffffffff8002832b:	b8 02 00 00 00       	mov    $0x2,%eax
ffffffff80028330:	89 d6                	mov    %edx,%esi
ffffffff80028332:	89 c7                	mov    %eax,%edi
ffffffff80028334:	e8 a2 d3 ff ff       	call   ffffffff800256db <ZydisRegisterEncode>
ffffffff80028339:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff8002833d:	89 42 24             	mov    %eax,0x24(%rdx)
ffffffff80028340:	e9 e9 00 00 00       	jmp    ffffffff8002842e <ZydisDecodeOperandImplicitRegister+0x204>
ffffffff80028345:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80028349:	0f b6 40 17          	movzbl 0x17(%rax),%eax
ffffffff8002834d:	3c 10                	cmp    $0x10,%al
ffffffff8002834f:	74 1a                	je     ffffffff8002836b <ZydisDecodeOperandImplicitRegister+0x141>
ffffffff80028351:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80028355:	0f b6 40 17          	movzbl 0x17(%rax),%eax
ffffffff80028359:	3c 20                	cmp    $0x20,%al
ffffffff8002835b:	75 07                	jne    ffffffff80028364 <ZydisDecodeOperandImplicitRegister+0x13a>
ffffffff8002835d:	b8 c4 00 00 00       	mov    $0xc4,%eax
ffffffff80028362:	eb 0c                	jmp    ffffffff80028370 <ZydisDecodeOperandImplicitRegister+0x146>
ffffffff80028364:	b8 c5 00 00 00       	mov    $0xc5,%eax
ffffffff80028369:	eb 05                	jmp    ffffffff80028370 <ZydisDecodeOperandImplicitRegister+0x146>
ffffffff8002836b:	b8 c3 00 00 00       	mov    $0xc3,%eax
ffffffff80028370:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff80028374:	89 42 24             	mov    %eax,0x24(%rdx)
ffffffff80028377:	e9 b2 00 00 00       	jmp    ffffffff8002842e <ZydisDecodeOperandImplicitRegister+0x204>
ffffffff8002837c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80028380:	0f b6 40 0a          	movzbl 0xa(%rax),%eax
ffffffff80028384:	83 e0 3f             	and    $0x3f,%eax
ffffffff80028387:	0f b6 d0             	movzbl %al,%edx
ffffffff8002838a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8002838e:	8b 40 04             	mov    0x4(%rax),%eax
ffffffff80028391:	85 c0                	test   %eax,%eax
ffffffff80028393:	74 1a                	je     ffffffff800283af <ZydisDecodeOperandImplicitRegister+0x185>
ffffffff80028395:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80028399:	8b 40 04             	mov    0x4(%rax),%eax
ffffffff8002839c:	83 f8 01             	cmp    $0x1,%eax
ffffffff8002839f:	75 07                	jne    ffffffff800283a8 <ZydisDecodeOperandImplicitRegister+0x17e>
ffffffff800283a1:	b8 03 00 00 00       	mov    $0x3,%eax
ffffffff800283a6:	eb 0c                	jmp    ffffffff800283b4 <ZydisDecodeOperandImplicitRegister+0x18a>
ffffffff800283a8:	b8 04 00 00 00       	mov    $0x4,%eax
ffffffff800283ad:	eb 05                	jmp    ffffffff800283b4 <ZydisDecodeOperandImplicitRegister+0x18a>
ffffffff800283af:	b8 02 00 00 00       	mov    $0x2,%eax
ffffffff800283b4:	89 d6                	mov    %edx,%esi
ffffffff800283b6:	89 c7                	mov    %eax,%edi
ffffffff800283b8:	e8 1e d3 ff ff       	call   ffffffff800256db <ZydisRegisterEncode>
ffffffff800283bd:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff800283c1:	89 42 24             	mov    %eax,0x24(%rdx)
ffffffff800283c4:	eb 68                	jmp    ffffffff8002842e <ZydisDecodeOperandImplicitRegister+0x204>
ffffffff800283c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff800283ca:	8b 40 04             	mov    0x4(%rax),%eax
ffffffff800283cd:	85 c0                	test   %eax,%eax
ffffffff800283cf:	74 1a                	je     ffffffff800283eb <ZydisDecodeOperandImplicitRegister+0x1c1>
ffffffff800283d1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff800283d5:	8b 40 04             	mov    0x4(%rax),%eax
ffffffff800283d8:	83 f8 01             	cmp    $0x1,%eax
ffffffff800283db:	75 07                	jne    ffffffff800283e4 <ZydisDecodeOperandImplicitRegister+0x1ba>
ffffffff800283dd:	b8 c4 00 00 00       	mov    $0xc4,%eax
ffffffff800283e2:	eb 0c                	jmp    ffffffff800283f0 <ZydisDecodeOperandImplicitRegister+0x1c6>
ffffffff800283e4:	b8 c5 00 00 00       	mov    $0xc5,%eax
ffffffff800283e9:	eb 05                	jmp    ffffffff800283f0 <ZydisDecodeOperandImplicitRegister+0x1c6>
ffffffff800283eb:	b8 c4 00 00 00       	mov    $0xc4,%eax
ffffffff800283f0:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff800283f4:	89 42 24             	mov    %eax,0x24(%rdx)
ffffffff800283f7:	eb 35                	jmp    ffffffff8002842e <ZydisDecodeOperandImplicitRegister+0x204>
ffffffff800283f9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff800283fd:	8b 40 04             	mov    0x4(%rax),%eax
ffffffff80028400:	85 c0                	test   %eax,%eax
ffffffff80028402:	74 1a                	je     ffffffff8002841e <ZydisDecodeOperandImplicitRegister+0x1f4>
ffffffff80028404:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80028408:	8b 40 04             	mov    0x4(%rax),%eax
ffffffff8002840b:	83 f8 01             	cmp    $0x1,%eax
ffffffff8002840e:	75 07                	jne    ffffffff80028417 <ZydisDecodeOperandImplicitRegister+0x1ed>
ffffffff80028410:	b8 c1 00 00 00       	mov    $0xc1,%eax
ffffffff80028415:	eb 0c                	jmp    ffffffff80028423 <ZydisDecodeOperandImplicitRegister+0x1f9>
ffffffff80028417:	b8 c2 00 00 00       	mov    $0xc2,%eax
ffffffff8002841c:	eb 05                	jmp    ffffffff80028423 <ZydisDecodeOperandImplicitRegister+0x1f9>
ffffffff8002841e:	b8 c0 00 00 00       	mov    $0xc0,%eax
ffffffff80028423:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff80028427:	89 42 24             	mov    %eax,0x24(%rdx)
ffffffff8002842a:	eb 02                	jmp    ffffffff8002842e <ZydisDecodeOperandImplicitRegister+0x204>
ffffffff8002842c:	eb fe                	jmp    ffffffff8002842c <ZydisDecodeOperandImplicitRegister+0x202>
ffffffff8002842e:	90                   	nop
ffffffff8002842f:	c9                   	leave  
ffffffff80028430:	c3                   	ret    

ffffffff80028431 <ZydisDecodeOperandImplicitMemory>:
ffffffff80028431:	f3 0f 1e fa          	endbr64 
ffffffff80028435:	55                   	push   %rbp
ffffffff80028436:	48 89 e5             	mov    %rsp,%rbp
ffffffff80028439:	48 83 ec 28          	sub    $0x28,%rsp
ffffffff8002843d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff80028441:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff80028445:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
ffffffff80028449:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
ffffffff8002844d:	4c 89 45 d8          	mov    %r8,-0x28(%rbp)
ffffffff80028451:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80028455:	c7 40 04 02 00 00 00 	movl   $0x2,0x4(%rax)
ffffffff8002845c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80028460:	c7 40 28 01 00 00 00 	movl   $0x1,0x28(%rax)
ffffffff80028467:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8002846b:	0f b6 40 09          	movzbl 0x9(%rax),%eax
ffffffff8002846f:	c0 e8 03             	shr    $0x3,%al
ffffffff80028472:	83 e0 0f             	and    $0xf,%eax
ffffffff80028475:	0f b6 c0             	movzbl %al,%eax
ffffffff80028478:	83 f8 08             	cmp    $0x8,%eax
ffffffff8002847b:	0f 87 6f 02 00 00    	ja     ffffffff800286f0 <ZydisDecodeOperandImplicitMemory+0x2bf>
ffffffff80028481:	89 c0                	mov    %eax,%eax
ffffffff80028483:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
ffffffff8002848a:	00 
ffffffff8002848b:	48 8d 05 22 72 01 00 	lea    0x17222(%rip),%rax        # ffffffff8003f6b4 <GPR8_MAPPING.0+0xc4>
ffffffff80028492:	8b 04 02             	mov    (%rdx,%rax,1),%eax
ffffffff80028495:	48 98                	cltq   
ffffffff80028497:	48 8d 15 16 72 01 00 	lea    0x17216(%rip),%rdx        # ffffffff8003f6b4 <GPR8_MAPPING.0+0xc4>
ffffffff8002849e:	48 01 d0             	add    %rdx,%rax
ffffffff800284a1:	3e ff e0             	notrack jmp *%rax
ffffffff800284a4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff800284a8:	0f b6 40 09          	movzbl 0x9(%rax),%eax
ffffffff800284ac:	0f b6 c0             	movzbl %al,%eax
ffffffff800284af:	48 98                	cltq   
ffffffff800284b1:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
ffffffff800284b8:	00 
ffffffff800284b9:	48 8d 05 30 75 01 00 	lea    0x17530(%rip),%rax        # ffffffff8003f9f0 <lookup.35>
ffffffff800284c0:	8b 14 02             	mov    (%rdx,%rax,1),%edx
ffffffff800284c3:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
ffffffff800284c7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff800284cb:	89 d1                	mov    %edx,%ecx
ffffffff800284cd:	ba 02 00 00 00       	mov    $0x2,%edx
ffffffff800284d2:	48 89 c7             	mov    %rax,%rdi
ffffffff800284d5:	e8 b5 f0 ff ff       	call   ffffffff8002758f <ZydisCalcRegisterId>
ffffffff800284da:	0f b6 c0             	movzbl %al,%eax
ffffffff800284dd:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff800284e1:	0f b6 52 09          	movzbl 0x9(%rdx),%edx
ffffffff800284e5:	0f b6 d2             	movzbl %dl,%edx
ffffffff800284e8:	48 63 d2             	movslq %edx,%rdx
ffffffff800284eb:	48 8d 0c 95 00 00 00 	lea    0x0(,%rdx,4),%rcx
ffffffff800284f2:	00 
ffffffff800284f3:	48 8d 15 f6 74 01 00 	lea    0x174f6(%rip),%rdx        # ffffffff8003f9f0 <lookup.35>
ffffffff800284fa:	8b 14 11             	mov    (%rcx,%rdx,1),%edx
ffffffff800284fd:	89 c6                	mov    %eax,%esi
ffffffff800284ff:	89 d7                	mov    %edx,%edi
ffffffff80028501:	e8 d5 d1 ff ff       	call   ffffffff800256db <ZydisRegisterEncode>
ffffffff80028506:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff8002850a:	89 42 30             	mov    %eax,0x30(%rdx)
ffffffff8002850d:	e9 e0 01 00 00       	jmp    ffffffff800286f2 <ZydisDecodeOperandImplicitMemory+0x2c1>
ffffffff80028512:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80028516:	0f b6 40 09          	movzbl 0x9(%rax),%eax
ffffffff8002851a:	0f b6 c0             	movzbl %al,%eax
ffffffff8002851d:	48 98                	cltq   
ffffffff8002851f:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
ffffffff80028526:	00 
ffffffff80028527:	48 8d 05 c2 74 01 00 	lea    0x174c2(%rip),%rax        # ffffffff8003f9f0 <lookup.35>
ffffffff8002852e:	8b 14 02             	mov    (%rdx,%rax,1),%edx
ffffffff80028531:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
ffffffff80028535:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80028539:	89 d1                	mov    %edx,%ecx
ffffffff8002853b:	ba 04 00 00 00       	mov    $0x4,%edx
ffffffff80028540:	48 89 c7             	mov    %rax,%rdi
ffffffff80028543:	e8 47 f0 ff ff       	call   ffffffff8002758f <ZydisCalcRegisterId>
ffffffff80028548:	0f b6 c0             	movzbl %al,%eax
ffffffff8002854b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff8002854f:	0f b6 52 09          	movzbl 0x9(%rdx),%edx
ffffffff80028553:	0f b6 d2             	movzbl %dl,%edx
ffffffff80028556:	48 63 d2             	movslq %edx,%rdx
ffffffff80028559:	48 8d 0c 95 00 00 00 	lea    0x0(,%rdx,4),%rcx
ffffffff80028560:	00 
ffffffff80028561:	48 8d 15 88 74 01 00 	lea    0x17488(%rip),%rdx        # ffffffff8003f9f0 <lookup.35>
ffffffff80028568:	8b 14 11             	mov    (%rcx,%rdx,1),%edx
ffffffff8002856b:	89 c6                	mov    %eax,%esi
ffffffff8002856d:	89 d7                	mov    %edx,%edi
ffffffff8002856f:	e8 67 d1 ff ff       	call   ffffffff800256db <ZydisRegisterEncode>
ffffffff80028574:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff80028578:	89 42 30             	mov    %eax,0x30(%rdx)
ffffffff8002857b:	e9 72 01 00 00       	jmp    ffffffff800286f2 <ZydisDecodeOperandImplicitMemory+0x2c1>
ffffffff80028580:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80028584:	0f b6 40 09          	movzbl 0x9(%rax),%eax
ffffffff80028588:	0f b6 c0             	movzbl %al,%eax
ffffffff8002858b:	48 98                	cltq   
ffffffff8002858d:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
ffffffff80028594:	00 
ffffffff80028595:	48 8d 05 54 74 01 00 	lea    0x17454(%rip),%rax        # ffffffff8003f9f0 <lookup.35>
ffffffff8002859c:	8b 04 02             	mov    (%rdx,%rax,1),%eax
ffffffff8002859f:	be 00 00 00 00       	mov    $0x0,%esi
ffffffff800285a4:	89 c7                	mov    %eax,%edi
ffffffff800285a6:	e8 30 d1 ff ff       	call   ffffffff800256db <ZydisRegisterEncode>
ffffffff800285ab:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff800285af:	89 42 30             	mov    %eax,0x30(%rdx)
ffffffff800285b2:	e9 3b 01 00 00       	jmp    ffffffff800286f2 <ZydisDecodeOperandImplicitMemory+0x2c1>
ffffffff800285b7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff800285bb:	0f b6 40 09          	movzbl 0x9(%rax),%eax
ffffffff800285bf:	0f b6 c0             	movzbl %al,%eax
ffffffff800285c2:	48 98                	cltq   
ffffffff800285c4:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
ffffffff800285cb:	00 
ffffffff800285cc:	48 8d 05 1d 74 01 00 	lea    0x1741d(%rip),%rax        # ffffffff8003f9f0 <lookup.35>
ffffffff800285d3:	8b 04 02             	mov    (%rdx,%rax,1),%eax
ffffffff800285d6:	be 02 00 00 00       	mov    $0x2,%esi
ffffffff800285db:	89 c7                	mov    %eax,%edi
ffffffff800285dd:	e8 f9 d0 ff ff       	call   ffffffff800256db <ZydisRegisterEncode>
ffffffff800285e2:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff800285e6:	89 42 30             	mov    %eax,0x30(%rdx)
ffffffff800285e9:	e9 04 01 00 00       	jmp    ffffffff800286f2 <ZydisDecodeOperandImplicitMemory+0x2c1>
ffffffff800285ee:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff800285f2:	0f b6 40 09          	movzbl 0x9(%rax),%eax
ffffffff800285f6:	0f b6 c0             	movzbl %al,%eax
ffffffff800285f9:	48 98                	cltq   
ffffffff800285fb:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
ffffffff80028602:	00 
ffffffff80028603:	48 8d 05 e6 73 01 00 	lea    0x173e6(%rip),%rax        # ffffffff8003f9f0 <lookup.35>
ffffffff8002860a:	8b 04 02             	mov    (%rdx,%rax,1),%eax
ffffffff8002860d:	be 03 00 00 00       	mov    $0x3,%esi
ffffffff80028612:	89 c7                	mov    %eax,%edi
ffffffff80028614:	e8 c2 d0 ff ff       	call   ffffffff800256db <ZydisRegisterEncode>
ffffffff80028619:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff8002861d:	89 42 30             	mov    %eax,0x30(%rdx)
ffffffff80028620:	e9 cd 00 00 00       	jmp    ffffffff800286f2 <ZydisDecodeOperandImplicitMemory+0x2c1>
ffffffff80028625:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80028629:	0f b6 40 09          	movzbl 0x9(%rax),%eax
ffffffff8002862d:	0f b6 c0             	movzbl %al,%eax
ffffffff80028630:	48 98                	cltq   
ffffffff80028632:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
ffffffff80028639:	00 
ffffffff8002863a:	48 8d 05 af 73 01 00 	lea    0x173af(%rip),%rax        # ffffffff8003f9f0 <lookup.35>
ffffffff80028641:	8b 04 02             	mov    (%rdx,%rax,1),%eax
ffffffff80028644:	be 06 00 00 00       	mov    $0x6,%esi
ffffffff80028649:	89 c7                	mov    %eax,%edi
ffffffff8002864b:	e8 8b d0 ff ff       	call   ffffffff800256db <ZydisRegisterEncode>
ffffffff80028650:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff80028654:	89 42 30             	mov    %eax,0x30(%rdx)
ffffffff80028657:	e9 96 00 00 00       	jmp    ffffffff800286f2 <ZydisDecodeOperandImplicitMemory+0x2c1>
ffffffff8002865c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80028660:	0f b6 40 09          	movzbl 0x9(%rax),%eax
ffffffff80028664:	0f b6 c0             	movzbl %al,%eax
ffffffff80028667:	48 98                	cltq   
ffffffff80028669:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
ffffffff80028670:	00 
ffffffff80028671:	48 8d 05 78 73 01 00 	lea    0x17378(%rip),%rax        # ffffffff8003f9f0 <lookup.35>
ffffffff80028678:	8b 04 02             	mov    (%rdx,%rax,1),%eax
ffffffff8002867b:	be 07 00 00 00       	mov    $0x7,%esi
ffffffff80028680:	89 c7                	mov    %eax,%edi
ffffffff80028682:	e8 54 d0 ff ff       	call   ffffffff800256db <ZydisRegisterEncode>
ffffffff80028687:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff8002868b:	89 42 30             	mov    %eax,0x30(%rdx)
ffffffff8002868e:	eb 62                	jmp    ffffffff800286f2 <ZydisDecodeOperandImplicitMemory+0x2c1>
ffffffff80028690:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80028694:	8b 40 04             	mov    0x4(%rax),%eax
ffffffff80028697:	89 c0                	mov    %eax,%eax
ffffffff80028699:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
ffffffff800286a0:	00 
ffffffff800286a1:	48 8d 05 48 73 01 00 	lea    0x17348(%rip),%rax        # ffffffff8003f9f0 <lookup.35>
ffffffff800286a8:	8b 04 02             	mov    (%rdx,%rax,1),%eax
ffffffff800286ab:	be 04 00 00 00       	mov    $0x4,%esi
ffffffff800286b0:	89 c7                	mov    %eax,%edi
ffffffff800286b2:	e8 24 d0 ff ff       	call   ffffffff800256db <ZydisRegisterEncode>
ffffffff800286b7:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff800286bb:	89 42 30             	mov    %eax,0x30(%rdx)
ffffffff800286be:	eb 32                	jmp    ffffffff800286f2 <ZydisDecodeOperandImplicitMemory+0x2c1>
ffffffff800286c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff800286c4:	8b 40 04             	mov    0x4(%rax),%eax
ffffffff800286c7:	89 c0                	mov    %eax,%eax
ffffffff800286c9:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
ffffffff800286d0:	00 
ffffffff800286d1:	48 8d 05 18 73 01 00 	lea    0x17318(%rip),%rax        # ffffffff8003f9f0 <lookup.35>
ffffffff800286d8:	8b 04 02             	mov    (%rdx,%rax,1),%eax
ffffffff800286db:	be 05 00 00 00       	mov    $0x5,%esi
ffffffff800286e0:	89 c7                	mov    %eax,%edi
ffffffff800286e2:	e8 f4 cf ff ff       	call   ffffffff800256db <ZydisRegisterEncode>
ffffffff800286e7:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff800286eb:	89 42 30             	mov    %eax,0x30(%rdx)
ffffffff800286ee:	eb 02                	jmp    ffffffff800286f2 <ZydisDecodeOperandImplicitMemory+0x2c1>
ffffffff800286f0:	eb fe                	jmp    ffffffff800286f0 <ZydisDecodeOperandImplicitMemory+0x2bf>
ffffffff800286f2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff800286f6:	0f b6 40 09          	movzbl 0x9(%rax),%eax
ffffffff800286fa:	83 e0 07             	and    $0x7,%eax
ffffffff800286fd:	84 c0                	test   %al,%al
ffffffff800286ff:	74 24                	je     ffffffff80028725 <ZydisDecodeOperandImplicitMemory+0x2f4>
ffffffff80028701:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80028705:	0f b6 40 09          	movzbl 0x9(%rax),%eax
ffffffff80028709:	83 e0 07             	and    $0x7,%eax
ffffffff8002870c:	83 e8 01             	sub    $0x1,%eax
ffffffff8002870f:	0f b6 c0             	movzbl %al,%eax
ffffffff80028712:	89 c6                	mov    %eax,%esi
ffffffff80028714:	bf 0d 00 00 00       	mov    $0xd,%edi
ffffffff80028719:	e8 bd cf ff ff       	call   ffffffff800256db <ZydisRegisterEncode>
ffffffff8002871e:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff80028722:	89 42 2c             	mov    %eax,0x2c(%rdx)
ffffffff80028725:	90                   	nop
ffffffff80028726:	c9                   	leave  
ffffffff80028727:	c3                   	ret    

ffffffff80028728 <ZydisDecodeOperands>:
ffffffff80028728:	f3 0f 1e fa          	endbr64 
ffffffff8002872c:	55                   	push   %rbp
ffffffff8002872d:	48 89 e5             	mov    %rsp,%rbp
ffffffff80028730:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
ffffffff80028734:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
ffffffff80028738:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
ffffffff8002873c:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
ffffffff80028740:	48 89 4d 90          	mov    %rcx,-0x70(%rbp)
ffffffff80028744:	44 89 c0             	mov    %r8d,%eax
ffffffff80028747:	88 45 8c             	mov    %al,-0x74(%rbp)
ffffffff8002874a:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff8002874e:	48 8b 00             	mov    (%rax),%rax
ffffffff80028751:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff80028755:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80028759:	48 89 c7             	mov    %rax,%rdi
ffffffff8002875c:	e8 f7 d0 00 00       	call   ffffffff80035858 <ZydisGetOperandDefinitions>
ffffffff80028761:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff80028765:	0f b6 45 8c          	movzbl -0x74(%rbp),%eax
ffffffff80028769:	48 6b c0 68          	imul   $0x68,%rax,%rax
ffffffff8002876d:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
ffffffff80028771:	48 89 c2             	mov    %rax,%rdx
ffffffff80028774:	be 00 00 00 00       	mov    $0x0,%esi
ffffffff80028779:	48 89 cf             	mov    %rcx,%rdi
ffffffff8002877c:	e8 af da ff ff       	call   ffffffff80026230 <ZYAN_MEMSET.lto_priv.4>
ffffffff80028781:	c6 45 f7 00          	movb   $0x0,-0x9(%rbp)
ffffffff80028785:	c6 45 f6 00          	movb   $0x0,-0xa(%rbp)
ffffffff80028789:	e9 b7 0d 00 00       	jmp    ffffffff80029545 <ZydisDecodeOperands+0xe1d>
ffffffff8002878e:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
ffffffff80028795:	0f b6 45 f6          	movzbl -0xa(%rbp),%eax
ffffffff80028799:	48 6b c0 68          	imul   $0x68,%rax,%rax
ffffffff8002879d:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
ffffffff800287a1:	48 01 c2             	add    %rax,%rdx
ffffffff800287a4:	0f b6 45 f6          	movzbl -0xa(%rbp),%eax
ffffffff800287a8:	88 02                	mov    %al,(%rdx)
ffffffff800287aa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff800287ae:	0f b6 00             	movzbl (%rax),%eax
ffffffff800287b1:	c0 e8 06             	shr    $0x6,%al
ffffffff800287b4:	0f b6 55 f6          	movzbl -0xa(%rbp),%edx
ffffffff800287b8:	48 6b d2 68          	imul   $0x68,%rdx,%rdx
ffffffff800287bc:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
ffffffff800287c0:	48 01 ca             	add    %rcx,%rdx
ffffffff800287c3:	0f b6 c0             	movzbl %al,%eax
ffffffff800287c6:	89 42 08             	mov    %eax,0x8(%rdx)
ffffffff800287c9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff800287cd:	0f b6 40 01          	movzbl 0x1(%rax),%eax
ffffffff800287d1:	83 e0 0f             	and    $0xf,%eax
ffffffff800287d4:	89 c2                	mov    %eax,%edx
ffffffff800287d6:	0f b6 45 f6          	movzbl -0xa(%rbp),%eax
ffffffff800287da:	48 6b c0 68          	imul   $0x68,%rax,%rax
ffffffff800287de:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
ffffffff800287e2:	48 01 c8             	add    %rcx,%rax
ffffffff800287e5:	88 50 0c             	mov    %dl,0xc(%rax)
ffffffff800287e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff800287ec:	0f b6 00             	movzbl (%rax),%eax
ffffffff800287ef:	83 e0 3f             	and    $0x3f,%eax
ffffffff800287f2:	0f b6 c0             	movzbl %al,%eax
ffffffff800287f5:	83 f8 03             	cmp    $0x3,%eax
ffffffff800287f8:	74 75                	je     ffffffff8002886f <ZydisDecodeOperands+0x147>
ffffffff800287fa:	83 f8 03             	cmp    $0x3,%eax
ffffffff800287fd:	0f 8f d6 00 00 00    	jg     ffffffff800288d9 <ZydisDecodeOperands+0x1b1>
ffffffff80028803:	83 f8 01             	cmp    $0x1,%eax
ffffffff80028806:	74 0a                	je     ffffffff80028812 <ZydisDecodeOperands+0xea>
ffffffff80028808:	83 f8 02             	cmp    $0x2,%eax
ffffffff8002880b:	74 35                	je     ffffffff80028842 <ZydisDecodeOperands+0x11a>
ffffffff8002880d:	e9 c7 00 00 00       	jmp    ffffffff800288d9 <ZydisDecodeOperands+0x1b1>
ffffffff80028812:	0f b6 45 f6          	movzbl -0xa(%rbp),%eax
ffffffff80028816:	48 6b c0 68          	imul   $0x68,%rax,%rax
ffffffff8002881a:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
ffffffff8002881e:	48 8d 0c 10          	lea    (%rax,%rdx,1),%rcx
ffffffff80028822:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff80028826:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
ffffffff8002882a:	48 8b 75 a0          	mov    -0x60(%rbp),%rsi
ffffffff8002882e:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff80028832:	49 89 f8             	mov    %rdi,%r8
ffffffff80028835:	48 89 c7             	mov    %rax,%rdi
ffffffff80028838:	e8 ed f9 ff ff       	call   ffffffff8002822a <ZydisDecodeOperandImplicitRegister>
ffffffff8002883d:	e9 98 00 00 00       	jmp    ffffffff800288da <ZydisDecodeOperands+0x1b2>
ffffffff80028842:	0f b6 45 f6          	movzbl -0xa(%rbp),%eax
ffffffff80028846:	48 6b c0 68          	imul   $0x68,%rax,%rax
ffffffff8002884a:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
ffffffff8002884e:	48 8d 0c 10          	lea    (%rax,%rdx,1),%rcx
ffffffff80028852:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff80028856:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
ffffffff8002885a:	48 8b 75 a0          	mov    -0x60(%rbp),%rsi
ffffffff8002885e:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff80028862:	49 89 f8             	mov    %rdi,%r8
ffffffff80028865:	48 89 c7             	mov    %rax,%rdi
ffffffff80028868:	e8 c4 fb ff ff       	call   ffffffff80028431 <ZydisDecodeOperandImplicitMemory>
ffffffff8002886d:	eb 6b                	jmp    ffffffff800288da <ZydisDecodeOperands+0x1b2>
ffffffff8002886f:	0f b6 45 f6          	movzbl -0xa(%rbp),%eax
ffffffff80028873:	48 6b c0 68          	imul   $0x68,%rax,%rax
ffffffff80028877:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
ffffffff8002887b:	48 01 d0             	add    %rdx,%rax
ffffffff8002887e:	c7 40 04 04 00 00 00 	movl   $0x4,0x4(%rax)
ffffffff80028885:	0f b6 45 f6          	movzbl -0xa(%rbp),%eax
ffffffff80028889:	48 6b c0 68          	imul   $0x68,%rax,%rax
ffffffff8002888d:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
ffffffff80028891:	48 01 d0             	add    %rdx,%rax
ffffffff80028894:	66 c7 40 14 08 00    	movw   $0x8,0x14(%rax)
ffffffff8002889a:	0f b6 45 f6          	movzbl -0xa(%rbp),%eax
ffffffff8002889e:	48 6b c0 68          	imul   $0x68,%rax,%rax
ffffffff800288a2:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
ffffffff800288a6:	48 01 d0             	add    %rdx,%rax
ffffffff800288a9:	48 c7 40 60 01 00 00 	movq   $0x1,0x60(%rax)
ffffffff800288b0:	00 
ffffffff800288b1:	0f b6 45 f6          	movzbl -0xa(%rbp),%eax
ffffffff800288b5:	48 6b c0 68          	imul   $0x68,%rax,%rax
ffffffff800288b9:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
ffffffff800288bd:	48 01 d0             	add    %rdx,%rax
ffffffff800288c0:	c6 40 58 00          	movb   $0x0,0x58(%rax)
ffffffff800288c4:	0f b6 45 f6          	movzbl -0xa(%rbp),%eax
ffffffff800288c8:	48 6b c0 68          	imul   $0x68,%rax,%rax
ffffffff800288cc:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
ffffffff800288d0:	48 01 d0             	add    %rdx,%rax
ffffffff800288d3:	c6 40 59 00          	movb   $0x0,0x59(%rax)
ffffffff800288d7:	eb 01                	jmp    ffffffff800288da <ZydisDecodeOperands+0x1b2>
ffffffff800288d9:	90                   	nop
ffffffff800288da:	0f b6 45 f6          	movzbl -0xa(%rbp),%eax
ffffffff800288de:	48 6b c0 68          	imul   $0x68,%rax,%rax
ffffffff800288e2:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
ffffffff800288e6:	48 01 d0             	add    %rdx,%rax
ffffffff800288e9:	8b 40 04             	mov    0x4(%rax),%eax
ffffffff800288ec:	85 c0                	test   %eax,%eax
ffffffff800288ee:	0f 85 96 09 00 00    	jne    ffffffff8002928a <ZydisDecodeOperands+0xb62>
ffffffff800288f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff800288f8:	0f b6 40 09          	movzbl 0x9(%rax),%eax
ffffffff800288fc:	83 e0 3f             	and    $0x3f,%eax
ffffffff800288ff:	0f b6 55 f6          	movzbl -0xa(%rbp),%edx
ffffffff80028903:	48 6b d2 68          	imul   $0x68,%rdx,%rdx
ffffffff80028907:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
ffffffff8002890b:	48 01 ca             	add    %rcx,%rdx
ffffffff8002890e:	0f b6 c0             	movzbl %al,%eax
ffffffff80028911:	89 42 10             	mov    %eax,0x10(%rdx)
ffffffff80028914:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80028918:	0f b6 00             	movzbl (%rax),%eax
ffffffff8002891b:	83 e0 3f             	and    $0x3f,%eax
ffffffff8002891e:	0f b6 c0             	movzbl %al,%eax
ffffffff80028921:	83 e8 04             	sub    $0x4,%eax
ffffffff80028924:	83 f8 12             	cmp    $0x12,%eax
ffffffff80028927:	0f 87 f4 01 00 00    	ja     ffffffff80028b21 <ZydisDecodeOperands+0x3f9>
ffffffff8002892d:	89 c0                	mov    %eax,%eax
ffffffff8002892f:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
ffffffff80028936:	00 
ffffffff80028937:	48 8d 05 9a 6d 01 00 	lea    0x16d9a(%rip),%rax        # ffffffff8003f6d8 <GPR8_MAPPING.0+0xe8>
ffffffff8002893e:	8b 04 02             	mov    (%rdx,%rax,1),%eax
ffffffff80028941:	48 98                	cltq   
ffffffff80028943:	48 8d 15 8e 6d 01 00 	lea    0x16d8e(%rip),%rdx        # ffffffff8003f6d8 <GPR8_MAPPING.0+0xe8>
ffffffff8002894a:	48 01 d0             	add    %rdx,%rax
ffffffff8002894d:	3e ff e0             	notrack jmp *%rax
ffffffff80028950:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%rbp)
ffffffff80028957:	e9 c6 01 00 00       	jmp    ffffffff80028b22 <ZydisDecodeOperands+0x3fa>
ffffffff8002895c:	c7 45 f0 02 00 00 00 	movl   $0x2,-0x10(%rbp)
ffffffff80028963:	e9 ba 01 00 00       	jmp    ffffffff80028b22 <ZydisDecodeOperands+0x3fa>
ffffffff80028968:	c7 45 f0 03 00 00 00 	movl   $0x3,-0x10(%rbp)
ffffffff8002896f:	e9 ae 01 00 00       	jmp    ffffffff80028b22 <ZydisDecodeOperands+0x3fa>
ffffffff80028974:	c7 45 f0 04 00 00 00 	movl   $0x4,-0x10(%rbp)
ffffffff8002897b:	e9 a2 01 00 00       	jmp    ffffffff80028b22 <ZydisDecodeOperands+0x3fa>
ffffffff80028980:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff80028984:	0f b6 40 16          	movzbl 0x16(%rax),%eax
ffffffff80028988:	3c 10                	cmp    $0x10,%al
ffffffff8002898a:	74 16                	je     ffffffff800289a2 <ZydisDecodeOperands+0x27a>
ffffffff8002898c:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff80028990:	0f b6 40 16          	movzbl 0x16(%rax),%eax
ffffffff80028994:	3c 20                	cmp    $0x20,%al
ffffffff80028996:	74 0a                	je     ffffffff800289a2 <ZydisDecodeOperands+0x27a>
ffffffff80028998:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff8002899c:	0f b6 40 16          	movzbl 0x16(%rax),%eax
ffffffff800289a0:	3c 40                	cmp    $0x40,%al
ffffffff800289a2:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff800289a6:	0f b6 40 16          	movzbl 0x16(%rax),%eax
ffffffff800289aa:	3c 10                	cmp    $0x10,%al
ffffffff800289ac:	74 1a                	je     ffffffff800289c8 <ZydisDecodeOperands+0x2a0>
ffffffff800289ae:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff800289b2:	0f b6 40 16          	movzbl 0x16(%rax),%eax
ffffffff800289b6:	3c 20                	cmp    $0x20,%al
ffffffff800289b8:	75 07                	jne    ffffffff800289c1 <ZydisDecodeOperands+0x299>
ffffffff800289ba:	b8 03 00 00 00       	mov    $0x3,%eax
ffffffff800289bf:	eb 0c                	jmp    ffffffff800289cd <ZydisDecodeOperands+0x2a5>
ffffffff800289c1:	b8 04 00 00 00       	mov    $0x4,%eax
ffffffff800289c6:	eb 05                	jmp    ffffffff800289cd <ZydisDecodeOperands+0x2a5>
ffffffff800289c8:	b8 02 00 00 00       	mov    $0x2,%eax
ffffffff800289cd:	89 45 f0             	mov    %eax,-0x10(%rbp)
ffffffff800289d0:	e9 4d 01 00 00       	jmp    ffffffff80028b22 <ZydisDecodeOperands+0x3fa>
ffffffff800289d5:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff800289d9:	0f b6 40 16          	movzbl 0x16(%rax),%eax
ffffffff800289dd:	3c 10                	cmp    $0x10,%al
ffffffff800289df:	74 16                	je     ffffffff800289f7 <ZydisDecodeOperands+0x2cf>
ffffffff800289e1:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff800289e5:	0f b6 40 16          	movzbl 0x16(%rax),%eax
ffffffff800289e9:	3c 20                	cmp    $0x20,%al
ffffffff800289eb:	74 0a                	je     ffffffff800289f7 <ZydisDecodeOperands+0x2cf>
ffffffff800289ed:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff800289f1:	0f b6 40 16          	movzbl 0x16(%rax),%eax
ffffffff800289f5:	3c 40                	cmp    $0x40,%al
ffffffff800289f7:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff800289fb:	0f b6 40 16          	movzbl 0x16(%rax),%eax
ffffffff800289ff:	3c 10                	cmp    $0x10,%al
ffffffff80028a01:	74 1a                	je     ffffffff80028a1d <ZydisDecodeOperands+0x2f5>
ffffffff80028a03:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff80028a07:	0f b6 40 16          	movzbl 0x16(%rax),%eax
ffffffff80028a0b:	3c 20                	cmp    $0x20,%al
ffffffff80028a0d:	75 07                	jne    ffffffff80028a16 <ZydisDecodeOperands+0x2ee>
ffffffff80028a0f:	b8 03 00 00 00       	mov    $0x3,%eax
ffffffff80028a14:	eb 0c                	jmp    ffffffff80028a22 <ZydisDecodeOperands+0x2fa>
ffffffff80028a16:	b8 04 00 00 00       	mov    $0x4,%eax
ffffffff80028a1b:	eb 05                	jmp    ffffffff80028a22 <ZydisDecodeOperands+0x2fa>
ffffffff80028a1d:	b8 03 00 00 00       	mov    $0x3,%eax
ffffffff80028a22:	89 45 f0             	mov    %eax,-0x10(%rbp)
ffffffff80028a25:	e9 f8 00 00 00       	jmp    ffffffff80028b22 <ZydisDecodeOperands+0x3fa>
ffffffff80028a2a:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff80028a2e:	0f b6 40 16          	movzbl 0x16(%rax),%eax
ffffffff80028a32:	3c 10                	cmp    $0x10,%al
ffffffff80028a34:	74 16                	je     ffffffff80028a4c <ZydisDecodeOperands+0x324>
ffffffff80028a36:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff80028a3a:	0f b6 40 16          	movzbl 0x16(%rax),%eax
ffffffff80028a3e:	3c 20                	cmp    $0x20,%al
ffffffff80028a40:	74 0a                	je     ffffffff80028a4c <ZydisDecodeOperands+0x324>
ffffffff80028a42:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff80028a46:	0f b6 40 16          	movzbl 0x16(%rax),%eax
ffffffff80028a4a:	3c 40                	cmp    $0x40,%al
ffffffff80028a4c:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff80028a50:	0f b6 40 16          	movzbl 0x16(%rax),%eax
ffffffff80028a54:	3c 10                	cmp    $0x10,%al
ffffffff80028a56:	75 07                	jne    ffffffff80028a5f <ZydisDecodeOperands+0x337>
ffffffff80028a58:	b8 02 00 00 00       	mov    $0x2,%eax
ffffffff80028a5d:	eb 05                	jmp    ffffffff80028a64 <ZydisDecodeOperands+0x33c>
ffffffff80028a5f:	b8 03 00 00 00       	mov    $0x3,%eax
ffffffff80028a64:	89 45 f0             	mov    %eax,-0x10(%rbp)
ffffffff80028a67:	e9 b6 00 00 00       	jmp    ffffffff80028b22 <ZydisDecodeOperands+0x3fa>
ffffffff80028a6c:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff80028a70:	0f b6 40 17          	movzbl 0x17(%rax),%eax
ffffffff80028a74:	3c 10                	cmp    $0x10,%al
ffffffff80028a76:	74 16                	je     ffffffff80028a8e <ZydisDecodeOperands+0x366>
ffffffff80028a78:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff80028a7c:	0f b6 40 17          	movzbl 0x17(%rax),%eax
ffffffff80028a80:	3c 20                	cmp    $0x20,%al
ffffffff80028a82:	74 0a                	je     ffffffff80028a8e <ZydisDecodeOperands+0x366>
ffffffff80028a84:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff80028a88:	0f b6 40 17          	movzbl 0x17(%rax),%eax
ffffffff80028a8c:	3c 40                	cmp    $0x40,%al
ffffffff80028a8e:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff80028a92:	0f b6 40 17          	movzbl 0x17(%rax),%eax
ffffffff80028a96:	3c 10                	cmp    $0x10,%al
ffffffff80028a98:	74 1a                	je     ffffffff80028ab4 <ZydisDecodeOperands+0x38c>
ffffffff80028a9a:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff80028a9e:	0f b6 40 17          	movzbl 0x17(%rax),%eax
ffffffff80028aa2:	3c 20                	cmp    $0x20,%al
ffffffff80028aa4:	75 07                	jne    ffffffff80028aad <ZydisDecodeOperands+0x385>
ffffffff80028aa6:	b8 03 00 00 00       	mov    $0x3,%eax
ffffffff80028aab:	eb 0c                	jmp    ffffffff80028ab9 <ZydisDecodeOperands+0x391>
ffffffff80028aad:	b8 04 00 00 00       	mov    $0x4,%eax
ffffffff80028ab2:	eb 05                	jmp    ffffffff80028ab9 <ZydisDecodeOperands+0x391>
ffffffff80028ab4:	b8 02 00 00 00       	mov    $0x2,%eax
ffffffff80028ab9:	89 45 f0             	mov    %eax,-0x10(%rbp)
ffffffff80028abc:	eb 64                	jmp    ffffffff80028b22 <ZydisDecodeOperands+0x3fa>
ffffffff80028abe:	c7 45 f0 05 00 00 00 	movl   $0x5,-0x10(%rbp)
ffffffff80028ac5:	eb 5b                	jmp    ffffffff80028b22 <ZydisDecodeOperands+0x3fa>
ffffffff80028ac7:	c7 45 f0 06 00 00 00 	movl   $0x6,-0x10(%rbp)
ffffffff80028ace:	eb 52                	jmp    ffffffff80028b22 <ZydisDecodeOperands+0x3fa>
ffffffff80028ad0:	c7 45 f0 07 00 00 00 	movl   $0x7,-0x10(%rbp)
ffffffff80028ad7:	eb 49                	jmp    ffffffff80028b22 <ZydisDecodeOperands+0x3fa>
ffffffff80028ad9:	c7 45 f0 08 00 00 00 	movl   $0x8,-0x10(%rbp)
ffffffff80028ae0:	eb 40                	jmp    ffffffff80028b22 <ZydisDecodeOperands+0x3fa>
ffffffff80028ae2:	c7 45 f0 09 00 00 00 	movl   $0x9,-0x10(%rbp)
ffffffff80028ae9:	eb 37                	jmp    ffffffff80028b22 <ZydisDecodeOperands+0x3fa>
ffffffff80028aeb:	c7 45 f0 0a 00 00 00 	movl   $0xa,-0x10(%rbp)
ffffffff80028af2:	eb 2e                	jmp    ffffffff80028b22 <ZydisDecodeOperands+0x3fa>
ffffffff80028af4:	c7 45 f0 13 00 00 00 	movl   $0x13,-0x10(%rbp)
ffffffff80028afb:	eb 25                	jmp    ffffffff80028b22 <ZydisDecodeOperands+0x3fa>
ffffffff80028afd:	c7 45 f0 0d 00 00 00 	movl   $0xd,-0x10(%rbp)
ffffffff80028b04:	eb 1c                	jmp    ffffffff80028b22 <ZydisDecodeOperands+0x3fa>
ffffffff80028b06:	c7 45 f0 10 00 00 00 	movl   $0x10,-0x10(%rbp)
ffffffff80028b0d:	eb 13                	jmp    ffffffff80028b22 <ZydisDecodeOperands+0x3fa>
ffffffff80028b0f:	c7 45 f0 11 00 00 00 	movl   $0x11,-0x10(%rbp)
ffffffff80028b16:	eb 0a                	jmp    ffffffff80028b22 <ZydisDecodeOperands+0x3fa>
ffffffff80028b18:	c7 45 f0 12 00 00 00 	movl   $0x12,-0x10(%rbp)
ffffffff80028b1f:	eb 01                	jmp    ffffffff80028b22 <ZydisDecodeOperands+0x3fa>
ffffffff80028b21:	90                   	nop
ffffffff80028b22:	83 7d f0 00          	cmpl   $0x0,-0x10(%rbp)
ffffffff80028b26:	0f 84 6a 02 00 00    	je     ffffffff80028d96 <ZydisDecodeOperands+0x66e>
ffffffff80028b2c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80028b30:	0f b6 40 09          	movzbl 0x9(%rax),%eax
ffffffff80028b34:	83 e0 3f             	and    $0x3f,%eax
ffffffff80028b37:	0f b6 c0             	movzbl %al,%eax
ffffffff80028b3a:	83 f8 06             	cmp    $0x6,%eax
ffffffff80028b3d:	0f 87 01 02 00 00    	ja     ffffffff80028d44 <ZydisDecodeOperands+0x61c>
ffffffff80028b43:	89 c0                	mov    %eax,%eax
ffffffff80028b45:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
ffffffff80028b4c:	00 
ffffffff80028b4d:	48 8d 05 d0 6b 01 00 	lea    0x16bd0(%rip),%rax        # ffffffff8003f724 <GPR8_MAPPING.0+0x134>
ffffffff80028b54:	8b 04 02             	mov    (%rdx,%rax,1),%eax
ffffffff80028b57:	48 98                	cltq   
ffffffff80028b59:	48 8d 15 c4 6b 01 00 	lea    0x16bc4(%rip),%rdx        # ffffffff8003f724 <GPR8_MAPPING.0+0x134>
ffffffff80028b60:	48 01 d0             	add    %rdx,%rax
ffffffff80028b63:	3e ff e0             	notrack jmp *%rax
ffffffff80028b66:	8b 55 f0             	mov    -0x10(%rbp),%edx
ffffffff80028b69:	48 8b 75 98          	mov    -0x68(%rbp),%rsi
ffffffff80028b6d:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff80028b71:	89 d1                	mov    %edx,%ecx
ffffffff80028b73:	ba 02 00 00 00       	mov    $0x2,%edx
ffffffff80028b78:	48 89 c7             	mov    %rax,%rdi
ffffffff80028b7b:	e8 0f ea ff ff       	call   ffffffff8002758f <ZydisCalcRegisterId>
ffffffff80028b80:	0f b6 c0             	movzbl %al,%eax
ffffffff80028b83:	0f b6 55 f6          	movzbl -0xa(%rbp),%edx
ffffffff80028b87:	48 6b d2 68          	imul   $0x68,%rdx,%rdx
ffffffff80028b8b:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
ffffffff80028b8f:	48 8d 34 0a          	lea    (%rdx,%rcx,1),%rsi
ffffffff80028b93:	8b 55 f0             	mov    -0x10(%rbp),%edx
ffffffff80028b96:	48 8b 7d 98          	mov    -0x68(%rbp),%rdi
ffffffff80028b9a:	89 c1                	mov    %eax,%ecx
ffffffff80028b9c:	e8 75 f1 ff ff       	call   ffffffff80027d16 <ZydisDecodeOperandRegister>
ffffffff80028ba1:	89 45 b8             	mov    %eax,-0x48(%rbp)
ffffffff80028ba4:	8b 45 b8             	mov    -0x48(%rbp),%eax
ffffffff80028ba7:	85 c0                	test   %eax,%eax
ffffffff80028ba9:	0f 89 97 01 00 00    	jns    ffffffff80028d46 <ZydisDecodeOperands+0x61e>
ffffffff80028baf:	8b 45 b8             	mov    -0x48(%rbp),%eax
ffffffff80028bb2:	e9 ec 09 00 00       	jmp    ffffffff800295a3 <ZydisDecodeOperands+0xe7b>
ffffffff80028bb7:	8b 55 f0             	mov    -0x10(%rbp),%edx
ffffffff80028bba:	48 8b 75 98          	mov    -0x68(%rbp),%rsi
ffffffff80028bbe:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff80028bc2:	89 d1                	mov    %edx,%ecx
ffffffff80028bc4:	ba 04 00 00 00       	mov    $0x4,%edx
ffffffff80028bc9:	48 89 c7             	mov    %rax,%rdi
ffffffff80028bcc:	e8 be e9 ff ff       	call   ffffffff8002758f <ZydisCalcRegisterId>
ffffffff80028bd1:	0f b6 c0             	movzbl %al,%eax
ffffffff80028bd4:	0f b6 55 f6          	movzbl -0xa(%rbp),%edx
ffffffff80028bd8:	48 6b d2 68          	imul   $0x68,%rdx,%rdx
ffffffff80028bdc:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
ffffffff80028be0:	48 8d 34 0a          	lea    (%rdx,%rcx,1),%rsi
ffffffff80028be4:	8b 55 f0             	mov    -0x10(%rbp),%edx
ffffffff80028be7:	48 8b 7d 98          	mov    -0x68(%rbp),%rdi
ffffffff80028beb:	89 c1                	mov    %eax,%ecx
ffffffff80028bed:	e8 24 f1 ff ff       	call   ffffffff80027d16 <ZydisDecodeOperandRegister>
ffffffff80028bf2:	89 45 bc             	mov    %eax,-0x44(%rbp)
ffffffff80028bf5:	8b 45 bc             	mov    -0x44(%rbp),%eax
ffffffff80028bf8:	85 c0                	test   %eax,%eax
ffffffff80028bfa:	0f 89 49 01 00 00    	jns    ffffffff80028d49 <ZydisDecodeOperands+0x621>
ffffffff80028c00:	8b 45 bc             	mov    -0x44(%rbp),%eax
ffffffff80028c03:	e9 9b 09 00 00       	jmp    ffffffff800295a3 <ZydisDecodeOperands+0xe7b>
ffffffff80028c08:	8b 55 f0             	mov    -0x10(%rbp),%edx
ffffffff80028c0b:	48 8b 75 98          	mov    -0x68(%rbp),%rsi
ffffffff80028c0f:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff80028c13:	89 d1                	mov    %edx,%ecx
ffffffff80028c15:	ba 01 00 00 00       	mov    $0x1,%edx
ffffffff80028c1a:	48 89 c7             	mov    %rax,%rdi
ffffffff80028c1d:	e8 6d e9 ff ff       	call   ffffffff8002758f <ZydisCalcRegisterId>
ffffffff80028c22:	0f b6 c0             	movzbl %al,%eax
ffffffff80028c25:	0f b6 55 f6          	movzbl -0xa(%rbp),%edx
ffffffff80028c29:	48 6b d2 68          	imul   $0x68,%rdx,%rdx
ffffffff80028c2d:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
ffffffff80028c31:	48 8d 34 0a          	lea    (%rdx,%rcx,1),%rsi
ffffffff80028c35:	8b 55 f0             	mov    -0x10(%rbp),%edx
ffffffff80028c38:	48 8b 7d 98          	mov    -0x68(%rbp),%rdi
ffffffff80028c3c:	89 c1                	mov    %eax,%ecx
ffffffff80028c3e:	e8 d3 f0 ff ff       	call   ffffffff80027d16 <ZydisDecodeOperandRegister>
ffffffff80028c43:	89 45 c0             	mov    %eax,-0x40(%rbp)
ffffffff80028c46:	8b 45 c0             	mov    -0x40(%rbp),%eax
ffffffff80028c49:	85 c0                	test   %eax,%eax
ffffffff80028c4b:	0f 89 fb 00 00 00    	jns    ffffffff80028d4c <ZydisDecodeOperands+0x624>
ffffffff80028c51:	8b 45 c0             	mov    -0x40(%rbp),%eax
ffffffff80028c54:	e9 4a 09 00 00       	jmp    ffffffff800295a3 <ZydisDecodeOperands+0xe7b>
ffffffff80028c59:	8b 55 f0             	mov    -0x10(%rbp),%edx
ffffffff80028c5c:	48 8b 75 98          	mov    -0x68(%rbp),%rsi
ffffffff80028c60:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff80028c64:	89 d1                	mov    %edx,%ecx
ffffffff80028c66:	ba 03 00 00 00       	mov    $0x3,%edx
ffffffff80028c6b:	48 89 c7             	mov    %rax,%rdi
ffffffff80028c6e:	e8 1c e9 ff ff       	call   ffffffff8002758f <ZydisCalcRegisterId>
ffffffff80028c73:	0f b6 c0             	movzbl %al,%eax
ffffffff80028c76:	0f b6 55 f6          	movzbl -0xa(%rbp),%edx
ffffffff80028c7a:	48 6b d2 68          	imul   $0x68,%rdx,%rdx
ffffffff80028c7e:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
ffffffff80028c82:	48 8d 34 0a          	lea    (%rdx,%rcx,1),%rsi
ffffffff80028c86:	8b 55 f0             	mov    -0x10(%rbp),%edx
ffffffff80028c89:	48 8b 7d 98          	mov    -0x68(%rbp),%rdi
ffffffff80028c8d:	89 c1                	mov    %eax,%ecx
ffffffff80028c8f:	e8 82 f0 ff ff       	call   ffffffff80027d16 <ZydisDecodeOperandRegister>
ffffffff80028c94:	89 45 c4             	mov    %eax,-0x3c(%rbp)
ffffffff80028c97:	8b 45 c4             	mov    -0x3c(%rbp),%eax
ffffffff80028c9a:	85 c0                	test   %eax,%eax
ffffffff80028c9c:	0f 89 ad 00 00 00    	jns    ffffffff80028d4f <ZydisDecodeOperands+0x627>
ffffffff80028ca2:	8b 45 c4             	mov    -0x3c(%rbp),%eax
ffffffff80028ca5:	e9 f9 08 00 00       	jmp    ffffffff800295a3 <ZydisDecodeOperands+0xe7b>
ffffffff80028caa:	8b 55 f0             	mov    -0x10(%rbp),%edx
ffffffff80028cad:	48 8b 75 98          	mov    -0x68(%rbp),%rsi
ffffffff80028cb1:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff80028cb5:	89 d1                	mov    %edx,%ecx
ffffffff80028cb7:	ba 09 00 00 00       	mov    $0x9,%edx
ffffffff80028cbc:	48 89 c7             	mov    %rax,%rdi
ffffffff80028cbf:	e8 cb e8 ff ff       	call   ffffffff8002758f <ZydisCalcRegisterId>
ffffffff80028cc4:	0f b6 c0             	movzbl %al,%eax
ffffffff80028cc7:	0f b6 55 f6          	movzbl -0xa(%rbp),%edx
ffffffff80028ccb:	48 6b d2 68          	imul   $0x68,%rdx,%rdx
ffffffff80028ccf:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
ffffffff80028cd3:	48 8d 34 0a          	lea    (%rdx,%rcx,1),%rsi
ffffffff80028cd7:	8b 55 f0             	mov    -0x10(%rbp),%edx
ffffffff80028cda:	48 8b 7d 98          	mov    -0x68(%rbp),%rdi
ffffffff80028cde:	89 c1                	mov    %eax,%ecx
ffffffff80028ce0:	e8 31 f0 ff ff       	call   ffffffff80027d16 <ZydisDecodeOperandRegister>
ffffffff80028ce5:	89 45 cc             	mov    %eax,-0x34(%rbp)
ffffffff80028ce8:	8b 45 cc             	mov    -0x34(%rbp),%eax
ffffffff80028ceb:	85 c0                	test   %eax,%eax
ffffffff80028ced:	79 63                	jns    ffffffff80028d52 <ZydisDecodeOperands+0x62a>
ffffffff80028cef:	8b 45 cc             	mov    -0x34(%rbp),%eax
ffffffff80028cf2:	e9 ac 08 00 00       	jmp    ffffffff800295a3 <ZydisDecodeOperands+0xe7b>
ffffffff80028cf7:	8b 55 f0             	mov    -0x10(%rbp),%edx
ffffffff80028cfa:	48 8b 75 98          	mov    -0x68(%rbp),%rsi
ffffffff80028cfe:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff80028d02:	89 d1                	mov    %edx,%ecx
ffffffff80028d04:	ba 08 00 00 00       	mov    $0x8,%edx
ffffffff80028d09:	48 89 c7             	mov    %rax,%rdi
ffffffff80028d0c:	e8 7e e8 ff ff       	call   ffffffff8002758f <ZydisCalcRegisterId>
ffffffff80028d11:	0f b6 c0             	movzbl %al,%eax
ffffffff80028d14:	0f b6 55 f6          	movzbl -0xa(%rbp),%edx
ffffffff80028d18:	48 6b d2 68          	imul   $0x68,%rdx,%rdx
ffffffff80028d1c:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
ffffffff80028d20:	48 8d 34 0a          	lea    (%rdx,%rcx,1),%rsi
ffffffff80028d24:	8b 55 f0             	mov    -0x10(%rbp),%edx
ffffffff80028d27:	48 8b 7d 98          	mov    -0x68(%rbp),%rdi
ffffffff80028d2b:	89 c1                	mov    %eax,%ecx
ffffffff80028d2d:	e8 e4 ef ff ff       	call   ffffffff80027d16 <ZydisDecodeOperandRegister>
ffffffff80028d32:	89 45 c8             	mov    %eax,-0x38(%rbp)
ffffffff80028d35:	8b 45 c8             	mov    -0x38(%rbp),%eax
ffffffff80028d38:	85 c0                	test   %eax,%eax
ffffffff80028d3a:	79 19                	jns    ffffffff80028d55 <ZydisDecodeOperands+0x62d>
ffffffff80028d3c:	8b 45 c8             	mov    -0x38(%rbp),%eax
ffffffff80028d3f:	e9 5f 08 00 00       	jmp    ffffffff800295a3 <ZydisDecodeOperands+0xe7b>
ffffffff80028d44:	eb fe                	jmp    ffffffff80028d44 <ZydisDecodeOperands+0x61c>
ffffffff80028d46:	90                   	nop
ffffffff80028d47:	eb 0d                	jmp    ffffffff80028d56 <ZydisDecodeOperands+0x62e>
ffffffff80028d49:	90                   	nop
ffffffff80028d4a:	eb 0a                	jmp    ffffffff80028d56 <ZydisDecodeOperands+0x62e>
ffffffff80028d4c:	90                   	nop
ffffffff80028d4d:	eb 07                	jmp    ffffffff80028d56 <ZydisDecodeOperands+0x62e>
ffffffff80028d4f:	90                   	nop
ffffffff80028d50:	eb 04                	jmp    ffffffff80028d56 <ZydisDecodeOperands+0x62e>
ffffffff80028d52:	90                   	nop
ffffffff80028d53:	eb 01                	jmp    ffffffff80028d56 <ZydisDecodeOperands+0x62e>
ffffffff80028d55:	90                   	nop
ffffffff80028d56:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80028d5a:	0f b6 40 0c          	movzbl 0xc(%rax),%eax
ffffffff80028d5e:	83 e0 01             	and    $0x1,%eax
ffffffff80028d61:	84 c0                	test   %al,%al
ffffffff80028d63:	0f 84 24 05 00 00    	je     ffffffff8002928d <ZydisDecodeOperands+0xb65>
ffffffff80028d69:	0f b6 45 f6          	movzbl -0xa(%rbp),%eax
ffffffff80028d6d:	48 6b c0 68          	imul   $0x68,%rax,%rax
ffffffff80028d71:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
ffffffff80028d75:	48 01 d0             	add    %rdx,%rax
ffffffff80028d78:	0f b6 40 20          	movzbl 0x20(%rax),%eax
ffffffff80028d7c:	0f b6 55 f6          	movzbl -0xa(%rbp),%edx
ffffffff80028d80:	48 6b d2 68          	imul   $0x68,%rdx,%rdx
ffffffff80028d84:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
ffffffff80028d88:	48 01 ca             	add    %rcx,%rdx
ffffffff80028d8b:	83 c8 01             	or     $0x1,%eax
ffffffff80028d8e:	88 42 20             	mov    %al,0x20(%rdx)
ffffffff80028d91:	e9 f7 04 00 00       	jmp    ffffffff8002928d <ZydisDecodeOperands+0xb65>
ffffffff80028d96:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80028d9a:	0f b6 00             	movzbl (%rax),%eax
ffffffff80028d9d:	83 e0 3f             	and    $0x3f,%eax
ffffffff80028da0:	0f b6 c0             	movzbl %al,%eax
ffffffff80028da3:	83 e8 17             	sub    $0x17,%eax
ffffffff80028da6:	83 f8 09             	cmp    $0x9,%eax
ffffffff80028da9:	0f 87 e6 02 00 00    	ja     ffffffff80029095 <ZydisDecodeOperands+0x96d>
ffffffff80028daf:	89 c0                	mov    %eax,%eax
ffffffff80028db1:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
ffffffff80028db8:	00 
ffffffff80028db9:	48 8d 05 80 69 01 00 	lea    0x16980(%rip),%rax        # ffffffff8003f740 <GPR8_MAPPING.0+0x150>
ffffffff80028dc0:	8b 04 02             	mov    (%rdx,%rax,1),%eax
ffffffff80028dc3:	48 98                	cltq   
ffffffff80028dc5:	48 8d 15 74 69 01 00 	lea    0x16974(%rip),%rdx        # ffffffff8003f740 <GPR8_MAPPING.0+0x150>
ffffffff80028dcc:	48 01 d0             	add    %rdx,%rax
ffffffff80028dcf:	3e ff e0             	notrack jmp *%rax
ffffffff80028dd2:	0f b6 45 f6          	movzbl -0xa(%rbp),%eax
ffffffff80028dd6:	48 6b c0 68          	imul   $0x68,%rax,%rax
ffffffff80028dda:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
ffffffff80028dde:	48 01 c2             	add    %rax,%rdx
ffffffff80028de1:	48 8b 75 98          	mov    -0x68(%rbp),%rsi
ffffffff80028de5:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff80028de9:	b9 00 00 00 00       	mov    $0x0,%ecx
ffffffff80028dee:	48 89 c7             	mov    %rax,%rdi
ffffffff80028df1:	e8 a5 ef ff ff       	call   ffffffff80027d9b <ZydisDecodeOperandMemory>
ffffffff80028df6:	89 45 d0             	mov    %eax,-0x30(%rbp)
ffffffff80028df9:	8b 45 d0             	mov    -0x30(%rbp),%eax
ffffffff80028dfc:	85 c0                	test   %eax,%eax
ffffffff80028dfe:	0f 89 94 02 00 00    	jns    ffffffff80029098 <ZydisDecodeOperands+0x970>
ffffffff80028e04:	8b 45 d0             	mov    -0x30(%rbp),%eax
ffffffff80028e07:	e9 97 07 00 00       	jmp    ffffffff800295a3 <ZydisDecodeOperands+0xe7b>
ffffffff80028e0c:	0f b6 45 f6          	movzbl -0xa(%rbp),%eax
ffffffff80028e10:	48 6b c0 68          	imul   $0x68,%rax,%rax
ffffffff80028e14:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
ffffffff80028e18:	48 01 c2             	add    %rax,%rdx
ffffffff80028e1b:	48 8b 75 98          	mov    -0x68(%rbp),%rsi
ffffffff80028e1f:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff80028e23:	b9 07 00 00 00       	mov    $0x7,%ecx
ffffffff80028e28:	48 89 c7             	mov    %rax,%rdi
ffffffff80028e2b:	e8 6b ef ff ff       	call   ffffffff80027d9b <ZydisDecodeOperandMemory>
ffffffff80028e30:	89 45 d4             	mov    %eax,-0x2c(%rbp)
ffffffff80028e33:	8b 45 d4             	mov    -0x2c(%rbp),%eax
ffffffff80028e36:	85 c0                	test   %eax,%eax
ffffffff80028e38:	79 08                	jns    ffffffff80028e42 <ZydisDecodeOperands+0x71a>
ffffffff80028e3a:	8b 45 d4             	mov    -0x2c(%rbp),%eax
ffffffff80028e3d:	e9 61 07 00 00       	jmp    ffffffff800295a3 <ZydisDecodeOperands+0xe7b>
ffffffff80028e42:	0f b6 45 f6          	movzbl -0xa(%rbp),%eax
ffffffff80028e46:	48 6b c0 68          	imul   $0x68,%rax,%rax
ffffffff80028e4a:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
ffffffff80028e4e:	48 01 d0             	add    %rdx,%rax
ffffffff80028e51:	c7 40 28 04 00 00 00 	movl   $0x4,0x28(%rax)
ffffffff80028e58:	e9 3c 02 00 00       	jmp    ffffffff80029099 <ZydisDecodeOperands+0x971>
ffffffff80028e5d:	0f b6 45 f6          	movzbl -0xa(%rbp),%eax
ffffffff80028e61:	48 6b c0 68          	imul   $0x68,%rax,%rax
ffffffff80028e65:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
ffffffff80028e69:	48 01 c2             	add    %rax,%rdx
ffffffff80028e6c:	48 8b 75 98          	mov    -0x68(%rbp),%rsi
ffffffff80028e70:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff80028e74:	b9 08 00 00 00       	mov    $0x8,%ecx
ffffffff80028e79:	48 89 c7             	mov    %rax,%rdi
ffffffff80028e7c:	e8 1a ef ff ff       	call   ffffffff80027d9b <ZydisDecodeOperandMemory>
ffffffff80028e81:	89 45 d8             	mov    %eax,-0x28(%rbp)
ffffffff80028e84:	8b 45 d8             	mov    -0x28(%rbp),%eax
ffffffff80028e87:	85 c0                	test   %eax,%eax
ffffffff80028e89:	79 08                	jns    ffffffff80028e93 <ZydisDecodeOperands+0x76b>
ffffffff80028e8b:	8b 45 d8             	mov    -0x28(%rbp),%eax
ffffffff80028e8e:	e9 10 07 00 00       	jmp    ffffffff800295a3 <ZydisDecodeOperands+0xe7b>
ffffffff80028e93:	0f b6 45 f6          	movzbl -0xa(%rbp),%eax
ffffffff80028e97:	48 6b c0 68          	imul   $0x68,%rax,%rax
ffffffff80028e9b:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
ffffffff80028e9f:	48 01 d0             	add    %rdx,%rax
ffffffff80028ea2:	c7 40 28 04 00 00 00 	movl   $0x4,0x28(%rax)
ffffffff80028ea9:	e9 eb 01 00 00       	jmp    ffffffff80029099 <ZydisDecodeOperands+0x971>
ffffffff80028eae:	0f b6 45 f6          	movzbl -0xa(%rbp),%eax
ffffffff80028eb2:	48 6b c0 68          	imul   $0x68,%rax,%rax
ffffffff80028eb6:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
ffffffff80028eba:	48 01 c2             	add    %rax,%rdx
ffffffff80028ebd:	48 8b 75 98          	mov    -0x68(%rbp),%rsi
ffffffff80028ec1:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff80028ec5:	b9 09 00 00 00       	mov    $0x9,%ecx
ffffffff80028eca:	48 89 c7             	mov    %rax,%rdi
ffffffff80028ecd:	e8 c9 ee ff ff       	call   ffffffff80027d9b <ZydisDecodeOperandMemory>
ffffffff80028ed2:	89 45 dc             	mov    %eax,-0x24(%rbp)
ffffffff80028ed5:	8b 45 dc             	mov    -0x24(%rbp),%eax
ffffffff80028ed8:	85 c0                	test   %eax,%eax
ffffffff80028eda:	79 08                	jns    ffffffff80028ee4 <ZydisDecodeOperands+0x7bc>
ffffffff80028edc:	8b 45 dc             	mov    -0x24(%rbp),%eax
ffffffff80028edf:	e9 bf 06 00 00       	jmp    ffffffff800295a3 <ZydisDecodeOperands+0xe7b>
ffffffff80028ee4:	0f b6 45 f6          	movzbl -0xa(%rbp),%eax
ffffffff80028ee8:	48 6b c0 68          	imul   $0x68,%rax,%rax
ffffffff80028eec:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
ffffffff80028ef0:	48 01 d0             	add    %rdx,%rax
ffffffff80028ef3:	c7 40 28 04 00 00 00 	movl   $0x4,0x28(%rax)
ffffffff80028efa:	e9 9a 01 00 00       	jmp    ffffffff80029099 <ZydisDecodeOperands+0x971>
ffffffff80028eff:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff80028f03:	0f b6 80 48 01 00 00 	movzbl 0x148(%rax),%eax
ffffffff80028f0a:	3c 10                	cmp    $0x10,%al
ffffffff80028f0c:	74 0d                	je     ffffffff80028f1b <ZydisDecodeOperands+0x7f3>
ffffffff80028f0e:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff80028f12:	0f b6 80 48 01 00 00 	movzbl 0x148(%rax),%eax
ffffffff80028f19:	3c 20                	cmp    $0x20,%al
ffffffff80028f1b:	0f b6 45 f6          	movzbl -0xa(%rbp),%eax
ffffffff80028f1f:	48 6b c0 68          	imul   $0x68,%rax,%rax
ffffffff80028f23:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
ffffffff80028f27:	48 01 d0             	add    %rdx,%rax
ffffffff80028f2a:	c7 40 04 03 00 00 00 	movl   $0x3,0x4(%rax)
ffffffff80028f31:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff80028f35:	48 8b 90 40 01 00 00 	mov    0x140(%rax),%rdx
ffffffff80028f3c:	0f b6 45 f6          	movzbl -0xa(%rbp),%eax
ffffffff80028f40:	48 6b c0 68          	imul   $0x68,%rax,%rax
ffffffff80028f44:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
ffffffff80028f48:	48 01 c8             	add    %rcx,%rax
ffffffff80028f4b:	89 50 54             	mov    %edx,0x54(%rax)
ffffffff80028f4e:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff80028f52:	48 8b 90 58 01 00 00 	mov    0x158(%rax),%rdx
ffffffff80028f59:	0f b6 45 f6          	movzbl -0xa(%rbp),%eax
ffffffff80028f5d:	48 6b c0 68          	imul   $0x68,%rax,%rax
ffffffff80028f61:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
ffffffff80028f65:	48 01 c8             	add    %rcx,%rax
ffffffff80028f68:	66 89 50 50          	mov    %dx,0x50(%rax)
ffffffff80028f6c:	e9 28 01 00 00       	jmp    ffffffff80029099 <ZydisDecodeOperands+0x971>
ffffffff80028f71:	0f b6 45 f6          	movzbl -0xa(%rbp),%eax
ffffffff80028f75:	48 6b c0 68          	imul   $0x68,%rax,%rax
ffffffff80028f79:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
ffffffff80028f7d:	48 01 d0             	add    %rdx,%rax
ffffffff80028f80:	c6 40 0c 00          	movb   $0x0,0xc(%rax)
ffffffff80028f84:	0f b6 45 f6          	movzbl -0xa(%rbp),%eax
ffffffff80028f88:	48 6b c0 68          	imul   $0x68,%rax,%rax
ffffffff80028f8c:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
ffffffff80028f90:	48 01 c2             	add    %rax,%rdx
ffffffff80028f93:	48 8b 75 98          	mov    -0x68(%rbp),%rsi
ffffffff80028f97:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff80028f9b:	b9 00 00 00 00       	mov    $0x0,%ecx
ffffffff80028fa0:	48 89 c7             	mov    %rax,%rdi
ffffffff80028fa3:	e8 f3 ed ff ff       	call   ffffffff80027d9b <ZydisDecodeOperandMemory>
ffffffff80028fa8:	89 45 e0             	mov    %eax,-0x20(%rbp)
ffffffff80028fab:	8b 45 e0             	mov    -0x20(%rbp),%eax
ffffffff80028fae:	85 c0                	test   %eax,%eax
ffffffff80028fb0:	79 08                	jns    ffffffff80028fba <ZydisDecodeOperands+0x892>
ffffffff80028fb2:	8b 45 e0             	mov    -0x20(%rbp),%eax
ffffffff80028fb5:	e9 e9 05 00 00       	jmp    ffffffff800295a3 <ZydisDecodeOperands+0xe7b>
ffffffff80028fba:	0f b6 45 f6          	movzbl -0xa(%rbp),%eax
ffffffff80028fbe:	48 6b c0 68          	imul   $0x68,%rax,%rax
ffffffff80028fc2:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
ffffffff80028fc6:	48 01 d0             	add    %rdx,%rax
ffffffff80028fc9:	c7 40 28 02 00 00 00 	movl   $0x2,0x28(%rax)
ffffffff80028fd0:	e9 c4 00 00 00       	jmp    ffffffff80029099 <ZydisDecodeOperands+0x971>
ffffffff80028fd5:	0f b6 45 f6          	movzbl -0xa(%rbp),%eax
ffffffff80028fd9:	48 6b c0 68          	imul   $0x68,%rax,%rax
ffffffff80028fdd:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
ffffffff80028fe1:	48 01 d0             	add    %rdx,%rax
ffffffff80028fe4:	c7 40 04 02 00 00 00 	movl   $0x2,0x4(%rax)
ffffffff80028feb:	0f b6 45 f6          	movzbl -0xa(%rbp),%eax
ffffffff80028fef:	48 6b c0 68          	imul   $0x68,%rax,%rax
ffffffff80028ff3:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
ffffffff80028ff7:	48 01 d0             	add    %rdx,%rax
ffffffff80028ffa:	c7 40 28 01 00 00 00 	movl   $0x1,0x28(%rax)
ffffffff80029001:	0f b6 45 f6          	movzbl -0xa(%rbp),%eax
ffffffff80029005:	48 6b c0 68          	imul   $0x68,%rax,%rax
ffffffff80029009:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
ffffffff8002900d:	48 01 d0             	add    %rdx,%rax
ffffffff80029010:	c6 40 40 01          	movb   $0x1,0x40(%rax)
ffffffff80029014:	0f b6 45 f6          	movzbl -0xa(%rbp),%eax
ffffffff80029018:	48 6b c0 68          	imul   $0x68,%rax,%rax
ffffffff8002901c:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
ffffffff80029020:	48 01 d0             	add    %rdx,%rax
ffffffff80029023:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
ffffffff80029027:	48 8b 92 28 01 00 00 	mov    0x128(%rdx),%rdx
ffffffff8002902e:	48 89 50 48          	mov    %rdx,0x48(%rax)
ffffffff80029032:	eb 65                	jmp    ffffffff80029099 <ZydisDecodeOperands+0x971>
ffffffff80029034:	0f b6 45 f6          	movzbl -0xa(%rbp),%eax
ffffffff80029038:	48 6b c0 68          	imul   $0x68,%rax,%rax
ffffffff8002903c:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
ffffffff80029040:	48 01 d0             	add    %rdx,%rax
ffffffff80029043:	c6 40 0c 00          	movb   $0x0,0xc(%rax)
ffffffff80029047:	0f b6 45 f6          	movzbl -0xa(%rbp),%eax
ffffffff8002904b:	48 6b c0 68          	imul   $0x68,%rax,%rax
ffffffff8002904f:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
ffffffff80029053:	48 01 c2             	add    %rax,%rdx
ffffffff80029056:	48 8b 75 98          	mov    -0x68(%rbp),%rsi
ffffffff8002905a:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff8002905e:	b9 00 00 00 00       	mov    $0x0,%ecx
ffffffff80029063:	48 89 c7             	mov    %rax,%rdi
ffffffff80029066:	e8 30 ed ff ff       	call   ffffffff80027d9b <ZydisDecodeOperandMemory>
ffffffff8002906b:	89 45 e4             	mov    %eax,-0x1c(%rbp)
ffffffff8002906e:	8b 45 e4             	mov    -0x1c(%rbp),%eax
ffffffff80029071:	85 c0                	test   %eax,%eax
ffffffff80029073:	79 08                	jns    ffffffff8002907d <ZydisDecodeOperands+0x955>
ffffffff80029075:	8b 45 e4             	mov    -0x1c(%rbp),%eax
ffffffff80029078:	e9 26 05 00 00       	jmp    ffffffff800295a3 <ZydisDecodeOperands+0xe7b>
ffffffff8002907d:	0f b6 45 f6          	movzbl -0xa(%rbp),%eax
ffffffff80029081:	48 6b c0 68          	imul   $0x68,%rax,%rax
ffffffff80029085:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
ffffffff80029089:	48 01 d0             	add    %rdx,%rax
ffffffff8002908c:	c7 40 28 03 00 00 00 	movl   $0x3,0x28(%rax)
ffffffff80029093:	eb 04                	jmp    ffffffff80029099 <ZydisDecodeOperands+0x971>
ffffffff80029095:	90                   	nop
ffffffff80029096:	eb 01                	jmp    ffffffff80029099 <ZydisDecodeOperands+0x971>
ffffffff80029098:	90                   	nop
ffffffff80029099:	0f b6 45 f6          	movzbl -0xa(%rbp),%eax
ffffffff8002909d:	48 6b c0 68          	imul   $0x68,%rax,%rax
ffffffff800290a1:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
ffffffff800290a5:	48 01 d0             	add    %rdx,%rax
ffffffff800290a8:	8b 40 04             	mov    0x4(%rax),%eax
ffffffff800290ab:	85 c0                	test   %eax,%eax
ffffffff800290ad:	74 69                	je     ffffffff80029118 <ZydisDecodeOperands+0x9f0>
ffffffff800290af:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff800290b3:	8b 40 0c             	mov    0xc(%rax),%eax
ffffffff800290b6:	83 f8 04             	cmp    $0x4,%eax
ffffffff800290b9:	74 10                	je     ffffffff800290cb <ZydisDecodeOperands+0x9a3>
ffffffff800290bb:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff800290bf:	8b 40 0c             	mov    0xc(%rax),%eax
ffffffff800290c2:	83 f8 05             	cmp    $0x5,%eax
ffffffff800290c5:	0f 85 c5 01 00 00    	jne    ffffffff80029290 <ZydisDecodeOperands+0xb68>
ffffffff800290cb:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff800290cf:	0f b6 80 30 01 00 00 	movzbl 0x130(%rax),%eax
ffffffff800290d6:	3c 08                	cmp    $0x8,%al
ffffffff800290d8:	0f 85 b2 01 00 00    	jne    ffffffff80029290 <ZydisDecodeOperands+0xb68>
ffffffff800290de:	0f b6 45 f6          	movzbl -0xa(%rbp),%eax
ffffffff800290e2:	48 6b c0 68          	imul   $0x68,%rax,%rax
ffffffff800290e6:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
ffffffff800290ea:	48 01 d0             	add    %rdx,%rax
ffffffff800290ed:	48 8b 48 48          	mov    0x48(%rax),%rcx
ffffffff800290f1:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff800290f5:	0f b6 40 1d          	movzbl 0x1d(%rax),%eax
ffffffff800290f9:	0f b6 c0             	movzbl %al,%eax
ffffffff800290fc:	0f b6 55 f6          	movzbl -0xa(%rbp),%edx
ffffffff80029100:	48 6b d2 68          	imul   $0x68,%rdx,%rdx
ffffffff80029104:	48 8b 75 90          	mov    -0x70(%rbp),%rsi
ffffffff80029108:	48 01 f2             	add    %rsi,%rdx
ffffffff8002910b:	48 0f af c1          	imul   %rcx,%rax
ffffffff8002910f:	48 89 42 48          	mov    %rax,0x48(%rdx)
ffffffff80029113:	e9 78 01 00 00       	jmp    ffffffff80029290 <ZydisDecodeOperands+0xb68>
ffffffff80029118:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8002911c:	0f b6 00             	movzbl (%rax),%eax
ffffffff8002911f:	83 e0 3f             	and    $0x3f,%eax
ffffffff80029122:	0f b6 c0             	movzbl %al,%eax
ffffffff80029125:	83 f8 1b             	cmp    $0x1b,%eax
ffffffff80029128:	74 09                	je     ffffffff80029133 <ZydisDecodeOperands+0xa0b>
ffffffff8002912a:	83 f8 1c             	cmp    $0x1c,%eax
ffffffff8002912d:	0f 85 60 01 00 00    	jne    ffffffff80029293 <ZydisDecodeOperands+0xb6b>
ffffffff80029133:	80 7d f7 00          	cmpb   $0x0,-0x9(%rbp)
ffffffff80029137:	74 04                	je     ffffffff8002913d <ZydisDecodeOperands+0xa15>
ffffffff80029139:	80 7d f7 01          	cmpb   $0x1,-0x9(%rbp)
ffffffff8002913d:	0f b6 45 f6          	movzbl -0xa(%rbp),%eax
ffffffff80029141:	48 6b c0 68          	imul   $0x68,%rax,%rax
ffffffff80029145:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
ffffffff80029149:	48 01 d0             	add    %rdx,%rax
ffffffff8002914c:	c7 40 04 04 00 00 00 	movl   $0x4,0x4(%rax)
ffffffff80029153:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff80029157:	0f b6 40 08          	movzbl 0x8(%rax),%eax
ffffffff8002915b:	0f b6 c0             	movzbl %al,%eax
ffffffff8002915e:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff80029162:	48 98                	cltq   
ffffffff80029164:	0f b7 54 42 02       	movzwl 0x2(%rdx,%rax,2),%edx
ffffffff80029169:	0f b6 45 f6          	movzbl -0xa(%rbp),%eax
ffffffff8002916d:	48 6b c0 68          	imul   $0x68,%rax,%rax
ffffffff80029171:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
ffffffff80029175:	48 01 c8             	add    %rcx,%rax
ffffffff80029178:	c1 e2 03             	shl    $0x3,%edx
ffffffff8002917b:	66 89 50 14          	mov    %dx,0x14(%rax)
ffffffff8002917f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80029183:	0f b6 40 09          	movzbl 0x9(%rax),%eax
ffffffff80029187:	83 e0 3f             	and    $0x3f,%eax
ffffffff8002918a:	3c 05                	cmp    $0x5,%al
ffffffff8002918c:	75 53                	jne    ffffffff800291e1 <ZydisDecodeOperands+0xab9>
ffffffff8002918e:	0f b6 45 f7          	movzbl -0x9(%rbp),%eax
ffffffff80029192:	48 63 d0             	movslq %eax,%rdx
ffffffff80029195:	48 89 d0             	mov    %rdx,%rax
ffffffff80029198:	48 01 c0             	add    %rax,%rax
ffffffff8002919b:	48 01 d0             	add    %rdx,%rax
ffffffff8002919e:	48 c1 e0 03          	shl    $0x3,%rax
ffffffff800291a2:	0f b6 45 f7          	movzbl -0x9(%rbp),%eax
ffffffff800291a6:	48 8b 4d 98          	mov    -0x68(%rbp),%rcx
ffffffff800291aa:	48 63 d0             	movslq %eax,%rdx
ffffffff800291ad:	48 89 d0             	mov    %rdx,%rax
ffffffff800291b0:	48 01 c0             	add    %rax,%rax
ffffffff800291b3:	48 01 d0             	add    %rdx,%rax
ffffffff800291b6:	48 c1 e0 03          	shl    $0x3,%rax
ffffffff800291ba:	48 01 c8             	add    %rcx,%rax
ffffffff800291bd:	48 05 40 01 00 00    	add    $0x140,%rax
ffffffff800291c3:	48 8b 00             	mov    (%rax),%rax
ffffffff800291c6:	0f b6 d0             	movzbl %al,%edx
ffffffff800291c9:	0f b6 45 f6          	movzbl -0xa(%rbp),%eax
ffffffff800291cd:	48 6b c0 68          	imul   $0x68,%rax,%rax
ffffffff800291d1:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
ffffffff800291d5:	48 01 c8             	add    %rcx,%rax
ffffffff800291d8:	83 e2 0f             	and    $0xf,%edx
ffffffff800291db:	48 89 50 60          	mov    %rdx,0x60(%rax)
ffffffff800291df:	eb 37                	jmp    ffffffff80029218 <ZydisDecodeOperands+0xaf0>
ffffffff800291e1:	0f b6 45 f7          	movzbl -0x9(%rbp),%eax
ffffffff800291e5:	0f b6 55 f6          	movzbl -0xa(%rbp),%edx
ffffffff800291e9:	48 6b d2 68          	imul   $0x68,%rdx,%rdx
ffffffff800291ed:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
ffffffff800291f1:	48 01 d1             	add    %rdx,%rcx
ffffffff800291f4:	48 8b 75 98          	mov    -0x68(%rbp),%rsi
ffffffff800291f8:	48 63 d0             	movslq %eax,%rdx
ffffffff800291fb:	48 89 d0             	mov    %rdx,%rax
ffffffff800291fe:	48 01 c0             	add    %rax,%rax
ffffffff80029201:	48 01 d0             	add    %rdx,%rax
ffffffff80029204:	48 c1 e0 03          	shl    $0x3,%rax
ffffffff80029208:	48 01 f0             	add    %rsi,%rax
ffffffff8002920b:	48 05 40 01 00 00    	add    $0x140,%rax
ffffffff80029211:	48 8b 00             	mov    (%rax),%rax
ffffffff80029214:	48 89 41 60          	mov    %rax,0x60(%rcx)
ffffffff80029218:	0f b6 45 f7          	movzbl -0x9(%rbp),%eax
ffffffff8002921c:	0f b6 55 f6          	movzbl -0xa(%rbp),%edx
ffffffff80029220:	48 6b d2 68          	imul   $0x68,%rdx,%rdx
ffffffff80029224:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
ffffffff80029228:	48 01 d1             	add    %rdx,%rcx
ffffffff8002922b:	48 8b 75 98          	mov    -0x68(%rbp),%rsi
ffffffff8002922f:	48 63 d0             	movslq %eax,%rdx
ffffffff80029232:	48 89 d0             	mov    %rdx,%rax
ffffffff80029235:	48 01 c0             	add    %rax,%rax
ffffffff80029238:	48 01 d0             	add    %rdx,%rax
ffffffff8002923b:	48 c1 e0 03          	shl    $0x3,%rax
ffffffff8002923f:	48 01 f0             	add    %rsi,%rax
ffffffff80029242:	48 05 38 01 00 00    	add    $0x138,%rax
ffffffff80029248:	0f b6 00             	movzbl (%rax),%eax
ffffffff8002924b:	88 41 58             	mov    %al,0x58(%rcx)
ffffffff8002924e:	0f b6 45 f7          	movzbl -0x9(%rbp),%eax
ffffffff80029252:	0f b6 55 f6          	movzbl -0xa(%rbp),%edx
ffffffff80029256:	48 6b d2 68          	imul   $0x68,%rdx,%rdx
ffffffff8002925a:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
ffffffff8002925e:	48 01 d1             	add    %rdx,%rcx
ffffffff80029261:	48 8b 75 98          	mov    -0x68(%rbp),%rsi
ffffffff80029265:	48 63 d0             	movslq %eax,%rdx
ffffffff80029268:	48 89 d0             	mov    %rdx,%rax
ffffffff8002926b:	48 01 c0             	add    %rax,%rax
ffffffff8002926e:	48 01 d0             	add    %rdx,%rax
ffffffff80029271:	48 c1 e0 03          	shl    $0x3,%rax
ffffffff80029275:	48 01 f0             	add    %rsi,%rax
ffffffff80029278:	48 05 39 01 00 00    	add    $0x139,%rax
ffffffff8002927e:	0f b6 00             	movzbl (%rax),%eax
ffffffff80029281:	88 41 59             	mov    %al,0x59(%rcx)
ffffffff80029284:	80 45 f7 01          	addb   $0x1,-0x9(%rbp)
ffffffff80029288:	eb 0a                	jmp    ffffffff80029294 <ZydisDecodeOperands+0xb6c>
ffffffff8002928a:	90                   	nop
ffffffff8002928b:	eb 07                	jmp    ffffffff80029294 <ZydisDecodeOperands+0xb6c>
ffffffff8002928d:	90                   	nop
ffffffff8002928e:	eb 04                	jmp    ffffffff80029294 <ZydisDecodeOperands+0xb6c>
ffffffff80029290:	90                   	nop
ffffffff80029291:	eb 01                	jmp    ffffffff80029294 <ZydisDecodeOperands+0xb6c>
ffffffff80029293:	90                   	nop
ffffffff80029294:	0f b6 45 f6          	movzbl -0xa(%rbp),%eax
ffffffff80029298:	48 6b c0 68          	imul   $0x68,%rax,%rax
ffffffff8002929c:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
ffffffff800292a0:	48 01 d0             	add    %rdx,%rax
ffffffff800292a3:	8b 40 04             	mov    0x4(%rax),%eax
ffffffff800292a6:	83 f8 02             	cmp    $0x2,%eax
ffffffff800292a9:	0f 85 6a 02 00 00    	jne    ffffffff80029519 <ZydisDecodeOperands+0xdf1>
ffffffff800292af:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff800292b3:	0f b6 40 0c          	movzbl 0xc(%rax),%eax
ffffffff800292b7:	83 e0 02             	and    $0x2,%eax
ffffffff800292ba:	84 c0                	test   %al,%al
ffffffff800292bc:	75 35                	jne    ffffffff800292f3 <ZydisDecodeOperands+0xbcb>
ffffffff800292be:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff800292c2:	48 8b 50 20          	mov    0x20(%rax),%rdx
ffffffff800292c6:	48 b8 00 00 00 00 20 	movabs $0x2000000000,%rax
ffffffff800292cd:	00 00 00 
ffffffff800292d0:	48 21 d0             	and    %rdx,%rax
ffffffff800292d3:	48 85 c0             	test   %rax,%rax
ffffffff800292d6:	74 1b                	je     ffffffff800292f3 <ZydisDecodeOperands+0xbcb>
ffffffff800292d8:	0f b6 45 f6          	movzbl -0xa(%rbp),%eax
ffffffff800292dc:	48 6b c0 68          	imul   $0x68,%rax,%rax
ffffffff800292e0:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
ffffffff800292e4:	48 01 d0             	add    %rdx,%rax
ffffffff800292e7:	c7 40 2c c7 00 00 00 	movl   $0xc7,0x2c(%rax)
ffffffff800292ee:	e9 26 02 00 00       	jmp    ffffffff80029519 <ZydisDecodeOperands+0xdf1>
ffffffff800292f3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff800292f7:	0f b6 40 0c          	movzbl 0xc(%rax),%eax
ffffffff800292fb:	83 e0 02             	and    $0x2,%eax
ffffffff800292fe:	84 c0                	test   %al,%al
ffffffff80029300:	75 35                	jne    ffffffff80029337 <ZydisDecodeOperands+0xc0f>
ffffffff80029302:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff80029306:	48 8b 50 20          	mov    0x20(%rax),%rdx
ffffffff8002930a:	48 b8 00 00 00 00 40 	movabs $0x4000000000,%rax
ffffffff80029311:	00 00 00 
ffffffff80029314:	48 21 d0             	and    %rdx,%rax
ffffffff80029317:	48 85 c0             	test   %rax,%rax
ffffffff8002931a:	74 1b                	je     ffffffff80029337 <ZydisDecodeOperands+0xc0f>
ffffffff8002931c:	0f b6 45 f6          	movzbl -0xa(%rbp),%eax
ffffffff80029320:	48 6b c0 68          	imul   $0x68,%rax,%rax
ffffffff80029324:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
ffffffff80029328:	48 01 d0             	add    %rdx,%rax
ffffffff8002932b:	c7 40 2c c8 00 00 00 	movl   $0xc8,0x2c(%rax)
ffffffff80029332:	e9 e2 01 00 00       	jmp    ffffffff80029519 <ZydisDecodeOperands+0xdf1>
ffffffff80029337:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8002933b:	0f b6 40 0c          	movzbl 0xc(%rax),%eax
ffffffff8002933f:	83 e0 02             	and    $0x2,%eax
ffffffff80029342:	84 c0                	test   %al,%al
ffffffff80029344:	75 35                	jne    ffffffff8002937b <ZydisDecodeOperands+0xc53>
ffffffff80029346:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff8002934a:	48 8b 50 20          	mov    0x20(%rax),%rdx
ffffffff8002934e:	48 b8 00 00 00 00 80 	movabs $0x8000000000,%rax
ffffffff80029355:	00 00 00 
ffffffff80029358:	48 21 d0             	and    %rdx,%rax
ffffffff8002935b:	48 85 c0             	test   %rax,%rax
ffffffff8002935e:	74 1b                	je     ffffffff8002937b <ZydisDecodeOperands+0xc53>
ffffffff80029360:	0f b6 45 f6          	movzbl -0xa(%rbp),%eax
ffffffff80029364:	48 6b c0 68          	imul   $0x68,%rax,%rax
ffffffff80029368:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
ffffffff8002936c:	48 01 d0             	add    %rdx,%rax
ffffffff8002936f:	c7 40 2c c9 00 00 00 	movl   $0xc9,0x2c(%rax)
ffffffff80029376:	e9 9e 01 00 00       	jmp    ffffffff80029519 <ZydisDecodeOperands+0xdf1>
ffffffff8002937b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8002937f:	0f b6 40 0c          	movzbl 0xc(%rax),%eax
ffffffff80029383:	83 e0 02             	and    $0x2,%eax
ffffffff80029386:	84 c0                	test   %al,%al
ffffffff80029388:	75 35                	jne    ffffffff800293bf <ZydisDecodeOperands+0xc97>
ffffffff8002938a:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff8002938e:	48 8b 50 20          	mov    0x20(%rax),%rdx
ffffffff80029392:	48 b8 00 00 00 00 00 	movabs $0x10000000000,%rax
ffffffff80029399:	01 00 00 
ffffffff8002939c:	48 21 d0             	and    %rdx,%rax
ffffffff8002939f:	48 85 c0             	test   %rax,%rax
ffffffff800293a2:	74 1b                	je     ffffffff800293bf <ZydisDecodeOperands+0xc97>
ffffffff800293a4:	0f b6 45 f6          	movzbl -0xa(%rbp),%eax
ffffffff800293a8:	48 6b c0 68          	imul   $0x68,%rax,%rax
ffffffff800293ac:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
ffffffff800293b0:	48 01 d0             	add    %rdx,%rax
ffffffff800293b3:	c7 40 2c c6 00 00 00 	movl   $0xc6,0x2c(%rax)
ffffffff800293ba:	e9 5a 01 00 00       	jmp    ffffffff80029519 <ZydisDecodeOperands+0xdf1>
ffffffff800293bf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff800293c3:	0f b6 40 0c          	movzbl 0xc(%rax),%eax
ffffffff800293c7:	83 e0 02             	and    $0x2,%eax
ffffffff800293ca:	84 c0                	test   %al,%al
ffffffff800293cc:	75 35                	jne    ffffffff80029403 <ZydisDecodeOperands+0xcdb>
ffffffff800293ce:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff800293d2:	48 8b 50 20          	mov    0x20(%rax),%rdx
ffffffff800293d6:	48 b8 00 00 00 00 00 	movabs $0x20000000000,%rax
ffffffff800293dd:	02 00 00 
ffffffff800293e0:	48 21 d0             	and    %rdx,%rax
ffffffff800293e3:	48 85 c0             	test   %rax,%rax
ffffffff800293e6:	74 1b                	je     ffffffff80029403 <ZydisDecodeOperands+0xcdb>
ffffffff800293e8:	0f b6 45 f6          	movzbl -0xa(%rbp),%eax
ffffffff800293ec:	48 6b c0 68          	imul   $0x68,%rax,%rax
ffffffff800293f0:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
ffffffff800293f4:	48 01 d0             	add    %rdx,%rax
ffffffff800293f7:	c7 40 2c ca 00 00 00 	movl   $0xca,0x2c(%rax)
ffffffff800293fe:	e9 16 01 00 00       	jmp    ffffffff80029519 <ZydisDecodeOperands+0xdf1>
ffffffff80029403:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80029407:	0f b6 40 0c          	movzbl 0xc(%rax),%eax
ffffffff8002940b:	83 e0 02             	and    $0x2,%eax
ffffffff8002940e:	84 c0                	test   %al,%al
ffffffff80029410:	75 35                	jne    ffffffff80029447 <ZydisDecodeOperands+0xd1f>
ffffffff80029412:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff80029416:	48 8b 50 20          	mov    0x20(%rax),%rdx
ffffffff8002941a:	48 b8 00 00 00 00 00 	movabs $0x40000000000,%rax
ffffffff80029421:	04 00 00 
ffffffff80029424:	48 21 d0             	and    %rdx,%rax
ffffffff80029427:	48 85 c0             	test   %rax,%rax
ffffffff8002942a:	74 1b                	je     ffffffff80029447 <ZydisDecodeOperands+0xd1f>
ffffffff8002942c:	0f b6 45 f6          	movzbl -0xa(%rbp),%eax
ffffffff80029430:	48 6b c0 68          	imul   $0x68,%rax,%rax
ffffffff80029434:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
ffffffff80029438:	48 01 d0             	add    %rdx,%rax
ffffffff8002943b:	c7 40 2c cb 00 00 00 	movl   $0xcb,0x2c(%rax)
ffffffff80029442:	e9 d2 00 00 00       	jmp    ffffffff80029519 <ZydisDecodeOperands+0xdf1>
ffffffff80029447:	0f b6 45 f6          	movzbl -0xa(%rbp),%eax
ffffffff8002944b:	48 6b c0 68          	imul   $0x68,%rax,%rax
ffffffff8002944f:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
ffffffff80029453:	48 01 d0             	add    %rdx,%rax
ffffffff80029456:	8b 40 2c             	mov    0x2c(%rax),%eax
ffffffff80029459:	85 c0                	test   %eax,%eax
ffffffff8002945b:	0f 85 b8 00 00 00    	jne    ffffffff80029519 <ZydisDecodeOperands+0xdf1>
ffffffff80029461:	0f b6 45 f6          	movzbl -0xa(%rbp),%eax
ffffffff80029465:	48 6b c0 68          	imul   $0x68,%rax,%rax
ffffffff80029469:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
ffffffff8002946d:	48 01 d0             	add    %rdx,%rax
ffffffff80029470:	8b 40 30             	mov    0x30(%rax),%eax
ffffffff80029473:	83 f8 39             	cmp    $0x39,%eax
ffffffff80029476:	74 73                	je     ffffffff800294eb <ZydisDecodeOperands+0xdc3>
ffffffff80029478:	0f b6 45 f6          	movzbl -0xa(%rbp),%eax
ffffffff8002947c:	48 6b c0 68          	imul   $0x68,%rax,%rax
ffffffff80029480:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
ffffffff80029484:	48 01 d0             	add    %rdx,%rax
ffffffff80029487:	8b 40 30             	mov    0x30(%rax),%eax
ffffffff8002948a:	83 f8 3a             	cmp    $0x3a,%eax
ffffffff8002948d:	74 5c                	je     ffffffff800294eb <ZydisDecodeOperands+0xdc3>
ffffffff8002948f:	0f b6 45 f6          	movzbl -0xa(%rbp),%eax
ffffffff80029493:	48 6b c0 68          	imul   $0x68,%rax,%rax
ffffffff80029497:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
ffffffff8002949b:	48 01 d0             	add    %rdx,%rax
ffffffff8002949e:	8b 40 30             	mov    0x30(%rax),%eax
ffffffff800294a1:	83 f8 29             	cmp    $0x29,%eax
ffffffff800294a4:	74 45                	je     ffffffff800294eb <ZydisDecodeOperands+0xdc3>
ffffffff800294a6:	0f b6 45 f6          	movzbl -0xa(%rbp),%eax
ffffffff800294aa:	48 6b c0 68          	imul   $0x68,%rax,%rax
ffffffff800294ae:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
ffffffff800294b2:	48 01 d0             	add    %rdx,%rax
ffffffff800294b5:	8b 40 30             	mov    0x30(%rax),%eax
ffffffff800294b8:	83 f8 2a             	cmp    $0x2a,%eax
ffffffff800294bb:	74 2e                	je     ffffffff800294eb <ZydisDecodeOperands+0xdc3>
ffffffff800294bd:	0f b6 45 f6          	movzbl -0xa(%rbp),%eax
ffffffff800294c1:	48 6b c0 68          	imul   $0x68,%rax,%rax
ffffffff800294c5:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
ffffffff800294c9:	48 01 d0             	add    %rdx,%rax
ffffffff800294cc:	8b 40 30             	mov    0x30(%rax),%eax
ffffffff800294cf:	83 f8 19             	cmp    $0x19,%eax
ffffffff800294d2:	74 17                	je     ffffffff800294eb <ZydisDecodeOperands+0xdc3>
ffffffff800294d4:	0f b6 45 f6          	movzbl -0xa(%rbp),%eax
ffffffff800294d8:	48 6b c0 68          	imul   $0x68,%rax,%rax
ffffffff800294dc:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
ffffffff800294e0:	48 01 d0             	add    %rdx,%rax
ffffffff800294e3:	8b 40 30             	mov    0x30(%rax),%eax
ffffffff800294e6:	83 f8 1a             	cmp    $0x1a,%eax
ffffffff800294e9:	75 18                	jne    ffffffff80029503 <ZydisDecodeOperands+0xddb>
ffffffff800294eb:	0f b6 45 f6          	movzbl -0xa(%rbp),%eax
ffffffff800294ef:	48 6b c0 68          	imul   $0x68,%rax,%rax
ffffffff800294f3:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
ffffffff800294f7:	48 01 d0             	add    %rdx,%rax
ffffffff800294fa:	c7 40 2c c8 00 00 00 	movl   $0xc8,0x2c(%rax)
ffffffff80029501:	eb 16                	jmp    ffffffff80029519 <ZydisDecodeOperands+0xdf1>
ffffffff80029503:	0f b6 45 f6          	movzbl -0xa(%rbp),%eax
ffffffff80029507:	48 6b c0 68          	imul   $0x68,%rax,%rax
ffffffff8002950b:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
ffffffff8002950f:	48 01 d0             	add    %rdx,%rax
ffffffff80029512:	c7 40 2c c9 00 00 00 	movl   $0xc9,0x2c(%rax)
ffffffff80029519:	0f b6 45 f6          	movzbl -0xa(%rbp),%eax
ffffffff8002951d:	48 6b c0 68          	imul   $0x68,%rax,%rax
ffffffff80029521:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
ffffffff80029525:	48 01 c2             	add    %rax,%rdx
ffffffff80029528:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
ffffffff8002952c:	48 8b 75 98          	mov    -0x68(%rbp),%rsi
ffffffff80029530:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff80029534:	48 89 c7             	mov    %rax,%rdi
ffffffff80029537:	e8 b3 e1 ff ff       	call   ffffffff800276ef <ZydisSetOperandSizeAndElementInfo>
ffffffff8002953c:	48 83 45 f8 0d       	addq   $0xd,-0x8(%rbp)
ffffffff80029541:	80 45 f6 01          	addb   $0x1,-0xa(%rbp)
ffffffff80029545:	0f b6 45 f6          	movzbl -0xa(%rbp),%eax
ffffffff80029549:	3a 45 8c             	cmp    -0x74(%rbp),%al
ffffffff8002954c:	0f 82 3c f2 ff ff    	jb     ffffffff8002878e <ZydisDecodeOperands+0x66>
ffffffff80029552:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff80029556:	8b 40 3c             	mov    0x3c(%rax),%eax
ffffffff80029559:	83 f8 02             	cmp    $0x2,%eax
ffffffff8002955c:	75 40                	jne    ffffffff8002959e <ZydisDecodeOperands+0xe76>
ffffffff8002955e:	48 8b 45 90          	mov    -0x70(%rbp),%rax
ffffffff80029562:	0f b6 40 0c          	movzbl 0xc(%rax),%eax
ffffffff80029566:	0f b6 c0             	movzbl %al,%eax
ffffffff80029569:	83 f8 02             	cmp    $0x2,%eax
ffffffff8002956c:	74 07                	je     ffffffff80029575 <ZydisDecodeOperands+0xe4d>
ffffffff8002956e:	83 f8 03             	cmp    $0x3,%eax
ffffffff80029571:	74 22                	je     ffffffff80029595 <ZydisDecodeOperands+0xe6d>
ffffffff80029573:	eb 29                	jmp    ffffffff8002959e <ZydisDecodeOperands+0xe76>
ffffffff80029575:	48 8b 45 90          	mov    -0x70(%rbp),%rax
ffffffff80029579:	8b 40 04             	mov    0x4(%rax),%eax
ffffffff8002957c:	83 f8 02             	cmp    $0x2,%eax
ffffffff8002957f:	75 0a                	jne    ffffffff8002958b <ZydisDecodeOperands+0xe63>
ffffffff80029581:	48 8b 45 90          	mov    -0x70(%rbp),%rax
ffffffff80029585:	c6 40 0c 08          	movb   $0x8,0xc(%rax)
ffffffff80029589:	eb 13                	jmp    ffffffff8002959e <ZydisDecodeOperands+0xe76>
ffffffff8002958b:	48 8b 45 90          	mov    -0x70(%rbp),%rax
ffffffff8002958f:	c6 40 0c 09          	movb   $0x9,0xc(%rax)
ffffffff80029593:	eb 09                	jmp    ffffffff8002959e <ZydisDecodeOperands+0xe76>
ffffffff80029595:	48 8b 45 90          	mov    -0x70(%rbp),%rax
ffffffff80029599:	c6 40 0c 09          	movb   $0x9,0xc(%rax)
ffffffff8002959d:	90                   	nop
ffffffff8002959e:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff800295a3:	c9                   	leave  
ffffffff800295a4:	c3                   	ret    

ffffffff800295a5 <ZydisSetAttributes>:
ffffffff800295a5:	f3 0f 1e fa          	endbr64 
ffffffff800295a9:	55                   	push   %rbp
ffffffff800295aa:	48 89 e5             	mov    %rsp,%rbp
ffffffff800295ad:	48 83 ec 28          	sub    $0x28,%rsp
ffffffff800295b1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff800295b5:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
ffffffff800295b9:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
ffffffff800295bd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff800295c1:	0f b6 50 0a          	movzbl 0xa(%rax),%edx
ffffffff800295c5:	c0 ea 07             	shr    $0x7,%dl
ffffffff800295c8:	0f b6 d2             	movzbl %dl,%edx
ffffffff800295cb:	0f b6 40 0b          	movzbl 0xb(%rax),%eax
ffffffff800295cf:	83 e0 01             	and    $0x1,%eax
ffffffff800295d2:	48 01 c0             	add    %rax,%rax
ffffffff800295d5:	48 09 d0             	or     %rdx,%rax
ffffffff800295d8:	84 c0                	test   %al,%al
ffffffff800295da:	74 49                	je     ffffffff80029625 <ZydisSetAttributes+0x80>
ffffffff800295dc:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff800295e0:	48 8b 48 20          	mov    0x20(%rax),%rcx
ffffffff800295e4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff800295e8:	0f b6 50 0a          	movzbl 0xa(%rax),%edx
ffffffff800295ec:	c0 ea 07             	shr    $0x7,%dl
ffffffff800295ef:	0f b6 d2             	movzbl %dl,%edx
ffffffff800295f2:	0f b6 40 0b          	movzbl 0xb(%rax),%eax
ffffffff800295f6:	83 e0 01             	and    $0x1,%eax
ffffffff800295f9:	48 01 c0             	add    %rax,%rax
ffffffff800295fc:	48 09 d0             	or     %rdx,%rax
ffffffff800295ff:	0f b6 c0             	movzbl %al,%eax
ffffffff80029602:	48 98                	cltq   
ffffffff80029604:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
ffffffff8002960b:	00 
ffffffff8002960c:	48 8d 05 ed 63 01 00 	lea    0x163ed(%rip),%rax        # ffffffff8003fa00 <mapping.34>
ffffffff80029613:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
ffffffff80029617:	48 09 c1             	or     %rax,%rcx
ffffffff8002961a:	48 89 ca             	mov    %rcx,%rdx
ffffffff8002961d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80029621:	48 89 50 20          	mov    %rdx,0x20(%rax)
ffffffff80029625:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80029629:	0f b6 40 0b          	movzbl 0xb(%rax),%eax
ffffffff8002962d:	83 e0 06             	and    $0x6,%eax
ffffffff80029630:	84 c0                	test   %al,%al
ffffffff80029632:	74 3b                	je     ffffffff8002966f <ZydisSetAttributes+0xca>
ffffffff80029634:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80029638:	48 8b 48 20          	mov    0x20(%rax),%rcx
ffffffff8002963c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80029640:	0f b6 40 0b          	movzbl 0xb(%rax),%eax
ffffffff80029644:	d0 e8                	shr    %al
ffffffff80029646:	83 e0 03             	and    $0x3,%eax
ffffffff80029649:	0f b6 c0             	movzbl %al,%eax
ffffffff8002964c:	48 98                	cltq   
ffffffff8002964e:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
ffffffff80029655:	00 
ffffffff80029656:	48 8d 05 c3 63 01 00 	lea    0x163c3(%rip),%rax        # ffffffff8003fa20 <mapping.33>
ffffffff8002965d:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
ffffffff80029661:	48 09 c1             	or     %rax,%rcx
ffffffff80029664:	48 89 ca             	mov    %rcx,%rdx
ffffffff80029667:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8002966b:	48 89 50 20          	mov    %rdx,0x20(%rax)
ffffffff8002966f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80029673:	0f b6 40 0b          	movzbl 0xb(%rax),%eax
ffffffff80029677:	83 e0 18             	and    $0x18,%eax
ffffffff8002967a:	84 c0                	test   %al,%al
ffffffff8002967c:	74 3c                	je     ffffffff800296ba <ZydisSetAttributes+0x115>
ffffffff8002967e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80029682:	48 8b 48 20          	mov    0x20(%rax),%rcx
ffffffff80029686:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8002968a:	0f b6 40 0b          	movzbl 0xb(%rax),%eax
ffffffff8002968e:	c0 e8 03             	shr    $0x3,%al
ffffffff80029691:	83 e0 03             	and    $0x3,%eax
ffffffff80029694:	0f b6 c0             	movzbl %al,%eax
ffffffff80029697:	48 98                	cltq   
ffffffff80029699:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
ffffffff800296a0:	00 
ffffffff800296a1:	48 8d 05 98 63 01 00 	lea    0x16398(%rip),%rax        # ffffffff8003fa40 <mapping.32>
ffffffff800296a8:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
ffffffff800296ac:	48 09 c1             	or     %rax,%rcx
ffffffff800296af:	48 89 ca             	mov    %rcx,%rdx
ffffffff800296b2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff800296b6:	48 89 50 20          	mov    %rdx,0x20(%rax)
ffffffff800296ba:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff800296be:	8b 40 0c             	mov    0xc(%rax),%eax
ffffffff800296c1:	85 c0                	test   %eax,%eax
ffffffff800296c3:	74 11                	je     ffffffff800296d6 <ZydisSetAttributes+0x131>
ffffffff800296c5:	83 e8 01             	sub    $0x1,%eax
ffffffff800296c8:	83 f8 04             	cmp    $0x4,%eax
ffffffff800296cb:	0f 87 39 08 00 00    	ja     ffffffff80029f0a <ZydisSetAttributes+0x965>
ffffffff800296d1:	e9 a6 06 00 00       	jmp    ffffffff80029d7c <ZydisSetAttributes+0x7d7>
ffffffff800296d6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff800296da:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff800296de:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff800296e2:	0f b6 40 0b          	movzbl 0xb(%rax),%eax
ffffffff800296e6:	83 e0 40             	and    $0x40,%eax
ffffffff800296e9:	84 c0                	test   %al,%al
ffffffff800296eb:	74 16                	je     ffffffff80029703 <ZydisSetAttributes+0x15e>
ffffffff800296ed:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff800296f1:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff800296f5:	80 cc 01             	or     $0x1,%ah
ffffffff800296f8:	48 89 c2             	mov    %rax,%rdx
ffffffff800296fb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff800296ff:	48 89 50 20          	mov    %rdx,0x20(%rax)
ffffffff80029703:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80029707:	0f b6 40 0b          	movzbl 0xb(%rax),%eax
ffffffff8002970b:	83 e0 80             	and    $0xffffff80,%eax
ffffffff8002970e:	84 c0                	test   %al,%al
ffffffff80029710:	74 5c                	je     ffffffff8002976e <ZydisSetAttributes+0x1c9>
ffffffff80029712:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80029716:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff8002971a:	48 0d 00 00 01 00    	or     $0x10000,%rax
ffffffff80029720:	48 89 c2             	mov    %rax,%rdx
ffffffff80029723:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80029727:	48 89 50 20          	mov    %rdx,0x20(%rax)
ffffffff8002972b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002972f:	0f b6 40 20          	movzbl 0x20(%rax),%eax
ffffffff80029733:	84 c0                	test   %al,%al
ffffffff80029735:	74 37                	je     ffffffff8002976e <ZydisSetAttributes+0x1c9>
ffffffff80029737:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8002973b:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff8002973f:	48 0d 00 00 00 08    	or     $0x8000000,%rax
ffffffff80029745:	48 89 c2             	mov    %rax,%rdx
ffffffff80029748:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8002974c:	48 89 50 20          	mov    %rdx,0x20(%rax)
ffffffff80029750:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80029754:	0f b6 40 25          	movzbl 0x25(%rax),%eax
ffffffff80029758:	0f b6 d0             	movzbl %al,%edx
ffffffff8002975b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8002975f:	48 63 d2             	movslq %edx,%rdx
ffffffff80029762:	48 83 c2 0e          	add    $0xe,%rdx
ffffffff80029766:	c7 44 d0 04 01 00 00 	movl   $0x1,0x4(%rax,%rdx,8)
ffffffff8002976d:	00 
ffffffff8002976e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80029772:	0f b6 40 0c          	movzbl 0xc(%rax),%eax
ffffffff80029776:	83 e0 01             	and    $0x1,%eax
ffffffff80029779:	84 c0                	test   %al,%al
ffffffff8002977b:	74 19                	je     ffffffff80029796 <ZydisSetAttributes+0x1f1>
ffffffff8002977d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80029781:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff80029785:	48 0d 00 00 02 00    	or     $0x20000,%rax
ffffffff8002978b:	48 89 c2             	mov    %rax,%rdx
ffffffff8002978e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80029792:	48 89 50 20          	mov    %rdx,0x20(%rax)
ffffffff80029796:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8002979a:	0f b6 40 0c          	movzbl 0xc(%rax),%eax
ffffffff8002979e:	83 e0 02             	and    $0x2,%eax
ffffffff800297a1:	84 c0                	test   %al,%al
ffffffff800297a3:	74 19                	je     ffffffff800297be <ZydisSetAttributes+0x219>
ffffffff800297a5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff800297a9:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff800297ad:	48 0d 00 00 04 00    	or     $0x40000,%rax
ffffffff800297b3:	48 89 c2             	mov    %rax,%rdx
ffffffff800297b6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff800297ba:	48 89 50 20          	mov    %rdx,0x20(%rax)
ffffffff800297be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff800297c2:	0f b6 40 0c          	movzbl 0xc(%rax),%eax
ffffffff800297c6:	83 e0 04             	and    $0x4,%eax
ffffffff800297c9:	84 c0                	test   %al,%al
ffffffff800297cb:	74 19                	je     ffffffff800297e6 <ZydisSetAttributes+0x241>
ffffffff800297cd:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff800297d1:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff800297d5:	48 0d 00 00 08 00    	or     $0x80000,%rax
ffffffff800297db:	48 89 c2             	mov    %rax,%rdx
ffffffff800297de:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff800297e2:	48 89 50 20          	mov    %rdx,0x20(%rax)
ffffffff800297e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff800297ea:	0f b6 40 0c          	movzbl 0xc(%rax),%eax
ffffffff800297ee:	83 e0 08             	and    $0x8,%eax
ffffffff800297f1:	84 c0                	test   %al,%al
ffffffff800297f3:	74 19                	je     ffffffff8002980e <ZydisSetAttributes+0x269>
ffffffff800297f5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff800297f9:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff800297fd:	48 0d 00 00 10 00    	or     $0x100000,%rax
ffffffff80029803:	48 89 c2             	mov    %rax,%rdx
ffffffff80029806:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8002980a:	48 89 50 20          	mov    %rdx,0x20(%rax)
ffffffff8002980e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80029812:	0f b6 40 0c          	movzbl 0xc(%rax),%eax
ffffffff80029816:	83 e0 10             	and    $0x10,%eax
ffffffff80029819:	84 c0                	test   %al,%al
ffffffff8002981b:	74 19                	je     ffffffff80029836 <ZydisSetAttributes+0x291>
ffffffff8002981d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80029821:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff80029825:	48 0d 00 00 20 00    	or     $0x200000,%rax
ffffffff8002982b:	48 89 c2             	mov    %rax,%rdx
ffffffff8002982e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80029832:	48 89 50 20          	mov    %rdx,0x20(%rax)
ffffffff80029836:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8002983a:	0f b6 40 0c          	movzbl 0xc(%rax),%eax
ffffffff8002983e:	83 e0 20             	and    $0x20,%eax
ffffffff80029841:	84 c0                	test   %al,%al
ffffffff80029843:	74 19                	je     ffffffff8002985e <ZydisSetAttributes+0x2b9>
ffffffff80029845:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80029849:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff8002984d:	48 0d 00 00 40 00    	or     $0x400000,%rax
ffffffff80029853:	48 89 c2             	mov    %rax,%rdx
ffffffff80029856:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8002985a:	48 89 50 20          	mov    %rdx,0x20(%rax)
ffffffff8002985e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80029862:	0f b6 40 0c          	movzbl 0xc(%rax),%eax
ffffffff80029866:	83 e0 80             	and    $0xffffff80,%eax
ffffffff80029869:	84 c0                	test   %al,%al
ffffffff8002986b:	74 19                	je     ffffffff80029886 <ZydisSetAttributes+0x2e1>
ffffffff8002986d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80029871:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff80029875:	48 0d 00 00 80 00    	or     $0x800000,%rax
ffffffff8002987b:	48 89 c2             	mov    %rax,%rdx
ffffffff8002987e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80029882:	48 89 50 20          	mov    %rdx,0x20(%rax)
ffffffff80029886:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002988a:	0f b6 40 21          	movzbl 0x21(%rax),%eax
ffffffff8002988e:	0f b6 c0             	movzbl %al,%eax
ffffffff80029891:	3d f2 00 00 00       	cmp    $0xf2,%eax
ffffffff80029896:	74 10                	je     ffffffff800298a8 <ZydisSetAttributes+0x303>
ffffffff80029898:	3d f3 00 00 00       	cmp    $0xf3,%eax
ffffffff8002989d:	0f 84 d0 00 00 00    	je     ffffffff80029973 <ZydisSetAttributes+0x3ce>
ffffffff800298a3:	e9 7e 01 00 00       	jmp    ffffffff80029a26 <ZydisSetAttributes+0x481>
ffffffff800298a8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff800298ac:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff800298b0:	25 00 00 08 00       	and    $0x80000,%eax
ffffffff800298b5:	48 85 c0             	test   %rax,%rax
ffffffff800298b8:	74 1e                	je     ffffffff800298d8 <ZydisSetAttributes+0x333>
ffffffff800298ba:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff800298be:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff800298c2:	48 0d 00 00 00 40    	or     $0x40000000,%rax
ffffffff800298c8:	48 89 c2             	mov    %rax,%rdx
ffffffff800298cb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff800298cf:	48 89 50 20          	mov    %rdx,0x20(%rax)
ffffffff800298d3:	e9 4e 01 00 00       	jmp    ffffffff80029a26 <ZydisSetAttributes+0x481>
ffffffff800298d8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff800298dc:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff800298e0:	25 00 00 20 00       	and    $0x200000,%eax
ffffffff800298e5:	48 85 c0             	test   %rax,%rax
ffffffff800298e8:	74 43                	je     ffffffff8002992d <ZydisSetAttributes+0x388>
ffffffff800298ea:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff800298ee:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff800298f2:	25 00 00 00 08       	and    $0x8000000,%eax
ffffffff800298f7:	48 85 c0             	test   %rax,%rax
ffffffff800298fa:	75 0f                	jne    ffffffff8002990b <ZydisSetAttributes+0x366>
ffffffff800298fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80029900:	0f b6 40 0c          	movzbl 0xc(%rax),%eax
ffffffff80029904:	83 e0 80             	and    $0xffffff80,%eax
ffffffff80029907:	84 c0                	test   %al,%al
ffffffff80029909:	74 22                	je     ffffffff8002992d <ZydisSetAttributes+0x388>
ffffffff8002990b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8002990f:	48 8b 50 20          	mov    0x20(%rax),%rdx
ffffffff80029913:	48 b8 00 00 00 00 01 	movabs $0x100000000,%rax
ffffffff8002991a:	00 00 00 
ffffffff8002991d:	48 09 c2             	or     %rax,%rdx
ffffffff80029920:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80029924:	48 89 50 20          	mov    %rdx,0x20(%rax)
ffffffff80029928:	e9 f9 00 00 00       	jmp    ffffffff80029a26 <ZydisSetAttributes+0x481>
ffffffff8002992d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80029931:	48 8b 00             	mov    (%rax),%rax
ffffffff80029934:	0f b6 40 0b          	movzbl 0xb(%rax),%eax
ffffffff80029938:	84 c0                	test   %al,%al
ffffffff8002993a:	0f 84 e2 00 00 00    	je     ffffffff80029a22 <ZydisSetAttributes+0x47d>
ffffffff80029940:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80029944:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff80029948:	25 00 00 10 00       	and    $0x100000,%eax
ffffffff8002994d:	48 85 c0             	test   %rax,%rax
ffffffff80029950:	0f 84 cc 00 00 00    	je     ffffffff80029a22 <ZydisSetAttributes+0x47d>
ffffffff80029956:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8002995a:	48 8b 50 20          	mov    0x20(%rax),%rdx
ffffffff8002995e:	b8 00 00 00 80       	mov    $0x80000000,%eax
ffffffff80029963:	48 09 c2             	or     %rax,%rdx
ffffffff80029966:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8002996a:	48 89 50 20          	mov    %rdx,0x20(%rax)
ffffffff8002996e:	e9 b3 00 00 00       	jmp    ffffffff80029a26 <ZydisSetAttributes+0x481>
ffffffff80029973:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80029977:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff8002997b:	25 00 00 02 00       	and    $0x20000,%eax
ffffffff80029980:	48 85 c0             	test   %rax,%rax
ffffffff80029983:	74 1e                	je     ffffffff800299a3 <ZydisSetAttributes+0x3fe>
ffffffff80029985:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80029989:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff8002998d:	48 0d 00 00 00 10    	or     $0x10000000,%rax
ffffffff80029993:	48 89 c2             	mov    %rax,%rdx
ffffffff80029996:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8002999a:	48 89 50 20          	mov    %rdx,0x20(%rax)
ffffffff8002999e:	e9 83 00 00 00       	jmp    ffffffff80029a26 <ZydisSetAttributes+0x481>
ffffffff800299a3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff800299a7:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff800299ab:	25 00 00 04 00       	and    $0x40000,%eax
ffffffff800299b0:	48 85 c0             	test   %rax,%rax
ffffffff800299b3:	74 1b                	je     ffffffff800299d0 <ZydisSetAttributes+0x42b>
ffffffff800299b5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff800299b9:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff800299bd:	48 0d 00 00 00 20    	or     $0x20000000,%rax
ffffffff800299c3:	48 89 c2             	mov    %rax,%rdx
ffffffff800299c6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff800299ca:	48 89 50 20          	mov    %rdx,0x20(%rax)
ffffffff800299ce:	eb 56                	jmp    ffffffff80029a26 <ZydisSetAttributes+0x481>
ffffffff800299d0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff800299d4:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff800299d8:	25 00 00 40 00       	and    $0x400000,%eax
ffffffff800299dd:	48 85 c0             	test   %rax,%rax
ffffffff800299e0:	74 43                	je     ffffffff80029a25 <ZydisSetAttributes+0x480>
ffffffff800299e2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff800299e6:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff800299ea:	25 00 00 00 08       	and    $0x8000000,%eax
ffffffff800299ef:	48 85 c0             	test   %rax,%rax
ffffffff800299f2:	75 0f                	jne    ffffffff80029a03 <ZydisSetAttributes+0x45e>
ffffffff800299f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff800299f8:	0f b6 40 0c          	movzbl 0xc(%rax),%eax
ffffffff800299fc:	83 e0 80             	and    $0xffffff80,%eax
ffffffff800299ff:	84 c0                	test   %al,%al
ffffffff80029a01:	74 22                	je     ffffffff80029a25 <ZydisSetAttributes+0x480>
ffffffff80029a03:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80029a07:	48 8b 50 20          	mov    0x20(%rax),%rdx
ffffffff80029a0b:	48 b8 00 00 00 00 02 	movabs $0x200000000,%rax
ffffffff80029a12:	00 00 00 
ffffffff80029a15:	48 09 c2             	or     %rax,%rdx
ffffffff80029a18:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80029a1c:	48 89 50 20          	mov    %rdx,0x20(%rax)
ffffffff80029a20:	eb 04                	jmp    ffffffff80029a26 <ZydisSetAttributes+0x481>
ffffffff80029a22:	90                   	nop
ffffffff80029a23:	eb 01                	jmp    ffffffff80029a26 <ZydisSetAttributes+0x481>
ffffffff80029a25:	90                   	nop
ffffffff80029a26:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80029a2a:	0f b6 40 26          	movzbl 0x26(%rax),%eax
ffffffff80029a2e:	0f b6 d0             	movzbl %al,%edx
ffffffff80029a31:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80029a35:	48 63 d2             	movslq %edx,%rdx
ffffffff80029a38:	48 83 c2 0e          	add    $0xe,%rdx
ffffffff80029a3c:	8b 44 d0 04          	mov    0x4(%rax,%rdx,8),%eax
ffffffff80029a40:	85 c0                	test   %eax,%eax
ffffffff80029a42:	75 38                	jne    ffffffff80029a7c <ZydisSetAttributes+0x4d7>
ffffffff80029a44:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80029a48:	48 8b 50 20          	mov    0x20(%rax),%rdx
ffffffff80029a4c:	48 b8 00 00 00 f0 03 	movabs $0x3f0000000,%rax
ffffffff80029a53:	00 00 00 
ffffffff80029a56:	48 21 d0             	and    %rdx,%rax
ffffffff80029a59:	48 85 c0             	test   %rax,%rax
ffffffff80029a5c:	74 1e                	je     ffffffff80029a7c <ZydisSetAttributes+0x4d7>
ffffffff80029a5e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80029a62:	0f b6 40 26          	movzbl 0x26(%rax),%eax
ffffffff80029a66:	0f b6 d0             	movzbl %al,%edx
ffffffff80029a69:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80029a6d:	48 63 d2             	movslq %edx,%rdx
ffffffff80029a70:	48 83 c2 0e          	add    $0xe,%rdx
ffffffff80029a74:	c7 44 d0 04 01 00 00 	movl   $0x1,0x4(%rax,%rdx,8)
ffffffff80029a7b:	00 
ffffffff80029a7c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80029a80:	0f b6 40 0d          	movzbl 0xd(%rax),%eax
ffffffff80029a84:	83 e0 01             	and    $0x1,%eax
ffffffff80029a87:	84 c0                	test   %al,%al
ffffffff80029a89:	0f 84 a9 00 00 00    	je     ffffffff80029b38 <ZydisSetAttributes+0x593>
ffffffff80029a8f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80029a93:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff80029a97:	48 0d 00 00 00 01    	or     $0x1000000,%rax
ffffffff80029a9d:	48 89 c2             	mov    %rax,%rdx
ffffffff80029aa0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80029aa4:	48 89 50 20          	mov    %rdx,0x20(%rax)
ffffffff80029aa8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80029aac:	0f b6 40 22          	movzbl 0x22(%rax),%eax
ffffffff80029ab0:	0f b6 c0             	movzbl %al,%eax
ffffffff80029ab3:	83 f8 2e             	cmp    $0x2e,%eax
ffffffff80029ab6:	74 07                	je     ffffffff80029abf <ZydisSetAttributes+0x51a>
ffffffff80029ab8:	83 f8 3e             	cmp    $0x3e,%eax
ffffffff80029abb:	74 3f                	je     ffffffff80029afc <ZydisSetAttributes+0x557>
ffffffff80029abd:	eb 79                	jmp    ffffffff80029b38 <ZydisSetAttributes+0x593>
ffffffff80029abf:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80029ac3:	48 8b 50 20          	mov    0x20(%rax),%rdx
ffffffff80029ac7:	48 b8 00 00 00 00 04 	movabs $0x400000000,%rax
ffffffff80029ace:	00 00 00 
ffffffff80029ad1:	48 09 c2             	or     %rax,%rdx
ffffffff80029ad4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80029ad8:	48 89 50 20          	mov    %rdx,0x20(%rax)
ffffffff80029adc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80029ae0:	0f b6 40 27          	movzbl 0x27(%rax),%eax
ffffffff80029ae4:	0f b6 d0             	movzbl %al,%edx
ffffffff80029ae7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80029aeb:	48 63 d2             	movslq %edx,%rdx
ffffffff80029aee:	48 83 c2 0e          	add    $0xe,%rdx
ffffffff80029af2:	c7 44 d0 04 01 00 00 	movl   $0x1,0x4(%rax,%rdx,8)
ffffffff80029af9:	00 
ffffffff80029afa:	eb 3c                	jmp    ffffffff80029b38 <ZydisSetAttributes+0x593>
ffffffff80029afc:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80029b00:	48 8b 50 20          	mov    0x20(%rax),%rdx
ffffffff80029b04:	48 b8 00 00 00 00 08 	movabs $0x800000000,%rax
ffffffff80029b0b:	00 00 00 
ffffffff80029b0e:	48 09 c2             	or     %rax,%rdx
ffffffff80029b11:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80029b15:	48 89 50 20          	mov    %rdx,0x20(%rax)
ffffffff80029b19:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80029b1d:	0f b6 40 27          	movzbl 0x27(%rax),%eax
ffffffff80029b21:	0f b6 d0             	movzbl %al,%edx
ffffffff80029b24:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80029b28:	48 63 d2             	movslq %edx,%rdx
ffffffff80029b2b:	48 83 c2 0e          	add    $0xe,%rdx
ffffffff80029b2f:	c7 44 d0 04 01 00 00 	movl   $0x1,0x4(%rax,%rdx,8)
ffffffff80029b36:	00 
ffffffff80029b37:	90                   	nop
ffffffff80029b38:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80029b3c:	0f b6 40 0c          	movzbl 0xc(%rax),%eax
ffffffff80029b40:	83 e0 40             	and    $0x40,%eax
ffffffff80029b43:	84 c0                	test   %al,%al
ffffffff80029b45:	74 6f                	je     ffffffff80029bb6 <ZydisSetAttributes+0x611>
ffffffff80029b47:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80029b4b:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff80029b4f:	48 0d 00 00 00 02    	or     $0x2000000,%rax
ffffffff80029b55:	48 89 c2             	mov    %rax,%rdx
ffffffff80029b58:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80029b5c:	48 89 50 20          	mov    %rdx,0x20(%rax)
ffffffff80029b60:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80029b64:	48 8b 00             	mov    (%rax),%rax
ffffffff80029b67:	0f b6 40 0c          	movzbl 0xc(%rax),%eax
ffffffff80029b6b:	84 c0                	test   %al,%al
ffffffff80029b6d:	74 47                	je     ffffffff80029bb6 <ZydisSetAttributes+0x611>
ffffffff80029b6f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80029b73:	0f b6 40 2c          	movzbl 0x2c(%rax),%eax
ffffffff80029b77:	84 c0                	test   %al,%al
ffffffff80029b79:	78 3b                	js     ffffffff80029bb6 <ZydisSetAttributes+0x611>
ffffffff80029b7b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80029b7f:	48 8b 50 20          	mov    0x20(%rax),%rdx
ffffffff80029b83:	48 b8 00 00 00 00 10 	movabs $0x1000000000,%rax
ffffffff80029b8a:	00 00 00 
ffffffff80029b8d:	48 09 c2             	or     %rax,%rdx
ffffffff80029b90:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80029b94:	48 89 50 20          	mov    %rdx,0x20(%rax)
ffffffff80029b98:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80029b9c:	0f b6 40 2c          	movzbl 0x2c(%rax),%eax
ffffffff80029ba0:	0f be d0             	movsbl %al,%edx
ffffffff80029ba3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80029ba7:	48 63 d2             	movslq %edx,%rdx
ffffffff80029baa:	48 83 c2 0e          	add    $0xe,%rdx
ffffffff80029bae:	c7 44 d0 04 01 00 00 	movl   $0x1,0x4(%rax,%rdx,8)
ffffffff80029bb5:	00 
ffffffff80029bb6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80029bba:	0f b6 40 0b          	movzbl 0xb(%rax),%eax
ffffffff80029bbe:	83 e0 20             	and    $0x20,%eax
ffffffff80029bc1:	84 c0                	test   %al,%al
ffffffff80029bc3:	0f 84 43 03 00 00    	je     ffffffff80029f0c <ZydisSetAttributes+0x967>
ffffffff80029bc9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80029bcd:	0f b6 40 0d          	movzbl 0xd(%rax),%eax
ffffffff80029bd1:	83 e0 01             	and    $0x1,%eax
ffffffff80029bd4:	84 c0                	test   %al,%al
ffffffff80029bd6:	0f 85 30 03 00 00    	jne    ffffffff80029f0c <ZydisSetAttributes+0x967>
ffffffff80029bdc:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80029be0:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff80029be4:	48 0d 00 00 00 04    	or     $0x4000000,%rax
ffffffff80029bea:	48 89 c2             	mov    %rax,%rdx
ffffffff80029bed:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80029bf1:	48 89 50 20          	mov    %rdx,0x20(%rax)
ffffffff80029bf5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80029bf9:	0f b6 40 23          	movzbl 0x23(%rax),%eax
ffffffff80029bfd:	84 c0                	test   %al,%al
ffffffff80029bff:	0f 84 36 01 00 00    	je     ffffffff80029d3b <ZydisSetAttributes+0x796>
ffffffff80029c05:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80029c09:	48 8b 50 20          	mov    0x20(%rax),%rdx
ffffffff80029c0d:	48 b8 00 00 00 00 10 	movabs $0x1000000000,%rax
ffffffff80029c14:	00 00 00 
ffffffff80029c17:	48 21 d0             	and    %rdx,%rax
ffffffff80029c1a:	48 85 c0             	test   %rax,%rax
ffffffff80029c1d:	0f 85 18 01 00 00    	jne    ffffffff80029d3b <ZydisSetAttributes+0x796>
ffffffff80029c23:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80029c27:	0f b6 40 23          	movzbl 0x23(%rax),%eax
ffffffff80029c2b:	0f b6 c0             	movzbl %al,%eax
ffffffff80029c2e:	83 f8 65             	cmp    $0x65,%eax
ffffffff80029c31:	0f 84 e3 00 00 00    	je     ffffffff80029d1a <ZydisSetAttributes+0x775>
ffffffff80029c37:	83 f8 65             	cmp    $0x65,%eax
ffffffff80029c3a:	0f 8f f9 00 00 00    	jg     ffffffff80029d39 <ZydisSetAttributes+0x794>
ffffffff80029c40:	83 f8 64             	cmp    $0x64,%eax
ffffffff80029c43:	0f 84 b2 00 00 00    	je     ffffffff80029cfb <ZydisSetAttributes+0x756>
ffffffff80029c49:	83 f8 64             	cmp    $0x64,%eax
ffffffff80029c4c:	0f 8f e7 00 00 00    	jg     ffffffff80029d39 <ZydisSetAttributes+0x794>
ffffffff80029c52:	83 f8 3e             	cmp    $0x3e,%eax
ffffffff80029c55:	74 66                	je     ffffffff80029cbd <ZydisSetAttributes+0x718>
ffffffff80029c57:	83 f8 3e             	cmp    $0x3e,%eax
ffffffff80029c5a:	0f 8f d9 00 00 00    	jg     ffffffff80029d39 <ZydisSetAttributes+0x794>
ffffffff80029c60:	83 f8 36             	cmp    $0x36,%eax
ffffffff80029c63:	74 39                	je     ffffffff80029c9e <ZydisSetAttributes+0x6f9>
ffffffff80029c65:	83 f8 36             	cmp    $0x36,%eax
ffffffff80029c68:	0f 8f cb 00 00 00    	jg     ffffffff80029d39 <ZydisSetAttributes+0x794>
ffffffff80029c6e:	83 f8 26             	cmp    $0x26,%eax
ffffffff80029c71:	74 69                	je     ffffffff80029cdc <ZydisSetAttributes+0x737>
ffffffff80029c73:	83 f8 2e             	cmp    $0x2e,%eax
ffffffff80029c76:	0f 85 bd 00 00 00    	jne    ffffffff80029d39 <ZydisSetAttributes+0x794>
ffffffff80029c7c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80029c80:	48 8b 50 20          	mov    0x20(%rax),%rdx
ffffffff80029c84:	48 b8 00 00 00 00 20 	movabs $0x2000000000,%rax
ffffffff80029c8b:	00 00 00 
ffffffff80029c8e:	48 09 c2             	or     %rax,%rdx
ffffffff80029c91:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80029c95:	48 89 50 20          	mov    %rdx,0x20(%rax)
ffffffff80029c99:	e9 9d 00 00 00       	jmp    ffffffff80029d3b <ZydisSetAttributes+0x796>
ffffffff80029c9e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80029ca2:	48 8b 50 20          	mov    0x20(%rax),%rdx
ffffffff80029ca6:	48 b8 00 00 00 00 40 	movabs $0x4000000000,%rax
ffffffff80029cad:	00 00 00 
ffffffff80029cb0:	48 09 c2             	or     %rax,%rdx
ffffffff80029cb3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80029cb7:	48 89 50 20          	mov    %rdx,0x20(%rax)
ffffffff80029cbb:	eb 7e                	jmp    ffffffff80029d3b <ZydisSetAttributes+0x796>
ffffffff80029cbd:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80029cc1:	48 8b 50 20          	mov    0x20(%rax),%rdx
ffffffff80029cc5:	48 b8 00 00 00 00 80 	movabs $0x8000000000,%rax
ffffffff80029ccc:	00 00 00 
ffffffff80029ccf:	48 09 c2             	or     %rax,%rdx
ffffffff80029cd2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80029cd6:	48 89 50 20          	mov    %rdx,0x20(%rax)
ffffffff80029cda:	eb 5f                	jmp    ffffffff80029d3b <ZydisSetAttributes+0x796>
ffffffff80029cdc:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80029ce0:	48 8b 50 20          	mov    0x20(%rax),%rdx
ffffffff80029ce4:	48 b8 00 00 00 00 00 	movabs $0x10000000000,%rax
ffffffff80029ceb:	01 00 00 
ffffffff80029cee:	48 09 c2             	or     %rax,%rdx
ffffffff80029cf1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80029cf5:	48 89 50 20          	mov    %rdx,0x20(%rax)
ffffffff80029cf9:	eb 40                	jmp    ffffffff80029d3b <ZydisSetAttributes+0x796>
ffffffff80029cfb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80029cff:	48 8b 50 20          	mov    0x20(%rax),%rdx
ffffffff80029d03:	48 b8 00 00 00 00 00 	movabs $0x20000000000,%rax
ffffffff80029d0a:	02 00 00 
ffffffff80029d0d:	48 09 c2             	or     %rax,%rdx
ffffffff80029d10:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80029d14:	48 89 50 20          	mov    %rdx,0x20(%rax)
ffffffff80029d18:	eb 21                	jmp    ffffffff80029d3b <ZydisSetAttributes+0x796>
ffffffff80029d1a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80029d1e:	48 8b 50 20          	mov    0x20(%rax),%rdx
ffffffff80029d22:	48 b8 00 00 00 00 00 	movabs $0x40000000000,%rax
ffffffff80029d29:	04 00 00 
ffffffff80029d2c:	48 09 c2             	or     %rax,%rdx
ffffffff80029d2f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80029d33:	48 89 50 20          	mov    %rdx,0x20(%rax)
ffffffff80029d37:	eb 02                	jmp    ffffffff80029d3b <ZydisSetAttributes+0x796>
ffffffff80029d39:	eb fe                	jmp    ffffffff80029d39 <ZydisSetAttributes+0x794>
ffffffff80029d3b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80029d3f:	48 8b 50 20          	mov    0x20(%rax),%rdx
ffffffff80029d43:	48 b8 00 00 00 00 e0 	movabs $0x7e000000000,%rax
ffffffff80029d4a:	07 00 00 
ffffffff80029d4d:	48 21 d0             	and    %rdx,%rax
ffffffff80029d50:	48 85 c0             	test   %rax,%rax
ffffffff80029d53:	0f 84 b3 01 00 00    	je     ffffffff80029f0c <ZydisSetAttributes+0x967>
ffffffff80029d59:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80029d5d:	0f b6 40 2a          	movzbl 0x2a(%rax),%eax
ffffffff80029d61:	0f b6 d0             	movzbl %al,%edx
ffffffff80029d64:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80029d68:	48 63 d2             	movslq %edx,%rdx
ffffffff80029d6b:	48 83 c2 0e          	add    $0xe,%rdx
ffffffff80029d6f:	c7 44 d0 04 01 00 00 	movl   $0x1,0x4(%rax,%rdx,8)
ffffffff80029d76:	00 
ffffffff80029d77:	e9 90 01 00 00       	jmp    ffffffff80029f0c <ZydisSetAttributes+0x967>
ffffffff80029d7c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80029d80:	0f b6 40 0b          	movzbl 0xb(%rax),%eax
ffffffff80029d84:	83 e0 20             	and    $0x20,%eax
ffffffff80029d87:	84 c0                	test   %al,%al
ffffffff80029d89:	0f 84 80 01 00 00    	je     ffffffff80029f0f <ZydisSetAttributes+0x96a>
ffffffff80029d8f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80029d93:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff80029d97:	48 0d 00 00 00 04    	or     $0x4000000,%rax
ffffffff80029d9d:	48 89 c2             	mov    %rax,%rdx
ffffffff80029da0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80029da4:	48 89 50 20          	mov    %rdx,0x20(%rax)
ffffffff80029da8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80029dac:	0f b6 40 23          	movzbl 0x23(%rax),%eax
ffffffff80029db0:	84 c0                	test   %al,%al
ffffffff80029db2:	0f 84 18 01 00 00    	je     ffffffff80029ed0 <ZydisSetAttributes+0x92b>
ffffffff80029db8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80029dbc:	0f b6 40 23          	movzbl 0x23(%rax),%eax
ffffffff80029dc0:	0f b6 c0             	movzbl %al,%eax
ffffffff80029dc3:	83 f8 65             	cmp    $0x65,%eax
ffffffff80029dc6:	0f 84 e3 00 00 00    	je     ffffffff80029eaf <ZydisSetAttributes+0x90a>
ffffffff80029dcc:	83 f8 65             	cmp    $0x65,%eax
ffffffff80029dcf:	0f 8f f9 00 00 00    	jg     ffffffff80029ece <ZydisSetAttributes+0x929>
ffffffff80029dd5:	83 f8 64             	cmp    $0x64,%eax
ffffffff80029dd8:	0f 84 b2 00 00 00    	je     ffffffff80029e90 <ZydisSetAttributes+0x8eb>
ffffffff80029dde:	83 f8 64             	cmp    $0x64,%eax
ffffffff80029de1:	0f 8f e7 00 00 00    	jg     ffffffff80029ece <ZydisSetAttributes+0x929>
ffffffff80029de7:	83 f8 3e             	cmp    $0x3e,%eax
ffffffff80029dea:	74 66                	je     ffffffff80029e52 <ZydisSetAttributes+0x8ad>
ffffffff80029dec:	83 f8 3e             	cmp    $0x3e,%eax
ffffffff80029def:	0f 8f d9 00 00 00    	jg     ffffffff80029ece <ZydisSetAttributes+0x929>
ffffffff80029df5:	83 f8 36             	cmp    $0x36,%eax
ffffffff80029df8:	74 39                	je     ffffffff80029e33 <ZydisSetAttributes+0x88e>
ffffffff80029dfa:	83 f8 36             	cmp    $0x36,%eax
ffffffff80029dfd:	0f 8f cb 00 00 00    	jg     ffffffff80029ece <ZydisSetAttributes+0x929>
ffffffff80029e03:	83 f8 26             	cmp    $0x26,%eax
ffffffff80029e06:	74 69                	je     ffffffff80029e71 <ZydisSetAttributes+0x8cc>
ffffffff80029e08:	83 f8 2e             	cmp    $0x2e,%eax
ffffffff80029e0b:	0f 85 bd 00 00 00    	jne    ffffffff80029ece <ZydisSetAttributes+0x929>
ffffffff80029e11:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80029e15:	48 8b 50 20          	mov    0x20(%rax),%rdx
ffffffff80029e19:	48 b8 00 00 00 00 20 	movabs $0x2000000000,%rax
ffffffff80029e20:	00 00 00 
ffffffff80029e23:	48 09 c2             	or     %rax,%rdx
ffffffff80029e26:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80029e2a:	48 89 50 20          	mov    %rdx,0x20(%rax)
ffffffff80029e2e:	e9 9d 00 00 00       	jmp    ffffffff80029ed0 <ZydisSetAttributes+0x92b>
ffffffff80029e33:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80029e37:	48 8b 50 20          	mov    0x20(%rax),%rdx
ffffffff80029e3b:	48 b8 00 00 00 00 40 	movabs $0x4000000000,%rax
ffffffff80029e42:	00 00 00 
ffffffff80029e45:	48 09 c2             	or     %rax,%rdx
ffffffff80029e48:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80029e4c:	48 89 50 20          	mov    %rdx,0x20(%rax)
ffffffff80029e50:	eb 7e                	jmp    ffffffff80029ed0 <ZydisSetAttributes+0x92b>
ffffffff80029e52:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80029e56:	48 8b 50 20          	mov    0x20(%rax),%rdx
ffffffff80029e5a:	48 b8 00 00 00 00 80 	movabs $0x8000000000,%rax
ffffffff80029e61:	00 00 00 
ffffffff80029e64:	48 09 c2             	or     %rax,%rdx
ffffffff80029e67:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80029e6b:	48 89 50 20          	mov    %rdx,0x20(%rax)
ffffffff80029e6f:	eb 5f                	jmp    ffffffff80029ed0 <ZydisSetAttributes+0x92b>
ffffffff80029e71:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80029e75:	48 8b 50 20          	mov    0x20(%rax),%rdx
ffffffff80029e79:	48 b8 00 00 00 00 00 	movabs $0x10000000000,%rax
ffffffff80029e80:	01 00 00 
ffffffff80029e83:	48 09 c2             	or     %rax,%rdx
ffffffff80029e86:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80029e8a:	48 89 50 20          	mov    %rdx,0x20(%rax)
ffffffff80029e8e:	eb 40                	jmp    ffffffff80029ed0 <ZydisSetAttributes+0x92b>
ffffffff80029e90:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80029e94:	48 8b 50 20          	mov    0x20(%rax),%rdx
ffffffff80029e98:	48 b8 00 00 00 00 00 	movabs $0x20000000000,%rax
ffffffff80029e9f:	02 00 00 
ffffffff80029ea2:	48 09 c2             	or     %rax,%rdx
ffffffff80029ea5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80029ea9:	48 89 50 20          	mov    %rdx,0x20(%rax)
ffffffff80029ead:	eb 21                	jmp    ffffffff80029ed0 <ZydisSetAttributes+0x92b>
ffffffff80029eaf:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80029eb3:	48 8b 50 20          	mov    0x20(%rax),%rdx
ffffffff80029eb7:	48 b8 00 00 00 00 00 	movabs $0x40000000000,%rax
ffffffff80029ebe:	04 00 00 
ffffffff80029ec1:	48 09 c2             	or     %rax,%rdx
ffffffff80029ec4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80029ec8:	48 89 50 20          	mov    %rdx,0x20(%rax)
ffffffff80029ecc:	eb 02                	jmp    ffffffff80029ed0 <ZydisSetAttributes+0x92b>
ffffffff80029ece:	eb fe                	jmp    ffffffff80029ece <ZydisSetAttributes+0x929>
ffffffff80029ed0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80029ed4:	48 8b 50 20          	mov    0x20(%rax),%rdx
ffffffff80029ed8:	48 b8 00 00 00 00 e0 	movabs $0x7e000000000,%rax
ffffffff80029edf:	07 00 00 
ffffffff80029ee2:	48 21 d0             	and    %rdx,%rax
ffffffff80029ee5:	48 85 c0             	test   %rax,%rax
ffffffff80029ee8:	74 25                	je     ffffffff80029f0f <ZydisSetAttributes+0x96a>
ffffffff80029eea:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80029eee:	0f b6 40 2a          	movzbl 0x2a(%rax),%eax
ffffffff80029ef2:	0f b6 d0             	movzbl %al,%edx
ffffffff80029ef5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80029ef9:	48 63 d2             	movslq %edx,%rdx
ffffffff80029efc:	48 83 c2 0e          	add    $0xe,%rdx
ffffffff80029f00:	c7 44 d0 04 01 00 00 	movl   $0x1,0x4(%rax,%rdx,8)
ffffffff80029f07:	00 
ffffffff80029f08:	eb 05                	jmp    ffffffff80029f0f <ZydisSetAttributes+0x96a>
ffffffff80029f0a:	eb fe                	jmp    ffffffff80029f0a <ZydisSetAttributes+0x965>
ffffffff80029f0c:	90                   	nop
ffffffff80029f0d:	eb 01                	jmp    ffffffff80029f10 <ZydisSetAttributes+0x96b>
ffffffff80029f0f:	90                   	nop
ffffffff80029f10:	90                   	nop
ffffffff80029f11:	c9                   	leave  
ffffffff80029f12:	c3                   	ret    

ffffffff80029f13 <ZydisSetAVXInformation>:
ffffffff80029f13:	f3 0f 1e fa          	endbr64 
ffffffff80029f17:	55                   	push   %rbp
ffffffff80029f18:	48 89 e5             	mov    %rsp,%rbp
ffffffff80029f1b:	48 83 ec 48          	sub    $0x48,%rsp
ffffffff80029f1f:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
ffffffff80029f23:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
ffffffff80029f27:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
ffffffff80029f2b:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff80029f2f:	8b 40 0c             	mov    0xc(%rax),%eax
ffffffff80029f32:	83 f8 05             	cmp    $0x5,%eax
ffffffff80029f35:	0f 84 39 07 00 00    	je     ffffffff8002a674 <ZydisSetAVXInformation+0x761>
ffffffff80029f3b:	83 f8 05             	cmp    $0x5,%eax
ffffffff80029f3e:	0f 87 b6 0d 00 00    	ja     ffffffff8002acfa <ZydisSetAVXInformation+0xde7>
ffffffff80029f44:	83 f8 04             	cmp    $0x4,%eax
ffffffff80029f47:	0f 84 d8 00 00 00    	je     ffffffff8002a025 <ZydisSetAVXInformation+0x112>
ffffffff80029f4d:	83 f8 04             	cmp    $0x4,%eax
ffffffff80029f50:	0f 87 a4 0d 00 00    	ja     ffffffff8002acfa <ZydisSetAVXInformation+0xde7>
ffffffff80029f56:	83 f8 02             	cmp    $0x2,%eax
ffffffff80029f59:	74 0a                	je     ffffffff80029f65 <ZydisSetAVXInformation+0x52>
ffffffff80029f5b:	83 f8 03             	cmp    $0x3,%eax
ffffffff80029f5e:	74 2e                	je     ffffffff80029f8e <ZydisSetAVXInformation+0x7b>
ffffffff80029f60:	e9 95 0d 00 00       	jmp    ffffffff8002acfa <ZydisSetAVXInformation+0xde7>
ffffffff80029f65:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80029f69:	0f b6 40 0f          	movzbl 0xf(%rax),%eax
ffffffff80029f6d:	0f b6 c0             	movzbl %al,%eax
ffffffff80029f70:	48 98                	cltq   
ffffffff80029f72:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
ffffffff80029f76:	48 8d 05 e3 5a 01 00 	lea    0x15ae3(%rip),%rax        # ffffffff8003fa60 <lookup.31>
ffffffff80029f7d:	0f b7 14 02          	movzwl (%rdx,%rax,1),%edx
ffffffff80029f81:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff80029f85:	66 89 50 38          	mov    %dx,0x38(%rax)
ffffffff80029f89:	e9 73 0d 00 00       	jmp    ffffffff8002ad01 <ZydisSetAVXInformation+0xdee>
ffffffff80029f8e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80029f92:	0f b6 40 0f          	movzbl 0xf(%rax),%eax
ffffffff80029f96:	0f b6 c0             	movzbl %al,%eax
ffffffff80029f99:	48 98                	cltq   
ffffffff80029f9b:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
ffffffff80029f9f:	48 8d 05 be 5a 01 00 	lea    0x15abe(%rip),%rax        # ffffffff8003fa64 <lookup.30>
ffffffff80029fa6:	0f b7 14 02          	movzwl (%rdx,%rax,1),%edx
ffffffff80029faa:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff80029fae:	66 89 50 38          	mov    %dx,0x38(%rax)
ffffffff80029fb2:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff80029fb6:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
ffffffff80029fba:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80029fbe:	0f b6 50 0c          	movzbl 0xc(%rax),%edx
ffffffff80029fc2:	c0 ea 06             	shr    $0x6,%dl
ffffffff80029fc5:	0f b6 d2             	movzbl %dl,%edx
ffffffff80029fc8:	0f b6 40 0d          	movzbl 0xd(%rax),%eax
ffffffff80029fcc:	83 e0 01             	and    $0x1,%eax
ffffffff80029fcf:	48 c1 e0 02          	shl    $0x2,%rax
ffffffff80029fd3:	48 09 d0             	or     %rdx,%rax
ffffffff80029fd6:	84 c0                	test   %al,%al
ffffffff80029fd8:	0f 84 1f 0d 00 00    	je     ffffffff8002acfd <ZydisSetAVXInformation+0xdea>
ffffffff80029fde:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff80029fe2:	c6 40 44 01          	movb   $0x1,0x44(%rax)
ffffffff80029fe6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80029fea:	0f b6 50 0c          	movzbl 0xc(%rax),%edx
ffffffff80029fee:	c0 ea 06             	shr    $0x6,%dl
ffffffff80029ff1:	0f b6 d2             	movzbl %dl,%edx
ffffffff80029ff4:	0f b6 40 0d          	movzbl 0xd(%rax),%eax
ffffffff80029ff8:	83 e0 01             	and    $0x1,%eax
ffffffff80029ffb:	48 c1 e0 02          	shl    $0x2,%rax
ffffffff80029fff:	48 09 d0             	or     %rdx,%rax
ffffffff8002a002:	0f b6 c0             	movzbl %al,%eax
ffffffff8002a005:	48 98                	cltq   
ffffffff8002a007:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
ffffffff8002a00e:	00 
ffffffff8002a00f:	48 8d 05 6a d0 07 00 	lea    0x7d06a(%rip),%rax        # ffffffff800a7080 <broadcasts.29>
ffffffff8002a016:	8b 14 02             	mov    (%rdx,%rax,1),%edx
ffffffff8002a019:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002a01d:	89 50 48             	mov    %edx,0x48(%rax)
ffffffff8002a020:	e9 d8 0c 00 00       	jmp    ffffffff8002acfd <ZydisSetAVXInformation+0xdea>
ffffffff8002a025:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff8002a029:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff8002a02d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8002a031:	0f b6 40 0f          	movzbl 0xf(%rax),%eax
ffffffff8002a035:	88 45 ff             	mov    %al,-0x1(%rbp)
ffffffff8002a038:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002a03c:	0f b6 40 0c          	movzbl 0xc(%rax),%eax
ffffffff8002a040:	83 e0 c0             	and    $0xffffffc0,%eax
ffffffff8002a043:	84 c0                	test   %al,%al
ffffffff8002a045:	74 11                	je     ffffffff8002a058 <ZydisSetAVXInformation+0x145>
ffffffff8002a047:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002a04b:	0f b6 40 0c          	movzbl 0xc(%rax),%eax
ffffffff8002a04f:	c0 e8 06             	shr    $0x6,%al
ffffffff8002a052:	83 e8 01             	sub    $0x1,%eax
ffffffff8002a055:	88 45 ff             	mov    %al,-0x1(%rbp)
ffffffff8002a058:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
ffffffff8002a05c:	48 98                	cltq   
ffffffff8002a05e:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
ffffffff8002a062:	48 8d 05 ff 59 01 00 	lea    0x159ff(%rip),%rax        # ffffffff8003fa68 <lookup.28>
ffffffff8002a069:	0f b7 14 02          	movzwl (%rdx,%rax,1),%edx
ffffffff8002a06d:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002a071:	66 89 50 38          	mov    %dx,0x38(%rax)
ffffffff8002a075:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002a079:	0f b6 40 0d          	movzbl 0xd(%rax),%eax
ffffffff8002a07d:	83 e0 1f             	and    $0x1f,%eax
ffffffff8002a080:	89 c2                	mov    %eax,%edx
ffffffff8002a082:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8002a086:	88 50 1a             	mov    %dl,0x1a(%rax)
ffffffff8002a089:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002a08d:	0f b6 40 0d          	movzbl 0xd(%rax),%eax
ffffffff8002a091:	83 e0 1f             	and    $0x1f,%eax
ffffffff8002a094:	84 c0                	test   %al,%al
ffffffff8002a096:	0f 84 71 04 00 00    	je     ffffffff8002a50d <ZydisSetAVXInformation+0x5fa>
ffffffff8002a09c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002a0a0:	0f b6 40 0d          	movzbl 0xd(%rax),%eax
ffffffff8002a0a4:	c0 e8 05             	shr    $0x5,%al
ffffffff8002a0a7:	0f b6 c0             	movzbl %al,%eax
ffffffff8002a0aa:	48 98                	cltq   
ffffffff8002a0ac:	48 8d 15 bb 59 01 00 	lea    0x159bb(%rip),%rdx        # ffffffff8003fa6e <element_sizes.27>
ffffffff8002a0b3:	0f b6 04 10          	movzbl (%rax,%rdx,1),%eax
ffffffff8002a0b7:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
ffffffff8002a0bb:	88 42 1b             	mov    %al,0x1b(%rdx)
ffffffff8002a0be:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002a0c2:	0f b6 40 0d          	movzbl 0xd(%rax),%eax
ffffffff8002a0c6:	83 e0 1f             	and    $0x1f,%eax
ffffffff8002a0c9:	0f b6 c0             	movzbl %al,%eax
ffffffff8002a0cc:	83 f8 10             	cmp    $0x10,%eax
ffffffff8002a0cf:	0f 87 36 04 00 00    	ja     ffffffff8002a50b <ZydisSetAVXInformation+0x5f8>
ffffffff8002a0d5:	89 c0                	mov    %eax,%eax
ffffffff8002a0d7:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
ffffffff8002a0de:	00 
ffffffff8002a0df:	48 8d 05 82 56 01 00 	lea    0x15682(%rip),%rax        # ffffffff8003f768 <GPR8_MAPPING.0+0x178>
ffffffff8002a0e6:	8b 04 02             	mov    (%rdx,%rax,1),%eax
ffffffff8002a0e9:	48 98                	cltq   
ffffffff8002a0eb:	48 8d 15 76 56 01 00 	lea    0x15676(%rip),%rdx        # ffffffff8003f768 <GPR8_MAPPING.0+0x178>
ffffffff8002a0f2:	48 01 d0             	add    %rdx,%rax
ffffffff8002a0f5:	3e ff e0             	notrack jmp *%rax
ffffffff8002a0f8:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002a0fc:	0f b6 80 0f 01 00 00 	movzbl 0x10f(%rax),%eax
ffffffff8002a103:	88 45 e3             	mov    %al,-0x1d(%rbp)
ffffffff8002a106:	80 7d e3 00          	cmpb   $0x0,-0x1d(%rbp)
ffffffff8002a10a:	74 3a                	je     ffffffff8002a146 <ZydisSetAVXInformation+0x233>
ffffffff8002a10c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8002a110:	0f b6 40 0a          	movzbl 0xa(%rax),%eax
ffffffff8002a114:	84 c0                	test   %al,%al
ffffffff8002a116:	75 18                	jne    ffffffff8002a130 <ZydisSetAVXInformation+0x21d>
ffffffff8002a118:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8002a11c:	0f b6 40 1b          	movzbl 0x1b(%rax),%eax
ffffffff8002a120:	3c 10                	cmp    $0x10,%al
ffffffff8002a122:	74 22                	je     ffffffff8002a146 <ZydisSetAVXInformation+0x233>
ffffffff8002a124:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8002a128:	0f b6 40 1b          	movzbl 0x1b(%rax),%eax
ffffffff8002a12c:	3c 20                	cmp    $0x20,%al
ffffffff8002a12e:	74 16                	je     ffffffff8002a146 <ZydisSetAVXInformation+0x233>
ffffffff8002a130:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8002a134:	0f b6 40 0a          	movzbl 0xa(%rax),%eax
ffffffff8002a138:	84 c0                	test   %al,%al
ffffffff8002a13a:	74 0a                	je     ffffffff8002a146 <ZydisSetAVXInformation+0x233>
ffffffff8002a13c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8002a140:	0f b6 40 1b          	movzbl 0x1b(%rax),%eax
ffffffff8002a144:	3c 40                	cmp    $0x40,%al
ffffffff8002a146:	80 7d e3 00          	cmpb   $0x0,-0x1d(%rbp)
ffffffff8002a14a:	74 0d                	je     ffffffff8002a159 <ZydisSetAVXInformation+0x246>
ffffffff8002a14c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002a150:	0f b6 40 0e          	movzbl 0xe(%rax),%eax
ffffffff8002a154:	83 e0 03             	and    $0x3,%eax
ffffffff8002a157:	3c 01                	cmp    $0x1,%al
ffffffff8002a159:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8002a15d:	0f b6 40 1b          	movzbl 0x1b(%rax),%eax
ffffffff8002a161:	c0 e8 05             	shr    $0x5,%al
ffffffff8002a164:	88 45 e2             	mov    %al,-0x1e(%rbp)
ffffffff8002a167:	0f b6 45 e3          	movzbl -0x1d(%rbp),%eax
ffffffff8002a16b:	0f b6 55 e2          	movzbl -0x1e(%rbp),%edx
ffffffff8002a16f:	0f b6 4d ff          	movzbl -0x1(%rbp),%ecx
ffffffff8002a173:	48 63 f1             	movslq %ecx,%rsi
ffffffff8002a176:	48 98                	cltq   
ffffffff8002a178:	48 63 ca             	movslq %edx,%rcx
ffffffff8002a17b:	48 89 c2             	mov    %rax,%rdx
ffffffff8002a17e:	48 c1 e2 03          	shl    $0x3,%rdx
ffffffff8002a182:	48 01 c2             	add    %rax,%rdx
ffffffff8002a185:	48 89 c8             	mov    %rcx,%rax
ffffffff8002a188:	48 01 c0             	add    %rax,%rax
ffffffff8002a18b:	48 01 c8             	add    %rcx,%rax
ffffffff8002a18e:	48 01 d0             	add    %rdx,%rax
ffffffff8002a191:	48 8d 14 30          	lea    (%rax,%rsi,1),%rdx
ffffffff8002a195:	48 8d 05 e4 58 01 00 	lea    0x158e4(%rip),%rax        # ffffffff8003fa80 <scales.26>
ffffffff8002a19c:	48 01 d0             	add    %rdx,%rax
ffffffff8002a19f:	0f b6 00             	movzbl (%rax),%eax
ffffffff8002a1a2:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
ffffffff8002a1a6:	88 42 1d             	mov    %al,0x1d(%rdx)
ffffffff8002a1a9:	0f b6 45 e3          	movzbl -0x1d(%rbp),%eax
ffffffff8002a1ad:	0f b6 55 e2          	movzbl -0x1e(%rbp),%edx
ffffffff8002a1b1:	0f b6 4d ff          	movzbl -0x1(%rbp),%ecx
ffffffff8002a1b5:	48 63 f1             	movslq %ecx,%rsi
ffffffff8002a1b8:	48 98                	cltq   
ffffffff8002a1ba:	48 63 ca             	movslq %edx,%rcx
ffffffff8002a1bd:	48 89 c2             	mov    %rax,%rdx
ffffffff8002a1c0:	48 c1 e2 03          	shl    $0x3,%rdx
ffffffff8002a1c4:	48 01 c2             	add    %rax,%rdx
ffffffff8002a1c7:	48 89 c8             	mov    %rcx,%rax
ffffffff8002a1ca:	48 01 c0             	add    %rax,%rax
ffffffff8002a1cd:	48 01 c8             	add    %rcx,%rax
ffffffff8002a1d0:	48 01 d0             	add    %rdx,%rax
ffffffff8002a1d3:	48 01 f0             	add    %rsi,%rax
ffffffff8002a1d6:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
ffffffff8002a1dd:	00 
ffffffff8002a1de:	48 8d 05 bb 58 01 00 	lea    0x158bb(%rip),%rax        # ffffffff8003faa0 <broadcasts.25>
ffffffff8002a1e5:	8b 14 02             	mov    (%rdx,%rax,1),%edx
ffffffff8002a1e8:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002a1ec:	89 50 48             	mov    %edx,0x48(%rax)
ffffffff8002a1ef:	e9 19 03 00 00       	jmp    ffffffff8002a50d <ZydisSetAVXInformation+0x5fa>
ffffffff8002a1f4:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002a1f8:	0f b6 80 0f 01 00 00 	movzbl 0x10f(%rax),%eax
ffffffff8002a1ff:	88 45 e5             	mov    %al,-0x1b(%rbp)
ffffffff8002a202:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8002a206:	0f b6 40 1b          	movzbl 0x1b(%rax),%eax
ffffffff8002a20a:	3c 10                	cmp    $0x10,%al
ffffffff8002a20c:	74 0a                	je     ffffffff8002a218 <ZydisSetAVXInformation+0x305>
ffffffff8002a20e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8002a212:	0f b6 40 1b          	movzbl 0x1b(%rax),%eax
ffffffff8002a216:	3c 20                	cmp    $0x20,%al
ffffffff8002a218:	80 7d e5 00          	cmpb   $0x0,-0x1b(%rbp)
ffffffff8002a21c:	74 0d                	je     ffffffff8002a22b <ZydisSetAVXInformation+0x318>
ffffffff8002a21e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002a222:	0f b6 40 0e          	movzbl 0xe(%rax),%eax
ffffffff8002a226:	83 e0 03             	and    $0x3,%eax
ffffffff8002a229:	3c 01                	cmp    $0x1,%al
ffffffff8002a22b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8002a22f:	0f b6 40 1b          	movzbl 0x1b(%rax),%eax
ffffffff8002a233:	c0 e8 05             	shr    $0x5,%al
ffffffff8002a236:	88 45 e4             	mov    %al,-0x1c(%rbp)
ffffffff8002a239:	0f b6 55 e5          	movzbl -0x1b(%rbp),%edx
ffffffff8002a23d:	0f b6 45 e4          	movzbl -0x1c(%rbp),%eax
ffffffff8002a241:	0f b6 4d ff          	movzbl -0x1(%rbp),%ecx
ffffffff8002a245:	48 63 f1             	movslq %ecx,%rsi
ffffffff8002a248:	48 63 d2             	movslq %edx,%rdx
ffffffff8002a24b:	48 63 c8             	movslq %eax,%rcx
ffffffff8002a24e:	48 89 d0             	mov    %rdx,%rax
ffffffff8002a251:	48 01 c0             	add    %rax,%rax
ffffffff8002a254:	48 01 d0             	add    %rdx,%rax
ffffffff8002a257:	48 01 c0             	add    %rax,%rax
ffffffff8002a25a:	48 89 ca             	mov    %rcx,%rdx
ffffffff8002a25d:	48 01 d2             	add    %rdx,%rdx
ffffffff8002a260:	48 01 ca             	add    %rcx,%rdx
ffffffff8002a263:	48 01 d0             	add    %rdx,%rax
ffffffff8002a266:	48 8d 14 30          	lea    (%rax,%rsi,1),%rdx
ffffffff8002a26a:	48 8d 05 77 58 01 00 	lea    0x15877(%rip),%rax        # ffffffff8003fae8 <scales.24>
ffffffff8002a271:	48 01 d0             	add    %rdx,%rax
ffffffff8002a274:	0f b6 00             	movzbl (%rax),%eax
ffffffff8002a277:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
ffffffff8002a27b:	88 42 1d             	mov    %al,0x1d(%rdx)
ffffffff8002a27e:	0f b6 55 e5          	movzbl -0x1b(%rbp),%edx
ffffffff8002a282:	0f b6 45 e4          	movzbl -0x1c(%rbp),%eax
ffffffff8002a286:	0f b6 4d ff          	movzbl -0x1(%rbp),%ecx
ffffffff8002a28a:	48 63 f1             	movslq %ecx,%rsi
ffffffff8002a28d:	48 63 d2             	movslq %edx,%rdx
ffffffff8002a290:	48 63 c8             	movslq %eax,%rcx
ffffffff8002a293:	48 89 d0             	mov    %rdx,%rax
ffffffff8002a296:	48 01 c0             	add    %rax,%rax
ffffffff8002a299:	48 01 d0             	add    %rdx,%rax
ffffffff8002a29c:	48 01 c0             	add    %rax,%rax
ffffffff8002a29f:	48 89 ca             	mov    %rcx,%rdx
ffffffff8002a2a2:	48 01 d2             	add    %rdx,%rdx
ffffffff8002a2a5:	48 01 ca             	add    %rcx,%rdx
ffffffff8002a2a8:	48 01 d0             	add    %rdx,%rax
ffffffff8002a2ab:	48 01 f0             	add    %rsi,%rax
ffffffff8002a2ae:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
ffffffff8002a2b5:	00 
ffffffff8002a2b6:	48 8d 05 43 58 01 00 	lea    0x15843(%rip),%rax        # ffffffff8003fb00 <broadcasts.23>
ffffffff8002a2bd:	8b 14 02             	mov    (%rdx,%rax,1),%edx
ffffffff8002a2c0:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002a2c4:	89 50 48             	mov    %edx,0x48(%rax)
ffffffff8002a2c7:	e9 41 02 00 00       	jmp    ffffffff8002a50d <ZydisSetAVXInformation+0x5fa>
ffffffff8002a2cc:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
ffffffff8002a2d0:	48 98                	cltq   
ffffffff8002a2d2:	48 8d 15 57 58 01 00 	lea    0x15857(%rip),%rdx        # ffffffff8003fb30 <scales.22>
ffffffff8002a2d9:	0f b6 04 10          	movzbl (%rax,%rdx,1),%eax
ffffffff8002a2dd:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
ffffffff8002a2e1:	88 42 1d             	mov    %al,0x1d(%rdx)
ffffffff8002a2e4:	e9 24 02 00 00       	jmp    ffffffff8002a50d <ZydisSetAVXInformation+0x5fa>
ffffffff8002a2e9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8002a2ed:	0f b6 40 0a          	movzbl 0xa(%rax),%eax
ffffffff8002a2f1:	0f b6 c0             	movzbl %al,%eax
ffffffff8002a2f4:	85 c0                	test   %eax,%eax
ffffffff8002a2f6:	74 07                	je     ffffffff8002a2ff <ZydisSetAVXInformation+0x3ec>
ffffffff8002a2f8:	83 f8 01             	cmp    $0x1,%eax
ffffffff8002a2fb:	74 05                	je     ffffffff8002a302 <ZydisSetAVXInformation+0x3ef>
ffffffff8002a2fd:	eb fe                	jmp    ffffffff8002a2fd <ZydisSetAVXInformation+0x3ea>
ffffffff8002a2ff:	90                   	nop
ffffffff8002a300:	eb 01                	jmp    ffffffff8002a303 <ZydisSetAVXInformation+0x3f0>
ffffffff8002a302:	90                   	nop
ffffffff8002a303:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002a307:	0f b6 40 0d          	movzbl 0xd(%rax),%eax
ffffffff8002a30b:	c0 e8 05             	shr    $0x5,%al
ffffffff8002a30e:	0f b6 c0             	movzbl %al,%eax
ffffffff8002a311:	48 98                	cltq   
ffffffff8002a313:	48 8d 15 19 58 01 00 	lea    0x15819(%rip),%rdx        # ffffffff8003fb33 <scales.21>
ffffffff8002a31a:	0f b6 04 10          	movzbl (%rax,%rdx,1),%eax
ffffffff8002a31e:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
ffffffff8002a322:	88 42 1d             	mov    %al,0x1d(%rdx)
ffffffff8002a325:	e9 e3 01 00 00       	jmp    ffffffff8002a50d <ZydisSetAVXInformation+0x5fa>
ffffffff8002a32a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8002a32e:	0f b6 40 1b          	movzbl 0x1b(%rax),%eax
ffffffff8002a332:	c0 e8 05             	shr    $0x5,%al
ffffffff8002a335:	88 45 e6             	mov    %al,-0x1a(%rbp)
ffffffff8002a338:	0f b6 45 e6          	movzbl -0x1a(%rbp),%eax
ffffffff8002a33c:	48 98                	cltq   
ffffffff8002a33e:	48 8d 15 f4 57 01 00 	lea    0x157f4(%rip),%rdx        # ffffffff8003fb39 <scales.20>
ffffffff8002a345:	0f b6 04 10          	movzbl (%rax,%rdx,1),%eax
ffffffff8002a349:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
ffffffff8002a34d:	88 42 1d             	mov    %al,0x1d(%rdx)
ffffffff8002a350:	e9 b8 01 00 00       	jmp    ffffffff8002a50d <ZydisSetAVXInformation+0x5fa>
ffffffff8002a355:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8002a359:	c6 40 1d 10          	movb   $0x10,0x1d(%rax)
ffffffff8002a35d:	e9 ab 01 00 00       	jmp    ffffffff8002a50d <ZydisSetAVXInformation+0x5fa>
ffffffff8002a362:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8002a366:	0f b6 40 0a          	movzbl 0xa(%rax),%eax
ffffffff8002a36a:	0f b6 c0             	movzbl %al,%eax
ffffffff8002a36d:	85 c0                	test   %eax,%eax
ffffffff8002a36f:	74 07                	je     ffffffff8002a378 <ZydisSetAVXInformation+0x465>
ffffffff8002a371:	83 f8 01             	cmp    $0x1,%eax
ffffffff8002a374:	74 0c                	je     ffffffff8002a382 <ZydisSetAVXInformation+0x46f>
ffffffff8002a376:	eb 2e                	jmp    ffffffff8002a3a6 <ZydisSetAVXInformation+0x493>
ffffffff8002a378:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8002a37c:	c6 40 1d 08          	movb   $0x8,0x1d(%rax)
ffffffff8002a380:	eb 26                	jmp    ffffffff8002a3a8 <ZydisSetAVXInformation+0x495>
ffffffff8002a382:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002a386:	0f b7 40 38          	movzwl 0x38(%rax),%eax
ffffffff8002a38a:	66 3d 00 01          	cmp    $0x100,%ax
ffffffff8002a38e:	74 0c                	je     ffffffff8002a39c <ZydisSetAVXInformation+0x489>
ffffffff8002a390:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002a394:	0f b7 40 38          	movzwl 0x38(%rax),%eax
ffffffff8002a398:	66 3d 00 02          	cmp    $0x200,%ax
ffffffff8002a39c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8002a3a0:	c6 40 1d 10          	movb   $0x10,0x1d(%rax)
ffffffff8002a3a4:	eb 02                	jmp    ffffffff8002a3a8 <ZydisSetAVXInformation+0x495>
ffffffff8002a3a6:	eb fe                	jmp    ffffffff8002a3a6 <ZydisSetAVXInformation+0x493>
ffffffff8002a3a8:	e9 60 01 00 00       	jmp    ffffffff8002a50d <ZydisSetAVXInformation+0x5fa>
ffffffff8002a3ad:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8002a3b1:	0f b6 40 0a          	movzbl 0xa(%rax),%eax
ffffffff8002a3b5:	0f b6 c0             	movzbl %al,%eax
ffffffff8002a3b8:	85 c0                	test   %eax,%eax
ffffffff8002a3ba:	74 07                	je     ffffffff8002a3c3 <ZydisSetAVXInformation+0x4b0>
ffffffff8002a3bc:	83 f8 01             	cmp    $0x1,%eax
ffffffff8002a3bf:	74 26                	je     ffffffff8002a3e7 <ZydisSetAVXInformation+0x4d4>
ffffffff8002a3c1:	eb 2e                	jmp    ffffffff8002a3f1 <ZydisSetAVXInformation+0x4de>
ffffffff8002a3c3:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002a3c7:	0f b7 40 38          	movzwl 0x38(%rax),%eax
ffffffff8002a3cb:	66 3d 00 01          	cmp    $0x100,%ax
ffffffff8002a3cf:	74 0c                	je     ffffffff8002a3dd <ZydisSetAVXInformation+0x4ca>
ffffffff8002a3d1:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002a3d5:	0f b7 40 38          	movzwl 0x38(%rax),%eax
ffffffff8002a3d9:	66 3d 00 02          	cmp    $0x200,%ax
ffffffff8002a3dd:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8002a3e1:	c6 40 1d 10          	movb   $0x10,0x1d(%rax)
ffffffff8002a3e5:	eb 0c                	jmp    ffffffff8002a3f3 <ZydisSetAVXInformation+0x4e0>
ffffffff8002a3e7:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8002a3eb:	c6 40 1d 20          	movb   $0x20,0x1d(%rax)
ffffffff8002a3ef:	eb 02                	jmp    ffffffff8002a3f3 <ZydisSetAVXInformation+0x4e0>
ffffffff8002a3f1:	eb fe                	jmp    ffffffff8002a3f1 <ZydisSetAVXInformation+0x4de>
ffffffff8002a3f3:	e9 15 01 00 00       	jmp    ffffffff8002a50d <ZydisSetAVXInformation+0x5fa>
ffffffff8002a3f8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8002a3fc:	c6 40 1d 20          	movb   $0x20,0x1d(%rax)
ffffffff8002a400:	e9 08 01 00 00       	jmp    ffffffff8002a50d <ZydisSetAVXInformation+0x5fa>
ffffffff8002a405:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
ffffffff8002a409:	48 98                	cltq   
ffffffff8002a40b:	48 8d 15 2a 57 01 00 	lea    0x1572a(%rip),%rdx        # ffffffff8003fb3c <scales.19>
ffffffff8002a412:	0f b6 04 10          	movzbl (%rax,%rdx,1),%eax
ffffffff8002a416:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
ffffffff8002a41a:	88 42 1d             	mov    %al,0x1d(%rdx)
ffffffff8002a41d:	e9 eb 00 00 00       	jmp    ffffffff8002a50d <ZydisSetAVXInformation+0x5fa>
ffffffff8002a422:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
ffffffff8002a426:	48 98                	cltq   
ffffffff8002a428:	48 8d 15 10 57 01 00 	lea    0x15710(%rip),%rdx        # ffffffff8003fb3f <scales.18>
ffffffff8002a42f:	0f b6 04 10          	movzbl (%rax,%rdx,1),%eax
ffffffff8002a433:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
ffffffff8002a437:	88 42 1d             	mov    %al,0x1d(%rdx)
ffffffff8002a43a:	e9 ce 00 00 00       	jmp    ffffffff8002a50d <ZydisSetAVXInformation+0x5fa>
ffffffff8002a43f:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
ffffffff8002a443:	48 98                	cltq   
ffffffff8002a445:	48 8d 15 f6 56 01 00 	lea    0x156f6(%rip),%rdx        # ffffffff8003fb42 <scales.17.lto_priv.1>
ffffffff8002a44c:	0f b6 04 10          	movzbl (%rax,%rdx,1),%eax
ffffffff8002a450:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
ffffffff8002a454:	88 42 1d             	mov    %al,0x1d(%rdx)
ffffffff8002a457:	e9 b1 00 00 00       	jmp    ffffffff8002a50d <ZydisSetAVXInformation+0x5fa>
ffffffff8002a45c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8002a460:	c6 40 1d 10          	movb   $0x10,0x1d(%rax)
ffffffff8002a464:	e9 a4 00 00 00       	jmp    ffffffff8002a50d <ZydisSetAVXInformation+0x5fa>
ffffffff8002a469:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
ffffffff8002a46d:	48 98                	cltq   
ffffffff8002a46f:	48 8d 15 cf 56 01 00 	lea    0x156cf(%rip),%rdx        # ffffffff8003fb45 <scales.16.lto_priv.1>
ffffffff8002a476:	0f b6 04 10          	movzbl (%rax,%rdx,1),%eax
ffffffff8002a47a:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
ffffffff8002a47e:	88 42 1d             	mov    %al,0x1d(%rdx)
ffffffff8002a481:	e9 87 00 00 00       	jmp    ffffffff8002a50d <ZydisSetAVXInformation+0x5fa>
ffffffff8002a486:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002a48a:	0f b6 80 0f 01 00 00 	movzbl 0x10f(%rax),%eax
ffffffff8002a491:	88 45 e7             	mov    %al,-0x19(%rbp)
ffffffff8002a494:	80 7d e7 00          	cmpb   $0x0,-0x19(%rbp)
ffffffff8002a498:	74 0d                	je     ffffffff8002a4a7 <ZydisSetAVXInformation+0x594>
ffffffff8002a49a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002a49e:	0f b6 40 0e          	movzbl 0xe(%rax),%eax
ffffffff8002a4a2:	83 e0 03             	and    $0x3,%eax
ffffffff8002a4a5:	3c 01                	cmp    $0x1,%al
ffffffff8002a4a7:	0f b6 45 e7          	movzbl -0x19(%rbp),%eax
ffffffff8002a4ab:	0f b6 55 ff          	movzbl -0x1(%rbp),%edx
ffffffff8002a4af:	48 63 ca             	movslq %edx,%rcx
ffffffff8002a4b2:	48 63 d0             	movslq %eax,%rdx
ffffffff8002a4b5:	48 89 d0             	mov    %rdx,%rax
ffffffff8002a4b8:	48 01 c0             	add    %rax,%rax
ffffffff8002a4bb:	48 01 d0             	add    %rdx,%rax
ffffffff8002a4be:	48 8d 14 08          	lea    (%rax,%rcx,1),%rdx
ffffffff8002a4c2:	48 8d 05 7f 56 01 00 	lea    0x1567f(%rip),%rax        # ffffffff8003fb48 <scales.15.lto_priv.1>
ffffffff8002a4c9:	48 01 d0             	add    %rdx,%rax
ffffffff8002a4cc:	0f b6 00             	movzbl (%rax),%eax
ffffffff8002a4cf:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
ffffffff8002a4d3:	88 42 1d             	mov    %al,0x1d(%rdx)
ffffffff8002a4d6:	0f b6 45 e7          	movzbl -0x19(%rbp),%eax
ffffffff8002a4da:	0f b6 55 ff          	movzbl -0x1(%rbp),%edx
ffffffff8002a4de:	48 63 ca             	movslq %edx,%rcx
ffffffff8002a4e1:	48 63 d0             	movslq %eax,%rdx
ffffffff8002a4e4:	48 89 d0             	mov    %rdx,%rax
ffffffff8002a4e7:	48 01 c0             	add    %rax,%rax
ffffffff8002a4ea:	48 01 d0             	add    %rdx,%rax
ffffffff8002a4ed:	48 01 c8             	add    %rcx,%rax
ffffffff8002a4f0:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
ffffffff8002a4f7:	00 
ffffffff8002a4f8:	48 8d 05 51 56 01 00 	lea    0x15651(%rip),%rax        # ffffffff8003fb50 <broadcasts.14>
ffffffff8002a4ff:	8b 14 02             	mov    (%rdx,%rax,1),%edx
ffffffff8002a502:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002a506:	89 50 48             	mov    %edx,0x48(%rax)
ffffffff8002a509:	eb 02                	jmp    ffffffff8002a50d <ZydisSetAVXInformation+0x5fa>
ffffffff8002a50b:	eb fe                	jmp    ffffffff8002a50b <ZydisSetAVXInformation+0x5f8>
ffffffff8002a50d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002a511:	0f b6 50 0e          	movzbl 0xe(%rax),%edx
ffffffff8002a515:	c0 ea 07             	shr    $0x7,%dl
ffffffff8002a518:	0f b6 d2             	movzbl %dl,%edx
ffffffff8002a51b:	0f b6 40 0f          	movzbl 0xf(%rax),%eax
ffffffff8002a51f:	83 e0 07             	and    $0x7,%eax
ffffffff8002a522:	48 01 c0             	add    %rax,%rax
ffffffff8002a525:	48 09 d0             	or     %rdx,%rax
ffffffff8002a528:	84 c0                	test   %al,%al
ffffffff8002a52a:	74 41                	je     ffffffff8002a56d <ZydisSetAVXInformation+0x65a>
ffffffff8002a52c:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002a530:	c6 40 44 01          	movb   $0x1,0x44(%rax)
ffffffff8002a534:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002a538:	0f b6 50 0e          	movzbl 0xe(%rax),%edx
ffffffff8002a53c:	c0 ea 07             	shr    $0x7,%dl
ffffffff8002a53f:	0f b6 d2             	movzbl %dl,%edx
ffffffff8002a542:	0f b6 40 0f          	movzbl 0xf(%rax),%eax
ffffffff8002a546:	83 e0 07             	and    $0x7,%eax
ffffffff8002a549:	48 01 c0             	add    %rax,%rax
ffffffff8002a54c:	48 09 d0             	or     %rdx,%rax
ffffffff8002a54f:	0f b6 c0             	movzbl %al,%eax
ffffffff8002a552:	48 98                	cltq   
ffffffff8002a554:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
ffffffff8002a55b:	00 
ffffffff8002a55c:	48 8d 05 1d 56 01 00 	lea    0x1561d(%rip),%rax        # ffffffff8003fb80 <broadcasts.13>
ffffffff8002a563:	8b 14 02             	mov    (%rdx,%rax,1),%edx
ffffffff8002a566:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002a56a:	89 50 48             	mov    %edx,0x48(%rax)
ffffffff8002a56d:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002a571:	0f b6 80 0f 01 00 00 	movzbl 0x10f(%rax),%eax
ffffffff8002a578:	84 c0                	test   %al,%al
ffffffff8002a57a:	74 4c                	je     ffffffff8002a5c8 <ZydisSetAVXInformation+0x6b5>
ffffffff8002a57c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002a580:	0f b6 40 0e          	movzbl 0xe(%rax),%eax
ffffffff8002a584:	83 e0 03             	and    $0x3,%eax
ffffffff8002a587:	0f b6 c0             	movzbl %al,%eax
ffffffff8002a58a:	83 f8 03             	cmp    $0x3,%eax
ffffffff8002a58d:	74 2c                	je     ffffffff8002a5bb <ZydisSetAVXInformation+0x6a8>
ffffffff8002a58f:	83 f8 03             	cmp    $0x3,%eax
ffffffff8002a592:	7f 31                	jg     ffffffff8002a5c5 <ZydisSetAVXInformation+0x6b2>
ffffffff8002a594:	83 f8 01             	cmp    $0x1,%eax
ffffffff8002a597:	7f 06                	jg     ffffffff8002a59f <ZydisSetAVXInformation+0x68c>
ffffffff8002a599:	85 c0                	test   %eax,%eax
ffffffff8002a59b:	79 2a                	jns    ffffffff8002a5c7 <ZydisSetAVXInformation+0x6b4>
ffffffff8002a59d:	eb 26                	jmp    ffffffff8002a5c5 <ZydisSetAVXInformation+0x6b2>
ffffffff8002a59f:	83 f8 02             	cmp    $0x2,%eax
ffffffff8002a5a2:	75 21                	jne    ffffffff8002a5c5 <ZydisSetAVXInformation+0x6b2>
ffffffff8002a5a4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8002a5a8:	0f b6 40 0f          	movzbl 0xf(%rax),%eax
ffffffff8002a5ac:	0f b6 c0             	movzbl %al,%eax
ffffffff8002a5af:	83 c0 01             	add    $0x1,%eax
ffffffff8002a5b2:	89 c2                	mov    %eax,%edx
ffffffff8002a5b4:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002a5b8:	89 50 4c             	mov    %edx,0x4c(%rax)
ffffffff8002a5bb:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002a5bf:	c6 40 58 01          	movb   $0x1,0x58(%rax)
ffffffff8002a5c3:	eb 03                	jmp    ffffffff8002a5c8 <ZydisSetAVXInformation+0x6b5>
ffffffff8002a5c5:	eb fe                	jmp    ffffffff8002a5c5 <ZydisSetAVXInformation+0x6b2>
ffffffff8002a5c7:	90                   	nop
ffffffff8002a5c8:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002a5cc:	0f b6 80 11 01 00 00 	movzbl 0x111(%rax),%eax
ffffffff8002a5d3:	0f b6 c0             	movzbl %al,%eax
ffffffff8002a5d6:	05 f8 00 00 00       	add    $0xf8,%eax
ffffffff8002a5db:	89 c2                	mov    %eax,%edx
ffffffff8002a5dd:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002a5e1:	89 50 40             	mov    %edx,0x40(%rax)
ffffffff8002a5e4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002a5e8:	0f b6 40 0e          	movzbl 0xe(%rax),%eax
ffffffff8002a5ec:	c0 e8 05             	shr    $0x5,%al
ffffffff8002a5ef:	83 e0 03             	and    $0x3,%eax
ffffffff8002a5f2:	0f b6 c0             	movzbl %al,%eax
ffffffff8002a5f5:	83 f8 02             	cmp    $0x2,%eax
ffffffff8002a5f8:	74 39                	je     ffffffff8002a633 <ZydisSetAVXInformation+0x720>
ffffffff8002a5fa:	83 f8 02             	cmp    $0x2,%eax
ffffffff8002a5fd:	7f 50                	jg     ffffffff8002a64f <ZydisSetAVXInformation+0x73c>
ffffffff8002a5ff:	85 c0                	test   %eax,%eax
ffffffff8002a601:	74 07                	je     ffffffff8002a60a <ZydisSetAVXInformation+0x6f7>
ffffffff8002a603:	83 f8 01             	cmp    $0x1,%eax
ffffffff8002a606:	74 1e                	je     ffffffff8002a626 <ZydisSetAVXInformation+0x713>
ffffffff8002a608:	eb 45                	jmp    ffffffff8002a64f <ZydisSetAVXInformation+0x73c>
ffffffff8002a60a:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002a60e:	0f b6 80 0c 01 00 00 	movzbl 0x10c(%rax),%eax
ffffffff8002a615:	0f b6 c0             	movzbl %al,%eax
ffffffff8002a618:	83 c0 02             	add    $0x2,%eax
ffffffff8002a61b:	89 c2                	mov    %eax,%edx
ffffffff8002a61d:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002a621:	89 50 3c             	mov    %edx,0x3c(%rax)
ffffffff8002a624:	eb 2b                	jmp    ffffffff8002a651 <ZydisSetAVXInformation+0x73e>
ffffffff8002a626:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002a62a:	c7 40 3c 03 00 00 00 	movl   $0x3,0x3c(%rax)
ffffffff8002a631:	eb 1e                	jmp    ffffffff8002a651 <ZydisSetAVXInformation+0x73e>
ffffffff8002a633:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002a637:	0f b6 80 0c 01 00 00 	movzbl 0x10c(%rax),%eax
ffffffff8002a63e:	0f b6 c0             	movzbl %al,%eax
ffffffff8002a641:	83 c0 04             	add    $0x4,%eax
ffffffff8002a644:	89 c2                	mov    %eax,%edx
ffffffff8002a646:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002a64a:	89 50 3c             	mov    %edx,0x3c(%rax)
ffffffff8002a64d:	eb 02                	jmp    ffffffff8002a651 <ZydisSetAVXInformation+0x73e>
ffffffff8002a64f:	eb fe                	jmp    ffffffff8002a64f <ZydisSetAVXInformation+0x73c>
ffffffff8002a651:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002a655:	0f b6 80 11 01 00 00 	movzbl 0x111(%rax),%eax
ffffffff8002a65c:	84 c0                	test   %al,%al
ffffffff8002a65e:	0f 85 9c 06 00 00    	jne    ffffffff8002ad00 <ZydisSetAVXInformation+0xded>
ffffffff8002a664:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002a668:	c7 40 3c 01 00 00 00 	movl   $0x1,0x3c(%rax)
ffffffff8002a66f:	e9 8c 06 00 00       	jmp    ffffffff8002ad00 <ZydisSetAVXInformation+0xded>
ffffffff8002a674:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002a678:	66 c7 40 38 00 02    	movw   $0x200,0x38(%rax)
ffffffff8002a67e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff8002a682:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff8002a686:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8002a68a:	0f b6 40 0d          	movzbl 0xd(%rax),%eax
ffffffff8002a68e:	c0 e8 05             	shr    $0x5,%al
ffffffff8002a691:	83 e0 01             	and    $0x1,%eax
ffffffff8002a694:	88 45 fe             	mov    %al,-0x2(%rbp)
ffffffff8002a697:	80 7d fe 00          	cmpb   $0x0,-0x2(%rbp)
ffffffff8002a69b:	74 1e                	je     ffffffff8002a6bb <ZydisSetAVXInformation+0x7a8>
ffffffff8002a69d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8002a6a1:	0f b6 50 0d          	movzbl 0xd(%rax),%edx
ffffffff8002a6a5:	c0 ea 06             	shr    $0x6,%dl
ffffffff8002a6a8:	0f b6 d2             	movzbl %dl,%edx
ffffffff8002a6ab:	0f b6 40 0e          	movzbl 0xe(%rax),%eax
ffffffff8002a6af:	83 e0 01             	and    $0x1,%eax
ffffffff8002a6b2:	48 c1 e0 02          	shl    $0x2,%rax
ffffffff8002a6b6:	48 09 d0             	or     %rdx,%rax
ffffffff8002a6b9:	84 c0                	test   %al,%al
ffffffff8002a6bb:	80 7d fe 00          	cmpb   $0x0,-0x2(%rbp)
ffffffff8002a6bf:	0f 85 b1 00 00 00    	jne    ffffffff8002a776 <ZydisSetAVXInformation+0x863>
ffffffff8002a6c5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8002a6c9:	0f b6 50 0d          	movzbl 0xd(%rax),%edx
ffffffff8002a6cd:	c0 ea 06             	shr    $0x6,%dl
ffffffff8002a6d0:	0f b6 d2             	movzbl %dl,%edx
ffffffff8002a6d3:	0f b6 40 0e          	movzbl 0xe(%rax),%eax
ffffffff8002a6d7:	83 e0 01             	and    $0x1,%eax
ffffffff8002a6da:	48 c1 e0 02          	shl    $0x2,%rax
ffffffff8002a6de:	48 09 d0             	or     %rdx,%rax
ffffffff8002a6e1:	84 c0                	test   %al,%al
ffffffff8002a6e3:	0f 84 8d 00 00 00    	je     ffffffff8002a776 <ZydisSetAVXInformation+0x863>
ffffffff8002a6e9:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002a6ed:	c6 40 44 01          	movb   $0x1,0x44(%rax)
ffffffff8002a6f1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8002a6f5:	0f b6 50 0d          	movzbl 0xd(%rax),%edx
ffffffff8002a6f9:	c0 ea 06             	shr    $0x6,%dl
ffffffff8002a6fc:	0f b6 d2             	movzbl %dl,%edx
ffffffff8002a6ff:	0f b6 40 0e          	movzbl 0xe(%rax),%eax
ffffffff8002a703:	83 e0 01             	and    $0x1,%eax
ffffffff8002a706:	48 c1 e0 02          	shl    $0x2,%rax
ffffffff8002a70a:	48 09 d0             	or     %rdx,%rax
ffffffff8002a70d:	0f b6 c0             	movzbl %al,%eax
ffffffff8002a710:	83 f8 04             	cmp    $0x4,%eax
ffffffff8002a713:	74 4e                	je     ffffffff8002a763 <ZydisSetAVXInformation+0x850>
ffffffff8002a715:	83 f8 04             	cmp    $0x4,%eax
ffffffff8002a718:	7f 5a                	jg     ffffffff8002a774 <ZydisSetAVXInformation+0x861>
ffffffff8002a71a:	83 f8 03             	cmp    $0x3,%eax
ffffffff8002a71d:	74 33                	je     ffffffff8002a752 <ZydisSetAVXInformation+0x83f>
ffffffff8002a71f:	83 f8 03             	cmp    $0x3,%eax
ffffffff8002a722:	7f 50                	jg     ffffffff8002a774 <ZydisSetAVXInformation+0x861>
ffffffff8002a724:	83 f8 01             	cmp    $0x1,%eax
ffffffff8002a727:	74 07                	je     ffffffff8002a730 <ZydisSetAVXInformation+0x81d>
ffffffff8002a729:	83 f8 02             	cmp    $0x2,%eax
ffffffff8002a72c:	74 13                	je     ffffffff8002a741 <ZydisSetAVXInformation+0x82e>
ffffffff8002a72e:	eb 44                	jmp    ffffffff8002a774 <ZydisSetAVXInformation+0x861>
ffffffff8002a730:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002a734:	c7 40 48 03 00 00 00 	movl   $0x3,0x48(%rax)
ffffffff8002a73b:	c6 45 fe 01          	movb   $0x1,-0x2(%rbp)
ffffffff8002a73f:	eb 35                	jmp    ffffffff8002a776 <ZydisSetAVXInformation+0x863>
ffffffff8002a741:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002a745:	c7 40 48 04 00 00 00 	movl   $0x4,0x48(%rax)
ffffffff8002a74c:	c6 45 fe 01          	movb   $0x1,-0x2(%rbp)
ffffffff8002a750:	eb 24                	jmp    ffffffff8002a776 <ZydisSetAVXInformation+0x863>
ffffffff8002a752:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002a756:	c7 40 48 0a 00 00 00 	movl   $0xa,0x48(%rax)
ffffffff8002a75d:	c6 45 fe 02          	movb   $0x2,-0x2(%rbp)
ffffffff8002a761:	eb 13                	jmp    ffffffff8002a776 <ZydisSetAVXInformation+0x863>
ffffffff8002a763:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002a767:	c7 40 48 0b 00 00 00 	movl   $0xb,0x48(%rax)
ffffffff8002a76e:	c6 45 fe 02          	movb   $0x2,-0x2(%rbp)
ffffffff8002a772:	eb 02                	jmp    ffffffff8002a776 <ZydisSetAVXInformation+0x863>
ffffffff8002a774:	eb fe                	jmp    ffffffff8002a774 <ZydisSetAVXInformation+0x861>
ffffffff8002a776:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8002a77a:	0f b6 50 0c          	movzbl 0xc(%rax),%edx
ffffffff8002a77e:	c0 ea 06             	shr    $0x6,%dl
ffffffff8002a781:	0f b6 d2             	movzbl %dl,%edx
ffffffff8002a784:	0f b6 40 0d          	movzbl 0xd(%rax),%eax
ffffffff8002a788:	83 e0 07             	and    $0x7,%eax
ffffffff8002a78b:	48 c1 e0 02          	shl    $0x2,%rax
ffffffff8002a78f:	48 09 d0             	or     %rdx,%rax
ffffffff8002a792:	0f b6 c0             	movzbl %al,%eax
ffffffff8002a795:	83 f8 19             	cmp    $0x19,%eax
ffffffff8002a798:	0f 8f e5 01 00 00    	jg     ffffffff8002a983 <ZydisSetAVXInformation+0xa70>
ffffffff8002a79e:	83 f8 15             	cmp    $0x15,%eax
ffffffff8002a7a1:	7d 36                	jge    ffffffff8002a7d9 <ZydisSetAVXInformation+0x8c6>
ffffffff8002a7a3:	83 f8 14             	cmp    $0x14,%eax
ffffffff8002a7a6:	0f 8f d7 01 00 00    	jg     ffffffff8002a983 <ZydisSetAVXInformation+0xa70>
ffffffff8002a7ac:	83 f8 0a             	cmp    $0xa,%eax
ffffffff8002a7af:	7d 57                	jge    ffffffff8002a808 <ZydisSetAVXInformation+0x8f5>
ffffffff8002a7b1:	83 f8 09             	cmp    $0x9,%eax
ffffffff8002a7b4:	0f 8f c9 01 00 00    	jg     ffffffff8002a983 <ZydisSetAVXInformation+0xa70>
ffffffff8002a7ba:	83 f8 08             	cmp    $0x8,%eax
ffffffff8002a7bd:	0f 8d c2 01 00 00    	jge    ffffffff8002a985 <ZydisSetAVXInformation+0xa72>
ffffffff8002a7c3:	83 f8 03             	cmp    $0x3,%eax
ffffffff8002a7c6:	0f 8f 89 00 00 00    	jg     ffffffff8002a855 <ZydisSetAVXInformation+0x942>
ffffffff8002a7cc:	85 c0                	test   %eax,%eax
ffffffff8002a7ce:	0f 89 b1 01 00 00    	jns    ffffffff8002a985 <ZydisSetAVXInformation+0xa72>
ffffffff8002a7d4:	e9 aa 01 00 00       	jmp    ffffffff8002a983 <ZydisSetAVXInformation+0xa70>
ffffffff8002a7d9:	83 e8 15             	sub    $0x15,%eax
ffffffff8002a7dc:	83 f8 04             	cmp    $0x4,%eax
ffffffff8002a7df:	0f 87 9e 01 00 00    	ja     ffffffff8002a983 <ZydisSetAVXInformation+0xa70>
ffffffff8002a7e5:	89 c0                	mov    %eax,%eax
ffffffff8002a7e7:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
ffffffff8002a7ee:	00 
ffffffff8002a7ef:	48 8d 05 b6 4f 01 00 	lea    0x14fb6(%rip),%rax        # ffffffff8003f7ac <GPR8_MAPPING.0+0x1bc>
ffffffff8002a7f6:	8b 04 02             	mov    (%rdx,%rax,1),%eax
ffffffff8002a7f9:	48 98                	cltq   
ffffffff8002a7fb:	48 8d 15 aa 4f 01 00 	lea    0x14faa(%rip),%rdx        # ffffffff8003f7ac <GPR8_MAPPING.0+0x1bc>
ffffffff8002a802:	48 01 d0             	add    %rdx,%rax
ffffffff8002a805:	3e ff e0             	notrack jmp *%rax
ffffffff8002a808:	89 c0                	mov    %eax,%eax
ffffffff8002a80a:	ba 01 00 00 00       	mov    $0x1,%edx
ffffffff8002a80f:	89 c1                	mov    %eax,%ecx
ffffffff8002a811:	48 d3 e2             	shl    %cl,%rdx
ffffffff8002a814:	48 89 d0             	mov    %rdx,%rax
ffffffff8002a817:	48 89 c2             	mov    %rax,%rdx
ffffffff8002a81a:	81 e2 00 c0 11 00    	and    $0x11c000,%edx
ffffffff8002a820:	48 85 d2             	test   %rdx,%rdx
ffffffff8002a823:	0f 95 c2             	setne  %dl
ffffffff8002a826:	84 d2                	test   %dl,%dl
ffffffff8002a828:	75 7d                	jne    ffffffff8002a8a7 <ZydisSetAVXInformation+0x994>
ffffffff8002a82a:	48 89 c2             	mov    %rax,%rdx
ffffffff8002a82d:	81 e2 00 1c 04 00    	and    $0x41c00,%edx
ffffffff8002a833:	48 85 d2             	test   %rdx,%rdx
ffffffff8002a836:	0f 95 c2             	setne  %dl
ffffffff8002a839:	84 d2                	test   %dl,%dl
ffffffff8002a83b:	75 31                	jne    ffffffff8002a86e <ZydisSetAVXInformation+0x95b>
ffffffff8002a83d:	25 00 20 0a 00       	and    $0xa2000,%eax
ffffffff8002a842:	48 85 c0             	test   %rax,%rax
ffffffff8002a845:	0f 95 c0             	setne  %al
ffffffff8002a848:	84 c0                	test   %al,%al
ffffffff8002a84a:	0f 85 90 00 00 00    	jne    ffffffff8002a8e0 <ZydisSetAVXInformation+0x9cd>
ffffffff8002a850:	e9 2e 01 00 00       	jmp    ffffffff8002a983 <ZydisSetAVXInformation+0xa70>
ffffffff8002a855:	83 e8 04             	sub    $0x4,%eax
ffffffff8002a858:	83 f8 03             	cmp    $0x3,%eax
ffffffff8002a85b:	0f 87 22 01 00 00    	ja     ffffffff8002a983 <ZydisSetAVXInformation+0xa70>
ffffffff8002a861:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8002a865:	c6 40 1d 40          	movb   $0x40,0x1d(%rax)
ffffffff8002a869:	e9 18 01 00 00       	jmp    ffffffff8002a986 <ZydisSetAVXInformation+0xa73>
ffffffff8002a86e:	0f b6 55 fe          	movzbl -0x2(%rbp),%edx
ffffffff8002a872:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002a876:	0f b6 80 1c 01 00 00 	movzbl 0x11c(%rax),%eax
ffffffff8002a87d:	0f b6 c0             	movzbl %al,%eax
ffffffff8002a880:	48 63 c8             	movslq %eax,%rcx
ffffffff8002a883:	48 63 c2             	movslq %edx,%rax
ffffffff8002a886:	48 c1 e0 03          	shl    $0x3,%rax
ffffffff8002a88a:	48 8d 14 08          	lea    (%rax,%rcx,1),%rdx
ffffffff8002a88e:	48 8d 05 2b 53 01 00 	lea    0x1532b(%rip),%rax        # ffffffff8003fbc0 <lookup.12>
ffffffff8002a895:	48 01 d0             	add    %rdx,%rax
ffffffff8002a898:	0f b6 00             	movzbl (%rax),%eax
ffffffff8002a89b:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
ffffffff8002a89f:	88 42 1d             	mov    %al,0x1d(%rdx)
ffffffff8002a8a2:	e9 df 00 00 00       	jmp    ffffffff8002a986 <ZydisSetAVXInformation+0xa73>
ffffffff8002a8a7:	0f b6 55 fe          	movzbl -0x2(%rbp),%edx
ffffffff8002a8ab:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002a8af:	0f b6 80 1c 01 00 00 	movzbl 0x11c(%rax),%eax
ffffffff8002a8b6:	0f b6 c0             	movzbl %al,%eax
ffffffff8002a8b9:	48 63 c8             	movslq %eax,%rcx
ffffffff8002a8bc:	48 63 c2             	movslq %edx,%rax
ffffffff8002a8bf:	48 c1 e0 03          	shl    $0x3,%rax
ffffffff8002a8c3:	48 8d 14 08          	lea    (%rax,%rcx,1),%rdx
ffffffff8002a8c7:	48 8d 05 12 53 01 00 	lea    0x15312(%rip),%rax        # ffffffff8003fbe0 <lookup.11>
ffffffff8002a8ce:	48 01 d0             	add    %rdx,%rax
ffffffff8002a8d1:	0f b6 00             	movzbl (%rax),%eax
ffffffff8002a8d4:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
ffffffff8002a8d8:	88 42 1d             	mov    %al,0x1d(%rdx)
ffffffff8002a8db:	e9 a6 00 00 00       	jmp    ffffffff8002a986 <ZydisSetAVXInformation+0xa73>
ffffffff8002a8e0:	0f b6 55 fe          	movzbl -0x2(%rbp),%edx
ffffffff8002a8e4:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002a8e8:	0f b6 80 1c 01 00 00 	movzbl 0x11c(%rax),%eax
ffffffff8002a8ef:	0f b6 c0             	movzbl %al,%eax
ffffffff8002a8f2:	48 63 c8             	movslq %eax,%rcx
ffffffff8002a8f5:	48 63 d2             	movslq %edx,%rdx
ffffffff8002a8f8:	48 89 d0             	mov    %rdx,%rax
ffffffff8002a8fb:	48 01 c0             	add    %rax,%rax
ffffffff8002a8fe:	48 01 d0             	add    %rdx,%rax
ffffffff8002a901:	48 8d 14 08          	lea    (%rax,%rcx,1),%rdx
ffffffff8002a905:	48 8d 05 ec 52 01 00 	lea    0x152ec(%rip),%rax        # ffffffff8003fbf8 <lookup.10>
ffffffff8002a90c:	48 01 d0             	add    %rdx,%rax
ffffffff8002a90f:	0f b6 00             	movzbl (%rax),%eax
ffffffff8002a912:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
ffffffff8002a916:	88 42 1d             	mov    %al,0x1d(%rdx)
ffffffff8002a919:	eb 6b                	jmp    ffffffff8002a986 <ZydisSetAVXInformation+0xa73>
ffffffff8002a91b:	0f b6 55 fe          	movzbl -0x2(%rbp),%edx
ffffffff8002a91f:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002a923:	0f b6 80 1c 01 00 00 	movzbl 0x11c(%rax),%eax
ffffffff8002a92a:	0f b6 c0             	movzbl %al,%eax
ffffffff8002a92d:	48 63 c8             	movslq %eax,%rcx
ffffffff8002a930:	48 63 c2             	movslq %edx,%rax
ffffffff8002a933:	48 c1 e0 03          	shl    $0x3,%rax
ffffffff8002a937:	48 8d 14 08          	lea    (%rax,%rcx,1),%rdx
ffffffff8002a93b:	48 8d 05 ce 52 01 00 	lea    0x152ce(%rip),%rax        # ffffffff8003fc10 <lookup.9>
ffffffff8002a942:	48 01 d0             	add    %rdx,%rax
ffffffff8002a945:	0f b6 00             	movzbl (%rax),%eax
ffffffff8002a948:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
ffffffff8002a94c:	88 42 1d             	mov    %al,0x1d(%rdx)
ffffffff8002a94f:	eb 35                	jmp    ffffffff8002a986 <ZydisSetAVXInformation+0xa73>
ffffffff8002a951:	0f b6 55 fe          	movzbl -0x2(%rbp),%edx
ffffffff8002a955:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002a959:	0f b6 80 1c 01 00 00 	movzbl 0x11c(%rax),%eax
ffffffff8002a960:	0f b6 c0             	movzbl %al,%eax
ffffffff8002a963:	48 63 c8             	movslq %eax,%rcx
ffffffff8002a966:	48 63 c2             	movslq %edx,%rax
ffffffff8002a969:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
ffffffff8002a96d:	48 8d 05 ac 52 01 00 	lea    0x152ac(%rip),%rax        # ffffffff8003fc20 <lookup.8>
ffffffff8002a974:	48 01 d0             	add    %rdx,%rax
ffffffff8002a977:	0f b6 00             	movzbl (%rax),%eax
ffffffff8002a97a:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
ffffffff8002a97e:	88 42 1d             	mov    %al,0x1d(%rdx)
ffffffff8002a981:	eb 03                	jmp    ffffffff8002a986 <ZydisSetAVXInformation+0xa73>
ffffffff8002a983:	eb fe                	jmp    ffffffff8002a983 <ZydisSetAVXInformation+0xa70>
ffffffff8002a985:	90                   	nop
ffffffff8002a986:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8002a98a:	0f b6 50 0c          	movzbl 0xc(%rax),%edx
ffffffff8002a98e:	c0 ea 06             	shr    $0x6,%dl
ffffffff8002a991:	0f b6 d2             	movzbl %dl,%edx
ffffffff8002a994:	0f b6 40 0d          	movzbl 0xd(%rax),%eax
ffffffff8002a998:	83 e0 07             	and    $0x7,%eax
ffffffff8002a99b:	48 c1 e0 02          	shl    $0x2,%rax
ffffffff8002a99f:	48 09 d0             	or     %rdx,%rax
ffffffff8002a9a2:	89 c2                	mov    %eax,%edx
ffffffff8002a9a4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8002a9a8:	88 50 1c             	mov    %dl,0x1c(%rax)
ffffffff8002a9ab:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8002a9af:	0f b6 50 0c          	movzbl 0xc(%rax),%edx
ffffffff8002a9b3:	c0 ea 06             	shr    $0x6,%dl
ffffffff8002a9b6:	0f b6 d2             	movzbl %dl,%edx
ffffffff8002a9b9:	0f b6 40 0d          	movzbl 0xd(%rax),%eax
ffffffff8002a9bd:	83 e0 07             	and    $0x7,%eax
ffffffff8002a9c0:	48 c1 e0 02          	shl    $0x2,%rax
ffffffff8002a9c4:	48 09 d0             	or     %rdx,%rax
ffffffff8002a9c7:	0f b6 c0             	movzbl %al,%eax
ffffffff8002a9ca:	83 f8 19             	cmp    $0x19,%eax
ffffffff8002a9cd:	0f 87 d2 02 00 00    	ja     ffffffff8002aca5 <ZydisSetAVXInformation+0xd92>
ffffffff8002a9d3:	89 c0                	mov    %eax,%eax
ffffffff8002a9d5:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
ffffffff8002a9dc:	00 
ffffffff8002a9dd:	48 8d 05 dc 4d 01 00 	lea    0x14ddc(%rip),%rax        # ffffffff8003f7c0 <GPR8_MAPPING.0+0x1d0>
ffffffff8002a9e4:	8b 04 02             	mov    (%rdx,%rax,1),%eax
ffffffff8002a9e7:	48 98                	cltq   
ffffffff8002a9e9:	48 8d 15 d0 4d 01 00 	lea    0x14dd0(%rip),%rdx        # ffffffff8003f7c0 <GPR8_MAPPING.0+0x1d0>
ffffffff8002a9f0:	48 01 d0             	add    %rdx,%rax
ffffffff8002a9f3:	3e ff e0             	notrack jmp *%rax
ffffffff8002a9f6:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002a9fa:	0f b6 80 1c 01 00 00 	movzbl 0x11c(%rax),%eax
ffffffff8002aa01:	0f b6 c0             	movzbl %al,%eax
ffffffff8002aa04:	83 e0 03             	and    $0x3,%eax
ffffffff8002aa07:	83 c0 01             	add    $0x1,%eax
ffffffff8002aa0a:	89 c2                	mov    %eax,%edx
ffffffff8002aa0c:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002aa10:	89 50 4c             	mov    %edx,0x4c(%rax)
ffffffff8002aa13:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002aa17:	0f b6 80 1c 01 00 00 	movzbl 0x11c(%rax),%eax
ffffffff8002aa1e:	3c 03                	cmp    $0x3,%al
ffffffff8002aa20:	0f 86 84 02 00 00    	jbe    ffffffff8002acaa <ZydisSetAVXInformation+0xd97>
ffffffff8002aa26:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002aa2a:	c6 40 58 01          	movb   $0x1,0x58(%rax)
ffffffff8002aa2e:	e9 77 02 00 00       	jmp    ffffffff8002acaa <ZydisSetAVXInformation+0xd97>
ffffffff8002aa33:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002aa37:	0f b6 80 1c 01 00 00 	movzbl 0x11c(%rax),%eax
ffffffff8002aa3e:	0f b6 c0             	movzbl %al,%eax
ffffffff8002aa41:	83 c0 01             	add    $0x1,%eax
ffffffff8002aa44:	89 c2                	mov    %eax,%edx
ffffffff8002aa46:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002aa4a:	89 50 50             	mov    %edx,0x50(%rax)
ffffffff8002aa4d:	e9 59 02 00 00       	jmp    ffffffff8002acab <ZydisSetAVXInformation+0xd98>
ffffffff8002aa52:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002aa56:	0f b6 80 1c 01 00 00 	movzbl 0x11c(%rax),%eax
ffffffff8002aa5d:	0f b6 c0             	movzbl %al,%eax
ffffffff8002aa60:	83 f8 07             	cmp    $0x7,%eax
ffffffff8002aa63:	77 7e                	ja     ffffffff8002aae3 <ZydisSetAVXInformation+0xbd0>
ffffffff8002aa65:	89 c0                	mov    %eax,%eax
ffffffff8002aa67:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
ffffffff8002aa6e:	00 
ffffffff8002aa6f:	48 8d 05 b2 4d 01 00 	lea    0x14db2(%rip),%rax        # ffffffff8003f828 <GPR8_MAPPING.0+0x238>
ffffffff8002aa76:	8b 04 02             	mov    (%rdx,%rax,1),%eax
ffffffff8002aa79:	48 98                	cltq   
ffffffff8002aa7b:	48 8d 15 a6 4d 01 00 	lea    0x14da6(%rip),%rdx        # ffffffff8003f828 <GPR8_MAPPING.0+0x238>
ffffffff8002aa82:	48 01 d0             	add    %rdx,%rax
ffffffff8002aa85:	3e ff e0             	notrack jmp *%rax
ffffffff8002aa88:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002aa8c:	c7 40 48 04 00 00 00 	movl   $0x4,0x48(%rax)
ffffffff8002aa93:	eb 51                	jmp    ffffffff8002aae6 <ZydisSetAVXInformation+0xbd3>
ffffffff8002aa95:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002aa99:	c7 40 48 0b 00 00 00 	movl   $0xb,0x48(%rax)
ffffffff8002aaa0:	eb 44                	jmp    ffffffff8002aae6 <ZydisSetAVXInformation+0xbd3>
ffffffff8002aaa2:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002aaa6:	c7 40 54 01 00 00 00 	movl   $0x1,0x54(%rax)
ffffffff8002aaad:	eb 37                	jmp    ffffffff8002aae6 <ZydisSetAVXInformation+0xbd3>
ffffffff8002aaaf:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002aab3:	c7 40 54 03 00 00 00 	movl   $0x3,0x54(%rax)
ffffffff8002aaba:	eb 2a                	jmp    ffffffff8002aae6 <ZydisSetAVXInformation+0xbd3>
ffffffff8002aabc:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002aac0:	c7 40 54 02 00 00 00 	movl   $0x2,0x54(%rax)
ffffffff8002aac7:	eb 1d                	jmp    ffffffff8002aae6 <ZydisSetAVXInformation+0xbd3>
ffffffff8002aac9:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002aacd:	c7 40 54 05 00 00 00 	movl   $0x5,0x54(%rax)
ffffffff8002aad4:	eb 10                	jmp    ffffffff8002aae6 <ZydisSetAVXInformation+0xbd3>
ffffffff8002aad6:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002aada:	c7 40 54 04 00 00 00 	movl   $0x4,0x54(%rax)
ffffffff8002aae1:	eb 03                	jmp    ffffffff8002aae6 <ZydisSetAVXInformation+0xbd3>
ffffffff8002aae3:	eb fe                	jmp    ffffffff8002aae3 <ZydisSetAVXInformation+0xbd0>
ffffffff8002aae5:	90                   	nop
ffffffff8002aae6:	e9 c0 01 00 00       	jmp    ffffffff8002acab <ZydisSetAVXInformation+0xd98>
ffffffff8002aaeb:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002aaef:	0f b6 80 1c 01 00 00 	movzbl 0x11c(%rax),%eax
ffffffff8002aaf6:	0f b6 c0             	movzbl %al,%eax
ffffffff8002aaf9:	83 f8 07             	cmp    $0x7,%eax
ffffffff8002aafc:	77 71                	ja     ffffffff8002ab6f <ZydisSetAVXInformation+0xc5c>
ffffffff8002aafe:	89 c0                	mov    %eax,%eax
ffffffff8002ab00:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
ffffffff8002ab07:	00 
ffffffff8002ab08:	48 8d 05 39 4d 01 00 	lea    0x14d39(%rip),%rax        # ffffffff8003f848 <GPR8_MAPPING.0+0x258>
ffffffff8002ab0f:	8b 04 02             	mov    (%rdx,%rax,1),%eax
ffffffff8002ab12:	48 98                	cltq   
ffffffff8002ab14:	48 8d 15 2d 4d 01 00 	lea    0x14d2d(%rip),%rdx        # ffffffff8003f848 <GPR8_MAPPING.0+0x258>
ffffffff8002ab1b:	48 01 d0             	add    %rdx,%rax
ffffffff8002ab1e:	3e ff e0             	notrack jmp *%rax
ffffffff8002ab21:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002ab25:	c7 40 48 04 00 00 00 	movl   $0x4,0x48(%rax)
ffffffff8002ab2c:	eb 44                	jmp    ffffffff8002ab72 <ZydisSetAVXInformation+0xc5f>
ffffffff8002ab2e:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002ab32:	c7 40 48 0b 00 00 00 	movl   $0xb,0x48(%rax)
ffffffff8002ab39:	eb 37                	jmp    ffffffff8002ab72 <ZydisSetAVXInformation+0xc5f>
ffffffff8002ab3b:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002ab3f:	c7 40 54 03 00 00 00 	movl   $0x3,0x54(%rax)
ffffffff8002ab46:	eb 2a                	jmp    ffffffff8002ab72 <ZydisSetAVXInformation+0xc5f>
ffffffff8002ab48:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002ab4c:	c7 40 54 02 00 00 00 	movl   $0x2,0x54(%rax)
ffffffff8002ab53:	eb 1d                	jmp    ffffffff8002ab72 <ZydisSetAVXInformation+0xc5f>
ffffffff8002ab55:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002ab59:	c7 40 54 05 00 00 00 	movl   $0x5,0x54(%rax)
ffffffff8002ab60:	eb 10                	jmp    ffffffff8002ab72 <ZydisSetAVXInformation+0xc5f>
ffffffff8002ab62:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002ab66:	c7 40 54 04 00 00 00 	movl   $0x4,0x54(%rax)
ffffffff8002ab6d:	eb 03                	jmp    ffffffff8002ab72 <ZydisSetAVXInformation+0xc5f>
ffffffff8002ab6f:	eb fe                	jmp    ffffffff8002ab6f <ZydisSetAVXInformation+0xc5c>
ffffffff8002ab71:	90                   	nop
ffffffff8002ab72:	e9 34 01 00 00       	jmp    ffffffff8002acab <ZydisSetAVXInformation+0xd98>
ffffffff8002ab77:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002ab7b:	0f b6 80 1c 01 00 00 	movzbl 0x11c(%rax),%eax
ffffffff8002ab82:	0f b6 c0             	movzbl %al,%eax
ffffffff8002ab85:	83 f8 02             	cmp    $0x2,%eax
ffffffff8002ab88:	74 1b                	je     ffffffff8002aba5 <ZydisSetAVXInformation+0xc92>
ffffffff8002ab8a:	83 f8 02             	cmp    $0x2,%eax
ffffffff8002ab8d:	7f 23                	jg     ffffffff8002abb2 <ZydisSetAVXInformation+0xc9f>
ffffffff8002ab8f:	85 c0                	test   %eax,%eax
ffffffff8002ab91:	74 21                	je     ffffffff8002abb4 <ZydisSetAVXInformation+0xca1>
ffffffff8002ab93:	83 f8 01             	cmp    $0x1,%eax
ffffffff8002ab96:	75 1a                	jne    ffffffff8002abb2 <ZydisSetAVXInformation+0xc9f>
ffffffff8002ab98:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002ab9c:	c7 40 48 03 00 00 00 	movl   $0x3,0x48(%rax)
ffffffff8002aba3:	eb 10                	jmp    ffffffff8002abb5 <ZydisSetAVXInformation+0xca2>
ffffffff8002aba5:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002aba9:	c7 40 48 0a 00 00 00 	movl   $0xa,0x48(%rax)
ffffffff8002abb0:	eb 03                	jmp    ffffffff8002abb5 <ZydisSetAVXInformation+0xca2>
ffffffff8002abb2:	eb fe                	jmp    ffffffff8002abb2 <ZydisSetAVXInformation+0xc9f>
ffffffff8002abb4:	90                   	nop
ffffffff8002abb5:	e9 f1 00 00 00       	jmp    ffffffff8002acab <ZydisSetAVXInformation+0xd98>
ffffffff8002abba:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002abbe:	0f b6 80 1c 01 00 00 	movzbl 0x11c(%rax),%eax
ffffffff8002abc5:	0f b6 c0             	movzbl %al,%eax
ffffffff8002abc8:	83 f8 07             	cmp    $0x7,%eax
ffffffff8002abcb:	77 64                	ja     ffffffff8002ac31 <ZydisSetAVXInformation+0xd1e>
ffffffff8002abcd:	89 c0                	mov    %eax,%eax
ffffffff8002abcf:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
ffffffff8002abd6:	00 
ffffffff8002abd7:	48 8d 05 8a 4c 01 00 	lea    0x14c8a(%rip),%rax        # ffffffff8003f868 <GPR8_MAPPING.0+0x278>
ffffffff8002abde:	8b 04 02             	mov    (%rdx,%rax,1),%eax
ffffffff8002abe1:	48 98                	cltq   
ffffffff8002abe3:	48 8d 15 7e 4c 01 00 	lea    0x14c7e(%rip),%rdx        # ffffffff8003f868 <GPR8_MAPPING.0+0x278>
ffffffff8002abea:	48 01 d0             	add    %rdx,%rax
ffffffff8002abed:	3e ff e0             	notrack jmp *%rax
ffffffff8002abf0:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002abf4:	c7 40 54 01 00 00 00 	movl   $0x1,0x54(%rax)
ffffffff8002abfb:	eb 37                	jmp    ffffffff8002ac34 <ZydisSetAVXInformation+0xd21>
ffffffff8002abfd:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002ac01:	c7 40 54 03 00 00 00 	movl   $0x3,0x54(%rax)
ffffffff8002ac08:	eb 2a                	jmp    ffffffff8002ac34 <ZydisSetAVXInformation+0xd21>
ffffffff8002ac0a:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002ac0e:	c7 40 54 02 00 00 00 	movl   $0x2,0x54(%rax)
ffffffff8002ac15:	eb 1d                	jmp    ffffffff8002ac34 <ZydisSetAVXInformation+0xd21>
ffffffff8002ac17:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002ac1b:	c7 40 54 05 00 00 00 	movl   $0x5,0x54(%rax)
ffffffff8002ac22:	eb 10                	jmp    ffffffff8002ac34 <ZydisSetAVXInformation+0xd21>
ffffffff8002ac24:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002ac28:	c7 40 54 04 00 00 00 	movl   $0x4,0x54(%rax)
ffffffff8002ac2f:	eb 03                	jmp    ffffffff8002ac34 <ZydisSetAVXInformation+0xd21>
ffffffff8002ac31:	eb fe                	jmp    ffffffff8002ac31 <ZydisSetAVXInformation+0xd1e>
ffffffff8002ac33:	90                   	nop
ffffffff8002ac34:	eb 75                	jmp    ffffffff8002acab <ZydisSetAVXInformation+0xd98>
ffffffff8002ac36:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002ac3a:	0f b6 80 1c 01 00 00 	movzbl 0x11c(%rax),%eax
ffffffff8002ac41:	0f b6 c0             	movzbl %al,%eax
ffffffff8002ac44:	83 f8 07             	cmp    $0x7,%eax
ffffffff8002ac47:	77 57                	ja     ffffffff8002aca0 <ZydisSetAVXInformation+0xd8d>
ffffffff8002ac49:	89 c0                	mov    %eax,%eax
ffffffff8002ac4b:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
ffffffff8002ac52:	00 
ffffffff8002ac53:	48 8d 05 2e 4c 01 00 	lea    0x14c2e(%rip),%rax        # ffffffff8003f888 <GPR8_MAPPING.0+0x298>
ffffffff8002ac5a:	8b 04 02             	mov    (%rdx,%rax,1),%eax
ffffffff8002ac5d:	48 98                	cltq   
ffffffff8002ac5f:	48 8d 15 22 4c 01 00 	lea    0x14c22(%rip),%rdx        # ffffffff8003f888 <GPR8_MAPPING.0+0x298>
ffffffff8002ac66:	48 01 d0             	add    %rdx,%rax
ffffffff8002ac69:	3e ff e0             	notrack jmp *%rax
ffffffff8002ac6c:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002ac70:	c7 40 54 03 00 00 00 	movl   $0x3,0x54(%rax)
ffffffff8002ac77:	eb 2a                	jmp    ffffffff8002aca3 <ZydisSetAVXInformation+0xd90>
ffffffff8002ac79:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002ac7d:	c7 40 54 02 00 00 00 	movl   $0x2,0x54(%rax)
ffffffff8002ac84:	eb 1d                	jmp    ffffffff8002aca3 <ZydisSetAVXInformation+0xd90>
ffffffff8002ac86:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002ac8a:	c7 40 54 05 00 00 00 	movl   $0x5,0x54(%rax)
ffffffff8002ac91:	eb 10                	jmp    ffffffff8002aca3 <ZydisSetAVXInformation+0xd90>
ffffffff8002ac93:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002ac97:	c7 40 54 04 00 00 00 	movl   $0x4,0x54(%rax)
ffffffff8002ac9e:	eb 03                	jmp    ffffffff8002aca3 <ZydisSetAVXInformation+0xd90>
ffffffff8002aca0:	eb fe                	jmp    ffffffff8002aca0 <ZydisSetAVXInformation+0xd8d>
ffffffff8002aca2:	90                   	nop
ffffffff8002aca3:	eb 06                	jmp    ffffffff8002acab <ZydisSetAVXInformation+0xd98>
ffffffff8002aca5:	eb fe                	jmp    ffffffff8002aca5 <ZydisSetAVXInformation+0xd92>
ffffffff8002aca7:	90                   	nop
ffffffff8002aca8:	eb 01                	jmp    ffffffff8002acab <ZydisSetAVXInformation+0xd98>
ffffffff8002acaa:	90                   	nop
ffffffff8002acab:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002acaf:	0f b6 80 20 01 00 00 	movzbl 0x120(%rax),%eax
ffffffff8002acb6:	3c 03                	cmp    $0x3,%al
ffffffff8002acb8:	74 17                	je     ffffffff8002acd1 <ZydisSetAVXInformation+0xdbe>
ffffffff8002acba:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002acbe:	0f b6 80 1b 01 00 00 	movzbl 0x11b(%rax),%eax
ffffffff8002acc5:	84 c0                	test   %al,%al
ffffffff8002acc7:	74 08                	je     ffffffff8002acd1 <ZydisSetAVXInformation+0xdbe>
ffffffff8002acc9:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002accd:	c6 40 59 01          	movb   $0x1,0x59(%rax)
ffffffff8002acd1:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002acd5:	c7 40 3c 02 00 00 00 	movl   $0x2,0x3c(%rax)
ffffffff8002acdc:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002ace0:	0f b6 80 1e 01 00 00 	movzbl 0x11e(%rax),%eax
ffffffff8002ace7:	0f b6 c0             	movzbl %al,%eax
ffffffff8002acea:	05 f8 00 00 00       	add    $0xf8,%eax
ffffffff8002acef:	89 c2                	mov    %eax,%edx
ffffffff8002acf1:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002acf5:	89 50 40             	mov    %edx,0x40(%rax)
ffffffff8002acf8:	eb 07                	jmp    ffffffff8002ad01 <ZydisSetAVXInformation+0xdee>
ffffffff8002acfa:	90                   	nop
ffffffff8002acfb:	eb 04                	jmp    ffffffff8002ad01 <ZydisSetAVXInformation+0xdee>
ffffffff8002acfd:	90                   	nop
ffffffff8002acfe:	eb 01                	jmp    ffffffff8002ad01 <ZydisSetAVXInformation+0xdee>
ffffffff8002ad00:	90                   	nop
ffffffff8002ad01:	90                   	nop
ffffffff8002ad02:	c9                   	leave  
ffffffff8002ad03:	c3                   	ret    

ffffffff8002ad04 <ZydisCollectOptionalPrefixes>:
ffffffff8002ad04:	f3 0f 1e fa          	endbr64 
ffffffff8002ad08:	55                   	push   %rbp
ffffffff8002ad09:	48 89 e5             	mov    %rsp,%rbp
ffffffff8002ad0c:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff8002ad10:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff8002ad14:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
ffffffff8002ad18:	c6 45 ff 00          	movb   $0x0,-0x1(%rbp)
ffffffff8002ad1c:	c6 45 fe 00          	movb   $0x0,-0x2(%rbp)
ffffffff8002ad20:	c6 45 fd 00          	movb   $0x0,-0x3(%rbp)
ffffffff8002ad24:	48 8d 45 f7          	lea    -0x9(%rbp),%rax
ffffffff8002ad28:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
ffffffff8002ad2c:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
ffffffff8002ad30:	48 89 c2             	mov    %rax,%rdx
ffffffff8002ad33:	48 89 cf             	mov    %rcx,%rdi
ffffffff8002ad36:	e8 47 b5 ff ff       	call   ffffffff80026282 <ZydisInputPeek>
ffffffff8002ad3b:	89 45 f8             	mov    %eax,-0x8(%rbp)
ffffffff8002ad3e:	8b 45 f8             	mov    -0x8(%rbp),%eax
ffffffff8002ad41:	85 c0                	test   %eax,%eax
ffffffff8002ad43:	79 08                	jns    ffffffff8002ad4d <ZydisCollectOptionalPrefixes+0x49>
ffffffff8002ad45:	8b 45 f8             	mov    -0x8(%rbp),%eax
ffffffff8002ad48:	e9 66 03 00 00       	jmp    ffffffff8002b0b3 <ZydisCollectOptionalPrefixes+0x3af>
ffffffff8002ad4d:	0f b6 45 f7          	movzbl -0x9(%rbp),%eax
ffffffff8002ad51:	0f b6 c0             	movzbl %al,%eax
ffffffff8002ad54:	3d f3 00 00 00       	cmp    $0xf3,%eax
ffffffff8002ad59:	0f 8f cb 01 00 00    	jg     ffffffff8002af2a <ZydisCollectOptionalPrefixes+0x226>
ffffffff8002ad5f:	3d f2 00 00 00       	cmp    $0xf2,%eax
ffffffff8002ad64:	0f 8d 90 00 00 00    	jge    ffffffff8002adfa <ZydisCollectOptionalPrefixes+0xf6>
ffffffff8002ad6a:	3d f0 00 00 00       	cmp    $0xf0,%eax
ffffffff8002ad6f:	74 71                	je     ffffffff8002ade2 <ZydisCollectOptionalPrefixes+0xde>
ffffffff8002ad71:	3d f0 00 00 00       	cmp    $0xf0,%eax
ffffffff8002ad76:	0f 8f ae 01 00 00    	jg     ffffffff8002af2a <ZydisCollectOptionalPrefixes+0x226>
ffffffff8002ad7c:	83 f8 67             	cmp    $0x67,%eax
ffffffff8002ad7f:	0f 84 7b 01 00 00    	je     ffffffff8002af00 <ZydisCollectOptionalPrefixes+0x1fc>
ffffffff8002ad85:	83 f8 67             	cmp    $0x67,%eax
ffffffff8002ad88:	0f 8f 9c 01 00 00    	jg     ffffffff8002af2a <ZydisCollectOptionalPrefixes+0x226>
ffffffff8002ad8e:	83 f8 66             	cmp    $0x66,%eax
ffffffff8002ad91:	0f 84 20 01 00 00    	je     ffffffff8002aeb7 <ZydisCollectOptionalPrefixes+0x1b3>
ffffffff8002ad97:	83 f8 66             	cmp    $0x66,%eax
ffffffff8002ad9a:	0f 8f 8a 01 00 00    	jg     ffffffff8002af2a <ZydisCollectOptionalPrefixes+0x226>
ffffffff8002ada0:	83 f8 3e             	cmp    $0x3e,%eax
ffffffff8002ada3:	7f 2c                	jg     ffffffff8002add1 <ZydisCollectOptionalPrefixes+0xcd>
ffffffff8002ada5:	83 f8 26             	cmp    $0x26,%eax
ffffffff8002ada8:	0f 8c 7c 01 00 00    	jl     ffffffff8002af2a <ZydisCollectOptionalPrefixes+0x226>
ffffffff8002adae:	89 c2                	mov    %eax,%edx
ffffffff8002adb0:	48 b8 00 00 00 00 40 	movabs $0x4040404000000000,%rax
ffffffff8002adb7:	40 40 40 
ffffffff8002adba:	89 d1                	mov    %edx,%ecx
ffffffff8002adbc:	48 d3 e8             	shr    %cl,%rax
ffffffff8002adbf:	83 e0 01             	and    $0x1,%eax
ffffffff8002adc2:	48 85 c0             	test   %rax,%rax
ffffffff8002adc5:	0f 95 c0             	setne  %al
ffffffff8002adc8:	84 c0                	test   %al,%al
ffffffff8002adca:	75 5f                	jne    ffffffff8002ae2b <ZydisCollectOptionalPrefixes+0x127>
ffffffff8002adcc:	e9 59 01 00 00       	jmp    ffffffff8002af2a <ZydisCollectOptionalPrefixes+0x226>
ffffffff8002add1:	83 e8 64             	sub    $0x64,%eax
ffffffff8002add4:	83 f8 01             	cmp    $0x1,%eax
ffffffff8002add7:	0f 87 4d 01 00 00    	ja     ffffffff8002af2a <ZydisCollectOptionalPrefixes+0x226>
ffffffff8002addd:	e9 9c 00 00 00       	jmp    ffffffff8002ae7e <ZydisCollectOptionalPrefixes+0x17a>
ffffffff8002ade2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002ade6:	c6 40 20 01          	movb   $0x1,0x20(%rax)
ffffffff8002adea:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff8002adee:	0f b6 45 fe          	movzbl -0x2(%rbp),%eax
ffffffff8002adf2:	88 42 25             	mov    %al,0x25(%rdx)
ffffffff8002adf5:	e9 6b 01 00 00       	jmp    ffffffff8002af65 <ZydisCollectOptionalPrefixes+0x261>
ffffffff8002adfa:	0f b6 45 f7          	movzbl -0x9(%rbp),%eax
ffffffff8002adfe:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff8002ae02:	88 42 21             	mov    %al,0x21(%rdx)
ffffffff8002ae05:	0f b6 45 f7          	movzbl -0x9(%rbp),%eax
ffffffff8002ae09:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff8002ae0d:	88 42 24             	mov    %al,0x24(%rdx)
ffffffff8002ae10:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff8002ae14:	0f b6 45 fe          	movzbl -0x2(%rbp),%eax
ffffffff8002ae18:	88 42 26             	mov    %al,0x26(%rdx)
ffffffff8002ae1b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff8002ae1f:	0f b6 45 fe          	movzbl -0x2(%rbp),%eax
ffffffff8002ae23:	88 42 2b             	mov    %al,0x2b(%rdx)
ffffffff8002ae26:	e9 3a 01 00 00       	jmp    ffffffff8002af65 <ZydisCollectOptionalPrefixes+0x261>
ffffffff8002ae2b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002ae2f:	48 8b 00             	mov    (%rax),%rax
ffffffff8002ae32:	8b 00                	mov    (%rax),%eax
ffffffff8002ae34:	85 c0                	test   %eax,%eax
ffffffff8002ae36:	75 46                	jne    ffffffff8002ae7e <ZydisCollectOptionalPrefixes+0x17a>
ffffffff8002ae38:	0f b6 45 f7          	movzbl -0x9(%rbp),%eax
ffffffff8002ae3c:	3c 3e                	cmp    $0x3e,%al
ffffffff8002ae3e:	75 23                	jne    ffffffff8002ae63 <ZydisCollectOptionalPrefixes+0x15f>
ffffffff8002ae40:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002ae44:	0f b6 40 23          	movzbl 0x23(%rax),%eax
ffffffff8002ae48:	3c 64                	cmp    $0x64,%al
ffffffff8002ae4a:	74 17                	je     ffffffff8002ae63 <ZydisCollectOptionalPrefixes+0x15f>
ffffffff8002ae4c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002ae50:	0f b6 40 23          	movzbl 0x23(%rax),%eax
ffffffff8002ae54:	3c 65                	cmp    $0x65,%al
ffffffff8002ae56:	74 0b                	je     ffffffff8002ae63 <ZydisCollectOptionalPrefixes+0x15f>
ffffffff8002ae58:	0f b6 45 fe          	movzbl -0x2(%rbp),%eax
ffffffff8002ae5c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff8002ae60:	88 42 2c             	mov    %al,0x2c(%rdx)
ffffffff8002ae63:	0f b6 45 f7          	movzbl -0x9(%rbp),%eax
ffffffff8002ae67:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff8002ae6b:	88 42 22             	mov    %al,0x22(%rdx)
ffffffff8002ae6e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff8002ae72:	0f b6 45 fe          	movzbl -0x2(%rbp),%eax
ffffffff8002ae76:	88 42 27             	mov    %al,0x27(%rdx)
ffffffff8002ae79:	e9 e7 00 00 00       	jmp    ffffffff8002af65 <ZydisCollectOptionalPrefixes+0x261>
ffffffff8002ae7e:	0f b6 45 f7          	movzbl -0x9(%rbp),%eax
ffffffff8002ae82:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff8002ae86:	88 42 22             	mov    %al,0x22(%rdx)
ffffffff8002ae89:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff8002ae8d:	0f b6 45 fe          	movzbl -0x2(%rbp),%eax
ffffffff8002ae91:	88 42 27             	mov    %al,0x27(%rdx)
ffffffff8002ae94:	0f b6 45 f7          	movzbl -0x9(%rbp),%eax
ffffffff8002ae98:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff8002ae9c:	88 42 23             	mov    %al,0x23(%rdx)
ffffffff8002ae9f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff8002aea3:	0f b6 45 fe          	movzbl -0x2(%rbp),%eax
ffffffff8002aea7:	88 42 2a             	mov    %al,0x2a(%rdx)
ffffffff8002aeaa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002aeae:	c6 40 2c ff          	movb   $0xff,0x2c(%rax)
ffffffff8002aeb2:	e9 ae 00 00 00       	jmp    ffffffff8002af65 <ZydisCollectOptionalPrefixes+0x261>
ffffffff8002aeb7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff8002aebb:	0f b6 45 fe          	movzbl -0x2(%rbp),%eax
ffffffff8002aebf:	88 42 28             	mov    %al,0x28(%rdx)
ffffffff8002aec2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002aec6:	0f b6 40 24          	movzbl 0x24(%rax),%eax
ffffffff8002aeca:	84 c0                	test   %al,%al
ffffffff8002aecc:	75 13                	jne    ffffffff8002aee1 <ZydisCollectOptionalPrefixes+0x1dd>
ffffffff8002aece:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002aed2:	c6 40 24 66          	movb   $0x66,0x24(%rax)
ffffffff8002aed6:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff8002aeda:	0f b6 45 fe          	movzbl -0x2(%rbp),%eax
ffffffff8002aede:	88 42 2b             	mov    %al,0x2b(%rdx)
ffffffff8002aee1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8002aee5:	48 8b 50 20          	mov    0x20(%rax),%rdx
ffffffff8002aee9:	48 b8 00 00 00 00 00 	movabs $0x80000000000,%rax
ffffffff8002aef0:	08 00 00 
ffffffff8002aef3:	48 09 c2             	or     %rax,%rdx
ffffffff8002aef6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8002aefa:	48 89 50 20          	mov    %rdx,0x20(%rax)
ffffffff8002aefe:	eb 65                	jmp    ffffffff8002af65 <ZydisCollectOptionalPrefixes+0x261>
ffffffff8002af00:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff8002af04:	0f b6 45 fe          	movzbl -0x2(%rbp),%eax
ffffffff8002af08:	88 42 29             	mov    %al,0x29(%rdx)
ffffffff8002af0b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8002af0f:	48 8b 50 20          	mov    0x20(%rax),%rdx
ffffffff8002af13:	48 b8 00 00 00 00 00 	movabs $0x100000000000,%rax
ffffffff8002af1a:	10 00 00 
ffffffff8002af1d:	48 09 c2             	or     %rax,%rdx
ffffffff8002af20:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8002af24:	48 89 50 20          	mov    %rdx,0x20(%rax)
ffffffff8002af28:	eb 3b                	jmp    ffffffff8002af65 <ZydisCollectOptionalPrefixes+0x261>
ffffffff8002af2a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002af2e:	48 8b 00             	mov    (%rax),%rax
ffffffff8002af31:	8b 00                	mov    (%rax),%eax
ffffffff8002af33:	85 c0                	test   %eax,%eax
ffffffff8002af35:	75 29                	jne    ffffffff8002af60 <ZydisCollectOptionalPrefixes+0x25c>
ffffffff8002af37:	0f b6 45 f7          	movzbl -0x9(%rbp),%eax
ffffffff8002af3b:	0f b6 c0             	movzbl %al,%eax
ffffffff8002af3e:	25 f0 00 00 00       	and    $0xf0,%eax
ffffffff8002af43:	83 f8 40             	cmp    $0x40,%eax
ffffffff8002af46:	75 18                	jne    ffffffff8002af60 <ZydisCollectOptionalPrefixes+0x25c>
ffffffff8002af48:	0f b6 45 f7          	movzbl -0x9(%rbp),%eax
ffffffff8002af4c:	88 45 ff             	mov    %al,-0x1(%rbp)
ffffffff8002af4f:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff8002af53:	0f b6 45 fe          	movzbl -0x2(%rbp),%eax
ffffffff8002af57:	88 82 f0 00 00 00    	mov    %al,0xf0(%rdx)
ffffffff8002af5d:	90                   	nop
ffffffff8002af5e:	eb 04                	jmp    ffffffff8002af64 <ZydisCollectOptionalPrefixes+0x260>
ffffffff8002af60:	c6 45 fd 01          	movb   $0x1,-0x3(%rbp)
ffffffff8002af64:	90                   	nop
ffffffff8002af65:	80 7d fd 00          	cmpb   $0x0,-0x3(%rbp)
ffffffff8002af69:	75 5d                	jne    ffffffff8002afc8 <ZydisCollectOptionalPrefixes+0x2c4>
ffffffff8002af6b:	80 7d ff 00          	cmpb   $0x0,-0x1(%rbp)
ffffffff8002af6f:	74 18                	je     ffffffff8002af89 <ZydisCollectOptionalPrefixes+0x285>
ffffffff8002af71:	0f b6 45 f7          	movzbl -0x9(%rbp),%eax
ffffffff8002af75:	38 45 ff             	cmp    %al,-0x1(%rbp)
ffffffff8002af78:	74 0f                	je     ffffffff8002af89 <ZydisCollectOptionalPrefixes+0x285>
ffffffff8002af7a:	c6 45 ff 00          	movb   $0x0,-0x1(%rbp)
ffffffff8002af7e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8002af82:	c6 80 f0 00 00 00 00 	movb   $0x0,0xf0(%rax)
ffffffff8002af89:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8002af8d:	0f b6 40 70          	movzbl 0x70(%rax),%eax
ffffffff8002af91:	8d 50 01             	lea    0x1(%rax),%edx
ffffffff8002af94:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
ffffffff8002af98:	88 51 70             	mov    %dl,0x70(%rcx)
ffffffff8002af9b:	0f b6 c8             	movzbl %al,%ecx
ffffffff8002af9e:	0f b6 45 f7          	movzbl -0x9(%rbp),%eax
ffffffff8002afa2:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff8002afa6:	48 63 c9             	movslq %ecx,%rcx
ffffffff8002afa9:	48 83 c1 0e          	add    $0xe,%rcx
ffffffff8002afad:	88 44 ca 08          	mov    %al,0x8(%rdx,%rcx,8)
ffffffff8002afb1:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff8002afb5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002afb9:	48 89 d6             	mov    %rdx,%rsi
ffffffff8002afbc:	48 89 c7             	mov    %rax,%rdi
ffffffff8002afbf:	e8 15 b3 ff ff       	call   ffffffff800262d9 <ZydisInputSkip>
ffffffff8002afc4:	80 45 fe 01          	addb   $0x1,-0x2(%rbp)
ffffffff8002afc8:	80 7d fd 00          	cmpb   $0x0,-0x3(%rbp)
ffffffff8002afcc:	0f 84 52 fd ff ff    	je     ffffffff8002ad24 <ZydisCollectOptionalPrefixes+0x20>
ffffffff8002afd2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8002afd6:	48 8b 50 20          	mov    0x20(%rax),%rdx
ffffffff8002afda:	48 b8 00 00 00 00 00 	movabs $0x80000000000,%rax
ffffffff8002afe1:	08 00 00 
ffffffff8002afe4:	48 21 d0             	and    %rdx,%rax
ffffffff8002afe7:	48 85 c0             	test   %rax,%rax
ffffffff8002afea:	74 1e                	je     ffffffff8002b00a <ZydisCollectOptionalPrefixes+0x306>
ffffffff8002afec:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002aff0:	0f b6 40 28          	movzbl 0x28(%rax),%eax
ffffffff8002aff4:	0f b6 d0             	movzbl %al,%edx
ffffffff8002aff7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8002affb:	48 63 d2             	movslq %edx,%rdx
ffffffff8002affe:	48 83 c2 0e          	add    $0xe,%rdx
ffffffff8002b002:	c7 44 d0 04 01 00 00 	movl   $0x1,0x4(%rax,%rdx,8)
ffffffff8002b009:	00 
ffffffff8002b00a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8002b00e:	48 8b 50 20          	mov    0x20(%rax),%rdx
ffffffff8002b012:	48 b8 00 00 00 00 00 	movabs $0x100000000000,%rax
ffffffff8002b019:	10 00 00 
ffffffff8002b01c:	48 21 d0             	and    %rdx,%rax
ffffffff8002b01f:	48 85 c0             	test   %rax,%rax
ffffffff8002b022:	74 1e                	je     ffffffff8002b042 <ZydisCollectOptionalPrefixes+0x33e>
ffffffff8002b024:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002b028:	0f b6 40 29          	movzbl 0x29(%rax),%eax
ffffffff8002b02c:	0f b6 d0             	movzbl %al,%edx
ffffffff8002b02f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8002b033:	48 63 d2             	movslq %edx,%rdx
ffffffff8002b036:	48 83 c2 0e          	add    $0xe,%rdx
ffffffff8002b03a:	c7 44 d0 04 01 00 00 	movl   $0x1,0x4(%rax,%rdx,8)
ffffffff8002b041:	00 
ffffffff8002b042:	80 7d ff 00          	cmpb   $0x0,-0x1(%rbp)
ffffffff8002b046:	74 3b                	je     ffffffff8002b083 <ZydisCollectOptionalPrefixes+0x37f>
ffffffff8002b048:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8002b04c:	0f b6 80 f0 00 00 00 	movzbl 0xf0(%rax),%eax
ffffffff8002b053:	0f b6 d0             	movzbl %al,%edx
ffffffff8002b056:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8002b05a:	48 63 d2             	movslq %edx,%rdx
ffffffff8002b05d:	48 83 c2 0e          	add    $0xe,%rdx
ffffffff8002b061:	c7 44 d0 04 01 00 00 	movl   $0x1,0x4(%rax,%rdx,8)
ffffffff8002b068:	00 
ffffffff8002b069:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
ffffffff8002b06d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff8002b071:	48 8b 4a 08          	mov    0x8(%rdx),%rcx
ffffffff8002b075:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
ffffffff8002b079:	89 c2                	mov    %eax,%edx
ffffffff8002b07b:	48 89 cf             	mov    %rcx,%rdi
ffffffff8002b07e:	e8 ea b3 ff ff       	call   ffffffff8002646d <ZydisDecodeREX>
ffffffff8002b083:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002b087:	48 8b 00             	mov    (%rax),%rax
ffffffff8002b08a:	8b 00                	mov    (%rax),%eax
ffffffff8002b08c:	85 c0                	test   %eax,%eax
ffffffff8002b08e:	74 1d                	je     ffffffff8002b0ad <ZydisCollectOptionalPrefixes+0x3a9>
ffffffff8002b090:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002b094:	0f b6 40 22          	movzbl 0x22(%rax),%eax
ffffffff8002b098:	3c 3e                	cmp    $0x3e,%al
ffffffff8002b09a:	75 11                	jne    ffffffff8002b0ad <ZydisCollectOptionalPrefixes+0x3a9>
ffffffff8002b09c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002b0a0:	0f b6 40 27          	movzbl 0x27(%rax),%eax
ffffffff8002b0a4:	89 c2                	mov    %eax,%edx
ffffffff8002b0a6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002b0aa:	88 50 2c             	mov    %dl,0x2c(%rax)
ffffffff8002b0ad:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff8002b0b2:	90                   	nop
ffffffff8002b0b3:	c9                   	leave  
ffffffff8002b0b4:	c3                   	ret    

ffffffff8002b0b5 <ZydisDecodeOptionalInstructionParts>:
ffffffff8002b0b5:	f3 0f 1e fa          	endbr64 
ffffffff8002b0b9:	55                   	push   %rbp
ffffffff8002b0ba:	48 89 e5             	mov    %rsp,%rbp
ffffffff8002b0bd:	48 83 ec 48          	sub    $0x48,%rsp
ffffffff8002b0c1:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
ffffffff8002b0c5:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
ffffffff8002b0c9:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
ffffffff8002b0cd:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8002b0d1:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff8002b0d5:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff8002b0d9:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff8002b0dd:	0f b6 00             	movzbl (%rax),%eax
ffffffff8002b0e0:	0f b6 c0             	movzbl %al,%eax
ffffffff8002b0e3:	83 e0 01             	and    $0x1,%eax
ffffffff8002b0e6:	85 c0                	test   %eax,%eax
ffffffff8002b0e8:	0f 84 8a 02 00 00    	je     ffffffff8002b378 <ZydisDecodeOptionalInstructionParts+0x2c3>
ffffffff8002b0ee:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002b0f2:	0f b6 80 23 01 00 00 	movzbl 0x123(%rax),%eax
ffffffff8002b0f9:	84 c0                	test   %al,%al
ffffffff8002b0fb:	75 50                	jne    ffffffff8002b14d <ZydisDecodeOptionalInstructionParts+0x98>
ffffffff8002b0fd:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002b101:	0f b6 40 08          	movzbl 0x8(%rax),%eax
ffffffff8002b105:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
ffffffff8002b109:	88 82 23 01 00 00    	mov    %al,0x123(%rdx)
ffffffff8002b10f:	48 8d 45 d6          	lea    -0x2a(%rbp),%rax
ffffffff8002b113:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
ffffffff8002b117:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
ffffffff8002b11b:	48 89 c2             	mov    %rax,%rdx
ffffffff8002b11e:	48 89 cf             	mov    %rcx,%rdi
ffffffff8002b121:	e8 04 b2 ff ff       	call   ffffffff8002632a <ZydisInputNext>
ffffffff8002b126:	89 45 ec             	mov    %eax,-0x14(%rbp)
ffffffff8002b129:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff8002b12c:	85 c0                	test   %eax,%eax
ffffffff8002b12e:	79 08                	jns    ffffffff8002b138 <ZydisDecodeOptionalInstructionParts+0x83>
ffffffff8002b130:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff8002b133:	e9 89 03 00 00       	jmp    ffffffff8002b4c1 <ZydisDecodeOptionalInstructionParts+0x40c>
ffffffff8002b138:	0f b6 45 d6          	movzbl -0x2a(%rbp),%eax
ffffffff8002b13c:	0f b6 c0             	movzbl %al,%eax
ffffffff8002b13f:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
ffffffff8002b143:	89 c6                	mov    %eax,%esi
ffffffff8002b145:	48 89 d7             	mov    %rdx,%rdi
ffffffff8002b148:	e8 87 be ff ff       	call   ffffffff80026fd4 <ZydisDecodeModRM>
ffffffff8002b14d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff8002b151:	0f b6 00             	movzbl (%rax),%eax
ffffffff8002b154:	0f b6 c0             	movzbl %al,%eax
ffffffff8002b157:	83 e0 10             	and    $0x10,%eax
ffffffff8002b15a:	85 c0                	test   %eax,%eax
ffffffff8002b15c:	0f 85 e1 01 00 00    	jne    ffffffff8002b343 <ZydisDecodeOptionalInstructionParts+0x28e>
ffffffff8002b162:	c6 45 ff 00          	movb   $0x0,-0x1(%rbp)
ffffffff8002b166:	c6 45 fe 00          	movb   $0x0,-0x2(%rbp)
ffffffff8002b16a:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002b16e:	0f b6 40 17          	movzbl 0x17(%rax),%eax
ffffffff8002b172:	0f b6 c0             	movzbl %al,%eax
ffffffff8002b175:	83 f8 40             	cmp    $0x40,%eax
ffffffff8002b178:	74 74                	je     ffffffff8002b1ee <ZydisDecodeOptionalInstructionParts+0x139>
ffffffff8002b17a:	83 f8 40             	cmp    $0x40,%eax
ffffffff8002b17d:	0f 8f 0d 01 00 00    	jg     ffffffff8002b290 <ZydisDecodeOptionalInstructionParts+0x1db>
ffffffff8002b183:	83 f8 10             	cmp    $0x10,%eax
ffffffff8002b186:	74 0a                	je     ffffffff8002b192 <ZydisDecodeOptionalInstructionParts+0xdd>
ffffffff8002b188:	83 f8 20             	cmp    $0x20,%eax
ffffffff8002b18b:	74 61                	je     ffffffff8002b1ee <ZydisDecodeOptionalInstructionParts+0x139>
ffffffff8002b18d:	e9 fe 00 00 00       	jmp    ffffffff8002b290 <ZydisDecodeOptionalInstructionParts+0x1db>
ffffffff8002b192:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002b196:	0f b6 80 20 01 00 00 	movzbl 0x120(%rax),%eax
ffffffff8002b19d:	0f b6 c0             	movzbl %al,%eax
ffffffff8002b1a0:	83 f8 03             	cmp    $0x3,%eax
ffffffff8002b1a3:	74 3d                	je     ffffffff8002b1e2 <ZydisDecodeOptionalInstructionParts+0x12d>
ffffffff8002b1a5:	83 f8 03             	cmp    $0x3,%eax
ffffffff8002b1a8:	7f 36                	jg     ffffffff8002b1e0 <ZydisDecodeOptionalInstructionParts+0x12b>
ffffffff8002b1aa:	83 f8 02             	cmp    $0x2,%eax
ffffffff8002b1ad:	74 2b                	je     ffffffff8002b1da <ZydisDecodeOptionalInstructionParts+0x125>
ffffffff8002b1af:	83 f8 02             	cmp    $0x2,%eax
ffffffff8002b1b2:	7f 2c                	jg     ffffffff8002b1e0 <ZydisDecodeOptionalInstructionParts+0x12b>
ffffffff8002b1b4:	85 c0                	test   %eax,%eax
ffffffff8002b1b6:	74 07                	je     ffffffff8002b1bf <ZydisDecodeOptionalInstructionParts+0x10a>
ffffffff8002b1b8:	83 f8 01             	cmp    $0x1,%eax
ffffffff8002b1bb:	74 17                	je     ffffffff8002b1d4 <ZydisDecodeOptionalInstructionParts+0x11f>
ffffffff8002b1bd:	eb 21                	jmp    ffffffff8002b1e0 <ZydisDecodeOptionalInstructionParts+0x12b>
ffffffff8002b1bf:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002b1c3:	0f b6 80 22 01 00 00 	movzbl 0x122(%rax),%eax
ffffffff8002b1ca:	3c 06                	cmp    $0x6,%al
ffffffff8002b1cc:	75 1a                	jne    ffffffff8002b1e8 <ZydisDecodeOptionalInstructionParts+0x133>
ffffffff8002b1ce:	c6 45 fe 10          	movb   $0x10,-0x2(%rbp)
ffffffff8002b1d2:	eb 14                	jmp    ffffffff8002b1e8 <ZydisDecodeOptionalInstructionParts+0x133>
ffffffff8002b1d4:	c6 45 fe 08          	movb   $0x8,-0x2(%rbp)
ffffffff8002b1d8:	eb 0f                	jmp    ffffffff8002b1e9 <ZydisDecodeOptionalInstructionParts+0x134>
ffffffff8002b1da:	c6 45 fe 10          	movb   $0x10,-0x2(%rbp)
ffffffff8002b1de:	eb 09                	jmp    ffffffff8002b1e9 <ZydisDecodeOptionalInstructionParts+0x134>
ffffffff8002b1e0:	eb fe                	jmp    ffffffff8002b1e0 <ZydisDecodeOptionalInstructionParts+0x12b>
ffffffff8002b1e2:	90                   	nop
ffffffff8002b1e3:	e9 aa 00 00 00       	jmp    ffffffff8002b292 <ZydisDecodeOptionalInstructionParts+0x1dd>
ffffffff8002b1e8:	90                   	nop
ffffffff8002b1e9:	e9 a4 00 00 00       	jmp    ffffffff8002b292 <ZydisDecodeOptionalInstructionParts+0x1dd>
ffffffff8002b1ee:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002b1f2:	0f b6 80 20 01 00 00 	movzbl 0x120(%rax),%eax
ffffffff8002b1f9:	3c 03                	cmp    $0x3,%al
ffffffff8002b1fb:	74 16                	je     ffffffff8002b213 <ZydisDecodeOptionalInstructionParts+0x15e>
ffffffff8002b1fd:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002b201:	0f b6 80 22 01 00 00 	movzbl 0x122(%rax),%eax
ffffffff8002b208:	3c 04                	cmp    $0x4,%al
ffffffff8002b20a:	75 07                	jne    ffffffff8002b213 <ZydisDecodeOptionalInstructionParts+0x15e>
ffffffff8002b20c:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8002b211:	eb 05                	jmp    ffffffff8002b218 <ZydisDecodeOptionalInstructionParts+0x163>
ffffffff8002b213:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8002b218:	88 45 ff             	mov    %al,-0x1(%rbp)
ffffffff8002b21b:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002b21f:	0f b6 80 20 01 00 00 	movzbl 0x120(%rax),%eax
ffffffff8002b226:	0f b6 c0             	movzbl %al,%eax
ffffffff8002b229:	83 f8 03             	cmp    $0x3,%eax
ffffffff8002b22c:	74 5c                	je     ffffffff8002b28a <ZydisDecodeOptionalInstructionParts+0x1d5>
ffffffff8002b22e:	83 f8 03             	cmp    $0x3,%eax
ffffffff8002b231:	7f 55                	jg     ffffffff8002b288 <ZydisDecodeOptionalInstructionParts+0x1d3>
ffffffff8002b233:	83 f8 02             	cmp    $0x2,%eax
ffffffff8002b236:	74 4a                	je     ffffffff8002b282 <ZydisDecodeOptionalInstructionParts+0x1cd>
ffffffff8002b238:	83 f8 02             	cmp    $0x2,%eax
ffffffff8002b23b:	7f 4b                	jg     ffffffff8002b288 <ZydisDecodeOptionalInstructionParts+0x1d3>
ffffffff8002b23d:	85 c0                	test   %eax,%eax
ffffffff8002b23f:	74 07                	je     ffffffff8002b248 <ZydisDecodeOptionalInstructionParts+0x193>
ffffffff8002b241:	83 f8 01             	cmp    $0x1,%eax
ffffffff8002b244:	74 36                	je     ffffffff8002b27c <ZydisDecodeOptionalInstructionParts+0x1c7>
ffffffff8002b246:	eb 40                	jmp    ffffffff8002b288 <ZydisDecodeOptionalInstructionParts+0x1d3>
ffffffff8002b248:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002b24c:	0f b6 80 22 01 00 00 	movzbl 0x122(%rax),%eax
ffffffff8002b253:	3c 05                	cmp    $0x5,%al
ffffffff8002b255:	75 36                	jne    ffffffff8002b28d <ZydisDecodeOptionalInstructionParts+0x1d8>
ffffffff8002b257:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002b25b:	8b 00                	mov    (%rax),%eax
ffffffff8002b25d:	85 c0                	test   %eax,%eax
ffffffff8002b25f:	75 15                	jne    ffffffff8002b276 <ZydisDecodeOptionalInstructionParts+0x1c1>
ffffffff8002b261:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002b265:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff8002b269:	0c 80                	or     $0x80,%al
ffffffff8002b26b:	48 89 c2             	mov    %rax,%rdx
ffffffff8002b26e:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002b272:	48 89 50 20          	mov    %rdx,0x20(%rax)
ffffffff8002b276:	c6 45 fe 20          	movb   $0x20,-0x2(%rbp)
ffffffff8002b27a:	eb 11                	jmp    ffffffff8002b28d <ZydisDecodeOptionalInstructionParts+0x1d8>
ffffffff8002b27c:	c6 45 fe 08          	movb   $0x8,-0x2(%rbp)
ffffffff8002b280:	eb 0c                	jmp    ffffffff8002b28e <ZydisDecodeOptionalInstructionParts+0x1d9>
ffffffff8002b282:	c6 45 fe 20          	movb   $0x20,-0x2(%rbp)
ffffffff8002b286:	eb 06                	jmp    ffffffff8002b28e <ZydisDecodeOptionalInstructionParts+0x1d9>
ffffffff8002b288:	eb fe                	jmp    ffffffff8002b288 <ZydisDecodeOptionalInstructionParts+0x1d3>
ffffffff8002b28a:	90                   	nop
ffffffff8002b28b:	eb 05                	jmp    ffffffff8002b292 <ZydisDecodeOptionalInstructionParts+0x1dd>
ffffffff8002b28d:	90                   	nop
ffffffff8002b28e:	eb 02                	jmp    ffffffff8002b292 <ZydisDecodeOptionalInstructionParts+0x1dd>
ffffffff8002b290:	eb fe                	jmp    ffffffff8002b290 <ZydisDecodeOptionalInstructionParts+0x1db>
ffffffff8002b292:	80 7d ff 00          	cmpb   $0x0,-0x1(%rbp)
ffffffff8002b296:	74 7d                	je     ffffffff8002b315 <ZydisDecodeOptionalInstructionParts+0x260>
ffffffff8002b298:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002b29c:	0f b6 40 08          	movzbl 0x8(%rax),%eax
ffffffff8002b2a0:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
ffffffff8002b2a4:	88 82 27 01 00 00    	mov    %al,0x127(%rdx)
ffffffff8002b2aa:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
ffffffff8002b2ae:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
ffffffff8002b2b2:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
ffffffff8002b2b6:	48 89 c2             	mov    %rax,%rdx
ffffffff8002b2b9:	48 89 cf             	mov    %rcx,%rdi
ffffffff8002b2bc:	e8 69 b0 ff ff       	call   ffffffff8002632a <ZydisInputNext>
ffffffff8002b2c1:	89 45 e8             	mov    %eax,-0x18(%rbp)
ffffffff8002b2c4:	8b 45 e8             	mov    -0x18(%rbp),%eax
ffffffff8002b2c7:	85 c0                	test   %eax,%eax
ffffffff8002b2c9:	79 08                	jns    ffffffff8002b2d3 <ZydisDecodeOptionalInstructionParts+0x21e>
ffffffff8002b2cb:	8b 45 e8             	mov    -0x18(%rbp),%eax
ffffffff8002b2ce:	e9 ee 01 00 00       	jmp    ffffffff8002b4c1 <ZydisDecodeOptionalInstructionParts+0x40c>
ffffffff8002b2d3:	0f b6 45 d7          	movzbl -0x29(%rbp),%eax
ffffffff8002b2d7:	0f b6 c0             	movzbl %al,%eax
ffffffff8002b2da:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
ffffffff8002b2de:	89 c6                	mov    %eax,%esi
ffffffff8002b2e0:	48 89 d7             	mov    %rdx,%rdi
ffffffff8002b2e3:	e8 51 bd ff ff       	call   ffffffff80027039 <ZydisDecodeSIB>
ffffffff8002b2e8:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002b2ec:	0f b6 80 26 01 00 00 	movzbl 0x126(%rax),%eax
ffffffff8002b2f3:	3c 05                	cmp    $0x5,%al
ffffffff8002b2f5:	75 1e                	jne    ffffffff8002b315 <ZydisDecodeOptionalInstructionParts+0x260>
ffffffff8002b2f7:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002b2fb:	0f b6 80 20 01 00 00 	movzbl 0x120(%rax),%eax
ffffffff8002b302:	3c 01                	cmp    $0x1,%al
ffffffff8002b304:	75 07                	jne    ffffffff8002b30d <ZydisDecodeOptionalInstructionParts+0x258>
ffffffff8002b306:	b8 08 00 00 00       	mov    $0x8,%eax
ffffffff8002b30b:	eb 05                	jmp    ffffffff8002b312 <ZydisDecodeOptionalInstructionParts+0x25d>
ffffffff8002b30d:	b8 20 00 00 00       	mov    $0x20,%eax
ffffffff8002b312:	88 45 fe             	mov    %al,-0x2(%rbp)
ffffffff8002b315:	80 7d fe 00          	cmpb   $0x0,-0x2(%rbp)
ffffffff8002b319:	74 28                	je     ffffffff8002b343 <ZydisDecodeOptionalInstructionParts+0x28e>
ffffffff8002b31b:	0f b6 45 fe          	movzbl -0x2(%rbp),%eax
ffffffff8002b31f:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
ffffffff8002b323:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
ffffffff8002b327:	89 c2                	mov    %eax,%edx
ffffffff8002b329:	48 89 cf             	mov    %rcx,%rdi
ffffffff8002b32c:	e8 6d bd ff ff       	call   ffffffff8002709e <ZydisReadDisplacement>
ffffffff8002b331:	89 45 e4             	mov    %eax,-0x1c(%rbp)
ffffffff8002b334:	8b 45 e4             	mov    -0x1c(%rbp),%eax
ffffffff8002b337:	85 c0                	test   %eax,%eax
ffffffff8002b339:	79 08                	jns    ffffffff8002b343 <ZydisDecodeOptionalInstructionParts+0x28e>
ffffffff8002b33b:	8b 45 e4             	mov    -0x1c(%rbp),%eax
ffffffff8002b33e:	e9 7e 01 00 00       	jmp    ffffffff8002b4c1 <ZydisDecodeOptionalInstructionParts+0x40c>
ffffffff8002b343:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002b347:	0f b6 80 20 01 00 00 	movzbl 0x120(%rax),%eax
ffffffff8002b34e:	3c 03                	cmp    $0x3,%al
ffffffff8002b350:	74 11                	je     ffffffff8002b363 <ZydisDecodeOptionalInstructionParts+0x2ae>
ffffffff8002b352:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff8002b356:	0f b6 00             	movzbl (%rax),%eax
ffffffff8002b359:	0f b6 c0             	movzbl %al,%eax
ffffffff8002b35c:	83 e0 10             	and    $0x10,%eax
ffffffff8002b35f:	85 c0                	test   %eax,%eax
ffffffff8002b361:	74 07                	je     ffffffff8002b36a <ZydisDecodeOptionalInstructionParts+0x2b5>
ffffffff8002b363:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8002b368:	eb 05                	jmp    ffffffff8002b36f <ZydisDecodeOptionalInstructionParts+0x2ba>
ffffffff8002b36a:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8002b36f:	89 c2                	mov    %eax,%edx
ffffffff8002b371:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8002b375:	88 50 14             	mov    %dl,0x14(%rax)
ffffffff8002b378:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff8002b37c:	0f b6 00             	movzbl (%rax),%eax
ffffffff8002b37f:	0f b6 c0             	movzbl %al,%eax
ffffffff8002b382:	83 e0 02             	and    $0x2,%eax
ffffffff8002b385:	85 c0                	test   %eax,%eax
ffffffff8002b387:	74 3d                	je     ffffffff8002b3c6 <ZydisDecodeOptionalInstructionParts+0x311>
ffffffff8002b389:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8002b38d:	0f b6 40 09          	movzbl 0x9(%rax),%eax
ffffffff8002b391:	0f b6 c0             	movzbl %al,%eax
ffffffff8002b394:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
ffffffff8002b398:	48 98                	cltq   
ffffffff8002b39a:	0f b6 44 02 01       	movzbl 0x1(%rdx,%rax,1),%eax
ffffffff8002b39f:	0f b6 c0             	movzbl %al,%eax
ffffffff8002b3a2:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
ffffffff8002b3a6:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
ffffffff8002b3aa:	89 c2                	mov    %eax,%edx
ffffffff8002b3ac:	48 89 cf             	mov    %rcx,%rdi
ffffffff8002b3af:	e8 ea bc ff ff       	call   ffffffff8002709e <ZydisReadDisplacement>
ffffffff8002b3b4:	89 45 e0             	mov    %eax,-0x20(%rbp)
ffffffff8002b3b7:	8b 45 e0             	mov    -0x20(%rbp),%eax
ffffffff8002b3ba:	85 c0                	test   %eax,%eax
ffffffff8002b3bc:	79 08                	jns    ffffffff8002b3c6 <ZydisDecodeOptionalInstructionParts+0x311>
ffffffff8002b3be:	8b 45 e0             	mov    -0x20(%rbp),%eax
ffffffff8002b3c1:	e9 fb 00 00 00       	jmp    ffffffff8002b4c1 <ZydisDecodeOptionalInstructionParts+0x40c>
ffffffff8002b3c6:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff8002b3ca:	0f b6 00             	movzbl (%rax),%eax
ffffffff8002b3cd:	0f b6 c0             	movzbl %al,%eax
ffffffff8002b3d0:	83 e0 04             	and    $0x4,%eax
ffffffff8002b3d3:	85 c0                	test   %eax,%eax
ffffffff8002b3d5:	74 7a                	je     ffffffff8002b451 <ZydisDecodeOptionalInstructionParts+0x39c>
ffffffff8002b3d7:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff8002b3db:	0f b6 40 08          	movzbl 0x8(%rax),%eax
ffffffff8002b3df:	84 c0                	test   %al,%al
ffffffff8002b3e1:	74 15                	je     ffffffff8002b3f8 <ZydisDecodeOptionalInstructionParts+0x343>
ffffffff8002b3e3:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002b3e7:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff8002b3eb:	0c 80                	or     $0x80,%al
ffffffff8002b3ed:	48 89 c2             	mov    %rax,%rdx
ffffffff8002b3f0:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002b3f4:	48 89 50 20          	mov    %rdx,0x20(%rax)
ffffffff8002b3f8:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff8002b3fc:	0f b6 40 08          	movzbl 0x8(%rax),%eax
ffffffff8002b400:	44 0f b6 c0          	movzbl %al,%r8d
ffffffff8002b404:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff8002b408:	0f b6 40 07          	movzbl 0x7(%rax),%eax
ffffffff8002b40c:	0f b6 c8             	movzbl %al,%ecx
ffffffff8002b40f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8002b413:	0f b6 40 08          	movzbl 0x8(%rax),%eax
ffffffff8002b417:	0f b6 c0             	movzbl %al,%eax
ffffffff8002b41a:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
ffffffff8002b41e:	48 98                	cltq   
ffffffff8002b420:	0f b6 44 02 04       	movzbl 0x4(%rdx,%rax,1),%eax
ffffffff8002b425:	0f b6 c0             	movzbl %al,%eax
ffffffff8002b428:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
ffffffff8002b42c:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
ffffffff8002b430:	45 89 c1             	mov    %r8d,%r9d
ffffffff8002b433:	41 89 c8             	mov    %ecx,%r8d
ffffffff8002b436:	89 c1                	mov    %eax,%ecx
ffffffff8002b438:	ba 00 00 00 00       	mov    $0x0,%edx
ffffffff8002b43d:	e8 d6 bd ff ff       	call   ffffffff80027218 <ZydisReadImmediate>
ffffffff8002b442:	89 45 dc             	mov    %eax,-0x24(%rbp)
ffffffff8002b445:	8b 45 dc             	mov    -0x24(%rbp),%eax
ffffffff8002b448:	85 c0                	test   %eax,%eax
ffffffff8002b44a:	79 05                	jns    ffffffff8002b451 <ZydisDecodeOptionalInstructionParts+0x39c>
ffffffff8002b44c:	8b 45 dc             	mov    -0x24(%rbp),%eax
ffffffff8002b44f:	eb 70                	jmp    ffffffff8002b4c1 <ZydisDecodeOptionalInstructionParts+0x40c>
ffffffff8002b451:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff8002b455:	0f b6 00             	movzbl (%rax),%eax
ffffffff8002b458:	0f b6 c0             	movzbl %al,%eax
ffffffff8002b45b:	83 e0 08             	and    $0x8,%eax
ffffffff8002b45e:	85 c0                	test   %eax,%eax
ffffffff8002b460:	74 59                	je     ffffffff8002b4bb <ZydisDecodeOptionalInstructionParts+0x406>
ffffffff8002b462:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff8002b466:	0f b6 40 0d          	movzbl 0xd(%rax),%eax
ffffffff8002b46a:	44 0f b6 c0          	movzbl %al,%r8d
ffffffff8002b46e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff8002b472:	0f b6 40 0c          	movzbl 0xc(%rax),%eax
ffffffff8002b476:	0f b6 c8             	movzbl %al,%ecx
ffffffff8002b479:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8002b47d:	0f b6 40 08          	movzbl 0x8(%rax),%eax
ffffffff8002b481:	0f b6 c0             	movzbl %al,%eax
ffffffff8002b484:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
ffffffff8002b488:	48 98                	cltq   
ffffffff8002b48a:	0f b6 44 02 09       	movzbl 0x9(%rdx,%rax,1),%eax
ffffffff8002b48f:	0f b6 c0             	movzbl %al,%eax
ffffffff8002b492:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
ffffffff8002b496:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
ffffffff8002b49a:	45 89 c1             	mov    %r8d,%r9d
ffffffff8002b49d:	41 89 c8             	mov    %ecx,%r8d
ffffffff8002b4a0:	89 c1                	mov    %eax,%ecx
ffffffff8002b4a2:	ba 01 00 00 00       	mov    $0x1,%edx
ffffffff8002b4a7:	e8 6c bd ff ff       	call   ffffffff80027218 <ZydisReadImmediate>
ffffffff8002b4ac:	89 45 d8             	mov    %eax,-0x28(%rbp)
ffffffff8002b4af:	8b 45 d8             	mov    -0x28(%rbp),%eax
ffffffff8002b4b2:	85 c0                	test   %eax,%eax
ffffffff8002b4b4:	79 05                	jns    ffffffff8002b4bb <ZydisDecodeOptionalInstructionParts+0x406>
ffffffff8002b4b6:	8b 45 d8             	mov    -0x28(%rbp),%eax
ffffffff8002b4b9:	eb 06                	jmp    ffffffff8002b4c1 <ZydisDecodeOptionalInstructionParts+0x40c>
ffffffff8002b4bb:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff8002b4c0:	90                   	nop
ffffffff8002b4c1:	c9                   	leave  
ffffffff8002b4c2:	c3                   	ret    

ffffffff8002b4c3 <ZydisSetEffectiveOperandWidth>:
ffffffff8002b4c3:	f3 0f 1e fa          	endbr64 
ffffffff8002b4c7:	55                   	push   %rbp
ffffffff8002b4c8:	48 89 e5             	mov    %rsp,%rbp
ffffffff8002b4cb:	48 83 ec 28          	sub    $0x28,%rsp
ffffffff8002b4cf:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff8002b4d3:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
ffffffff8002b4d7:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
ffffffff8002b4db:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8002b4df:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff8002b4e3:	48 c1 e8 2b          	shr    $0x2b,%rax
ffffffff8002b4e7:	83 e0 01             	and    $0x1,%eax
ffffffff8002b4ea:	88 45 ff             	mov    %al,-0x1(%rbp)
ffffffff8002b4ed:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8002b4f1:	8b 00                	mov    (%rax),%eax
ffffffff8002b4f3:	83 f8 01             	cmp    $0x1,%eax
ffffffff8002b4f6:	74 0b                	je     ffffffff8002b503 <ZydisSetEffectiveOperandWidth+0x40>
ffffffff8002b4f8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8002b4fc:	8b 00                	mov    (%rax),%eax
ffffffff8002b4fe:	83 f8 03             	cmp    $0x3,%eax
ffffffff8002b501:	75 06                	jne    ffffffff8002b509 <ZydisSetEffectiveOperandWidth+0x46>
ffffffff8002b503:	80 45 ff 02          	addb   $0x2,-0x1(%rbp)
ffffffff8002b507:	eb 21                	jmp    ffffffff8002b52a <ZydisSetEffectiveOperandWidth+0x67>
ffffffff8002b509:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8002b50d:	8b 00                	mov    (%rax),%eax
ffffffff8002b50f:	85 c0                	test   %eax,%eax
ffffffff8002b511:	75 17                	jne    ffffffff8002b52a <ZydisSetEffectiveOperandWidth+0x67>
ffffffff8002b513:	80 45 ff 04          	addb   $0x4,-0x1(%rbp)
ffffffff8002b517:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002b51b:	0f b6 40 0a          	movzbl 0xa(%rax),%eax
ffffffff8002b51f:	0f b6 c0             	movzbl %al,%eax
ffffffff8002b522:	01 c0                	add    %eax,%eax
ffffffff8002b524:	83 e0 02             	and    $0x2,%eax
ffffffff8002b527:	00 45 ff             	add    %al,-0x1(%rbp)
ffffffff8002b52a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8002b52e:	0f b6 40 04          	movzbl 0x4(%rax),%eax
ffffffff8002b532:	d0 e8                	shr    %al
ffffffff8002b534:	83 e0 07             	and    $0x7,%eax
ffffffff8002b537:	0f b6 c0             	movzbl %al,%eax
ffffffff8002b53a:	0f b6 55 ff          	movzbl -0x1(%rbp),%edx
ffffffff8002b53e:	48 63 d2             	movslq %edx,%rdx
ffffffff8002b541:	48 98                	cltq   
ffffffff8002b543:	48 c1 e0 03          	shl    $0x3,%rax
ffffffff8002b547:	48 01 c2             	add    %rax,%rdx
ffffffff8002b54a:	48 8d 05 ef 46 01 00 	lea    0x146ef(%rip),%rax        # ffffffff8003fc40 <operand_size_map.7>
ffffffff8002b551:	48 01 d0             	add    %rdx,%rax
ffffffff8002b554:	0f b6 00             	movzbl (%rax),%eax
ffffffff8002b557:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff8002b55b:	88 42 16             	mov    %al,0x16(%rdx)
ffffffff8002b55e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8002b562:	0f b6 40 16          	movzbl 0x16(%rax),%eax
ffffffff8002b566:	c0 e8 05             	shr    $0x5,%al
ffffffff8002b569:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff8002b56d:	88 42 08             	mov    %al,0x8(%rdx)
ffffffff8002b570:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8002b574:	0f b6 40 04          	movzbl 0x4(%rax),%eax
ffffffff8002b578:	83 e0 0e             	and    $0xe,%eax
ffffffff8002b57b:	3c 02                	cmp    $0x2,%al
ffffffff8002b57d:	75 08                	jne    ffffffff8002b587 <ZydisSetEffectiveOperandWidth+0xc4>
ffffffff8002b57f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8002b583:	c6 40 16 08          	movb   $0x8,0x16(%rax)
ffffffff8002b587:	90                   	nop
ffffffff8002b588:	c9                   	leave  
ffffffff8002b589:	c3                   	ret    

ffffffff8002b58a <ZydisSetEffectiveAddressWidth>:
ffffffff8002b58a:	f3 0f 1e fa          	endbr64 
ffffffff8002b58e:	55                   	push   %rbp
ffffffff8002b58f:	48 89 e5             	mov    %rsp,%rbp
ffffffff8002b592:	48 83 ec 28          	sub    $0x28,%rsp
ffffffff8002b596:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff8002b59a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
ffffffff8002b59e:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
ffffffff8002b5a2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8002b5a6:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff8002b5aa:	48 c1 e8 2c          	shr    $0x2c,%rax
ffffffff8002b5ae:	83 e0 01             	and    $0x1,%eax
ffffffff8002b5b1:	88 45 ff             	mov    %al,-0x1(%rbp)
ffffffff8002b5b4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8002b5b8:	8b 00                	mov    (%rax),%eax
ffffffff8002b5ba:	83 f8 01             	cmp    $0x1,%eax
ffffffff8002b5bd:	74 0b                	je     ffffffff8002b5ca <ZydisSetEffectiveAddressWidth+0x40>
ffffffff8002b5bf:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8002b5c3:	8b 00                	mov    (%rax),%eax
ffffffff8002b5c5:	83 f8 03             	cmp    $0x3,%eax
ffffffff8002b5c8:	75 06                	jne    ffffffff8002b5d0 <ZydisSetEffectiveAddressWidth+0x46>
ffffffff8002b5ca:	80 45 ff 02          	addb   $0x2,-0x1(%rbp)
ffffffff8002b5ce:	eb 0e                	jmp    ffffffff8002b5de <ZydisSetEffectiveAddressWidth+0x54>
ffffffff8002b5d0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8002b5d4:	8b 00                	mov    (%rax),%eax
ffffffff8002b5d6:	85 c0                	test   %eax,%eax
ffffffff8002b5d8:	75 04                	jne    ffffffff8002b5de <ZydisSetEffectiveAddressWidth+0x54>
ffffffff8002b5da:	80 45 ff 04          	addb   $0x4,-0x1(%rbp)
ffffffff8002b5de:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8002b5e2:	0f b6 40 04          	movzbl 0x4(%rax),%eax
ffffffff8002b5e6:	c0 e8 04             	shr    $0x4,%al
ffffffff8002b5e9:	83 e0 03             	and    $0x3,%eax
ffffffff8002b5ec:	0f b6 c0             	movzbl %al,%eax
ffffffff8002b5ef:	0f b6 55 ff          	movzbl -0x1(%rbp),%edx
ffffffff8002b5f3:	48 63 d2             	movslq %edx,%rdx
ffffffff8002b5f6:	48 98                	cltq   
ffffffff8002b5f8:	48 c1 e0 03          	shl    $0x3,%rax
ffffffff8002b5fc:	48 01 c2             	add    %rax,%rdx
ffffffff8002b5ff:	48 8d 05 7a 46 01 00 	lea    0x1467a(%rip),%rax        # ffffffff8003fc80 <address_size_map.6>
ffffffff8002b606:	48 01 d0             	add    %rdx,%rax
ffffffff8002b609:	0f b6 00             	movzbl (%rax),%eax
ffffffff8002b60c:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff8002b610:	88 42 17             	mov    %al,0x17(%rdx)
ffffffff8002b613:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8002b617:	0f b6 40 17          	movzbl 0x17(%rax),%eax
ffffffff8002b61b:	c0 e8 05             	shr    $0x5,%al
ffffffff8002b61e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff8002b622:	88 42 09             	mov    %al,0x9(%rdx)
ffffffff8002b625:	90                   	nop
ffffffff8002b626:	c9                   	leave  
ffffffff8002b627:	c3                   	ret    

ffffffff8002b628 <ZydisNodeHandlerXOP>:
ffffffff8002b628:	f3 0f 1e fa          	endbr64 
ffffffff8002b62c:	55                   	push   %rbp
ffffffff8002b62d:	48 89 e5             	mov    %rsp,%rbp
ffffffff8002b630:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff8002b634:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8002b638:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff8002b63c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8002b640:	8b 40 0c             	mov    0xc(%rax),%eax
ffffffff8002b643:	85 c0                	test   %eax,%eax
ffffffff8002b645:	74 07                	je     ffffffff8002b64e <ZydisNodeHandlerXOP+0x26>
ffffffff8002b647:	83 f8 02             	cmp    $0x2,%eax
ffffffff8002b64a:	74 0d                	je     ffffffff8002b659 <ZydisNodeHandlerXOP+0x31>
ffffffff8002b64c:	eb 3b                	jmp    ffffffff8002b689 <ZydisNodeHandlerXOP+0x61>
ffffffff8002b64e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8002b652:	66 c7 00 00 00       	movw   $0x0,(%rax)
ffffffff8002b657:	eb 32                	jmp    ffffffff8002b68b <ZydisNodeHandlerXOP+0x63>
ffffffff8002b659:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8002b65d:	0f b6 80 f4 00 00 00 	movzbl 0xf4(%rax),%eax
ffffffff8002b664:	0f b6 c8             	movzbl %al,%ecx
ffffffff8002b667:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8002b66b:	0f b6 80 f8 00 00 00 	movzbl 0xf8(%rax),%eax
ffffffff8002b672:	0f b6 d0             	movzbl %al,%edx
ffffffff8002b675:	89 d0                	mov    %edx,%eax
ffffffff8002b677:	01 c0                	add    %eax,%eax
ffffffff8002b679:	01 d0                	add    %edx,%eax
ffffffff8002b67b:	01 c8                	add    %ecx,%eax
ffffffff8002b67d:	8d 50 f9             	lea    -0x7(%rax),%edx
ffffffff8002b680:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8002b684:	66 89 10             	mov    %dx,(%rax)
ffffffff8002b687:	eb 02                	jmp    ffffffff8002b68b <ZydisNodeHandlerXOP+0x63>
ffffffff8002b689:	eb fe                	jmp    ffffffff8002b689 <ZydisNodeHandlerXOP+0x61>
ffffffff8002b68b:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff8002b690:	c9                   	leave  
ffffffff8002b691:	c3                   	ret    

ffffffff8002b692 <ZydisNodeHandlerVEX>:
ffffffff8002b692:	f3 0f 1e fa          	endbr64 
ffffffff8002b696:	55                   	push   %rbp
ffffffff8002b697:	48 89 e5             	mov    %rsp,%rbp
ffffffff8002b69a:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff8002b69e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8002b6a2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff8002b6a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8002b6aa:	8b 40 0c             	mov    0xc(%rax),%eax
ffffffff8002b6ad:	85 c0                	test   %eax,%eax
ffffffff8002b6af:	74 07                	je     ffffffff8002b6b8 <ZydisNodeHandlerVEX+0x26>
ffffffff8002b6b1:	83 f8 03             	cmp    $0x3,%eax
ffffffff8002b6b4:	74 0d                	je     ffffffff8002b6c3 <ZydisNodeHandlerVEX+0x31>
ffffffff8002b6b6:	eb 38                	jmp    ffffffff8002b6f0 <ZydisNodeHandlerVEX+0x5e>
ffffffff8002b6b8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8002b6bc:	66 c7 00 00 00       	movw   $0x0,(%rax)
ffffffff8002b6c1:	eb 2f                	jmp    ffffffff8002b6f2 <ZydisNodeHandlerVEX+0x60>
ffffffff8002b6c3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8002b6c7:	0f b6 80 fd 00 00 00 	movzbl 0xfd(%rax),%eax
ffffffff8002b6ce:	0f b6 d0             	movzbl %al,%edx
ffffffff8002b6d1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8002b6d5:	0f b6 80 01 01 00 00 	movzbl 0x101(%rax),%eax
ffffffff8002b6dc:	0f b6 c0             	movzbl %al,%eax
ffffffff8002b6df:	c1 e0 02             	shl    $0x2,%eax
ffffffff8002b6e2:	01 d0                	add    %edx,%eax
ffffffff8002b6e4:	8d 50 01             	lea    0x1(%rax),%edx
ffffffff8002b6e7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8002b6eb:	66 89 10             	mov    %dx,(%rax)
ffffffff8002b6ee:	eb 02                	jmp    ffffffff8002b6f2 <ZydisNodeHandlerVEX+0x60>
ffffffff8002b6f0:	eb fe                	jmp    ffffffff8002b6f0 <ZydisNodeHandlerVEX+0x5e>
ffffffff8002b6f2:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff8002b6f7:	c9                   	leave  
ffffffff8002b6f8:	c3                   	ret    

ffffffff8002b6f9 <ZydisNodeHandlerEMVEX>:
ffffffff8002b6f9:	f3 0f 1e fa          	endbr64 
ffffffff8002b6fd:	55                   	push   %rbp
ffffffff8002b6fe:	48 89 e5             	mov    %rsp,%rbp
ffffffff8002b701:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff8002b705:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8002b709:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff8002b70d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8002b711:	8b 40 0c             	mov    0xc(%rax),%eax
ffffffff8002b714:	83 f8 05             	cmp    $0x5,%eax
ffffffff8002b717:	74 48                	je     ffffffff8002b761 <ZydisNodeHandlerEMVEX+0x68>
ffffffff8002b719:	83 f8 05             	cmp    $0x5,%eax
ffffffff8002b71c:	77 70                	ja     ffffffff8002b78e <ZydisNodeHandlerEMVEX+0x95>
ffffffff8002b71e:	85 c0                	test   %eax,%eax
ffffffff8002b720:	74 07                	je     ffffffff8002b729 <ZydisNodeHandlerEMVEX+0x30>
ffffffff8002b722:	83 f8 04             	cmp    $0x4,%eax
ffffffff8002b725:	74 0d                	je     ffffffff8002b734 <ZydisNodeHandlerEMVEX+0x3b>
ffffffff8002b727:	eb 65                	jmp    ffffffff8002b78e <ZydisNodeHandlerEMVEX+0x95>
ffffffff8002b729:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8002b72d:	66 c7 00 00 00       	movw   $0x0,(%rax)
ffffffff8002b732:	eb 5c                	jmp    ffffffff8002b790 <ZydisNodeHandlerEMVEX+0x97>
ffffffff8002b734:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8002b738:	0f b6 80 08 01 00 00 	movzbl 0x108(%rax),%eax
ffffffff8002b73f:	0f b6 d0             	movzbl %al,%edx
ffffffff8002b742:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8002b746:	0f b6 80 0b 01 00 00 	movzbl 0x10b(%rax),%eax
ffffffff8002b74d:	0f b6 c0             	movzbl %al,%eax
ffffffff8002b750:	c1 e0 03             	shl    $0x3,%eax
ffffffff8002b753:	01 d0                	add    %edx,%eax
ffffffff8002b755:	8d 50 01             	lea    0x1(%rax),%edx
ffffffff8002b758:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8002b75c:	66 89 10             	mov    %dx,(%rax)
ffffffff8002b75f:	eb 2f                	jmp    ffffffff8002b790 <ZydisNodeHandlerEMVEX+0x97>
ffffffff8002b761:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8002b765:	0f b6 80 17 01 00 00 	movzbl 0x117(%rax),%eax
ffffffff8002b76c:	0f b6 d0             	movzbl %al,%edx
ffffffff8002b76f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8002b773:	0f b6 80 1a 01 00 00 	movzbl 0x11a(%rax),%eax
ffffffff8002b77a:	0f b6 c0             	movzbl %al,%eax
ffffffff8002b77d:	c1 e0 02             	shl    $0x2,%eax
ffffffff8002b780:	01 d0                	add    %edx,%eax
ffffffff8002b782:	8d 50 21             	lea    0x21(%rax),%edx
ffffffff8002b785:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8002b789:	66 89 10             	mov    %dx,(%rax)
ffffffff8002b78c:	eb 02                	jmp    ffffffff8002b790 <ZydisNodeHandlerEMVEX+0x97>
ffffffff8002b78e:	eb fe                	jmp    ffffffff8002b78e <ZydisNodeHandlerEMVEX+0x95>
ffffffff8002b790:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff8002b795:	c9                   	leave  
ffffffff8002b796:	c3                   	ret    

ffffffff8002b797 <ZydisNodeHandlerOpcode>:
ffffffff8002b797:	f3 0f 1e fa          	endbr64 
ffffffff8002b79b:	55                   	push   %rbp
ffffffff8002b79c:	48 89 e5             	mov    %rsp,%rbp
ffffffff8002b79f:	48 83 ec 58          	sub    $0x58,%rsp
ffffffff8002b7a3:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
ffffffff8002b7a7:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
ffffffff8002b7ab:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
ffffffff8002b7af:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
ffffffff8002b7b3:	8b 40 0c             	mov    0xc(%rax),%eax
ffffffff8002b7b6:	85 c0                	test   %eax,%eax
ffffffff8002b7b8:	74 0e                	je     ffffffff8002b7c8 <ZydisNodeHandlerOpcode+0x31>
ffffffff8002b7ba:	83 f8 01             	cmp    $0x1,%eax
ffffffff8002b7bd:	0f 84 6b 05 00 00    	je     ffffffff8002bd2e <ZydisNodeHandlerOpcode+0x597>
ffffffff8002b7c3:	e9 76 05 00 00       	jmp    ffffffff8002bd3e <ZydisNodeHandlerOpcode+0x5a7>
ffffffff8002b7c8:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
ffffffff8002b7cc:	48 8d 50 14          	lea    0x14(%rax),%rdx
ffffffff8002b7d0:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
ffffffff8002b7d4:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff8002b7d8:	48 89 ce             	mov    %rcx,%rsi
ffffffff8002b7db:	48 89 c7             	mov    %rax,%rdi
ffffffff8002b7de:	e8 47 ab ff ff       	call   ffffffff8002632a <ZydisInputNext>
ffffffff8002b7e3:	89 45 fc             	mov    %eax,-0x4(%rbp)
ffffffff8002b7e6:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8002b7e9:	85 c0                	test   %eax,%eax
ffffffff8002b7eb:	79 08                	jns    ffffffff8002b7f5 <ZydisNodeHandlerOpcode+0x5e>
ffffffff8002b7ed:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8002b7f0:	e9 8c 05 00 00       	jmp    ffffffff8002bd81 <ZydisNodeHandlerOpcode+0x5ea>
ffffffff8002b7f5:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
ffffffff8002b7f9:	8b 40 10             	mov    0x10(%rax),%eax
ffffffff8002b7fc:	83 f8 0b             	cmp    $0xb,%eax
ffffffff8002b7ff:	0f 87 24 05 00 00    	ja     ffffffff8002bd29 <ZydisNodeHandlerOpcode+0x592>
ffffffff8002b805:	83 f8 09             	cmp    $0x9,%eax
ffffffff8002b808:	0f 83 1d 05 00 00    	jae    ffffffff8002bd2b <ZydisNodeHandlerOpcode+0x594>
ffffffff8002b80e:	83 f8 03             	cmp    $0x3,%eax
ffffffff8002b811:	0f 87 12 05 00 00    	ja     ffffffff8002bd29 <ZydisNodeHandlerOpcode+0x592>
ffffffff8002b817:	83 f8 02             	cmp    $0x2,%eax
ffffffff8002b81a:	0f 83 0b 05 00 00    	jae    ffffffff8002bd2b <ZydisNodeHandlerOpcode+0x594>
ffffffff8002b820:	85 c0                	test   %eax,%eax
ffffffff8002b822:	74 0e                	je     ffffffff8002b832 <ZydisNodeHandlerOpcode+0x9b>
ffffffff8002b824:	83 f8 01             	cmp    $0x1,%eax
ffffffff8002b827:	0f 84 90 04 00 00    	je     ffffffff8002bcbd <ZydisNodeHandlerOpcode+0x526>
ffffffff8002b82d:	e9 f7 04 00 00       	jmp    ffffffff8002bd29 <ZydisNodeHandlerOpcode+0x592>
ffffffff8002b832:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
ffffffff8002b836:	0f b6 40 14          	movzbl 0x14(%rax),%eax
ffffffff8002b83a:	0f b6 c0             	movzbl %al,%eax
ffffffff8002b83d:	3d c5 00 00 00       	cmp    $0xc5,%eax
ffffffff8002b842:	0f 8f 6c 04 00 00    	jg     ffffffff8002bcb4 <ZydisNodeHandlerOpcode+0x51d>
ffffffff8002b848:	3d c4 00 00 00       	cmp    $0xc4,%eax
ffffffff8002b84d:	7d 35                	jge    ffffffff8002b884 <ZydisNodeHandlerOpcode+0xed>
ffffffff8002b84f:	3d 8f 00 00 00       	cmp    $0x8f,%eax
ffffffff8002b854:	0f 84 38 03 00 00    	je     ffffffff8002bb92 <ZydisNodeHandlerOpcode+0x3fb>
ffffffff8002b85a:	3d 8f 00 00 00       	cmp    $0x8f,%eax
ffffffff8002b85f:	0f 8f 4f 04 00 00    	jg     ffffffff8002bcb4 <ZydisNodeHandlerOpcode+0x51d>
ffffffff8002b865:	83 f8 0f             	cmp    $0xf,%eax
ffffffff8002b868:	74 0a                	je     ffffffff8002b874 <ZydisNodeHandlerOpcode+0xdd>
ffffffff8002b86a:	83 f8 62             	cmp    $0x62,%eax
ffffffff8002b86d:	74 15                	je     ffffffff8002b884 <ZydisNodeHandlerOpcode+0xed>
ffffffff8002b86f:	e9 40 04 00 00       	jmp    ffffffff8002bcb4 <ZydisNodeHandlerOpcode+0x51d>
ffffffff8002b874:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
ffffffff8002b878:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%rax)
ffffffff8002b87f:	e9 37 04 00 00       	jmp    ffffffff8002bcbb <ZydisNodeHandlerOpcode+0x524>
ffffffff8002b884:	48 8d 45 cb          	lea    -0x35(%rbp),%rax
ffffffff8002b888:	48 8b 75 b0          	mov    -0x50(%rbp),%rsi
ffffffff8002b88c:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
ffffffff8002b890:	48 89 c2             	mov    %rax,%rdx
ffffffff8002b893:	48 89 cf             	mov    %rcx,%rdi
ffffffff8002b896:	e8 e7 a9 ff ff       	call   ffffffff80026282 <ZydisInputPeek>
ffffffff8002b89b:	89 45 ec             	mov    %eax,-0x14(%rbp)
ffffffff8002b89e:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff8002b8a1:	85 c0                	test   %eax,%eax
ffffffff8002b8a3:	79 08                	jns    ffffffff8002b8ad <ZydisNodeHandlerOpcode+0x116>
ffffffff8002b8a5:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff8002b8a8:	e9 d4 04 00 00       	jmp    ffffffff8002bd81 <ZydisNodeHandlerOpcode+0x5ea>
ffffffff8002b8ad:	0f b6 45 cb          	movzbl -0x35(%rbp),%eax
ffffffff8002b8b1:	0f b6 c0             	movzbl %al,%eax
ffffffff8002b8b4:	25 f0 00 00 00       	and    $0xf0,%eax
ffffffff8002b8b9:	3d bf 00 00 00       	cmp    $0xbf,%eax
ffffffff8002b8be:	7f 0e                	jg     ffffffff8002b8ce <ZydisNodeHandlerOpcode+0x137>
ffffffff8002b8c0:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
ffffffff8002b8c4:	8b 00                	mov    (%rax),%eax
ffffffff8002b8c6:	85 c0                	test   %eax,%eax
ffffffff8002b8c8:	0f 85 e9 03 00 00    	jne    ffffffff8002bcb7 <ZydisNodeHandlerOpcode+0x520>
ffffffff8002b8ce:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
ffffffff8002b8d2:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff8002b8d6:	83 e0 04             	and    $0x4,%eax
ffffffff8002b8d9:	48 85 c0             	test   %rax,%rax
ffffffff8002b8dc:	74 0a                	je     ffffffff8002b8e8 <ZydisNodeHandlerOpcode+0x151>
ffffffff8002b8de:	b8 06 00 20 80       	mov    $0x80200006,%eax
ffffffff8002b8e3:	e9 a0 02 00 00       	jmp    ffffffff8002bb88 <ZydisNodeHandlerOpcode+0x3f1>
ffffffff8002b8e8:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff8002b8ec:	0f b6 40 20          	movzbl 0x20(%rax),%eax
ffffffff8002b8f0:	84 c0                	test   %al,%al
ffffffff8002b8f2:	74 0a                	je     ffffffff8002b8fe <ZydisNodeHandlerOpcode+0x167>
ffffffff8002b8f4:	b8 04 00 20 80       	mov    $0x80200004,%eax
ffffffff8002b8f9:	e9 8a 02 00 00       	jmp    ffffffff8002bb88 <ZydisNodeHandlerOpcode+0x3f1>
ffffffff8002b8fe:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff8002b902:	0f b6 40 24          	movzbl 0x24(%rax),%eax
ffffffff8002b906:	84 c0                	test   %al,%al
ffffffff8002b908:	74 0a                	je     ffffffff8002b914 <ZydisNodeHandlerOpcode+0x17d>
ffffffff8002b90a:	b8 05 00 20 80       	mov    $0x80200005,%eax
ffffffff8002b90f:	e9 74 02 00 00       	jmp    ffffffff8002bb88 <ZydisNodeHandlerOpcode+0x3f1>
ffffffff8002b914:	c7 45 c7 00 00 00 00 	movl   $0x0,-0x39(%rbp)
ffffffff8002b91b:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
ffffffff8002b91f:	0f b6 40 14          	movzbl 0x14(%rax),%eax
ffffffff8002b923:	88 45 c7             	mov    %al,-0x39(%rbp)
ffffffff8002b926:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
ffffffff8002b92a:	0f b6 40 14          	movzbl 0x14(%rax),%eax
ffffffff8002b92e:	0f b6 c0             	movzbl %al,%eax
ffffffff8002b931:	3d c5 00 00 00       	cmp    $0xc5,%eax
ffffffff8002b936:	74 63                	je     ffffffff8002b99b <ZydisNodeHandlerOpcode+0x204>
ffffffff8002b938:	3d c5 00 00 00       	cmp    $0xc5,%eax
ffffffff8002b93d:	0f 8f c9 00 00 00    	jg     ffffffff8002ba0c <ZydisNodeHandlerOpcode+0x275>
ffffffff8002b943:	83 f8 62             	cmp    $0x62,%eax
ffffffff8002b946:	0f 84 91 00 00 00    	je     ffffffff8002b9dd <ZydisNodeHandlerOpcode+0x246>
ffffffff8002b94c:	3d c4 00 00 00       	cmp    $0xc4,%eax
ffffffff8002b951:	0f 85 b5 00 00 00    	jne    ffffffff8002ba0c <ZydisNodeHandlerOpcode+0x275>
ffffffff8002b957:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
ffffffff8002b95b:	0f b6 40 08          	movzbl 0x8(%rax),%eax
ffffffff8002b95f:	83 e8 01             	sub    $0x1,%eax
ffffffff8002b962:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
ffffffff8002b966:	88 82 02 01 00 00    	mov    %al,0x102(%rdx)
ffffffff8002b96c:	48 8d 45 c7          	lea    -0x39(%rbp),%rax
ffffffff8002b970:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffff8002b974:	48 8b 75 b0          	mov    -0x50(%rbp),%rsi
ffffffff8002b978:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff8002b97c:	b9 02 00 00 00       	mov    $0x2,%ecx
ffffffff8002b981:	48 89 c7             	mov    %rax,%rdi
ffffffff8002b984:	e8 2a aa ff ff       	call   ffffffff800263b3 <ZydisInputNextBytes>
ffffffff8002b989:	89 45 e4             	mov    %eax,-0x1c(%rbp)
ffffffff8002b98c:	8b 45 e4             	mov    -0x1c(%rbp),%eax
ffffffff8002b98f:	85 c0                	test   %eax,%eax
ffffffff8002b991:	79 7b                	jns    ffffffff8002ba0e <ZydisNodeHandlerOpcode+0x277>
ffffffff8002b993:	8b 45 e4             	mov    -0x1c(%rbp),%eax
ffffffff8002b996:	e9 ed 01 00 00       	jmp    ffffffff8002bb88 <ZydisNodeHandlerOpcode+0x3f1>
ffffffff8002b99b:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
ffffffff8002b99f:	0f b6 40 08          	movzbl 0x8(%rax),%eax
ffffffff8002b9a3:	83 e8 01             	sub    $0x1,%eax
ffffffff8002b9a6:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
ffffffff8002b9aa:	88 82 02 01 00 00    	mov    %al,0x102(%rdx)
ffffffff8002b9b0:	48 8d 45 c7          	lea    -0x39(%rbp),%rax
ffffffff8002b9b4:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffff8002b9b8:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
ffffffff8002b9bc:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff8002b9c0:	48 89 ce             	mov    %rcx,%rsi
ffffffff8002b9c3:	48 89 c7             	mov    %rax,%rdi
ffffffff8002b9c6:	e8 5f a9 ff ff       	call   ffffffff8002632a <ZydisInputNext>
ffffffff8002b9cb:	89 45 e8             	mov    %eax,-0x18(%rbp)
ffffffff8002b9ce:	8b 45 e8             	mov    -0x18(%rbp),%eax
ffffffff8002b9d1:	85 c0                	test   %eax,%eax
ffffffff8002b9d3:	79 3c                	jns    ffffffff8002ba11 <ZydisNodeHandlerOpcode+0x27a>
ffffffff8002b9d5:	8b 45 e8             	mov    -0x18(%rbp),%eax
ffffffff8002b9d8:	e9 ab 01 00 00       	jmp    ffffffff8002bb88 <ZydisNodeHandlerOpcode+0x3f1>
ffffffff8002b9dd:	48 8d 45 c7          	lea    -0x39(%rbp),%rax
ffffffff8002b9e1:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffff8002b9e5:	48 8b 75 b0          	mov    -0x50(%rbp),%rsi
ffffffff8002b9e9:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff8002b9ed:	b9 03 00 00 00       	mov    $0x3,%ecx
ffffffff8002b9f2:	48 89 c7             	mov    %rax,%rdi
ffffffff8002b9f5:	e8 b9 a9 ff ff       	call   ffffffff800263b3 <ZydisInputNextBytes>
ffffffff8002b9fa:	89 45 e0             	mov    %eax,-0x20(%rbp)
ffffffff8002b9fd:	8b 45 e0             	mov    -0x20(%rbp),%eax
ffffffff8002ba00:	85 c0                	test   %eax,%eax
ffffffff8002ba02:	79 10                	jns    ffffffff8002ba14 <ZydisNodeHandlerOpcode+0x27d>
ffffffff8002ba04:	8b 45 e0             	mov    -0x20(%rbp),%eax
ffffffff8002ba07:	e9 7c 01 00 00       	jmp    ffffffff8002bb88 <ZydisNodeHandlerOpcode+0x3f1>
ffffffff8002ba0c:	eb fe                	jmp    ffffffff8002ba0c <ZydisNodeHandlerOpcode+0x275>
ffffffff8002ba0e:	90                   	nop
ffffffff8002ba0f:	eb 04                	jmp    ffffffff8002ba15 <ZydisNodeHandlerOpcode+0x27e>
ffffffff8002ba11:	90                   	nop
ffffffff8002ba12:	eb 01                	jmp    ffffffff8002ba15 <ZydisNodeHandlerOpcode+0x27e>
ffffffff8002ba14:	90                   	nop
ffffffff8002ba15:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
ffffffff8002ba19:	0f b6 40 14          	movzbl 0x14(%rax),%eax
ffffffff8002ba1d:	0f b6 c0             	movzbl %al,%eax
ffffffff8002ba20:	83 f8 62             	cmp    $0x62,%eax
ffffffff8002ba23:	74 69                	je     ffffffff8002ba8e <ZydisNodeHandlerOpcode+0x2f7>
ffffffff8002ba25:	83 f8 62             	cmp    $0x62,%eax
ffffffff8002ba28:	0f 8c 58 01 00 00    	jl     ffffffff8002bb86 <ZydisNodeHandlerOpcode+0x3ef>
ffffffff8002ba2e:	2d c4 00 00 00       	sub    $0xc4,%eax
ffffffff8002ba33:	83 f8 01             	cmp    $0x1,%eax
ffffffff8002ba36:	0f 87 4a 01 00 00    	ja     ffffffff8002bb86 <ZydisNodeHandlerOpcode+0x3ef>
ffffffff8002ba3c:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
ffffffff8002ba40:	c7 40 0c 03 00 00 00 	movl   $0x3,0xc(%rax)
ffffffff8002ba47:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff8002ba4b:	48 8b 48 08          	mov    0x8(%rax),%rcx
ffffffff8002ba4f:	48 8d 45 c7          	lea    -0x39(%rbp),%rax
ffffffff8002ba53:	48 8b 75 b0          	mov    -0x50(%rbp),%rsi
ffffffff8002ba57:	48 89 c2             	mov    %rax,%rdx
ffffffff8002ba5a:	48 89 cf             	mov    %rcx,%rdi
ffffffff8002ba5d:	e8 bb ac ff ff       	call   ffffffff8002671d <ZydisDecodeVEX>
ffffffff8002ba62:	89 45 dc             	mov    %eax,-0x24(%rbp)
ffffffff8002ba65:	8b 45 dc             	mov    -0x24(%rbp),%eax
ffffffff8002ba68:	85 c0                	test   %eax,%eax
ffffffff8002ba6a:	79 08                	jns    ffffffff8002ba74 <ZydisNodeHandlerOpcode+0x2dd>
ffffffff8002ba6c:	8b 45 dc             	mov    -0x24(%rbp),%eax
ffffffff8002ba6f:	e9 14 01 00 00       	jmp    ffffffff8002bb88 <ZydisNodeHandlerOpcode+0x3f1>
ffffffff8002ba74:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
ffffffff8002ba78:	0f b6 80 fd 00 00 00 	movzbl 0xfd(%rax),%eax
ffffffff8002ba7f:	0f b6 c0             	movzbl %al,%eax
ffffffff8002ba82:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
ffffffff8002ba86:	89 42 10             	mov    %eax,0x10(%rdx)
ffffffff8002ba89:	e9 ff 00 00 00       	jmp    ffffffff8002bb8d <ZydisNodeHandlerOpcode+0x3f6>
ffffffff8002ba8e:	0f b6 45 c9          	movzbl -0x37(%rbp),%eax
ffffffff8002ba92:	c0 e8 02             	shr    $0x2,%al
ffffffff8002ba95:	0f b6 c0             	movzbl %al,%eax
ffffffff8002ba98:	83 e0 01             	and    $0x1,%eax
ffffffff8002ba9b:	85 c0                	test   %eax,%eax
ffffffff8002ba9d:	74 0a                	je     ffffffff8002baa9 <ZydisNodeHandlerOpcode+0x312>
ffffffff8002ba9f:	83 f8 01             	cmp    $0x1,%eax
ffffffff8002baa2:	74 7d                	je     ffffffff8002bb21 <ZydisNodeHandlerOpcode+0x38a>
ffffffff8002baa4:	e9 d9 00 00 00       	jmp    ffffffff8002bb82 <ZydisNodeHandlerOpcode+0x3eb>
ffffffff8002baa9:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
ffffffff8002baad:	0f b6 40 08          	movzbl 0x8(%rax),%eax
ffffffff8002bab1:	83 e8 04             	sub    $0x4,%eax
ffffffff8002bab4:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
ffffffff8002bab8:	88 82 1f 01 00 00    	mov    %al,0x11f(%rdx)
ffffffff8002babe:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff8002bac2:	48 8b 00             	mov    (%rax),%rax
ffffffff8002bac5:	8b 00                	mov    (%rax),%eax
ffffffff8002bac7:	85 c0                	test   %eax,%eax
ffffffff8002bac9:	74 0a                	je     ffffffff8002bad5 <ZydisNodeHandlerOpcode+0x33e>
ffffffff8002bacb:	b8 01 00 20 80       	mov    $0x80200001,%eax
ffffffff8002bad0:	e9 b3 00 00 00       	jmp    ffffffff8002bb88 <ZydisNodeHandlerOpcode+0x3f1>
ffffffff8002bad5:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
ffffffff8002bad9:	c7 40 0c 05 00 00 00 	movl   $0x5,0xc(%rax)
ffffffff8002bae0:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff8002bae4:	48 8b 48 08          	mov    0x8(%rax),%rcx
ffffffff8002bae8:	48 8d 45 c7          	lea    -0x39(%rbp),%rax
ffffffff8002baec:	48 8b 75 b0          	mov    -0x50(%rbp),%rsi
ffffffff8002baf0:	48 89 c2             	mov    %rax,%rdx
ffffffff8002baf3:	48 89 cf             	mov    %rcx,%rdi
ffffffff8002baf6:	e8 66 b2 ff ff       	call   ffffffff80026d61 <ZydisDecodeMVEX>
ffffffff8002bafb:	89 45 d4             	mov    %eax,-0x2c(%rbp)
ffffffff8002bafe:	8b 45 d4             	mov    -0x2c(%rbp),%eax
ffffffff8002bb01:	85 c0                	test   %eax,%eax
ffffffff8002bb03:	79 05                	jns    ffffffff8002bb0a <ZydisNodeHandlerOpcode+0x373>
ffffffff8002bb05:	8b 45 d4             	mov    -0x2c(%rbp),%eax
ffffffff8002bb08:	eb 7e                	jmp    ffffffff8002bb88 <ZydisNodeHandlerOpcode+0x3f1>
ffffffff8002bb0a:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
ffffffff8002bb0e:	0f b6 80 17 01 00 00 	movzbl 0x117(%rax),%eax
ffffffff8002bb15:	0f b6 c0             	movzbl %al,%eax
ffffffff8002bb18:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
ffffffff8002bb1c:	89 42 10             	mov    %eax,0x10(%rdx)
ffffffff8002bb1f:	eb 63                	jmp    ffffffff8002bb84 <ZydisNodeHandlerOpcode+0x3ed>
ffffffff8002bb21:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
ffffffff8002bb25:	0f b6 40 08          	movzbl 0x8(%rax),%eax
ffffffff8002bb29:	83 e8 04             	sub    $0x4,%eax
ffffffff8002bb2c:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
ffffffff8002bb30:	88 82 12 01 00 00    	mov    %al,0x112(%rdx)
ffffffff8002bb36:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
ffffffff8002bb3a:	c7 40 0c 04 00 00 00 	movl   $0x4,0xc(%rax)
ffffffff8002bb41:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff8002bb45:	48 8b 48 08          	mov    0x8(%rax),%rcx
ffffffff8002bb49:	48 8d 45 c7          	lea    -0x39(%rbp),%rax
ffffffff8002bb4d:	48 8b 75 b0          	mov    -0x50(%rbp),%rsi
ffffffff8002bb51:	48 89 c2             	mov    %rax,%rdx
ffffffff8002bb54:	48 89 cf             	mov    %rcx,%rdi
ffffffff8002bb57:	e8 81 ae ff ff       	call   ffffffff800269dd <ZydisDecodeEVEX>
ffffffff8002bb5c:	89 45 d8             	mov    %eax,-0x28(%rbp)
ffffffff8002bb5f:	8b 45 d8             	mov    -0x28(%rbp),%eax
ffffffff8002bb62:	85 c0                	test   %eax,%eax
ffffffff8002bb64:	79 05                	jns    ffffffff8002bb6b <ZydisNodeHandlerOpcode+0x3d4>
ffffffff8002bb66:	8b 45 d8             	mov    -0x28(%rbp),%eax
ffffffff8002bb69:	eb 1d                	jmp    ffffffff8002bb88 <ZydisNodeHandlerOpcode+0x3f1>
ffffffff8002bb6b:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
ffffffff8002bb6f:	0f b6 80 08 01 00 00 	movzbl 0x108(%rax),%eax
ffffffff8002bb76:	0f b6 c0             	movzbl %al,%eax
ffffffff8002bb79:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
ffffffff8002bb7d:	89 42 10             	mov    %eax,0x10(%rdx)
ffffffff8002bb80:	eb 02                	jmp    ffffffff8002bb84 <ZydisNodeHandlerOpcode+0x3ed>
ffffffff8002bb82:	eb fe                	jmp    ffffffff8002bb82 <ZydisNodeHandlerOpcode+0x3eb>
ffffffff8002bb84:	eb 07                	jmp    ffffffff8002bb8d <ZydisNodeHandlerOpcode+0x3f6>
ffffffff8002bb86:	eb fe                	jmp    ffffffff8002bb86 <ZydisNodeHandlerOpcode+0x3ef>
ffffffff8002bb88:	e9 f4 01 00 00       	jmp    ffffffff8002bd81 <ZydisNodeHandlerOpcode+0x5ea>
ffffffff8002bb8d:	e9 9a 01 00 00       	jmp    ffffffff8002bd2c <ZydisNodeHandlerOpcode+0x595>
ffffffff8002bb92:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
ffffffff8002bb96:	48 8b 75 b0          	mov    -0x50(%rbp),%rsi
ffffffff8002bb9a:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
ffffffff8002bb9e:	48 89 c2             	mov    %rax,%rdx
ffffffff8002bba1:	48 89 cf             	mov    %rcx,%rdi
ffffffff8002bba4:	e8 d9 a6 ff ff       	call   ffffffff80026282 <ZydisInputPeek>
ffffffff8002bba9:	89 45 f8             	mov    %eax,-0x8(%rbp)
ffffffff8002bbac:	8b 45 f8             	mov    -0x8(%rbp),%eax
ffffffff8002bbaf:	85 c0                	test   %eax,%eax
ffffffff8002bbb1:	79 08                	jns    ffffffff8002bbbb <ZydisNodeHandlerOpcode+0x424>
ffffffff8002bbb3:	8b 45 f8             	mov    -0x8(%rbp),%eax
ffffffff8002bbb6:	e9 c6 01 00 00       	jmp    ffffffff8002bd81 <ZydisNodeHandlerOpcode+0x5ea>
ffffffff8002bbbb:	0f b6 45 cf          	movzbl -0x31(%rbp),%eax
ffffffff8002bbbf:	0f b6 c0             	movzbl %al,%eax
ffffffff8002bbc2:	83 e0 18             	and    $0x18,%eax
ffffffff8002bbc5:	85 c0                	test   %eax,%eax
ffffffff8002bbc7:	0f 84 ed 00 00 00    	je     ffffffff8002bcba <ZydisNodeHandlerOpcode+0x523>
ffffffff8002bbcd:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
ffffffff8002bbd1:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff8002bbd5:	83 e0 04             	and    $0x4,%eax
ffffffff8002bbd8:	48 85 c0             	test   %rax,%rax
ffffffff8002bbdb:	74 0a                	je     ffffffff8002bbe7 <ZydisNodeHandlerOpcode+0x450>
ffffffff8002bbdd:	b8 06 00 20 80       	mov    $0x80200006,%eax
ffffffff8002bbe2:	e9 c8 00 00 00       	jmp    ffffffff8002bcaf <ZydisNodeHandlerOpcode+0x518>
ffffffff8002bbe7:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff8002bbeb:	0f b6 40 20          	movzbl 0x20(%rax),%eax
ffffffff8002bbef:	84 c0                	test   %al,%al
ffffffff8002bbf1:	74 0a                	je     ffffffff8002bbfd <ZydisNodeHandlerOpcode+0x466>
ffffffff8002bbf3:	b8 04 00 20 80       	mov    $0x80200004,%eax
ffffffff8002bbf8:	e9 b2 00 00 00       	jmp    ffffffff8002bcaf <ZydisNodeHandlerOpcode+0x518>
ffffffff8002bbfd:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff8002bc01:	0f b6 40 24          	movzbl 0x24(%rax),%eax
ffffffff8002bc05:	84 c0                	test   %al,%al
ffffffff8002bc07:	74 0a                	je     ffffffff8002bc13 <ZydisNodeHandlerOpcode+0x47c>
ffffffff8002bc09:	b8 05 00 20 80       	mov    $0x80200005,%eax
ffffffff8002bc0e:	e9 9c 00 00 00       	jmp    ffffffff8002bcaf <ZydisNodeHandlerOpcode+0x518>
ffffffff8002bc13:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
ffffffff8002bc17:	0f b6 40 08          	movzbl 0x8(%rax),%eax
ffffffff8002bc1b:	83 e8 01             	sub    $0x1,%eax
ffffffff8002bc1e:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
ffffffff8002bc22:	88 82 f9 00 00 00    	mov    %al,0xf9(%rdx)
ffffffff8002bc28:	66 c7 45 cc 8f 00    	movw   $0x8f,-0x34(%rbp)
ffffffff8002bc2e:	c6 45 ce 00          	movb   $0x0,-0x32(%rbp)
ffffffff8002bc32:	48 8d 45 cc          	lea    -0x34(%rbp),%rax
ffffffff8002bc36:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffff8002bc3a:	48 8b 75 b0          	mov    -0x50(%rbp),%rsi
ffffffff8002bc3e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff8002bc42:	b9 02 00 00 00       	mov    $0x2,%ecx
ffffffff8002bc47:	48 89 c7             	mov    %rax,%rdi
ffffffff8002bc4a:	e8 64 a7 ff ff       	call   ffffffff800263b3 <ZydisInputNextBytes>
ffffffff8002bc4f:	89 45 f4             	mov    %eax,-0xc(%rbp)
ffffffff8002bc52:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff8002bc55:	85 c0                	test   %eax,%eax
ffffffff8002bc57:	79 05                	jns    ffffffff8002bc5e <ZydisNodeHandlerOpcode+0x4c7>
ffffffff8002bc59:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff8002bc5c:	eb 51                	jmp    ffffffff8002bcaf <ZydisNodeHandlerOpcode+0x518>
ffffffff8002bc5e:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
ffffffff8002bc62:	c7 40 0c 02 00 00 00 	movl   $0x2,0xc(%rax)
ffffffff8002bc69:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff8002bc6d:	48 8b 48 08          	mov    0x8(%rax),%rcx
ffffffff8002bc71:	48 8d 45 cc          	lea    -0x34(%rbp),%rax
ffffffff8002bc75:	48 8b 75 b0          	mov    -0x50(%rbp),%rsi
ffffffff8002bc79:	48 89 c2             	mov    %rax,%rdx
ffffffff8002bc7c:	48 89 cf             	mov    %rcx,%rdi
ffffffff8002bc7f:	e8 b0 a8 ff ff       	call   ffffffff80026534 <ZydisDecodeXOP>
ffffffff8002bc84:	89 45 f0             	mov    %eax,-0x10(%rbp)
ffffffff8002bc87:	8b 45 f0             	mov    -0x10(%rbp),%eax
ffffffff8002bc8a:	85 c0                	test   %eax,%eax
ffffffff8002bc8c:	79 05                	jns    ffffffff8002bc93 <ZydisNodeHandlerOpcode+0x4fc>
ffffffff8002bc8e:	8b 45 f0             	mov    -0x10(%rbp),%eax
ffffffff8002bc91:	eb 1c                	jmp    ffffffff8002bcaf <ZydisNodeHandlerOpcode+0x518>
ffffffff8002bc93:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
ffffffff8002bc97:	0f b6 80 f4 00 00 00 	movzbl 0xf4(%rax),%eax
ffffffff8002bc9e:	0f b6 c0             	movzbl %al,%eax
ffffffff8002bca1:	83 c0 01             	add    $0x1,%eax
ffffffff8002bca4:	89 c2                	mov    %eax,%edx
ffffffff8002bca6:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
ffffffff8002bcaa:	89 50 10             	mov    %edx,0x10(%rax)
ffffffff8002bcad:	eb 0b                	jmp    ffffffff8002bcba <ZydisNodeHandlerOpcode+0x523>
ffffffff8002bcaf:	e9 cd 00 00 00       	jmp    ffffffff8002bd81 <ZydisNodeHandlerOpcode+0x5ea>
ffffffff8002bcb4:	90                   	nop
ffffffff8002bcb5:	eb 75                	jmp    ffffffff8002bd2c <ZydisNodeHandlerOpcode+0x595>
ffffffff8002bcb7:	90                   	nop
ffffffff8002bcb8:	eb 72                	jmp    ffffffff8002bd2c <ZydisNodeHandlerOpcode+0x595>
ffffffff8002bcba:	90                   	nop
ffffffff8002bcbb:	eb 6f                	jmp    ffffffff8002bd2c <ZydisNodeHandlerOpcode+0x595>
ffffffff8002bcbd:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
ffffffff8002bcc1:	0f b6 40 14          	movzbl 0x14(%rax),%eax
ffffffff8002bcc5:	0f b6 c0             	movzbl %al,%eax
ffffffff8002bcc8:	83 f8 3a             	cmp    $0x3a,%eax
ffffffff8002bccb:	74 4c                	je     ffffffff8002bd19 <ZydisNodeHandlerOpcode+0x582>
ffffffff8002bccd:	83 f8 3a             	cmp    $0x3a,%eax
ffffffff8002bcd0:	7f 54                	jg     ffffffff8002bd26 <ZydisNodeHandlerOpcode+0x58f>
ffffffff8002bcd2:	83 f8 0f             	cmp    $0xf,%eax
ffffffff8002bcd5:	74 07                	je     ffffffff8002bcde <ZydisNodeHandlerOpcode+0x547>
ffffffff8002bcd7:	83 f8 38             	cmp    $0x38,%eax
ffffffff8002bcda:	74 30                	je     ffffffff8002bd0c <ZydisNodeHandlerOpcode+0x575>
ffffffff8002bcdc:	eb 48                	jmp    ffffffff8002bd26 <ZydisNodeHandlerOpcode+0x58f>
ffffffff8002bcde:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff8002bce2:	0f b6 40 20          	movzbl 0x20(%rax),%eax
ffffffff8002bce6:	84 c0                	test   %al,%al
ffffffff8002bce8:	74 0a                	je     ffffffff8002bcf4 <ZydisNodeHandlerOpcode+0x55d>
ffffffff8002bcea:	b8 04 00 20 80       	mov    $0x80200004,%eax
ffffffff8002bcef:	e9 8d 00 00 00       	jmp    ffffffff8002bd81 <ZydisNodeHandlerOpcode+0x5ea>
ffffffff8002bcf4:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
ffffffff8002bcf8:	c7 40 0c 01 00 00 00 	movl   $0x1,0xc(%rax)
ffffffff8002bcff:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
ffffffff8002bd03:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%rax)
ffffffff8002bd0a:	eb 1b                	jmp    ffffffff8002bd27 <ZydisNodeHandlerOpcode+0x590>
ffffffff8002bd0c:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
ffffffff8002bd10:	c7 40 10 02 00 00 00 	movl   $0x2,0x10(%rax)
ffffffff8002bd17:	eb 0e                	jmp    ffffffff8002bd27 <ZydisNodeHandlerOpcode+0x590>
ffffffff8002bd19:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
ffffffff8002bd1d:	c7 40 10 03 00 00 00 	movl   $0x3,0x10(%rax)
ffffffff8002bd24:	eb 01                	jmp    ffffffff8002bd27 <ZydisNodeHandlerOpcode+0x590>
ffffffff8002bd26:	90                   	nop
ffffffff8002bd27:	eb 03                	jmp    ffffffff8002bd2c <ZydisNodeHandlerOpcode+0x595>
ffffffff8002bd29:	eb fe                	jmp    ffffffff8002bd29 <ZydisNodeHandlerOpcode+0x592>
ffffffff8002bd2b:	90                   	nop
ffffffff8002bd2c:	eb 3b                	jmp    ffffffff8002bd69 <ZydisNodeHandlerOpcode+0x5d2>
ffffffff8002bd2e:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff8002bd32:	66 c7 00 0c 00       	movw   $0xc,(%rax)
ffffffff8002bd37:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff8002bd3c:	eb 43                	jmp    ffffffff8002bd81 <ZydisNodeHandlerOpcode+0x5ea>
ffffffff8002bd3e:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
ffffffff8002bd42:	48 8d 50 14          	lea    0x14(%rax),%rdx
ffffffff8002bd46:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
ffffffff8002bd4a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff8002bd4e:	48 89 ce             	mov    %rcx,%rsi
ffffffff8002bd51:	48 89 c7             	mov    %rax,%rdi
ffffffff8002bd54:	e8 d1 a5 ff ff       	call   ffffffff8002632a <ZydisInputNext>
ffffffff8002bd59:	89 45 d0             	mov    %eax,-0x30(%rbp)
ffffffff8002bd5c:	8b 45 d0             	mov    -0x30(%rbp),%eax
ffffffff8002bd5f:	85 c0                	test   %eax,%eax
ffffffff8002bd61:	79 05                	jns    ffffffff8002bd68 <ZydisNodeHandlerOpcode+0x5d1>
ffffffff8002bd63:	8b 45 d0             	mov    -0x30(%rbp),%eax
ffffffff8002bd66:	eb 19                	jmp    ffffffff8002bd81 <ZydisNodeHandlerOpcode+0x5ea>
ffffffff8002bd68:	90                   	nop
ffffffff8002bd69:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
ffffffff8002bd6d:	0f b6 40 14          	movzbl 0x14(%rax),%eax
ffffffff8002bd71:	0f b6 c0             	movzbl %al,%eax
ffffffff8002bd74:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
ffffffff8002bd78:	66 89 02             	mov    %ax,(%rdx)
ffffffff8002bd7b:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff8002bd80:	90                   	nop
ffffffff8002bd81:	c9                   	leave  
ffffffff8002bd82:	c3                   	ret    

ffffffff8002bd83 <ZydisNodeHandlerMode>:
ffffffff8002bd83:	f3 0f 1e fa          	endbr64 
ffffffff8002bd87:	55                   	push   %rbp
ffffffff8002bd88:	48 89 e5             	mov    %rsp,%rbp
ffffffff8002bd8b:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff8002bd8f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8002bd93:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff8002bd97:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8002bd9b:	8b 00                	mov    (%rax),%eax
ffffffff8002bd9d:	83 f8 05             	cmp    $0x5,%eax
ffffffff8002bda0:	77 44                	ja     ffffffff8002bde6 <ZydisNodeHandlerMode+0x63>
ffffffff8002bda2:	89 c0                	mov    %eax,%eax
ffffffff8002bda4:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
ffffffff8002bdab:	00 
ffffffff8002bdac:	48 8d 05 f5 3a 01 00 	lea    0x13af5(%rip),%rax        # ffffffff8003f8a8 <GPR8_MAPPING.0+0x2b8>
ffffffff8002bdb3:	8b 04 02             	mov    (%rdx,%rax,1),%eax
ffffffff8002bdb6:	48 98                	cltq   
ffffffff8002bdb8:	48 8d 15 e9 3a 01 00 	lea    0x13ae9(%rip),%rdx        # ffffffff8003f8a8 <GPR8_MAPPING.0+0x2b8>
ffffffff8002bdbf:	48 01 d0             	add    %rdx,%rax
ffffffff8002bdc2:	3e ff e0             	notrack jmp *%rax
ffffffff8002bdc5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8002bdc9:	66 c7 00 00 00       	movw   $0x0,(%rax)
ffffffff8002bdce:	eb 18                	jmp    ffffffff8002bde8 <ZydisNodeHandlerMode+0x65>
ffffffff8002bdd0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8002bdd4:	66 c7 00 01 00       	movw   $0x1,(%rax)
ffffffff8002bdd9:	eb 0d                	jmp    ffffffff8002bde8 <ZydisNodeHandlerMode+0x65>
ffffffff8002bddb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8002bddf:	66 c7 00 02 00       	movw   $0x2,(%rax)
ffffffff8002bde4:	eb 02                	jmp    ffffffff8002bde8 <ZydisNodeHandlerMode+0x65>
ffffffff8002bde6:	eb fe                	jmp    ffffffff8002bde6 <ZydisNodeHandlerMode+0x63>
ffffffff8002bde8:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff8002bded:	c9                   	leave  
ffffffff8002bdee:	c3                   	ret    

ffffffff8002bdef <ZydisNodeHandlerModeCompact>:
ffffffff8002bdef:	f3 0f 1e fa          	endbr64 
ffffffff8002bdf3:	55                   	push   %rbp
ffffffff8002bdf4:	48 89 e5             	mov    %rsp,%rbp
ffffffff8002bdf7:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff8002bdfb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8002bdff:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff8002be03:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8002be07:	8b 00                	mov    (%rax),%eax
ffffffff8002be09:	85 c0                	test   %eax,%eax
ffffffff8002be0b:	0f 95 c0             	setne  %al
ffffffff8002be0e:	0f b6 c0             	movzbl %al,%eax
ffffffff8002be11:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff8002be15:	66 89 02             	mov    %ax,(%rdx)
ffffffff8002be18:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff8002be1d:	c9                   	leave  
ffffffff8002be1e:	c3                   	ret    

ffffffff8002be1f <ZydisNodeHandlerModrmMod>:
ffffffff8002be1f:	f3 0f 1e fa          	endbr64 
ffffffff8002be23:	55                   	push   %rbp
ffffffff8002be24:	48 89 e5             	mov    %rsp,%rbp
ffffffff8002be27:	48 83 ec 28          	sub    $0x28,%rsp
ffffffff8002be2b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff8002be2f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
ffffffff8002be33:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
ffffffff8002be37:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8002be3b:	0f b6 80 23 01 00 00 	movzbl 0x123(%rax),%eax
ffffffff8002be42:	84 c0                	test   %al,%al
ffffffff8002be44:	75 4d                	jne    ffffffff8002be93 <ZydisNodeHandlerModrmMod+0x74>
ffffffff8002be46:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8002be4a:	0f b6 40 08          	movzbl 0x8(%rax),%eax
ffffffff8002be4e:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff8002be52:	88 82 23 01 00 00    	mov    %al,0x123(%rdx)
ffffffff8002be58:	48 8d 45 fb          	lea    -0x5(%rbp),%rax
ffffffff8002be5c:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
ffffffff8002be60:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
ffffffff8002be64:	48 89 c2             	mov    %rax,%rdx
ffffffff8002be67:	48 89 cf             	mov    %rcx,%rdi
ffffffff8002be6a:	e8 bb a4 ff ff       	call   ffffffff8002632a <ZydisInputNext>
ffffffff8002be6f:	89 45 fc             	mov    %eax,-0x4(%rbp)
ffffffff8002be72:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8002be75:	85 c0                	test   %eax,%eax
ffffffff8002be77:	79 05                	jns    ffffffff8002be7e <ZydisNodeHandlerModrmMod+0x5f>
ffffffff8002be79:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8002be7c:	eb 30                	jmp    ffffffff8002beae <ZydisNodeHandlerModrmMod+0x8f>
ffffffff8002be7e:	0f b6 45 fb          	movzbl -0x5(%rbp),%eax
ffffffff8002be82:	0f b6 c0             	movzbl %al,%eax
ffffffff8002be85:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff8002be89:	89 c6                	mov    %eax,%esi
ffffffff8002be8b:	48 89 d7             	mov    %rdx,%rdi
ffffffff8002be8e:	e8 41 b1 ff ff       	call   ffffffff80026fd4 <ZydisDecodeModRM>
ffffffff8002be93:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8002be97:	0f b6 80 20 01 00 00 	movzbl 0x120(%rax),%eax
ffffffff8002be9e:	0f b6 c0             	movzbl %al,%eax
ffffffff8002bea1:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff8002bea5:	66 89 02             	mov    %ax,(%rdx)
ffffffff8002bea8:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff8002bead:	90                   	nop
ffffffff8002beae:	c9                   	leave  
ffffffff8002beaf:	c3                   	ret    

ffffffff8002beb0 <ZydisNodeHandlerModrmModCompact>:
ffffffff8002beb0:	f3 0f 1e fa          	endbr64 
ffffffff8002beb4:	55                   	push   %rbp
ffffffff8002beb5:	48 89 e5             	mov    %rsp,%rbp
ffffffff8002beb8:	48 83 ec 28          	sub    $0x28,%rsp
ffffffff8002bebc:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff8002bec0:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
ffffffff8002bec4:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
ffffffff8002bec8:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff8002becc:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
ffffffff8002bed0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002bed4:	48 89 ce             	mov    %rcx,%rsi
ffffffff8002bed7:	48 89 c7             	mov    %rax,%rdi
ffffffff8002beda:	e8 40 ff ff ff       	call   ffffffff8002be1f <ZydisNodeHandlerModrmMod>
ffffffff8002bedf:	89 45 fc             	mov    %eax,-0x4(%rbp)
ffffffff8002bee2:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8002bee5:	85 c0                	test   %eax,%eax
ffffffff8002bee7:	79 05                	jns    ffffffff8002beee <ZydisNodeHandlerModrmModCompact+0x3e>
ffffffff8002bee9:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8002beec:	eb 1d                	jmp    ffffffff8002bf0b <ZydisNodeHandlerModrmModCompact+0x5b>
ffffffff8002beee:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8002bef2:	0f b7 00             	movzwl (%rax),%eax
ffffffff8002bef5:	66 83 f8 03          	cmp    $0x3,%ax
ffffffff8002bef9:	0f 95 c0             	setne  %al
ffffffff8002befc:	0f b6 c0             	movzbl %al,%eax
ffffffff8002beff:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff8002bf03:	66 89 02             	mov    %ax,(%rdx)
ffffffff8002bf06:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff8002bf0b:	c9                   	leave  
ffffffff8002bf0c:	c3                   	ret    

ffffffff8002bf0d <ZydisNodeHandlerModrmReg>:
ffffffff8002bf0d:	f3 0f 1e fa          	endbr64 
ffffffff8002bf11:	55                   	push   %rbp
ffffffff8002bf12:	48 89 e5             	mov    %rsp,%rbp
ffffffff8002bf15:	48 83 ec 28          	sub    $0x28,%rsp
ffffffff8002bf19:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff8002bf1d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
ffffffff8002bf21:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
ffffffff8002bf25:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8002bf29:	0f b6 80 23 01 00 00 	movzbl 0x123(%rax),%eax
ffffffff8002bf30:	84 c0                	test   %al,%al
ffffffff8002bf32:	75 4d                	jne    ffffffff8002bf81 <ZydisNodeHandlerModrmReg+0x74>
ffffffff8002bf34:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8002bf38:	0f b6 40 08          	movzbl 0x8(%rax),%eax
ffffffff8002bf3c:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff8002bf40:	88 82 23 01 00 00    	mov    %al,0x123(%rdx)
ffffffff8002bf46:	48 8d 45 fb          	lea    -0x5(%rbp),%rax
ffffffff8002bf4a:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
ffffffff8002bf4e:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
ffffffff8002bf52:	48 89 c2             	mov    %rax,%rdx
ffffffff8002bf55:	48 89 cf             	mov    %rcx,%rdi
ffffffff8002bf58:	e8 cd a3 ff ff       	call   ffffffff8002632a <ZydisInputNext>
ffffffff8002bf5d:	89 45 fc             	mov    %eax,-0x4(%rbp)
ffffffff8002bf60:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8002bf63:	85 c0                	test   %eax,%eax
ffffffff8002bf65:	79 05                	jns    ffffffff8002bf6c <ZydisNodeHandlerModrmReg+0x5f>
ffffffff8002bf67:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8002bf6a:	eb 30                	jmp    ffffffff8002bf9c <ZydisNodeHandlerModrmReg+0x8f>
ffffffff8002bf6c:	0f b6 45 fb          	movzbl -0x5(%rbp),%eax
ffffffff8002bf70:	0f b6 c0             	movzbl %al,%eax
ffffffff8002bf73:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff8002bf77:	89 c6                	mov    %eax,%esi
ffffffff8002bf79:	48 89 d7             	mov    %rdx,%rdi
ffffffff8002bf7c:	e8 53 b0 ff ff       	call   ffffffff80026fd4 <ZydisDecodeModRM>
ffffffff8002bf81:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8002bf85:	0f b6 80 21 01 00 00 	movzbl 0x121(%rax),%eax
ffffffff8002bf8c:	0f b6 c0             	movzbl %al,%eax
ffffffff8002bf8f:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff8002bf93:	66 89 02             	mov    %ax,(%rdx)
ffffffff8002bf96:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff8002bf9b:	90                   	nop
ffffffff8002bf9c:	c9                   	leave  
ffffffff8002bf9d:	c3                   	ret    

ffffffff8002bf9e <ZydisNodeHandlerModrmRm>:
ffffffff8002bf9e:	f3 0f 1e fa          	endbr64 
ffffffff8002bfa2:	55                   	push   %rbp
ffffffff8002bfa3:	48 89 e5             	mov    %rsp,%rbp
ffffffff8002bfa6:	48 83 ec 28          	sub    $0x28,%rsp
ffffffff8002bfaa:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff8002bfae:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
ffffffff8002bfb2:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
ffffffff8002bfb6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8002bfba:	0f b6 80 23 01 00 00 	movzbl 0x123(%rax),%eax
ffffffff8002bfc1:	84 c0                	test   %al,%al
ffffffff8002bfc3:	75 4d                	jne    ffffffff8002c012 <ZydisNodeHandlerModrmRm+0x74>
ffffffff8002bfc5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8002bfc9:	0f b6 40 08          	movzbl 0x8(%rax),%eax
ffffffff8002bfcd:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff8002bfd1:	88 82 23 01 00 00    	mov    %al,0x123(%rdx)
ffffffff8002bfd7:	48 8d 45 fb          	lea    -0x5(%rbp),%rax
ffffffff8002bfdb:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
ffffffff8002bfdf:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
ffffffff8002bfe3:	48 89 c2             	mov    %rax,%rdx
ffffffff8002bfe6:	48 89 cf             	mov    %rcx,%rdi
ffffffff8002bfe9:	e8 3c a3 ff ff       	call   ffffffff8002632a <ZydisInputNext>
ffffffff8002bfee:	89 45 fc             	mov    %eax,-0x4(%rbp)
ffffffff8002bff1:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8002bff4:	85 c0                	test   %eax,%eax
ffffffff8002bff6:	79 05                	jns    ffffffff8002bffd <ZydisNodeHandlerModrmRm+0x5f>
ffffffff8002bff8:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8002bffb:	eb 30                	jmp    ffffffff8002c02d <ZydisNodeHandlerModrmRm+0x8f>
ffffffff8002bffd:	0f b6 45 fb          	movzbl -0x5(%rbp),%eax
ffffffff8002c001:	0f b6 c0             	movzbl %al,%eax
ffffffff8002c004:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff8002c008:	89 c6                	mov    %eax,%esi
ffffffff8002c00a:	48 89 d7             	mov    %rdx,%rdi
ffffffff8002c00d:	e8 c2 af ff ff       	call   ffffffff80026fd4 <ZydisDecodeModRM>
ffffffff8002c012:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8002c016:	0f b6 80 22 01 00 00 	movzbl 0x122(%rax),%eax
ffffffff8002c01d:	0f b6 c0             	movzbl %al,%eax
ffffffff8002c020:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff8002c024:	66 89 02             	mov    %ax,(%rdx)
ffffffff8002c027:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff8002c02c:	90                   	nop
ffffffff8002c02d:	c9                   	leave  
ffffffff8002c02e:	c3                   	ret    

ffffffff8002c02f <ZydisNodeHandlerMandatoryPrefix>:
ffffffff8002c02f:	f3 0f 1e fa          	endbr64 
ffffffff8002c033:	55                   	push   %rbp
ffffffff8002c034:	48 89 e5             	mov    %rsp,%rbp
ffffffff8002c037:	48 83 ec 18          	sub    $0x18,%rsp
ffffffff8002c03b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8002c03f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff8002c043:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
ffffffff8002c047:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8002c04b:	0f b6 40 24          	movzbl 0x24(%rax),%eax
ffffffff8002c04f:	0f b6 c0             	movzbl %al,%eax
ffffffff8002c052:	3d f3 00 00 00       	cmp    $0xf3,%eax
ffffffff8002c057:	74 62                	je     ffffffff8002c0bb <ZydisNodeHandlerMandatoryPrefix+0x8c>
ffffffff8002c059:	3d f3 00 00 00       	cmp    $0xf3,%eax
ffffffff8002c05e:	0f 8f a9 00 00 00    	jg     ffffffff8002c10d <ZydisNodeHandlerMandatoryPrefix+0xde>
ffffffff8002c064:	83 f8 66             	cmp    $0x66,%eax
ffffffff8002c067:	74 0c                	je     ffffffff8002c075 <ZydisNodeHandlerMandatoryPrefix+0x46>
ffffffff8002c069:	3d f2 00 00 00       	cmp    $0xf2,%eax
ffffffff8002c06e:	74 74                	je     ffffffff8002c0e4 <ZydisNodeHandlerMandatoryPrefix+0xb5>
ffffffff8002c070:	e9 98 00 00 00       	jmp    ffffffff8002c10d <ZydisNodeHandlerMandatoryPrefix+0xde>
ffffffff8002c075:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8002c079:	0f b6 40 2b          	movzbl 0x2b(%rax),%eax
ffffffff8002c07d:	0f b6 d0             	movzbl %al,%edx
ffffffff8002c080:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8002c084:	48 63 d2             	movslq %edx,%rdx
ffffffff8002c087:	48 83 c2 0e          	add    $0xe,%rdx
ffffffff8002c08b:	c7 44 d0 04 02 00 00 	movl   $0x2,0x4(%rax,%rdx,8)
ffffffff8002c092:	00 
ffffffff8002c093:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8002c097:	48 8b 50 20          	mov    0x20(%rax),%rdx
ffffffff8002c09b:	48 b8 ff ff ff ff ff 	movabs $0xfffff7ffffffffff,%rax
ffffffff8002c0a2:	f7 ff ff 
ffffffff8002c0a5:	48 21 c2             	and    %rax,%rdx
ffffffff8002c0a8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8002c0ac:	48 89 50 20          	mov    %rdx,0x20(%rax)
ffffffff8002c0b0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002c0b4:	66 c7 00 02 00       	movw   $0x2,(%rax)
ffffffff8002c0b9:	eb 5c                	jmp    ffffffff8002c117 <ZydisNodeHandlerMandatoryPrefix+0xe8>
ffffffff8002c0bb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8002c0bf:	0f b6 40 2b          	movzbl 0x2b(%rax),%eax
ffffffff8002c0c3:	0f b6 d0             	movzbl %al,%edx
ffffffff8002c0c6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8002c0ca:	48 63 d2             	movslq %edx,%rdx
ffffffff8002c0cd:	48 83 c2 0e          	add    $0xe,%rdx
ffffffff8002c0d1:	c7 44 d0 04 02 00 00 	movl   $0x2,0x4(%rax,%rdx,8)
ffffffff8002c0d8:	00 
ffffffff8002c0d9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002c0dd:	66 c7 00 03 00       	movw   $0x3,(%rax)
ffffffff8002c0e2:	eb 33                	jmp    ffffffff8002c117 <ZydisNodeHandlerMandatoryPrefix+0xe8>
ffffffff8002c0e4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8002c0e8:	0f b6 40 2b          	movzbl 0x2b(%rax),%eax
ffffffff8002c0ec:	0f b6 d0             	movzbl %al,%edx
ffffffff8002c0ef:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8002c0f3:	48 63 d2             	movslq %edx,%rdx
ffffffff8002c0f6:	48 83 c2 0e          	add    $0xe,%rdx
ffffffff8002c0fa:	c7 44 d0 04 02 00 00 	movl   $0x2,0x4(%rax,%rdx,8)
ffffffff8002c101:	00 
ffffffff8002c102:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002c106:	66 c7 00 04 00       	movw   $0x4,(%rax)
ffffffff8002c10b:	eb 0a                	jmp    ffffffff8002c117 <ZydisNodeHandlerMandatoryPrefix+0xe8>
ffffffff8002c10d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002c111:	66 c7 00 01 00       	movw   $0x1,(%rax)
ffffffff8002c116:	90                   	nop
ffffffff8002c117:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff8002c11c:	c9                   	leave  
ffffffff8002c11d:	c3                   	ret    

ffffffff8002c11e <ZydisNodeHandlerOperandSize>:
ffffffff8002c11e:	f3 0f 1e fa          	endbr64 
ffffffff8002c122:	55                   	push   %rbp
ffffffff8002c123:	48 89 e5             	mov    %rsp,%rbp
ffffffff8002c126:	48 83 ec 18          	sub    $0x18,%rsp
ffffffff8002c12a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8002c12e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff8002c132:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
ffffffff8002c136:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8002c13a:	8b 00                	mov    (%rax),%eax
ffffffff8002c13c:	85 c0                	test   %eax,%eax
ffffffff8002c13e:	75 1e                	jne    ffffffff8002c15e <ZydisNodeHandlerOperandSize+0x40>
ffffffff8002c140:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8002c144:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff8002c148:	0f b6 40 0a          	movzbl 0xa(%rax),%eax
ffffffff8002c14c:	84 c0                	test   %al,%al
ffffffff8002c14e:	74 0e                	je     ffffffff8002c15e <ZydisNodeHandlerOperandSize+0x40>
ffffffff8002c150:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002c154:	66 c7 00 02 00       	movw   $0x2,(%rax)
ffffffff8002c159:	e9 9f 00 00 00       	jmp    ffffffff8002c1fd <ZydisNodeHandlerOperandSize+0xdf>
ffffffff8002c15e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8002c162:	48 8b 50 20          	mov    0x20(%rax),%rdx
ffffffff8002c166:	48 b8 00 00 00 00 00 	movabs $0x80000000000,%rax
ffffffff8002c16d:	08 00 00 
ffffffff8002c170:	48 21 d0             	and    %rdx,%rax
ffffffff8002c173:	48 85 c0             	test   %rax,%rax
ffffffff8002c176:	74 1e                	je     ffffffff8002c196 <ZydisNodeHandlerOperandSize+0x78>
ffffffff8002c178:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8002c17c:	0f b6 40 28          	movzbl 0x28(%rax),%eax
ffffffff8002c180:	0f b6 d0             	movzbl %al,%edx
ffffffff8002c183:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8002c187:	48 63 d2             	movslq %edx,%rdx
ffffffff8002c18a:	48 83 c2 0e          	add    $0xe,%rdx
ffffffff8002c18e:	c7 44 d0 04 01 00 00 	movl   $0x1,0x4(%rax,%rdx,8)
ffffffff8002c195:	00 
ffffffff8002c196:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8002c19a:	8b 00                	mov    (%rax),%eax
ffffffff8002c19c:	83 f8 05             	cmp    $0x5,%eax
ffffffff8002c19f:	77 5a                	ja     ffffffff8002c1fb <ZydisNodeHandlerOperandSize+0xdd>
ffffffff8002c1a1:	83 f8 04             	cmp    $0x4,%eax
ffffffff8002c1a4:	73 14                	jae    ffffffff8002c1ba <ZydisNodeHandlerOperandSize+0x9c>
ffffffff8002c1a6:	83 f8 03             	cmp    $0x3,%eax
ffffffff8002c1a9:	74 29                	je     ffffffff8002c1d4 <ZydisNodeHandlerOperandSize+0xb6>
ffffffff8002c1ab:	83 f8 03             	cmp    $0x3,%eax
ffffffff8002c1ae:	77 4b                	ja     ffffffff8002c1fb <ZydisNodeHandlerOperandSize+0xdd>
ffffffff8002c1b0:	83 f8 01             	cmp    $0x1,%eax
ffffffff8002c1b3:	76 1f                	jbe    ffffffff8002c1d4 <ZydisNodeHandlerOperandSize+0xb6>
ffffffff8002c1b5:	83 f8 02             	cmp    $0x2,%eax
ffffffff8002c1b8:	75 41                	jne    ffffffff8002c1fb <ZydisNodeHandlerOperandSize+0xdd>
ffffffff8002c1ba:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8002c1be:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff8002c1c2:	48 c1 e8 2b          	shr    $0x2b,%rax
ffffffff8002c1c6:	83 e0 01             	and    $0x1,%eax
ffffffff8002c1c9:	89 c2                	mov    %eax,%edx
ffffffff8002c1cb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002c1cf:	66 89 10             	mov    %dx,(%rax)
ffffffff8002c1d2:	eb 29                	jmp    ffffffff8002c1fd <ZydisNodeHandlerOperandSize+0xdf>
ffffffff8002c1d4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8002c1d8:	48 8b 50 20          	mov    0x20(%rax),%rdx
ffffffff8002c1dc:	48 b8 00 00 00 00 00 	movabs $0x80000000000,%rax
ffffffff8002c1e3:	08 00 00 
ffffffff8002c1e6:	48 21 d0             	and    %rdx,%rax
ffffffff8002c1e9:	48 85 c0             	test   %rax,%rax
ffffffff8002c1ec:	0f 94 c0             	sete   %al
ffffffff8002c1ef:	0f b6 c0             	movzbl %al,%eax
ffffffff8002c1f2:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff8002c1f6:	66 89 02             	mov    %ax,(%rdx)
ffffffff8002c1f9:	eb 02                	jmp    ffffffff8002c1fd <ZydisNodeHandlerOperandSize+0xdf>
ffffffff8002c1fb:	eb fe                	jmp    ffffffff8002c1fb <ZydisNodeHandlerOperandSize+0xdd>
ffffffff8002c1fd:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff8002c202:	c9                   	leave  
ffffffff8002c203:	c3                   	ret    

ffffffff8002c204 <ZydisNodeHandlerAddressSize>:
ffffffff8002c204:	f3 0f 1e fa          	endbr64 
ffffffff8002c208:	55                   	push   %rbp
ffffffff8002c209:	48 89 e5             	mov    %rsp,%rbp
ffffffff8002c20c:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff8002c210:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8002c214:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff8002c218:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8002c21c:	8b 00                	mov    (%rax),%eax
ffffffff8002c21e:	83 f8 05             	cmp    $0x5,%eax
ffffffff8002c221:	0f 87 93 00 00 00    	ja     ffffffff8002c2ba <ZydisNodeHandlerAddressSize+0xb6>
ffffffff8002c227:	89 c0                	mov    %eax,%eax
ffffffff8002c229:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
ffffffff8002c230:	00 
ffffffff8002c231:	48 8d 05 88 36 01 00 	lea    0x13688(%rip),%rax        # ffffffff8003f8c0 <GPR8_MAPPING.0+0x2d0>
ffffffff8002c238:	8b 04 02             	mov    (%rdx,%rax,1),%eax
ffffffff8002c23b:	48 98                	cltq   
ffffffff8002c23d:	48 8d 15 7c 36 01 00 	lea    0x1367c(%rip),%rdx        # ffffffff8003f8c0 <GPR8_MAPPING.0+0x2d0>
ffffffff8002c244:	48 01 d0             	add    %rdx,%rax
ffffffff8002c247:	3e ff e0             	notrack jmp *%rax
ffffffff8002c24a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8002c24e:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff8002c252:	48 c1 e8 2c          	shr    $0x2c,%rax
ffffffff8002c256:	83 e0 01             	and    $0x1,%eax
ffffffff8002c259:	89 c2                	mov    %eax,%edx
ffffffff8002c25b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8002c25f:	66 89 10             	mov    %dx,(%rax)
ffffffff8002c262:	eb 58                	jmp    ffffffff8002c2bc <ZydisNodeHandlerAddressSize+0xb8>
ffffffff8002c264:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8002c268:	48 8b 50 20          	mov    0x20(%rax),%rdx
ffffffff8002c26c:	48 b8 00 00 00 00 00 	movabs $0x100000000000,%rax
ffffffff8002c273:	10 00 00 
ffffffff8002c276:	48 21 d0             	and    %rdx,%rax
ffffffff8002c279:	48 85 c0             	test   %rax,%rax
ffffffff8002c27c:	0f 94 c0             	sete   %al
ffffffff8002c27f:	0f b6 c0             	movzbl %al,%eax
ffffffff8002c282:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff8002c286:	66 89 02             	mov    %ax,(%rdx)
ffffffff8002c289:	eb 31                	jmp    ffffffff8002c2bc <ZydisNodeHandlerAddressSize+0xb8>
ffffffff8002c28b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8002c28f:	48 8b 50 20          	mov    0x20(%rax),%rdx
ffffffff8002c293:	48 b8 00 00 00 00 00 	movabs $0x100000000000,%rax
ffffffff8002c29a:	10 00 00 
ffffffff8002c29d:	48 21 d0             	and    %rdx,%rax
ffffffff8002c2a0:	48 85 c0             	test   %rax,%rax
ffffffff8002c2a3:	74 07                	je     ffffffff8002c2ac <ZydisNodeHandlerAddressSize+0xa8>
ffffffff8002c2a5:	ba 01 00 00 00       	mov    $0x1,%edx
ffffffff8002c2aa:	eb 05                	jmp    ffffffff8002c2b1 <ZydisNodeHandlerAddressSize+0xad>
ffffffff8002c2ac:	ba 02 00 00 00       	mov    $0x2,%edx
ffffffff8002c2b1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8002c2b5:	66 89 10             	mov    %dx,(%rax)
ffffffff8002c2b8:	eb 02                	jmp    ffffffff8002c2bc <ZydisNodeHandlerAddressSize+0xb8>
ffffffff8002c2ba:	eb fe                	jmp    ffffffff8002c2ba <ZydisNodeHandlerAddressSize+0xb6>
ffffffff8002c2bc:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff8002c2c1:	c9                   	leave  
ffffffff8002c2c2:	c3                   	ret    

ffffffff8002c2c3 <ZydisNodeHandlerVectorLength>:
ffffffff8002c2c3:	f3 0f 1e fa          	endbr64 
ffffffff8002c2c7:	55                   	push   %rbp
ffffffff8002c2c8:	48 89 e5             	mov    %rsp,%rbp
ffffffff8002c2cb:	48 83 ec 18          	sub    $0x18,%rsp
ffffffff8002c2cf:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8002c2d3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff8002c2d7:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
ffffffff8002c2db:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8002c2df:	8b 40 0c             	mov    0xc(%rax),%eax
ffffffff8002c2e2:	83 f8 05             	cmp    $0x5,%eax
ffffffff8002c2e5:	74 1b                	je     ffffffff8002c302 <ZydisNodeHandlerVectorLength+0x3f>
ffffffff8002c2e7:	83 f8 05             	cmp    $0x5,%eax
ffffffff8002c2ea:	77 14                	ja     ffffffff8002c300 <ZydisNodeHandlerVectorLength+0x3d>
ffffffff8002c2ec:	83 f8 04             	cmp    $0x4,%eax
ffffffff8002c2ef:	74 14                	je     ffffffff8002c305 <ZydisNodeHandlerVectorLength+0x42>
ffffffff8002c2f1:	83 f8 04             	cmp    $0x4,%eax
ffffffff8002c2f4:	77 0a                	ja     ffffffff8002c300 <ZydisNodeHandlerVectorLength+0x3d>
ffffffff8002c2f6:	83 f8 02             	cmp    $0x2,%eax
ffffffff8002c2f9:	74 0d                	je     ffffffff8002c308 <ZydisNodeHandlerVectorLength+0x45>
ffffffff8002c2fb:	83 f8 03             	cmp    $0x3,%eax
ffffffff8002c2fe:	74 0b                	je     ffffffff8002c30b <ZydisNodeHandlerVectorLength+0x48>
ffffffff8002c300:	eb fe                	jmp    ffffffff8002c300 <ZydisNodeHandlerVectorLength+0x3d>
ffffffff8002c302:	90                   	nop
ffffffff8002c303:	eb 07                	jmp    ffffffff8002c30c <ZydisNodeHandlerVectorLength+0x49>
ffffffff8002c305:	90                   	nop
ffffffff8002c306:	eb 04                	jmp    ffffffff8002c30c <ZydisNodeHandlerVectorLength+0x49>
ffffffff8002c308:	90                   	nop
ffffffff8002c309:	eb 01                	jmp    ffffffff8002c30c <ZydisNodeHandlerVectorLength+0x49>
ffffffff8002c30b:	90                   	nop
ffffffff8002c30c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8002c310:	0f b6 40 0f          	movzbl 0xf(%rax),%eax
ffffffff8002c314:	0f b6 c0             	movzbl %al,%eax
ffffffff8002c317:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff8002c31b:	66 89 02             	mov    %ax,(%rdx)
ffffffff8002c31e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002c322:	0f b7 00             	movzwl (%rax),%eax
ffffffff8002c325:	66 83 f8 03          	cmp    $0x3,%ax
ffffffff8002c329:	75 07                	jne    ffffffff8002c332 <ZydisNodeHandlerVectorLength+0x6f>
ffffffff8002c32b:	b8 01 00 20 80       	mov    $0x80200001,%eax
ffffffff8002c330:	eb 05                	jmp    ffffffff8002c337 <ZydisNodeHandlerVectorLength+0x74>
ffffffff8002c332:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff8002c337:	c9                   	leave  
ffffffff8002c338:	c3                   	ret    

ffffffff8002c339 <ZydisNodeHandlerRexW>:
ffffffff8002c339:	f3 0f 1e fa          	endbr64 
ffffffff8002c33d:	55                   	push   %rbp
ffffffff8002c33e:	48 89 e5             	mov    %rsp,%rbp
ffffffff8002c341:	48 83 ec 18          	sub    $0x18,%rsp
ffffffff8002c345:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8002c349:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff8002c34d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
ffffffff8002c351:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8002c355:	8b 40 0c             	mov    0xc(%rax),%eax
ffffffff8002c358:	83 f8 05             	cmp    $0x5,%eax
ffffffff8002c35b:	77 23                	ja     ffffffff8002c380 <ZydisNodeHandlerRexW+0x47>
ffffffff8002c35d:	89 c0                	mov    %eax,%eax
ffffffff8002c35f:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
ffffffff8002c366:	00 
ffffffff8002c367:	48 8d 05 6a 35 01 00 	lea    0x1356a(%rip),%rax        # ffffffff8003f8d8 <GPR8_MAPPING.0+0x2e8>
ffffffff8002c36e:	8b 04 02             	mov    (%rdx,%rax,1),%eax
ffffffff8002c371:	48 98                	cltq   
ffffffff8002c373:	48 8d 15 5e 35 01 00 	lea    0x1355e(%rip),%rdx        # ffffffff8003f8d8 <GPR8_MAPPING.0+0x2e8>
ffffffff8002c37a:	48 01 d0             	add    %rdx,%rax
ffffffff8002c37d:	3e ff e0             	notrack jmp *%rax
ffffffff8002c380:	eb fe                	jmp    ffffffff8002c380 <ZydisNodeHandlerRexW+0x47>
ffffffff8002c382:	90                   	nop
ffffffff8002c383:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8002c387:	0f b6 40 0a          	movzbl 0xa(%rax),%eax
ffffffff8002c38b:	0f b6 c0             	movzbl %al,%eax
ffffffff8002c38e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff8002c392:	66 89 02             	mov    %ax,(%rdx)
ffffffff8002c395:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff8002c39a:	c9                   	leave  
ffffffff8002c39b:	c3                   	ret    

ffffffff8002c39c <ZydisNodeHandlerRexB>:
ffffffff8002c39c:	f3 0f 1e fa          	endbr64 
ffffffff8002c3a0:	55                   	push   %rbp
ffffffff8002c3a1:	48 89 e5             	mov    %rsp,%rbp
ffffffff8002c3a4:	48 83 ec 18          	sub    $0x18,%rsp
ffffffff8002c3a8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8002c3ac:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff8002c3b0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
ffffffff8002c3b4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8002c3b8:	8b 40 0c             	mov    0xc(%rax),%eax
ffffffff8002c3bb:	83 f8 05             	cmp    $0x5,%eax
ffffffff8002c3be:	77 23                	ja     ffffffff8002c3e3 <ZydisNodeHandlerRexB+0x47>
ffffffff8002c3c0:	89 c0                	mov    %eax,%eax
ffffffff8002c3c2:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
ffffffff8002c3c9:	00 
ffffffff8002c3ca:	48 8d 05 1f 35 01 00 	lea    0x1351f(%rip),%rax        # ffffffff8003f8f0 <GPR8_MAPPING.0+0x300>
ffffffff8002c3d1:	8b 04 02             	mov    (%rdx,%rax,1),%eax
ffffffff8002c3d4:	48 98                	cltq   
ffffffff8002c3d6:	48 8d 15 13 35 01 00 	lea    0x13513(%rip),%rdx        # ffffffff8003f8f0 <GPR8_MAPPING.0+0x300>
ffffffff8002c3dd:	48 01 d0             	add    %rdx,%rax
ffffffff8002c3e0:	3e ff e0             	notrack jmp *%rax
ffffffff8002c3e3:	eb fe                	jmp    ffffffff8002c3e3 <ZydisNodeHandlerRexB+0x47>
ffffffff8002c3e5:	90                   	nop
ffffffff8002c3e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8002c3ea:	0f b6 40 0d          	movzbl 0xd(%rax),%eax
ffffffff8002c3ee:	0f b6 c0             	movzbl %al,%eax
ffffffff8002c3f1:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff8002c3f5:	66 89 02             	mov    %ax,(%rdx)
ffffffff8002c3f8:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff8002c3fd:	c9                   	leave  
ffffffff8002c3fe:	c3                   	ret    

ffffffff8002c3ff <ZydisNodeHandlerEvexB>:
ffffffff8002c3ff:	f3 0f 1e fa          	endbr64 
ffffffff8002c403:	55                   	push   %rbp
ffffffff8002c404:	48 89 e5             	mov    %rsp,%rbp
ffffffff8002c407:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff8002c40b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8002c40f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff8002c413:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8002c417:	0f b6 80 0f 01 00 00 	movzbl 0x10f(%rax),%eax
ffffffff8002c41e:	0f b6 c0             	movzbl %al,%eax
ffffffff8002c421:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff8002c425:	66 89 02             	mov    %ax,(%rdx)
ffffffff8002c428:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff8002c42d:	c9                   	leave  
ffffffff8002c42e:	c3                   	ret    

ffffffff8002c42f <ZydisNodeHandlerMvexE>:
ffffffff8002c42f:	f3 0f 1e fa          	endbr64 
ffffffff8002c433:	55                   	push   %rbp
ffffffff8002c434:	48 89 e5             	mov    %rsp,%rbp
ffffffff8002c437:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff8002c43b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8002c43f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff8002c443:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8002c447:	0f b6 80 1b 01 00 00 	movzbl 0x11b(%rax),%eax
ffffffff8002c44e:	0f b6 c0             	movzbl %al,%eax
ffffffff8002c451:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff8002c455:	66 89 02             	mov    %ax,(%rdx)
ffffffff8002c458:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff8002c45d:	c9                   	leave  
ffffffff8002c45e:	c3                   	ret    

ffffffff8002c45f <ZydisPopulateRegisterIds>:
ffffffff8002c45f:	f3 0f 1e fa          	endbr64 
ffffffff8002c463:	55                   	push   %rbp
ffffffff8002c464:	48 89 e5             	mov    %rsp,%rbp
ffffffff8002c467:	48 83 ec 30          	sub    $0x30,%rsp
ffffffff8002c46b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff8002c46f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
ffffffff8002c473:	89 c8                	mov    %ecx,%eax
ffffffff8002c475:	44 89 c1             	mov    %r8d,%ecx
ffffffff8002c478:	88 55 dc             	mov    %dl,-0x24(%rbp)
ffffffff8002c47b:	88 45 d8             	mov    %al,-0x28(%rbp)
ffffffff8002c47e:	89 c8                	mov    %ecx,%eax
ffffffff8002c480:	88 45 d4             	mov    %al,-0x2c(%rbp)
ffffffff8002c483:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8002c487:	8b 00                	mov    (%rax),%eax
ffffffff8002c489:	85 c0                	test   %eax,%eax
ffffffff8002c48b:	0f 94 c0             	sete   %al
ffffffff8002c48e:	88 45 f9             	mov    %al,-0x7(%rbp)
ffffffff8002c491:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002c495:	0f b6 40 14          	movzbl 0x14(%rax),%eax
ffffffff8002c499:	88 45 f8             	mov    %al,-0x8(%rbp)
ffffffff8002c49c:	80 7d f8 00          	cmpb   $0x0,-0x8(%rbp)
ffffffff8002c4a0:	75 16                	jne    ffffffff8002c4b8 <ZydisPopulateRegisterIds+0x59>
ffffffff8002c4a2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8002c4a6:	0f b6 80 22 01 00 00 	movzbl 0x122(%rax),%eax
ffffffff8002c4ad:	3c 04                	cmp    $0x4,%al
ffffffff8002c4af:	75 07                	jne    ffffffff8002c4b8 <ZydisPopulateRegisterIds+0x59>
ffffffff8002c4b1:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8002c4b6:	eb 05                	jmp    ffffffff8002c4bd <ZydisPopulateRegisterIds+0x5e>
ffffffff8002c4b8:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8002c4bd:	88 45 f7             	mov    %al,-0x9(%rbp)
ffffffff8002c4c0:	80 7d f7 00          	cmpb   $0x0,-0x9(%rbp)
ffffffff8002c4c4:	74 0d                	je     ffffffff8002c4d3 <ZydisPopulateRegisterIds+0x74>
ffffffff8002c4c6:	80 7d d8 04          	cmpb   $0x4,-0x28(%rbp)
ffffffff8002c4ca:	75 07                	jne    ffffffff8002c4d3 <ZydisPopulateRegisterIds+0x74>
ffffffff8002c4cc:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8002c4d1:	eb 05                	jmp    ffffffff8002c4d8 <ZydisPopulateRegisterIds+0x79>
ffffffff8002c4d3:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8002c4d8:	88 45 f6             	mov    %al,-0xa(%rbp)
ffffffff8002c4db:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8002c4df:	0f b6 80 21 01 00 00 	movzbl 0x121(%rax),%eax
ffffffff8002c4e6:	88 45 ff             	mov    %al,-0x1(%rbp)
ffffffff8002c4e9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8002c4ed:	0f b6 80 22 01 00 00 	movzbl 0x122(%rax),%eax
ffffffff8002c4f4:	88 45 fe             	mov    %al,-0x2(%rbp)
ffffffff8002c4f7:	80 7d f9 00          	cmpb   $0x0,-0x7(%rbp)
ffffffff8002c4fb:	74 0a                	je     ffffffff8002c507 <ZydisPopulateRegisterIds+0xa8>
ffffffff8002c4fd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002c501:	0f b6 40 12          	movzbl 0x12(%rax),%eax
ffffffff8002c505:	eb 0b                	jmp    ffffffff8002c512 <ZydisPopulateRegisterIds+0xb3>
ffffffff8002c507:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002c50b:	0f b6 40 12          	movzbl 0x12(%rax),%eax
ffffffff8002c50f:	83 e0 07             	and    $0x7,%eax
ffffffff8002c512:	88 45 fd             	mov    %al,-0x3(%rbp)
ffffffff8002c515:	80 7d f7 00          	cmpb   $0x0,-0x9(%rbp)
ffffffff8002c519:	74 0d                	je     ffffffff8002c528 <ZydisPopulateRegisterIds+0xc9>
ffffffff8002c51b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8002c51f:	0f b6 80 26 01 00 00 	movzbl 0x126(%rax),%eax
ffffffff8002c526:	eb 0b                	jmp    ffffffff8002c533 <ZydisPopulateRegisterIds+0xd4>
ffffffff8002c528:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8002c52c:	0f b6 80 22 01 00 00 	movzbl 0x122(%rax),%eax
ffffffff8002c533:	88 45 fc             	mov    %al,-0x4(%rbp)
ffffffff8002c536:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8002c53a:	0f b6 80 25 01 00 00 	movzbl 0x125(%rax),%eax
ffffffff8002c541:	88 45 fb             	mov    %al,-0x5(%rbp)
ffffffff8002c544:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8002c548:	8b 00                	mov    (%rax),%eax
ffffffff8002c54a:	85 c0                	test   %eax,%eax
ffffffff8002c54c:	0f 85 33 01 00 00    	jne    ffffffff8002c685 <ZydisPopulateRegisterIds+0x226>
ffffffff8002c552:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8002c556:	8b 40 0c             	mov    0xc(%rax),%eax
ffffffff8002c559:	83 f8 04             	cmp    $0x4,%eax
ffffffff8002c55c:	74 0c                	je     ffffffff8002c56a <ZydisPopulateRegisterIds+0x10b>
ffffffff8002c55e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8002c562:	8b 40 0c             	mov    0xc(%rax),%eax
ffffffff8002c565:	83 f8 05             	cmp    $0x5,%eax
ffffffff8002c568:	75 07                	jne    ffffffff8002c571 <ZydisPopulateRegisterIds+0x112>
ffffffff8002c56a:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8002c56f:	eb 05                	jmp    ffffffff8002c576 <ZydisPopulateRegisterIds+0x117>
ffffffff8002c571:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8002c576:	88 45 f5             	mov    %al,-0xb(%rbp)
ffffffff8002c579:	80 7d f6 00          	cmpb   $0x0,-0xa(%rbp)
ffffffff8002c57d:	74 0a                	je     ffffffff8002c589 <ZydisPopulateRegisterIds+0x12a>
ffffffff8002c57f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002c583:	0f b6 40 11          	movzbl 0x11(%rax),%eax
ffffffff8002c587:	eb 05                	jmp    ffffffff8002c58e <ZydisPopulateRegisterIds+0x12f>
ffffffff8002c589:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8002c58e:	88 45 f4             	mov    %al,-0xc(%rbp)
ffffffff8002c591:	80 7d f5 00          	cmpb   $0x0,-0xb(%rbp)
ffffffff8002c595:	74 0a                	je     ffffffff8002c5a1 <ZydisPopulateRegisterIds+0x142>
ffffffff8002c597:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002c59b:	0f b6 40 0c          	movzbl 0xc(%rax),%eax
ffffffff8002c59f:	eb 05                	jmp    ffffffff8002c5a6 <ZydisPopulateRegisterIds+0x147>
ffffffff8002c5a1:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8002c5a6:	88 45 f3             	mov    %al,-0xd(%rbp)
ffffffff8002c5a9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002c5ad:	0f b6 40 10          	movzbl 0x10(%rax),%eax
ffffffff8002c5b1:	0f b6 c0             	movzbl %al,%eax
ffffffff8002c5b4:	c1 e0 04             	shl    $0x4,%eax
ffffffff8002c5b7:	89 c2                	mov    %eax,%edx
ffffffff8002c5b9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002c5bd:	0f b6 40 0b          	movzbl 0xb(%rax),%eax
ffffffff8002c5c1:	0f b6 c0             	movzbl %al,%eax
ffffffff8002c5c4:	c1 e0 03             	shl    $0x3,%eax
ffffffff8002c5c7:	09 c2                	or     %eax,%edx
ffffffff8002c5c9:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
ffffffff8002c5cd:	09 d0                	or     %edx,%eax
ffffffff8002c5cf:	88 45 ff             	mov    %al,-0x1(%rbp)
ffffffff8002c5d2:	0f b6 45 f3          	movzbl -0xd(%rbp),%eax
ffffffff8002c5d6:	c1 e0 04             	shl    $0x4,%eax
ffffffff8002c5d9:	89 c2                	mov    %eax,%edx
ffffffff8002c5db:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002c5df:	0f b6 40 0d          	movzbl 0xd(%rax),%eax
ffffffff8002c5e3:	0f b6 c0             	movzbl %al,%eax
ffffffff8002c5e6:	c1 e0 03             	shl    $0x3,%eax
ffffffff8002c5e9:	09 c2                	or     %eax,%edx
ffffffff8002c5eb:	0f b6 45 fe          	movzbl -0x2(%rbp),%eax
ffffffff8002c5ef:	09 d0                	or     %edx,%eax
ffffffff8002c5f1:	88 45 fe             	mov    %al,-0x2(%rbp)
ffffffff8002c5f4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002c5f8:	0f b6 40 11          	movzbl 0x11(%rax),%eax
ffffffff8002c5fc:	0f b6 c0             	movzbl %al,%eax
ffffffff8002c5ff:	c1 e0 04             	shl    $0x4,%eax
ffffffff8002c602:	89 c2                	mov    %eax,%edx
ffffffff8002c604:	0f b6 45 fd          	movzbl -0x3(%rbp),%eax
ffffffff8002c608:	09 d0                	or     %edx,%eax
ffffffff8002c60a:	88 45 fd             	mov    %al,-0x3(%rbp)
ffffffff8002c60d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002c611:	0f b6 40 0d          	movzbl 0xd(%rax),%eax
ffffffff8002c615:	0f b6 c0             	movzbl %al,%eax
ffffffff8002c618:	c1 e0 03             	shl    $0x3,%eax
ffffffff8002c61b:	89 c2                	mov    %eax,%edx
ffffffff8002c61d:	0f b6 45 fc          	movzbl -0x4(%rbp),%eax
ffffffff8002c621:	09 d0                	or     %edx,%eax
ffffffff8002c623:	88 45 fc             	mov    %al,-0x4(%rbp)
ffffffff8002c626:	0f b6 45 f4          	movzbl -0xc(%rbp),%eax
ffffffff8002c62a:	c1 e0 04             	shl    $0x4,%eax
ffffffff8002c62d:	89 c2                	mov    %eax,%edx
ffffffff8002c62f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002c633:	0f b6 40 0c          	movzbl 0xc(%rax),%eax
ffffffff8002c637:	0f b6 c0             	movzbl %al,%eax
ffffffff8002c63a:	c1 e0 03             	shl    $0x3,%eax
ffffffff8002c63d:	09 c2                	or     %eax,%edx
ffffffff8002c63f:	0f b6 45 fb          	movzbl -0x5(%rbp),%eax
ffffffff8002c643:	09 d0                	or     %edx,%eax
ffffffff8002c645:	88 45 fb             	mov    %al,-0x5(%rbp)
ffffffff8002c648:	0f b6 45 dc          	movzbl -0x24(%rbp),%eax
ffffffff8002c64c:	48 98                	cltq   
ffffffff8002c64e:	48 8d 15 43 36 01 00 	lea    0x13643(%rip),%rdx        # ffffffff8003fc98 <mask_reg.5>
ffffffff8002c655:	0f b6 04 10          	movzbl (%rax,%rdx,1),%eax
ffffffff8002c659:	20 45 ff             	and    %al,-0x1(%rbp)
ffffffff8002c65c:	80 7d f8 00          	cmpb   $0x0,-0x8(%rbp)
ffffffff8002c660:	74 15                	je     ffffffff8002c677 <ZydisPopulateRegisterIds+0x218>
ffffffff8002c662:	0f b6 45 d8          	movzbl -0x28(%rbp),%eax
ffffffff8002c666:	48 98                	cltq   
ffffffff8002c668:	48 8d 15 39 36 01 00 	lea    0x13639(%rip),%rdx        # ffffffff8003fca8 <mask_rm.4>
ffffffff8002c66f:	0f b6 04 10          	movzbl (%rax,%rdx,1),%eax
ffffffff8002c673:	89 c2                	mov    %eax,%edx
ffffffff8002c675:	eb 05                	jmp    ffffffff8002c67c <ZydisPopulateRegisterIds+0x21d>
ffffffff8002c677:	ba ff ff ff ff       	mov    $0xffffffff,%edx
ffffffff8002c67c:	0f b6 45 fe          	movzbl -0x2(%rbp),%eax
ffffffff8002c680:	21 d0                	and    %edx,%eax
ffffffff8002c682:	88 45 fe             	mov    %al,-0x2(%rbp)
ffffffff8002c685:	80 7d d4 00          	cmpb   $0x0,-0x2c(%rbp)
ffffffff8002c689:	75 16                	jne    ffffffff8002c6a1 <ZydisPopulateRegisterIds+0x242>
ffffffff8002c68b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002c68f:	0f b6 40 12          	movzbl 0x12(%rax),%eax
ffffffff8002c693:	84 c0                	test   %al,%al
ffffffff8002c695:	74 0a                	je     ffffffff8002c6a1 <ZydisPopulateRegisterIds+0x242>
ffffffff8002c697:	b8 03 00 20 80       	mov    $0x80200003,%eax
ffffffff8002c69c:	e9 74 01 00 00       	jmp    ffffffff8002c815 <ZydisPopulateRegisterIds+0x3b6>
ffffffff8002c6a1:	80 7d d4 00          	cmpb   $0x0,-0x2c(%rbp)
ffffffff8002c6a5:	75 1c                	jne    ffffffff8002c6c3 <ZydisPopulateRegisterIds+0x264>
ffffffff8002c6a7:	80 7d f6 00          	cmpb   $0x0,-0xa(%rbp)
ffffffff8002c6ab:	75 16                	jne    ffffffff8002c6c3 <ZydisPopulateRegisterIds+0x264>
ffffffff8002c6ad:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002c6b1:	0f b6 40 11          	movzbl 0x11(%rax),%eax
ffffffff8002c6b5:	84 c0                	test   %al,%al
ffffffff8002c6b7:	74 0a                	je     ffffffff8002c6c3 <ZydisPopulateRegisterIds+0x264>
ffffffff8002c6b9:	b8 03 00 20 80       	mov    $0x80200003,%eax
ffffffff8002c6be:	e9 52 01 00 00       	jmp    ffffffff8002c815 <ZydisPopulateRegisterIds+0x3b6>
ffffffff8002c6c3:	0f b6 45 f9          	movzbl -0x7(%rbp),%eax
ffffffff8002c6c7:	0f b6 55 dc          	movzbl -0x24(%rbp),%edx
ffffffff8002c6cb:	48 63 ca             	movslq %edx,%rcx
ffffffff8002c6ce:	48 63 d0             	movslq %eax,%rdx
ffffffff8002c6d1:	48 89 d0             	mov    %rdx,%rax
ffffffff8002c6d4:	48 01 c0             	add    %rax,%rax
ffffffff8002c6d7:	48 01 d0             	add    %rdx,%rax
ffffffff8002c6da:	48 c1 e0 02          	shl    $0x2,%rax
ffffffff8002c6de:	48 8d 14 08          	lea    (%rax,%rcx,1),%rdx
ffffffff8002c6e2:	48 8d 05 d7 35 01 00 	lea    0x135d7(%rip),%rax        # ffffffff8003fcc0 <available_regs.3>
ffffffff8002c6e9:	48 01 d0             	add    %rdx,%rax
ffffffff8002c6ec:	0f b6 00             	movzbl (%rax),%eax
ffffffff8002c6ef:	38 45 ff             	cmp    %al,-0x1(%rbp)
ffffffff8002c6f2:	73 68                	jae    ffffffff8002c75c <ZydisPopulateRegisterIds+0x2fd>
ffffffff8002c6f4:	0f b6 45 f9          	movzbl -0x7(%rbp),%eax
ffffffff8002c6f8:	0f b6 55 d4          	movzbl -0x2c(%rbp),%edx
ffffffff8002c6fc:	48 63 ca             	movslq %edx,%rcx
ffffffff8002c6ff:	48 63 d0             	movslq %eax,%rdx
ffffffff8002c702:	48 89 d0             	mov    %rdx,%rax
ffffffff8002c705:	48 01 c0             	add    %rax,%rax
ffffffff8002c708:	48 01 d0             	add    %rdx,%rax
ffffffff8002c70b:	48 c1 e0 02          	shl    $0x2,%rax
ffffffff8002c70f:	48 8d 14 08          	lea    (%rax,%rcx,1),%rdx
ffffffff8002c713:	48 8d 05 a6 35 01 00 	lea    0x135a6(%rip),%rax        # ffffffff8003fcc0 <available_regs.3>
ffffffff8002c71a:	48 01 d0             	add    %rdx,%rax
ffffffff8002c71d:	0f b6 00             	movzbl (%rax),%eax
ffffffff8002c720:	38 45 fd             	cmp    %al,-0x3(%rbp)
ffffffff8002c723:	73 37                	jae    ffffffff8002c75c <ZydisPopulateRegisterIds+0x2fd>
ffffffff8002c725:	80 7d f8 00          	cmpb   $0x0,-0x8(%rbp)
ffffffff8002c729:	74 3b                	je     ffffffff8002c766 <ZydisPopulateRegisterIds+0x307>
ffffffff8002c72b:	0f b6 45 f9          	movzbl -0x7(%rbp),%eax
ffffffff8002c72f:	0f b6 55 d8          	movzbl -0x28(%rbp),%edx
ffffffff8002c733:	48 63 ca             	movslq %edx,%rcx
ffffffff8002c736:	48 63 d0             	movslq %eax,%rdx
ffffffff8002c739:	48 89 d0             	mov    %rdx,%rax
ffffffff8002c73c:	48 01 c0             	add    %rax,%rax
ffffffff8002c73f:	48 01 d0             	add    %rdx,%rax
ffffffff8002c742:	48 c1 e0 02          	shl    $0x2,%rax
ffffffff8002c746:	48 8d 14 08          	lea    (%rax,%rcx,1),%rdx
ffffffff8002c74a:	48 8d 05 6f 35 01 00 	lea    0x1356f(%rip),%rax        # ffffffff8003fcc0 <available_regs.3>
ffffffff8002c751:	48 01 d0             	add    %rdx,%rax
ffffffff8002c754:	0f b6 00             	movzbl (%rax),%eax
ffffffff8002c757:	38 45 fe             	cmp    %al,-0x2(%rbp)
ffffffff8002c75a:	72 0a                	jb     ffffffff8002c766 <ZydisPopulateRegisterIds+0x307>
ffffffff8002c75c:	b8 03 00 20 80       	mov    $0x80200003,%eax
ffffffff8002c761:	e9 af 00 00 00       	jmp    ffffffff8002c815 <ZydisPopulateRegisterIds+0x3b6>
ffffffff8002c766:	c6 45 fa ff          	movb   $0xff,-0x6(%rbp)
ffffffff8002c76a:	80 7d dc 08          	cmpb   $0x8,-0x24(%rbp)
ffffffff8002c76e:	75 07                	jne    ffffffff8002c777 <ZydisPopulateRegisterIds+0x318>
ffffffff8002c770:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
ffffffff8002c774:	88 45 fa             	mov    %al,-0x6(%rbp)
ffffffff8002c777:	80 7d f8 00          	cmpb   $0x0,-0x8(%rbp)
ffffffff8002c77b:	74 0d                	je     ffffffff8002c78a <ZydisPopulateRegisterIds+0x32b>
ffffffff8002c77d:	80 7d d8 08          	cmpb   $0x8,-0x28(%rbp)
ffffffff8002c781:	75 07                	jne    ffffffff8002c78a <ZydisPopulateRegisterIds+0x32b>
ffffffff8002c783:	0f b6 45 fe          	movzbl -0x2(%rbp),%eax
ffffffff8002c787:	88 45 fa             	mov    %al,-0x6(%rbp)
ffffffff8002c78a:	80 7d fa 00          	cmpb   $0x0,-0x6(%rbp)
ffffffff8002c78e:	78 1c                	js     ffffffff8002c7ac <ZydisPopulateRegisterIds+0x34d>
ffffffff8002c790:	0f be 45 fa          	movsbl -0x6(%rbp),%eax
ffffffff8002c794:	48 98                	cltq   
ffffffff8002c796:	48 8d 15 43 35 01 00 	lea    0x13543(%rip),%rdx        # ffffffff8003fce0 <lookup.2>
ffffffff8002c79d:	0f b6 04 10          	movzbl (%rax,%rdx,1),%eax
ffffffff8002c7a1:	84 c0                	test   %al,%al
ffffffff8002c7a3:	75 07                	jne    ffffffff8002c7ac <ZydisPopulateRegisterIds+0x34d>
ffffffff8002c7a5:	b8 03 00 20 80       	mov    $0x80200003,%eax
ffffffff8002c7aa:	eb 69                	jmp    ffffffff8002c815 <ZydisPopulateRegisterIds+0x3b6>
ffffffff8002c7ac:	80 7d dc 00          	cmpb   $0x0,-0x24(%rbp)
ffffffff8002c7b0:	74 06                	je     ffffffff8002c7b8 <ZydisPopulateRegisterIds+0x359>
ffffffff8002c7b2:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
ffffffff8002c7b6:	eb 05                	jmp    ffffffff8002c7bd <ZydisPopulateRegisterIds+0x35e>
ffffffff8002c7b8:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
ffffffff8002c7bd:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff8002c7c1:	88 42 15             	mov    %al,0x15(%rdx)
ffffffff8002c7c4:	80 7d d8 00          	cmpb   $0x0,-0x28(%rbp)
ffffffff8002c7c8:	74 0c                	je     ffffffff8002c7d6 <ZydisPopulateRegisterIds+0x377>
ffffffff8002c7ca:	80 7d f8 00          	cmpb   $0x0,-0x8(%rbp)
ffffffff8002c7ce:	74 06                	je     ffffffff8002c7d6 <ZydisPopulateRegisterIds+0x377>
ffffffff8002c7d0:	0f b6 45 fe          	movzbl -0x2(%rbp),%eax
ffffffff8002c7d4:	eb 05                	jmp    ffffffff8002c7db <ZydisPopulateRegisterIds+0x37c>
ffffffff8002c7d6:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
ffffffff8002c7db:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff8002c7df:	88 42 16             	mov    %al,0x16(%rdx)
ffffffff8002c7e2:	80 7d d4 00          	cmpb   $0x0,-0x2c(%rbp)
ffffffff8002c7e6:	74 06                	je     ffffffff8002c7ee <ZydisPopulateRegisterIds+0x38f>
ffffffff8002c7e8:	0f b6 45 fd          	movzbl -0x3(%rbp),%eax
ffffffff8002c7ec:	eb 05                	jmp    ffffffff8002c7f3 <ZydisPopulateRegisterIds+0x394>
ffffffff8002c7ee:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
ffffffff8002c7f3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff8002c7f7:	88 42 17             	mov    %al,0x17(%rdx)
ffffffff8002c7fa:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff8002c7fe:	0f b6 45 fc          	movzbl -0x4(%rbp),%eax
ffffffff8002c802:	88 42 18             	mov    %al,0x18(%rdx)
ffffffff8002c805:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff8002c809:	0f b6 45 fb          	movzbl -0x5(%rbp),%eax
ffffffff8002c80d:	88 42 19             	mov    %al,0x19(%rdx)
ffffffff8002c810:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff8002c815:	c9                   	leave  
ffffffff8002c816:	c3                   	ret    

ffffffff8002c817 <ZydisCheckErrorConditions>:
ffffffff8002c817:	f3 0f 1e fa          	endbr64 
ffffffff8002c81b:	55                   	push   %rbp
ffffffff8002c81c:	48 89 e5             	mov    %rsp,%rbp
ffffffff8002c81f:	48 83 ec 78          	sub    $0x78,%rsp
ffffffff8002c823:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
ffffffff8002c827:	48 89 75 90          	mov    %rsi,-0x70(%rbp)
ffffffff8002c82b:	48 89 55 88          	mov    %rdx,-0x78(%rbp)
ffffffff8002c82f:	48 8b 45 88          	mov    -0x78(%rbp),%rax
ffffffff8002c833:	0f b6 50 09          	movzbl 0x9(%rax),%edx
ffffffff8002c837:	c0 ea 05             	shr    $0x5,%dl
ffffffff8002c83a:	0f b6 d2             	movzbl %dl,%edx
ffffffff8002c83d:	0f b6 40 0a          	movzbl 0xa(%rax),%eax
ffffffff8002c841:	83 e0 03             	and    $0x3,%eax
ffffffff8002c844:	48 c1 e0 03          	shl    $0x3,%rax
ffffffff8002c848:	48 09 d0             	or     %rdx,%rax
ffffffff8002c84b:	88 45 ff             	mov    %al,-0x1(%rbp)
ffffffff8002c84e:	48 8b 45 88          	mov    -0x78(%rbp),%rax
ffffffff8002c852:	0f b6 40 0a          	movzbl 0xa(%rax),%eax
ffffffff8002c856:	c0 e8 02             	shr    $0x2,%al
ffffffff8002c859:	83 e0 1f             	and    $0x1f,%eax
ffffffff8002c85c:	88 45 fe             	mov    %al,-0x2(%rbp)
ffffffff8002c85f:	c6 45 fd 00          	movb   $0x0,-0x3(%rbp)
ffffffff8002c863:	c6 45 fc 00          	movb   $0x0,-0x4(%rbp)
ffffffff8002c867:	c6 45 fb 00          	movb   $0x0,-0x5(%rbp)
ffffffff8002c86b:	c6 45 fa 00          	movb   $0x0,-0x6(%rbp)
ffffffff8002c86f:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
ffffffff8002c876:	48 8b 45 90          	mov    -0x70(%rbp),%rax
ffffffff8002c87a:	8b 40 0c             	mov    0xc(%rax),%eax
ffffffff8002c87d:	83 f8 05             	cmp    $0x5,%eax
ffffffff8002c880:	0f 87 54 02 00 00    	ja     ffffffff8002cada <ZydisCheckErrorConditions+0x2c3>
ffffffff8002c886:	89 c0                	mov    %eax,%eax
ffffffff8002c888:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
ffffffff8002c88f:	00 
ffffffff8002c890:	48 8d 05 71 30 01 00 	lea    0x13071(%rip),%rax        # ffffffff8003f908 <GPR8_MAPPING.0+0x318>
ffffffff8002c897:	8b 04 02             	mov    (%rdx,%rax,1),%eax
ffffffff8002c89a:	48 98                	cltq   
ffffffff8002c89c:	48 8d 15 65 30 01 00 	lea    0x13065(%rip),%rdx        # ffffffff8003f908 <GPR8_MAPPING.0+0x318>
ffffffff8002c8a3:	48 01 d0             	add    %rdx,%rax
ffffffff8002c8a6:	3e ff e0             	notrack jmp *%rax
ffffffff8002c8a9:	48 8b 45 88          	mov    -0x78(%rbp),%rax
ffffffff8002c8ad:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
ffffffff8002c8b1:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002c8b5:	0f b6 40 05          	movzbl 0x5(%rax),%eax
ffffffff8002c8b9:	83 e0 20             	and    $0x20,%eax
ffffffff8002c8bc:	84 c0                	test   %al,%al
ffffffff8002c8be:	74 15                	je     ffffffff8002c8d5 <ZydisCheckErrorConditions+0xbe>
ffffffff8002c8c0:	48 8b 45 90          	mov    -0x70(%rbp),%rax
ffffffff8002c8c4:	8b 00                	mov    (%rax),%eax
ffffffff8002c8c6:	83 f8 05             	cmp    $0x5,%eax
ffffffff8002c8c9:	75 0a                	jne    ffffffff8002c8d5 <ZydisCheckErrorConditions+0xbe>
ffffffff8002c8cb:	b8 01 00 20 80       	mov    $0x80200001,%eax
ffffffff8002c8d0:	e9 d1 04 00 00       	jmp    ffffffff8002cda6 <ZydisCheckErrorConditions+0x58f>
ffffffff8002c8d5:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002c8d9:	0f b6 40 05          	movzbl 0x5(%rax),%eax
ffffffff8002c8dd:	83 e0 40             	and    $0x40,%eax
ffffffff8002c8e0:	84 c0                	test   %al,%al
ffffffff8002c8e2:	74 20                	je     ffffffff8002c904 <ZydisCheckErrorConditions+0xed>
ffffffff8002c8e4:	48 8b 45 90          	mov    -0x70(%rbp),%rax
ffffffff8002c8e8:	8b 00                	mov    (%rax),%eax
ffffffff8002c8ea:	83 f8 02             	cmp    $0x2,%eax
ffffffff8002c8ed:	74 0b                	je     ffffffff8002c8fa <ZydisCheckErrorConditions+0xe3>
ffffffff8002c8ef:	48 8b 45 90          	mov    -0x70(%rbp),%rax
ffffffff8002c8f3:	8b 00                	mov    (%rax),%eax
ffffffff8002c8f5:	83 f8 01             	cmp    $0x1,%eax
ffffffff8002c8f8:	75 0a                	jne    ffffffff8002c904 <ZydisCheckErrorConditions+0xed>
ffffffff8002c8fa:	b8 01 00 20 80       	mov    $0x80200001,%eax
ffffffff8002c8ff:	e9 a2 04 00 00       	jmp    ffffffff8002cda6 <ZydisCheckErrorConditions+0x58f>
ffffffff8002c904:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff8002c908:	0f b6 40 20          	movzbl 0x20(%rax),%eax
ffffffff8002c90c:	84 c0                	test   %al,%al
ffffffff8002c90e:	0f 84 cb 01 00 00    	je     ffffffff8002cadf <ZydisCheckErrorConditions+0x2c8>
ffffffff8002c914:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002c918:	0f b6 40 0b          	movzbl 0xb(%rax),%eax
ffffffff8002c91c:	83 e0 80             	and    $0xffffff80,%eax
ffffffff8002c91f:	84 c0                	test   %al,%al
ffffffff8002c921:	0f 85 b8 01 00 00    	jne    ffffffff8002cadf <ZydisCheckErrorConditions+0x2c8>
ffffffff8002c927:	b8 04 00 20 80       	mov    $0x80200004,%eax
ffffffff8002c92c:	e9 75 04 00 00       	jmp    ffffffff8002cda6 <ZydisCheckErrorConditions+0x58f>
ffffffff8002c931:	48 8b 45 88          	mov    -0x78(%rbp),%rax
ffffffff8002c935:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
ffffffff8002c939:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8002c93d:	0f b6 50 0b          	movzbl 0xb(%rax),%edx
ffffffff8002c941:	c0 ea 06             	shr    $0x6,%dl
ffffffff8002c944:	0f b6 d2             	movzbl %dl,%edx
ffffffff8002c947:	0f b6 40 0c          	movzbl 0xc(%rax),%eax
ffffffff8002c94b:	83 e0 07             	and    $0x7,%eax
ffffffff8002c94e:	48 c1 e0 02          	shl    $0x2,%rax
ffffffff8002c952:	48 09 d0             	or     %rdx,%rax
ffffffff8002c955:	88 45 fd             	mov    %al,-0x3(%rbp)
ffffffff8002c958:	e9 89 01 00 00       	jmp    ffffffff8002cae6 <ZydisCheckErrorConditions+0x2cf>
ffffffff8002c95d:	48 8b 45 88          	mov    -0x78(%rbp),%rax
ffffffff8002c961:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
ffffffff8002c965:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8002c969:	0f b6 50 0b          	movzbl 0xb(%rax),%edx
ffffffff8002c96d:	c0 ea 06             	shr    $0x6,%dl
ffffffff8002c970:	0f b6 d2             	movzbl %dl,%edx
ffffffff8002c973:	0f b6 40 0c          	movzbl 0xc(%rax),%eax
ffffffff8002c977:	83 e0 07             	and    $0x7,%eax
ffffffff8002c97a:	48 c1 e0 02          	shl    $0x2,%rax
ffffffff8002c97e:	48 09 d0             	or     %rdx,%rax
ffffffff8002c981:	88 45 fd             	mov    %al,-0x3(%rbp)
ffffffff8002c984:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8002c988:	0f b6 40 0c          	movzbl 0xc(%rax),%eax
ffffffff8002c98c:	c0 e8 03             	shr    $0x3,%al
ffffffff8002c98f:	83 e0 01             	and    $0x1,%eax
ffffffff8002c992:	88 45 fc             	mov    %al,-0x4(%rbp)
ffffffff8002c995:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8002c999:	0f b6 40 0c          	movzbl 0xc(%rax),%eax
ffffffff8002c99d:	c0 e8 05             	shr    $0x5,%al
ffffffff8002c9a0:	83 e0 01             	and    $0x1,%eax
ffffffff8002c9a3:	88 45 fa             	mov    %al,-0x6(%rbp)
ffffffff8002c9a6:	e9 3b 01 00 00       	jmp    ffffffff8002cae6 <ZydisCheckErrorConditions+0x2cf>
ffffffff8002c9ab:	48 8b 45 88          	mov    -0x78(%rbp),%rax
ffffffff8002c9af:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
ffffffff8002c9b3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8002c9b7:	0f b6 50 0b          	movzbl 0xb(%rax),%edx
ffffffff8002c9bb:	c0 ea 06             	shr    $0x6,%dl
ffffffff8002c9be:	0f b6 d2             	movzbl %dl,%edx
ffffffff8002c9c1:	0f b6 40 0c          	movzbl 0xc(%rax),%eax
ffffffff8002c9c5:	83 e0 07             	and    $0x7,%eax
ffffffff8002c9c8:	48 c1 e0 02          	shl    $0x2,%rax
ffffffff8002c9cc:	48 09 d0             	or     %rdx,%rax
ffffffff8002c9cf:	88 45 fd             	mov    %al,-0x3(%rbp)
ffffffff8002c9d2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8002c9d6:	0f b6 40 0c          	movzbl 0xc(%rax),%eax
ffffffff8002c9da:	c0 e8 03             	shr    $0x3,%al
ffffffff8002c9dd:	83 e0 01             	and    $0x1,%eax
ffffffff8002c9e0:	88 45 fc             	mov    %al,-0x4(%rbp)
ffffffff8002c9e3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8002c9e7:	0f b6 40 0c          	movzbl 0xc(%rax),%eax
ffffffff8002c9eb:	c0 e8 04             	shr    $0x4,%al
ffffffff8002c9ee:	83 e0 01             	and    $0x1,%eax
ffffffff8002c9f1:	88 45 fb             	mov    %al,-0x5(%rbp)
ffffffff8002c9f4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8002c9f8:	0f b6 40 0e          	movzbl 0xe(%rax),%eax
ffffffff8002c9fc:	c0 e8 02             	shr    $0x2,%al
ffffffff8002c9ff:	83 e0 03             	and    $0x3,%eax
ffffffff8002ca02:	0f b6 c0             	movzbl %al,%eax
ffffffff8002ca05:	89 45 f4             	mov    %eax,-0xc(%rbp)
ffffffff8002ca08:	48 8b 45 90          	mov    -0x70(%rbp),%rax
ffffffff8002ca0c:	0f b6 80 0c 01 00 00 	movzbl 0x10c(%rax),%eax
ffffffff8002ca13:	84 c0                	test   %al,%al
ffffffff8002ca15:	0f 84 c7 00 00 00    	je     ffffffff8002cae2 <ZydisCheckErrorConditions+0x2cb>
ffffffff8002ca1b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8002ca1f:	0f b6 40 0e          	movzbl 0xe(%rax),%eax
ffffffff8002ca23:	83 e0 10             	and    $0x10,%eax
ffffffff8002ca26:	84 c0                	test   %al,%al
ffffffff8002ca28:	0f 85 b4 00 00 00    	jne    ffffffff8002cae2 <ZydisCheckErrorConditions+0x2cb>
ffffffff8002ca2e:	b8 0a 00 20 80       	mov    $0x8020000a,%eax
ffffffff8002ca33:	e9 6e 03 00 00       	jmp    ffffffff8002cda6 <ZydisCheckErrorConditions+0x58f>
ffffffff8002ca38:	48 8b 45 88          	mov    -0x78(%rbp),%rax
ffffffff8002ca3c:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff8002ca40:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8002ca44:	0f b6 50 0b          	movzbl 0xb(%rax),%edx
ffffffff8002ca48:	c0 ea 06             	shr    $0x6,%dl
ffffffff8002ca4b:	0f b6 d2             	movzbl %dl,%edx
ffffffff8002ca4e:	0f b6 40 0c          	movzbl 0xc(%rax),%eax
ffffffff8002ca52:	83 e0 07             	and    $0x7,%eax
ffffffff8002ca55:	48 c1 e0 02          	shl    $0x2,%rax
ffffffff8002ca59:	48 09 d0             	or     %rdx,%rax
ffffffff8002ca5c:	88 45 fd             	mov    %al,-0x3(%rbp)
ffffffff8002ca5f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8002ca63:	0f b6 40 0c          	movzbl 0xc(%rax),%eax
ffffffff8002ca67:	c0 e8 03             	shr    $0x3,%al
ffffffff8002ca6a:	83 e0 01             	and    $0x1,%eax
ffffffff8002ca6d:	88 45 fc             	mov    %al,-0x4(%rbp)
ffffffff8002ca70:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8002ca74:	0f b6 40 0d          	movzbl 0xd(%rax),%eax
ffffffff8002ca78:	c0 e8 03             	shr    $0x3,%al
ffffffff8002ca7b:	83 e0 03             	and    $0x3,%eax
ffffffff8002ca7e:	0f b6 c0             	movzbl %al,%eax
ffffffff8002ca81:	89 45 f4             	mov    %eax,-0xc(%rbp)
ffffffff8002ca84:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8002ca88:	0f b6 50 0c          	movzbl 0xc(%rax),%edx
ffffffff8002ca8c:	c0 ea 06             	shr    $0x6,%dl
ffffffff8002ca8f:	0f b6 d2             	movzbl %dl,%edx
ffffffff8002ca92:	0f b6 40 0d          	movzbl 0xd(%rax),%eax
ffffffff8002ca96:	83 e0 07             	and    $0x7,%eax
ffffffff8002ca99:	48 c1 e0 02          	shl    $0x2,%rax
ffffffff8002ca9d:	48 09 d0             	or     %rdx,%rax
ffffffff8002caa0:	0f b6 d0             	movzbl %al,%edx
ffffffff8002caa3:	48 8b 45 90          	mov    -0x70(%rbp),%rax
ffffffff8002caa7:	0f b6 80 1c 01 00 00 	movzbl 0x11c(%rax),%eax
ffffffff8002caae:	0f b6 c0             	movzbl %al,%eax
ffffffff8002cab1:	48 63 c8             	movslq %eax,%rcx
ffffffff8002cab4:	48 63 c2             	movslq %edx,%rax
ffffffff8002cab7:	48 c1 e0 03          	shl    $0x3,%rax
ffffffff8002cabb:	48 8d 14 08          	lea    (%rax,%rcx,1),%rdx
ffffffff8002cabf:	48 8d 05 3a 32 01 00 	lea    0x1323a(%rip),%rax        # ffffffff8003fd00 <lookup.1>
ffffffff8002cac6:	48 01 d0             	add    %rdx,%rax
ffffffff8002cac9:	0f b6 00             	movzbl (%rax),%eax
ffffffff8002cacc:	84 c0                	test   %al,%al
ffffffff8002cace:	75 15                	jne    ffffffff8002cae5 <ZydisCheckErrorConditions+0x2ce>
ffffffff8002cad0:	b8 01 00 20 80       	mov    $0x80200001,%eax
ffffffff8002cad5:	e9 cc 02 00 00       	jmp    ffffffff8002cda6 <ZydisCheckErrorConditions+0x58f>
ffffffff8002cada:	eb fe                	jmp    ffffffff8002cada <ZydisCheckErrorConditions+0x2c3>
ffffffff8002cadc:	90                   	nop
ffffffff8002cadd:	eb 07                	jmp    ffffffff8002cae6 <ZydisCheckErrorConditions+0x2cf>
ffffffff8002cadf:	90                   	nop
ffffffff8002cae0:	eb 04                	jmp    ffffffff8002cae6 <ZydisCheckErrorConditions+0x2cf>
ffffffff8002cae2:	90                   	nop
ffffffff8002cae3:	eb 01                	jmp    ffffffff8002cae6 <ZydisCheckErrorConditions+0x2cf>
ffffffff8002cae5:	90                   	nop
ffffffff8002cae6:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff8002caea:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff8002caee:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
ffffffff8002caf2:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff8002caf6:	0f b6 40 14          	movzbl 0x14(%rax),%eax
ffffffff8002cafa:	88 45 b7             	mov    %al,-0x49(%rbp)
ffffffff8002cafd:	c6 45 f3 00          	movb   $0x0,-0xd(%rbp)
ffffffff8002cb01:	c6 45 f2 00          	movb   $0x0,-0xe(%rbp)
ffffffff8002cb05:	c6 45 f1 00          	movb   $0x0,-0xf(%rbp)
ffffffff8002cb09:	80 7d ff 00          	cmpb   $0x0,-0x1(%rbp)
ffffffff8002cb0d:	74 11                	je     ffffffff8002cb20 <ZydisCheckErrorConditions+0x309>
ffffffff8002cb0f:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
ffffffff8002cb13:	c0 e8 04             	shr    $0x4,%al
ffffffff8002cb16:	83 e0 01             	and    $0x1,%eax
ffffffff8002cb19:	88 45 f2             	mov    %al,-0xe(%rbp)
ffffffff8002cb1c:	80 65 ff 0f          	andb   $0xf,-0x1(%rbp)
ffffffff8002cb20:	80 7d fe 00          	cmpb   $0x0,-0x2(%rbp)
ffffffff8002cb24:	74 2a                	je     ffffffff8002cb50 <ZydisCheckErrorConditions+0x339>
ffffffff8002cb26:	80 7d b7 00          	cmpb   $0x0,-0x49(%rbp)
ffffffff8002cb2a:	74 13                	je     ffffffff8002cb3f <ZydisCheckErrorConditions+0x328>
ffffffff8002cb2c:	0f b6 45 fe          	movzbl -0x2(%rbp),%eax
ffffffff8002cb30:	c0 e8 04             	shr    $0x4,%al
ffffffff8002cb33:	83 e0 01             	and    $0x1,%eax
ffffffff8002cb36:	88 45 f1             	mov    %al,-0xf(%rbp)
ffffffff8002cb39:	80 65 fe 0f          	andb   $0xf,-0x2(%rbp)
ffffffff8002cb3d:	eb 11                	jmp    ffffffff8002cb50 <ZydisCheckErrorConditions+0x339>
ffffffff8002cb3f:	0f b6 45 fe          	movzbl -0x2(%rbp),%eax
ffffffff8002cb43:	c0 e8 03             	shr    $0x3,%al
ffffffff8002cb46:	83 e0 01             	and    $0x1,%eax
ffffffff8002cb49:	88 45 f3             	mov    %al,-0xd(%rbp)
ffffffff8002cb4c:	80 65 fe 07          	andb   $0x7,-0x2(%rbp)
ffffffff8002cb50:	80 7d f3 00          	cmpb   $0x0,-0xd(%rbp)
ffffffff8002cb54:	74 4a                	je     ffffffff8002cba0 <ZydisCheckErrorConditions+0x389>
ffffffff8002cb56:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff8002cb5a:	48 8b 00             	mov    (%rax),%rax
ffffffff8002cb5d:	8b 00                	mov    (%rax),%eax
ffffffff8002cb5f:	85 c0                	test   %eax,%eax
ffffffff8002cb61:	75 25                	jne    ffffffff8002cb88 <ZydisCheckErrorConditions+0x371>
ffffffff8002cb63:	48 8b 45 90          	mov    -0x70(%rbp),%rax
ffffffff8002cb67:	0f b6 80 20 01 00 00 	movzbl 0x120(%rax),%eax
ffffffff8002cb6e:	84 c0                	test   %al,%al
ffffffff8002cb70:	75 16                	jne    ffffffff8002cb88 <ZydisCheckErrorConditions+0x371>
ffffffff8002cb72:	48 8b 45 90          	mov    -0x70(%rbp),%rax
ffffffff8002cb76:	0f b6 80 22 01 00 00 	movzbl 0x122(%rax),%eax
ffffffff8002cb7d:	3c 05                	cmp    $0x5,%al
ffffffff8002cb7f:	75 07                	jne    ffffffff8002cb88 <ZydisCheckErrorConditions+0x371>
ffffffff8002cb81:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8002cb86:	eb 05                	jmp    ffffffff8002cb8d <ZydisCheckErrorConditions+0x376>
ffffffff8002cb88:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8002cb8d:	88 45 b6             	mov    %al,-0x4a(%rbp)
ffffffff8002cb90:	80 7d b6 00          	cmpb   $0x0,-0x4a(%rbp)
ffffffff8002cb94:	74 0a                	je     ffffffff8002cba0 <ZydisCheckErrorConditions+0x389>
ffffffff8002cb96:	b8 03 00 20 80       	mov    $0x80200003,%eax
ffffffff8002cb9b:	e9 06 02 00 00       	jmp    ffffffff8002cda6 <ZydisCheckErrorConditions+0x58f>
ffffffff8002cba0:	0f b6 4d fd          	movzbl -0x3(%rbp),%ecx
ffffffff8002cba4:	0f b6 55 fe          	movzbl -0x2(%rbp),%edx
ffffffff8002cba8:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
ffffffff8002cbac:	48 8b 75 90          	mov    -0x70(%rbp),%rsi
ffffffff8002cbb0:	48 8b 7d b8          	mov    -0x48(%rbp),%rdi
ffffffff8002cbb4:	41 89 c8             	mov    %ecx,%r8d
ffffffff8002cbb7:	89 d1                	mov    %edx,%ecx
ffffffff8002cbb9:	89 c2                	mov    %eax,%edx
ffffffff8002cbbb:	e8 9f f8 ff ff       	call   ffffffff8002c45f <ZydisPopulateRegisterIds>
ffffffff8002cbc0:	89 45 b0             	mov    %eax,-0x50(%rbp)
ffffffff8002cbc3:	8b 45 b0             	mov    -0x50(%rbp),%eax
ffffffff8002cbc6:	85 c0                	test   %eax,%eax
ffffffff8002cbc8:	79 08                	jns    ffffffff8002cbd2 <ZydisCheckErrorConditions+0x3bb>
ffffffff8002cbca:	8b 45 b0             	mov    -0x50(%rbp),%eax
ffffffff8002cbcd:	e9 d4 01 00 00       	jmp    ffffffff8002cda6 <ZydisCheckErrorConditions+0x58f>
ffffffff8002cbd2:	80 7d f2 00          	cmpb   $0x0,-0xe(%rbp)
ffffffff8002cbd6:	74 16                	je     ffffffff8002cbee <ZydisCheckErrorConditions+0x3d7>
ffffffff8002cbd8:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff8002cbdc:	0f b6 40 15          	movzbl 0x15(%rax),%eax
ffffffff8002cbe0:	3c 01                	cmp    $0x1,%al
ffffffff8002cbe2:	75 0a                	jne    ffffffff8002cbee <ZydisCheckErrorConditions+0x3d7>
ffffffff8002cbe4:	b8 03 00 20 80       	mov    $0x80200003,%eax
ffffffff8002cbe9:	e9 b8 01 00 00       	jmp    ffffffff8002cda6 <ZydisCheckErrorConditions+0x58f>
ffffffff8002cbee:	80 7d f1 00          	cmpb   $0x0,-0xf(%rbp)
ffffffff8002cbf2:	74 16                	je     ffffffff8002cc0a <ZydisCheckErrorConditions+0x3f3>
ffffffff8002cbf4:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff8002cbf8:	0f b6 40 16          	movzbl 0x16(%rax),%eax
ffffffff8002cbfc:	3c 01                	cmp    $0x1,%al
ffffffff8002cbfe:	75 0a                	jne    ffffffff8002cc0a <ZydisCheckErrorConditions+0x3f3>
ffffffff8002cc00:	b8 03 00 20 80       	mov    $0x80200003,%eax
ffffffff8002cc05:	e9 9c 01 00 00       	jmp    ffffffff8002cda6 <ZydisCheckErrorConditions+0x58f>
ffffffff8002cc0a:	80 7d fc 00          	cmpb   $0x0,-0x4(%rbp)
ffffffff8002cc0e:	0f 84 9e 00 00 00    	je     ffffffff8002ccb2 <ZydisCheckErrorConditions+0x49b>
ffffffff8002cc14:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff8002cc18:	0f b6 40 19          	movzbl 0x19(%rax),%eax
ffffffff8002cc1c:	88 45 af             	mov    %al,-0x51(%rbp)
ffffffff8002cc1f:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff8002cc23:	0f b6 40 15          	movzbl 0x15(%rax),%eax
ffffffff8002cc27:	88 45 f0             	mov    %al,-0x10(%rbp)
ffffffff8002cc2a:	c6 45 ef f0          	movb   $0xf0,-0x11(%rbp)
ffffffff8002cc2e:	48 8b 45 90          	mov    -0x70(%rbp),%rax
ffffffff8002cc32:	8b 40 0c             	mov    0xc(%rax),%eax
ffffffff8002cc35:	83 f8 03             	cmp    $0x3,%eax
ffffffff8002cc38:	75 1b                	jne    ffffffff8002cc55 <ZydisCheckErrorConditions+0x43e>
ffffffff8002cc3a:	80 7d ff 04          	cmpb   $0x4,-0x1(%rbp)
ffffffff8002cc3e:	75 0a                	jne    ffffffff8002cc4a <ZydisCheckErrorConditions+0x433>
ffffffff8002cc40:	80 7d fe 04          	cmpb   $0x4,-0x2(%rbp)
ffffffff8002cc44:	75 04                	jne    ffffffff8002cc4a <ZydisCheckErrorConditions+0x433>
ffffffff8002cc46:	80 7d fd 04          	cmpb   $0x4,-0x3(%rbp)
ffffffff8002cc4a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff8002cc4e:	0f b6 40 17          	movzbl 0x17(%rax),%eax
ffffffff8002cc52:	88 45 ef             	mov    %al,-0x11(%rbp)
ffffffff8002cc55:	48 8b 45 90          	mov    -0x70(%rbp),%rax
ffffffff8002cc59:	8b 40 0c             	mov    0xc(%rax),%eax
ffffffff8002cc5c:	83 f8 04             	cmp    $0x4,%eax
ffffffff8002cc5f:	74 0c                	je     ffffffff8002cc6d <ZydisCheckErrorConditions+0x456>
ffffffff8002cc61:	48 8b 45 90          	mov    -0x70(%rbp),%rax
ffffffff8002cc65:	8b 40 0c             	mov    0xc(%rax),%eax
ffffffff8002cc68:	83 f8 05             	cmp    $0x5,%eax
ffffffff8002cc6b:	75 20                	jne    ffffffff8002cc8d <ZydisCheckErrorConditions+0x476>
ffffffff8002cc6d:	80 7d ff 00          	cmpb   $0x0,-0x1(%rbp)
ffffffff8002cc71:	74 06                	je     ffffffff8002cc79 <ZydisCheckErrorConditions+0x462>
ffffffff8002cc73:	80 7d ff 04          	cmpb   $0x4,-0x1(%rbp)
ffffffff8002cc77:	75 0a                	jne    ffffffff8002cc83 <ZydisCheckErrorConditions+0x46c>
ffffffff8002cc79:	80 7d fe 04          	cmpb   $0x4,-0x2(%rbp)
ffffffff8002cc7d:	75 04                	jne    ffffffff8002cc83 <ZydisCheckErrorConditions+0x46c>
ffffffff8002cc7f:	80 7d fd 00          	cmpb   $0x0,-0x3(%rbp)
ffffffff8002cc83:	80 7d ff 00          	cmpb   $0x0,-0x1(%rbp)
ffffffff8002cc87:	75 04                	jne    ffffffff8002cc8d <ZydisCheckErrorConditions+0x476>
ffffffff8002cc89:	c6 45 f0 f1          	movb   $0xf1,-0x10(%rbp)
ffffffff8002cc8d:	0f b6 45 f0          	movzbl -0x10(%rbp),%eax
ffffffff8002cc91:	3a 45 af             	cmp    -0x51(%rbp),%al
ffffffff8002cc94:	74 12                	je     ffffffff8002cca8 <ZydisCheckErrorConditions+0x491>
ffffffff8002cc96:	0f b6 45 f0          	movzbl -0x10(%rbp),%eax
ffffffff8002cc9a:	3a 45 ef             	cmp    -0x11(%rbp),%al
ffffffff8002cc9d:	74 09                	je     ffffffff8002cca8 <ZydisCheckErrorConditions+0x491>
ffffffff8002cc9f:	0f b6 45 af          	movzbl -0x51(%rbp),%eax
ffffffff8002cca3:	3a 45 ef             	cmp    -0x11(%rbp),%al
ffffffff8002cca6:	75 0a                	jne    ffffffff8002ccb2 <ZydisCheckErrorConditions+0x49b>
ffffffff8002cca8:	b8 03 00 20 80       	mov    $0x80200003,%eax
ffffffff8002ccad:	e9 f4 00 00 00       	jmp    ffffffff8002cda6 <ZydisCheckErrorConditions+0x58f>
ffffffff8002ccb2:	80 7d fb 00          	cmpb   $0x0,-0x5(%rbp)
ffffffff8002ccb6:	74 59                	je     ffffffff8002cd11 <ZydisCheckErrorConditions+0x4fa>
ffffffff8002ccb8:	48 8b 45 90          	mov    -0x70(%rbp),%rax
ffffffff8002ccbc:	8b 40 0c             	mov    0xc(%rax),%eax
ffffffff8002ccbf:	83 f8 04             	cmp    $0x4,%eax
ffffffff8002ccc2:	74 0a                	je     ffffffff8002ccce <ZydisCheckErrorConditions+0x4b7>
ffffffff8002ccc4:	48 8b 45 90          	mov    -0x70(%rbp),%rax
ffffffff8002ccc8:	8b 40 0c             	mov    0xc(%rax),%eax
ffffffff8002cccb:	83 f8 03             	cmp    $0x3,%eax
ffffffff8002ccce:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff8002ccd2:	0f b6 40 15          	movzbl 0x15(%rax),%eax
ffffffff8002ccd6:	88 45 ae             	mov    %al,-0x52(%rbp)
ffffffff8002ccd9:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff8002ccdd:	0f b6 40 17          	movzbl 0x17(%rax),%eax
ffffffff8002cce1:	88 45 ad             	mov    %al,-0x53(%rbp)
ffffffff8002cce4:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff8002cce8:	0f b6 40 16          	movzbl 0x16(%rax),%eax
ffffffff8002ccec:	88 45 ac             	mov    %al,-0x54(%rbp)
ffffffff8002ccef:	0f b6 45 ae          	movzbl -0x52(%rbp),%eax
ffffffff8002ccf3:	3a 45 ad             	cmp    -0x53(%rbp),%al
ffffffff8002ccf6:	74 0f                	je     ffffffff8002cd07 <ZydisCheckErrorConditions+0x4f0>
ffffffff8002ccf8:	80 7d b7 00          	cmpb   $0x0,-0x49(%rbp)
ffffffff8002ccfc:	74 13                	je     ffffffff8002cd11 <ZydisCheckErrorConditions+0x4fa>
ffffffff8002ccfe:	0f b6 45 ae          	movzbl -0x52(%rbp),%eax
ffffffff8002cd02:	3a 45 ac             	cmp    -0x54(%rbp),%al
ffffffff8002cd05:	75 0a                	jne    ffffffff8002cd11 <ZydisCheckErrorConditions+0x4fa>
ffffffff8002cd07:	b8 03 00 20 80       	mov    $0x80200003,%eax
ffffffff8002cd0c:	e9 95 00 00 00       	jmp    ffffffff8002cda6 <ZydisCheckErrorConditions+0x58f>
ffffffff8002cd11:	80 7d fa 00          	cmpb   $0x0,-0x6(%rbp)
ffffffff8002cd15:	74 43                	je     ffffffff8002cd5a <ZydisCheckErrorConditions+0x543>
ffffffff8002cd17:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff8002cd1b:	0f b6 40 15          	movzbl 0x15(%rax),%eax
ffffffff8002cd1f:	88 45 ab             	mov    %al,-0x55(%rbp)
ffffffff8002cd22:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff8002cd26:	0f b6 40 17          	movzbl 0x17(%rax),%eax
ffffffff8002cd2a:	88 45 aa             	mov    %al,-0x56(%rbp)
ffffffff8002cd2d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff8002cd31:	0f b6 40 16          	movzbl 0x16(%rax),%eax
ffffffff8002cd35:	88 45 a9             	mov    %al,-0x57(%rbp)
ffffffff8002cd38:	0f b6 45 ab          	movzbl -0x55(%rbp),%eax
ffffffff8002cd3c:	3a 45 aa             	cmp    -0x56(%rbp),%al
ffffffff8002cd3f:	74 12                	je     ffffffff8002cd53 <ZydisCheckErrorConditions+0x53c>
ffffffff8002cd41:	0f b6 45 ab          	movzbl -0x55(%rbp),%eax
ffffffff8002cd45:	3a 45 a9             	cmp    -0x57(%rbp),%al
ffffffff8002cd48:	74 09                	je     ffffffff8002cd53 <ZydisCheckErrorConditions+0x53c>
ffffffff8002cd4a:	0f b6 45 aa          	movzbl -0x56(%rbp),%eax
ffffffff8002cd4e:	3a 45 a9             	cmp    -0x57(%rbp),%al
ffffffff8002cd51:	75 07                	jne    ffffffff8002cd5a <ZydisCheckErrorConditions+0x543>
ffffffff8002cd53:	b8 03 00 20 80       	mov    $0x80200003,%eax
ffffffff8002cd58:	eb 4c                	jmp    ffffffff8002cda6 <ZydisCheckErrorConditions+0x58f>
ffffffff8002cd5a:	83 7d f4 03          	cmpl   $0x3,-0xc(%rbp)
ffffffff8002cd5e:	74 25                	je     ffffffff8002cd85 <ZydisCheckErrorConditions+0x56e>
ffffffff8002cd60:	83 7d f4 03          	cmpl   $0x3,-0xc(%rbp)
ffffffff8002cd64:	77 32                	ja     ffffffff8002cd98 <ZydisCheckErrorConditions+0x581>
ffffffff8002cd66:	83 7d f4 01          	cmpl   $0x1,-0xc(%rbp)
ffffffff8002cd6a:	76 2e                	jbe    ffffffff8002cd9a <ZydisCheckErrorConditions+0x583>
ffffffff8002cd6c:	83 7d f4 02          	cmpl   $0x2,-0xc(%rbp)
ffffffff8002cd70:	75 26                	jne    ffffffff8002cd98 <ZydisCheckErrorConditions+0x581>
ffffffff8002cd72:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff8002cd76:	0f b6 40 13          	movzbl 0x13(%rax),%eax
ffffffff8002cd7a:	84 c0                	test   %al,%al
ffffffff8002cd7c:	75 1f                	jne    ffffffff8002cd9d <ZydisCheckErrorConditions+0x586>
ffffffff8002cd7e:	b8 0a 00 20 80       	mov    $0x8020000a,%eax
ffffffff8002cd83:	eb 21                	jmp    ffffffff8002cda6 <ZydisCheckErrorConditions+0x58f>
ffffffff8002cd85:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff8002cd89:	0f b6 40 13          	movzbl 0x13(%rax),%eax
ffffffff8002cd8d:	84 c0                	test   %al,%al
ffffffff8002cd8f:	74 0f                	je     ffffffff8002cda0 <ZydisCheckErrorConditions+0x589>
ffffffff8002cd91:	b8 0a 00 20 80       	mov    $0x8020000a,%eax
ffffffff8002cd96:	eb 0e                	jmp    ffffffff8002cda6 <ZydisCheckErrorConditions+0x58f>
ffffffff8002cd98:	eb fe                	jmp    ffffffff8002cd98 <ZydisCheckErrorConditions+0x581>
ffffffff8002cd9a:	90                   	nop
ffffffff8002cd9b:	eb 04                	jmp    ffffffff8002cda1 <ZydisCheckErrorConditions+0x58a>
ffffffff8002cd9d:	90                   	nop
ffffffff8002cd9e:	eb 01                	jmp    ffffffff8002cda1 <ZydisCheckErrorConditions+0x58a>
ffffffff8002cda0:	90                   	nop
ffffffff8002cda1:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff8002cda6:	c9                   	leave  
ffffffff8002cda7:	c3                   	ret    

ffffffff8002cda8 <ZydisDecodeInstruction>:
ffffffff8002cda8:	f3 0f 1e fa          	endbr64 
ffffffff8002cdac:	55                   	push   %rbp
ffffffff8002cdad:	48 89 e5             	mov    %rsp,%rbp
ffffffff8002cdb0:	48 83 ec 60          	sub    $0x60,%rsp
ffffffff8002cdb4:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
ffffffff8002cdb8:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
ffffffff8002cdbc:	e8 b4 94 ff ff       	call   ffffffff80026275 <ZydisDecoderTreeGetRootNode>
ffffffff8002cdc1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8002cdc5:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
ffffffff8002cdcc:	00 
ffffffff8002cdcd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8002cdd1:	0f b6 00             	movzbl (%rax),%eax
ffffffff8002cdd4:	88 45 ef             	mov    %al,-0x11(%rbp)
ffffffff8002cdd7:	66 c7 45 d6 00 00    	movw   $0x0,-0x2a(%rbp)
ffffffff8002cddd:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%rbp)
ffffffff8002cde4:	0f b6 45 ef          	movzbl -0x11(%rbp),%eax
ffffffff8002cde8:	83 f8 1b             	cmp    $0x1b,%eax
ffffffff8002cdeb:	0f 87 02 04 00 00    	ja     ffffffff8002d1f3 <ZydisDecodeInstruction+0x44b>
ffffffff8002cdf1:	89 c0                	mov    %eax,%eax
ffffffff8002cdf3:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
ffffffff8002cdfa:	00 
ffffffff8002cdfb:	48 8d 05 1e 2b 01 00 	lea    0x12b1e(%rip),%rax        # ffffffff8003f920 <GPR8_MAPPING.0+0x330>
ffffffff8002ce02:	8b 04 02             	mov    (%rdx,%rax,1),%eax
ffffffff8002ce05:	48 98                	cltq   
ffffffff8002ce07:	48 8d 15 12 2b 01 00 	lea    0x12b12(%rip),%rdx        # ffffffff8003f920 <GPR8_MAPPING.0+0x330>
ffffffff8002ce0e:	48 01 d0             	add    %rdx,%rax
ffffffff8002ce11:	3e ff e0             	notrack jmp *%rax
ffffffff8002ce14:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
ffffffff8002ce19:	0f 84 a2 00 00 00    	je     ffffffff8002cec1 <ZydisDecodeInstruction+0x119>
ffffffff8002ce1f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8002ce23:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8002ce27:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
ffffffff8002ce2e:	00 
ffffffff8002ce2f:	c6 45 ef 0c          	movb   $0xc,-0x11(%rbp)
ffffffff8002ce33:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff8002ce37:	0f b6 40 24          	movzbl 0x24(%rax),%eax
ffffffff8002ce3b:	84 c0                	test   %al,%al
ffffffff8002ce3d:	74 1e                	je     ffffffff8002ce5d <ZydisDecodeInstruction+0xb5>
ffffffff8002ce3f:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff8002ce43:	0f b6 40 2b          	movzbl 0x2b(%rax),%eax
ffffffff8002ce47:	0f b6 d0             	movzbl %al,%edx
ffffffff8002ce4a:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff8002ce4e:	48 63 d2             	movslq %edx,%rdx
ffffffff8002ce51:	48 83 c2 0e          	add    $0xe,%rdx
ffffffff8002ce55:	c7 44 d0 04 00 00 00 	movl   $0x0,0x4(%rax,%rdx,8)
ffffffff8002ce5c:	00 
ffffffff8002ce5d:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff8002ce61:	0f b6 40 24          	movzbl 0x24(%rax),%eax
ffffffff8002ce65:	3c 66                	cmp    $0x66,%al
ffffffff8002ce67:	0f 85 5c 07 00 00    	jne    ffffffff8002d5c9 <ZydisDecodeInstruction+0x821>
ffffffff8002ce6d:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff8002ce71:	0f b6 50 28          	movzbl 0x28(%rax),%edx
ffffffff8002ce75:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff8002ce79:	0f b6 40 2b          	movzbl 0x2b(%rax),%eax
ffffffff8002ce7d:	38 c2                	cmp    %al,%dl
ffffffff8002ce7f:	75 1e                	jne    ffffffff8002ce9f <ZydisDecodeInstruction+0xf7>
ffffffff8002ce81:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff8002ce85:	0f b6 40 2b          	movzbl 0x2b(%rax),%eax
ffffffff8002ce89:	0f b6 d0             	movzbl %al,%edx
ffffffff8002ce8c:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff8002ce90:	48 63 d2             	movslq %edx,%rdx
ffffffff8002ce93:	48 83 c2 0e          	add    $0xe,%rdx
ffffffff8002ce97:	c7 44 d0 04 01 00 00 	movl   $0x1,0x4(%rax,%rdx,8)
ffffffff8002ce9e:	00 
ffffffff8002ce9f:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff8002cea3:	48 8b 50 20          	mov    0x20(%rax),%rdx
ffffffff8002cea7:	48 b8 00 00 00 00 00 	movabs $0x80000000000,%rax
ffffffff8002ceae:	08 00 00 
ffffffff8002ceb1:	48 09 c2             	or     %rax,%rdx
ffffffff8002ceb4:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff8002ceb8:	48 89 50 20          	mov    %rdx,0x20(%rax)
ffffffff8002cebc:	e9 09 07 00 00       	jmp    ffffffff8002d5ca <ZydisDecodeInstruction+0x822>
ffffffff8002cec1:	b8 01 00 20 80       	mov    $0x80200001,%eax
ffffffff8002cec6:	e9 17 07 00 00       	jmp    ffffffff8002d5e2 <ZydisDecodeInstruction+0x83a>
ffffffff8002cecb:	48 8d 45 d6          	lea    -0x2a(%rbp),%rax
ffffffff8002cecf:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
ffffffff8002ced3:	48 89 c6             	mov    %rax,%rsi
ffffffff8002ced6:	48 89 d7             	mov    %rdx,%rdi
ffffffff8002ced9:	e8 4a e7 ff ff       	call   ffffffff8002b628 <ZydisNodeHandlerXOP>
ffffffff8002cede:	89 45 e8             	mov    %eax,-0x18(%rbp)
ffffffff8002cee1:	e9 b6 06 00 00       	jmp    ffffffff8002d59c <ZydisDecodeInstruction+0x7f4>
ffffffff8002cee6:	48 8d 45 d6          	lea    -0x2a(%rbp),%rax
ffffffff8002ceea:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
ffffffff8002ceee:	48 89 c6             	mov    %rax,%rsi
ffffffff8002cef1:	48 89 d7             	mov    %rdx,%rdi
ffffffff8002cef4:	e8 99 e7 ff ff       	call   ffffffff8002b692 <ZydisNodeHandlerVEX>
ffffffff8002cef9:	89 45 e8             	mov    %eax,-0x18(%rbp)
ffffffff8002cefc:	e9 9b 06 00 00       	jmp    ffffffff8002d59c <ZydisDecodeInstruction+0x7f4>
ffffffff8002cf01:	48 8d 45 d6          	lea    -0x2a(%rbp),%rax
ffffffff8002cf05:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
ffffffff8002cf09:	48 89 c6             	mov    %rax,%rsi
ffffffff8002cf0c:	48 89 d7             	mov    %rdx,%rdi
ffffffff8002cf0f:	e8 e5 e7 ff ff       	call   ffffffff8002b6f9 <ZydisNodeHandlerEMVEX>
ffffffff8002cf14:	89 45 e8             	mov    %eax,-0x18(%rbp)
ffffffff8002cf17:	e9 80 06 00 00       	jmp    ffffffff8002d59c <ZydisDecodeInstruction+0x7f4>
ffffffff8002cf1c:	48 8d 45 d6          	lea    -0x2a(%rbp),%rax
ffffffff8002cf20:	48 8b 75 a0          	mov    -0x60(%rbp),%rsi
ffffffff8002cf24:	48 8b 4d a8          	mov    -0x58(%rbp),%rcx
ffffffff8002cf28:	48 89 c2             	mov    %rax,%rdx
ffffffff8002cf2b:	48 89 cf             	mov    %rcx,%rdi
ffffffff8002cf2e:	e8 64 e8 ff ff       	call   ffffffff8002b797 <ZydisNodeHandlerOpcode>
ffffffff8002cf33:	89 45 e8             	mov    %eax,-0x18(%rbp)
ffffffff8002cf36:	e9 61 06 00 00       	jmp    ffffffff8002d59c <ZydisDecodeInstruction+0x7f4>
ffffffff8002cf3b:	48 8d 45 d6          	lea    -0x2a(%rbp),%rax
ffffffff8002cf3f:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
ffffffff8002cf43:	48 89 c6             	mov    %rax,%rsi
ffffffff8002cf46:	48 89 d7             	mov    %rdx,%rdi
ffffffff8002cf49:	e8 35 ee ff ff       	call   ffffffff8002bd83 <ZydisNodeHandlerMode>
ffffffff8002cf4e:	89 45 e8             	mov    %eax,-0x18(%rbp)
ffffffff8002cf51:	e9 46 06 00 00       	jmp    ffffffff8002d59c <ZydisDecodeInstruction+0x7f4>
ffffffff8002cf56:	48 8d 45 d6          	lea    -0x2a(%rbp),%rax
ffffffff8002cf5a:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
ffffffff8002cf5e:	48 89 c6             	mov    %rax,%rsi
ffffffff8002cf61:	48 89 d7             	mov    %rdx,%rdi
ffffffff8002cf64:	e8 86 ee ff ff       	call   ffffffff8002bdef <ZydisNodeHandlerModeCompact>
ffffffff8002cf69:	89 45 e8             	mov    %eax,-0x18(%rbp)
ffffffff8002cf6c:	e9 2b 06 00 00       	jmp    ffffffff8002d59c <ZydisDecodeInstruction+0x7f4>
ffffffff8002cf71:	48 8d 45 d6          	lea    -0x2a(%rbp),%rax
ffffffff8002cf75:	48 8b 75 a0          	mov    -0x60(%rbp),%rsi
ffffffff8002cf79:	48 8b 4d a8          	mov    -0x58(%rbp),%rcx
ffffffff8002cf7d:	48 89 c2             	mov    %rax,%rdx
ffffffff8002cf80:	48 89 cf             	mov    %rcx,%rdi
ffffffff8002cf83:	e8 97 ee ff ff       	call   ffffffff8002be1f <ZydisNodeHandlerModrmMod>
ffffffff8002cf88:	89 45 e8             	mov    %eax,-0x18(%rbp)
ffffffff8002cf8b:	e9 0c 06 00 00       	jmp    ffffffff8002d59c <ZydisDecodeInstruction+0x7f4>
ffffffff8002cf90:	48 8d 45 d6          	lea    -0x2a(%rbp),%rax
ffffffff8002cf94:	48 8b 75 a0          	mov    -0x60(%rbp),%rsi
ffffffff8002cf98:	48 8b 4d a8          	mov    -0x58(%rbp),%rcx
ffffffff8002cf9c:	48 89 c2             	mov    %rax,%rdx
ffffffff8002cf9f:	48 89 cf             	mov    %rcx,%rdi
ffffffff8002cfa2:	e8 09 ef ff ff       	call   ffffffff8002beb0 <ZydisNodeHandlerModrmModCompact>
ffffffff8002cfa7:	89 45 e8             	mov    %eax,-0x18(%rbp)
ffffffff8002cfaa:	e9 ed 05 00 00       	jmp    ffffffff8002d59c <ZydisDecodeInstruction+0x7f4>
ffffffff8002cfaf:	48 8d 45 d6          	lea    -0x2a(%rbp),%rax
ffffffff8002cfb3:	48 8b 75 a0          	mov    -0x60(%rbp),%rsi
ffffffff8002cfb7:	48 8b 4d a8          	mov    -0x58(%rbp),%rcx
ffffffff8002cfbb:	48 89 c2             	mov    %rax,%rdx
ffffffff8002cfbe:	48 89 cf             	mov    %rcx,%rdi
ffffffff8002cfc1:	e8 47 ef ff ff       	call   ffffffff8002bf0d <ZydisNodeHandlerModrmReg>
ffffffff8002cfc6:	89 45 e8             	mov    %eax,-0x18(%rbp)
ffffffff8002cfc9:	e9 ce 05 00 00       	jmp    ffffffff8002d59c <ZydisDecodeInstruction+0x7f4>
ffffffff8002cfce:	48 8d 45 d6          	lea    -0x2a(%rbp),%rax
ffffffff8002cfd2:	48 8b 75 a0          	mov    -0x60(%rbp),%rsi
ffffffff8002cfd6:	48 8b 4d a8          	mov    -0x58(%rbp),%rcx
ffffffff8002cfda:	48 89 c2             	mov    %rax,%rdx
ffffffff8002cfdd:	48 89 cf             	mov    %rcx,%rdi
ffffffff8002cfe0:	e8 b9 ef ff ff       	call   ffffffff8002bf9e <ZydisNodeHandlerModrmRm>
ffffffff8002cfe5:	89 45 e8             	mov    %eax,-0x18(%rbp)
ffffffff8002cfe8:	e9 af 05 00 00       	jmp    ffffffff8002d59c <ZydisDecodeInstruction+0x7f4>
ffffffff8002cfed:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff8002cff1:	0f b6 40 21          	movzbl 0x21(%rax),%eax
ffffffff8002cff5:	84 c0                	test   %al,%al
ffffffff8002cff7:	0f 95 c0             	setne  %al
ffffffff8002cffa:	0f b6 c0             	movzbl %al,%eax
ffffffff8002cffd:	66 89 45 d6          	mov    %ax,-0x2a(%rbp)
ffffffff8002d001:	e9 96 05 00 00       	jmp    ffffffff8002d59c <ZydisDecodeInstruction+0x7f4>
ffffffff8002d006:	48 8d 45 d6          	lea    -0x2a(%rbp),%rax
ffffffff8002d00a:	48 8b 75 a0          	mov    -0x60(%rbp),%rsi
ffffffff8002d00e:	48 8b 4d a8          	mov    -0x58(%rbp),%rcx
ffffffff8002d012:	48 89 c2             	mov    %rax,%rdx
ffffffff8002d015:	48 89 cf             	mov    %rcx,%rdi
ffffffff8002d018:	e8 12 f0 ff ff       	call   ffffffff8002c02f <ZydisNodeHandlerMandatoryPrefix>
ffffffff8002d01d:	89 45 e8             	mov    %eax,-0x18(%rbp)
ffffffff8002d020:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8002d024:	be 00 00 00 00       	mov    $0x0,%esi
ffffffff8002d029:	48 89 c7             	mov    %rax,%rdi
ffffffff8002d02c:	e8 97 8d 00 00       	call   ffffffff80035dc8 <ZydisDecoderTreeGetChildNode>
ffffffff8002d031:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff8002d035:	e9 62 05 00 00       	jmp    ffffffff8002d59c <ZydisDecodeInstruction+0x7f4>
ffffffff8002d03a:	48 8d 45 d6          	lea    -0x2a(%rbp),%rax
ffffffff8002d03e:	48 8b 75 a0          	mov    -0x60(%rbp),%rsi
ffffffff8002d042:	48 8b 4d a8          	mov    -0x58(%rbp),%rcx
ffffffff8002d046:	48 89 c2             	mov    %rax,%rdx
ffffffff8002d049:	48 89 cf             	mov    %rcx,%rdi
ffffffff8002d04c:	e8 cd f0 ff ff       	call   ffffffff8002c11e <ZydisNodeHandlerOperandSize>
ffffffff8002d051:	89 45 e8             	mov    %eax,-0x18(%rbp)
ffffffff8002d054:	e9 43 05 00 00       	jmp    ffffffff8002d59c <ZydisDecodeInstruction+0x7f4>
ffffffff8002d059:	48 8d 45 d6          	lea    -0x2a(%rbp),%rax
ffffffff8002d05d:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
ffffffff8002d061:	48 89 c6             	mov    %rax,%rsi
ffffffff8002d064:	48 89 d7             	mov    %rdx,%rdi
ffffffff8002d067:	e8 98 f1 ff ff       	call   ffffffff8002c204 <ZydisNodeHandlerAddressSize>
ffffffff8002d06c:	89 45 e8             	mov    %eax,-0x18(%rbp)
ffffffff8002d06f:	e9 28 05 00 00       	jmp    ffffffff8002d59c <ZydisDecodeInstruction+0x7f4>
ffffffff8002d074:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff8002d078:	48 8b 48 08          	mov    0x8(%rax),%rcx
ffffffff8002d07c:	48 8d 45 d6          	lea    -0x2a(%rbp),%rax
ffffffff8002d080:	48 8b 75 a0          	mov    -0x60(%rbp),%rsi
ffffffff8002d084:	48 89 c2             	mov    %rax,%rdx
ffffffff8002d087:	48 89 cf             	mov    %rcx,%rdi
ffffffff8002d08a:	e8 34 f2 ff ff       	call   ffffffff8002c2c3 <ZydisNodeHandlerVectorLength>
ffffffff8002d08f:	89 45 e8             	mov    %eax,-0x18(%rbp)
ffffffff8002d092:	e9 05 05 00 00       	jmp    ffffffff8002d59c <ZydisDecodeInstruction+0x7f4>
ffffffff8002d097:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff8002d09b:	48 8b 48 08          	mov    0x8(%rax),%rcx
ffffffff8002d09f:	48 8d 45 d6          	lea    -0x2a(%rbp),%rax
ffffffff8002d0a3:	48 8b 75 a0          	mov    -0x60(%rbp),%rsi
ffffffff8002d0a7:	48 89 c2             	mov    %rax,%rdx
ffffffff8002d0aa:	48 89 cf             	mov    %rcx,%rdi
ffffffff8002d0ad:	e8 87 f2 ff ff       	call   ffffffff8002c339 <ZydisNodeHandlerRexW>
ffffffff8002d0b2:	89 45 e8             	mov    %eax,-0x18(%rbp)
ffffffff8002d0b5:	e9 e2 04 00 00       	jmp    ffffffff8002d59c <ZydisDecodeInstruction+0x7f4>
ffffffff8002d0ba:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff8002d0be:	48 8b 48 08          	mov    0x8(%rax),%rcx
ffffffff8002d0c2:	48 8d 45 d6          	lea    -0x2a(%rbp),%rax
ffffffff8002d0c6:	48 8b 75 a0          	mov    -0x60(%rbp),%rsi
ffffffff8002d0ca:	48 89 c2             	mov    %rax,%rdx
ffffffff8002d0cd:	48 89 cf             	mov    %rcx,%rdi
ffffffff8002d0d0:	e8 c7 f2 ff ff       	call   ffffffff8002c39c <ZydisNodeHandlerRexB>
ffffffff8002d0d5:	89 45 e8             	mov    %eax,-0x18(%rbp)
ffffffff8002d0d8:	e9 bf 04 00 00       	jmp    ffffffff8002d59c <ZydisDecodeInstruction+0x7f4>
ffffffff8002d0dd:	48 8d 45 d6          	lea    -0x2a(%rbp),%rax
ffffffff8002d0e1:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
ffffffff8002d0e5:	48 89 c6             	mov    %rax,%rsi
ffffffff8002d0e8:	48 89 d7             	mov    %rdx,%rdi
ffffffff8002d0eb:	e8 0f f3 ff ff       	call   ffffffff8002c3ff <ZydisNodeHandlerEvexB>
ffffffff8002d0f0:	89 45 e8             	mov    %eax,-0x18(%rbp)
ffffffff8002d0f3:	e9 a4 04 00 00       	jmp    ffffffff8002d59c <ZydisDecodeInstruction+0x7f4>
ffffffff8002d0f8:	48 8d 45 d6          	lea    -0x2a(%rbp),%rax
ffffffff8002d0fc:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
ffffffff8002d100:	48 89 c6             	mov    %rax,%rsi
ffffffff8002d103:	48 89 d7             	mov    %rdx,%rdi
ffffffff8002d106:	e8 24 f3 ff ff       	call   ffffffff8002c42f <ZydisNodeHandlerMvexE>
ffffffff8002d10b:	89 45 e8             	mov    %eax,-0x18(%rbp)
ffffffff8002d10e:	e9 89 04 00 00       	jmp    ffffffff8002d59c <ZydisDecodeInstruction+0x7f4>
ffffffff8002d113:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff8002d117:	48 8b 00             	mov    (%rax),%rax
ffffffff8002d11a:	0f b6 40 09          	movzbl 0x9(%rax),%eax
ffffffff8002d11e:	84 c0                	test   %al,%al
ffffffff8002d120:	0f 95 c0             	setne  %al
ffffffff8002d123:	0f b6 c0             	movzbl %al,%eax
ffffffff8002d126:	66 89 45 d6          	mov    %ax,-0x2a(%rbp)
ffffffff8002d12a:	e9 6d 04 00 00       	jmp    ffffffff8002d59c <ZydisDecodeInstruction+0x7f4>
ffffffff8002d12f:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff8002d133:	48 8b 00             	mov    (%rax),%rax
ffffffff8002d136:	0f b6 40 0a          	movzbl 0xa(%rax),%eax
ffffffff8002d13a:	84 c0                	test   %al,%al
ffffffff8002d13c:	0f 95 c0             	setne  %al
ffffffff8002d13f:	0f b6 c0             	movzbl %al,%eax
ffffffff8002d142:	66 89 45 d6          	mov    %ax,-0x2a(%rbp)
ffffffff8002d146:	e9 51 04 00 00       	jmp    ffffffff8002d59c <ZydisDecodeInstruction+0x7f4>
ffffffff8002d14b:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff8002d14f:	48 8b 00             	mov    (%rax),%rax
ffffffff8002d152:	0f b6 40 0b          	movzbl 0xb(%rax),%eax
ffffffff8002d156:	84 c0                	test   %al,%al
ffffffff8002d158:	0f 95 c0             	setne  %al
ffffffff8002d15b:	0f b6 c0             	movzbl %al,%eax
ffffffff8002d15e:	66 89 45 d6          	mov    %ax,-0x2a(%rbp)
ffffffff8002d162:	e9 35 04 00 00       	jmp    ffffffff8002d59c <ZydisDecodeInstruction+0x7f4>
ffffffff8002d167:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff8002d16b:	48 8b 00             	mov    (%rax),%rax
ffffffff8002d16e:	0f b6 40 0c          	movzbl 0xc(%rax),%eax
ffffffff8002d172:	84 c0                	test   %al,%al
ffffffff8002d174:	0f 95 c0             	setne  %al
ffffffff8002d177:	0f b6 c0             	movzbl %al,%eax
ffffffff8002d17a:	66 89 45 d6          	mov    %ax,-0x2a(%rbp)
ffffffff8002d17e:	e9 19 04 00 00       	jmp    ffffffff8002d59c <ZydisDecodeInstruction+0x7f4>
ffffffff8002d183:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff8002d187:	48 8b 00             	mov    (%rax),%rax
ffffffff8002d18a:	0f b6 40 0d          	movzbl 0xd(%rax),%eax
ffffffff8002d18e:	84 c0                	test   %al,%al
ffffffff8002d190:	0f 95 c0             	setne  %al
ffffffff8002d193:	0f b6 c0             	movzbl %al,%eax
ffffffff8002d196:	66 89 45 d6          	mov    %ax,-0x2a(%rbp)
ffffffff8002d19a:	e9 fd 03 00 00       	jmp    ffffffff8002d59c <ZydisDecodeInstruction+0x7f4>
ffffffff8002d19f:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff8002d1a3:	48 8b 00             	mov    (%rax),%rax
ffffffff8002d1a6:	0f b6 40 0e          	movzbl 0xe(%rax),%eax
ffffffff8002d1aa:	84 c0                	test   %al,%al
ffffffff8002d1ac:	0f 95 c0             	setne  %al
ffffffff8002d1af:	0f b6 c0             	movzbl %al,%eax
ffffffff8002d1b2:	66 89 45 d6          	mov    %ax,-0x2a(%rbp)
ffffffff8002d1b6:	e9 e1 03 00 00       	jmp    ffffffff8002d59c <ZydisDecodeInstruction+0x7f4>
ffffffff8002d1bb:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff8002d1bf:	48 8b 00             	mov    (%rax),%rax
ffffffff8002d1c2:	0f b6 40 0f          	movzbl 0xf(%rax),%eax
ffffffff8002d1c6:	84 c0                	test   %al,%al
ffffffff8002d1c8:	0f 95 c0             	setne  %al
ffffffff8002d1cb:	0f b6 c0             	movzbl %al,%eax
ffffffff8002d1ce:	66 89 45 d6          	mov    %ax,-0x2a(%rbp)
ffffffff8002d1d2:	e9 c5 03 00 00       	jmp    ffffffff8002d59c <ZydisDecodeInstruction+0x7f4>
ffffffff8002d1d7:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff8002d1db:	48 8b 00             	mov    (%rax),%rax
ffffffff8002d1de:	0f b6 40 10          	movzbl 0x10(%rax),%eax
ffffffff8002d1e2:	84 c0                	test   %al,%al
ffffffff8002d1e4:	0f 95 c0             	setne  %al
ffffffff8002d1e7:	0f b6 c0             	movzbl %al,%eax
ffffffff8002d1ea:	66 89 45 d6          	mov    %ax,-0x2a(%rbp)
ffffffff8002d1ee:	e9 a9 03 00 00       	jmp    ffffffff8002d59c <ZydisDecodeInstruction+0x7f4>
ffffffff8002d1f3:	0f b6 45 ef          	movzbl -0x11(%rbp),%eax
ffffffff8002d1f7:	84 c0                	test   %al,%al
ffffffff8002d1f9:	0f 89 9b 03 00 00    	jns    ffffffff8002d59a <ZydisDecodeInstruction+0x7f2>
ffffffff8002d1ff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8002d203:	0f b7 40 01          	movzwl 0x1(%rax),%eax
ffffffff8002d207:	0f b7 c0             	movzwl %ax,%eax
ffffffff8002d20a:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
ffffffff8002d20e:	8b 4a 0c             	mov    0xc(%rdx),%ecx
ffffffff8002d211:	48 8d 55 c8          	lea    -0x38(%rbp),%rdx
ffffffff8002d215:	89 c6                	mov    %eax,%esi
ffffffff8002d217:	89 cf                	mov    %ecx,%edi
ffffffff8002d219:	e8 19 85 00 00       	call   ffffffff80035737 <ZydisGetInstructionDefinition>
ffffffff8002d21e:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
ffffffff8002d222:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff8002d226:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff8002d22a:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
ffffffff8002d22e:	48 89 ce             	mov    %rcx,%rsi
ffffffff8002d231:	48 89 c7             	mov    %rax,%rdi
ffffffff8002d234:	e8 8a e2 ff ff       	call   ffffffff8002b4c3 <ZydisSetEffectiveOperandWidth>
ffffffff8002d239:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
ffffffff8002d23d:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff8002d241:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff8002d245:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
ffffffff8002d249:	48 89 ce             	mov    %rcx,%rsi
ffffffff8002d24c:	48 89 c7             	mov    %rax,%rdi
ffffffff8002d24f:	e8 36 e3 ff ff       	call   ffffffff8002b58a <ZydisSetEffectiveAddressWidth>
ffffffff8002d254:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
ffffffff8002d258:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff8002d25c:	48 89 c6             	mov    %rax,%rsi
ffffffff8002d25f:	48 89 d7             	mov    %rdx,%rdi
ffffffff8002d262:	e8 ca 91 00 00       	call   ffffffff80036431 <ZydisGetInstructionEncodingInfo>
ffffffff8002d267:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
ffffffff8002d26b:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
ffffffff8002d26f:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff8002d273:	48 89 ce             	mov    %rcx,%rsi
ffffffff8002d276:	48 89 c7             	mov    %rax,%rdi
ffffffff8002d279:	e8 37 de ff ff       	call   ffffffff8002b0b5 <ZydisDecodeOptionalInstructionParts>
ffffffff8002d27e:	89 45 e0             	mov    %eax,-0x20(%rbp)
ffffffff8002d281:	8b 45 e0             	mov    -0x20(%rbp),%eax
ffffffff8002d284:	85 c0                	test   %eax,%eax
ffffffff8002d286:	79 08                	jns    ffffffff8002d290 <ZydisDecodeInstruction+0x4e8>
ffffffff8002d288:	8b 45 e0             	mov    -0x20(%rbp),%eax
ffffffff8002d28b:	e9 52 03 00 00       	jmp    ffffffff8002d5e2 <ZydisDecodeInstruction+0x83a>
ffffffff8002d290:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
ffffffff8002d294:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
ffffffff8002d298:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff8002d29c:	48 89 ce             	mov    %rcx,%rsi
ffffffff8002d29f:	48 89 c7             	mov    %rax,%rdi
ffffffff8002d2a2:	e8 70 f5 ff ff       	call   ffffffff8002c817 <ZydisCheckErrorConditions>
ffffffff8002d2a7:	89 45 dc             	mov    %eax,-0x24(%rbp)
ffffffff8002d2aa:	8b 45 dc             	mov    -0x24(%rbp),%eax
ffffffff8002d2ad:	85 c0                	test   %eax,%eax
ffffffff8002d2af:	79 08                	jns    ffffffff8002d2b9 <ZydisDecodeInstruction+0x511>
ffffffff8002d2b1:	8b 45 dc             	mov    -0x24(%rbp),%eax
ffffffff8002d2b4:	e9 29 03 00 00       	jmp    ffffffff8002d5e2 <ZydisDecodeInstruction+0x83a>
ffffffff8002d2b9:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff8002d2bd:	8b 40 0c             	mov    0xc(%rax),%eax
ffffffff8002d2c0:	83 f8 01             	cmp    $0x1,%eax
ffffffff8002d2c3:	0f 85 d6 00 00 00    	jne    ffffffff8002d39f <ZydisDecodeInstruction+0x5f7>
ffffffff8002d2c9:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff8002d2cd:	48 8d 50 14          	lea    0x14(%rax),%rdx
ffffffff8002d2d1:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
ffffffff8002d2d5:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff8002d2d9:	48 89 ce             	mov    %rcx,%rsi
ffffffff8002d2dc:	48 89 c7             	mov    %rax,%rdi
ffffffff8002d2df:	e8 46 90 ff ff       	call   ffffffff8002632a <ZydisInputNext>
ffffffff8002d2e4:	89 45 d8             	mov    %eax,-0x28(%rbp)
ffffffff8002d2e7:	8b 45 d8             	mov    -0x28(%rbp),%eax
ffffffff8002d2ea:	85 c0                	test   %eax,%eax
ffffffff8002d2ec:	79 08                	jns    ffffffff8002d2f6 <ZydisDecodeInstruction+0x54e>
ffffffff8002d2ee:	8b 45 d8             	mov    -0x28(%rbp),%eax
ffffffff8002d2f1:	e9 ec 02 00 00       	jmp    ffffffff8002d5e2 <ZydisDecodeInstruction+0x83a>
ffffffff8002d2f6:	e8 7a 8f ff ff       	call   ffffffff80026275 <ZydisDecoderTreeGetRootNode>
ffffffff8002d2fb:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8002d2ff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8002d303:	be 0f 00 00 00       	mov    $0xf,%esi
ffffffff8002d308:	48 89 c7             	mov    %rax,%rdi
ffffffff8002d30b:	e8 b8 8a 00 00       	call   ffffffff80035dc8 <ZydisDecoderTreeGetChildNode>
ffffffff8002d310:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8002d314:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8002d318:	be 0f 00 00 00       	mov    $0xf,%esi
ffffffff8002d31d:	48 89 c7             	mov    %rax,%rdi
ffffffff8002d320:	e8 a3 8a 00 00       	call   ffffffff80035dc8 <ZydisDecoderTreeGetChildNode>
ffffffff8002d325:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8002d329:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff8002d32d:	0f b6 40 14          	movzbl 0x14(%rax),%eax
ffffffff8002d331:	0f b6 c0             	movzbl %al,%eax
ffffffff8002d334:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff8002d338:	89 c6                	mov    %eax,%esi
ffffffff8002d33a:	48 89 d7             	mov    %rdx,%rdi
ffffffff8002d33d:	e8 86 8a 00 00       	call   ffffffff80035dc8 <ZydisDecoderTreeGetChildNode>
ffffffff8002d342:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8002d346:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8002d34a:	0f b6 00             	movzbl (%rax),%eax
ffffffff8002d34d:	84 c0                	test   %al,%al
ffffffff8002d34f:	75 0a                	jne    ffffffff8002d35b <ZydisDecodeInstruction+0x5b3>
ffffffff8002d351:	b8 01 00 20 80       	mov    $0x80200001,%eax
ffffffff8002d356:	e9 87 02 00 00       	jmp    ffffffff8002d5e2 <ZydisDecodeInstruction+0x83a>
ffffffff8002d35b:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff8002d35f:	0f b6 80 20 01 00 00 	movzbl 0x120(%rax),%eax
ffffffff8002d366:	3c 03                	cmp    $0x3,%al
ffffffff8002d368:	0f 95 c0             	setne  %al
ffffffff8002d36b:	0f b6 c0             	movzbl %al,%eax
ffffffff8002d36e:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff8002d372:	89 c6                	mov    %eax,%esi
ffffffff8002d374:	48 89 d7             	mov    %rdx,%rdi
ffffffff8002d377:	e8 4c 8a 00 00       	call   ffffffff80035dc8 <ZydisDecoderTreeGetChildNode>
ffffffff8002d37c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8002d380:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8002d384:	0f b7 40 01          	movzwl 0x1(%rax),%eax
ffffffff8002d388:	0f b7 c0             	movzwl %ax,%eax
ffffffff8002d38b:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
ffffffff8002d38f:	8b 4a 0c             	mov    0xc(%rdx),%ecx
ffffffff8002d392:	48 8d 55 c8          	lea    -0x38(%rbp),%rdx
ffffffff8002d396:	89 c6                	mov    %eax,%esi
ffffffff8002d398:	89 cf                	mov    %ecx,%edi
ffffffff8002d39a:	e8 98 83 00 00       	call   ffffffff80035737 <ZydisGetInstructionDefinition>
ffffffff8002d39f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8002d3a3:	0f b6 10             	movzbl (%rax),%edx
ffffffff8002d3a6:	0f b6 40 01          	movzbl 0x1(%rax),%eax
ffffffff8002d3aa:	83 e0 07             	and    $0x7,%eax
ffffffff8002d3ad:	48 c1 e0 08          	shl    $0x8,%rax
ffffffff8002d3b1:	48 09 d0             	or     %rdx,%rax
ffffffff8002d3b4:	0f b7 c0             	movzwl %ax,%eax
ffffffff8002d3b7:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
ffffffff8002d3bb:	89 42 04             	mov    %eax,0x4(%rdx)
ffffffff8002d3be:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8002d3c2:	0f b6 40 01          	movzbl 0x1(%rax),%eax
ffffffff8002d3c6:	c0 e8 03             	shr    $0x3,%al
ffffffff8002d3c9:	83 e0 0f             	and    $0xf,%eax
ffffffff8002d3cc:	89 c2                	mov    %eax,%edx
ffffffff8002d3ce:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff8002d3d2:	88 50 18             	mov    %dl,0x18(%rax)
ffffffff8002d3d5:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8002d3d9:	0f b6 50 01          	movzbl 0x1(%rax),%edx
ffffffff8002d3dd:	c0 ea 07             	shr    $0x7,%dl
ffffffff8002d3e0:	0f b6 d2             	movzbl %dl,%edx
ffffffff8002d3e3:	0f b6 40 02          	movzbl 0x2(%rax),%eax
ffffffff8002d3e7:	83 e0 03             	and    $0x3,%eax
ffffffff8002d3ea:	48 01 c0             	add    %rax,%rax
ffffffff8002d3ed:	48 09 d0             	or     %rdx,%rax
ffffffff8002d3f0:	89 c2                	mov    %eax,%edx
ffffffff8002d3f2:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff8002d3f6:	88 50 19             	mov    %dl,0x19(%rax)
ffffffff8002d3f9:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff8002d3fd:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff8002d401:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
ffffffff8002d405:	48 89 10             	mov    %rdx,(%rax)
ffffffff8002d408:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8002d40c:	0f b6 50 05          	movzbl 0x5(%rax),%edx
ffffffff8002d410:	c0 ea 07             	shr    $0x7,%dl
ffffffff8002d413:	0f b6 d2             	movzbl %dl,%edx
ffffffff8002d416:	0f b6 40 06          	movzbl 0x6(%rax),%eax
ffffffff8002d41a:	83 e0 3f             	and    $0x3f,%eax
ffffffff8002d41d:	48 01 c0             	add    %rax,%rax
ffffffff8002d420:	48 09 d0             	or     %rdx,%rax
ffffffff8002d423:	0f b6 c0             	movzbl %al,%eax
ffffffff8002d426:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
ffffffff8002d42a:	89 42 5c             	mov    %eax,0x5c(%rdx)
ffffffff8002d42d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8002d431:	0f b6 50 06          	movzbl 0x6(%rax),%edx
ffffffff8002d435:	c0 ea 06             	shr    $0x6,%dl
ffffffff8002d438:	0f b6 d2             	movzbl %dl,%edx
ffffffff8002d43b:	0f b6 40 07          	movzbl 0x7(%rax),%eax
ffffffff8002d43f:	83 e0 3f             	and    $0x3f,%eax
ffffffff8002d442:	48 c1 e0 02          	shl    $0x2,%rax
ffffffff8002d446:	48 09 d0             	or     %rdx,%rax
ffffffff8002d449:	0f b6 c0             	movzbl %al,%eax
ffffffff8002d44c:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
ffffffff8002d450:	89 42 60             	mov    %eax,0x60(%rdx)
ffffffff8002d453:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8002d457:	0f b6 50 07          	movzbl 0x7(%rax),%edx
ffffffff8002d45b:	c0 ea 06             	shr    $0x6,%dl
ffffffff8002d45e:	0f b6 d2             	movzbl %dl,%edx
ffffffff8002d461:	0f b6 40 08          	movzbl 0x8(%rax),%eax
ffffffff8002d465:	83 e0 1f             	and    $0x1f,%eax
ffffffff8002d468:	48 c1 e0 02          	shl    $0x2,%rax
ffffffff8002d46c:	48 09 d0             	or     %rdx,%rax
ffffffff8002d46f:	0f b6 c0             	movzbl %al,%eax
ffffffff8002d472:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
ffffffff8002d476:	89 42 64             	mov    %eax,0x64(%rdx)
ffffffff8002d479:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8002d47d:	0f b6 40 08          	movzbl 0x8(%rax),%eax
ffffffff8002d481:	c0 e8 05             	shr    $0x5,%al
ffffffff8002d484:	83 e0 03             	and    $0x3,%eax
ffffffff8002d487:	0f b6 c0             	movzbl %al,%eax
ffffffff8002d48a:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
ffffffff8002d48e:	89 42 68             	mov    %eax,0x68(%rdx)
ffffffff8002d491:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff8002d495:	8b 40 68             	mov    0x68(%rax),%eax
ffffffff8002d498:	85 c0                	test   %eax,%eax
ffffffff8002d49a:	74 2e                	je     ffffffff8002d4ca <ZydisDecodeInstruction+0x722>
ffffffff8002d49c:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff8002d4a0:	8b 40 5c             	mov    0x5c(%rax),%eax
ffffffff8002d4a3:	83 f8 14             	cmp    $0x14,%eax
ffffffff8002d4a6:	74 22                	je     ffffffff8002d4ca <ZydisDecodeInstruction+0x722>
ffffffff8002d4a8:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff8002d4ac:	8b 40 5c             	mov    0x5c(%rax),%eax
ffffffff8002d4af:	83 f8 1c             	cmp    $0x1c,%eax
ffffffff8002d4b2:	74 16                	je     ffffffff8002d4ca <ZydisDecodeInstruction+0x722>
ffffffff8002d4b4:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff8002d4b8:	8b 40 5c             	mov    0x5c(%rax),%eax
ffffffff8002d4bb:	83 f8 60             	cmp    $0x60,%eax
ffffffff8002d4be:	74 0a                	je     ffffffff8002d4ca <ZydisDecodeInstruction+0x722>
ffffffff8002d4c0:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff8002d4c4:	8b 40 5c             	mov    0x5c(%rax),%eax
ffffffff8002d4c7:	83 f8 4b             	cmp    $0x4b,%eax
ffffffff8002d4ca:	90                   	nop
ffffffff8002d4cb:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8002d4cf:	0f b6 50 08          	movzbl 0x8(%rax),%edx
ffffffff8002d4d3:	c0 ea 07             	shr    $0x7,%dl
ffffffff8002d4d6:	0f b6 d2             	movzbl %dl,%edx
ffffffff8002d4d9:	0f b6 40 09          	movzbl 0x9(%rax),%eax
ffffffff8002d4dd:	83 e0 1f             	and    $0x1f,%eax
ffffffff8002d4e0:	48 01 c0             	add    %rax,%rax
ffffffff8002d4e3:	48 09 d0             	or     %rdx,%rax
ffffffff8002d4e6:	0f b6 c0             	movzbl %al,%eax
ffffffff8002d4e9:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
ffffffff8002d4ed:	89 42 6c             	mov    %eax,0x6c(%rdx)
ffffffff8002d4f0:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff8002d4f4:	48 8b 00             	mov    (%rax),%rax
ffffffff8002d4f7:	0f b6 40 08          	movzbl 0x8(%rax),%eax
ffffffff8002d4fb:	84 c0                	test   %al,%al
ffffffff8002d4fd:	0f 85 90 00 00 00    	jne    ffffffff8002d593 <ZydisDecodeInstruction+0x7eb>
ffffffff8002d503:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
ffffffff8002d507:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
ffffffff8002d50b:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff8002d50f:	48 89 ce             	mov    %rcx,%rsi
ffffffff8002d512:	48 89 c7             	mov    %rax,%rdi
ffffffff8002d515:	e8 8b c0 ff ff       	call   ffffffff800295a5 <ZydisSetAttributes>
ffffffff8002d51a:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff8002d51e:	8b 40 0c             	mov    0xc(%rax),%eax
ffffffff8002d521:	83 e8 02             	sub    $0x2,%eax
ffffffff8002d524:	83 f8 03             	cmp    $0x3,%eax
ffffffff8002d527:	77 1d                	ja     ffffffff8002d546 <ZydisDecodeInstruction+0x79e>
ffffffff8002d529:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
ffffffff8002d52d:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff8002d531:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff8002d535:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
ffffffff8002d539:	48 89 ce             	mov    %rcx,%rsi
ffffffff8002d53c:	48 89 c7             	mov    %rax,%rdi
ffffffff8002d53f:	e8 cf c9 ff ff       	call   ffffffff80029f13 <ZydisSetAVXInformation>
ffffffff8002d544:	eb 01                	jmp    ffffffff8002d547 <ZydisDecodeInstruction+0x79f>
ffffffff8002d546:	90                   	nop
ffffffff8002d547:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
ffffffff8002d54b:	48 8d 45 b8          	lea    -0x48(%rbp),%rax
ffffffff8002d54f:	48 89 c6             	mov    %rax,%rsi
ffffffff8002d552:	48 89 d7             	mov    %rdx,%rdi
ffffffff8002d555:	e8 bf 83 00 00       	call   ffffffff80035919 <ZydisGetAccessedFlags>
ffffffff8002d55a:	84 c0                	test   %al,%al
ffffffff8002d55c:	74 35                	je     ffffffff8002d593 <ZydisDecodeInstruction+0x7eb>
ffffffff8002d55e:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff8002d562:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff8002d566:	80 cc 02             	or     $0x2,%ah
ffffffff8002d569:	48 89 c2             	mov    %rax,%rdx
ffffffff8002d56c:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff8002d570:	48 89 50 20          	mov    %rdx,0x20(%rax)
ffffffff8002d574:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff8002d578:	48 89 c2             	mov    %rax,%rdx
ffffffff8002d57b:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff8002d57f:	48 89 50 28          	mov    %rdx,0x28(%rax)
ffffffff8002d583:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff8002d587:	48 8d 50 14          	lea    0x14(%rax),%rdx
ffffffff8002d58b:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff8002d58f:	48 89 50 30          	mov    %rdx,0x30(%rax)
ffffffff8002d593:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff8002d598:	eb 48                	jmp    ffffffff8002d5e2 <ZydisDecodeInstruction+0x83a>
ffffffff8002d59a:	eb fe                	jmp    ffffffff8002d59a <ZydisDecodeInstruction+0x7f2>
ffffffff8002d59c:	8b 45 e8             	mov    -0x18(%rbp),%eax
ffffffff8002d59f:	89 45 e4             	mov    %eax,-0x1c(%rbp)
ffffffff8002d5a2:	8b 45 e4             	mov    -0x1c(%rbp),%eax
ffffffff8002d5a5:	85 c0                	test   %eax,%eax
ffffffff8002d5a7:	79 05                	jns    ffffffff8002d5ae <ZydisDecodeInstruction+0x806>
ffffffff8002d5a9:	8b 45 e4             	mov    -0x1c(%rbp),%eax
ffffffff8002d5ac:	eb 34                	jmp    ffffffff8002d5e2 <ZydisDecodeInstruction+0x83a>
ffffffff8002d5ae:	0f b7 45 d6          	movzwl -0x2a(%rbp),%eax
ffffffff8002d5b2:	0f b7 c0             	movzwl %ax,%eax
ffffffff8002d5b5:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff8002d5b9:	89 c6                	mov    %eax,%esi
ffffffff8002d5bb:	48 89 d7             	mov    %rdx,%rdi
ffffffff8002d5be:	e8 05 88 00 00       	call   ffffffff80035dc8 <ZydisDecoderTreeGetChildNode>
ffffffff8002d5c3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8002d5c7:	eb 01                	jmp    ffffffff8002d5ca <ZydisDecodeInstruction+0x822>
ffffffff8002d5c9:	90                   	nop
ffffffff8002d5ca:	80 7d ef 00          	cmpb   $0x0,-0x11(%rbp)
ffffffff8002d5ce:	74 0c                	je     ffffffff8002d5dc <ZydisDecodeInstruction+0x834>
ffffffff8002d5d0:	0f b6 45 ef          	movzbl -0x11(%rbp),%eax
ffffffff8002d5d4:	84 c0                	test   %al,%al
ffffffff8002d5d6:	0f 89 f1 f7 ff ff    	jns    ffffffff8002cdcd <ZydisDecodeInstruction+0x25>
ffffffff8002d5dc:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff8002d5e1:	90                   	nop
ffffffff8002d5e2:	c9                   	leave  
ffffffff8002d5e3:	c3                   	ret    

ffffffff8002d5e4 <ZydisDecoderInit>:
ffffffff8002d5e4:	f3 0f 1e fa          	endbr64 
ffffffff8002d5e8:	55                   	push   %rbp
ffffffff8002d5e9:	48 89 e5             	mov    %rsp,%rbp
ffffffff8002d5ec:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff8002d5f0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8002d5f4:	89 75 f4             	mov    %esi,-0xc(%rbp)
ffffffff8002d5f7:	89 55 f0             	mov    %edx,-0x10(%rbp)
ffffffff8002d5fa:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff8002d5ff:	75 07                	jne    ffffffff8002d608 <ZydisDecoderInit+0x24>
ffffffff8002d601:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff8002d606:	eb 76                	jmp    ffffffff8002d67e <ZydisDecoderInit+0x9a>
ffffffff8002d608:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
ffffffff8002d60c:	74 0d                	je     ffffffff8002d61b <ZydisDecoderInit+0x37>
ffffffff8002d60e:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff8002d611:	83 e8 01             	sub    $0x1,%eax
ffffffff8002d614:	83 f8 04             	cmp    $0x4,%eax
ffffffff8002d617:	77 22                	ja     ffffffff8002d63b <ZydisDecoderInit+0x57>
ffffffff8002d619:	eb 0d                	jmp    ffffffff8002d628 <ZydisDecoderInit+0x44>
ffffffff8002d61b:	83 7d f0 02          	cmpl   $0x2,-0x10(%rbp)
ffffffff8002d61f:	74 21                	je     ffffffff8002d642 <ZydisDecoderInit+0x5e>
ffffffff8002d621:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff8002d626:	eb 56                	jmp    ffffffff8002d67e <ZydisDecoderInit+0x9a>
ffffffff8002d628:	83 7d f0 00          	cmpl   $0x0,-0x10(%rbp)
ffffffff8002d62c:	74 17                	je     ffffffff8002d645 <ZydisDecoderInit+0x61>
ffffffff8002d62e:	83 7d f0 01          	cmpl   $0x1,-0x10(%rbp)
ffffffff8002d632:	74 11                	je     ffffffff8002d645 <ZydisDecoderInit+0x61>
ffffffff8002d634:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff8002d639:	eb 43                	jmp    ffffffff8002d67e <ZydisDecoderInit+0x9a>
ffffffff8002d63b:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff8002d640:	eb 3c                	jmp    ffffffff8002d67e <ZydisDecoderInit+0x9a>
ffffffff8002d642:	90                   	nop
ffffffff8002d643:	eb 01                	jmp    ffffffff8002d646 <ZydisDecoderInit+0x62>
ffffffff8002d645:	90                   	nop
ffffffff8002d646:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8002d64a:	8b 55 f4             	mov    -0xc(%rbp),%edx
ffffffff8002d64d:	89 10                	mov    %edx,(%rax)
ffffffff8002d64f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8002d653:	8b 55 f0             	mov    -0x10(%rbp),%edx
ffffffff8002d656:	89 50 04             	mov    %edx,0x4(%rax)
ffffffff8002d659:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8002d65d:	48 83 c0 08          	add    $0x8,%rax
ffffffff8002d661:	ba 09 00 00 00       	mov    $0x9,%edx
ffffffff8002d666:	48 8d 0d 63 27 01 00 	lea    0x12763(%rip),%rcx        # ffffffff8003fdd0 <decoder_modes.0>
ffffffff8002d66d:	48 89 ce             	mov    %rcx,%rsi
ffffffff8002d670:	48 89 c7             	mov    %rax,%rdi
ffffffff8002d673:	e8 5e 8b ff ff       	call   ffffffff800261d6 <ZYAN_MEMCPY.lto_priv.7>
ffffffff8002d678:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff8002d67d:	90                   	nop
ffffffff8002d67e:	c9                   	leave  
ffffffff8002d67f:	c3                   	ret    

ffffffff8002d680 <ZydisDecoderEnableMode>:
ffffffff8002d680:	f3 0f 1e fa          	endbr64 
ffffffff8002d684:	55                   	push   %rbp
ffffffff8002d685:	48 89 e5             	mov    %rsp,%rbp
ffffffff8002d688:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff8002d68c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8002d690:	89 75 f4             	mov    %esi,-0xc(%rbp)
ffffffff8002d693:	89 d0                	mov    %edx,%eax
ffffffff8002d695:	88 45 f0             	mov    %al,-0x10(%rbp)
ffffffff8002d698:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff8002d69d:	74 06                	je     ffffffff8002d6a5 <ZydisDecoderEnableMode+0x25>
ffffffff8002d69f:	83 7d f4 08          	cmpl   $0x8,-0xc(%rbp)
ffffffff8002d6a3:	76 07                	jbe    ffffffff8002d6ac <ZydisDecoderEnableMode+0x2c>
ffffffff8002d6a5:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff8002d6aa:	eb 14                	jmp    ffffffff8002d6c0 <ZydisDecoderEnableMode+0x40>
ffffffff8002d6ac:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
ffffffff8002d6b0:	8b 55 f4             	mov    -0xc(%rbp),%edx
ffffffff8002d6b3:	0f b6 45 f0          	movzbl -0x10(%rbp),%eax
ffffffff8002d6b7:	88 44 11 08          	mov    %al,0x8(%rcx,%rdx,1)
ffffffff8002d6bb:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff8002d6c0:	c9                   	leave  
ffffffff8002d6c1:	c3                   	ret    

ffffffff8002d6c2 <ZydisDecoderDecodeFull>:
ffffffff8002d6c2:	f3 0f 1e fa          	endbr64 
ffffffff8002d6c6:	55                   	push   %rbp
ffffffff8002d6c7:	48 89 e5             	mov    %rsp,%rbp
ffffffff8002d6ca:	48 83 ec 60          	sub    $0x60,%rsp
ffffffff8002d6ce:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
ffffffff8002d6d2:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
ffffffff8002d6d6:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
ffffffff8002d6da:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
ffffffff8002d6de:	4c 89 45 a8          	mov    %r8,-0x58(%rbp)
ffffffff8002d6e2:	44 89 c8             	mov    %r9d,%eax
ffffffff8002d6e5:	8b 55 10             	mov    0x10(%rbp),%edx
ffffffff8002d6e8:	88 45 a4             	mov    %al,-0x5c(%rbp)
ffffffff8002d6eb:	89 d0                	mov    %edx,%eax
ffffffff8002d6ed:	88 45 a0             	mov    %al,-0x60(%rbp)
ffffffff8002d6f0:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
ffffffff8002d6f5:	74 28                	je     ffffffff8002d71f <ZydisDecoderDecodeFull+0x5d>
ffffffff8002d6f7:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
ffffffff8002d6fc:	74 21                	je     ffffffff8002d71f <ZydisDecoderDecodeFull+0x5d>
ffffffff8002d6fe:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
ffffffff8002d703:	74 1a                	je     ffffffff8002d71f <ZydisDecoderDecodeFull+0x5d>
ffffffff8002d705:	48 83 7d b0 00       	cmpq   $0x0,-0x50(%rbp)
ffffffff8002d70a:	74 13                	je     ffffffff8002d71f <ZydisDecoderDecodeFull+0x5d>
ffffffff8002d70c:	80 7d a4 00          	cmpb   $0x0,-0x5c(%rbp)
ffffffff8002d710:	74 07                	je     ffffffff8002d719 <ZydisDecoderDecodeFull+0x57>
ffffffff8002d712:	48 83 7d a8 00       	cmpq   $0x0,-0x58(%rbp)
ffffffff8002d717:	74 06                	je     ffffffff8002d71f <ZydisDecoderDecodeFull+0x5d>
ffffffff8002d719:	80 7d a4 0a          	cmpb   $0xa,-0x5c(%rbp)
ffffffff8002d71d:	76 0a                	jbe    ffffffff8002d729 <ZydisDecoderDecodeFull+0x67>
ffffffff8002d71f:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff8002d724:	e9 a6 00 00 00       	jmp    ffffffff8002d7cf <ZydisDecoderDecodeFull+0x10d>
ffffffff8002d729:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8002d72d:	0f b6 40 08          	movzbl 0x8(%rax),%eax
ffffffff8002d731:	84 c0                	test   %al,%al
ffffffff8002d733:	74 0a                	je     ffffffff8002d73f <ZydisDecoderDecodeFull+0x7d>
ffffffff8002d735:	b8 0d 00 10 80       	mov    $0x8010000d,%eax
ffffffff8002d73a:	e9 90 00 00 00       	jmp    ffffffff8002d7cf <ZydisDecoderDecodeFull+0x10d>
ffffffff8002d73f:	48 8b 75 b0          	mov    -0x50(%rbp),%rsi
ffffffff8002d743:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
ffffffff8002d747:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
ffffffff8002d74b:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
ffffffff8002d74f:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
ffffffff8002d753:	49 89 f0             	mov    %rsi,%r8
ffffffff8002d756:	48 89 c6             	mov    %rax,%rsi
ffffffff8002d759:	e8 73 00 00 00       	call   ffffffff8002d7d1 <ZydisDecoderDecodeInstruction>
ffffffff8002d75e:	89 45 fc             	mov    %eax,-0x4(%rbp)
ffffffff8002d761:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8002d764:	85 c0                	test   %eax,%eax
ffffffff8002d766:	79 05                	jns    ffffffff8002d76d <ZydisDecoderDecodeFull+0xab>
ffffffff8002d768:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8002d76b:	eb 62                	jmp    ffffffff8002d7cf <ZydisDecoderDecodeFull+0x10d>
ffffffff8002d76d:	0f b6 45 a0          	movzbl -0x60(%rbp),%eax
ffffffff8002d771:	83 e0 01             	and    $0x1,%eax
ffffffff8002d774:	88 45 fb             	mov    %al,-0x5(%rbp)
ffffffff8002d777:	80 7d fb 00          	cmpb   $0x0,-0x5(%rbp)
ffffffff8002d77b:	74 0a                	je     ffffffff8002d787 <ZydisDecoderDecodeFull+0xc5>
ffffffff8002d77d:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
ffffffff8002d781:	0f b6 40 19          	movzbl 0x19(%rax),%eax
ffffffff8002d785:	eb 08                	jmp    ffffffff8002d78f <ZydisDecoderDecodeFull+0xcd>
ffffffff8002d787:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
ffffffff8002d78b:	0f b6 40 18          	movzbl 0x18(%rax),%eax
ffffffff8002d78f:	88 45 fa             	mov    %al,-0x6(%rbp)
ffffffff8002d792:	0f b6 55 a4          	movzbl -0x5c(%rbp),%edx
ffffffff8002d796:	0f b6 45 fa          	movzbl -0x6(%rbp),%eax
ffffffff8002d79a:	38 c2                	cmp    %al,%dl
ffffffff8002d79c:	0f 46 c2             	cmovbe %edx,%eax
ffffffff8002d79f:	88 45 a4             	mov    %al,-0x5c(%rbp)
ffffffff8002d7a2:	80 7d a4 00          	cmpb   $0x0,-0x5c(%rbp)
ffffffff8002d7a6:	75 07                	jne    ffffffff8002d7af <ZydisDecoderDecodeFull+0xed>
ffffffff8002d7a8:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff8002d7ad:	eb 20                	jmp    ffffffff8002d7cf <ZydisDecoderDecodeFull+0x10d>
ffffffff8002d7af:	0f b6 75 a4          	movzbl -0x5c(%rbp),%esi
ffffffff8002d7b3:	48 8b 4d a8          	mov    -0x58(%rbp),%rcx
ffffffff8002d7b7:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
ffffffff8002d7bb:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
ffffffff8002d7bf:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
ffffffff8002d7c3:	41 89 f0             	mov    %esi,%r8d
ffffffff8002d7c6:	48 89 c6             	mov    %rax,%rsi
ffffffff8002d7c9:	e8 53 01 00 00       	call   ffffffff8002d921 <ZydisDecoderDecodeOperands>
ffffffff8002d7ce:	90                   	nop
ffffffff8002d7cf:	c9                   	leave  
ffffffff8002d7d0:	c3                   	ret    

ffffffff8002d7d1 <ZydisDecoderDecodeInstruction>:
ffffffff8002d7d1:	f3 0f 1e fa          	endbr64 
ffffffff8002d7d5:	55                   	push   %rbp
ffffffff8002d7d6:	48 89 e5             	mov    %rsp,%rbp
ffffffff8002d7d9:	48 81 ec 90 00 00 00 	sub    $0x90,%rsp
ffffffff8002d7e0:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
ffffffff8002d7e4:	48 89 75 90          	mov    %rsi,-0x70(%rbp)
ffffffff8002d7e8:	48 89 55 88          	mov    %rdx,-0x78(%rbp)
ffffffff8002d7ec:	48 89 4d 80          	mov    %rcx,-0x80(%rbp)
ffffffff8002d7f0:	4c 89 85 78 ff ff ff 	mov    %r8,-0x88(%rbp)
ffffffff8002d7f7:	48 83 7d 98 00       	cmpq   $0x0,-0x68(%rbp)
ffffffff8002d7fc:	74 0a                	je     ffffffff8002d808 <ZydisDecoderDecodeInstruction+0x37>
ffffffff8002d7fe:	48 83 bd 78 ff ff ff 	cmpq   $0x0,-0x88(%rbp)
ffffffff8002d805:	00 
ffffffff8002d806:	75 0a                	jne    ffffffff8002d812 <ZydisDecoderDecodeInstruction+0x41>
ffffffff8002d808:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff8002d80d:	e9 0d 01 00 00       	jmp    ffffffff8002d91f <ZydisDecoderDecodeInstruction+0x14e>
ffffffff8002d812:	48 83 7d 88 00       	cmpq   $0x0,-0x78(%rbp)
ffffffff8002d817:	74 07                	je     ffffffff8002d820 <ZydisDecoderDecodeInstruction+0x4f>
ffffffff8002d819:	48 83 7d 80 00       	cmpq   $0x0,-0x80(%rbp)
ffffffff8002d81e:	75 0a                	jne    ffffffff8002d82a <ZydisDecoderDecodeInstruction+0x59>
ffffffff8002d820:	b8 00 00 20 80       	mov    $0x80200000,%eax
ffffffff8002d825:	e9 f5 00 00 00       	jmp    ffffffff8002d91f <ZydisDecoderDecodeInstruction+0x14e>
ffffffff8002d82a:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
ffffffff8002d82e:	ba 30 00 00 00       	mov    $0x30,%edx
ffffffff8002d833:	be 00 00 00 00       	mov    $0x0,%esi
ffffffff8002d838:	48 89 c7             	mov    %rax,%rdi
ffffffff8002d83b:	e8 f0 89 ff ff       	call   ffffffff80026230 <ZYAN_MEMSET.lto_priv.4>
ffffffff8002d840:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff8002d844:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
ffffffff8002d848:	48 8b 45 88          	mov    -0x78(%rbp),%rax
ffffffff8002d84c:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
ffffffff8002d850:	48 8b 45 80          	mov    -0x80(%rbp),%rax
ffffffff8002d854:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
ffffffff8002d858:	c6 45 ec ff          	movb   $0xff,-0x14(%rbp)
ffffffff8002d85c:	48 83 7d 90 00       	cmpq   $0x0,-0x70(%rbp)
ffffffff8002d861:	75 08                	jne    ffffffff8002d86b <ZydisDecoderDecodeInstruction+0x9a>
ffffffff8002d863:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
ffffffff8002d867:	48 89 45 90          	mov    %rax,-0x70(%rbp)
ffffffff8002d86b:	48 8b 45 90          	mov    -0x70(%rbp),%rax
ffffffff8002d86f:	ba 20 00 00 00       	mov    $0x20,%edx
ffffffff8002d874:	be 00 00 00 00       	mov    $0x0,%esi
ffffffff8002d879:	48 89 c7             	mov    %rax,%rdi
ffffffff8002d87c:	e8 af 89 ff ff       	call   ffffffff80026230 <ZYAN_MEMSET.lto_priv.4>
ffffffff8002d881:	48 8b 45 90          	mov    -0x70(%rbp),%rax
ffffffff8002d885:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
ffffffff8002d889:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
ffffffff8002d890:	ba 68 01 00 00       	mov    $0x168,%edx
ffffffff8002d895:	be 00 00 00 00       	mov    $0x0,%esi
ffffffff8002d89a:	48 89 c7             	mov    %rax,%rdi
ffffffff8002d89d:	e8 8e 89 ff ff       	call   ffffffff80026230 <ZYAN_MEMSET.lto_priv.4>
ffffffff8002d8a2:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff8002d8a6:	8b 10                	mov    (%rax),%edx
ffffffff8002d8a8:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
ffffffff8002d8af:	89 10                	mov    %edx,(%rax)
ffffffff8002d8b1:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff8002d8b5:	8b 40 04             	mov    0x4(%rax),%eax
ffffffff8002d8b8:	ba 10 00 00 00       	mov    $0x10,%edx
ffffffff8002d8bd:	89 c1                	mov    %eax,%ecx
ffffffff8002d8bf:	d3 e2                	shl    %cl,%edx
ffffffff8002d8c1:	89 d0                	mov    %edx,%eax
ffffffff8002d8c3:	89 c2                	mov    %eax,%edx
ffffffff8002d8c5:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
ffffffff8002d8cc:	88 50 15             	mov    %dl,0x15(%rax)
ffffffff8002d8cf:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
ffffffff8002d8d6:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
ffffffff8002d8da:	48 89 d6             	mov    %rdx,%rsi
ffffffff8002d8dd:	48 89 c7             	mov    %rax,%rdi
ffffffff8002d8e0:	e8 1f d4 ff ff       	call   ffffffff8002ad04 <ZydisCollectOptionalPrefixes>
ffffffff8002d8e5:	89 45 fc             	mov    %eax,-0x4(%rbp)
ffffffff8002d8e8:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8002d8eb:	85 c0                	test   %eax,%eax
ffffffff8002d8ed:	79 05                	jns    ffffffff8002d8f4 <ZydisDecoderDecodeInstruction+0x123>
ffffffff8002d8ef:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8002d8f2:	eb 2b                	jmp    ffffffff8002d91f <ZydisDecoderDecodeInstruction+0x14e>
ffffffff8002d8f4:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
ffffffff8002d8fb:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
ffffffff8002d8ff:	48 89 d6             	mov    %rdx,%rsi
ffffffff8002d902:	48 89 c7             	mov    %rax,%rdi
ffffffff8002d905:	e8 9e f4 ff ff       	call   ffffffff8002cda8 <ZydisDecodeInstruction>
ffffffff8002d90a:	89 45 f8             	mov    %eax,-0x8(%rbp)
ffffffff8002d90d:	8b 45 f8             	mov    -0x8(%rbp),%eax
ffffffff8002d910:	85 c0                	test   %eax,%eax
ffffffff8002d912:	79 05                	jns    ffffffff8002d919 <ZydisDecoderDecodeInstruction+0x148>
ffffffff8002d914:	8b 45 f8             	mov    -0x8(%rbp),%eax
ffffffff8002d917:	eb 06                	jmp    ffffffff8002d91f <ZydisDecoderDecodeInstruction+0x14e>
ffffffff8002d919:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff8002d91e:	90                   	nop
ffffffff8002d91f:	c9                   	leave  
ffffffff8002d920:	c3                   	ret    

ffffffff8002d921 <ZydisDecoderDecodeOperands>:
ffffffff8002d921:	f3 0f 1e fa          	endbr64 
ffffffff8002d925:	55                   	push   %rbp
ffffffff8002d926:	48 89 e5             	mov    %rsp,%rbp
ffffffff8002d929:	48 83 ec 30          	sub    $0x30,%rsp
ffffffff8002d92d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8002d931:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff8002d935:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
ffffffff8002d939:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
ffffffff8002d93d:	44 89 c0             	mov    %r8d,%eax
ffffffff8002d940:	88 45 dc             	mov    %al,-0x24(%rbp)
ffffffff8002d943:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff8002d948:	74 2d                	je     ffffffff8002d977 <ZydisDecoderDecodeOperands+0x56>
ffffffff8002d94a:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
ffffffff8002d94f:	74 26                	je     ffffffff8002d977 <ZydisDecoderDecodeOperands+0x56>
ffffffff8002d951:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8002d955:	48 8b 00             	mov    (%rax),%rax
ffffffff8002d958:	48 85 c0             	test   %rax,%rax
ffffffff8002d95b:	74 1a                	je     ffffffff8002d977 <ZydisDecoderDecodeOperands+0x56>
ffffffff8002d95d:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
ffffffff8002d962:	74 13                	je     ffffffff8002d977 <ZydisDecoderDecodeOperands+0x56>
ffffffff8002d964:	80 7d dc 00          	cmpb   $0x0,-0x24(%rbp)
ffffffff8002d968:	74 07                	je     ffffffff8002d971 <ZydisDecoderDecodeOperands+0x50>
ffffffff8002d96a:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
ffffffff8002d96f:	74 06                	je     ffffffff8002d977 <ZydisDecoderDecodeOperands+0x56>
ffffffff8002d971:	80 7d dc 0a          	cmpb   $0xa,-0x24(%rbp)
ffffffff8002d975:	76 07                	jbe    ffffffff8002d97e <ZydisDecoderDecodeOperands+0x5d>
ffffffff8002d977:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff8002d97c:	eb 53                	jmp    ffffffff8002d9d1 <ZydisDecoderDecodeOperands+0xb0>
ffffffff8002d97e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8002d982:	0f b6 40 08          	movzbl 0x8(%rax),%eax
ffffffff8002d986:	84 c0                	test   %al,%al
ffffffff8002d988:	74 07                	je     ffffffff8002d991 <ZydisDecoderDecodeOperands+0x70>
ffffffff8002d98a:	b8 0d 00 10 80       	mov    $0x8010000d,%eax
ffffffff8002d98f:	eb 40                	jmp    ffffffff8002d9d1 <ZydisDecoderDecodeOperands+0xb0>
ffffffff8002d991:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002d995:	0f b6 40 18          	movzbl 0x18(%rax),%eax
ffffffff8002d999:	0f b6 55 dc          	movzbl -0x24(%rbp),%edx
ffffffff8002d99d:	38 c2                	cmp    %al,%dl
ffffffff8002d99f:	0f 46 c2             	cmovbe %edx,%eax
ffffffff8002d9a2:	88 45 dc             	mov    %al,-0x24(%rbp)
ffffffff8002d9a5:	80 7d dc 00          	cmpb   $0x0,-0x24(%rbp)
ffffffff8002d9a9:	75 07                	jne    ffffffff8002d9b2 <ZydisDecoderDecodeOperands+0x91>
ffffffff8002d9ab:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff8002d9b0:	eb 1f                	jmp    ffffffff8002d9d1 <ZydisDecoderDecodeOperands+0xb0>
ffffffff8002d9b2:	0f b6 7d dc          	movzbl -0x24(%rbp),%edi
ffffffff8002d9b6:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
ffffffff8002d9ba:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff8002d9be:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
ffffffff8002d9c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8002d9c6:	41 89 f8             	mov    %edi,%r8d
ffffffff8002d9c9:	48 89 c7             	mov    %rax,%rdi
ffffffff8002d9cc:	e8 57 ad ff ff       	call   ffffffff80028728 <ZydisDecodeOperands>
ffffffff8002d9d1:	c9                   	leave  
ffffffff8002d9d2:	c3                   	ret    

ffffffff8002d9d3 <ZYAN_MEMCPY.lto_priv.8>:
ffffffff8002d9d3:	55                   	push   %rbp
ffffffff8002d9d4:	48 89 e5             	mov    %rsp,%rbp
ffffffff8002d9d7:	48 83 ec 28          	sub    $0x28,%rsp
ffffffff8002d9db:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff8002d9df:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
ffffffff8002d9e3:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
ffffffff8002d9e7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002d9eb:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8002d9ef:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8002d9f3:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff8002d9f7:	eb 1d                	jmp    ffffffff8002da16 <ZYAN_MEMCPY.lto_priv.8+0x43>
ffffffff8002d9f9:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff8002d9fd:	48 8d 42 01          	lea    0x1(%rdx),%rax
ffffffff8002da01:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff8002da05:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8002da09:	48 8d 48 01          	lea    0x1(%rax),%rcx
ffffffff8002da0d:	48 89 4d f8          	mov    %rcx,-0x8(%rbp)
ffffffff8002da11:	0f b6 12             	movzbl (%rdx),%edx
ffffffff8002da14:	88 10                	mov    %dl,(%rax)
ffffffff8002da16:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8002da1a:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
ffffffff8002da1e:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
ffffffff8002da22:	48 85 c0             	test   %rax,%rax
ffffffff8002da25:	75 d2                	jne    ffffffff8002d9f9 <ZYAN_MEMCPY.lto_priv.8+0x26>
ffffffff8002da27:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002da2b:	c9                   	leave  
ffffffff8002da2c:	c3                   	ret    

ffffffff8002da2d <ZYAN_STRLEN.lto_priv.2>:
ffffffff8002da2d:	55                   	push   %rbp
ffffffff8002da2e:	48 89 e5             	mov    %rsp,%rbp
ffffffff8002da31:	48 83 ec 18          	sub    $0x18,%rsp
ffffffff8002da35:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff8002da39:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002da3d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8002da41:	eb 05                	jmp    ffffffff8002da48 <ZYAN_STRLEN.lto_priv.2+0x1b>
ffffffff8002da43:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
ffffffff8002da48:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002da4c:	0f b6 00             	movzbl (%rax),%eax
ffffffff8002da4f:	84 c0                	test   %al,%al
ffffffff8002da51:	75 f0                	jne    ffffffff8002da43 <ZYAN_STRLEN.lto_priv.2+0x16>
ffffffff8002da53:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002da57:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
ffffffff8002da5b:	c9                   	leave  
ffffffff8002da5c:	c3                   	ret    

ffffffff8002da5d <ZydisFormatterBufferInit>:
ffffffff8002da5d:	f3 0f 1e fa          	endbr64 
ffffffff8002da61:	55                   	push   %rbp
ffffffff8002da62:	48 89 e5             	mov    %rsp,%rbp
ffffffff8002da65:	48 83 ec 18          	sub    $0x18,%rsp
ffffffff8002da69:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8002da6d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff8002da71:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
ffffffff8002da75:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8002da79:	c6 00 00             	movb   $0x0,(%rax)
ffffffff8002da7c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8002da80:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
ffffffff8002da87:	00 
ffffffff8002da88:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8002da8c:	c6 40 10 01          	movb   $0x1,0x10(%rax)
ffffffff8002da90:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8002da94:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)
ffffffff8002da9b:	00 
ffffffff8002da9c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8002daa0:	c6 40 20 01          	movb   $0x1,0x20(%rax)
ffffffff8002daa4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8002daa8:	c6 40 21 00          	movb   $0x0,0x21(%rax)
ffffffff8002daac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8002dab0:	48 c7 40 40 00 00 00 	movq   $0x0,0x40(%rax)
ffffffff8002dab7:	00 
ffffffff8002dab8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8002dabc:	48 c7 40 38 01 00 00 	movq   $0x1,0x38(%rax)
ffffffff8002dac3:	00 
ffffffff8002dac4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8002dac8:	48 c7 40 28 01 00 00 	movq   $0x1,0x28(%rax)
ffffffff8002dacf:	00 
ffffffff8002dad0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8002dad4:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff8002dad8:	48 89 50 30          	mov    %rdx,0x30(%rax)
ffffffff8002dadc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8002dae0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff8002dae4:	48 89 50 48          	mov    %rdx,0x48(%rax)
ffffffff8002dae8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8002daec:	c6 00 00             	movb   $0x0,(%rax)
ffffffff8002daef:	90                   	nop
ffffffff8002daf0:	c9                   	leave  
ffffffff8002daf1:	c3                   	ret    

ffffffff8002daf2 <ZydisFormatterBufferInitTokenized>:
ffffffff8002daf2:	f3 0f 1e fa          	endbr64 
ffffffff8002daf6:	55                   	push   %rbp
ffffffff8002daf7:	48 89 e5             	mov    %rsp,%rbp
ffffffff8002dafa:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff8002dafe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8002db02:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff8002db06:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
ffffffff8002db0a:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
ffffffff8002db0e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8002db12:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff8002db16:	48 89 10             	mov    %rdx,(%rax)
ffffffff8002db19:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8002db1d:	48 8b 00             	mov    (%rax),%rax
ffffffff8002db20:	c6 00 00             	movb   $0x0,(%rax)
ffffffff8002db23:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8002db27:	48 8b 00             	mov    (%rax),%rax
ffffffff8002db2a:	c6 40 01 00          	movb   $0x0,0x1(%rax)
ffffffff8002db2e:	48 83 45 e8 02       	addq   $0x2,-0x18(%rbp)
ffffffff8002db33:	48 83 6d e0 02       	subq   $0x2,-0x20(%rbp)
ffffffff8002db38:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8002db3c:	c6 00 01             	movb   $0x1,(%rax)
ffffffff8002db3f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8002db43:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff8002db47:	48 89 50 08          	mov    %rdx,0x8(%rax)
ffffffff8002db4b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8002db4f:	c6 40 10 01          	movb   $0x1,0x10(%rax)
ffffffff8002db53:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8002db57:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)
ffffffff8002db5e:	00 
ffffffff8002db5f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8002db63:	c6 40 20 01          	movb   $0x1,0x20(%rax)
ffffffff8002db67:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8002db6b:	c6 40 21 00          	movb   $0x0,0x21(%rax)
ffffffff8002db6f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8002db73:	48 c7 40 40 00 00 00 	movq   $0x0,0x40(%rax)
ffffffff8002db7a:	00 
ffffffff8002db7b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8002db7f:	48 c7 40 38 01 00 00 	movq   $0x1,0x38(%rax)
ffffffff8002db86:	00 
ffffffff8002db87:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8002db8b:	48 c7 40 28 01 00 00 	movq   $0x1,0x28(%rax)
ffffffff8002db92:	00 
ffffffff8002db93:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8002db97:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff8002db9b:	48 89 50 30          	mov    %rdx,0x30(%rax)
ffffffff8002db9f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8002dba3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff8002dba7:	48 89 50 48          	mov    %rdx,0x48(%rax)
ffffffff8002dbab:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002dbaf:	c6 00 00             	movb   $0x0,(%rax)
ffffffff8002dbb2:	90                   	nop
ffffffff8002dbb3:	c9                   	leave  
ffffffff8002dbb4:	c3                   	ret    

ffffffff8002dbb5 <ZydisFormatterInit>:
ffffffff8002dbb5:	f3 0f 1e fa          	endbr64 
ffffffff8002dbb9:	55                   	push   %rbp
ffffffff8002dbba:	48 89 e5             	mov    %rsp,%rbp
ffffffff8002dbbd:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff8002dbc1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8002dbc5:	89 75 f4             	mov    %esi,-0xc(%rbp)
ffffffff8002dbc8:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff8002dbcd:	74 06                	je     ffffffff8002dbd5 <ZydisFormatterInit+0x20>
ffffffff8002dbcf:	83 7d f4 02          	cmpl   $0x2,-0xc(%rbp)
ffffffff8002dbd3:	76 07                	jbe    ffffffff8002dbdc <ZydisFormatterInit+0x27>
ffffffff8002dbd5:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff8002dbda:	eb 2f                	jmp    ffffffff8002dc0b <ZydisFormatterInit+0x56>
ffffffff8002dbdc:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff8002dbdf:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
ffffffff8002dbe6:	00 
ffffffff8002dbe7:	48 8d 05 42 bf 07 00 	lea    0x7bf42(%rip),%rax        # ffffffff800a9b30 <FORMATTER_PRESETS>
ffffffff8002dbee:	48 8b 0c 02          	mov    (%rdx,%rax,1),%rcx
ffffffff8002dbf2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8002dbf6:	ba 48 02 00 00       	mov    $0x248,%edx
ffffffff8002dbfb:	48 89 ce             	mov    %rcx,%rsi
ffffffff8002dbfe:	48 89 c7             	mov    %rax,%rdi
ffffffff8002dc01:	e8 cd fd ff ff       	call   ffffffff8002d9d3 <ZYAN_MEMCPY.lto_priv.8>
ffffffff8002dc06:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff8002dc0b:	c9                   	leave  
ffffffff8002dc0c:	c3                   	ret    

ffffffff8002dc0d <ZydisFormatterSetProperty>:
ffffffff8002dc0d:	f3 0f 1e fa          	endbr64 
ffffffff8002dc11:	55                   	push   %rbp
ffffffff8002dc12:	48 89 e5             	mov    %rsp,%rbp
ffffffff8002dc15:	48 83 ec 28          	sub    $0x28,%rsp
ffffffff8002dc19:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff8002dc1d:	89 75 e4             	mov    %esi,-0x1c(%rbp)
ffffffff8002dc20:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
ffffffff8002dc24:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
ffffffff8002dc29:	75 0a                	jne    ffffffff8002dc35 <ZydisFormatterSetProperty+0x28>
ffffffff8002dc2b:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff8002dc30:	e9 5f 05 00 00       	jmp    ffffffff8002e194 <ZydisFormatterSetProperty+0x587>
ffffffff8002dc35:	c7 45 fc ff ff ff ff 	movl   $0xffffffff,-0x4(%rbp)
ffffffff8002dc3c:	c6 45 fb ff          	movb   $0xff,-0x5(%rbp)
ffffffff8002dc40:	83 7d e4 1b          	cmpl   $0x1b,-0x1c(%rbp)
ffffffff8002dc44:	0f 87 a0 03 00 00    	ja     ffffffff8002dfea <ZydisFormatterSetProperty+0x3dd>
ffffffff8002dc4a:	8b 45 e4             	mov    -0x1c(%rbp),%eax
ffffffff8002dc4d:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
ffffffff8002dc54:	00 
ffffffff8002dc55:	48 8d 05 80 21 01 00 	lea    0x12180(%rip),%rax        # ffffffff8003fddc <decoder_modes.0+0xc>
ffffffff8002dc5c:	8b 04 02             	mov    (%rdx,%rax,1),%eax
ffffffff8002dc5f:	48 98                	cltq   
ffffffff8002dc61:	48 8d 15 74 21 01 00 	lea    0x12174(%rip),%rdx        # ffffffff8003fddc <decoder_modes.0+0xc>
ffffffff8002dc68:	48 01 d0             	add    %rdx,%rax
ffffffff8002dc6b:	3e ff e0             	notrack jmp *%rax
ffffffff8002dc6e:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
ffffffff8002dc73:	0f 95 c0             	setne  %al
ffffffff8002dc76:	89 c2                	mov    %eax,%edx
ffffffff8002dc78:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002dc7c:	88 50 04             	mov    %dl,0x4(%rax)
ffffffff8002dc7f:	e9 70 03 00 00       	jmp    ffffffff8002dff4 <ZydisFormatterSetProperty+0x3e7>
ffffffff8002dc84:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
ffffffff8002dc89:	0f 95 c0             	setne  %al
ffffffff8002dc8c:	89 c2                	mov    %eax,%edx
ffffffff8002dc8e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002dc92:	88 50 05             	mov    %dl,0x5(%rax)
ffffffff8002dc95:	e9 5a 03 00 00       	jmp    ffffffff8002dff4 <ZydisFormatterSetProperty+0x3e7>
ffffffff8002dc9a:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
ffffffff8002dc9f:	0f 95 c0             	setne  %al
ffffffff8002dca2:	89 c2                	mov    %eax,%edx
ffffffff8002dca4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002dca8:	88 50 06             	mov    %dl,0x6(%rax)
ffffffff8002dcab:	e9 44 03 00 00       	jmp    ffffffff8002dff4 <ZydisFormatterSetProperty+0x3e7>
ffffffff8002dcb0:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
ffffffff8002dcb5:	0f 95 c0             	setne  %al
ffffffff8002dcb8:	89 c2                	mov    %eax,%edx
ffffffff8002dcba:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002dcbe:	88 50 07             	mov    %dl,0x7(%rax)
ffffffff8002dcc1:	e9 2e 03 00 00       	jmp    ffffffff8002dff4 <ZydisFormatterSetProperty+0x3e7>
ffffffff8002dcc6:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
ffffffff8002dccb:	0f 95 c0             	setne  %al
ffffffff8002dcce:	89 c2                	mov    %eax,%edx
ffffffff8002dcd0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002dcd4:	88 50 08             	mov    %dl,0x8(%rax)
ffffffff8002dcd7:	e9 18 03 00 00       	jmp    ffffffff8002dff4 <ZydisFormatterSetProperty+0x3e7>
ffffffff8002dcdc:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
ffffffff8002dce1:	0f 95 c0             	setne  %al
ffffffff8002dce4:	89 c2                	mov    %eax,%edx
ffffffff8002dce6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002dcea:	88 50 09             	mov    %dl,0x9(%rax)
ffffffff8002dced:	e9 02 03 00 00       	jmp    ffffffff8002dff4 <ZydisFormatterSetProperty+0x3e7>
ffffffff8002dcf2:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
ffffffff8002dcf7:	0f 95 c0             	setne  %al
ffffffff8002dcfa:	89 c2                	mov    %eax,%edx
ffffffff8002dcfc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002dd00:	88 50 0a             	mov    %dl,0xa(%rax)
ffffffff8002dd03:	e9 ec 02 00 00       	jmp    ffffffff8002dff4 <ZydisFormatterSetProperty+0x3e7>
ffffffff8002dd08:	48 83 7d d8 01       	cmpq   $0x1,-0x28(%rbp)
ffffffff8002dd0d:	76 0a                	jbe    ffffffff8002dd19 <ZydisFormatterSetProperty+0x10c>
ffffffff8002dd0f:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff8002dd14:	e9 7b 04 00 00       	jmp    ffffffff8002e194 <ZydisFormatterSetProperty+0x587>
ffffffff8002dd19:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8002dd1d:	89 c2                	mov    %eax,%edx
ffffffff8002dd1f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002dd23:	89 50 0c             	mov    %edx,0xc(%rax)
ffffffff8002dd26:	e9 c9 02 00 00       	jmp    ffffffff8002dff4 <ZydisFormatterSetProperty+0x3e7>
ffffffff8002dd2b:	48 83 7d d8 02       	cmpq   $0x2,-0x28(%rbp)
ffffffff8002dd30:	76 0a                	jbe    ffffffff8002dd3c <ZydisFormatterSetProperty+0x12f>
ffffffff8002dd32:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff8002dd37:	e9 58 04 00 00       	jmp    ffffffff8002e194 <ZydisFormatterSetProperty+0x587>
ffffffff8002dd3c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8002dd40:	89 c2                	mov    %eax,%edx
ffffffff8002dd42:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002dd46:	89 50 10             	mov    %edx,0x10(%rax)
ffffffff8002dd49:	e9 a6 02 00 00       	jmp    ffffffff8002dff4 <ZydisFormatterSetProperty+0x3e7>
ffffffff8002dd4e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8002dd52:	83 f8 ff             	cmp    $0xffffffff,%eax
ffffffff8002dd55:	74 14                	je     ffffffff8002dd6b <ZydisFormatterSetProperty+0x15e>
ffffffff8002dd57:	48 81 7d d8 ff 00 00 	cmpq   $0xff,-0x28(%rbp)
ffffffff8002dd5e:	00 
ffffffff8002dd5f:	76 0a                	jbe    ffffffff8002dd6b <ZydisFormatterSetProperty+0x15e>
ffffffff8002dd61:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff8002dd66:	e9 29 04 00 00       	jmp    ffffffff8002e194 <ZydisFormatterSetProperty+0x587>
ffffffff8002dd6b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8002dd6f:	89 c2                	mov    %eax,%edx
ffffffff8002dd71:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002dd75:	89 50 14             	mov    %edx,0x14(%rax)
ffffffff8002dd78:	e9 77 02 00 00       	jmp    ffffffff8002dff4 <ZydisFormatterSetProperty+0x3e7>
ffffffff8002dd7d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8002dd81:	83 f8 ff             	cmp    $0xffffffff,%eax
ffffffff8002dd84:	74 14                	je     ffffffff8002dd9a <ZydisFormatterSetProperty+0x18d>
ffffffff8002dd86:	48 81 7d d8 ff 00 00 	cmpq   $0xff,-0x28(%rbp)
ffffffff8002dd8d:	00 
ffffffff8002dd8e:	76 0a                	jbe    ffffffff8002dd9a <ZydisFormatterSetProperty+0x18d>
ffffffff8002dd90:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff8002dd95:	e9 fa 03 00 00       	jmp    ffffffff8002e194 <ZydisFormatterSetProperty+0x587>
ffffffff8002dd9a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8002dd9e:	89 c2                	mov    %eax,%edx
ffffffff8002dda0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002dda4:	89 50 18             	mov    %edx,0x18(%rax)
ffffffff8002dda7:	e9 48 02 00 00       	jmp    ffffffff8002dff4 <ZydisFormatterSetProperty+0x3e7>
ffffffff8002ddac:	48 83 7d d8 01       	cmpq   $0x1,-0x28(%rbp)
ffffffff8002ddb1:	76 0a                	jbe    ffffffff8002ddbd <ZydisFormatterSetProperty+0x1b0>
ffffffff8002ddb3:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff8002ddb8:	e9 d7 03 00 00       	jmp    ffffffff8002e194 <ZydisFormatterSetProperty+0x587>
ffffffff8002ddbd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8002ddc1:	89 c2                	mov    %eax,%edx
ffffffff8002ddc3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002ddc7:	89 50 1c             	mov    %edx,0x1c(%rax)
ffffffff8002ddca:	e9 25 02 00 00       	jmp    ffffffff8002dff4 <ZydisFormatterSetProperty+0x3e7>
ffffffff8002ddcf:	48 83 7d d8 02       	cmpq   $0x2,-0x28(%rbp)
ffffffff8002ddd4:	76 0a                	jbe    ffffffff8002dde0 <ZydisFormatterSetProperty+0x1d3>
ffffffff8002ddd6:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff8002dddb:	e9 b4 03 00 00       	jmp    ffffffff8002e194 <ZydisFormatterSetProperty+0x587>
ffffffff8002dde0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8002dde4:	89 c2                	mov    %eax,%edx
ffffffff8002dde6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002ddea:	89 50 20             	mov    %edx,0x20(%rax)
ffffffff8002dded:	e9 02 02 00 00       	jmp    ffffffff8002dff4 <ZydisFormatterSetProperty+0x3e7>
ffffffff8002ddf2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8002ddf6:	83 f8 ff             	cmp    $0xffffffff,%eax
ffffffff8002ddf9:	75 3c                	jne    ffffffff8002de37 <ZydisFormatterSetProperty+0x22a>
ffffffff8002ddfb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002ddff:	8b 00                	mov    (%rax),%eax
ffffffff8002de01:	83 f8 02             	cmp    $0x2,%eax
ffffffff8002de04:	76 0a                	jbe    ffffffff8002de10 <ZydisFormatterSetProperty+0x203>
ffffffff8002de06:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff8002de0b:	e9 84 03 00 00       	jmp    ffffffff8002e194 <ZydisFormatterSetProperty+0x587>
ffffffff8002de10:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002de14:	8b 00                	mov    (%rax),%eax
ffffffff8002de16:	89 c0                	mov    %eax,%eax
ffffffff8002de18:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
ffffffff8002de1f:	00 
ffffffff8002de20:	48 8d 05 09 bd 07 00 	lea    0x7bd09(%rip),%rax        # ffffffff800a9b30 <FORMATTER_PRESETS>
ffffffff8002de27:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
ffffffff8002de2b:	8b 50 24             	mov    0x24(%rax),%edx
ffffffff8002de2e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002de32:	89 50 24             	mov    %edx,0x24(%rax)
ffffffff8002de35:	eb 14                	jmp    ffffffff8002de4b <ZydisFormatterSetProperty+0x23e>
ffffffff8002de37:	48 81 7d d8 ff 00 00 	cmpq   $0xff,-0x28(%rbp)
ffffffff8002de3e:	00 
ffffffff8002de3f:	76 0a                	jbe    ffffffff8002de4b <ZydisFormatterSetProperty+0x23e>
ffffffff8002de41:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff8002de46:	e9 49 03 00 00       	jmp    ffffffff8002e194 <ZydisFormatterSetProperty+0x587>
ffffffff8002de4b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8002de4f:	89 c2                	mov    %eax,%edx
ffffffff8002de51:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002de55:	89 50 24             	mov    %edx,0x24(%rax)
ffffffff8002de58:	e9 97 01 00 00       	jmp    ffffffff8002dff4 <ZydisFormatterSetProperty+0x3e7>
ffffffff8002de5d:	48 83 7d d8 01       	cmpq   $0x1,-0x28(%rbp)
ffffffff8002de62:	76 0a                	jbe    ffffffff8002de6e <ZydisFormatterSetProperty+0x261>
ffffffff8002de64:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff8002de69:	e9 26 03 00 00       	jmp    ffffffff8002e194 <ZydisFormatterSetProperty+0x587>
ffffffff8002de6e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8002de72:	89 c2                	mov    %eax,%edx
ffffffff8002de74:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002de78:	89 50 28             	mov    %edx,0x28(%rax)
ffffffff8002de7b:	e9 74 01 00 00       	jmp    ffffffff8002dff4 <ZydisFormatterSetProperty+0x3e7>
ffffffff8002de80:	48 83 7d d8 02       	cmpq   $0x2,-0x28(%rbp)
ffffffff8002de85:	76 0a                	jbe    ffffffff8002de91 <ZydisFormatterSetProperty+0x284>
ffffffff8002de87:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff8002de8c:	e9 03 03 00 00       	jmp    ffffffff8002e194 <ZydisFormatterSetProperty+0x587>
ffffffff8002de91:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8002de95:	89 c2                	mov    %eax,%edx
ffffffff8002de97:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002de9b:	89 50 2c             	mov    %edx,0x2c(%rax)
ffffffff8002de9e:	e9 51 01 00 00       	jmp    ffffffff8002dff4 <ZydisFormatterSetProperty+0x3e7>
ffffffff8002dea3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8002dea7:	83 f8 ff             	cmp    $0xffffffff,%eax
ffffffff8002deaa:	75 3c                	jne    ffffffff8002dee8 <ZydisFormatterSetProperty+0x2db>
ffffffff8002deac:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002deb0:	8b 00                	mov    (%rax),%eax
ffffffff8002deb2:	83 f8 02             	cmp    $0x2,%eax
ffffffff8002deb5:	76 0a                	jbe    ffffffff8002dec1 <ZydisFormatterSetProperty+0x2b4>
ffffffff8002deb7:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff8002debc:	e9 d3 02 00 00       	jmp    ffffffff8002e194 <ZydisFormatterSetProperty+0x587>
ffffffff8002dec1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002dec5:	8b 00                	mov    (%rax),%eax
ffffffff8002dec7:	89 c0                	mov    %eax,%eax
ffffffff8002dec9:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
ffffffff8002ded0:	00 
ffffffff8002ded1:	48 8d 05 58 bc 07 00 	lea    0x7bc58(%rip),%rax        # ffffffff800a9b30 <FORMATTER_PRESETS>
ffffffff8002ded8:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
ffffffff8002dedc:	8b 50 30             	mov    0x30(%rax),%edx
ffffffff8002dedf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002dee3:	89 50 30             	mov    %edx,0x30(%rax)
ffffffff8002dee6:	eb 14                	jmp    ffffffff8002defc <ZydisFormatterSetProperty+0x2ef>
ffffffff8002dee8:	48 81 7d d8 ff 00 00 	cmpq   $0xff,-0x28(%rbp)
ffffffff8002deef:	00 
ffffffff8002def0:	76 0a                	jbe    ffffffff8002defc <ZydisFormatterSetProperty+0x2ef>
ffffffff8002def2:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff8002def7:	e9 98 02 00 00       	jmp    ffffffff8002e194 <ZydisFormatterSetProperty+0x587>
ffffffff8002defc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8002df00:	89 c2                	mov    %eax,%edx
ffffffff8002df02:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002df06:	89 50 30             	mov    %edx,0x30(%rax)
ffffffff8002df09:	e9 e6 00 00 00       	jmp    ffffffff8002dff4 <ZydisFormatterSetProperty+0x3e7>
ffffffff8002df0e:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
ffffffff8002df13:	74 07                	je     ffffffff8002df1c <ZydisFormatterSetProperty+0x30f>
ffffffff8002df15:	ba 02 00 00 00       	mov    $0x2,%edx
ffffffff8002df1a:	eb 05                	jmp    ffffffff8002df21 <ZydisFormatterSetProperty+0x314>
ffffffff8002df1c:	ba 00 00 00 00       	mov    $0x0,%edx
ffffffff8002df21:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002df25:	89 50 34             	mov    %edx,0x34(%rax)
ffffffff8002df28:	e9 c7 00 00 00       	jmp    ffffffff8002dff4 <ZydisFormatterSetProperty+0x3e7>
ffffffff8002df2d:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
ffffffff8002df32:	74 07                	je     ffffffff8002df3b <ZydisFormatterSetProperty+0x32e>
ffffffff8002df34:	ba 02 00 00 00       	mov    $0x2,%edx
ffffffff8002df39:	eb 05                	jmp    ffffffff8002df40 <ZydisFormatterSetProperty+0x333>
ffffffff8002df3b:	ba 00 00 00 00       	mov    $0x0,%edx
ffffffff8002df40:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002df44:	89 50 38             	mov    %edx,0x38(%rax)
ffffffff8002df47:	e9 a8 00 00 00       	jmp    ffffffff8002dff4 <ZydisFormatterSetProperty+0x3e7>
ffffffff8002df4c:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
ffffffff8002df51:	74 07                	je     ffffffff8002df5a <ZydisFormatterSetProperty+0x34d>
ffffffff8002df53:	ba 02 00 00 00       	mov    $0x2,%edx
ffffffff8002df58:	eb 05                	jmp    ffffffff8002df5f <ZydisFormatterSetProperty+0x352>
ffffffff8002df5a:	ba 00 00 00 00       	mov    $0x0,%edx
ffffffff8002df5f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002df63:	89 50 3c             	mov    %edx,0x3c(%rax)
ffffffff8002df66:	e9 89 00 00 00       	jmp    ffffffff8002dff4 <ZydisFormatterSetProperty+0x3e7>
ffffffff8002df6b:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
ffffffff8002df70:	74 07                	je     ffffffff8002df79 <ZydisFormatterSetProperty+0x36c>
ffffffff8002df72:	ba 02 00 00 00       	mov    $0x2,%edx
ffffffff8002df77:	eb 05                	jmp    ffffffff8002df7e <ZydisFormatterSetProperty+0x371>
ffffffff8002df79:	ba 00 00 00 00       	mov    $0x0,%edx
ffffffff8002df7e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002df82:	89 50 40             	mov    %edx,0x40(%rax)
ffffffff8002df85:	eb 6d                	jmp    ffffffff8002dff4 <ZydisFormatterSetProperty+0x3e7>
ffffffff8002df87:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
ffffffff8002df8c:	74 07                	je     ffffffff8002df95 <ZydisFormatterSetProperty+0x388>
ffffffff8002df8e:	ba 02 00 00 00       	mov    $0x2,%edx
ffffffff8002df93:	eb 05                	jmp    ffffffff8002df9a <ZydisFormatterSetProperty+0x38d>
ffffffff8002df95:	ba 00 00 00 00       	mov    $0x0,%edx
ffffffff8002df9a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002df9e:	89 50 44             	mov    %edx,0x44(%rax)
ffffffff8002dfa1:	eb 51                	jmp    ffffffff8002dff4 <ZydisFormatterSetProperty+0x3e7>
ffffffff8002dfa3:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
ffffffff8002dfaa:	c6 45 fb 00          	movb   $0x0,-0x5(%rbp)
ffffffff8002dfae:	eb 44                	jmp    ffffffff8002dff4 <ZydisFormatterSetProperty+0x3e7>
ffffffff8002dfb0:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
ffffffff8002dfb7:	c6 45 fb 01          	movb   $0x1,-0x5(%rbp)
ffffffff8002dfbb:	eb 37                	jmp    ffffffff8002dff4 <ZydisFormatterSetProperty+0x3e7>
ffffffff8002dfbd:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
ffffffff8002dfc2:	0f 95 c0             	setne  %al
ffffffff8002dfc5:	89 c2                	mov    %eax,%edx
ffffffff8002dfc7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002dfcb:	88 50 48             	mov    %dl,0x48(%rax)
ffffffff8002dfce:	eb 24                	jmp    ffffffff8002dff4 <ZydisFormatterSetProperty+0x3e7>
ffffffff8002dfd0:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)
ffffffff8002dfd7:	c6 45 fb 00          	movb   $0x0,-0x5(%rbp)
ffffffff8002dfdb:	eb 17                	jmp    ffffffff8002dff4 <ZydisFormatterSetProperty+0x3e7>
ffffffff8002dfdd:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)
ffffffff8002dfe4:	c6 45 fb 01          	movb   $0x1,-0x5(%rbp)
ffffffff8002dfe8:	eb 0a                	jmp    ffffffff8002dff4 <ZydisFormatterSetProperty+0x3e7>
ffffffff8002dfea:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff8002dfef:	e9 a0 01 00 00       	jmp    ffffffff8002e194 <ZydisFormatterSetProperty+0x587>
ffffffff8002dff4:	83 7d fc ff          	cmpl   $0xffffffff,-0x4(%rbp)
ffffffff8002dff8:	0f 84 91 01 00 00    	je     ffffffff8002e18f <ZydisFormatterSetProperty+0x582>
ffffffff8002dffe:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
ffffffff8002e003:	0f 84 5c 01 00 00    	je     ffffffff8002e165 <ZydisFormatterSetProperty+0x558>
ffffffff8002e009:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8002e00d:	48 89 c7             	mov    %rax,%rdi
ffffffff8002e010:	e8 18 fa ff ff       	call   ffffffff8002da2d <ZYAN_STRLEN.lto_priv.2>
ffffffff8002e015:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff8002e019:	48 83 7d f0 0a       	cmpq   $0xa,-0x10(%rbp)
ffffffff8002e01e:	76 0a                	jbe    ffffffff8002e02a <ZydisFormatterSetProperty+0x41d>
ffffffff8002e020:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff8002e025:	e9 6a 01 00 00       	jmp    ffffffff8002e194 <ZydisFormatterSetProperty+0x587>
ffffffff8002e02a:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
ffffffff8002e02e:	0f b6 45 fb          	movzbl -0x5(%rbp),%eax
ffffffff8002e032:	48 98                	cltq   
ffffffff8002e034:	48 6b d0 58          	imul   $0x58,%rax,%rdx
ffffffff8002e038:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8002e03b:	48 69 c0 b0 00 00 00 	imul   $0xb0,%rax,%rax
ffffffff8002e042:	48 01 d0             	add    %rdx,%rax
ffffffff8002e045:	48 8d 90 90 00 00 00 	lea    0x90(%rax),%rdx
ffffffff8002e04c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002e050:	48 01 d0             	add    %rdx,%rax
ffffffff8002e053:	48 83 c0 08          	add    $0x8,%rax
ffffffff8002e057:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff8002e05b:	48 89 ce             	mov    %rcx,%rsi
ffffffff8002e05e:	48 89 c7             	mov    %rax,%rdi
ffffffff8002e061:	e8 6d f9 ff ff       	call   ffffffff8002d9d3 <ZYAN_MEMCPY.lto_priv.8>
ffffffff8002e066:	0f b6 45 fb          	movzbl -0x5(%rbp),%eax
ffffffff8002e06a:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
ffffffff8002e06e:	48 63 d0             	movslq %eax,%rdx
ffffffff8002e071:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8002e074:	48 6b d2 58          	imul   $0x58,%rdx,%rdx
ffffffff8002e078:	48 69 c0 b0 00 00 00 	imul   $0xb0,%rax,%rax
ffffffff8002e07f:	48 01 d0             	add    %rdx,%rax
ffffffff8002e082:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
ffffffff8002e086:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8002e08a:	48 01 d0             	add    %rdx,%rax
ffffffff8002e08d:	48 05 98 00 00 00    	add    $0x98,%rax
ffffffff8002e093:	c6 00 00             	movb   $0x0,(%rax)
ffffffff8002e096:	0f b6 55 fb          	movzbl -0x5(%rbp),%edx
ffffffff8002e09a:	0f b6 45 fb          	movzbl -0x5(%rbp),%eax
ffffffff8002e09e:	48 63 d2             	movslq %edx,%rdx
ffffffff8002e0a1:	48 6b ca 58          	imul   $0x58,%rdx,%rcx
ffffffff8002e0a5:	8b 55 fc             	mov    -0x4(%rbp),%edx
ffffffff8002e0a8:	48 69 d2 b0 00 00 00 	imul   $0xb0,%rdx,%rdx
ffffffff8002e0af:	48 01 ca             	add    %rcx,%rdx
ffffffff8002e0b2:	48 8d 8a 90 00 00 00 	lea    0x90(%rdx),%rcx
ffffffff8002e0b9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff8002e0bd:	48 01 ca             	add    %rcx,%rdx
ffffffff8002e0c0:	48 83 c2 08          	add    $0x8,%rdx
ffffffff8002e0c4:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
ffffffff8002e0c8:	48 63 c8             	movslq %eax,%rcx
ffffffff8002e0cb:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8002e0ce:	48 6b c9 58          	imul   $0x58,%rcx,%rcx
ffffffff8002e0d2:	48 69 c0 b0 00 00 00 	imul   $0xb0,%rax,%rax
ffffffff8002e0d9:	48 01 c8             	add    %rcx,%rax
ffffffff8002e0dc:	48 01 f0             	add    %rsi,%rax
ffffffff8002e0df:	48 05 90 00 00 00    	add    $0x90,%rax
ffffffff8002e0e5:	48 89 10             	mov    %rdx,(%rax)
ffffffff8002e0e8:	0f b6 45 fb          	movzbl -0x5(%rbp),%eax
ffffffff8002e0ec:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff8002e0f0:	48 83 c2 01          	add    $0x1,%rdx
ffffffff8002e0f4:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
ffffffff8002e0f8:	48 63 c8             	movslq %eax,%rcx
ffffffff8002e0fb:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8002e0fe:	48 6b c9 58          	imul   $0x58,%rcx,%rcx
ffffffff8002e102:	48 69 c0 b0 00 00 00 	imul   $0xb0,%rax,%rax
ffffffff8002e109:	48 01 c8             	add    %rcx,%rax
ffffffff8002e10c:	48 01 f0             	add    %rsi,%rax
ffffffff8002e10f:	48 83 c0 70          	add    $0x70,%rax
ffffffff8002e113:	48 89 10             	mov    %rdx,(%rax)
ffffffff8002e116:	0f b6 55 fb          	movzbl -0x5(%rbp),%edx
ffffffff8002e11a:	0f b6 45 fb          	movzbl -0x5(%rbp),%eax
ffffffff8002e11e:	48 63 d2             	movslq %edx,%rdx
ffffffff8002e121:	48 6b ca 58          	imul   $0x58,%rdx,%rcx
ffffffff8002e125:	8b 55 fc             	mov    -0x4(%rbp),%edx
ffffffff8002e128:	48 69 d2 b0 00 00 00 	imul   $0xb0,%rdx,%rdx
ffffffff8002e12f:	48 01 ca             	add    %rcx,%rdx
ffffffff8002e132:	48 8d 4a 50          	lea    0x50(%rdx),%rcx
ffffffff8002e136:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff8002e13a:	48 01 ca             	add    %rcx,%rdx
ffffffff8002e13d:	48 83 c2 08          	add    $0x8,%rdx
ffffffff8002e141:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
ffffffff8002e145:	48 63 c8             	movslq %eax,%rcx
ffffffff8002e148:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8002e14b:	48 6b c9 58          	imul   $0x58,%rcx,%rcx
ffffffff8002e14f:	48 69 c0 b0 00 00 00 	imul   $0xb0,%rax,%rax
ffffffff8002e156:	48 01 c8             	add    %rcx,%rax
ffffffff8002e159:	48 01 f0             	add    %rsi,%rax
ffffffff8002e15c:	48 83 c0 50          	add    $0x50,%rax
ffffffff8002e160:	48 89 10             	mov    %rdx,(%rax)
ffffffff8002e163:	eb 2a                	jmp    ffffffff8002e18f <ZydisFormatterSetProperty+0x582>
ffffffff8002e165:	0f b6 45 fb          	movzbl -0x5(%rbp),%eax
ffffffff8002e169:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
ffffffff8002e16d:	48 63 d0             	movslq %eax,%rdx
ffffffff8002e170:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8002e173:	48 6b d2 58          	imul   $0x58,%rdx,%rdx
ffffffff8002e177:	48 69 c0 b0 00 00 00 	imul   $0xb0,%rax,%rax
ffffffff8002e17e:	48 01 d0             	add    %rdx,%rax
ffffffff8002e181:	48 01 c8             	add    %rcx,%rax
ffffffff8002e184:	48 83 c0 50          	add    $0x50,%rax
ffffffff8002e188:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
ffffffff8002e18f:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff8002e194:	c9                   	leave  
ffffffff8002e195:	c3                   	ret    

ffffffff8002e196 <ZydisFormatterSetHook>:
ffffffff8002e196:	f3 0f 1e fa          	endbr64 
ffffffff8002e19a:	55                   	push   %rbp
ffffffff8002e19b:	48 89 e5             	mov    %rsp,%rbp
ffffffff8002e19e:	48 83 ec 28          	sub    $0x28,%rsp
ffffffff8002e1a2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff8002e1a6:	89 75 e4             	mov    %esi,-0x1c(%rbp)
ffffffff8002e1a9:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
ffffffff8002e1ad:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
ffffffff8002e1b2:	74 0d                	je     ffffffff8002e1c1 <ZydisFormatterSetHook+0x2b>
ffffffff8002e1b4:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
ffffffff8002e1b9:	74 06                	je     ffffffff8002e1c1 <ZydisFormatterSetHook+0x2b>
ffffffff8002e1bb:	83 7d e4 12          	cmpl   $0x12,-0x1c(%rbp)
ffffffff8002e1bf:	76 0a                	jbe    ffffffff8002e1cb <ZydisFormatterSetHook+0x35>
ffffffff8002e1c1:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff8002e1c6:	e9 b0 00 00 00       	jmp    ffffffff8002e27b <ZydisFormatterSetHook+0xe5>
ffffffff8002e1cb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8002e1cf:	48 8b 00             	mov    (%rax),%rax
ffffffff8002e1d2:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff8002e1d6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002e1da:	48 8d 90 b0 01 00 00 	lea    0x1b0(%rax),%rdx
ffffffff8002e1e1:	8b 45 e4             	mov    -0x1c(%rbp),%eax
ffffffff8002e1e4:	48 c1 e0 03          	shl    $0x3,%rax
ffffffff8002e1e8:	48 01 d0             	add    %rdx,%rax
ffffffff8002e1eb:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8002e1ef:	83 7d e4 12          	cmpl   $0x12,-0x1c(%rbp)
ffffffff8002e1f3:	77 24                	ja     ffffffff8002e219 <ZydisFormatterSetHook+0x83>
ffffffff8002e1f5:	8b 45 e4             	mov    -0x1c(%rbp),%eax
ffffffff8002e1f8:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
ffffffff8002e1ff:	00 
ffffffff8002e200:	48 8d 05 45 1c 01 00 	lea    0x11c45(%rip),%rax        # ffffffff8003fe4c <decoder_modes.0+0x7c>
ffffffff8002e207:	8b 04 02             	mov    (%rdx,%rax,1),%eax
ffffffff8002e20a:	48 98                	cltq   
ffffffff8002e20c:	48 8d 15 39 1c 01 00 	lea    0x11c39(%rip),%rdx        # ffffffff8003fe4c <decoder_modes.0+0x7c>
ffffffff8002e213:	48 01 d0             	add    %rdx,%rax
ffffffff8002e216:	3e ff e0             	notrack jmp *%rax
ffffffff8002e219:	eb fe                	jmp    ffffffff8002e219 <ZydisFormatterSetHook+0x83>
ffffffff8002e21b:	90                   	nop
ffffffff8002e21c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002e220:	48 8d 90 b0 01 00 00 	lea    0x1b0(%rax),%rdx
ffffffff8002e227:	8b 45 e4             	mov    -0x1c(%rbp),%eax
ffffffff8002e22a:	48 c1 e0 03          	shl    $0x3,%rax
ffffffff8002e22e:	48 01 d0             	add    %rdx,%rax
ffffffff8002e231:	48 8b 10             	mov    (%rax),%rdx
ffffffff8002e234:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8002e238:	48 89 10             	mov    %rdx,(%rax)
ffffffff8002e23b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8002e23f:	48 85 c0             	test   %rax,%rax
ffffffff8002e242:	75 07                	jne    ffffffff8002e24b <ZydisFormatterSetHook+0xb5>
ffffffff8002e244:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff8002e249:	eb 30                	jmp    ffffffff8002e27b <ZydisFormatterSetHook+0xe5>
ffffffff8002e24b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002e24f:	48 8d 90 b0 01 00 00 	lea    0x1b0(%rax),%rdx
ffffffff8002e256:	8b 45 e4             	mov    -0x1c(%rbp),%eax
ffffffff8002e259:	48 c1 e0 03          	shl    $0x3,%rax
ffffffff8002e25d:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
ffffffff8002e261:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
ffffffff8002e265:	ba 08 00 00 00       	mov    $0x8,%edx
ffffffff8002e26a:	48 89 c6             	mov    %rax,%rsi
ffffffff8002e26d:	48 89 cf             	mov    %rcx,%rdi
ffffffff8002e270:	e8 5e f7 ff ff       	call   ffffffff8002d9d3 <ZYAN_MEMCPY.lto_priv.8>
ffffffff8002e275:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff8002e27a:	90                   	nop
ffffffff8002e27b:	c9                   	leave  
ffffffff8002e27c:	c3                   	ret    

ffffffff8002e27d <ZydisFormatterFormatInstruction>:
ffffffff8002e27d:	f3 0f 1e fa          	endbr64 
ffffffff8002e281:	55                   	push   %rbp
ffffffff8002e282:	48 89 e5             	mov    %rsp,%rbp
ffffffff8002e285:	48 83 ec 30          	sub    $0x30,%rsp
ffffffff8002e289:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8002e28d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff8002e291:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
ffffffff8002e295:	89 c8                	mov    %ecx,%eax
ffffffff8002e297:	4c 89 45 d8          	mov    %r8,-0x28(%rbp)
ffffffff8002e29b:	4c 89 4d d0          	mov    %r9,-0x30(%rbp)
ffffffff8002e29f:	88 45 e4             	mov    %al,-0x1c(%rbp)
ffffffff8002e2a2:	0f b6 45 e4          	movzbl -0x1c(%rbp),%eax
ffffffff8002e2a6:	4c 8b 45 d0          	mov    -0x30(%rbp),%r8
ffffffff8002e2aa:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
ffffffff8002e2ae:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff8002e2b2:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
ffffffff8002e2b6:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff8002e2ba:	6a 00                	push   $0x0
ffffffff8002e2bc:	ff 75 10             	push   0x10(%rbp)
ffffffff8002e2bf:	4d 89 c1             	mov    %r8,%r9
ffffffff8002e2c2:	49 89 c8             	mov    %rcx,%r8
ffffffff8002e2c5:	89 c1                	mov    %eax,%ecx
ffffffff8002e2c7:	e8 06 00 00 00       	call   ffffffff8002e2d2 <ZydisFormatterFormatInstructionEx>
ffffffff8002e2cc:	48 83 c4 10          	add    $0x10,%rsp
ffffffff8002e2d0:	c9                   	leave  
ffffffff8002e2d1:	c3                   	ret    

ffffffff8002e2d2 <ZydisFormatterFormatInstructionEx>:
ffffffff8002e2d2:	f3 0f 1e fa          	endbr64 
ffffffff8002e2d6:	55                   	push   %rbp
ffffffff8002e2d7:	48 89 e5             	mov    %rsp,%rbp
ffffffff8002e2da:	48 81 ec c0 00 00 00 	sub    $0xc0,%rsp
ffffffff8002e2e1:	48 89 bd 68 ff ff ff 	mov    %rdi,-0x98(%rbp)
ffffffff8002e2e8:	48 89 b5 60 ff ff ff 	mov    %rsi,-0xa0(%rbp)
ffffffff8002e2ef:	48 89 95 58 ff ff ff 	mov    %rdx,-0xa8(%rbp)
ffffffff8002e2f6:	89 c8                	mov    %ecx,%eax
ffffffff8002e2f8:	4c 89 85 48 ff ff ff 	mov    %r8,-0xb8(%rbp)
ffffffff8002e2ff:	4c 89 8d 40 ff ff ff 	mov    %r9,-0xc0(%rbp)
ffffffff8002e306:	88 85 54 ff ff ff    	mov    %al,-0xac(%rbp)
ffffffff8002e30c:	48 83 bd 68 ff ff ff 	cmpq   $0x0,-0x98(%rbp)
ffffffff8002e313:	00 
ffffffff8002e314:	74 4d                	je     ffffffff8002e363 <ZydisFormatterFormatInstructionEx+0x91>
ffffffff8002e316:	48 83 bd 60 ff ff ff 	cmpq   $0x0,-0xa0(%rbp)
ffffffff8002e31d:	00 
ffffffff8002e31e:	74 43                	je     ffffffff8002e363 <ZydisFormatterFormatInstructionEx+0x91>
ffffffff8002e320:	80 bd 54 ff ff ff 00 	cmpb   $0x0,-0xac(%rbp)
ffffffff8002e327:	74 0a                	je     ffffffff8002e333 <ZydisFormatterFormatInstructionEx+0x61>
ffffffff8002e329:	48 83 bd 58 ff ff ff 	cmpq   $0x0,-0xa8(%rbp)
ffffffff8002e330:	00 
ffffffff8002e331:	74 30                	je     ffffffff8002e363 <ZydisFormatterFormatInstructionEx+0x91>
ffffffff8002e333:	80 bd 54 ff ff ff 0a 	cmpb   $0xa,-0xac(%rbp)
ffffffff8002e33a:	77 27                	ja     ffffffff8002e363 <ZydisFormatterFormatInstructionEx+0x91>
ffffffff8002e33c:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
ffffffff8002e343:	0f b6 40 19          	movzbl 0x19(%rax),%eax
ffffffff8002e347:	38 85 54 ff ff ff    	cmp    %al,-0xac(%rbp)
ffffffff8002e34d:	75 14                	jne    ffffffff8002e363 <ZydisFormatterFormatInstructionEx+0x91>
ffffffff8002e34f:	48 83 bd 48 ff ff ff 	cmpq   $0x0,-0xb8(%rbp)
ffffffff8002e356:	00 
ffffffff8002e357:	74 0a                	je     ffffffff8002e363 <ZydisFormatterFormatInstructionEx+0x91>
ffffffff8002e359:	48 83 bd 40 ff ff ff 	cmpq   $0x0,-0xc0(%rbp)
ffffffff8002e360:	00 
ffffffff8002e361:	75 0a                	jne    ffffffff8002e36d <ZydisFormatterFormatInstructionEx+0x9b>
ffffffff8002e363:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff8002e368:	e9 28 01 00 00       	jmp    ffffffff8002e495 <ZydisFormatterFormatInstructionEx+0x1c3>
ffffffff8002e36d:	48 8b 95 40 ff ff ff 	mov    -0xc0(%rbp),%rdx
ffffffff8002e374:	48 8b 8d 48 ff ff ff 	mov    -0xb8(%rbp),%rcx
ffffffff8002e37b:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
ffffffff8002e37f:	48 89 ce             	mov    %rcx,%rsi
ffffffff8002e382:	48 89 c7             	mov    %rax,%rdi
ffffffff8002e385:	e8 d3 f6 ff ff       	call   ffffffff8002da5d <ZydisFormatterBufferInit>
ffffffff8002e38a:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
ffffffff8002e391:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
ffffffff8002e398:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
ffffffff8002e39f:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
ffffffff8002e3a6:	48 8b 45 10          	mov    0x10(%rbp),%rax
ffffffff8002e3aa:	48 89 45 88          	mov    %rax,-0x78(%rbp)
ffffffff8002e3ae:	48 c7 45 80 00 00 00 	movq   $0x0,-0x80(%rbp)
ffffffff8002e3b5:	00 
ffffffff8002e3b6:	48 8b 45 18          	mov    0x18(%rbp),%rax
ffffffff8002e3ba:	48 89 45 90          	mov    %rax,-0x70(%rbp)
ffffffff8002e3be:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
ffffffff8002e3c5:	48 8b 80 b0 01 00 00 	mov    0x1b0(%rax),%rax
ffffffff8002e3cc:	48 85 c0             	test   %rax,%rax
ffffffff8002e3cf:	74 3b                	je     ffffffff8002e40c <ZydisFormatterFormatInstructionEx+0x13a>
ffffffff8002e3d1:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
ffffffff8002e3d8:	4c 8b 80 b0 01 00 00 	mov    0x1b0(%rax),%r8
ffffffff8002e3df:	48 8d 95 70 ff ff ff 	lea    -0x90(%rbp),%rdx
ffffffff8002e3e6:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
ffffffff8002e3ea:	48 8b 8d 68 ff ff ff 	mov    -0x98(%rbp),%rcx
ffffffff8002e3f1:	48 89 c6             	mov    %rax,%rsi
ffffffff8002e3f4:	48 89 cf             	mov    %rcx,%rdi
ffffffff8002e3f7:	41 ff d0             	call   *%r8
ffffffff8002e3fa:	89 45 fc             	mov    %eax,-0x4(%rbp)
ffffffff8002e3fd:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8002e400:	85 c0                	test   %eax,%eax
ffffffff8002e402:	79 08                	jns    ffffffff8002e40c <ZydisFormatterFormatInstructionEx+0x13a>
ffffffff8002e404:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8002e407:	e9 89 00 00 00       	jmp    ffffffff8002e495 <ZydisFormatterFormatInstructionEx+0x1c3>
ffffffff8002e40c:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
ffffffff8002e413:	4c 8b 80 c0 01 00 00 	mov    0x1c0(%rax),%r8
ffffffff8002e41a:	48 8d 95 70 ff ff ff 	lea    -0x90(%rbp),%rdx
ffffffff8002e421:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
ffffffff8002e425:	48 8b 8d 68 ff ff ff 	mov    -0x98(%rbp),%rcx
ffffffff8002e42c:	48 89 c6             	mov    %rax,%rsi
ffffffff8002e42f:	48 89 cf             	mov    %rcx,%rdi
ffffffff8002e432:	41 ff d0             	call   *%r8
ffffffff8002e435:	89 45 f8             	mov    %eax,-0x8(%rbp)
ffffffff8002e438:	8b 45 f8             	mov    -0x8(%rbp),%eax
ffffffff8002e43b:	85 c0                	test   %eax,%eax
ffffffff8002e43d:	79 05                	jns    ffffffff8002e444 <ZydisFormatterFormatInstructionEx+0x172>
ffffffff8002e43f:	8b 45 f8             	mov    -0x8(%rbp),%eax
ffffffff8002e442:	eb 51                	jmp    ffffffff8002e495 <ZydisFormatterFormatInstructionEx+0x1c3>
ffffffff8002e444:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
ffffffff8002e44b:	48 8b 80 b8 01 00 00 	mov    0x1b8(%rax),%rax
ffffffff8002e452:	48 85 c0             	test   %rax,%rax
ffffffff8002e455:	74 38                	je     ffffffff8002e48f <ZydisFormatterFormatInstructionEx+0x1bd>
ffffffff8002e457:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
ffffffff8002e45e:	4c 8b 80 b8 01 00 00 	mov    0x1b8(%rax),%r8
ffffffff8002e465:	48 8d 95 70 ff ff ff 	lea    -0x90(%rbp),%rdx
ffffffff8002e46c:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
ffffffff8002e470:	48 8b 8d 68 ff ff ff 	mov    -0x98(%rbp),%rcx
ffffffff8002e477:	48 89 c6             	mov    %rax,%rsi
ffffffff8002e47a:	48 89 cf             	mov    %rcx,%rdi
ffffffff8002e47d:	41 ff d0             	call   *%r8
ffffffff8002e480:	89 45 f4             	mov    %eax,-0xc(%rbp)
ffffffff8002e483:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff8002e486:	85 c0                	test   %eax,%eax
ffffffff8002e488:	79 05                	jns    ffffffff8002e48f <ZydisFormatterFormatInstructionEx+0x1bd>
ffffffff8002e48a:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff8002e48d:	eb 06                	jmp    ffffffff8002e495 <ZydisFormatterFormatInstructionEx+0x1c3>
ffffffff8002e48f:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff8002e494:	90                   	nop
ffffffff8002e495:	c9                   	leave  
ffffffff8002e496:	c3                   	ret    

ffffffff8002e497 <ZydisFormatterFormatOperand>:
ffffffff8002e497:	f3 0f 1e fa          	endbr64 
ffffffff8002e49b:	55                   	push   %rbp
ffffffff8002e49c:	48 89 e5             	mov    %rsp,%rbp
ffffffff8002e49f:	48 83 ec 30          	sub    $0x30,%rsp
ffffffff8002e4a3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8002e4a7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff8002e4ab:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
ffffffff8002e4af:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
ffffffff8002e4b3:	4c 89 45 d8          	mov    %r8,-0x28(%rbp)
ffffffff8002e4b7:	4c 89 4d d0          	mov    %r9,-0x30(%rbp)
ffffffff8002e4bb:	4c 8b 45 d0          	mov    -0x30(%rbp),%r8
ffffffff8002e4bf:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
ffffffff8002e4c3:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
ffffffff8002e4c7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff8002e4cb:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
ffffffff8002e4cf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8002e4d3:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff8002e4d7:	6a 00                	push   $0x0
ffffffff8002e4d9:	4d 89 c1             	mov    %r8,%r9
ffffffff8002e4dc:	49 89 f8             	mov    %rdi,%r8
ffffffff8002e4df:	48 89 c7             	mov    %rax,%rdi
ffffffff8002e4e2:	e8 06 00 00 00       	call   ffffffff8002e4ed <ZydisFormatterFormatOperandEx>
ffffffff8002e4e7:	48 83 c4 10          	add    $0x10,%rsp
ffffffff8002e4eb:	c9                   	leave  
ffffffff8002e4ec:	c3                   	ret    

ffffffff8002e4ed <ZydisFormatterFormatOperandEx>:
ffffffff8002e4ed:	f3 0f 1e fa          	endbr64 
ffffffff8002e4f1:	55                   	push   %rbp
ffffffff8002e4f2:	48 89 e5             	mov    %rsp,%rbp
ffffffff8002e4f5:	48 81 ec d0 00 00 00 	sub    $0xd0,%rsp
ffffffff8002e4fc:	48 89 bd 58 ff ff ff 	mov    %rdi,-0xa8(%rbp)
ffffffff8002e503:	48 89 b5 50 ff ff ff 	mov    %rsi,-0xb0(%rbp)
ffffffff8002e50a:	48 89 95 48 ff ff ff 	mov    %rdx,-0xb8(%rbp)
ffffffff8002e511:	48 89 8d 40 ff ff ff 	mov    %rcx,-0xc0(%rbp)
ffffffff8002e518:	4c 89 85 38 ff ff ff 	mov    %r8,-0xc8(%rbp)
ffffffff8002e51f:	4c 89 8d 30 ff ff ff 	mov    %r9,-0xd0(%rbp)
ffffffff8002e526:	48 83 bd 58 ff ff ff 	cmpq   $0x0,-0xa8(%rbp)
ffffffff8002e52d:	00 
ffffffff8002e52e:	74 28                	je     ffffffff8002e558 <ZydisFormatterFormatOperandEx+0x6b>
ffffffff8002e530:	48 83 bd 50 ff ff ff 	cmpq   $0x0,-0xb0(%rbp)
ffffffff8002e537:	00 
ffffffff8002e538:	74 1e                	je     ffffffff8002e558 <ZydisFormatterFormatOperandEx+0x6b>
ffffffff8002e53a:	48 83 bd 48 ff ff ff 	cmpq   $0x0,-0xb8(%rbp)
ffffffff8002e541:	00 
ffffffff8002e542:	74 14                	je     ffffffff8002e558 <ZydisFormatterFormatOperandEx+0x6b>
ffffffff8002e544:	48 83 bd 40 ff ff ff 	cmpq   $0x0,-0xc0(%rbp)
ffffffff8002e54b:	00 
ffffffff8002e54c:	74 0a                	je     ffffffff8002e558 <ZydisFormatterFormatOperandEx+0x6b>
ffffffff8002e54e:	48 83 bd 38 ff ff ff 	cmpq   $0x0,-0xc8(%rbp)
ffffffff8002e555:	00 
ffffffff8002e556:	75 0a                	jne    ffffffff8002e562 <ZydisFormatterFormatOperandEx+0x75>
ffffffff8002e558:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff8002e55d:	e9 38 02 00 00       	jmp    ffffffff8002e79a <ZydisFormatterFormatOperandEx+0x2ad>
ffffffff8002e562:	48 8b 95 38 ff ff ff 	mov    -0xc8(%rbp),%rdx
ffffffff8002e569:	48 8b 8d 40 ff ff ff 	mov    -0xc0(%rbp),%rcx
ffffffff8002e570:	48 8d 45 90          	lea    -0x70(%rbp),%rax
ffffffff8002e574:	48 89 ce             	mov    %rcx,%rsi
ffffffff8002e577:	48 89 c7             	mov    %rax,%rdi
ffffffff8002e57a:	e8 de f4 ff ff       	call   ffffffff8002da5d <ZydisFormatterBufferInit>
ffffffff8002e57f:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
ffffffff8002e586:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
ffffffff8002e58d:	48 c7 85 68 ff ff ff 	movq   $0x0,-0x98(%rbp)
ffffffff8002e594:	00 00 00 00 
ffffffff8002e598:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
ffffffff8002e59f:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
ffffffff8002e5a6:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
ffffffff8002e5ad:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
ffffffff8002e5b4:	48 8b 45 10          	mov    0x10(%rbp),%rax
ffffffff8002e5b8:	48 89 45 80          	mov    %rax,-0x80(%rbp)
ffffffff8002e5bc:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
ffffffff8002e5c3:	48 8b 80 c8 01 00 00 	mov    0x1c8(%rax),%rax
ffffffff8002e5ca:	48 85 c0             	test   %rax,%rax
ffffffff8002e5cd:	74 3b                	je     ffffffff8002e60a <ZydisFormatterFormatOperandEx+0x11d>
ffffffff8002e5cf:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
ffffffff8002e5d6:	4c 8b 80 c8 01 00 00 	mov    0x1c8(%rax),%r8
ffffffff8002e5dd:	48 8d 95 60 ff ff ff 	lea    -0xa0(%rbp),%rdx
ffffffff8002e5e4:	48 8d 45 90          	lea    -0x70(%rbp),%rax
ffffffff8002e5e8:	48 8b 8d 58 ff ff ff 	mov    -0xa8(%rbp),%rcx
ffffffff8002e5ef:	48 89 c6             	mov    %rax,%rsi
ffffffff8002e5f2:	48 89 cf             	mov    %rcx,%rdi
ffffffff8002e5f5:	41 ff d0             	call   *%r8
ffffffff8002e5f8:	89 45 fc             	mov    %eax,-0x4(%rbp)
ffffffff8002e5fb:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8002e5fe:	85 c0                	test   %eax,%eax
ffffffff8002e600:	79 08                	jns    ffffffff8002e60a <ZydisFormatterFormatOperandEx+0x11d>
ffffffff8002e602:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8002e605:	e9 90 01 00 00       	jmp    ffffffff8002e79a <ZydisFormatterFormatOperandEx+0x2ad>
ffffffff8002e60a:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
ffffffff8002e611:	8b 40 04             	mov    0x4(%rax),%eax
ffffffff8002e614:	83 f8 04             	cmp    $0x4,%eax
ffffffff8002e617:	0f 84 a8 00 00 00    	je     ffffffff8002e6c5 <ZydisFormatterFormatOperandEx+0x1d8>
ffffffff8002e61d:	83 f8 04             	cmp    $0x4,%eax
ffffffff8002e620:	0f 87 12 01 00 00    	ja     ffffffff8002e738 <ZydisFormatterFormatOperandEx+0x24b>
ffffffff8002e626:	83 f8 03             	cmp    $0x3,%eax
ffffffff8002e629:	0f 84 d1 00 00 00    	je     ffffffff8002e700 <ZydisFormatterFormatOperandEx+0x213>
ffffffff8002e62f:	83 f8 03             	cmp    $0x3,%eax
ffffffff8002e632:	0f 87 00 01 00 00    	ja     ffffffff8002e738 <ZydisFormatterFormatOperandEx+0x24b>
ffffffff8002e638:	83 f8 01             	cmp    $0x1,%eax
ffffffff8002e63b:	74 0a                	je     ffffffff8002e647 <ZydisFormatterFormatOperandEx+0x15a>
ffffffff8002e63d:	83 f8 02             	cmp    $0x2,%eax
ffffffff8002e640:	74 44                	je     ffffffff8002e686 <ZydisFormatterFormatOperandEx+0x199>
ffffffff8002e642:	e9 f1 00 00 00       	jmp    ffffffff8002e738 <ZydisFormatterFormatOperandEx+0x24b>
ffffffff8002e647:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
ffffffff8002e64e:	4c 8b 80 d8 01 00 00 	mov    0x1d8(%rax),%r8
ffffffff8002e655:	48 8d 95 60 ff ff ff 	lea    -0xa0(%rbp),%rdx
ffffffff8002e65c:	48 8d 45 90          	lea    -0x70(%rbp),%rax
ffffffff8002e660:	48 8b 8d 58 ff ff ff 	mov    -0xa8(%rbp),%rcx
ffffffff8002e667:	48 89 c6             	mov    %rax,%rsi
ffffffff8002e66a:	48 89 cf             	mov    %rcx,%rdi
ffffffff8002e66d:	41 ff d0             	call   *%r8
ffffffff8002e670:	89 45 ec             	mov    %eax,-0x14(%rbp)
ffffffff8002e673:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff8002e676:	85 c0                	test   %eax,%eax
ffffffff8002e678:	0f 89 c1 00 00 00    	jns    ffffffff8002e73f <ZydisFormatterFormatOperandEx+0x252>
ffffffff8002e67e:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff8002e681:	e9 14 01 00 00       	jmp    ffffffff8002e79a <ZydisFormatterFormatOperandEx+0x2ad>
ffffffff8002e686:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
ffffffff8002e68d:	4c 8b 80 e0 01 00 00 	mov    0x1e0(%rax),%r8
ffffffff8002e694:	48 8d 95 60 ff ff ff 	lea    -0xa0(%rbp),%rdx
ffffffff8002e69b:	48 8d 45 90          	lea    -0x70(%rbp),%rax
ffffffff8002e69f:	48 8b 8d 58 ff ff ff 	mov    -0xa8(%rbp),%rcx
ffffffff8002e6a6:	48 89 c6             	mov    %rax,%rsi
ffffffff8002e6a9:	48 89 cf             	mov    %rcx,%rdi
ffffffff8002e6ac:	41 ff d0             	call   *%r8
ffffffff8002e6af:	89 45 f0             	mov    %eax,-0x10(%rbp)
ffffffff8002e6b2:	8b 45 f0             	mov    -0x10(%rbp),%eax
ffffffff8002e6b5:	85 c0                	test   %eax,%eax
ffffffff8002e6b7:	0f 89 85 00 00 00    	jns    ffffffff8002e742 <ZydisFormatterFormatOperandEx+0x255>
ffffffff8002e6bd:	8b 45 f0             	mov    -0x10(%rbp),%eax
ffffffff8002e6c0:	e9 d5 00 00 00       	jmp    ffffffff8002e79a <ZydisFormatterFormatOperandEx+0x2ad>
ffffffff8002e6c5:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
ffffffff8002e6cc:	4c 8b 80 f0 01 00 00 	mov    0x1f0(%rax),%r8
ffffffff8002e6d3:	48 8d 95 60 ff ff ff 	lea    -0xa0(%rbp),%rdx
ffffffff8002e6da:	48 8d 45 90          	lea    -0x70(%rbp),%rax
ffffffff8002e6de:	48 8b 8d 58 ff ff ff 	mov    -0xa8(%rbp),%rcx
ffffffff8002e6e5:	48 89 c6             	mov    %rax,%rsi
ffffffff8002e6e8:	48 89 cf             	mov    %rcx,%rdi
ffffffff8002e6eb:	41 ff d0             	call   *%r8
ffffffff8002e6ee:	89 45 f8             	mov    %eax,-0x8(%rbp)
ffffffff8002e6f1:	8b 45 f8             	mov    -0x8(%rbp),%eax
ffffffff8002e6f4:	85 c0                	test   %eax,%eax
ffffffff8002e6f6:	79 4d                	jns    ffffffff8002e745 <ZydisFormatterFormatOperandEx+0x258>
ffffffff8002e6f8:	8b 45 f8             	mov    -0x8(%rbp),%eax
ffffffff8002e6fb:	e9 9a 00 00 00       	jmp    ffffffff8002e79a <ZydisFormatterFormatOperandEx+0x2ad>
ffffffff8002e700:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
ffffffff8002e707:	4c 8b 80 e8 01 00 00 	mov    0x1e8(%rax),%r8
ffffffff8002e70e:	48 8d 95 60 ff ff ff 	lea    -0xa0(%rbp),%rdx
ffffffff8002e715:	48 8d 45 90          	lea    -0x70(%rbp),%rax
ffffffff8002e719:	48 8b 8d 58 ff ff ff 	mov    -0xa8(%rbp),%rcx
ffffffff8002e720:	48 89 c6             	mov    %rax,%rsi
ffffffff8002e723:	48 89 cf             	mov    %rcx,%rdi
ffffffff8002e726:	41 ff d0             	call   *%r8
ffffffff8002e729:	89 45 f4             	mov    %eax,-0xc(%rbp)
ffffffff8002e72c:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff8002e72f:	85 c0                	test   %eax,%eax
ffffffff8002e731:	79 15                	jns    ffffffff8002e748 <ZydisFormatterFormatOperandEx+0x25b>
ffffffff8002e733:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff8002e736:	eb 62                	jmp    ffffffff8002e79a <ZydisFormatterFormatOperandEx+0x2ad>
ffffffff8002e738:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff8002e73d:	eb 5b                	jmp    ffffffff8002e79a <ZydisFormatterFormatOperandEx+0x2ad>
ffffffff8002e73f:	90                   	nop
ffffffff8002e740:	eb 07                	jmp    ffffffff8002e749 <ZydisFormatterFormatOperandEx+0x25c>
ffffffff8002e742:	90                   	nop
ffffffff8002e743:	eb 04                	jmp    ffffffff8002e749 <ZydisFormatterFormatOperandEx+0x25c>
ffffffff8002e745:	90                   	nop
ffffffff8002e746:	eb 01                	jmp    ffffffff8002e749 <ZydisFormatterFormatOperandEx+0x25c>
ffffffff8002e748:	90                   	nop
ffffffff8002e749:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
ffffffff8002e750:	48 8b 80 d0 01 00 00 	mov    0x1d0(%rax),%rax
ffffffff8002e757:	48 85 c0             	test   %rax,%rax
ffffffff8002e75a:	74 38                	je     ffffffff8002e794 <ZydisFormatterFormatOperandEx+0x2a7>
ffffffff8002e75c:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
ffffffff8002e763:	4c 8b 80 d0 01 00 00 	mov    0x1d0(%rax),%r8
ffffffff8002e76a:	48 8d 95 60 ff ff ff 	lea    -0xa0(%rbp),%rdx
ffffffff8002e771:	48 8d 45 90          	lea    -0x70(%rbp),%rax
ffffffff8002e775:	48 8b 8d 58 ff ff ff 	mov    -0xa8(%rbp),%rcx
ffffffff8002e77c:	48 89 c6             	mov    %rax,%rsi
ffffffff8002e77f:	48 89 cf             	mov    %rcx,%rdi
ffffffff8002e782:	41 ff d0             	call   *%r8
ffffffff8002e785:	89 45 e8             	mov    %eax,-0x18(%rbp)
ffffffff8002e788:	8b 45 e8             	mov    -0x18(%rbp),%eax
ffffffff8002e78b:	85 c0                	test   %eax,%eax
ffffffff8002e78d:	79 05                	jns    ffffffff8002e794 <ZydisFormatterFormatOperandEx+0x2a7>
ffffffff8002e78f:	8b 45 e8             	mov    -0x18(%rbp),%eax
ffffffff8002e792:	eb 06                	jmp    ffffffff8002e79a <ZydisFormatterFormatOperandEx+0x2ad>
ffffffff8002e794:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff8002e799:	90                   	nop
ffffffff8002e79a:	c9                   	leave  
ffffffff8002e79b:	c3                   	ret    

ffffffff8002e79c <ZydisFormatterTokenizeInstruction>:
ffffffff8002e79c:	f3 0f 1e fa          	endbr64 
ffffffff8002e7a0:	55                   	push   %rbp
ffffffff8002e7a1:	48 89 e5             	mov    %rsp,%rbp
ffffffff8002e7a4:	48 83 ec 30          	sub    $0x30,%rsp
ffffffff8002e7a8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8002e7ac:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff8002e7b0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
ffffffff8002e7b4:	89 c8                	mov    %ecx,%eax
ffffffff8002e7b6:	4c 89 45 d8          	mov    %r8,-0x28(%rbp)
ffffffff8002e7ba:	4c 89 4d d0          	mov    %r9,-0x30(%rbp)
ffffffff8002e7be:	88 45 e4             	mov    %al,-0x1c(%rbp)
ffffffff8002e7c1:	0f b6 45 e4          	movzbl -0x1c(%rbp),%eax
ffffffff8002e7c5:	4c 8b 45 d0          	mov    -0x30(%rbp),%r8
ffffffff8002e7c9:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
ffffffff8002e7cd:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff8002e7d1:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
ffffffff8002e7d5:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff8002e7d9:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff8002e7dd:	6a 00                	push   $0x0
ffffffff8002e7df:	ff 75 18             	push   0x18(%rbp)
ffffffff8002e7e2:	ff 75 10             	push   0x10(%rbp)
ffffffff8002e7e5:	4d 89 c1             	mov    %r8,%r9
ffffffff8002e7e8:	49 89 c8             	mov    %rcx,%r8
ffffffff8002e7eb:	89 c1                	mov    %eax,%ecx
ffffffff8002e7ed:	e8 06 00 00 00       	call   ffffffff8002e7f8 <ZydisFormatterTokenizeInstructionEx>
ffffffff8002e7f2:	48 83 c4 20          	add    $0x20,%rsp
ffffffff8002e7f6:	c9                   	leave  
ffffffff8002e7f7:	c3                   	ret    

ffffffff8002e7f8 <ZydisFormatterTokenizeInstructionEx>:
ffffffff8002e7f8:	f3 0f 1e fa          	endbr64 
ffffffff8002e7fc:	55                   	push   %rbp
ffffffff8002e7fd:	48 89 e5             	mov    %rsp,%rbp
ffffffff8002e800:	48 81 ec c0 00 00 00 	sub    $0xc0,%rsp
ffffffff8002e807:	48 89 bd 68 ff ff ff 	mov    %rdi,-0x98(%rbp)
ffffffff8002e80e:	48 89 b5 60 ff ff ff 	mov    %rsi,-0xa0(%rbp)
ffffffff8002e815:	48 89 95 58 ff ff ff 	mov    %rdx,-0xa8(%rbp)
ffffffff8002e81c:	89 c8                	mov    %ecx,%eax
ffffffff8002e81e:	4c 89 85 48 ff ff ff 	mov    %r8,-0xb8(%rbp)
ffffffff8002e825:	4c 89 8d 40 ff ff ff 	mov    %r9,-0xc0(%rbp)
ffffffff8002e82c:	88 85 54 ff ff ff    	mov    %al,-0xac(%rbp)
ffffffff8002e832:	48 83 bd 68 ff ff ff 	cmpq   $0x0,-0x98(%rbp)
ffffffff8002e839:	00 
ffffffff8002e83a:	74 54                	je     ffffffff8002e890 <ZydisFormatterTokenizeInstructionEx+0x98>
ffffffff8002e83c:	48 83 bd 60 ff ff ff 	cmpq   $0x0,-0xa0(%rbp)
ffffffff8002e843:	00 
ffffffff8002e844:	74 4a                	je     ffffffff8002e890 <ZydisFormatterTokenizeInstructionEx+0x98>
ffffffff8002e846:	80 bd 54 ff ff ff 00 	cmpb   $0x0,-0xac(%rbp)
ffffffff8002e84d:	74 0a                	je     ffffffff8002e859 <ZydisFormatterTokenizeInstructionEx+0x61>
ffffffff8002e84f:	48 83 bd 58 ff ff ff 	cmpq   $0x0,-0xa8(%rbp)
ffffffff8002e856:	00 
ffffffff8002e857:	74 37                	je     ffffffff8002e890 <ZydisFormatterTokenizeInstructionEx+0x98>
ffffffff8002e859:	80 bd 54 ff ff ff 0a 	cmpb   $0xa,-0xac(%rbp)
ffffffff8002e860:	77 2e                	ja     ffffffff8002e890 <ZydisFormatterTokenizeInstructionEx+0x98>
ffffffff8002e862:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
ffffffff8002e869:	0f b6 40 19          	movzbl 0x19(%rax),%eax
ffffffff8002e86d:	38 85 54 ff ff ff    	cmp    %al,-0xac(%rbp)
ffffffff8002e873:	75 1b                	jne    ffffffff8002e890 <ZydisFormatterTokenizeInstructionEx+0x98>
ffffffff8002e875:	48 83 bd 48 ff ff ff 	cmpq   $0x0,-0xb8(%rbp)
ffffffff8002e87c:	00 
ffffffff8002e87d:	74 11                	je     ffffffff8002e890 <ZydisFormatterTokenizeInstructionEx+0x98>
ffffffff8002e87f:	48 83 bd 40 ff ff ff 	cmpq   $0x2,-0xc0(%rbp)
ffffffff8002e886:	02 
ffffffff8002e887:	76 07                	jbe    ffffffff8002e890 <ZydisFormatterTokenizeInstructionEx+0x98>
ffffffff8002e889:	48 83 7d 18 00       	cmpq   $0x0,0x18(%rbp)
ffffffff8002e88e:	75 0a                	jne    ffffffff8002e89a <ZydisFormatterTokenizeInstructionEx+0xa2>
ffffffff8002e890:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff8002e895:	e9 67 01 00 00       	jmp    ffffffff8002ea01 <ZydisFormatterTokenizeInstructionEx+0x209>
ffffffff8002e89a:	48 8b 8d 40 ff ff ff 	mov    -0xc0(%rbp),%rcx
ffffffff8002e8a1:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
ffffffff8002e8a8:	48 8d 75 98          	lea    -0x68(%rbp),%rsi
ffffffff8002e8ac:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
ffffffff8002e8b0:	48 89 c7             	mov    %rax,%rdi
ffffffff8002e8b3:	e8 3a f2 ff ff       	call   ffffffff8002daf2 <ZydisFormatterBufferInitTokenized>
ffffffff8002e8b8:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
ffffffff8002e8bf:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
ffffffff8002e8c6:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
ffffffff8002e8cd:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
ffffffff8002e8d4:	48 8b 45 10          	mov    0x10(%rbp),%rax
ffffffff8002e8d8:	48 89 45 88          	mov    %rax,-0x78(%rbp)
ffffffff8002e8dc:	48 c7 45 80 00 00 00 	movq   $0x0,-0x80(%rbp)
ffffffff8002e8e3:	00 
ffffffff8002e8e4:	48 8b 45 20          	mov    0x20(%rbp),%rax
ffffffff8002e8e8:	48 89 45 90          	mov    %rax,-0x70(%rbp)
ffffffff8002e8ec:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
ffffffff8002e8f3:	48 8b 80 b0 01 00 00 	mov    0x1b0(%rax),%rax
ffffffff8002e8fa:	48 85 c0             	test   %rax,%rax
ffffffff8002e8fd:	74 3b                	je     ffffffff8002e93a <ZydisFormatterTokenizeInstructionEx+0x142>
ffffffff8002e8ff:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
ffffffff8002e906:	4c 8b 80 b0 01 00 00 	mov    0x1b0(%rax),%r8
ffffffff8002e90d:	48 8d 95 70 ff ff ff 	lea    -0x90(%rbp),%rdx
ffffffff8002e914:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
ffffffff8002e918:	48 8b 8d 68 ff ff ff 	mov    -0x98(%rbp),%rcx
ffffffff8002e91f:	48 89 c6             	mov    %rax,%rsi
ffffffff8002e922:	48 89 cf             	mov    %rcx,%rdi
ffffffff8002e925:	41 ff d0             	call   *%r8
ffffffff8002e928:	89 45 fc             	mov    %eax,-0x4(%rbp)
ffffffff8002e92b:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8002e92e:	85 c0                	test   %eax,%eax
ffffffff8002e930:	79 08                	jns    ffffffff8002e93a <ZydisFormatterTokenizeInstructionEx+0x142>
ffffffff8002e932:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8002e935:	e9 c7 00 00 00       	jmp    ffffffff8002ea01 <ZydisFormatterTokenizeInstructionEx+0x209>
ffffffff8002e93a:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
ffffffff8002e941:	4c 8b 80 c0 01 00 00 	mov    0x1c0(%rax),%r8
ffffffff8002e948:	48 8d 95 70 ff ff ff 	lea    -0x90(%rbp),%rdx
ffffffff8002e94f:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
ffffffff8002e953:	48 8b 8d 68 ff ff ff 	mov    -0x98(%rbp),%rcx
ffffffff8002e95a:	48 89 c6             	mov    %rax,%rsi
ffffffff8002e95d:	48 89 cf             	mov    %rcx,%rdi
ffffffff8002e960:	41 ff d0             	call   *%r8
ffffffff8002e963:	89 45 f8             	mov    %eax,-0x8(%rbp)
ffffffff8002e966:	8b 45 f8             	mov    -0x8(%rbp),%eax
ffffffff8002e969:	85 c0                	test   %eax,%eax
ffffffff8002e96b:	79 08                	jns    ffffffff8002e975 <ZydisFormatterTokenizeInstructionEx+0x17d>
ffffffff8002e96d:	8b 45 f8             	mov    -0x8(%rbp),%eax
ffffffff8002e970:	e9 8c 00 00 00       	jmp    ffffffff8002ea01 <ZydisFormatterTokenizeInstructionEx+0x209>
ffffffff8002e975:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
ffffffff8002e97c:	48 8b 80 b8 01 00 00 	mov    0x1b8(%rax),%rax
ffffffff8002e983:	48 85 c0             	test   %rax,%rax
ffffffff8002e986:	74 38                	je     ffffffff8002e9c0 <ZydisFormatterTokenizeInstructionEx+0x1c8>
ffffffff8002e988:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
ffffffff8002e98f:	4c 8b 80 b8 01 00 00 	mov    0x1b8(%rax),%r8
ffffffff8002e996:	48 8d 95 70 ff ff ff 	lea    -0x90(%rbp),%rdx
ffffffff8002e99d:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
ffffffff8002e9a1:	48 8b 8d 68 ff ff ff 	mov    -0x98(%rbp),%rcx
ffffffff8002e9a8:	48 89 c6             	mov    %rax,%rsi
ffffffff8002e9ab:	48 89 cf             	mov    %rcx,%rdi
ffffffff8002e9ae:	41 ff d0             	call   *%r8
ffffffff8002e9b1:	89 45 f4             	mov    %eax,-0xc(%rbp)
ffffffff8002e9b4:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff8002e9b7:	85 c0                	test   %eax,%eax
ffffffff8002e9b9:	79 05                	jns    ffffffff8002e9c0 <ZydisFormatterTokenizeInstructionEx+0x1c8>
ffffffff8002e9bb:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff8002e9be:	eb 41                	jmp    ffffffff8002ea01 <ZydisFormatterTokenizeInstructionEx+0x209>
ffffffff8002e9c0:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff8002e9c4:	0f b6 40 01          	movzbl 0x1(%rax),%eax
ffffffff8002e9c8:	84 c0                	test   %al,%al
ffffffff8002e9ca:	74 24                	je     ffffffff8002e9f0 <ZydisFormatterTokenizeInstructionEx+0x1f8>
ffffffff8002e9cc:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
ffffffff8002e9d0:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff8002e9d4:	0f b6 40 01          	movzbl 0x1(%rax),%eax
ffffffff8002e9d8:	0f b6 c0             	movzbl %al,%eax
ffffffff8002e9db:	48 83 c0 02          	add    $0x2,%rax
ffffffff8002e9df:	48 01 c2             	add    %rax,%rdx
ffffffff8002e9e2:	48 8b 45 18          	mov    0x18(%rbp),%rax
ffffffff8002e9e6:	48 89 10             	mov    %rdx,(%rax)
ffffffff8002e9e9:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff8002e9ee:	eb 11                	jmp    ffffffff8002ea01 <ZydisFormatterTokenizeInstructionEx+0x209>
ffffffff8002e9f0:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
ffffffff8002e9f4:	48 8b 45 18          	mov    0x18(%rbp),%rax
ffffffff8002e9f8:	48 89 10             	mov    %rdx,(%rax)
ffffffff8002e9fb:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff8002ea00:	90                   	nop
ffffffff8002ea01:	c9                   	leave  
ffffffff8002ea02:	c3                   	ret    

ffffffff8002ea03 <ZydisFormatterTokenizeOperand>:
ffffffff8002ea03:	f3 0f 1e fa          	endbr64 
ffffffff8002ea07:	55                   	push   %rbp
ffffffff8002ea08:	48 89 e5             	mov    %rsp,%rbp
ffffffff8002ea0b:	48 83 ec 30          	sub    $0x30,%rsp
ffffffff8002ea0f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8002ea13:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff8002ea17:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
ffffffff8002ea1b:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
ffffffff8002ea1f:	4c 89 45 d8          	mov    %r8,-0x28(%rbp)
ffffffff8002ea23:	4c 89 4d d0          	mov    %r9,-0x30(%rbp)
ffffffff8002ea27:	4c 8b 45 d0          	mov    -0x30(%rbp),%r8
ffffffff8002ea2b:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
ffffffff8002ea2f:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
ffffffff8002ea33:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff8002ea37:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
ffffffff8002ea3b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8002ea3f:	6a 00                	push   $0x0
ffffffff8002ea41:	ff 75 10             	push   0x10(%rbp)
ffffffff8002ea44:	4d 89 c1             	mov    %r8,%r9
ffffffff8002ea47:	49 89 f8             	mov    %rdi,%r8
ffffffff8002ea4a:	48 89 c7             	mov    %rax,%rdi
ffffffff8002ea4d:	e8 06 00 00 00       	call   ffffffff8002ea58 <ZydisFormatterTokenizeOperandEx>
ffffffff8002ea52:	48 83 c4 10          	add    $0x10,%rsp
ffffffff8002ea56:	c9                   	leave  
ffffffff8002ea57:	c3                   	ret    

ffffffff8002ea58 <ZydisFormatterTokenizeOperandEx>:
ffffffff8002ea58:	f3 0f 1e fa          	endbr64 
ffffffff8002ea5c:	55                   	push   %rbp
ffffffff8002ea5d:	48 89 e5             	mov    %rsp,%rbp
ffffffff8002ea60:	48 81 ec d0 00 00 00 	sub    $0xd0,%rsp
ffffffff8002ea67:	48 89 bd 58 ff ff ff 	mov    %rdi,-0xa8(%rbp)
ffffffff8002ea6e:	48 89 b5 50 ff ff ff 	mov    %rsi,-0xb0(%rbp)
ffffffff8002ea75:	48 89 95 48 ff ff ff 	mov    %rdx,-0xb8(%rbp)
ffffffff8002ea7c:	48 89 8d 40 ff ff ff 	mov    %rcx,-0xc0(%rbp)
ffffffff8002ea83:	4c 89 85 38 ff ff ff 	mov    %r8,-0xc8(%rbp)
ffffffff8002ea8a:	4c 89 8d 30 ff ff ff 	mov    %r9,-0xd0(%rbp)
ffffffff8002ea91:	48 83 bd 58 ff ff ff 	cmpq   $0x0,-0xa8(%rbp)
ffffffff8002ea98:	00 
ffffffff8002ea99:	74 2f                	je     ffffffff8002eaca <ZydisFormatterTokenizeOperandEx+0x72>
ffffffff8002ea9b:	48 83 bd 50 ff ff ff 	cmpq   $0x0,-0xb0(%rbp)
ffffffff8002eaa2:	00 
ffffffff8002eaa3:	74 25                	je     ffffffff8002eaca <ZydisFormatterTokenizeOperandEx+0x72>
ffffffff8002eaa5:	48 83 bd 48 ff ff ff 	cmpq   $0x0,-0xb8(%rbp)
ffffffff8002eaac:	00 
ffffffff8002eaad:	74 1b                	je     ffffffff8002eaca <ZydisFormatterTokenizeOperandEx+0x72>
ffffffff8002eaaf:	48 83 bd 40 ff ff ff 	cmpq   $0x0,-0xc0(%rbp)
ffffffff8002eab6:	00 
ffffffff8002eab7:	74 11                	je     ffffffff8002eaca <ZydisFormatterTokenizeOperandEx+0x72>
ffffffff8002eab9:	48 83 bd 38 ff ff ff 	cmpq   $0x2,-0xc8(%rbp)
ffffffff8002eac0:	02 
ffffffff8002eac1:	76 07                	jbe    ffffffff8002eaca <ZydisFormatterTokenizeOperandEx+0x72>
ffffffff8002eac3:	48 83 7d 10 00       	cmpq   $0x0,0x10(%rbp)
ffffffff8002eac8:	75 0a                	jne    ffffffff8002ead4 <ZydisFormatterTokenizeOperandEx+0x7c>
ffffffff8002eaca:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff8002eacf:	e9 7a 02 00 00       	jmp    ffffffff8002ed4e <ZydisFormatterTokenizeOperandEx+0x2f6>
ffffffff8002ead4:	48 8b 8d 38 ff ff ff 	mov    -0xc8(%rbp),%rcx
ffffffff8002eadb:	48 8b 95 40 ff ff ff 	mov    -0xc0(%rbp),%rdx
ffffffff8002eae2:	48 8d 75 e0          	lea    -0x20(%rbp),%rsi
ffffffff8002eae6:	48 8d 45 90          	lea    -0x70(%rbp),%rax
ffffffff8002eaea:	48 89 c7             	mov    %rax,%rdi
ffffffff8002eaed:	e8 00 f0 ff ff       	call   ffffffff8002daf2 <ZydisFormatterBufferInitTokenized>
ffffffff8002eaf2:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
ffffffff8002eaf9:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
ffffffff8002eb00:	48 c7 85 68 ff ff ff 	movq   $0x0,-0x98(%rbp)
ffffffff8002eb07:	00 00 00 00 
ffffffff8002eb0b:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
ffffffff8002eb12:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
ffffffff8002eb19:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
ffffffff8002eb20:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
ffffffff8002eb27:	48 8b 45 18          	mov    0x18(%rbp),%rax
ffffffff8002eb2b:	48 89 45 80          	mov    %rax,-0x80(%rbp)
ffffffff8002eb2f:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
ffffffff8002eb36:	48 8b 80 c8 01 00 00 	mov    0x1c8(%rax),%rax
ffffffff8002eb3d:	48 85 c0             	test   %rax,%rax
ffffffff8002eb40:	74 3b                	je     ffffffff8002eb7d <ZydisFormatterTokenizeOperandEx+0x125>
ffffffff8002eb42:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
ffffffff8002eb49:	4c 8b 80 c8 01 00 00 	mov    0x1c8(%rax),%r8
ffffffff8002eb50:	48 8d 95 60 ff ff ff 	lea    -0xa0(%rbp),%rdx
ffffffff8002eb57:	48 8d 45 90          	lea    -0x70(%rbp),%rax
ffffffff8002eb5b:	48 8b 8d 58 ff ff ff 	mov    -0xa8(%rbp),%rcx
ffffffff8002eb62:	48 89 c6             	mov    %rax,%rsi
ffffffff8002eb65:	48 89 cf             	mov    %rcx,%rdi
ffffffff8002eb68:	41 ff d0             	call   *%r8
ffffffff8002eb6b:	89 45 fc             	mov    %eax,-0x4(%rbp)
ffffffff8002eb6e:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8002eb71:	85 c0                	test   %eax,%eax
ffffffff8002eb73:	79 08                	jns    ffffffff8002eb7d <ZydisFormatterTokenizeOperandEx+0x125>
ffffffff8002eb75:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8002eb78:	e9 d1 01 00 00       	jmp    ffffffff8002ed4e <ZydisFormatterTokenizeOperandEx+0x2f6>
ffffffff8002eb7d:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
ffffffff8002eb84:	8b 40 04             	mov    0x4(%rax),%eax
ffffffff8002eb87:	83 f8 04             	cmp    $0x4,%eax
ffffffff8002eb8a:	0f 84 a8 00 00 00    	je     ffffffff8002ec38 <ZydisFormatterTokenizeOperandEx+0x1e0>
ffffffff8002eb90:	83 f8 04             	cmp    $0x4,%eax
ffffffff8002eb93:	0f 87 15 01 00 00    	ja     ffffffff8002ecae <ZydisFormatterTokenizeOperandEx+0x256>
ffffffff8002eb99:	83 f8 03             	cmp    $0x3,%eax
ffffffff8002eb9c:	0f 84 d1 00 00 00    	je     ffffffff8002ec73 <ZydisFormatterTokenizeOperandEx+0x21b>
ffffffff8002eba2:	83 f8 03             	cmp    $0x3,%eax
ffffffff8002eba5:	0f 87 03 01 00 00    	ja     ffffffff8002ecae <ZydisFormatterTokenizeOperandEx+0x256>
ffffffff8002ebab:	83 f8 01             	cmp    $0x1,%eax
ffffffff8002ebae:	74 0a                	je     ffffffff8002ebba <ZydisFormatterTokenizeOperandEx+0x162>
ffffffff8002ebb0:	83 f8 02             	cmp    $0x2,%eax
ffffffff8002ebb3:	74 44                	je     ffffffff8002ebf9 <ZydisFormatterTokenizeOperandEx+0x1a1>
ffffffff8002ebb5:	e9 f4 00 00 00       	jmp    ffffffff8002ecae <ZydisFormatterTokenizeOperandEx+0x256>
ffffffff8002ebba:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
ffffffff8002ebc1:	4c 8b 80 d8 01 00 00 	mov    0x1d8(%rax),%r8
ffffffff8002ebc8:	48 8d 95 60 ff ff ff 	lea    -0xa0(%rbp),%rdx
ffffffff8002ebcf:	48 8d 45 90          	lea    -0x70(%rbp),%rax
ffffffff8002ebd3:	48 8b 8d 58 ff ff ff 	mov    -0xa8(%rbp),%rcx
ffffffff8002ebda:	48 89 c6             	mov    %rax,%rsi
ffffffff8002ebdd:	48 89 cf             	mov    %rcx,%rdi
ffffffff8002ebe0:	41 ff d0             	call   *%r8
ffffffff8002ebe3:	89 45 ec             	mov    %eax,-0x14(%rbp)
ffffffff8002ebe6:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff8002ebe9:	85 c0                	test   %eax,%eax
ffffffff8002ebeb:	0f 89 c7 00 00 00    	jns    ffffffff8002ecb8 <ZydisFormatterTokenizeOperandEx+0x260>
ffffffff8002ebf1:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff8002ebf4:	e9 55 01 00 00       	jmp    ffffffff8002ed4e <ZydisFormatterTokenizeOperandEx+0x2f6>
ffffffff8002ebf9:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
ffffffff8002ec00:	4c 8b 80 e0 01 00 00 	mov    0x1e0(%rax),%r8
ffffffff8002ec07:	48 8d 95 60 ff ff ff 	lea    -0xa0(%rbp),%rdx
ffffffff8002ec0e:	48 8d 45 90          	lea    -0x70(%rbp),%rax
ffffffff8002ec12:	48 8b 8d 58 ff ff ff 	mov    -0xa8(%rbp),%rcx
ffffffff8002ec19:	48 89 c6             	mov    %rax,%rsi
ffffffff8002ec1c:	48 89 cf             	mov    %rcx,%rdi
ffffffff8002ec1f:	41 ff d0             	call   *%r8
ffffffff8002ec22:	89 45 f0             	mov    %eax,-0x10(%rbp)
ffffffff8002ec25:	8b 45 f0             	mov    -0x10(%rbp),%eax
ffffffff8002ec28:	85 c0                	test   %eax,%eax
ffffffff8002ec2a:	0f 89 8b 00 00 00    	jns    ffffffff8002ecbb <ZydisFormatterTokenizeOperandEx+0x263>
ffffffff8002ec30:	8b 45 f0             	mov    -0x10(%rbp),%eax
ffffffff8002ec33:	e9 16 01 00 00       	jmp    ffffffff8002ed4e <ZydisFormatterTokenizeOperandEx+0x2f6>
ffffffff8002ec38:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
ffffffff8002ec3f:	4c 8b 80 f0 01 00 00 	mov    0x1f0(%rax),%r8
ffffffff8002ec46:	48 8d 95 60 ff ff ff 	lea    -0xa0(%rbp),%rdx
ffffffff8002ec4d:	48 8d 45 90          	lea    -0x70(%rbp),%rax
ffffffff8002ec51:	48 8b 8d 58 ff ff ff 	mov    -0xa8(%rbp),%rcx
ffffffff8002ec58:	48 89 c6             	mov    %rax,%rsi
ffffffff8002ec5b:	48 89 cf             	mov    %rcx,%rdi
ffffffff8002ec5e:	41 ff d0             	call   *%r8
ffffffff8002ec61:	89 45 f8             	mov    %eax,-0x8(%rbp)
ffffffff8002ec64:	8b 45 f8             	mov    -0x8(%rbp),%eax
ffffffff8002ec67:	85 c0                	test   %eax,%eax
ffffffff8002ec69:	79 53                	jns    ffffffff8002ecbe <ZydisFormatterTokenizeOperandEx+0x266>
ffffffff8002ec6b:	8b 45 f8             	mov    -0x8(%rbp),%eax
ffffffff8002ec6e:	e9 db 00 00 00       	jmp    ffffffff8002ed4e <ZydisFormatterTokenizeOperandEx+0x2f6>
ffffffff8002ec73:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
ffffffff8002ec7a:	4c 8b 80 e8 01 00 00 	mov    0x1e8(%rax),%r8
ffffffff8002ec81:	48 8d 95 60 ff ff ff 	lea    -0xa0(%rbp),%rdx
ffffffff8002ec88:	48 8d 45 90          	lea    -0x70(%rbp),%rax
ffffffff8002ec8c:	48 8b 8d 58 ff ff ff 	mov    -0xa8(%rbp),%rcx
ffffffff8002ec93:	48 89 c6             	mov    %rax,%rsi
ffffffff8002ec96:	48 89 cf             	mov    %rcx,%rdi
ffffffff8002ec99:	41 ff d0             	call   *%r8
ffffffff8002ec9c:	89 45 f4             	mov    %eax,-0xc(%rbp)
ffffffff8002ec9f:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff8002eca2:	85 c0                	test   %eax,%eax
ffffffff8002eca4:	79 1b                	jns    ffffffff8002ecc1 <ZydisFormatterTokenizeOperandEx+0x269>
ffffffff8002eca6:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff8002eca9:	e9 a0 00 00 00       	jmp    ffffffff8002ed4e <ZydisFormatterTokenizeOperandEx+0x2f6>
ffffffff8002ecae:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff8002ecb3:	e9 96 00 00 00       	jmp    ffffffff8002ed4e <ZydisFormatterTokenizeOperandEx+0x2f6>
ffffffff8002ecb8:	90                   	nop
ffffffff8002ecb9:	eb 07                	jmp    ffffffff8002ecc2 <ZydisFormatterTokenizeOperandEx+0x26a>
ffffffff8002ecbb:	90                   	nop
ffffffff8002ecbc:	eb 04                	jmp    ffffffff8002ecc2 <ZydisFormatterTokenizeOperandEx+0x26a>
ffffffff8002ecbe:	90                   	nop
ffffffff8002ecbf:	eb 01                	jmp    ffffffff8002ecc2 <ZydisFormatterTokenizeOperandEx+0x26a>
ffffffff8002ecc1:	90                   	nop
ffffffff8002ecc2:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
ffffffff8002ecc9:	48 8b 80 d0 01 00 00 	mov    0x1d0(%rax),%rax
ffffffff8002ecd0:	48 85 c0             	test   %rax,%rax
ffffffff8002ecd3:	74 38                	je     ffffffff8002ed0d <ZydisFormatterTokenizeOperandEx+0x2b5>
ffffffff8002ecd5:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
ffffffff8002ecdc:	4c 8b 80 d0 01 00 00 	mov    0x1d0(%rax),%r8
ffffffff8002ece3:	48 8d 95 60 ff ff ff 	lea    -0xa0(%rbp),%rdx
ffffffff8002ecea:	48 8d 45 90          	lea    -0x70(%rbp),%rax
ffffffff8002ecee:	48 8b 8d 58 ff ff ff 	mov    -0xa8(%rbp),%rcx
ffffffff8002ecf5:	48 89 c6             	mov    %rax,%rsi
ffffffff8002ecf8:	48 89 cf             	mov    %rcx,%rdi
ffffffff8002ecfb:	41 ff d0             	call   *%r8
ffffffff8002ecfe:	89 45 e8             	mov    %eax,-0x18(%rbp)
ffffffff8002ed01:	8b 45 e8             	mov    -0x18(%rbp),%eax
ffffffff8002ed04:	85 c0                	test   %eax,%eax
ffffffff8002ed06:	79 05                	jns    ffffffff8002ed0d <ZydisFormatterTokenizeOperandEx+0x2b5>
ffffffff8002ed08:	8b 45 e8             	mov    -0x18(%rbp),%eax
ffffffff8002ed0b:	eb 41                	jmp    ffffffff8002ed4e <ZydisFormatterTokenizeOperandEx+0x2f6>
ffffffff8002ed0d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8002ed11:	0f b6 40 01          	movzbl 0x1(%rax),%eax
ffffffff8002ed15:	84 c0                	test   %al,%al
ffffffff8002ed17:	74 24                	je     ffffffff8002ed3d <ZydisFormatterTokenizeOperandEx+0x2e5>
ffffffff8002ed19:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff8002ed1d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8002ed21:	0f b6 40 01          	movzbl 0x1(%rax),%eax
ffffffff8002ed25:	0f b6 c0             	movzbl %al,%eax
ffffffff8002ed28:	48 83 c0 02          	add    $0x2,%rax
ffffffff8002ed2c:	48 01 c2             	add    %rax,%rdx
ffffffff8002ed2f:	48 8b 45 10          	mov    0x10(%rbp),%rax
ffffffff8002ed33:	48 89 10             	mov    %rdx,(%rax)
ffffffff8002ed36:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff8002ed3b:	eb 11                	jmp    ffffffff8002ed4e <ZydisFormatterTokenizeOperandEx+0x2f6>
ffffffff8002ed3d:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff8002ed41:	48 8b 45 10          	mov    0x10(%rbp),%rax
ffffffff8002ed45:	48 89 10             	mov    %rdx,(%rax)
ffffffff8002ed48:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff8002ed4d:	90                   	nop
ffffffff8002ed4e:	c9                   	leave  
ffffffff8002ed4f:	c3                   	ret    

ffffffff8002ed50 <ZYAN_MEMCPY.lto_priv.9>:
ffffffff8002ed50:	55                   	push   %rbp
ffffffff8002ed51:	48 89 e5             	mov    %rsp,%rbp
ffffffff8002ed54:	48 83 ec 28          	sub    $0x28,%rsp
ffffffff8002ed58:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff8002ed5c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
ffffffff8002ed60:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
ffffffff8002ed64:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002ed68:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8002ed6c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8002ed70:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff8002ed74:	eb 1d                	jmp    ffffffff8002ed93 <ZYAN_MEMCPY.lto_priv.9+0x43>
ffffffff8002ed76:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff8002ed7a:	48 8d 42 01          	lea    0x1(%rdx),%rax
ffffffff8002ed7e:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff8002ed82:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8002ed86:	48 8d 48 01          	lea    0x1(%rax),%rcx
ffffffff8002ed8a:	48 89 4d f8          	mov    %rcx,-0x8(%rbp)
ffffffff8002ed8e:	0f b6 12             	movzbl (%rdx),%edx
ffffffff8002ed91:	88 10                	mov    %dl,(%rax)
ffffffff8002ed93:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8002ed97:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
ffffffff8002ed9b:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
ffffffff8002ed9f:	48 85 c0             	test   %rax,%rax
ffffffff8002eda2:	75 d2                	jne    ffffffff8002ed76 <ZYAN_MEMCPY.lto_priv.9+0x26>
ffffffff8002eda4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002eda8:	c9                   	leave  
ffffffff8002eda9:	c3                   	ret    

ffffffff8002edaa <ZyanAbsI64.lto_priv.2>:
ffffffff8002edaa:	55                   	push   %rbp
ffffffff8002edab:	48 89 e5             	mov    %rsp,%rbp
ffffffff8002edae:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff8002edb2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8002edb6:	48 b8 00 00 00 00 00 	movabs $0x8000000000000000,%rax
ffffffff8002edbd:	00 00 80 
ffffffff8002edc0:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
ffffffff8002edc4:	75 0c                	jne    ffffffff8002edd2 <ZyanAbsI64.lto_priv.2+0x28>
ffffffff8002edc6:	48 b8 00 00 00 00 00 	movabs $0x8000000000000000,%rax
ffffffff8002edcd:	00 00 80 
ffffffff8002edd0:	eb 0c                	jmp    ffffffff8002edde <ZyanAbsI64.lto_priv.2+0x34>
ffffffff8002edd2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8002edd6:	48 99                	cqto   
ffffffff8002edd8:	48 31 d0             	xor    %rdx,%rax
ffffffff8002eddb:	48 29 d0             	sub    %rdx,%rax
ffffffff8002edde:	c9                   	leave  
ffffffff8002eddf:	c3                   	ret    

ffffffff8002ede0 <ZydisStringAppend.lto_priv.2>:
ffffffff8002ede0:	55                   	push   %rbp
ffffffff8002ede1:	48 89 e5             	mov    %rsp,%rbp
ffffffff8002ede4:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff8002ede8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8002edec:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff8002edf0:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff8002edf5:	74 05                	je     ffffffff8002edfc <ZydisStringAppend.lto_priv.2+0x1c>
ffffffff8002edf7:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
ffffffff8002edfc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8002ee00:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff8002ee04:	48 85 c0             	test   %rax,%rax
ffffffff8002ee07:	74 0b                	je     ffffffff8002ee14 <ZydisStringAppend.lto_priv.2+0x34>
ffffffff8002ee09:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8002ee0d:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff8002ee11:	48 85 c0             	test   %rax,%rax
ffffffff8002ee14:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8002ee18:	48 8b 50 18          	mov    0x18(%rax),%rdx
ffffffff8002ee1c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8002ee20:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff8002ee24:	48 01 d0             	add    %rdx,%rax
ffffffff8002ee27:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
ffffffff8002ee2b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8002ee2f:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff8002ee33:	48 39 c2             	cmp    %rax,%rdx
ffffffff8002ee36:	76 07                	jbe    ffffffff8002ee3f <ZydisStringAppend.lto_priv.2+0x5f>
ffffffff8002ee38:	b8 09 00 10 80       	mov    $0x80100009,%eax
ffffffff8002ee3d:	eb 74                	jmp    ffffffff8002eeb3 <ZydisStringAppend.lto_priv.2+0xd3>
ffffffff8002ee3f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8002ee43:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff8002ee47:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
ffffffff8002ee4b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8002ee4f:	48 8b 48 38          	mov    0x38(%rax),%rcx
ffffffff8002ee53:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8002ee57:	48 8b 70 38          	mov    0x38(%rax),%rsi
ffffffff8002ee5b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8002ee5f:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff8002ee63:	48 83 e8 01          	sub    $0x1,%rax
ffffffff8002ee67:	48 01 f0             	add    %rsi,%rax
ffffffff8002ee6a:	48 89 ce             	mov    %rcx,%rsi
ffffffff8002ee6d:	48 89 c7             	mov    %rax,%rdi
ffffffff8002ee70:	e8 db fe ff ff       	call   ffffffff8002ed50 <ZYAN_MEMCPY.lto_priv.9>
ffffffff8002ee75:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8002ee79:	48 8b 50 18          	mov    0x18(%rax),%rdx
ffffffff8002ee7d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8002ee81:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff8002ee85:	48 01 d0             	add    %rdx,%rax
ffffffff8002ee88:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
ffffffff8002ee8c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8002ee90:	48 89 50 18          	mov    %rdx,0x18(%rax)
ffffffff8002ee94:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8002ee98:	48 8b 50 38          	mov    0x38(%rax),%rdx
ffffffff8002ee9c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8002eea0:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff8002eea4:	48 83 e8 01          	sub    $0x1,%rax
ffffffff8002eea8:	48 01 d0             	add    %rdx,%rax
ffffffff8002eeab:	c6 00 00             	movb   $0x0,(%rax)
ffffffff8002eeae:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff8002eeb3:	c9                   	leave  
ffffffff8002eeb4:	c3                   	ret    

ffffffff8002eeb5 <ZydisStringAppendShort.lto_priv.1>:
ffffffff8002eeb5:	55                   	push   %rbp
ffffffff8002eeb6:	48 89 e5             	mov    %rsp,%rbp
ffffffff8002eeb9:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff8002eebd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8002eec1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff8002eec5:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff8002eeca:	74 05                	je     ffffffff8002eed1 <ZydisStringAppendShort.lto_priv.1+0x1c>
ffffffff8002eecc:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
ffffffff8002eed1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8002eed5:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff8002eed9:	48 85 c0             	test   %rax,%rax
ffffffff8002eedc:	74 0a                	je     ffffffff8002eee8 <ZydisStringAppendShort.lto_priv.1+0x33>
ffffffff8002eede:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8002eee2:	0f b6 40 08          	movzbl 0x8(%rax),%eax
ffffffff8002eee6:	84 c0                	test   %al,%al
ffffffff8002eee8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8002eeec:	48 8b 50 18          	mov    0x18(%rax),%rdx
ffffffff8002eef0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8002eef4:	0f b6 40 08          	movzbl 0x8(%rax),%eax
ffffffff8002eef8:	0f b6 c0             	movzbl %al,%eax
ffffffff8002eefb:	48 01 c2             	add    %rax,%rdx
ffffffff8002eefe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8002ef02:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff8002ef06:	48 39 c2             	cmp    %rax,%rdx
ffffffff8002ef09:	76 07                	jbe    ffffffff8002ef12 <ZydisStringAppendShort.lto_priv.1+0x5d>
ffffffff8002ef0b:	b8 09 00 10 80       	mov    $0x80100009,%eax
ffffffff8002ef10:	eb 5b                	jmp    ffffffff8002ef6d <ZydisStringAppendShort.lto_priv.1+0xb8>
ffffffff8002ef12:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8002ef16:	0f b6 40 08          	movzbl 0x8(%rax),%eax
ffffffff8002ef1a:	0f b6 c0             	movzbl %al,%eax
ffffffff8002ef1d:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffff8002ef21:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8002ef25:	48 8b 08             	mov    (%rax),%rcx
ffffffff8002ef28:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8002ef2c:	48 8b 70 38          	mov    0x38(%rax),%rsi
ffffffff8002ef30:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8002ef34:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff8002ef38:	48 83 e8 01          	sub    $0x1,%rax
ffffffff8002ef3c:	48 01 f0             	add    %rsi,%rax
ffffffff8002ef3f:	48 89 ce             	mov    %rcx,%rsi
ffffffff8002ef42:	48 89 c7             	mov    %rax,%rdi
ffffffff8002ef45:	e8 06 fe ff ff       	call   ffffffff8002ed50 <ZYAN_MEMCPY.lto_priv.9>
ffffffff8002ef4a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8002ef4e:	48 8b 50 18          	mov    0x18(%rax),%rdx
ffffffff8002ef52:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8002ef56:	0f b6 40 08          	movzbl 0x8(%rax),%eax
ffffffff8002ef5a:	0f b6 c0             	movzbl %al,%eax
ffffffff8002ef5d:	48 01 c2             	add    %rax,%rdx
ffffffff8002ef60:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8002ef64:	48 89 50 18          	mov    %rdx,0x18(%rax)
ffffffff8002ef68:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff8002ef6d:	c9                   	leave  
ffffffff8002ef6e:	c3                   	ret    

ffffffff8002ef6f <ZydisStringAppendShortCase.lto_priv.1>:
ffffffff8002ef6f:	55                   	push   %rbp
ffffffff8002ef70:	48 89 e5             	mov    %rsp,%rbp
ffffffff8002ef73:	48 83 ec 68          	sub    $0x68,%rsp
ffffffff8002ef77:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
ffffffff8002ef7b:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
ffffffff8002ef7f:	89 55 9c             	mov    %edx,-0x64(%rbp)
ffffffff8002ef82:	48 83 7d a8 00       	cmpq   $0x0,-0x58(%rbp)
ffffffff8002ef87:	74 05                	je     ffffffff8002ef8e <ZydisStringAppendShortCase.lto_priv.1+0x1f>
ffffffff8002ef89:	48 83 7d a0 00       	cmpq   $0x0,-0x60(%rbp)
ffffffff8002ef8e:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff8002ef92:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff8002ef96:	48 85 c0             	test   %rax,%rax
ffffffff8002ef99:	74 0a                	je     ffffffff8002efa5 <ZydisStringAppendShortCase.lto_priv.1+0x36>
ffffffff8002ef9b:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff8002ef9f:	0f b6 40 08          	movzbl 0x8(%rax),%eax
ffffffff8002efa3:	84 c0                	test   %al,%al
ffffffff8002efa5:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff8002efa9:	48 8b 50 18          	mov    0x18(%rax),%rdx
ffffffff8002efad:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff8002efb1:	0f b6 40 08          	movzbl 0x8(%rax),%eax
ffffffff8002efb5:	0f b6 c0             	movzbl %al,%eax
ffffffff8002efb8:	48 01 c2             	add    %rax,%rdx
ffffffff8002efbb:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff8002efbf:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff8002efc3:	48 39 c2             	cmp    %rax,%rdx
ffffffff8002efc6:	76 0a                	jbe    ffffffff8002efd2 <ZydisStringAppendShortCase.lto_priv.1+0x63>
ffffffff8002efc8:	b8 09 00 10 80       	mov    $0x80100009,%eax
ffffffff8002efcd:	e9 7e 01 00 00       	jmp    ffffffff8002f150 <ZydisStringAppendShortCase.lto_priv.1+0x1e1>
ffffffff8002efd2:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff8002efd6:	0f b6 40 08          	movzbl 0x8(%rax),%eax
ffffffff8002efda:	0f b6 c0             	movzbl %al,%eax
ffffffff8002efdd:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffff8002efe1:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff8002efe5:	48 8b 08             	mov    (%rax),%rcx
ffffffff8002efe8:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff8002efec:	48 8b 70 38          	mov    0x38(%rax),%rsi
ffffffff8002eff0:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff8002eff4:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff8002eff8:	48 83 e8 01          	sub    $0x1,%rax
ffffffff8002effc:	48 01 f0             	add    %rsi,%rax
ffffffff8002efff:	48 89 ce             	mov    %rcx,%rsi
ffffffff8002f002:	48 89 c7             	mov    %rax,%rdi
ffffffff8002f005:	e8 46 fd ff ff       	call   ffffffff8002ed50 <ZYAN_MEMCPY.lto_priv.9>
ffffffff8002f00a:	83 7d 9c 02          	cmpl   $0x2,-0x64(%rbp)
ffffffff8002f00e:	0f 84 9a 00 00 00    	je     ffffffff8002f0ae <ZydisStringAppendShortCase.lto_priv.1+0x13f>
ffffffff8002f014:	83 7d 9c 02          	cmpl   $0x2,-0x64(%rbp)
ffffffff8002f018:	0f 87 0c 01 00 00    	ja     ffffffff8002f12a <ZydisStringAppendShortCase.lto_priv.1+0x1bb>
ffffffff8002f01e:	83 7d 9c 00          	cmpl   $0x0,-0x64(%rbp)
ffffffff8002f022:	0f 84 04 01 00 00    	je     ffffffff8002f12c <ZydisStringAppendShortCase.lto_priv.1+0x1bd>
ffffffff8002f028:	83 7d 9c 01          	cmpl   $0x1,-0x64(%rbp)
ffffffff8002f02c:	0f 85 f8 00 00 00    	jne    ffffffff8002f12a <ZydisStringAppendShortCase.lto_priv.1+0x1bb>
ffffffff8002f032:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff8002f036:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff8002f03a:	48 83 e8 01          	sub    $0x1,%rax
ffffffff8002f03e:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
ffffffff8002f042:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff8002f046:	0f b6 40 08          	movzbl 0x8(%rax),%eax
ffffffff8002f04a:	0f b6 c0             	movzbl %al,%eax
ffffffff8002f04d:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
ffffffff8002f051:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff8002f055:	48 8b 50 38          	mov    0x38(%rax),%rdx
ffffffff8002f059:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002f05d:	48 01 d0             	add    %rdx,%rax
ffffffff8002f060:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8002f064:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002f068:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff8002f06c:	eb 2d                	jmp    ffffffff8002f09b <ZydisStringAppendShortCase.lto_priv.1+0x12c>
ffffffff8002f06e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8002f072:	0f b6 00             	movzbl (%rax),%eax
ffffffff8002f075:	88 45 b7             	mov    %al,-0x49(%rbp)
ffffffff8002f078:	80 7d b7 40          	cmpb   $0x40,-0x49(%rbp)
ffffffff8002f07c:	7e 13                	jle    ffffffff8002f091 <ZydisStringAppendShortCase.lto_priv.1+0x122>
ffffffff8002f07e:	80 7d b7 5a          	cmpb   $0x5a,-0x49(%rbp)
ffffffff8002f082:	7f 0d                	jg     ffffffff8002f091 <ZydisStringAppendShortCase.lto_priv.1+0x122>
ffffffff8002f084:	0f b6 45 b7          	movzbl -0x49(%rbp),%eax
ffffffff8002f088:	83 c8 20             	or     $0x20,%eax
ffffffff8002f08b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff8002f08f:	88 02                	mov    %al,(%rdx)
ffffffff8002f091:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
ffffffff8002f096:	48 83 45 f0 01       	addq   $0x1,-0x10(%rbp)
ffffffff8002f09b:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
ffffffff8002f09f:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff8002f0a3:	48 01 d0             	add    %rdx,%rax
ffffffff8002f0a6:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
ffffffff8002f0aa:	72 c2                	jb     ffffffff8002f06e <ZydisStringAppendShortCase.lto_priv.1+0xff>
ffffffff8002f0ac:	eb 7f                	jmp    ffffffff8002f12d <ZydisStringAppendShortCase.lto_priv.1+0x1be>
ffffffff8002f0ae:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff8002f0b2:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff8002f0b6:	48 83 e8 01          	sub    $0x1,%rax
ffffffff8002f0ba:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
ffffffff8002f0be:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff8002f0c2:	0f b6 40 08          	movzbl 0x8(%rax),%eax
ffffffff8002f0c6:	0f b6 c0             	movzbl %al,%eax
ffffffff8002f0c9:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
ffffffff8002f0cd:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff8002f0d1:	48 8b 50 38          	mov    0x38(%rax),%rdx
ffffffff8002f0d5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8002f0d9:	48 01 d0             	add    %rdx,%rax
ffffffff8002f0dc:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff8002f0e0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8002f0e4:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff8002f0e8:	eb 2d                	jmp    ffffffff8002f117 <ZydisStringAppendShortCase.lto_priv.1+0x1a8>
ffffffff8002f0ea:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002f0ee:	0f b6 00             	movzbl (%rax),%eax
ffffffff8002f0f1:	88 45 cf             	mov    %al,-0x31(%rbp)
ffffffff8002f0f4:	80 7d cf 60          	cmpb   $0x60,-0x31(%rbp)
ffffffff8002f0f8:	7e 13                	jle    ffffffff8002f10d <ZydisStringAppendShortCase.lto_priv.1+0x19e>
ffffffff8002f0fa:	80 7d cf 7a          	cmpb   $0x7a,-0x31(%rbp)
ffffffff8002f0fe:	7f 0d                	jg     ffffffff8002f10d <ZydisStringAppendShortCase.lto_priv.1+0x19e>
ffffffff8002f100:	0f b6 45 cf          	movzbl -0x31(%rbp),%eax
ffffffff8002f104:	83 e0 df             	and    $0xffffffdf,%eax
ffffffff8002f107:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff8002f10b:	88 02                	mov    %al,(%rdx)
ffffffff8002f10d:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
ffffffff8002f112:	48 83 45 e0 01       	addq   $0x1,-0x20(%rbp)
ffffffff8002f117:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff8002f11b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8002f11f:	48 01 d0             	add    %rdx,%rax
ffffffff8002f122:	48 39 45 e0          	cmp    %rax,-0x20(%rbp)
ffffffff8002f126:	72 c2                	jb     ffffffff8002f0ea <ZydisStringAppendShortCase.lto_priv.1+0x17b>
ffffffff8002f128:	eb 03                	jmp    ffffffff8002f12d <ZydisStringAppendShortCase.lto_priv.1+0x1be>
ffffffff8002f12a:	eb fe                	jmp    ffffffff8002f12a <ZydisStringAppendShortCase.lto_priv.1+0x1bb>
ffffffff8002f12c:	90                   	nop
ffffffff8002f12d:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff8002f131:	48 8b 50 18          	mov    0x18(%rax),%rdx
ffffffff8002f135:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff8002f139:	0f b6 40 08          	movzbl 0x8(%rax),%eax
ffffffff8002f13d:	0f b6 c0             	movzbl %al,%eax
ffffffff8002f140:	48 01 c2             	add    %rax,%rdx
ffffffff8002f143:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff8002f147:	48 89 50 18          	mov    %rdx,0x18(%rax)
ffffffff8002f14b:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff8002f150:	c9                   	leave  
ffffffff8002f151:	c3                   	ret    

ffffffff8002f152 <ZydisStringAppendDecS.lto_priv.1>:
ffffffff8002f152:	55                   	push   %rbp
ffffffff8002f153:	48 89 e5             	mov    %rsp,%rbp
ffffffff8002f156:	53                   	push   %rbx
ffffffff8002f157:	48 83 ec 48          	sub    $0x48,%rsp
ffffffff8002f15b:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
ffffffff8002f15f:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
ffffffff8002f163:	89 c8                	mov    %ecx,%eax
ffffffff8002f165:	4c 89 45 c0          	mov    %r8,-0x40(%rbp)
ffffffff8002f169:	4c 89 4d b8          	mov    %r9,-0x48(%rbp)
ffffffff8002f16d:	88 55 cc             	mov    %dl,-0x34(%rbp)
ffffffff8002f170:	88 45 c8             	mov    %al,-0x38(%rbp)
ffffffff8002f173:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
ffffffff8002f178:	0f 89 80 00 00 00    	jns    ffffffff8002f1fe <ZydisStringAppendDecS.lto_priv.1+0xac>
ffffffff8002f17e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8002f182:	48 8d 15 d7 b3 07 00 	lea    0x7b3d7(%rip),%rdx        # ffffffff800aa560 <str_sub.3.lto_priv.1>
ffffffff8002f189:	48 89 d6             	mov    %rdx,%rsi
ffffffff8002f18c:	48 89 c7             	mov    %rax,%rdi
ffffffff8002f18f:	e8 21 fd ff ff       	call   ffffffff8002eeb5 <ZydisStringAppendShort.lto_priv.1>
ffffffff8002f194:	89 45 e8             	mov    %eax,-0x18(%rbp)
ffffffff8002f197:	8b 45 e8             	mov    -0x18(%rbp),%eax
ffffffff8002f19a:	85 c0                	test   %eax,%eax
ffffffff8002f19c:	79 08                	jns    ffffffff8002f1a6 <ZydisStringAppendDecS.lto_priv.1+0x54>
ffffffff8002f19e:	8b 45 e8             	mov    -0x18(%rbp),%eax
ffffffff8002f1a1:	e9 a5 00 00 00       	jmp    ffffffff8002f24b <ZydisStringAppendDecS.lto_priv.1+0xf9>
ffffffff8002f1a6:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
ffffffff8002f1ab:	74 22                	je     ffffffff8002f1cf <ZydisStringAppendDecS.lto_priv.1+0x7d>
ffffffff8002f1ad:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
ffffffff8002f1b1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8002f1b5:	48 89 d6             	mov    %rdx,%rsi
ffffffff8002f1b8:	48 89 c7             	mov    %rax,%rdi
ffffffff8002f1bb:	e8 20 fc ff ff       	call   ffffffff8002ede0 <ZydisStringAppend.lto_priv.2>
ffffffff8002f1c0:	89 45 e4             	mov    %eax,-0x1c(%rbp)
ffffffff8002f1c3:	8b 45 e4             	mov    -0x1c(%rbp),%eax
ffffffff8002f1c6:	85 c0                	test   %eax,%eax
ffffffff8002f1c8:	79 05                	jns    ffffffff8002f1cf <ZydisStringAppendDecS.lto_priv.1+0x7d>
ffffffff8002f1ca:	8b 45 e4             	mov    -0x1c(%rbp),%eax
ffffffff8002f1cd:	eb 7c                	jmp    ffffffff8002f24b <ZydisStringAppendDecS.lto_priv.1+0xf9>
ffffffff8002f1cf:	0f b6 5d cc          	movzbl -0x34(%rbp),%ebx
ffffffff8002f1d3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8002f1d7:	48 89 c7             	mov    %rax,%rdi
ffffffff8002f1da:	e8 cb fb ff ff       	call   ffffffff8002edaa <ZyanAbsI64.lto_priv.2>
ffffffff8002f1df:	48 89 c6             	mov    %rax,%rsi
ffffffff8002f1e2:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
ffffffff8002f1e6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8002f1ea:	49 89 d0             	mov    %rdx,%r8
ffffffff8002f1ed:	b9 00 00 00 00       	mov    $0x0,%ecx
ffffffff8002f1f2:	89 da                	mov    %ebx,%edx
ffffffff8002f1f4:	48 89 c7             	mov    %rax,%rdi
ffffffff8002f1f7:	e8 31 6e ff ff       	call   ffffffff8002602d <ZydisStringAppendDecU>
ffffffff8002f1fc:	eb 4d                	jmp    ffffffff8002f24b <ZydisStringAppendDecS.lto_priv.1+0xf9>
ffffffff8002f1fe:	80 7d c8 00          	cmpb   $0x0,-0x38(%rbp)
ffffffff8002f202:	74 25                	je     ffffffff8002f229 <ZydisStringAppendDecS.lto_priv.1+0xd7>
ffffffff8002f204:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8002f208:	48 8d 15 61 b3 07 00 	lea    0x7b361(%rip),%rdx        # ffffffff800aa570 <str_add.2.lto_priv.1>
ffffffff8002f20f:	48 89 d6             	mov    %rdx,%rsi
ffffffff8002f212:	48 89 c7             	mov    %rax,%rdi
ffffffff8002f215:	e8 9b fc ff ff       	call   ffffffff8002eeb5 <ZydisStringAppendShort.lto_priv.1>
ffffffff8002f21a:	89 45 ec             	mov    %eax,-0x14(%rbp)
ffffffff8002f21d:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff8002f220:	85 c0                	test   %eax,%eax
ffffffff8002f222:	79 05                	jns    ffffffff8002f229 <ZydisStringAppendDecS.lto_priv.1+0xd7>
ffffffff8002f224:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff8002f227:	eb 22                	jmp    ffffffff8002f24b <ZydisStringAppendDecS.lto_priv.1+0xf9>
ffffffff8002f229:	0f b6 45 cc          	movzbl -0x34(%rbp),%eax
ffffffff8002f22d:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
ffffffff8002f231:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
ffffffff8002f235:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
ffffffff8002f239:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
ffffffff8002f23d:	49 89 c8             	mov    %rcx,%r8
ffffffff8002f240:	48 89 d1             	mov    %rdx,%rcx
ffffffff8002f243:	89 c2                	mov    %eax,%edx
ffffffff8002f245:	e8 e3 6d ff ff       	call   ffffffff8002602d <ZydisStringAppendDecU>
ffffffff8002f24a:	90                   	nop
ffffffff8002f24b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
ffffffff8002f24f:	c9                   	leave  
ffffffff8002f250:	c3                   	ret    

ffffffff8002f251 <ZydisStringAppendHexS.lto_priv.1>:
ffffffff8002f251:	55                   	push   %rbp
ffffffff8002f252:	48 89 e5             	mov    %rsp,%rbp
ffffffff8002f255:	41 55                	push   %r13
ffffffff8002f257:	41 54                	push   %r12
ffffffff8002f259:	53                   	push   %rbx
ffffffff8002f25a:	48 83 ec 30          	sub    $0x30,%rsp
ffffffff8002f25e:	48 89 7d d0          	mov    %rdi,-0x30(%rbp)
ffffffff8002f262:	48 89 75 c8          	mov    %rsi,-0x38(%rbp)
ffffffff8002f266:	89 c8                	mov    %ecx,%eax
ffffffff8002f268:	44 89 c6             	mov    %r8d,%esi
ffffffff8002f26b:	44 89 c9             	mov    %r9d,%ecx
ffffffff8002f26e:	88 55 c4             	mov    %dl,-0x3c(%rbp)
ffffffff8002f271:	88 45 c0             	mov    %al,-0x40(%rbp)
ffffffff8002f274:	89 f0                	mov    %esi,%eax
ffffffff8002f276:	88 45 bc             	mov    %al,-0x44(%rbp)
ffffffff8002f279:	89 c8                	mov    %ecx,%eax
ffffffff8002f27b:	88 45 b8             	mov    %al,-0x48(%rbp)
ffffffff8002f27e:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
ffffffff8002f283:	0f 89 91 00 00 00    	jns    ffffffff8002f31a <ZydisStringAppendHexS.lto_priv.1+0xc9>
ffffffff8002f289:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8002f28d:	48 8d 15 ec b2 07 00 	lea    0x7b2ec(%rip),%rdx        # ffffffff800aa580 <str_sub.1.lto_priv.1>
ffffffff8002f294:	48 89 d6             	mov    %rdx,%rsi
ffffffff8002f297:	48 89 c7             	mov    %rax,%rdi
ffffffff8002f29a:	e8 16 fc ff ff       	call   ffffffff8002eeb5 <ZydisStringAppendShort.lto_priv.1>
ffffffff8002f29f:	89 45 e0             	mov    %eax,-0x20(%rbp)
ffffffff8002f2a2:	8b 45 e0             	mov    -0x20(%rbp),%eax
ffffffff8002f2a5:	85 c0                	test   %eax,%eax
ffffffff8002f2a7:	79 08                	jns    ffffffff8002f2b1 <ZydisStringAppendHexS.lto_priv.1+0x60>
ffffffff8002f2a9:	8b 45 e0             	mov    -0x20(%rbp),%eax
ffffffff8002f2ac:	e9 c0 00 00 00       	jmp    ffffffff8002f371 <ZydisStringAppendHexS.lto_priv.1+0x120>
ffffffff8002f2b1:	48 83 7d 10 00       	cmpq   $0x0,0x10(%rbp)
ffffffff8002f2b6:	74 22                	je     ffffffff8002f2da <ZydisStringAppendHexS.lto_priv.1+0x89>
ffffffff8002f2b8:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8002f2bc:	48 8b 75 10          	mov    0x10(%rbp),%rsi
ffffffff8002f2c0:	48 89 c7             	mov    %rax,%rdi
ffffffff8002f2c3:	e8 18 fb ff ff       	call   ffffffff8002ede0 <ZydisStringAppend.lto_priv.2>
ffffffff8002f2c8:	89 45 dc             	mov    %eax,-0x24(%rbp)
ffffffff8002f2cb:	8b 45 dc             	mov    -0x24(%rbp),%eax
ffffffff8002f2ce:	85 c0                	test   %eax,%eax
ffffffff8002f2d0:	79 08                	jns    ffffffff8002f2da <ZydisStringAppendHexS.lto_priv.1+0x89>
ffffffff8002f2d2:	8b 45 dc             	mov    -0x24(%rbp),%eax
ffffffff8002f2d5:	e9 97 00 00 00       	jmp    ffffffff8002f371 <ZydisStringAppendHexS.lto_priv.1+0x120>
ffffffff8002f2da:	44 0f b6 6d bc       	movzbl -0x44(%rbp),%r13d
ffffffff8002f2df:	44 0f b6 65 c0       	movzbl -0x40(%rbp),%r12d
ffffffff8002f2e4:	0f b6 5d c4          	movzbl -0x3c(%rbp),%ebx
ffffffff8002f2e8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8002f2ec:	48 89 c7             	mov    %rax,%rdi
ffffffff8002f2ef:	e8 b6 fa ff ff       	call   ffffffff8002edaa <ZyanAbsI64.lto_priv.2>
ffffffff8002f2f4:	48 89 c6             	mov    %rax,%rsi
ffffffff8002f2f7:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8002f2fb:	ff 75 18             	push   0x18(%rbp)
ffffffff8002f2fe:	41 b9 00 00 00 00    	mov    $0x0,%r9d
ffffffff8002f304:	45 89 e8             	mov    %r13d,%r8d
ffffffff8002f307:	44 89 e1             	mov    %r12d,%ecx
ffffffff8002f30a:	89 da                	mov    %ebx,%edx
ffffffff8002f30c:	48 89 c7             	mov    %rax,%rdi
ffffffff8002f30f:	e8 ab 6d ff ff       	call   ffffffff800260bf <ZydisStringAppendHexU>
ffffffff8002f314:	48 83 c4 08          	add    $0x8,%rsp
ffffffff8002f318:	eb 57                	jmp    ffffffff8002f371 <ZydisStringAppendHexS.lto_priv.1+0x120>
ffffffff8002f31a:	80 7d b8 00          	cmpb   $0x0,-0x48(%rbp)
ffffffff8002f31e:	74 25                	je     ffffffff8002f345 <ZydisStringAppendHexS.lto_priv.1+0xf4>
ffffffff8002f320:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8002f324:	48 8d 15 65 b2 07 00 	lea    0x7b265(%rip),%rdx        # ffffffff800aa590 <str_add.0.lto_priv.1>
ffffffff8002f32b:	48 89 d6             	mov    %rdx,%rsi
ffffffff8002f32e:	48 89 c7             	mov    %rax,%rdi
ffffffff8002f331:	e8 7f fb ff ff       	call   ffffffff8002eeb5 <ZydisStringAppendShort.lto_priv.1>
ffffffff8002f336:	89 45 e4             	mov    %eax,-0x1c(%rbp)
ffffffff8002f339:	8b 45 e4             	mov    -0x1c(%rbp),%eax
ffffffff8002f33c:	85 c0                	test   %eax,%eax
ffffffff8002f33e:	79 05                	jns    ffffffff8002f345 <ZydisStringAppendHexS.lto_priv.1+0xf4>
ffffffff8002f340:	8b 45 e4             	mov    -0x1c(%rbp),%eax
ffffffff8002f343:	eb 2c                	jmp    ffffffff8002f371 <ZydisStringAppendHexS.lto_priv.1+0x120>
ffffffff8002f345:	0f b6 4d bc          	movzbl -0x44(%rbp),%ecx
ffffffff8002f349:	0f b6 55 c0          	movzbl -0x40(%rbp),%edx
ffffffff8002f34d:	0f b6 45 c4          	movzbl -0x3c(%rbp),%eax
ffffffff8002f351:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
ffffffff8002f355:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
ffffffff8002f359:	ff 75 18             	push   0x18(%rbp)
ffffffff8002f35c:	4c 8b 4d 10          	mov    0x10(%rbp),%r9
ffffffff8002f360:	41 89 c8             	mov    %ecx,%r8d
ffffffff8002f363:	89 d1                	mov    %edx,%ecx
ffffffff8002f365:	89 c2                	mov    %eax,%edx
ffffffff8002f367:	e8 53 6d ff ff       	call   ffffffff800260bf <ZydisStringAppendHexU>
ffffffff8002f36c:	48 83 c4 08          	add    $0x8,%rsp
ffffffff8002f370:	90                   	nop
ffffffff8002f371:	48 8d 65 e8          	lea    -0x18(%rbp),%rsp
ffffffff8002f375:	5b                   	pop    %rbx
ffffffff8002f376:	41 5c                	pop    %r12
ffffffff8002f378:	41 5d                	pop    %r13
ffffffff8002f37a:	5d                   	pop    %rbp
ffffffff8002f37b:	c3                   	ret    

ffffffff8002f37c <ZydisFormatterBufferAppendPredefined.lto_priv.1>:
ffffffff8002f37c:	55                   	push   %rbp
ffffffff8002f37d:	48 89 e5             	mov    %rsp,%rbp
ffffffff8002f380:	48 83 ec 30          	sub    $0x30,%rsp
ffffffff8002f384:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
ffffffff8002f388:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
ffffffff8002f38c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8002f390:	48 8b 40 28          	mov    0x28(%rax),%rax
ffffffff8002f394:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8002f398:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff8002f39d:	74 08                	je     ffffffff8002f3a7 <ZydisFormatterBufferAppendPredefined.lto_priv.1+0x2b>
ffffffff8002f39f:	48 81 7d f8 ff 00 00 	cmpq   $0xff,-0x8(%rbp)
ffffffff8002f3a6:	00 
ffffffff8002f3a7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8002f3ab:	48 8b 50 08          	mov    0x8(%rax),%rdx
ffffffff8002f3af:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8002f3b3:	0f b6 00             	movzbl (%rax),%eax
ffffffff8002f3b6:	0f b6 c0             	movzbl %al,%eax
ffffffff8002f3b9:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
ffffffff8002f3bd:	48 01 c8             	add    %rcx,%rax
ffffffff8002f3c0:	48 39 c2             	cmp    %rax,%rdx
ffffffff8002f3c3:	77 0a                	ja     ffffffff8002f3cf <ZydisFormatterBufferAppendPredefined.lto_priv.1+0x53>
ffffffff8002f3c5:	b8 09 00 10 80       	mov    $0x80100009,%eax
ffffffff8002f3ca:	e9 ce 00 00 00       	jmp    ffffffff8002f49d <ZydisFormatterBufferAppendPredefined.lto_priv.1+0x121>
ffffffff8002f3cf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8002f3d3:	48 8b 40 48          	mov    0x48(%rax),%rax
ffffffff8002f3d7:	48 83 e8 02          	sub    $0x2,%rax
ffffffff8002f3db:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff8002f3df:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8002f3e3:	89 c2                	mov    %eax,%edx
ffffffff8002f3e5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8002f3e9:	88 50 01             	mov    %dl,0x1(%rax)
ffffffff8002f3ec:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8002f3f0:	0f b6 00             	movzbl (%rax),%eax
ffffffff8002f3f3:	0f b6 c0             	movzbl %al,%eax
ffffffff8002f3f6:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
ffffffff8002f3fa:	48 8d 72 02          	lea    0x2(%rdx),%rsi
ffffffff8002f3fe:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff8002f402:	48 8b 4a 48          	mov    0x48(%rdx),%rcx
ffffffff8002f406:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff8002f40a:	48 01 d1             	add    %rdx,%rcx
ffffffff8002f40d:	48 89 c2             	mov    %rax,%rdx
ffffffff8002f410:	48 89 cf             	mov    %rcx,%rdi
ffffffff8002f413:	e8 38 f9 ff ff       	call   ffffffff8002ed50 <ZYAN_MEMCPY.lto_priv.9>
ffffffff8002f418:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8002f41c:	0f b6 40 01          	movzbl 0x1(%rax),%eax
ffffffff8002f420:	0f b6 c0             	movzbl %al,%eax
ffffffff8002f423:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff8002f427:	48 01 d0             	add    %rdx,%rax
ffffffff8002f42a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff8002f42e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8002f432:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff8002f436:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
ffffffff8002f43a:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff8002f43e:	48 89 42 08          	mov    %rax,0x8(%rdx)
ffffffff8002f442:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8002f446:	48 8b 50 48          	mov    0x48(%rax),%rdx
ffffffff8002f44a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002f44e:	48 01 c2             	add    %rax,%rdx
ffffffff8002f451:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8002f455:	48 89 50 48          	mov    %rdx,0x48(%rax)
ffffffff8002f459:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8002f45d:	0f b6 00             	movzbl (%rax),%eax
ffffffff8002f460:	0f b6 d0             	movzbl %al,%edx
ffffffff8002f463:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8002f467:	0f b6 40 01          	movzbl 0x1(%rax),%eax
ffffffff8002f46b:	0f b6 c8             	movzbl %al,%ecx
ffffffff8002f46e:	89 d0                	mov    %edx,%eax
ffffffff8002f470:	29 c8                	sub    %ecx,%eax
ffffffff8002f472:	48 98                	cltq   
ffffffff8002f474:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff8002f478:	48 89 42 28          	mov    %rax,0x28(%rdx)
ffffffff8002f47c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8002f480:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff8002f484:	ba ff 00 00 00       	mov    $0xff,%edx
ffffffff8002f489:	48 39 d0             	cmp    %rdx,%rax
ffffffff8002f48c:	48 0f 47 c2          	cmova  %rdx,%rax
ffffffff8002f490:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff8002f494:	48 89 42 30          	mov    %rax,0x30(%rdx)
ffffffff8002f498:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff8002f49d:	c9                   	leave  
ffffffff8002f49e:	c3                   	ret    

ffffffff8002f49f <ZydisFormatterHelperGetExplicitSize>:
ffffffff8002f49f:	f3 0f 1e fa          	endbr64 
ffffffff8002f4a3:	55                   	push   %rbp
ffffffff8002f4a4:	48 89 e5             	mov    %rsp,%rbp
ffffffff8002f4a7:	48 83 ec 18          	sub    $0x18,%rsp
ffffffff8002f4ab:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8002f4af:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff8002f4b3:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
ffffffff8002f4b7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002f4bb:	8b 40 28             	mov    0x28(%rax),%eax
ffffffff8002f4be:	83 f8 01             	cmp    $0x1,%eax
ffffffff8002f4c1:	74 0a                	je     ffffffff8002f4cd <ZydisFormatterHelperGetExplicitSize+0x2e>
ffffffff8002f4c3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002f4c7:	8b 40 28             	mov    0x28(%rax),%eax
ffffffff8002f4ca:	83 f8 04             	cmp    $0x4,%eax
ffffffff8002f4cd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8002f4d1:	0f b6 40 04          	movzbl 0x4(%rax),%eax
ffffffff8002f4d5:	84 c0                	test   %al,%al
ffffffff8002f4d7:	74 10                	je     ffffffff8002f4e9 <ZydisFormatterHelperGetExplicitSize+0x4a>
ffffffff8002f4d9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002f4dd:	0f b7 40 14          	movzwl 0x14(%rax),%eax
ffffffff8002f4e1:	0f b7 c0             	movzwl %ax,%eax
ffffffff8002f4e4:	e9 8d 01 00 00       	jmp    ffffffff8002f676 <ZydisFormatterHelperGetExplicitSize+0x1d7>
ffffffff8002f4e9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8002f4ed:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff8002f4f1:	48 85 c0             	test   %rax,%rax
ffffffff8002f4f4:	75 0a                	jne    ffffffff8002f500 <ZydisFormatterHelperGetExplicitSize+0x61>
ffffffff8002f4f6:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8002f4fb:	e9 76 01 00 00       	jmp    ffffffff8002f676 <ZydisFormatterHelperGetExplicitSize+0x1d7>
ffffffff8002f500:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002f504:	0f b6 00             	movzbl (%rax),%eax
ffffffff8002f507:	0f b6 c0             	movzbl %al,%eax
ffffffff8002f50a:	85 c0                	test   %eax,%eax
ffffffff8002f50c:	74 19                	je     ffffffff8002f527 <ZydisFormatterHelperGetExplicitSize+0x88>
ffffffff8002f50e:	85 c0                	test   %eax,%eax
ffffffff8002f510:	0f 88 54 01 00 00    	js     ffffffff8002f66a <ZydisFormatterHelperGetExplicitSize+0x1cb>
ffffffff8002f516:	83 e8 01             	sub    $0x1,%eax
ffffffff8002f519:	83 f8 01             	cmp    $0x1,%eax
ffffffff8002f51c:	0f 87 48 01 00 00    	ja     ffffffff8002f66a <ZydisFormatterHelperGetExplicitSize+0x1cb>
ffffffff8002f522:	e9 de 00 00 00       	jmp    ffffffff8002f605 <ZydisFormatterHelperGetExplicitSize+0x166>
ffffffff8002f527:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8002f52b:	48 8b 00             	mov    (%rax),%rax
ffffffff8002f52e:	0f b6 40 19          	movzbl 0x19(%rax),%eax
ffffffff8002f532:	3c 01                	cmp    $0x1,%al
ffffffff8002f534:	77 0a                	ja     ffffffff8002f540 <ZydisFormatterHelperGetExplicitSize+0xa1>
ffffffff8002f536:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8002f53b:	e9 36 01 00 00       	jmp    ffffffff8002f676 <ZydisFormatterHelperGetExplicitSize+0x1d7>
ffffffff8002f540:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8002f544:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff8002f548:	48 83 c0 68          	add    $0x68,%rax
ffffffff8002f54c:	8b 40 04             	mov    0x4(%rax),%eax
ffffffff8002f54f:	85 c0                	test   %eax,%eax
ffffffff8002f551:	74 14                	je     ffffffff8002f567 <ZydisFormatterHelperGetExplicitSize+0xc8>
ffffffff8002f553:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8002f557:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff8002f55b:	48 83 c0 68          	add    $0x68,%rax
ffffffff8002f55f:	8b 40 04             	mov    0x4(%rax),%eax
ffffffff8002f562:	83 f8 04             	cmp    $0x4,%eax
ffffffff8002f565:	75 14                	jne    ffffffff8002f57b <ZydisFormatterHelperGetExplicitSize+0xdc>
ffffffff8002f567:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8002f56b:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff8002f56f:	0f b7 40 14          	movzwl 0x14(%rax),%eax
ffffffff8002f573:	0f b7 c0             	movzwl %ax,%eax
ffffffff8002f576:	e9 fb 00 00 00       	jmp    ffffffff8002f676 <ZydisFormatterHelperGetExplicitSize+0x1d7>
ffffffff8002f57b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8002f57f:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff8002f583:	0f b7 50 14          	movzwl 0x14(%rax),%edx
ffffffff8002f587:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8002f58b:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff8002f58f:	48 83 c0 68          	add    $0x68,%rax
ffffffff8002f593:	0f b7 40 14          	movzwl 0x14(%rax),%eax
ffffffff8002f597:	66 39 c2             	cmp    %ax,%dx
ffffffff8002f59a:	74 14                	je     ffffffff8002f5b0 <ZydisFormatterHelperGetExplicitSize+0x111>
ffffffff8002f59c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8002f5a0:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff8002f5a4:	0f b7 40 14          	movzwl 0x14(%rax),%eax
ffffffff8002f5a8:	0f b7 c0             	movzwl %ax,%eax
ffffffff8002f5ab:	e9 c6 00 00 00       	jmp    ffffffff8002f676 <ZydisFormatterHelperGetExplicitSize+0x1d7>
ffffffff8002f5b0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8002f5b4:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff8002f5b8:	48 83 c0 68          	add    $0x68,%rax
ffffffff8002f5bc:	8b 40 04             	mov    0x4(%rax),%eax
ffffffff8002f5bf:	83 f8 01             	cmp    $0x1,%eax
ffffffff8002f5c2:	0f 85 a5 00 00 00    	jne    ffffffff8002f66d <ZydisFormatterHelperGetExplicitSize+0x1ce>
ffffffff8002f5c8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8002f5cc:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff8002f5d0:	48 83 c0 68          	add    $0x68,%rax
ffffffff8002f5d4:	8b 40 08             	mov    0x8(%rax),%eax
ffffffff8002f5d7:	83 f8 02             	cmp    $0x2,%eax
ffffffff8002f5da:	0f 85 8d 00 00 00    	jne    ffffffff8002f66d <ZydisFormatterHelperGetExplicitSize+0x1ce>
ffffffff8002f5e0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8002f5e4:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff8002f5e8:	48 83 c0 68          	add    $0x68,%rax
ffffffff8002f5ec:	8b 40 24             	mov    0x24(%rax),%eax
ffffffff8002f5ef:	83 f8 02             	cmp    $0x2,%eax
ffffffff8002f5f2:	75 79                	jne    ffffffff8002f66d <ZydisFormatterHelperGetExplicitSize+0x1ce>
ffffffff8002f5f4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8002f5f8:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff8002f5fc:	0f b7 40 14          	movzwl 0x14(%rax),%eax
ffffffff8002f600:	0f b7 c0             	movzwl %ax,%eax
ffffffff8002f603:	eb 71                	jmp    ffffffff8002f676 <ZydisFormatterHelperGetExplicitSize+0x1d7>
ffffffff8002f605:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8002f609:	48 8b 50 08          	mov    0x8(%rax),%rdx
ffffffff8002f60d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002f611:	0f b6 00             	movzbl (%rax),%eax
ffffffff8002f614:	0f b6 c0             	movzbl %al,%eax
ffffffff8002f617:	48 6b c0 68          	imul   $0x68,%rax,%rax
ffffffff8002f61b:	48 83 e8 68          	sub    $0x68,%rax
ffffffff8002f61f:	48 01 d0             	add    %rdx,%rax
ffffffff8002f622:	0f b7 50 14          	movzwl 0x14(%rax),%edx
ffffffff8002f626:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8002f62a:	48 8b 48 08          	mov    0x8(%rax),%rcx
ffffffff8002f62e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002f632:	0f b6 00             	movzbl (%rax),%eax
ffffffff8002f635:	0f b6 c0             	movzbl %al,%eax
ffffffff8002f638:	48 6b c0 68          	imul   $0x68,%rax,%rax
ffffffff8002f63c:	48 01 c8             	add    %rcx,%rax
ffffffff8002f63f:	0f b7 40 14          	movzwl 0x14(%rax),%eax
ffffffff8002f643:	66 39 c2             	cmp    %ax,%dx
ffffffff8002f646:	74 28                	je     ffffffff8002f670 <ZydisFormatterHelperGetExplicitSize+0x1d1>
ffffffff8002f648:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8002f64c:	48 8b 50 08          	mov    0x8(%rax),%rdx
ffffffff8002f650:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002f654:	0f b6 00             	movzbl (%rax),%eax
ffffffff8002f657:	0f b6 c0             	movzbl %al,%eax
ffffffff8002f65a:	48 6b c0 68          	imul   $0x68,%rax,%rax
ffffffff8002f65e:	48 01 d0             	add    %rdx,%rax
ffffffff8002f661:	0f b7 40 14          	movzwl 0x14(%rax),%eax
ffffffff8002f665:	0f b7 c0             	movzwl %ax,%eax
ffffffff8002f668:	eb 0c                	jmp    ffffffff8002f676 <ZydisFormatterHelperGetExplicitSize+0x1d7>
ffffffff8002f66a:	90                   	nop
ffffffff8002f66b:	eb 04                	jmp    ffffffff8002f671 <ZydisFormatterHelperGetExplicitSize+0x1d2>
ffffffff8002f66d:	90                   	nop
ffffffff8002f66e:	eb 01                	jmp    ffffffff8002f671 <ZydisFormatterHelperGetExplicitSize+0x1d2>
ffffffff8002f670:	90                   	nop
ffffffff8002f671:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8002f676:	c9                   	leave  
ffffffff8002f677:	c3                   	ret    

ffffffff8002f678 <ZydisFormatterBaseFormatOperandREG>:
ffffffff8002f678:	f3 0f 1e fa          	endbr64 
ffffffff8002f67c:	55                   	push   %rbp
ffffffff8002f67d:	48 89 e5             	mov    %rsp,%rbp
ffffffff8002f680:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff8002f684:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8002f688:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff8002f68c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
ffffffff8002f690:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8002f694:	4c 8b 80 00 02 00 00 	mov    0x200(%rax),%r8
ffffffff8002f69b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002f69f:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff8002f6a3:	8b 48 24             	mov    0x24(%rax),%ecx
ffffffff8002f6a6:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff8002f6aa:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
ffffffff8002f6ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8002f6b2:	48 89 c7             	mov    %rax,%rdi
ffffffff8002f6b5:	41 ff d0             	call   *%r8
ffffffff8002f6b8:	c9                   	leave  
ffffffff8002f6b9:	c3                   	ret    

ffffffff8002f6ba <ZydisFormatterBaseFormatOperandPTR>:
ffffffff8002f6ba:	f3 0f 1e fa          	endbr64 
ffffffff8002f6be:	55                   	push   %rbp
ffffffff8002f6bf:	48 89 e5             	mov    %rsp,%rbp
ffffffff8002f6c2:	48 83 ec 50          	sub    $0x50,%rsp
ffffffff8002f6c6:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
ffffffff8002f6ca:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
ffffffff8002f6ce:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
ffffffff8002f6d2:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002f6d6:	0f b6 00             	movzbl (%rax),%eax
ffffffff8002f6d9:	84 c0                	test   %al,%al
ffffffff8002f6db:	74 23                	je     ffffffff8002f700 <ZydisFormatterBaseFormatOperandPTR+0x46>
ffffffff8002f6dd:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002f6e1:	be 0b 00 00 00       	mov    $0xb,%esi
ffffffff8002f6e6:	48 89 c7             	mov    %rax,%rdi
ffffffff8002f6e9:	e8 1b 64 00 00       	call   ffffffff80035b09 <ZydisFormatterBufferAppend>
ffffffff8002f6ee:	89 45 f8             	mov    %eax,-0x8(%rbp)
ffffffff8002f6f1:	8b 45 f8             	mov    -0x8(%rbp),%eax
ffffffff8002f6f4:	85 c0                	test   %eax,%eax
ffffffff8002f6f6:	79 08                	jns    ffffffff8002f700 <ZydisFormatterBaseFormatOperandPTR+0x46>
ffffffff8002f6f8:	8b 45 f8             	mov    -0x8(%rbp),%eax
ffffffff8002f6fb:	e9 32 03 00 00       	jmp    ffffffff8002fa32 <ZydisFormatterBaseFormatOperandPTR+0x378>
ffffffff8002f700:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8002f704:	8b 40 0c             	mov    0xc(%rax),%eax
ffffffff8002f707:	85 c0                	test   %eax,%eax
ffffffff8002f709:	74 0e                	je     ffffffff8002f719 <ZydisFormatterBaseFormatOperandPTR+0x5f>
ffffffff8002f70b:	83 f8 01             	cmp    $0x1,%eax
ffffffff8002f70e:	0f 84 83 00 00 00    	je     ffffffff8002f797 <ZydisFormatterBaseFormatOperandPTR+0xdd>
ffffffff8002f714:	e9 19 01 00 00       	jmp    ffffffff8002f832 <ZydisFormatterBaseFormatOperandPTR+0x178>
ffffffff8002f719:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8002f71d:	8b 40 0c             	mov    0xc(%rax),%eax
ffffffff8002f720:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
ffffffff8002f724:	89 c0                	mov    %eax,%eax
ffffffff8002f726:	48 69 c0 b0 00 00 00 	imul   $0xb0,%rax,%rax
ffffffff8002f72d:	48 01 d0             	add    %rdx,%rax
ffffffff8002f730:	48 05 a8 00 00 00    	add    $0xa8,%rax
ffffffff8002f736:	48 8b 30             	mov    (%rax),%rsi
ffffffff8002f739:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8002f73d:	8b 40 0c             	mov    0xc(%rax),%eax
ffffffff8002f740:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
ffffffff8002f744:	89 c0                	mov    %eax,%eax
ffffffff8002f746:	48 69 c0 b0 00 00 00 	imul   $0xb0,%rax,%rax
ffffffff8002f74d:	48 01 d0             	add    %rdx,%rax
ffffffff8002f750:	48 83 c0 50          	add    $0x50,%rax
ffffffff8002f754:	48 8b 10             	mov    (%rax),%rdx
ffffffff8002f757:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff8002f75b:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff8002f75f:	0f b7 40 50          	movzwl 0x50(%rax),%eax
ffffffff8002f763:	0f b7 c0             	movzwl %ax,%eax
ffffffff8002f766:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
ffffffff8002f76a:	48 8d 79 10          	lea    0x10(%rcx),%rdi
ffffffff8002f76e:	49 89 f0             	mov    %rsi,%r8
ffffffff8002f771:	48 89 d1             	mov    %rdx,%rcx
ffffffff8002f774:	ba 04 00 00 00       	mov    $0x4,%edx
ffffffff8002f779:	48 89 c6             	mov    %rax,%rsi
ffffffff8002f77c:	e8 ac 68 ff ff       	call   ffffffff8002602d <ZydisStringAppendDecU>
ffffffff8002f781:	89 45 f0             	mov    %eax,-0x10(%rbp)
ffffffff8002f784:	8b 45 f0             	mov    -0x10(%rbp),%eax
ffffffff8002f787:	85 c0                	test   %eax,%eax
ffffffff8002f789:	0f 89 ad 00 00 00    	jns    ffffffff8002f83c <ZydisFormatterBaseFormatOperandPTR+0x182>
ffffffff8002f78f:	8b 45 f0             	mov    -0x10(%rbp),%eax
ffffffff8002f792:	e9 9b 02 00 00       	jmp    ffffffff8002fa32 <ZydisFormatterBaseFormatOperandPTR+0x378>
ffffffff8002f797:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8002f79b:	8b 40 0c             	mov    0xc(%rax),%eax
ffffffff8002f79e:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
ffffffff8002f7a2:	89 c0                	mov    %eax,%eax
ffffffff8002f7a4:	48 69 c0 b0 00 00 00 	imul   $0xb0,%rax,%rax
ffffffff8002f7ab:	48 01 d0             	add    %rdx,%rax
ffffffff8002f7ae:	48 05 a8 00 00 00    	add    $0xa8,%rax
ffffffff8002f7b4:	48 8b 08             	mov    (%rax),%rcx
ffffffff8002f7b7:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8002f7bb:	8b 40 0c             	mov    0xc(%rax),%eax
ffffffff8002f7be:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
ffffffff8002f7c2:	89 c0                	mov    %eax,%eax
ffffffff8002f7c4:	48 69 c0 b0 00 00 00 	imul   $0xb0,%rax,%rax
ffffffff8002f7cb:	48 01 d0             	add    %rdx,%rax
ffffffff8002f7ce:	48 83 c0 50          	add    $0x50,%rax
ffffffff8002f7d2:	4c 8b 00             	mov    (%rax),%r8
ffffffff8002f7d5:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8002f7d9:	0f b6 40 48          	movzbl 0x48(%rax),%eax
ffffffff8002f7dd:	0f b6 f0             	movzbl %al,%esi
ffffffff8002f7e0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8002f7e4:	0f b6 40 49          	movzbl 0x49(%rax),%eax
ffffffff8002f7e8:	0f b6 d0             	movzbl %al,%edx
ffffffff8002f7eb:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff8002f7ef:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff8002f7f3:	0f b7 40 50          	movzwl 0x50(%rax),%eax
ffffffff8002f7f7:	0f b7 c0             	movzwl %ax,%eax
ffffffff8002f7fa:	48 8b 7d c0          	mov    -0x40(%rbp),%rdi
ffffffff8002f7fe:	48 83 c7 10          	add    $0x10,%rdi
ffffffff8002f802:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff8002f806:	51                   	push   %rcx
ffffffff8002f807:	4d 89 c1             	mov    %r8,%r9
ffffffff8002f80a:	41 89 f0             	mov    %esi,%r8d
ffffffff8002f80d:	89 d1                	mov    %edx,%ecx
ffffffff8002f80f:	ba 04 00 00 00       	mov    $0x4,%edx
ffffffff8002f814:	48 89 c6             	mov    %rax,%rsi
ffffffff8002f817:	e8 a3 68 ff ff       	call   ffffffff800260bf <ZydisStringAppendHexU>
ffffffff8002f81c:	48 83 c4 10          	add    $0x10,%rsp
ffffffff8002f820:	89 45 f4             	mov    %eax,-0xc(%rbp)
ffffffff8002f823:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff8002f826:	85 c0                	test   %eax,%eax
ffffffff8002f828:	79 12                	jns    ffffffff8002f83c <ZydisFormatterBaseFormatOperandPTR+0x182>
ffffffff8002f82a:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff8002f82d:	e9 00 02 00 00       	jmp    ffffffff8002fa32 <ZydisFormatterBaseFormatOperandPTR+0x378>
ffffffff8002f832:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff8002f837:	e9 f6 01 00 00       	jmp    ffffffff8002fa32 <ZydisFormatterBaseFormatOperandPTR+0x378>
ffffffff8002f83c:	90                   	nop
ffffffff8002f83d:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002f841:	0f b6 00             	movzbl (%rax),%eax
ffffffff8002f844:	84 c0                	test   %al,%al
ffffffff8002f846:	74 28                	je     ffffffff8002f870 <ZydisFormatterBaseFormatOperandPTR+0x1b6>
ffffffff8002f848:	48 8d 15 7b 0a 01 00 	lea    0x10a7b(%rip),%rdx        # ffffffff800402ca <TOK_DATA_DELIM_SEGMENT.lto_priv.1>
ffffffff8002f84f:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002f853:	48 89 d6             	mov    %rdx,%rsi
ffffffff8002f856:	48 89 c7             	mov    %rax,%rdi
ffffffff8002f859:	e8 1e fb ff ff       	call   ffffffff8002f37c <ZydisFormatterBufferAppendPredefined.lto_priv.1>
ffffffff8002f85e:	89 45 e8             	mov    %eax,-0x18(%rbp)
ffffffff8002f861:	8b 45 e8             	mov    -0x18(%rbp),%eax
ffffffff8002f864:	85 c0                	test   %eax,%eax
ffffffff8002f866:	79 34                	jns    ffffffff8002f89c <ZydisFormatterBaseFormatOperandPTR+0x1e2>
ffffffff8002f868:	8b 45 e8             	mov    -0x18(%rbp),%eax
ffffffff8002f86b:	e9 c2 01 00 00       	jmp    ffffffff8002fa32 <ZydisFormatterBaseFormatOperandPTR+0x378>
ffffffff8002f870:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002f874:	48 83 c0 10          	add    $0x10,%rax
ffffffff8002f878:	48 8d 15 71 a6 07 00 	lea    0x7a671(%rip),%rdx        # ffffffff800a9ef0 <STR_DELIM_SEGMENT.lto_priv.1>
ffffffff8002f87f:	48 89 d6             	mov    %rdx,%rsi
ffffffff8002f882:	48 89 c7             	mov    %rax,%rdi
ffffffff8002f885:	e8 2b f6 ff ff       	call   ffffffff8002eeb5 <ZydisStringAppendShort.lto_priv.1>
ffffffff8002f88a:	89 45 ec             	mov    %eax,-0x14(%rbp)
ffffffff8002f88d:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff8002f890:	85 c0                	test   %eax,%eax
ffffffff8002f892:	79 08                	jns    ffffffff8002f89c <ZydisFormatterBaseFormatOperandPTR+0x1e2>
ffffffff8002f894:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff8002f897:	e9 96 01 00 00       	jmp    ffffffff8002fa32 <ZydisFormatterBaseFormatOperandPTR+0x378>
ffffffff8002f89c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff8002f8a0:	48 8b 00             	mov    (%rax),%rax
ffffffff8002f8a3:	0f b6 40 16          	movzbl 0x16(%rax),%eax
ffffffff8002f8a7:	0f b6 c0             	movzbl %al,%eax
ffffffff8002f8aa:	83 f8 10             	cmp    $0x10,%eax
ffffffff8002f8ad:	74 07                	je     ffffffff8002f8b6 <ZydisFormatterBaseFormatOperandPTR+0x1fc>
ffffffff8002f8af:	83 f8 20             	cmp    $0x20,%eax
ffffffff8002f8b2:	74 08                	je     ffffffff8002f8bc <ZydisFormatterBaseFormatOperandPTR+0x202>
ffffffff8002f8b4:	eb 0c                	jmp    ffffffff8002f8c2 <ZydisFormatterBaseFormatOperandPTR+0x208>
ffffffff8002f8b6:	c6 45 ff 04          	movb   $0x4,-0x1(%rbp)
ffffffff8002f8ba:	eb 10                	jmp    ffffffff8002f8cc <ZydisFormatterBaseFormatOperandPTR+0x212>
ffffffff8002f8bc:	c6 45 ff 08          	movb   $0x8,-0x1(%rbp)
ffffffff8002f8c0:	eb 0a                	jmp    ffffffff8002f8cc <ZydisFormatterBaseFormatOperandPTR+0x212>
ffffffff8002f8c2:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff8002f8c7:	e9 66 01 00 00       	jmp    ffffffff8002fa32 <ZydisFormatterBaseFormatOperandPTR+0x378>
ffffffff8002f8cc:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002f8d0:	0f b6 00             	movzbl (%rax),%eax
ffffffff8002f8d3:	84 c0                	test   %al,%al
ffffffff8002f8d5:	74 23                	je     ffffffff8002f8fa <ZydisFormatterBaseFormatOperandPTR+0x240>
ffffffff8002f8d7:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002f8db:	be 0b 00 00 00       	mov    $0xb,%esi
ffffffff8002f8e0:	48 89 c7             	mov    %rax,%rdi
ffffffff8002f8e3:	e8 21 62 00 00       	call   ffffffff80035b09 <ZydisFormatterBufferAppend>
ffffffff8002f8e8:	89 45 e4             	mov    %eax,-0x1c(%rbp)
ffffffff8002f8eb:	8b 45 e4             	mov    -0x1c(%rbp),%eax
ffffffff8002f8ee:	85 c0                	test   %eax,%eax
ffffffff8002f8f0:	79 08                	jns    ffffffff8002f8fa <ZydisFormatterBaseFormatOperandPTR+0x240>
ffffffff8002f8f2:	8b 45 e4             	mov    -0x1c(%rbp),%eax
ffffffff8002f8f5:	e9 38 01 00 00       	jmp    ffffffff8002fa32 <ZydisFormatterBaseFormatOperandPTR+0x378>
ffffffff8002f8fa:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8002f8fe:	8b 40 0c             	mov    0xc(%rax),%eax
ffffffff8002f901:	85 c0                	test   %eax,%eax
ffffffff8002f903:	74 0e                	je     ffffffff8002f913 <ZydisFormatterBaseFormatOperandPTR+0x259>
ffffffff8002f905:	83 f8 01             	cmp    $0x1,%eax
ffffffff8002f908:	0f 84 83 00 00 00    	je     ffffffff8002f991 <ZydisFormatterBaseFormatOperandPTR+0x2d7>
ffffffff8002f90e:	e9 11 01 00 00       	jmp    ffffffff8002fa24 <ZydisFormatterBaseFormatOperandPTR+0x36a>
ffffffff8002f913:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8002f917:	8b 40 0c             	mov    0xc(%rax),%eax
ffffffff8002f91a:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
ffffffff8002f91e:	89 c0                	mov    %eax,%eax
ffffffff8002f920:	48 69 c0 b0 00 00 00 	imul   $0xb0,%rax,%rax
ffffffff8002f927:	48 01 d0             	add    %rdx,%rax
ffffffff8002f92a:	48 05 a8 00 00 00    	add    $0xa8,%rax
ffffffff8002f930:	48 8b 30             	mov    (%rax),%rsi
ffffffff8002f933:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8002f937:	8b 40 0c             	mov    0xc(%rax),%eax
ffffffff8002f93a:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
ffffffff8002f93e:	89 c0                	mov    %eax,%eax
ffffffff8002f940:	48 69 c0 b0 00 00 00 	imul   $0xb0,%rax,%rax
ffffffff8002f947:	48 01 d0             	add    %rdx,%rax
ffffffff8002f94a:	48 83 c0 50          	add    $0x50,%rax
ffffffff8002f94e:	48 8b 10             	mov    (%rax),%rdx
ffffffff8002f951:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
ffffffff8002f955:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
ffffffff8002f959:	48 8b 49 10          	mov    0x10(%rcx),%rcx
ffffffff8002f95d:	8b 49 54             	mov    0x54(%rcx),%ecx
ffffffff8002f960:	41 89 c9             	mov    %ecx,%r9d
ffffffff8002f963:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
ffffffff8002f967:	48 8d 79 10          	lea    0x10(%rcx),%rdi
ffffffff8002f96b:	49 89 f0             	mov    %rsi,%r8
ffffffff8002f96e:	48 89 d1             	mov    %rdx,%rcx
ffffffff8002f971:	89 c2                	mov    %eax,%edx
ffffffff8002f973:	4c 89 ce             	mov    %r9,%rsi
ffffffff8002f976:	e8 b2 66 ff ff       	call   ffffffff8002602d <ZydisStringAppendDecU>
ffffffff8002f97b:	89 45 dc             	mov    %eax,-0x24(%rbp)
ffffffff8002f97e:	8b 45 dc             	mov    -0x24(%rbp),%eax
ffffffff8002f981:	85 c0                	test   %eax,%eax
ffffffff8002f983:	0f 89 a2 00 00 00    	jns    ffffffff8002fa2b <ZydisFormatterBaseFormatOperandPTR+0x371>
ffffffff8002f989:	8b 45 dc             	mov    -0x24(%rbp),%eax
ffffffff8002f98c:	e9 a1 00 00 00       	jmp    ffffffff8002fa32 <ZydisFormatterBaseFormatOperandPTR+0x378>
ffffffff8002f991:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8002f995:	8b 40 0c             	mov    0xc(%rax),%eax
ffffffff8002f998:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
ffffffff8002f99c:	89 c0                	mov    %eax,%eax
ffffffff8002f99e:	48 69 c0 b0 00 00 00 	imul   $0xb0,%rax,%rax
ffffffff8002f9a5:	48 01 d0             	add    %rdx,%rax
ffffffff8002f9a8:	48 05 a8 00 00 00    	add    $0xa8,%rax
ffffffff8002f9ae:	48 8b 08             	mov    (%rax),%rcx
ffffffff8002f9b1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8002f9b5:	8b 40 0c             	mov    0xc(%rax),%eax
ffffffff8002f9b8:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
ffffffff8002f9bc:	89 c0                	mov    %eax,%eax
ffffffff8002f9be:	48 69 c0 b0 00 00 00 	imul   $0xb0,%rax,%rax
ffffffff8002f9c5:	48 01 d0             	add    %rdx,%rax
ffffffff8002f9c8:	48 83 c0 50          	add    $0x50,%rax
ffffffff8002f9cc:	4c 8b 08             	mov    (%rax),%r9
ffffffff8002f9cf:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8002f9d3:	0f b6 40 48          	movzbl 0x48(%rax),%eax
ffffffff8002f9d7:	44 0f b6 c0          	movzbl %al,%r8d
ffffffff8002f9db:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8002f9df:	0f b6 40 49          	movzbl 0x49(%rax),%eax
ffffffff8002f9e3:	0f b6 d0             	movzbl %al,%edx
ffffffff8002f9e6:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
ffffffff8002f9ea:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
ffffffff8002f9ee:	48 8b 76 10          	mov    0x10(%rsi),%rsi
ffffffff8002f9f2:	8b 76 54             	mov    0x54(%rsi),%esi
ffffffff8002f9f5:	41 89 f2             	mov    %esi,%r10d
ffffffff8002f9f8:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
ffffffff8002f9fc:	48 8d 7e 10          	lea    0x10(%rsi),%rdi
ffffffff8002fa00:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff8002fa04:	51                   	push   %rcx
ffffffff8002fa05:	89 d1                	mov    %edx,%ecx
ffffffff8002fa07:	89 c2                	mov    %eax,%edx
ffffffff8002fa09:	4c 89 d6             	mov    %r10,%rsi
ffffffff8002fa0c:	e8 ae 66 ff ff       	call   ffffffff800260bf <ZydisStringAppendHexU>
ffffffff8002fa11:	48 83 c4 10          	add    $0x10,%rsp
ffffffff8002fa15:	89 45 e0             	mov    %eax,-0x20(%rbp)
ffffffff8002fa18:	8b 45 e0             	mov    -0x20(%rbp),%eax
ffffffff8002fa1b:	85 c0                	test   %eax,%eax
ffffffff8002fa1d:	79 0c                	jns    ffffffff8002fa2b <ZydisFormatterBaseFormatOperandPTR+0x371>
ffffffff8002fa1f:	8b 45 e0             	mov    -0x20(%rbp),%eax
ffffffff8002fa22:	eb 0e                	jmp    ffffffff8002fa32 <ZydisFormatterBaseFormatOperandPTR+0x378>
ffffffff8002fa24:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff8002fa29:	eb 07                	jmp    ffffffff8002fa32 <ZydisFormatterBaseFormatOperandPTR+0x378>
ffffffff8002fa2b:	90                   	nop
ffffffff8002fa2c:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff8002fa31:	90                   	nop
ffffffff8002fa32:	c9                   	leave  
ffffffff8002fa33:	c3                   	ret    

ffffffff8002fa34 <ZydisFormatterBaseFormatOperandIMM>:
ffffffff8002fa34:	f3 0f 1e fa          	endbr64 
ffffffff8002fa38:	55                   	push   %rbp
ffffffff8002fa39:	48 89 e5             	mov    %rsp,%rbp
ffffffff8002fa3c:	48 83 ec 30          	sub    $0x30,%rsp
ffffffff8002fa40:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff8002fa44:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
ffffffff8002fa48:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
ffffffff8002fa4c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8002fa50:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff8002fa54:	0f b6 40 59          	movzbl 0x59(%rax),%eax
ffffffff8002fa58:	84 c0                	test   %al,%al
ffffffff8002fa5a:	74 73                	je     ffffffff8002facf <ZydisFormatterBaseFormatOperandIMM+0x9b>
ffffffff8002fa5c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002fa60:	0f b6 40 07          	movzbl 0x7(%rax),%eax
ffffffff8002fa64:	84 c0                	test   %al,%al
ffffffff8002fa66:	75 15                	jne    ffffffff8002fa7d <ZydisFormatterBaseFormatOperandIMM+0x49>
ffffffff8002fa68:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8002fa6c:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff8002fa70:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
ffffffff8002fa74:	74 07                	je     ffffffff8002fa7d <ZydisFormatterBaseFormatOperandIMM+0x49>
ffffffff8002fa76:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8002fa7b:	eb 05                	jmp    ffffffff8002fa82 <ZydisFormatterBaseFormatOperandIMM+0x4e>
ffffffff8002fa7d:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8002fa82:	88 45 ff             	mov    %al,-0x1(%rbp)
ffffffff8002fa85:	80 7d ff 00          	cmpb   $0x0,-0x1(%rbp)
ffffffff8002fa89:	74 22                	je     ffffffff8002faad <ZydisFormatterBaseFormatOperandIMM+0x79>
ffffffff8002fa8b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002fa8f:	4c 8b 80 08 02 00 00 	mov    0x208(%rax),%r8
ffffffff8002fa96:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff8002fa9a:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
ffffffff8002fa9e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002faa2:	48 89 ce             	mov    %rcx,%rsi
ffffffff8002faa5:	48 89 c7             	mov    %rax,%rdi
ffffffff8002faa8:	41 ff d0             	call   *%r8
ffffffff8002faab:	eb 42                	jmp    ffffffff8002faef <ZydisFormatterBaseFormatOperandIMM+0xbb>
ffffffff8002faad:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002fab1:	4c 8b 80 10 02 00 00 	mov    0x210(%rax),%r8
ffffffff8002fab8:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff8002fabc:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
ffffffff8002fac0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002fac4:	48 89 ce             	mov    %rcx,%rsi
ffffffff8002fac7:	48 89 c7             	mov    %rax,%rdi
ffffffff8002faca:	41 ff d0             	call   *%r8
ffffffff8002facd:	eb 20                	jmp    ffffffff8002faef <ZydisFormatterBaseFormatOperandIMM+0xbb>
ffffffff8002facf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002fad3:	4c 8b 80 20 02 00 00 	mov    0x220(%rax),%r8
ffffffff8002fada:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff8002fade:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
ffffffff8002fae2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8002fae6:	48 89 ce             	mov    %rcx,%rsi
ffffffff8002fae9:	48 89 c7             	mov    %rax,%rdi
ffffffff8002faec:	41 ff d0             	call   *%r8
ffffffff8002faef:	c9                   	leave  
ffffffff8002faf0:	c3                   	ret    

ffffffff8002faf1 <ZydisFormatterBasePrintAddressABS>:
ffffffff8002faf1:	f3 0f 1e fa          	endbr64 
ffffffff8002faf5:	55                   	push   %rbp
ffffffff8002faf6:	48 89 e5             	mov    %rsp,%rbp
ffffffff8002faf9:	48 83 ec 40          	sub    $0x40,%rsp
ffffffff8002fafd:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
ffffffff8002fb01:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
ffffffff8002fb05:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
ffffffff8002fb09:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8002fb0d:	48 8b 50 18          	mov    0x18(%rax),%rdx
ffffffff8002fb11:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8002fb15:	48 8b 70 10          	mov    0x10(%rax),%rsi
ffffffff8002fb19:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8002fb1d:	48 8b 38             	mov    (%rax),%rdi
ffffffff8002fb20:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
ffffffff8002fb24:	48 89 c1             	mov    %rax,%rcx
ffffffff8002fb27:	e8 de 52 00 00       	call   ffffffff80034e0a <ZydisCalcAbsoluteAddress>
ffffffff8002fb2c:	89 45 f8             	mov    %eax,-0x8(%rbp)
ffffffff8002fb2f:	8b 45 f8             	mov    -0x8(%rbp),%eax
ffffffff8002fb32:	85 c0                	test   %eax,%eax
ffffffff8002fb34:	79 08                	jns    ffffffff8002fb3e <ZydisFormatterBasePrintAddressABS+0x4d>
ffffffff8002fb36:	8b 45 f8             	mov    -0x8(%rbp),%eax
ffffffff8002fb39:	e9 cf 01 00 00       	jmp    ffffffff8002fd0d <ZydisFormatterBasePrintAddressABS+0x21c>
ffffffff8002fb3e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8002fb42:	8b 40 14             	mov    0x14(%rax),%eax
ffffffff8002fb45:	83 f8 ff             	cmp    $0xffffffff,%eax
ffffffff8002fb48:	74 09                	je     ffffffff8002fb53 <ZydisFormatterBasePrintAddressABS+0x62>
ffffffff8002fb4a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8002fb4e:	8b 40 14             	mov    0x14(%rax),%eax
ffffffff8002fb51:	eb 05                	jmp    ffffffff8002fb58 <ZydisFormatterBasePrintAddressABS+0x67>
ffffffff8002fb53:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8002fb58:	88 45 ff             	mov    %al,-0x1(%rbp)
ffffffff8002fb5b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8002fb5f:	8b 40 14             	mov    0x14(%rax),%eax
ffffffff8002fb62:	83 f8 ff             	cmp    $0xffffffff,%eax
ffffffff8002fb65:	75 61                	jne    ffffffff8002fbc8 <ZydisFormatterBasePrintAddressABS+0xd7>
ffffffff8002fb67:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8002fb6b:	8b 40 0c             	mov    0xc(%rax),%eax
ffffffff8002fb6e:	83 f8 01             	cmp    $0x1,%eax
ffffffff8002fb71:	75 55                	jne    ffffffff8002fbc8 <ZydisFormatterBasePrintAddressABS+0xd7>
ffffffff8002fb73:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8002fb77:	48 8b 00             	mov    (%rax),%rax
ffffffff8002fb7a:	0f b6 40 15          	movzbl 0x15(%rax),%eax
ffffffff8002fb7e:	0f b6 c0             	movzbl %al,%eax
ffffffff8002fb81:	83 f8 40             	cmp    $0x40,%eax
ffffffff8002fb84:	74 32                	je     ffffffff8002fbb8 <ZydisFormatterBasePrintAddressABS+0xc7>
ffffffff8002fb86:	83 f8 40             	cmp    $0x40,%eax
ffffffff8002fb89:	7f 33                	jg     ffffffff8002fbbe <ZydisFormatterBasePrintAddressABS+0xcd>
ffffffff8002fb8b:	83 f8 10             	cmp    $0x10,%eax
ffffffff8002fb8e:	74 07                	je     ffffffff8002fb97 <ZydisFormatterBasePrintAddressABS+0xa6>
ffffffff8002fb90:	83 f8 20             	cmp    $0x20,%eax
ffffffff8002fb93:	74 13                	je     ffffffff8002fba8 <ZydisFormatterBasePrintAddressABS+0xb7>
ffffffff8002fb95:	eb 27                	jmp    ffffffff8002fbbe <ZydisFormatterBasePrintAddressABS+0xcd>
ffffffff8002fb97:	c6 45 ff 04          	movb   $0x4,-0x1(%rbp)
ffffffff8002fb9b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8002fb9f:	0f b7 c0             	movzwl %ax,%eax
ffffffff8002fba2:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff8002fba6:	eb 20                	jmp    ffffffff8002fbc8 <ZydisFormatterBasePrintAddressABS+0xd7>
ffffffff8002fba8:	c6 45 ff 08          	movb   $0x8,-0x1(%rbp)
ffffffff8002fbac:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8002fbb0:	89 c0                	mov    %eax,%eax
ffffffff8002fbb2:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff8002fbb6:	eb 10                	jmp    ffffffff8002fbc8 <ZydisFormatterBasePrintAddressABS+0xd7>
ffffffff8002fbb8:	c6 45 ff 10          	movb   $0x10,-0x1(%rbp)
ffffffff8002fbbc:	eb 0a                	jmp    ffffffff8002fbc8 <ZydisFormatterBasePrintAddressABS+0xd7>
ffffffff8002fbbe:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff8002fbc3:	e9 45 01 00 00       	jmp    ffffffff8002fd0d <ZydisFormatterBasePrintAddressABS+0x21c>
ffffffff8002fbc8:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8002fbcc:	0f b6 00             	movzbl (%rax),%eax
ffffffff8002fbcf:	84 c0                	test   %al,%al
ffffffff8002fbd1:	74 23                	je     ffffffff8002fbf6 <ZydisFormatterBasePrintAddressABS+0x105>
ffffffff8002fbd3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8002fbd7:	be 08 00 00 00       	mov    $0x8,%esi
ffffffff8002fbdc:	48 89 c7             	mov    %rax,%rdi
ffffffff8002fbdf:	e8 25 5f 00 00       	call   ffffffff80035b09 <ZydisFormatterBufferAppend>
ffffffff8002fbe4:	89 45 f4             	mov    %eax,-0xc(%rbp)
ffffffff8002fbe7:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff8002fbea:	85 c0                	test   %eax,%eax
ffffffff8002fbec:	79 08                	jns    ffffffff8002fbf6 <ZydisFormatterBasePrintAddressABS+0x105>
ffffffff8002fbee:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff8002fbf1:	e9 17 01 00 00       	jmp    ffffffff8002fd0d <ZydisFormatterBasePrintAddressABS+0x21c>
ffffffff8002fbf6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8002fbfa:	8b 40 0c             	mov    0xc(%rax),%eax
ffffffff8002fbfd:	85 c0                	test   %eax,%eax
ffffffff8002fbff:	74 0a                	je     ffffffff8002fc0b <ZydisFormatterBasePrintAddressABS+0x11a>
ffffffff8002fc01:	83 f8 01             	cmp    $0x1,%eax
ffffffff8002fc04:	74 73                	je     ffffffff8002fc79 <ZydisFormatterBasePrintAddressABS+0x188>
ffffffff8002fc06:	e9 f4 00 00 00       	jmp    ffffffff8002fcff <ZydisFormatterBasePrintAddressABS+0x20e>
ffffffff8002fc0b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8002fc0f:	8b 40 0c             	mov    0xc(%rax),%eax
ffffffff8002fc12:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff8002fc16:	89 c0                	mov    %eax,%eax
ffffffff8002fc18:	48 69 c0 b0 00 00 00 	imul   $0xb0,%rax,%rax
ffffffff8002fc1f:	48 01 d0             	add    %rdx,%rax
ffffffff8002fc22:	48 05 a8 00 00 00    	add    $0xa8,%rax
ffffffff8002fc28:	4c 8b 00             	mov    (%rax),%r8
ffffffff8002fc2b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8002fc2f:	8b 40 0c             	mov    0xc(%rax),%eax
ffffffff8002fc32:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff8002fc36:	89 c0                	mov    %eax,%eax
ffffffff8002fc38:	48 69 c0 b0 00 00 00 	imul   $0xb0,%rax,%rax
ffffffff8002fc3f:	48 01 d0             	add    %rdx,%rax
ffffffff8002fc42:	48 83 c0 50          	add    $0x50,%rax
ffffffff8002fc46:	48 8b 10             	mov    (%rax),%rdx
ffffffff8002fc49:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
ffffffff8002fc4d:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
ffffffff8002fc51:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
ffffffff8002fc55:	48 8d 79 10          	lea    0x10(%rcx),%rdi
ffffffff8002fc59:	48 89 d1             	mov    %rdx,%rcx
ffffffff8002fc5c:	89 c2                	mov    %eax,%edx
ffffffff8002fc5e:	e8 ca 63 ff ff       	call   ffffffff8002602d <ZydisStringAppendDecU>
ffffffff8002fc63:	89 45 ec             	mov    %eax,-0x14(%rbp)
ffffffff8002fc66:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff8002fc69:	85 c0                	test   %eax,%eax
ffffffff8002fc6b:	0f 89 95 00 00 00    	jns    ffffffff8002fd06 <ZydisFormatterBasePrintAddressABS+0x215>
ffffffff8002fc71:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff8002fc74:	e9 94 00 00 00       	jmp    ffffffff8002fd0d <ZydisFormatterBasePrintAddressABS+0x21c>
ffffffff8002fc79:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8002fc7d:	8b 40 0c             	mov    0xc(%rax),%eax
ffffffff8002fc80:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff8002fc84:	89 c0                	mov    %eax,%eax
ffffffff8002fc86:	48 69 c0 b0 00 00 00 	imul   $0xb0,%rax,%rax
ffffffff8002fc8d:	48 01 d0             	add    %rdx,%rax
ffffffff8002fc90:	48 05 a8 00 00 00    	add    $0xa8,%rax
ffffffff8002fc96:	48 8b 08             	mov    (%rax),%rcx
ffffffff8002fc99:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8002fc9d:	8b 40 0c             	mov    0xc(%rax),%eax
ffffffff8002fca0:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff8002fca4:	89 c0                	mov    %eax,%eax
ffffffff8002fca6:	48 69 c0 b0 00 00 00 	imul   $0xb0,%rax,%rax
ffffffff8002fcad:	48 01 d0             	add    %rdx,%rax
ffffffff8002fcb0:	48 83 c0 50          	add    $0x50,%rax
ffffffff8002fcb4:	4c 8b 08             	mov    (%rax),%r9
ffffffff8002fcb7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8002fcbb:	0f b6 40 48          	movzbl 0x48(%rax),%eax
ffffffff8002fcbf:	44 0f b6 c0          	movzbl %al,%r8d
ffffffff8002fcc3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8002fcc7:	0f b6 40 49          	movzbl 0x49(%rax),%eax
ffffffff8002fccb:	0f b6 d0             	movzbl %al,%edx
ffffffff8002fcce:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
ffffffff8002fcd2:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
ffffffff8002fcd6:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
ffffffff8002fcda:	48 83 c7 10          	add    $0x10,%rdi
ffffffff8002fcde:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff8002fce2:	51                   	push   %rcx
ffffffff8002fce3:	89 d1                	mov    %edx,%ecx
ffffffff8002fce5:	89 c2                	mov    %eax,%edx
ffffffff8002fce7:	e8 d3 63 ff ff       	call   ffffffff800260bf <ZydisStringAppendHexU>
ffffffff8002fcec:	48 83 c4 10          	add    $0x10,%rsp
ffffffff8002fcf0:	89 45 f0             	mov    %eax,-0x10(%rbp)
ffffffff8002fcf3:	8b 45 f0             	mov    -0x10(%rbp),%eax
ffffffff8002fcf6:	85 c0                	test   %eax,%eax
ffffffff8002fcf8:	79 0c                	jns    ffffffff8002fd06 <ZydisFormatterBasePrintAddressABS+0x215>
ffffffff8002fcfa:	8b 45 f0             	mov    -0x10(%rbp),%eax
ffffffff8002fcfd:	eb 0e                	jmp    ffffffff8002fd0d <ZydisFormatterBasePrintAddressABS+0x21c>
ffffffff8002fcff:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff8002fd04:	eb 07                	jmp    ffffffff8002fd0d <ZydisFormatterBasePrintAddressABS+0x21c>
ffffffff8002fd06:	90                   	nop
ffffffff8002fd07:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff8002fd0c:	90                   	nop
ffffffff8002fd0d:	c9                   	leave  
ffffffff8002fd0e:	c3                   	ret    

ffffffff8002fd0f <ZydisFormatterBasePrintAddressREL>:
ffffffff8002fd0f:	f3 0f 1e fa          	endbr64 
ffffffff8002fd13:	55                   	push   %rbp
ffffffff8002fd14:	48 89 e5             	mov    %rsp,%rbp
ffffffff8002fd17:	48 83 ec 50          	sub    $0x50,%rsp
ffffffff8002fd1b:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
ffffffff8002fd1f:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
ffffffff8002fd23:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
ffffffff8002fd27:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff8002fd2b:	48 8b 70 10          	mov    0x10(%rax),%rsi
ffffffff8002fd2f:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff8002fd33:	48 8b 38             	mov    (%rax),%rdi
ffffffff8002fd36:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
ffffffff8002fd3a:	48 89 c1             	mov    %rax,%rcx
ffffffff8002fd3d:	ba 00 00 00 00       	mov    $0x0,%edx
ffffffff8002fd42:	e8 c3 50 00 00       	call   ffffffff80034e0a <ZydisCalcAbsoluteAddress>
ffffffff8002fd47:	89 45 f8             	mov    %eax,-0x8(%rbp)
ffffffff8002fd4a:	8b 45 f8             	mov    -0x8(%rbp),%eax
ffffffff8002fd4d:	85 c0                	test   %eax,%eax
ffffffff8002fd4f:	79 08                	jns    ffffffff8002fd59 <ZydisFormatterBasePrintAddressREL+0x4a>
ffffffff8002fd51:	8b 45 f8             	mov    -0x8(%rbp),%eax
ffffffff8002fd54:	e9 55 03 00 00       	jmp    ffffffff800300ae <ZydisFormatterBasePrintAddressREL+0x39f>
ffffffff8002fd59:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8002fd5d:	8b 40 18             	mov    0x18(%rax),%eax
ffffffff8002fd60:	83 f8 ff             	cmp    $0xffffffff,%eax
ffffffff8002fd63:	74 09                	je     ffffffff8002fd6e <ZydisFormatterBasePrintAddressREL+0x5f>
ffffffff8002fd65:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8002fd69:	8b 40 18             	mov    0x18(%rax),%eax
ffffffff8002fd6c:	eb 05                	jmp    ffffffff8002fd73 <ZydisFormatterBasePrintAddressREL+0x64>
ffffffff8002fd6e:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8002fd73:	88 45 ff             	mov    %al,-0x1(%rbp)
ffffffff8002fd76:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8002fd7a:	8b 40 18             	mov    0x18(%rax),%eax
ffffffff8002fd7d:	83 f8 ff             	cmp    $0xffffffff,%eax
ffffffff8002fd80:	75 61                	jne    ffffffff8002fde3 <ZydisFormatterBasePrintAddressREL+0xd4>
ffffffff8002fd82:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8002fd86:	8b 40 0c             	mov    0xc(%rax),%eax
ffffffff8002fd89:	83 f8 01             	cmp    $0x1,%eax
ffffffff8002fd8c:	75 55                	jne    ffffffff8002fde3 <ZydisFormatterBasePrintAddressREL+0xd4>
ffffffff8002fd8e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff8002fd92:	48 8b 00             	mov    (%rax),%rax
ffffffff8002fd95:	0f b6 40 15          	movzbl 0x15(%rax),%eax
ffffffff8002fd99:	0f b6 c0             	movzbl %al,%eax
ffffffff8002fd9c:	83 f8 40             	cmp    $0x40,%eax
ffffffff8002fd9f:	74 32                	je     ffffffff8002fdd3 <ZydisFormatterBasePrintAddressREL+0xc4>
ffffffff8002fda1:	83 f8 40             	cmp    $0x40,%eax
ffffffff8002fda4:	7f 33                	jg     ffffffff8002fdd9 <ZydisFormatterBasePrintAddressREL+0xca>
ffffffff8002fda6:	83 f8 10             	cmp    $0x10,%eax
ffffffff8002fda9:	74 07                	je     ffffffff8002fdb2 <ZydisFormatterBasePrintAddressREL+0xa3>
ffffffff8002fdab:	83 f8 20             	cmp    $0x20,%eax
ffffffff8002fdae:	74 13                	je     ffffffff8002fdc3 <ZydisFormatterBasePrintAddressREL+0xb4>
ffffffff8002fdb0:	eb 27                	jmp    ffffffff8002fdd9 <ZydisFormatterBasePrintAddressREL+0xca>
ffffffff8002fdb2:	c6 45 ff 04          	movb   $0x4,-0x1(%rbp)
ffffffff8002fdb6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8002fdba:	0f b7 c0             	movzwl %ax,%eax
ffffffff8002fdbd:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
ffffffff8002fdc1:	eb 20                	jmp    ffffffff8002fde3 <ZydisFormatterBasePrintAddressREL+0xd4>
ffffffff8002fdc3:	c6 45 ff 08          	movb   $0x8,-0x1(%rbp)
ffffffff8002fdc7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8002fdcb:	89 c0                	mov    %eax,%eax
ffffffff8002fdcd:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
ffffffff8002fdd1:	eb 10                	jmp    ffffffff8002fde3 <ZydisFormatterBasePrintAddressREL+0xd4>
ffffffff8002fdd3:	c6 45 ff 10          	movb   $0x10,-0x1(%rbp)
ffffffff8002fdd7:	eb 0a                	jmp    ffffffff8002fde3 <ZydisFormatterBasePrintAddressREL+0xd4>
ffffffff8002fdd9:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff8002fdde:	e9 cb 02 00 00       	jmp    ffffffff800300ae <ZydisFormatterBasePrintAddressREL+0x39f>
ffffffff8002fde3:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002fde7:	0f b6 00             	movzbl (%rax),%eax
ffffffff8002fdea:	84 c0                	test   %al,%al
ffffffff8002fdec:	74 23                	je     ffffffff8002fe11 <ZydisFormatterBasePrintAddressREL+0x102>
ffffffff8002fdee:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002fdf2:	be 09 00 00 00       	mov    $0x9,%esi
ffffffff8002fdf7:	48 89 c7             	mov    %rax,%rdi
ffffffff8002fdfa:	e8 0a 5d 00 00       	call   ffffffff80035b09 <ZydisFormatterBufferAppend>
ffffffff8002fdff:	89 45 f4             	mov    %eax,-0xc(%rbp)
ffffffff8002fe02:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff8002fe05:	85 c0                	test   %eax,%eax
ffffffff8002fe07:	79 08                	jns    ffffffff8002fe11 <ZydisFormatterBasePrintAddressREL+0x102>
ffffffff8002fe09:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff8002fe0c:	e9 9d 02 00 00       	jmp    ffffffff800300ae <ZydisFormatterBasePrintAddressREL+0x39f>
ffffffff8002fe11:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8002fe15:	8b 40 10             	mov    0x10(%rax),%eax
ffffffff8002fe18:	83 f8 01             	cmp    $0x1,%eax
ffffffff8002fe1b:	76 0e                	jbe    ffffffff8002fe2b <ZydisFormatterBasePrintAddressREL+0x11c>
ffffffff8002fe1d:	83 f8 02             	cmp    $0x2,%eax
ffffffff8002fe20:	0f 84 3c 01 00 00    	je     ffffffff8002ff62 <ZydisFormatterBasePrintAddressREL+0x253>
ffffffff8002fe26:	e9 76 02 00 00       	jmp    ffffffff800300a1 <ZydisFormatterBasePrintAddressREL+0x392>
ffffffff8002fe2b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8002fe2f:	8b 40 0c             	mov    0xc(%rax),%eax
ffffffff8002fe32:	85 c0                	test   %eax,%eax
ffffffff8002fe34:	74 0e                	je     ffffffff8002fe44 <ZydisFormatterBasePrintAddressREL+0x135>
ffffffff8002fe36:	83 f8 01             	cmp    $0x1,%eax
ffffffff8002fe39:	0f 84 81 00 00 00    	je     ffffffff8002fec0 <ZydisFormatterBasePrintAddressREL+0x1b1>
ffffffff8002fe3f:	e9 0e 01 00 00       	jmp    ffffffff8002ff52 <ZydisFormatterBasePrintAddressREL+0x243>
ffffffff8002fe44:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8002fe48:	8b 40 0c             	mov    0xc(%rax),%eax
ffffffff8002fe4b:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
ffffffff8002fe4f:	89 c0                	mov    %eax,%eax
ffffffff8002fe51:	48 69 c0 b0 00 00 00 	imul   $0xb0,%rax,%rax
ffffffff8002fe58:	48 01 d0             	add    %rdx,%rax
ffffffff8002fe5b:	48 05 a8 00 00 00    	add    $0xa8,%rax
ffffffff8002fe61:	48 8b 30             	mov    (%rax),%rsi
ffffffff8002fe64:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8002fe68:	8b 40 0c             	mov    0xc(%rax),%eax
ffffffff8002fe6b:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
ffffffff8002fe6f:	89 c0                	mov    %eax,%eax
ffffffff8002fe71:	48 69 c0 b0 00 00 00 	imul   $0xb0,%rax,%rax
ffffffff8002fe78:	48 01 d0             	add    %rdx,%rax
ffffffff8002fe7b:	48 83 c0 50          	add    $0x50,%rax
ffffffff8002fe7f:	48 8b 08             	mov    (%rax),%rcx
ffffffff8002fe82:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
ffffffff8002fe86:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff8002fe8a:	49 89 d2             	mov    %rdx,%r10
ffffffff8002fe8d:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
ffffffff8002fe91:	48 8d 7a 10          	lea    0x10(%rdx),%rdi
ffffffff8002fe95:	49 89 f1             	mov    %rsi,%r9
ffffffff8002fe98:	49 89 c8             	mov    %rcx,%r8
ffffffff8002fe9b:	b9 01 00 00 00       	mov    $0x1,%ecx
ffffffff8002fea0:	89 c2                	mov    %eax,%edx
ffffffff8002fea2:	4c 89 d6             	mov    %r10,%rsi
ffffffff8002fea5:	e8 a8 f2 ff ff       	call   ffffffff8002f152 <ZydisStringAppendDecS.lto_priv.1>
ffffffff8002feaa:	89 45 e0             	mov    %eax,-0x20(%rbp)
ffffffff8002fead:	8b 45 e0             	mov    -0x20(%rbp),%eax
ffffffff8002feb0:	85 c0                	test   %eax,%eax
ffffffff8002feb2:	0f 89 a4 00 00 00    	jns    ffffffff8002ff5c <ZydisFormatterBasePrintAddressREL+0x24d>
ffffffff8002feb8:	8b 45 e0             	mov    -0x20(%rbp),%eax
ffffffff8002febb:	e9 ee 01 00 00       	jmp    ffffffff800300ae <ZydisFormatterBasePrintAddressREL+0x39f>
ffffffff8002fec0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8002fec4:	8b 40 0c             	mov    0xc(%rax),%eax
ffffffff8002fec7:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
ffffffff8002fecb:	89 c0                	mov    %eax,%eax
ffffffff8002fecd:	48 69 c0 b0 00 00 00 	imul   $0xb0,%rax,%rax
ffffffff8002fed4:	48 01 d0             	add    %rdx,%rax
ffffffff8002fed7:	48 05 a8 00 00 00    	add    $0xa8,%rax
ffffffff8002fedd:	48 8b 30             	mov    (%rax),%rsi
ffffffff8002fee0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8002fee4:	8b 40 0c             	mov    0xc(%rax),%eax
ffffffff8002fee7:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
ffffffff8002feeb:	89 c0                	mov    %eax,%eax
ffffffff8002feed:	48 69 c0 b0 00 00 00 	imul   $0xb0,%rax,%rax
ffffffff8002fef4:	48 01 d0             	add    %rdx,%rax
ffffffff8002fef7:	48 83 c0 50          	add    $0x50,%rax
ffffffff8002fefb:	48 8b 08             	mov    (%rax),%rcx
ffffffff8002fefe:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8002ff02:	0f b6 40 48          	movzbl 0x48(%rax),%eax
ffffffff8002ff06:	44 0f b6 c0          	movzbl %al,%r8d
ffffffff8002ff0a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8002ff0e:	0f b6 40 49          	movzbl 0x49(%rax),%eax
ffffffff8002ff12:	0f b6 d0             	movzbl %al,%edx
ffffffff8002ff15:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
ffffffff8002ff19:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
ffffffff8002ff1d:	49 89 fa             	mov    %rdi,%r10
ffffffff8002ff20:	48 8b 7d c0          	mov    -0x40(%rbp),%rdi
ffffffff8002ff24:	48 83 c7 10          	add    $0x10,%rdi
ffffffff8002ff28:	56                   	push   %rsi
ffffffff8002ff29:	51                   	push   %rcx
ffffffff8002ff2a:	41 b9 01 00 00 00    	mov    $0x1,%r9d
ffffffff8002ff30:	89 d1                	mov    %edx,%ecx
ffffffff8002ff32:	89 c2                	mov    %eax,%edx
ffffffff8002ff34:	4c 89 d6             	mov    %r10,%rsi
ffffffff8002ff37:	e8 15 f3 ff ff       	call   ffffffff8002f251 <ZydisStringAppendHexS.lto_priv.1>
ffffffff8002ff3c:	48 83 c4 10          	add    $0x10,%rsp
ffffffff8002ff40:	89 45 e4             	mov    %eax,-0x1c(%rbp)
ffffffff8002ff43:	8b 45 e4             	mov    -0x1c(%rbp),%eax
ffffffff8002ff46:	85 c0                	test   %eax,%eax
ffffffff8002ff48:	79 12                	jns    ffffffff8002ff5c <ZydisFormatterBasePrintAddressREL+0x24d>
ffffffff8002ff4a:	8b 45 e4             	mov    -0x1c(%rbp),%eax
ffffffff8002ff4d:	e9 5c 01 00 00       	jmp    ffffffff800300ae <ZydisFormatterBasePrintAddressREL+0x39f>
ffffffff8002ff52:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff8002ff57:	e9 52 01 00 00       	jmp    ffffffff800300ae <ZydisFormatterBasePrintAddressREL+0x39f>
ffffffff8002ff5c:	90                   	nop
ffffffff8002ff5d:	e9 46 01 00 00       	jmp    ffffffff800300a8 <ZydisFormatterBasePrintAddressREL+0x399>
ffffffff8002ff62:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8002ff66:	48 83 c0 10          	add    $0x10,%rax
ffffffff8002ff6a:	48 8d 15 d7 9b 07 00 	lea    0x79bd7(%rip),%rdx        # ffffffff800a9b48 <STR_ADD.lto_priv.2>
ffffffff8002ff71:	48 89 d6             	mov    %rdx,%rsi
ffffffff8002ff74:	48 89 c7             	mov    %rax,%rdi
ffffffff8002ff77:	e8 39 ef ff ff       	call   ffffffff8002eeb5 <ZydisStringAppendShort.lto_priv.1>
ffffffff8002ff7c:	89 45 f0             	mov    %eax,-0x10(%rbp)
ffffffff8002ff7f:	8b 45 f0             	mov    -0x10(%rbp),%eax
ffffffff8002ff82:	85 c0                	test   %eax,%eax
ffffffff8002ff84:	79 08                	jns    ffffffff8002ff8e <ZydisFormatterBasePrintAddressREL+0x27f>
ffffffff8002ff86:	8b 45 f0             	mov    -0x10(%rbp),%eax
ffffffff8002ff89:	e9 20 01 00 00       	jmp    ffffffff800300ae <ZydisFormatterBasePrintAddressREL+0x39f>
ffffffff8002ff8e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8002ff92:	8b 40 0c             	mov    0xc(%rax),%eax
ffffffff8002ff95:	85 c0                	test   %eax,%eax
ffffffff8002ff97:	74 0a                	je     ffffffff8002ffa3 <ZydisFormatterBasePrintAddressREL+0x294>
ffffffff8002ff99:	83 f8 01             	cmp    $0x1,%eax
ffffffff8002ff9c:	74 73                	je     ffffffff80030011 <ZydisFormatterBasePrintAddressREL+0x302>
ffffffff8002ff9e:	e9 f4 00 00 00       	jmp    ffffffff80030097 <ZydisFormatterBasePrintAddressREL+0x388>
ffffffff8002ffa3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8002ffa7:	8b 40 0c             	mov    0xc(%rax),%eax
ffffffff8002ffaa:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
ffffffff8002ffae:	89 c0                	mov    %eax,%eax
ffffffff8002ffb0:	48 69 c0 b0 00 00 00 	imul   $0xb0,%rax,%rax
ffffffff8002ffb7:	48 01 d0             	add    %rdx,%rax
ffffffff8002ffba:	48 05 a8 00 00 00    	add    $0xa8,%rax
ffffffff8002ffc0:	4c 8b 00             	mov    (%rax),%r8
ffffffff8002ffc3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8002ffc7:	8b 40 0c             	mov    0xc(%rax),%eax
ffffffff8002ffca:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
ffffffff8002ffce:	89 c0                	mov    %eax,%eax
ffffffff8002ffd0:	48 69 c0 b0 00 00 00 	imul   $0xb0,%rax,%rax
ffffffff8002ffd7:	48 01 d0             	add    %rdx,%rax
ffffffff8002ffda:	48 83 c0 50          	add    $0x50,%rax
ffffffff8002ffde:	48 8b 10             	mov    (%rax),%rdx
ffffffff8002ffe1:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
ffffffff8002ffe5:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
ffffffff8002ffe9:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
ffffffff8002ffed:	48 8d 79 10          	lea    0x10(%rcx),%rdi
ffffffff8002fff1:	48 89 d1             	mov    %rdx,%rcx
ffffffff8002fff4:	89 c2                	mov    %eax,%edx
ffffffff8002fff6:	e8 32 60 ff ff       	call   ffffffff8002602d <ZydisStringAppendDecU>
ffffffff8002fffb:	89 45 e8             	mov    %eax,-0x18(%rbp)
ffffffff8002fffe:	8b 45 e8             	mov    -0x18(%rbp),%eax
ffffffff80030001:	85 c0                	test   %eax,%eax
ffffffff80030003:	0f 89 95 00 00 00    	jns    ffffffff8003009e <ZydisFormatterBasePrintAddressREL+0x38f>
ffffffff80030009:	8b 45 e8             	mov    -0x18(%rbp),%eax
ffffffff8003000c:	e9 9d 00 00 00       	jmp    ffffffff800300ae <ZydisFormatterBasePrintAddressREL+0x39f>
ffffffff80030011:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80030015:	8b 40 0c             	mov    0xc(%rax),%eax
ffffffff80030018:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
ffffffff8003001c:	89 c0                	mov    %eax,%eax
ffffffff8003001e:	48 69 c0 b0 00 00 00 	imul   $0xb0,%rax,%rax
ffffffff80030025:	48 01 d0             	add    %rdx,%rax
ffffffff80030028:	48 05 a8 00 00 00    	add    $0xa8,%rax
ffffffff8003002e:	48 8b 08             	mov    (%rax),%rcx
ffffffff80030031:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80030035:	8b 40 0c             	mov    0xc(%rax),%eax
ffffffff80030038:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
ffffffff8003003c:	89 c0                	mov    %eax,%eax
ffffffff8003003e:	48 69 c0 b0 00 00 00 	imul   $0xb0,%rax,%rax
ffffffff80030045:	48 01 d0             	add    %rdx,%rax
ffffffff80030048:	48 83 c0 50          	add    $0x50,%rax
ffffffff8003004c:	4c 8b 08             	mov    (%rax),%r9
ffffffff8003004f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80030053:	0f b6 40 48          	movzbl 0x48(%rax),%eax
ffffffff80030057:	44 0f b6 c0          	movzbl %al,%r8d
ffffffff8003005b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8003005f:	0f b6 40 49          	movzbl 0x49(%rax),%eax
ffffffff80030063:	0f b6 d0             	movzbl %al,%edx
ffffffff80030066:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
ffffffff8003006a:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
ffffffff8003006e:	48 8b 7d c0          	mov    -0x40(%rbp),%rdi
ffffffff80030072:	48 83 c7 10          	add    $0x10,%rdi
ffffffff80030076:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff8003007a:	51                   	push   %rcx
ffffffff8003007b:	89 d1                	mov    %edx,%ecx
ffffffff8003007d:	89 c2                	mov    %eax,%edx
ffffffff8003007f:	e8 3b 60 ff ff       	call   ffffffff800260bf <ZydisStringAppendHexU>
ffffffff80030084:	48 83 c4 10          	add    $0x10,%rsp
ffffffff80030088:	89 45 ec             	mov    %eax,-0x14(%rbp)
ffffffff8003008b:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff8003008e:	85 c0                	test   %eax,%eax
ffffffff80030090:	79 0c                	jns    ffffffff8003009e <ZydisFormatterBasePrintAddressREL+0x38f>
ffffffff80030092:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff80030095:	eb 17                	jmp    ffffffff800300ae <ZydisFormatterBasePrintAddressREL+0x39f>
ffffffff80030097:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff8003009c:	eb 10                	jmp    ffffffff800300ae <ZydisFormatterBasePrintAddressREL+0x39f>
ffffffff8003009e:	90                   	nop
ffffffff8003009f:	eb 07                	jmp    ffffffff800300a8 <ZydisFormatterBasePrintAddressREL+0x399>
ffffffff800300a1:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff800300a6:	eb 06                	jmp    ffffffff800300ae <ZydisFormatterBasePrintAddressREL+0x39f>
ffffffff800300a8:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff800300ad:	90                   	nop
ffffffff800300ae:	c9                   	leave  
ffffffff800300af:	c3                   	ret    

ffffffff800300b0 <ZydisFormatterBasePrintIMM>:
ffffffff800300b0:	f3 0f 1e fa          	endbr64 
ffffffff800300b4:	55                   	push   %rbp
ffffffff800300b5:	48 89 e5             	mov    %rsp,%rbp
ffffffff800300b8:	48 83 ec 50          	sub    $0x50,%rsp
ffffffff800300bc:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
ffffffff800300c0:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
ffffffff800300c4:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
ffffffff800300c8:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff800300cc:	0f b6 00             	movzbl (%rax),%eax
ffffffff800300cf:	84 c0                	test   %al,%al
ffffffff800300d1:	74 23                	je     ffffffff800300f6 <ZydisFormatterBasePrintIMM+0x46>
ffffffff800300d3:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff800300d7:	be 0b 00 00 00       	mov    $0xb,%esi
ffffffff800300dc:	48 89 c7             	mov    %rax,%rdi
ffffffff800300df:	e8 25 5a 00 00       	call   ffffffff80035b09 <ZydisFormatterBufferAppend>
ffffffff800300e4:	89 45 f0             	mov    %eax,-0x10(%rbp)
ffffffff800300e7:	8b 45 f0             	mov    -0x10(%rbp),%eax
ffffffff800300ea:	85 c0                	test   %eax,%eax
ffffffff800300ec:	79 08                	jns    ffffffff800300f6 <ZydisFormatterBasePrintIMM+0x46>
ffffffff800300ee:	8b 45 f0             	mov    -0x10(%rbp),%eax
ffffffff800300f1:	e9 af 03 00 00       	jmp    ffffffff800304a5 <ZydisFormatterBasePrintIMM+0x3f5>
ffffffff800300f6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff800300fa:	8b 40 2c             	mov    0x2c(%rax),%eax
ffffffff800300fd:	83 f8 01             	cmp    $0x1,%eax
ffffffff80030100:	74 1b                	je     ffffffff8003011d <ZydisFormatterBasePrintIMM+0x6d>
ffffffff80030102:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80030106:	8b 40 2c             	mov    0x2c(%rax),%eax
ffffffff80030109:	85 c0                	test   %eax,%eax
ffffffff8003010b:	75 17                	jne    ffffffff80030124 <ZydisFormatterBasePrintIMM+0x74>
ffffffff8003010d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff80030111:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff80030115:	0f b6 40 58          	movzbl 0x58(%rax),%eax
ffffffff80030119:	84 c0                	test   %al,%al
ffffffff8003011b:	74 07                	je     ffffffff80030124 <ZydisFormatterBasePrintIMM+0x74>
ffffffff8003011d:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff80030122:	eb 05                	jmp    ffffffff80030129 <ZydisFormatterBasePrintIMM+0x79>
ffffffff80030124:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80030129:	88 45 ef             	mov    %al,-0x11(%rbp)
ffffffff8003012c:	80 7d ef 00          	cmpb   $0x0,-0x11(%rbp)
ffffffff80030130:	0f 84 65 01 00 00    	je     ffffffff8003029b <ZydisFormatterBasePrintIMM+0x1eb>
ffffffff80030136:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff8003013a:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff8003013e:	48 8b 40 60          	mov    0x60(%rax),%rax
ffffffff80030142:	48 85 c0             	test   %rax,%rax
ffffffff80030145:	0f 89 50 01 00 00    	jns    ffffffff8003029b <ZydisFormatterBasePrintIMM+0x1eb>
ffffffff8003014b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8003014f:	8b 40 28             	mov    0x28(%rax),%eax
ffffffff80030152:	85 c0                	test   %eax,%eax
ffffffff80030154:	74 0e                	je     ffffffff80030164 <ZydisFormatterBasePrintIMM+0xb4>
ffffffff80030156:	83 f8 01             	cmp    $0x1,%eax
ffffffff80030159:	0f 84 89 00 00 00    	je     ffffffff800301e8 <ZydisFormatterBasePrintIMM+0x138>
ffffffff8003015f:	e9 22 01 00 00       	jmp    ffffffff80030286 <ZydisFormatterBasePrintIMM+0x1d6>
ffffffff80030164:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80030168:	8b 40 28             	mov    0x28(%rax),%eax
ffffffff8003016b:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
ffffffff8003016f:	89 c0                	mov    %eax,%eax
ffffffff80030171:	48 69 c0 b0 00 00 00 	imul   $0xb0,%rax,%rax
ffffffff80030178:	48 01 d0             	add    %rdx,%rax
ffffffff8003017b:	48 05 a8 00 00 00    	add    $0xa8,%rax
ffffffff80030181:	4c 8b 00             	mov    (%rax),%r8
ffffffff80030184:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80030188:	8b 40 28             	mov    0x28(%rax),%eax
ffffffff8003018b:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
ffffffff8003018f:	89 c0                	mov    %eax,%eax
ffffffff80030191:	48 69 c0 b0 00 00 00 	imul   $0xb0,%rax,%rax
ffffffff80030198:	48 01 d0             	add    %rdx,%rax
ffffffff8003019b:	48 83 c0 50          	add    $0x50,%rax
ffffffff8003019f:	48 8b 08             	mov    (%rax),%rcx
ffffffff800301a2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff800301a6:	8b 40 30             	mov    0x30(%rax),%eax
ffffffff800301a9:	0f b6 c0             	movzbl %al,%eax
ffffffff800301ac:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
ffffffff800301b0:	48 8b 52 10          	mov    0x10(%rdx),%rdx
ffffffff800301b4:	48 8b 72 60          	mov    0x60(%rdx),%rsi
ffffffff800301b8:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
ffffffff800301bc:	48 8d 7a 10          	lea    0x10(%rdx),%rdi
ffffffff800301c0:	4d 89 c1             	mov    %r8,%r9
ffffffff800301c3:	49 89 c8             	mov    %rcx,%r8
ffffffff800301c6:	b9 00 00 00 00       	mov    $0x0,%ecx
ffffffff800301cb:	89 c2                	mov    %eax,%edx
ffffffff800301cd:	e8 80 ef ff ff       	call   ffffffff8002f152 <ZydisStringAppendDecS.lto_priv.1>
ffffffff800301d2:	89 45 e4             	mov    %eax,-0x1c(%rbp)
ffffffff800301d5:	8b 45 e4             	mov    -0x1c(%rbp),%eax
ffffffff800301d8:	85 c0                	test   %eax,%eax
ffffffff800301da:	0f 89 b0 00 00 00    	jns    ffffffff80030290 <ZydisFormatterBasePrintIMM+0x1e0>
ffffffff800301e0:	8b 45 e4             	mov    -0x1c(%rbp),%eax
ffffffff800301e3:	e9 bd 02 00 00       	jmp    ffffffff800304a5 <ZydisFormatterBasePrintIMM+0x3f5>
ffffffff800301e8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff800301ec:	8b 40 28             	mov    0x28(%rax),%eax
ffffffff800301ef:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
ffffffff800301f3:	89 c0                	mov    %eax,%eax
ffffffff800301f5:	48 69 c0 b0 00 00 00 	imul   $0xb0,%rax,%rax
ffffffff800301fc:	48 01 d0             	add    %rdx,%rax
ffffffff800301ff:	48 05 a8 00 00 00    	add    $0xa8,%rax
ffffffff80030205:	4c 8b 00             	mov    (%rax),%r8
ffffffff80030208:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8003020c:	8b 40 28             	mov    0x28(%rax),%eax
ffffffff8003020f:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
ffffffff80030213:	89 c0                	mov    %eax,%eax
ffffffff80030215:	48 69 c0 b0 00 00 00 	imul   $0xb0,%rax,%rax
ffffffff8003021c:	48 01 d0             	add    %rdx,%rax
ffffffff8003021f:	48 83 c0 50          	add    $0x50,%rax
ffffffff80030223:	48 8b 08             	mov    (%rax),%rcx
ffffffff80030226:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8003022a:	0f b6 40 48          	movzbl 0x48(%rax),%eax
ffffffff8003022e:	44 0f b6 d0          	movzbl %al,%r10d
ffffffff80030232:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80030236:	0f b6 40 49          	movzbl 0x49(%rax),%eax
ffffffff8003023a:	0f b6 d0             	movzbl %al,%edx
ffffffff8003023d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80030241:	8b 40 30             	mov    0x30(%rax),%eax
ffffffff80030244:	0f b6 c0             	movzbl %al,%eax
ffffffff80030247:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
ffffffff8003024b:	48 8b 76 10          	mov    0x10(%rsi),%rsi
ffffffff8003024f:	48 8b 76 60          	mov    0x60(%rsi),%rsi
ffffffff80030253:	48 8b 7d c0          	mov    -0x40(%rbp),%rdi
ffffffff80030257:	48 83 c7 10          	add    $0x10,%rdi
ffffffff8003025b:	41 50                	push   %r8
ffffffff8003025d:	51                   	push   %rcx
ffffffff8003025e:	41 b9 00 00 00 00    	mov    $0x0,%r9d
ffffffff80030264:	45 89 d0             	mov    %r10d,%r8d
ffffffff80030267:	89 d1                	mov    %edx,%ecx
ffffffff80030269:	89 c2                	mov    %eax,%edx
ffffffff8003026b:	e8 e1 ef ff ff       	call   ffffffff8002f251 <ZydisStringAppendHexS.lto_priv.1>
ffffffff80030270:	48 83 c4 10          	add    $0x10,%rsp
ffffffff80030274:	89 45 e8             	mov    %eax,-0x18(%rbp)
ffffffff80030277:	8b 45 e8             	mov    -0x18(%rbp),%eax
ffffffff8003027a:	85 c0                	test   %eax,%eax
ffffffff8003027c:	79 12                	jns    ffffffff80030290 <ZydisFormatterBasePrintIMM+0x1e0>
ffffffff8003027e:	8b 45 e8             	mov    -0x18(%rbp),%eax
ffffffff80030281:	e9 1f 02 00 00       	jmp    ffffffff800304a5 <ZydisFormatterBasePrintIMM+0x3f5>
ffffffff80030286:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff8003028b:	e9 15 02 00 00       	jmp    ffffffff800304a5 <ZydisFormatterBasePrintIMM+0x3f5>
ffffffff80030290:	90                   	nop
ffffffff80030291:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff80030296:	e9 0a 02 00 00       	jmp    ffffffff800304a5 <ZydisFormatterBasePrintIMM+0x3f5>
ffffffff8003029b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8003029f:	8b 40 30             	mov    0x30(%rax),%eax
ffffffff800302a2:	83 f8 ff             	cmp    $0xffffffff,%eax
ffffffff800302a5:	74 09                	je     ffffffff800302b0 <ZydisFormatterBasePrintIMM+0x200>
ffffffff800302a7:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff800302ab:	8b 40 30             	mov    0x30(%rax),%eax
ffffffff800302ae:	eb 05                	jmp    ffffffff800302b5 <ZydisFormatterBasePrintIMM+0x205>
ffffffff800302b0:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800302b5:	88 45 f7             	mov    %al,-0x9(%rbp)
ffffffff800302b8:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff800302bc:	48 8b 00             	mov    (%rax),%rax
ffffffff800302bf:	0f b6 40 16          	movzbl 0x16(%rax),%eax
ffffffff800302c3:	0f b6 c0             	movzbl %al,%eax
ffffffff800302c6:	83 f8 40             	cmp    $0x40,%eax
ffffffff800302c9:	0f 84 94 00 00 00    	je     ffffffff80030363 <ZydisFormatterBasePrintIMM+0x2b3>
ffffffff800302cf:	83 f8 40             	cmp    $0x40,%eax
ffffffff800302d2:	0f 8f ad 00 00 00    	jg     ffffffff80030385 <ZydisFormatterBasePrintIMM+0x2d5>
ffffffff800302d8:	83 f8 20             	cmp    $0x20,%eax
ffffffff800302db:	74 62                	je     ffffffff8003033f <ZydisFormatterBasePrintIMM+0x28f>
ffffffff800302dd:	83 f8 20             	cmp    $0x20,%eax
ffffffff800302e0:	0f 8f 9f 00 00 00    	jg     ffffffff80030385 <ZydisFormatterBasePrintIMM+0x2d5>
ffffffff800302e6:	83 f8 08             	cmp    $0x8,%eax
ffffffff800302e9:	74 0a                	je     ffffffff800302f5 <ZydisFormatterBasePrintIMM+0x245>
ffffffff800302eb:	83 f8 10             	cmp    $0x10,%eax
ffffffff800302ee:	74 2a                	je     ffffffff8003031a <ZydisFormatterBasePrintIMM+0x26a>
ffffffff800302f0:	e9 90 00 00 00       	jmp    ffffffff80030385 <ZydisFormatterBasePrintIMM+0x2d5>
ffffffff800302f5:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff800302f9:	8b 40 30             	mov    0x30(%rax),%eax
ffffffff800302fc:	83 f8 ff             	cmp    $0xffffffff,%eax
ffffffff800302ff:	75 04                	jne    ffffffff80030305 <ZydisFormatterBasePrintIMM+0x255>
ffffffff80030301:	c6 45 f7 02          	movb   $0x2,-0x9(%rbp)
ffffffff80030305:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff80030309:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff8003030d:	48 8b 40 60          	mov    0x60(%rax),%rax
ffffffff80030311:	0f b6 c0             	movzbl %al,%eax
ffffffff80030314:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff80030318:	eb 75                	jmp    ffffffff8003038f <ZydisFormatterBasePrintIMM+0x2df>
ffffffff8003031a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8003031e:	8b 40 30             	mov    0x30(%rax),%eax
ffffffff80030321:	83 f8 ff             	cmp    $0xffffffff,%eax
ffffffff80030324:	75 04                	jne    ffffffff8003032a <ZydisFormatterBasePrintIMM+0x27a>
ffffffff80030326:	c6 45 f7 04          	movb   $0x4,-0x9(%rbp)
ffffffff8003032a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff8003032e:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff80030332:	48 8b 40 60          	mov    0x60(%rax),%rax
ffffffff80030336:	0f b7 c0             	movzwl %ax,%eax
ffffffff80030339:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8003033d:	eb 50                	jmp    ffffffff8003038f <ZydisFormatterBasePrintIMM+0x2df>
ffffffff8003033f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80030343:	8b 40 30             	mov    0x30(%rax),%eax
ffffffff80030346:	83 f8 ff             	cmp    $0xffffffff,%eax
ffffffff80030349:	75 04                	jne    ffffffff8003034f <ZydisFormatterBasePrintIMM+0x29f>
ffffffff8003034b:	c6 45 f7 08          	movb   $0x8,-0x9(%rbp)
ffffffff8003034f:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff80030353:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff80030357:	48 8b 40 60          	mov    0x60(%rax),%rax
ffffffff8003035b:	89 c0                	mov    %eax,%eax
ffffffff8003035d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff80030361:	eb 2c                	jmp    ffffffff8003038f <ZydisFormatterBasePrintIMM+0x2df>
ffffffff80030363:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80030367:	8b 40 30             	mov    0x30(%rax),%eax
ffffffff8003036a:	83 f8 ff             	cmp    $0xffffffff,%eax
ffffffff8003036d:	75 04                	jne    ffffffff80030373 <ZydisFormatterBasePrintIMM+0x2c3>
ffffffff8003036f:	c6 45 f7 10          	movb   $0x10,-0x9(%rbp)
ffffffff80030373:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff80030377:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff8003037b:	48 8b 40 60          	mov    0x60(%rax),%rax
ffffffff8003037f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff80030383:	eb 0a                	jmp    ffffffff8003038f <ZydisFormatterBasePrintIMM+0x2df>
ffffffff80030385:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff8003038a:	e9 16 01 00 00       	jmp    ffffffff800304a5 <ZydisFormatterBasePrintIMM+0x3f5>
ffffffff8003038f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80030393:	8b 40 28             	mov    0x28(%rax),%eax
ffffffff80030396:	85 c0                	test   %eax,%eax
ffffffff80030398:	74 0a                	je     ffffffff800303a4 <ZydisFormatterBasePrintIMM+0x2f4>
ffffffff8003039a:	83 f8 01             	cmp    $0x1,%eax
ffffffff8003039d:	74 73                	je     ffffffff80030412 <ZydisFormatterBasePrintIMM+0x362>
ffffffff8003039f:	e9 f4 00 00 00       	jmp    ffffffff80030498 <ZydisFormatterBasePrintIMM+0x3e8>
ffffffff800303a4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff800303a8:	8b 40 28             	mov    0x28(%rax),%eax
ffffffff800303ab:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
ffffffff800303af:	89 c0                	mov    %eax,%eax
ffffffff800303b1:	48 69 c0 b0 00 00 00 	imul   $0xb0,%rax,%rax
ffffffff800303b8:	48 01 d0             	add    %rdx,%rax
ffffffff800303bb:	48 05 a8 00 00 00    	add    $0xa8,%rax
ffffffff800303c1:	4c 8b 00             	mov    (%rax),%r8
ffffffff800303c4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff800303c8:	8b 40 28             	mov    0x28(%rax),%eax
ffffffff800303cb:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
ffffffff800303cf:	89 c0                	mov    %eax,%eax
ffffffff800303d1:	48 69 c0 b0 00 00 00 	imul   $0xb0,%rax,%rax
ffffffff800303d8:	48 01 d0             	add    %rdx,%rax
ffffffff800303db:	48 83 c0 50          	add    $0x50,%rax
ffffffff800303df:	48 8b 10             	mov    (%rax),%rdx
ffffffff800303e2:	0f b6 45 f7          	movzbl -0x9(%rbp),%eax
ffffffff800303e6:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
ffffffff800303ea:	48 8d 79 10          	lea    0x10(%rcx),%rdi
ffffffff800303ee:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
ffffffff800303f2:	48 89 d1             	mov    %rdx,%rcx
ffffffff800303f5:	89 c2                	mov    %eax,%edx
ffffffff800303f7:	e8 31 5c ff ff       	call   ffffffff8002602d <ZydisStringAppendDecU>
ffffffff800303fc:	89 45 dc             	mov    %eax,-0x24(%rbp)
ffffffff800303ff:	8b 45 dc             	mov    -0x24(%rbp),%eax
ffffffff80030402:	85 c0                	test   %eax,%eax
ffffffff80030404:	0f 89 95 00 00 00    	jns    ffffffff8003049f <ZydisFormatterBasePrintIMM+0x3ef>
ffffffff8003040a:	8b 45 dc             	mov    -0x24(%rbp),%eax
ffffffff8003040d:	e9 93 00 00 00       	jmp    ffffffff800304a5 <ZydisFormatterBasePrintIMM+0x3f5>
ffffffff80030412:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80030416:	8b 40 28             	mov    0x28(%rax),%eax
ffffffff80030419:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
ffffffff8003041d:	89 c0                	mov    %eax,%eax
ffffffff8003041f:	48 69 c0 b0 00 00 00 	imul   $0xb0,%rax,%rax
ffffffff80030426:	48 01 d0             	add    %rdx,%rax
ffffffff80030429:	48 05 a8 00 00 00    	add    $0xa8,%rax
ffffffff8003042f:	48 8b 08             	mov    (%rax),%rcx
ffffffff80030432:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80030436:	8b 40 28             	mov    0x28(%rax),%eax
ffffffff80030439:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
ffffffff8003043d:	89 c0                	mov    %eax,%eax
ffffffff8003043f:	48 69 c0 b0 00 00 00 	imul   $0xb0,%rax,%rax
ffffffff80030446:	48 01 d0             	add    %rdx,%rax
ffffffff80030449:	48 83 c0 50          	add    $0x50,%rax
ffffffff8003044d:	4c 8b 08             	mov    (%rax),%r9
ffffffff80030450:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80030454:	0f b6 40 48          	movzbl 0x48(%rax),%eax
ffffffff80030458:	44 0f b6 c0          	movzbl %al,%r8d
ffffffff8003045c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80030460:	0f b6 40 49          	movzbl 0x49(%rax),%eax
ffffffff80030464:	0f b6 d0             	movzbl %al,%edx
ffffffff80030467:	0f b6 45 f7          	movzbl -0x9(%rbp),%eax
ffffffff8003046b:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
ffffffff8003046f:	48 8d 7e 10          	lea    0x10(%rsi),%rdi
ffffffff80030473:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
ffffffff80030477:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff8003047b:	51                   	push   %rcx
ffffffff8003047c:	89 d1                	mov    %edx,%ecx
ffffffff8003047e:	89 c2                	mov    %eax,%edx
ffffffff80030480:	e8 3a 5c ff ff       	call   ffffffff800260bf <ZydisStringAppendHexU>
ffffffff80030485:	48 83 c4 10          	add    $0x10,%rsp
ffffffff80030489:	89 45 e0             	mov    %eax,-0x20(%rbp)
ffffffff8003048c:	8b 45 e0             	mov    -0x20(%rbp),%eax
ffffffff8003048f:	85 c0                	test   %eax,%eax
ffffffff80030491:	79 0c                	jns    ffffffff8003049f <ZydisFormatterBasePrintIMM+0x3ef>
ffffffff80030493:	8b 45 e0             	mov    -0x20(%rbp),%eax
ffffffff80030496:	eb 0d                	jmp    ffffffff800304a5 <ZydisFormatterBasePrintIMM+0x3f5>
ffffffff80030498:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff8003049d:	eb 06                	jmp    ffffffff800304a5 <ZydisFormatterBasePrintIMM+0x3f5>
ffffffff8003049f:	90                   	nop
ffffffff800304a0:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff800304a5:	c9                   	leave  
ffffffff800304a6:	c3                   	ret    

ffffffff800304a7 <ZydisFormatterBasePrintSegment>:
ffffffff800304a7:	f3 0f 1e fa          	endbr64 
ffffffff800304ab:	55                   	push   %rbp
ffffffff800304ac:	48 89 e5             	mov    %rsp,%rbp
ffffffff800304af:	48 83 ec 40          	sub    $0x40,%rsp
ffffffff800304b3:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
ffffffff800304b7:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
ffffffff800304bb:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
ffffffff800304bf:	c6 45 ff 00          	movb   $0x0,-0x1(%rbp)
ffffffff800304c3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff800304c7:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff800304cb:	8b 40 2c             	mov    0x2c(%rax),%eax
ffffffff800304ce:	3d cb 00 00 00       	cmp    $0xcb,%eax
ffffffff800304d3:	0f 87 52 01 00 00    	ja     ffffffff8003062b <ZydisFormatterBasePrintSegment+0x184>
ffffffff800304d9:	3d ca 00 00 00       	cmp    $0xca,%eax
ffffffff800304de:	73 35                	jae    ffffffff80030515 <ZydisFormatterBasePrintSegment+0x6e>
ffffffff800304e0:	3d c9 00 00 00       	cmp    $0xc9,%eax
ffffffff800304e5:	0f 84 da 00 00 00    	je     ffffffff800305c5 <ZydisFormatterBasePrintSegment+0x11e>
ffffffff800304eb:	3d c9 00 00 00       	cmp    $0xc9,%eax
ffffffff800304f0:	0f 87 35 01 00 00    	ja     ffffffff8003062b <ZydisFormatterBasePrintSegment+0x184>
ffffffff800304f6:	3d c7 00 00 00       	cmp    $0xc7,%eax
ffffffff800304fb:	77 0c                	ja     ffffffff80030509 <ZydisFormatterBasePrintSegment+0x62>
ffffffff800304fd:	3d c6 00 00 00       	cmp    $0xc6,%eax
ffffffff80030502:	73 11                	jae    ffffffff80030515 <ZydisFormatterBasePrintSegment+0x6e>
ffffffff80030504:	e9 22 01 00 00       	jmp    ffffffff8003062b <ZydisFormatterBasePrintSegment+0x184>
ffffffff80030509:	3d c8 00 00 00       	cmp    $0xc8,%eax
ffffffff8003050e:	74 48                	je     ffffffff80030558 <ZydisFormatterBasePrintSegment+0xb1>
ffffffff80030510:	e9 16 01 00 00       	jmp    ffffffff8003062b <ZydisFormatterBasePrintSegment+0x184>
ffffffff80030515:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80030519:	4c 8b 80 00 02 00 00 	mov    0x200(%rax),%r8
ffffffff80030520:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80030524:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff80030528:	8b 48 2c             	mov    0x2c(%rax),%ecx
ffffffff8003052b:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
ffffffff8003052f:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
ffffffff80030533:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80030537:	48 89 c7             	mov    %rax,%rdi
ffffffff8003053a:	41 ff d0             	call   *%r8
ffffffff8003053d:	89 45 f0             	mov    %eax,-0x10(%rbp)
ffffffff80030540:	8b 45 f0             	mov    -0x10(%rbp),%eax
ffffffff80030543:	85 c0                	test   %eax,%eax
ffffffff80030545:	79 08                	jns    ffffffff8003054f <ZydisFormatterBasePrintSegment+0xa8>
ffffffff80030547:	8b 45 f0             	mov    -0x10(%rbp),%eax
ffffffff8003054a:	e9 48 01 00 00       	jmp    ffffffff80030697 <ZydisFormatterBasePrintSegment+0x1f0>
ffffffff8003054f:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
ffffffff80030553:	e9 da 00 00 00       	jmp    ffffffff80030632 <ZydisFormatterBasePrintSegment+0x18b>
ffffffff80030558:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8003055c:	0f b6 40 05          	movzbl 0x5(%rax),%eax
ffffffff80030560:	84 c0                	test   %al,%al
ffffffff80030562:	75 21                	jne    ffffffff80030585 <ZydisFormatterBasePrintSegment+0xde>
ffffffff80030564:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80030568:	48 8b 00             	mov    (%rax),%rax
ffffffff8003056b:	48 8b 50 20          	mov    0x20(%rax),%rdx
ffffffff8003056f:	48 b8 00 00 00 00 40 	movabs $0x4000000000,%rax
ffffffff80030576:	00 00 00 
ffffffff80030579:	48 21 d0             	and    %rdx,%rax
ffffffff8003057c:	48 85 c0             	test   %rax,%rax
ffffffff8003057f:	0f 84 a9 00 00 00    	je     ffffffff8003062e <ZydisFormatterBasePrintSegment+0x187>
ffffffff80030585:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80030589:	4c 8b 80 00 02 00 00 	mov    0x200(%rax),%r8
ffffffff80030590:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80030594:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff80030598:	8b 48 2c             	mov    0x2c(%rax),%ecx
ffffffff8003059b:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
ffffffff8003059f:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
ffffffff800305a3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff800305a7:	48 89 c7             	mov    %rax,%rdi
ffffffff800305aa:	41 ff d0             	call   *%r8
ffffffff800305ad:	89 45 f4             	mov    %eax,-0xc(%rbp)
ffffffff800305b0:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff800305b3:	85 c0                	test   %eax,%eax
ffffffff800305b5:	79 08                	jns    ffffffff800305bf <ZydisFormatterBasePrintSegment+0x118>
ffffffff800305b7:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff800305ba:	e9 d8 00 00 00       	jmp    ffffffff80030697 <ZydisFormatterBasePrintSegment+0x1f0>
ffffffff800305bf:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
ffffffff800305c3:	eb 69                	jmp    ffffffff8003062e <ZydisFormatterBasePrintSegment+0x187>
ffffffff800305c5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff800305c9:	0f b6 40 05          	movzbl 0x5(%rax),%eax
ffffffff800305cd:	84 c0                	test   %al,%al
ffffffff800305cf:	75 1d                	jne    ffffffff800305ee <ZydisFormatterBasePrintSegment+0x147>
ffffffff800305d1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff800305d5:	48 8b 00             	mov    (%rax),%rax
ffffffff800305d8:	48 8b 50 20          	mov    0x20(%rax),%rdx
ffffffff800305dc:	48 b8 00 00 00 00 80 	movabs $0x8000000000,%rax
ffffffff800305e3:	00 00 00 
ffffffff800305e6:	48 21 d0             	and    %rdx,%rax
ffffffff800305e9:	48 85 c0             	test   %rax,%rax
ffffffff800305ec:	74 43                	je     ffffffff80030631 <ZydisFormatterBasePrintSegment+0x18a>
ffffffff800305ee:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff800305f2:	4c 8b 80 00 02 00 00 	mov    0x200(%rax),%r8
ffffffff800305f9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff800305fd:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff80030601:	8b 48 2c             	mov    0x2c(%rax),%ecx
ffffffff80030604:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
ffffffff80030608:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
ffffffff8003060c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80030610:	48 89 c7             	mov    %rax,%rdi
ffffffff80030613:	41 ff d0             	call   *%r8
ffffffff80030616:	89 45 f8             	mov    %eax,-0x8(%rbp)
ffffffff80030619:	8b 45 f8             	mov    -0x8(%rbp),%eax
ffffffff8003061c:	85 c0                	test   %eax,%eax
ffffffff8003061e:	79 05                	jns    ffffffff80030625 <ZydisFormatterBasePrintSegment+0x17e>
ffffffff80030620:	8b 45 f8             	mov    -0x8(%rbp),%eax
ffffffff80030623:	eb 72                	jmp    ffffffff80030697 <ZydisFormatterBasePrintSegment+0x1f0>
ffffffff80030625:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
ffffffff80030629:	eb 06                	jmp    ffffffff80030631 <ZydisFormatterBasePrintSegment+0x18a>
ffffffff8003062b:	90                   	nop
ffffffff8003062c:	eb 04                	jmp    ffffffff80030632 <ZydisFormatterBasePrintSegment+0x18b>
ffffffff8003062e:	90                   	nop
ffffffff8003062f:	eb 01                	jmp    ffffffff80030632 <ZydisFormatterBasePrintSegment+0x18b>
ffffffff80030631:	90                   	nop
ffffffff80030632:	80 7d ff 00          	cmpb   $0x0,-0x1(%rbp)
ffffffff80030636:	74 59                	je     ffffffff80030691 <ZydisFormatterBasePrintSegment+0x1ea>
ffffffff80030638:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8003063c:	0f b6 00             	movzbl (%rax),%eax
ffffffff8003063f:	84 c0                	test   %al,%al
ffffffff80030641:	74 25                	je     ffffffff80030668 <ZydisFormatterBasePrintSegment+0x1c1>
ffffffff80030643:	48 8d 15 80 fc 00 00 	lea    0xfc80(%rip),%rdx        # ffffffff800402ca <TOK_DATA_DELIM_SEGMENT.lto_priv.1>
ffffffff8003064a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8003064e:	48 89 d6             	mov    %rdx,%rsi
ffffffff80030651:	48 89 c7             	mov    %rax,%rdi
ffffffff80030654:	e8 23 ed ff ff       	call   ffffffff8002f37c <ZydisFormatterBufferAppendPredefined.lto_priv.1>
ffffffff80030659:	89 45 e8             	mov    %eax,-0x18(%rbp)
ffffffff8003065c:	8b 45 e8             	mov    -0x18(%rbp),%eax
ffffffff8003065f:	85 c0                	test   %eax,%eax
ffffffff80030661:	79 2e                	jns    ffffffff80030691 <ZydisFormatterBasePrintSegment+0x1ea>
ffffffff80030663:	8b 45 e8             	mov    -0x18(%rbp),%eax
ffffffff80030666:	eb 2f                	jmp    ffffffff80030697 <ZydisFormatterBasePrintSegment+0x1f0>
ffffffff80030668:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8003066c:	48 83 c0 10          	add    $0x10,%rax
ffffffff80030670:	48 8d 15 79 98 07 00 	lea    0x79879(%rip),%rdx        # ffffffff800a9ef0 <STR_DELIM_SEGMENT.lto_priv.1>
ffffffff80030677:	48 89 d6             	mov    %rdx,%rsi
ffffffff8003067a:	48 89 c7             	mov    %rax,%rdi
ffffffff8003067d:	e8 33 e8 ff ff       	call   ffffffff8002eeb5 <ZydisStringAppendShort.lto_priv.1>
ffffffff80030682:	89 45 ec             	mov    %eax,-0x14(%rbp)
ffffffff80030685:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff80030688:	85 c0                	test   %eax,%eax
ffffffff8003068a:	79 05                	jns    ffffffff80030691 <ZydisFormatterBasePrintSegment+0x1ea>
ffffffff8003068c:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff8003068f:	eb 06                	jmp    ffffffff80030697 <ZydisFormatterBasePrintSegment+0x1f0>
ffffffff80030691:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff80030696:	90                   	nop
ffffffff80030697:	c9                   	leave  
ffffffff80030698:	c3                   	ret    

ffffffff80030699 <ZydisFormatterBasePrintPrefixes>:
ffffffff80030699:	f3 0f 1e fa          	endbr64 
ffffffff8003069d:	55                   	push   %rbp
ffffffff8003069e:	48 89 e5             	mov    %rsp,%rbp
ffffffff800306a1:	48 81 ec f0 00 00 00 	sub    $0xf0,%rsp
ffffffff800306a8:	48 89 bd 28 ff ff ff 	mov    %rdi,-0xd8(%rbp)
ffffffff800306af:	48 89 b5 20 ff ff ff 	mov    %rsi,-0xe0(%rbp)
ffffffff800306b6:	48 89 95 18 ff ff ff 	mov    %rdx,-0xe8(%rbp)
ffffffff800306bd:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
ffffffff800306c4:	0f b6 40 0a          	movzbl 0xa(%rax),%eax
ffffffff800306c8:	84 c0                	test   %al,%al
ffffffff800306ca:	0f 84 19 0b 00 00    	je     ffffffff800311e9 <ZydisFormatterBasePrintPrefixes+0xb50>
ffffffff800306d0:	c6 45 ff 00          	movb   $0x0,-0x1(%rbp)
ffffffff800306d4:	e9 ef 0a 00 00       	jmp    ffffffff800311c8 <ZydisFormatterBasePrintPrefixes+0xb2f>
ffffffff800306d9:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
ffffffff800306e0:	48 8b 00             	mov    (%rax),%rax
ffffffff800306e3:	0f b6 55 ff          	movzbl -0x1(%rbp),%edx
ffffffff800306e7:	48 63 d2             	movslq %edx,%rdx
ffffffff800306ea:	48 83 c2 0e          	add    $0xe,%rdx
ffffffff800306ee:	0f b6 44 d0 08       	movzbl 0x8(%rax,%rdx,8),%eax
ffffffff800306f3:	88 45 bb             	mov    %al,-0x45(%rbp)
ffffffff800306f6:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
ffffffff800306fd:	48 8b 00             	mov    (%rax),%rax
ffffffff80030700:	0f b6 55 ff          	movzbl -0x1(%rbp),%edx
ffffffff80030704:	48 63 d2             	movslq %edx,%rdx
ffffffff80030707:	48 83 c2 0e          	add    $0xe,%rdx
ffffffff8003070b:	8b 44 d0 04          	mov    0x4(%rax,%rdx,8),%eax
ffffffff8003070f:	83 f8 02             	cmp    $0x2,%eax
ffffffff80030712:	74 1b                	je     ffffffff8003072f <ZydisFormatterBasePrintPrefixes+0x96>
ffffffff80030714:	83 f8 02             	cmp    $0x2,%eax
ffffffff80030717:	0f 87 9c 0a 00 00    	ja     ffffffff800311b9 <ZydisFormatterBasePrintPrefixes+0xb20>
ffffffff8003071d:	85 c0                	test   %eax,%eax
ffffffff8003071f:	74 0e                	je     ffffffff8003072f <ZydisFormatterBasePrintPrefixes+0x96>
ffffffff80030721:	83 f8 01             	cmp    $0x1,%eax
ffffffff80030724:	0f 84 72 06 00 00    	je     ffffffff80030d9c <ZydisFormatterBasePrintPrefixes+0x703>
ffffffff8003072a:	e9 8a 0a 00 00       	jmp    ffffffff800311b9 <ZydisFormatterBasePrintPrefixes+0xb20>
ffffffff8003072f:	0f b6 45 bb          	movzbl -0x45(%rbp),%eax
ffffffff80030733:	25 f0 00 00 00       	and    $0xf0,%eax
ffffffff80030738:	83 f8 40             	cmp    $0x40,%eax
ffffffff8003073b:	0f 85 ba 00 00 00    	jne    ffffffff800307fb <ZydisFormatterBasePrintPrefixes+0x162>
ffffffff80030741:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
ffffffff80030748:	0f b6 00             	movzbl (%rax),%eax
ffffffff8003074b:	84 c0                	test   %al,%al
ffffffff8003074d:	74 4d                	je     ffffffff8003079c <ZydisFormatterBasePrintPrefixes+0x103>
ffffffff8003074f:	0f b6 45 bb          	movzbl -0x45(%rbp),%eax
ffffffff80030753:	83 e0 0f             	and    $0xf,%eax
ffffffff80030756:	48 98                	cltq   
ffffffff80030758:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
ffffffff8003075f:	00 
ffffffff80030760:	48 8d 05 79 9d 07 00 	lea    0x79d79(%rip),%rax        # ffffffff800aa4e0 <TOK_PREF_REX>
ffffffff80030767:	48 8b 14 02          	mov    (%rdx,%rax,1),%rdx
ffffffff8003076b:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
ffffffff80030772:	48 89 d6             	mov    %rdx,%rsi
ffffffff80030775:	48 89 c7             	mov    %rax,%rdi
ffffffff80030778:	e8 ff eb ff ff       	call   ffffffff8002f37c <ZydisFormatterBufferAppendPredefined.lto_priv.1>
ffffffff8003077d:	89 85 30 ff ff ff    	mov    %eax,-0xd0(%rbp)
ffffffff80030783:	8b 85 30 ff ff ff    	mov    -0xd0(%rbp),%eax
ffffffff80030789:	85 c0                	test   %eax,%eax
ffffffff8003078b:	0f 89 32 0a 00 00    	jns    ffffffff800311c3 <ZydisFormatterBasePrintPrefixes+0xb2a>
ffffffff80030791:	8b 85 30 ff ff ff    	mov    -0xd0(%rbp),%eax
ffffffff80030797:	e9 e0 0e 00 00       	jmp    ffffffff8003167c <ZydisFormatterBasePrintPrefixes+0xfe3>
ffffffff8003079c:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
ffffffff800307a3:	8b 40 34             	mov    0x34(%rax),%eax
ffffffff800307a6:	89 c6                	mov    %eax,%esi
ffffffff800307a8:	0f b6 45 bb          	movzbl -0x45(%rbp),%eax
ffffffff800307ac:	83 e0 0f             	and    $0xf,%eax
ffffffff800307af:	48 98                	cltq   
ffffffff800307b1:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
ffffffff800307b8:	00 
ffffffff800307b9:	48 8d 05 a0 9c 07 00 	lea    0x79ca0(%rip),%rax        # ffffffff800aa460 <STR_PREF_REX>
ffffffff800307c0:	48 8b 0c 02          	mov    (%rdx,%rax,1),%rcx
ffffffff800307c4:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
ffffffff800307cb:	48 83 c0 10          	add    $0x10,%rax
ffffffff800307cf:	89 f2                	mov    %esi,%edx
ffffffff800307d1:	48 89 ce             	mov    %rcx,%rsi
ffffffff800307d4:	48 89 c7             	mov    %rax,%rdi
ffffffff800307d7:	e8 93 e7 ff ff       	call   ffffffff8002ef6f <ZydisStringAppendShortCase.lto_priv.1>
ffffffff800307dc:	89 85 34 ff ff ff    	mov    %eax,-0xcc(%rbp)
ffffffff800307e2:	8b 85 34 ff ff ff    	mov    -0xcc(%rbp),%eax
ffffffff800307e8:	85 c0                	test   %eax,%eax
ffffffff800307ea:	0f 89 d3 09 00 00    	jns    ffffffff800311c3 <ZydisFormatterBasePrintPrefixes+0xb2a>
ffffffff800307f0:	8b 85 34 ff ff ff    	mov    -0xcc(%rbp),%eax
ffffffff800307f6:	e9 81 0e 00 00       	jmp    ffffffff8003167c <ZydisFormatterBasePrintPrefixes+0xfe3>
ffffffff800307fb:	0f b6 45 bb          	movzbl -0x45(%rbp),%eax
ffffffff800307ff:	3d f0 00 00 00       	cmp    $0xf0,%eax
ffffffff80030804:	74 6a                	je     ffffffff80030870 <ZydisFormatterBasePrintPrefixes+0x1d7>
ffffffff80030806:	3d f0 00 00 00       	cmp    $0xf0,%eax
ffffffff8003080b:	0f 8f 41 04 00 00    	jg     ffffffff80030c52 <ZydisFormatterBasePrintPrefixes+0x5b9>
ffffffff80030811:	83 f8 65             	cmp    $0x65,%eax
ffffffff80030814:	0f 84 aa 03 00 00    	je     ffffffff80030bc4 <ZydisFormatterBasePrintPrefixes+0x52b>
ffffffff8003081a:	83 f8 65             	cmp    $0x65,%eax
ffffffff8003081d:	0f 8f 2f 04 00 00    	jg     ffffffff80030c52 <ZydisFormatterBasePrintPrefixes+0x5b9>
ffffffff80030823:	83 f8 64             	cmp    $0x64,%eax
ffffffff80030826:	0f 84 0a 03 00 00    	je     ffffffff80030b36 <ZydisFormatterBasePrintPrefixes+0x49d>
ffffffff8003082c:	83 f8 64             	cmp    $0x64,%eax
ffffffff8003082f:	0f 8f 1d 04 00 00    	jg     ffffffff80030c52 <ZydisFormatterBasePrintPrefixes+0x5b9>
ffffffff80030835:	83 f8 3e             	cmp    $0x3e,%eax
ffffffff80030838:	0f 84 dc 01 00 00    	je     ffffffff80030a1a <ZydisFormatterBasePrintPrefixes+0x381>
ffffffff8003083e:	83 f8 3e             	cmp    $0x3e,%eax
ffffffff80030841:	0f 8f 0b 04 00 00    	jg     ffffffff80030c52 <ZydisFormatterBasePrintPrefixes+0x5b9>
ffffffff80030847:	83 f8 36             	cmp    $0x36,%eax
ffffffff8003084a:	0f 84 3c 01 00 00    	je     ffffffff8003098c <ZydisFormatterBasePrintPrefixes+0x2f3>
ffffffff80030850:	83 f8 36             	cmp    $0x36,%eax
ffffffff80030853:	0f 8f f9 03 00 00    	jg     ffffffff80030c52 <ZydisFormatterBasePrintPrefixes+0x5b9>
ffffffff80030859:	83 f8 26             	cmp    $0x26,%eax
ffffffff8003085c:	0f 84 46 02 00 00    	je     ffffffff80030aa8 <ZydisFormatterBasePrintPrefixes+0x40f>
ffffffff80030862:	83 f8 2e             	cmp    $0x2e,%eax
ffffffff80030865:	0f 84 93 00 00 00    	je     ffffffff800308fe <ZydisFormatterBasePrintPrefixes+0x265>
ffffffff8003086b:	e9 e2 03 00 00       	jmp    ffffffff80030c52 <ZydisFormatterBasePrintPrefixes+0x5b9>
ffffffff80030870:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
ffffffff80030877:	0f b6 00             	movzbl (%rax),%eax
ffffffff8003087a:	84 c0                	test   %al,%al
ffffffff8003087c:	74 38                	je     ffffffff800308b6 <ZydisFormatterBasePrintPrefixes+0x21d>
ffffffff8003087e:	48 8d 15 a3 fa 00 00 	lea    0xfaa3(%rip),%rdx        # ffffffff80040328 <TOK_DATA_PREF_LOCK.lto_priv.1>
ffffffff80030885:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
ffffffff8003088c:	48 89 d6             	mov    %rdx,%rsi
ffffffff8003088f:	48 89 c7             	mov    %rax,%rdi
ffffffff80030892:	e8 e5 ea ff ff       	call   ffffffff8002f37c <ZydisFormatterBufferAppendPredefined.lto_priv.1>
ffffffff80030897:	89 85 78 ff ff ff    	mov    %eax,-0x88(%rbp)
ffffffff8003089d:	8b 85 78 ff ff ff    	mov    -0x88(%rbp),%eax
ffffffff800308a3:	85 c0                	test   %eax,%eax
ffffffff800308a5:	0f 89 c1 04 00 00    	jns    ffffffff80030d6c <ZydisFormatterBasePrintPrefixes+0x6d3>
ffffffff800308ab:	8b 85 78 ff ff ff    	mov    -0x88(%rbp),%eax
ffffffff800308b1:	e9 c6 0d 00 00       	jmp    ffffffff8003167c <ZydisFormatterBasePrintPrefixes+0xfe3>
ffffffff800308b6:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
ffffffff800308bd:	8b 40 34             	mov    0x34(%rax),%eax
ffffffff800308c0:	89 c2                	mov    %eax,%edx
ffffffff800308c2:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
ffffffff800308c9:	48 83 c0 10          	add    $0x10,%rax
ffffffff800308cd:	48 8d 0d 3c 97 07 00 	lea    0x7973c(%rip),%rcx        # ffffffff800aa010 <STR_PREF_LOCK.lto_priv.1>
ffffffff800308d4:	48 89 ce             	mov    %rcx,%rsi
ffffffff800308d7:	48 89 c7             	mov    %rax,%rdi
ffffffff800308da:	e8 90 e6 ff ff       	call   ffffffff8002ef6f <ZydisStringAppendShortCase.lto_priv.1>
ffffffff800308df:	89 85 7c ff ff ff    	mov    %eax,-0x84(%rbp)
ffffffff800308e5:	8b 85 7c ff ff ff    	mov    -0x84(%rbp),%eax
ffffffff800308eb:	85 c0                	test   %eax,%eax
ffffffff800308ed:	0f 89 79 04 00 00    	jns    ffffffff80030d6c <ZydisFormatterBasePrintPrefixes+0x6d3>
ffffffff800308f3:	8b 85 7c ff ff ff    	mov    -0x84(%rbp),%eax
ffffffff800308f9:	e9 7e 0d 00 00       	jmp    ffffffff8003167c <ZydisFormatterBasePrintPrefixes+0xfe3>
ffffffff800308fe:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
ffffffff80030905:	0f b6 00             	movzbl (%rax),%eax
ffffffff80030908:	84 c0                	test   %al,%al
ffffffff8003090a:	74 38                	je     ffffffff80030944 <ZydisFormatterBasePrintPrefixes+0x2ab>
ffffffff8003090c:	48 8d 15 6d fb 00 00 	lea    0xfb6d(%rip),%rdx        # ffffffff80040480 <TOK_DATA_PREF_SEG_CS.lto_priv.1>
ffffffff80030913:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
ffffffff8003091a:	48 89 d6             	mov    %rdx,%rsi
ffffffff8003091d:	48 89 c7             	mov    %rax,%rdi
ffffffff80030920:	e8 57 ea ff ff       	call   ffffffff8002f37c <ZydisFormatterBufferAppendPredefined.lto_priv.1>
ffffffff80030925:	89 85 50 ff ff ff    	mov    %eax,-0xb0(%rbp)
ffffffff8003092b:	8b 85 50 ff ff ff    	mov    -0xb0(%rbp),%eax
ffffffff80030931:	85 c0                	test   %eax,%eax
ffffffff80030933:	0f 89 39 04 00 00    	jns    ffffffff80030d72 <ZydisFormatterBasePrintPrefixes+0x6d9>
ffffffff80030939:	8b 85 50 ff ff ff    	mov    -0xb0(%rbp),%eax
ffffffff8003093f:	e9 38 0d 00 00       	jmp    ffffffff8003167c <ZydisFormatterBasePrintPrefixes+0xfe3>
ffffffff80030944:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
ffffffff8003094b:	8b 40 34             	mov    0x34(%rax),%eax
ffffffff8003094e:	89 c2                	mov    %eax,%edx
ffffffff80030950:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
ffffffff80030957:	48 83 c0 10          	add    $0x10,%rax
ffffffff8003095b:	48 8d 0d 8e 98 07 00 	lea    0x7988e(%rip),%rcx        # ffffffff800aa1f0 <STR_PREF_SEG_CS.lto_priv.1>
ffffffff80030962:	48 89 ce             	mov    %rcx,%rsi
ffffffff80030965:	48 89 c7             	mov    %rax,%rdi
ffffffff80030968:	e8 02 e6 ff ff       	call   ffffffff8002ef6f <ZydisStringAppendShortCase.lto_priv.1>
ffffffff8003096d:	89 85 54 ff ff ff    	mov    %eax,-0xac(%rbp)
ffffffff80030973:	8b 85 54 ff ff ff    	mov    -0xac(%rbp),%eax
ffffffff80030979:	85 c0                	test   %eax,%eax
ffffffff8003097b:	0f 89 f1 03 00 00    	jns    ffffffff80030d72 <ZydisFormatterBasePrintPrefixes+0x6d9>
ffffffff80030981:	8b 85 54 ff ff ff    	mov    -0xac(%rbp),%eax
ffffffff80030987:	e9 f0 0c 00 00       	jmp    ffffffff8003167c <ZydisFormatterBasePrintPrefixes+0xfe3>
ffffffff8003098c:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
ffffffff80030993:	0f b6 00             	movzbl (%rax),%eax
ffffffff80030996:	84 c0                	test   %al,%al
ffffffff80030998:	74 38                	je     ffffffff800309d2 <ZydisFormatterBasePrintPrefixes+0x339>
ffffffff8003099a:	48 8d 15 2f fb 00 00 	lea    0xfb2f(%rip),%rdx        # ffffffff800404d0 <TOK_DATA_PREF_SEG_SS.lto_priv.1>
ffffffff800309a1:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
ffffffff800309a8:	48 89 d6             	mov    %rdx,%rsi
ffffffff800309ab:	48 89 c7             	mov    %rax,%rdi
ffffffff800309ae:	e8 c9 e9 ff ff       	call   ffffffff8002f37c <ZydisFormatterBufferAppendPredefined.lto_priv.1>
ffffffff800309b3:	89 85 58 ff ff ff    	mov    %eax,-0xa8(%rbp)
ffffffff800309b9:	8b 85 58 ff ff ff    	mov    -0xa8(%rbp),%eax
ffffffff800309bf:	85 c0                	test   %eax,%eax
ffffffff800309c1:	0f 89 b1 03 00 00    	jns    ffffffff80030d78 <ZydisFormatterBasePrintPrefixes+0x6df>
ffffffff800309c7:	8b 85 58 ff ff ff    	mov    -0xa8(%rbp),%eax
ffffffff800309cd:	e9 aa 0c 00 00       	jmp    ffffffff8003167c <ZydisFormatterBasePrintPrefixes+0xfe3>
ffffffff800309d2:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
ffffffff800309d9:	8b 40 34             	mov    0x34(%rax),%eax
ffffffff800309dc:	89 c2                	mov    %eax,%edx
ffffffff800309de:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
ffffffff800309e5:	48 83 c0 10          	add    $0x10,%rax
ffffffff800309e9:	48 8d 0d 78 98 07 00 	lea    0x79878(%rip),%rcx        # ffffffff800aa268 <STR_PREF_SEG_SS.lto_priv.1>
ffffffff800309f0:	48 89 ce             	mov    %rcx,%rsi
ffffffff800309f3:	48 89 c7             	mov    %rax,%rdi
ffffffff800309f6:	e8 74 e5 ff ff       	call   ffffffff8002ef6f <ZydisStringAppendShortCase.lto_priv.1>
ffffffff800309fb:	89 85 5c ff ff ff    	mov    %eax,-0xa4(%rbp)
ffffffff80030a01:	8b 85 5c ff ff ff    	mov    -0xa4(%rbp),%eax
ffffffff80030a07:	85 c0                	test   %eax,%eax
ffffffff80030a09:	0f 89 69 03 00 00    	jns    ffffffff80030d78 <ZydisFormatterBasePrintPrefixes+0x6df>
ffffffff80030a0f:	8b 85 5c ff ff ff    	mov    -0xa4(%rbp),%eax
ffffffff80030a15:	e9 62 0c 00 00       	jmp    ffffffff8003167c <ZydisFormatterBasePrintPrefixes+0xfe3>
ffffffff80030a1a:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
ffffffff80030a21:	0f b6 00             	movzbl (%rax),%eax
ffffffff80030a24:	84 c0                	test   %al,%al
ffffffff80030a26:	74 38                	je     ffffffff80030a60 <ZydisFormatterBasePrintPrefixes+0x3c7>
ffffffff80030a28:	48 8d 15 61 fa 00 00 	lea    0xfa61(%rip),%rdx        # ffffffff80040490 <TOK_DATA_PREF_SEG_DS.lto_priv.1>
ffffffff80030a2f:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
ffffffff80030a36:	48 89 d6             	mov    %rdx,%rsi
ffffffff80030a39:	48 89 c7             	mov    %rax,%rdi
ffffffff80030a3c:	e8 3b e9 ff ff       	call   ffffffff8002f37c <ZydisFormatterBufferAppendPredefined.lto_priv.1>
ffffffff80030a41:	89 85 60 ff ff ff    	mov    %eax,-0xa0(%rbp)
ffffffff80030a47:	8b 85 60 ff ff ff    	mov    -0xa0(%rbp),%eax
ffffffff80030a4d:	85 c0                	test   %eax,%eax
ffffffff80030a4f:	0f 89 29 03 00 00    	jns    ffffffff80030d7e <ZydisFormatterBasePrintPrefixes+0x6e5>
ffffffff80030a55:	8b 85 60 ff ff ff    	mov    -0xa0(%rbp),%eax
ffffffff80030a5b:	e9 1c 0c 00 00       	jmp    ffffffff8003167c <ZydisFormatterBasePrintPrefixes+0xfe3>
ffffffff80030a60:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
ffffffff80030a67:	8b 40 34             	mov    0x34(%rax),%eax
ffffffff80030a6a:	89 c2                	mov    %eax,%edx
ffffffff80030a6c:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
ffffffff80030a73:	48 83 c0 10          	add    $0x10,%rax
ffffffff80030a77:	48 8d 0d 8a 97 07 00 	lea    0x7978a(%rip),%rcx        # ffffffff800aa208 <STR_PREF_SEG_DS.lto_priv.1>
ffffffff80030a7e:	48 89 ce             	mov    %rcx,%rsi
ffffffff80030a81:	48 89 c7             	mov    %rax,%rdi
ffffffff80030a84:	e8 e6 e4 ff ff       	call   ffffffff8002ef6f <ZydisStringAppendShortCase.lto_priv.1>
ffffffff80030a89:	89 85 64 ff ff ff    	mov    %eax,-0x9c(%rbp)
ffffffff80030a8f:	8b 85 64 ff ff ff    	mov    -0x9c(%rbp),%eax
ffffffff80030a95:	85 c0                	test   %eax,%eax
ffffffff80030a97:	0f 89 e1 02 00 00    	jns    ffffffff80030d7e <ZydisFormatterBasePrintPrefixes+0x6e5>
ffffffff80030a9d:	8b 85 64 ff ff ff    	mov    -0x9c(%rbp),%eax
ffffffff80030aa3:	e9 d4 0b 00 00       	jmp    ffffffff8003167c <ZydisFormatterBasePrintPrefixes+0xfe3>
ffffffff80030aa8:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
ffffffff80030aaf:	0f b6 00             	movzbl (%rax),%eax
ffffffff80030ab2:	84 c0                	test   %al,%al
ffffffff80030ab4:	74 38                	je     ffffffff80030aee <ZydisFormatterBasePrintPrefixes+0x455>
ffffffff80030ab6:	48 8d 15 e3 f9 00 00 	lea    0xf9e3(%rip),%rdx        # ffffffff800404a0 <TOK_DATA_PREF_SEG_ES.lto_priv.1>
ffffffff80030abd:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
ffffffff80030ac4:	48 89 d6             	mov    %rdx,%rsi
ffffffff80030ac7:	48 89 c7             	mov    %rax,%rdi
ffffffff80030aca:	e8 ad e8 ff ff       	call   ffffffff8002f37c <ZydisFormatterBufferAppendPredefined.lto_priv.1>
ffffffff80030acf:	89 85 48 ff ff ff    	mov    %eax,-0xb8(%rbp)
ffffffff80030ad5:	8b 85 48 ff ff ff    	mov    -0xb8(%rbp),%eax
ffffffff80030adb:	85 c0                	test   %eax,%eax
ffffffff80030add:	0f 89 a1 02 00 00    	jns    ffffffff80030d84 <ZydisFormatterBasePrintPrefixes+0x6eb>
ffffffff80030ae3:	8b 85 48 ff ff ff    	mov    -0xb8(%rbp),%eax
ffffffff80030ae9:	e9 8e 0b 00 00       	jmp    ffffffff8003167c <ZydisFormatterBasePrintPrefixes+0xfe3>
ffffffff80030aee:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
ffffffff80030af5:	8b 40 34             	mov    0x34(%rax),%eax
ffffffff80030af8:	89 c2                	mov    %eax,%edx
ffffffff80030afa:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
ffffffff80030b01:	48 83 c0 10          	add    $0x10,%rax
ffffffff80030b05:	48 8d 0d 14 97 07 00 	lea    0x79714(%rip),%rcx        # ffffffff800aa220 <STR_PREF_SEG_ES.lto_priv.1>
ffffffff80030b0c:	48 89 ce             	mov    %rcx,%rsi
ffffffff80030b0f:	48 89 c7             	mov    %rax,%rdi
ffffffff80030b12:	e8 58 e4 ff ff       	call   ffffffff8002ef6f <ZydisStringAppendShortCase.lto_priv.1>
ffffffff80030b17:	89 85 4c ff ff ff    	mov    %eax,-0xb4(%rbp)
ffffffff80030b1d:	8b 85 4c ff ff ff    	mov    -0xb4(%rbp),%eax
ffffffff80030b23:	85 c0                	test   %eax,%eax
ffffffff80030b25:	0f 89 59 02 00 00    	jns    ffffffff80030d84 <ZydisFormatterBasePrintPrefixes+0x6eb>
ffffffff80030b2b:	8b 85 4c ff ff ff    	mov    -0xb4(%rbp),%eax
ffffffff80030b31:	e9 46 0b 00 00       	jmp    ffffffff8003167c <ZydisFormatterBasePrintPrefixes+0xfe3>
ffffffff80030b36:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
ffffffff80030b3d:	0f b6 00             	movzbl (%rax),%eax
ffffffff80030b40:	84 c0                	test   %al,%al
ffffffff80030b42:	74 38                	je     ffffffff80030b7c <ZydisFormatterBasePrintPrefixes+0x4e3>
ffffffff80030b44:	48 8d 15 65 f9 00 00 	lea    0xf965(%rip),%rdx        # ffffffff800404b0 <TOK_DATA_PREF_SEG_FS.lto_priv.1>
ffffffff80030b4b:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
ffffffff80030b52:	48 89 d6             	mov    %rdx,%rsi
ffffffff80030b55:	48 89 c7             	mov    %rax,%rdi
ffffffff80030b58:	e8 1f e8 ff ff       	call   ffffffff8002f37c <ZydisFormatterBufferAppendPredefined.lto_priv.1>
ffffffff80030b5d:	89 85 68 ff ff ff    	mov    %eax,-0x98(%rbp)
ffffffff80030b63:	8b 85 68 ff ff ff    	mov    -0x98(%rbp),%eax
ffffffff80030b69:	85 c0                	test   %eax,%eax
ffffffff80030b6b:	0f 89 19 02 00 00    	jns    ffffffff80030d8a <ZydisFormatterBasePrintPrefixes+0x6f1>
ffffffff80030b71:	8b 85 68 ff ff ff    	mov    -0x98(%rbp),%eax
ffffffff80030b77:	e9 00 0b 00 00       	jmp    ffffffff8003167c <ZydisFormatterBasePrintPrefixes+0xfe3>
ffffffff80030b7c:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
ffffffff80030b83:	8b 40 34             	mov    0x34(%rax),%eax
ffffffff80030b86:	89 c2                	mov    %eax,%edx
ffffffff80030b88:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
ffffffff80030b8f:	48 83 c0 10          	add    $0x10,%rax
ffffffff80030b93:	48 8d 0d 9e 96 07 00 	lea    0x7969e(%rip),%rcx        # ffffffff800aa238 <STR_PREF_SEG_FS.lto_priv.1>
ffffffff80030b9a:	48 89 ce             	mov    %rcx,%rsi
ffffffff80030b9d:	48 89 c7             	mov    %rax,%rdi
ffffffff80030ba0:	e8 ca e3 ff ff       	call   ffffffff8002ef6f <ZydisStringAppendShortCase.lto_priv.1>
ffffffff80030ba5:	89 85 6c ff ff ff    	mov    %eax,-0x94(%rbp)
ffffffff80030bab:	8b 85 6c ff ff ff    	mov    -0x94(%rbp),%eax
ffffffff80030bb1:	85 c0                	test   %eax,%eax
ffffffff80030bb3:	0f 89 d1 01 00 00    	jns    ffffffff80030d8a <ZydisFormatterBasePrintPrefixes+0x6f1>
ffffffff80030bb9:	8b 85 6c ff ff ff    	mov    -0x94(%rbp),%eax
ffffffff80030bbf:	e9 b8 0a 00 00       	jmp    ffffffff8003167c <ZydisFormatterBasePrintPrefixes+0xfe3>
ffffffff80030bc4:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
ffffffff80030bcb:	0f b6 00             	movzbl (%rax),%eax
ffffffff80030bce:	84 c0                	test   %al,%al
ffffffff80030bd0:	74 38                	je     ffffffff80030c0a <ZydisFormatterBasePrintPrefixes+0x571>
ffffffff80030bd2:	48 8d 15 e7 f8 00 00 	lea    0xf8e7(%rip),%rdx        # ffffffff800404c0 <TOK_DATA_PREF_SEG_GS.lto_priv.1>
ffffffff80030bd9:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
ffffffff80030be0:	48 89 d6             	mov    %rdx,%rsi
ffffffff80030be3:	48 89 c7             	mov    %rax,%rdi
ffffffff80030be6:	e8 91 e7 ff ff       	call   ffffffff8002f37c <ZydisFormatterBufferAppendPredefined.lto_priv.1>
ffffffff80030beb:	89 85 70 ff ff ff    	mov    %eax,-0x90(%rbp)
ffffffff80030bf1:	8b 85 70 ff ff ff    	mov    -0x90(%rbp),%eax
ffffffff80030bf7:	85 c0                	test   %eax,%eax
ffffffff80030bf9:	0f 89 91 01 00 00    	jns    ffffffff80030d90 <ZydisFormatterBasePrintPrefixes+0x6f7>
ffffffff80030bff:	8b 85 70 ff ff ff    	mov    -0x90(%rbp),%eax
ffffffff80030c05:	e9 72 0a 00 00       	jmp    ffffffff8003167c <ZydisFormatterBasePrintPrefixes+0xfe3>
ffffffff80030c0a:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
ffffffff80030c11:	8b 40 34             	mov    0x34(%rax),%eax
ffffffff80030c14:	89 c2                	mov    %eax,%edx
ffffffff80030c16:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
ffffffff80030c1d:	48 83 c0 10          	add    $0x10,%rax
ffffffff80030c21:	48 8d 0d 28 96 07 00 	lea    0x79628(%rip),%rcx        # ffffffff800aa250 <STR_PREF_SEG_GS.lto_priv.1>
ffffffff80030c28:	48 89 ce             	mov    %rcx,%rsi
ffffffff80030c2b:	48 89 c7             	mov    %rax,%rdi
ffffffff80030c2e:	e8 3c e3 ff ff       	call   ffffffff8002ef6f <ZydisStringAppendShortCase.lto_priv.1>
ffffffff80030c33:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%rbp)
ffffffff80030c39:	8b 85 74 ff ff ff    	mov    -0x8c(%rbp),%eax
ffffffff80030c3f:	85 c0                	test   %eax,%eax
ffffffff80030c41:	0f 89 49 01 00 00    	jns    ffffffff80030d90 <ZydisFormatterBasePrintPrefixes+0x6f7>
ffffffff80030c47:	8b 85 74 ff ff ff    	mov    -0x8c(%rbp),%eax
ffffffff80030c4d:	e9 2a 0a 00 00       	jmp    ffffffff8003167c <ZydisFormatterBasePrintPrefixes+0xfe3>
ffffffff80030c52:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
ffffffff80030c59:	0f b6 00             	movzbl (%rax),%eax
ffffffff80030c5c:	84 c0                	test   %al,%al
ffffffff80030c5e:	74 2f                	je     ffffffff80030c8f <ZydisFormatterBasePrintPrefixes+0x5f6>
ffffffff80030c60:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
ffffffff80030c67:	be 05 00 00 00       	mov    $0x5,%esi
ffffffff80030c6c:	48 89 c7             	mov    %rax,%rdi
ffffffff80030c6f:	e8 95 4e 00 00       	call   ffffffff80035b09 <ZydisFormatterBufferAppend>
ffffffff80030c74:	89 85 44 ff ff ff    	mov    %eax,-0xbc(%rbp)
ffffffff80030c7a:	8b 85 44 ff ff ff    	mov    -0xbc(%rbp),%eax
ffffffff80030c80:	85 c0                	test   %eax,%eax
ffffffff80030c82:	79 0b                	jns    ffffffff80030c8f <ZydisFormatterBasePrintPrefixes+0x5f6>
ffffffff80030c84:	8b 85 44 ff ff ff    	mov    -0xbc(%rbp),%eax
ffffffff80030c8a:	e9 ed 09 00 00       	jmp    ffffffff8003167c <ZydisFormatterBasePrintPrefixes+0xfe3>
ffffffff80030c8f:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
ffffffff80030c96:	0f b6 40 48          	movzbl 0x48(%rax),%eax
ffffffff80030c9a:	0f b6 c8             	movzbl %al,%ecx
ffffffff80030c9d:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
ffffffff80030ca4:	0f b6 40 49          	movzbl 0x49(%rax),%eax
ffffffff80030ca8:	0f b6 d0             	movzbl %al,%edx
ffffffff80030cab:	0f b6 45 bb          	movzbl -0x45(%rbp),%eax
ffffffff80030caf:	48 8b b5 20 ff ff ff 	mov    -0xe0(%rbp),%rsi
ffffffff80030cb6:	48 8d 7e 10          	lea    0x10(%rsi),%rdi
ffffffff80030cba:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80030cbe:	6a 00                	push   $0x0
ffffffff80030cc0:	41 b9 00 00 00 00    	mov    $0x0,%r9d
ffffffff80030cc6:	41 89 c8             	mov    %ecx,%r8d
ffffffff80030cc9:	89 d1                	mov    %edx,%ecx
ffffffff80030ccb:	ba 00 00 00 00       	mov    $0x0,%edx
ffffffff80030cd0:	48 89 c6             	mov    %rax,%rsi
ffffffff80030cd3:	e8 e7 53 ff ff       	call   ffffffff800260bf <ZydisStringAppendHexU>
ffffffff80030cd8:	48 83 c4 10          	add    $0x10,%rsp
ffffffff80030cdc:	89 85 40 ff ff ff    	mov    %eax,-0xc0(%rbp)
ffffffff80030ce2:	8b 85 40 ff ff ff    	mov    -0xc0(%rbp),%eax
ffffffff80030ce8:	85 c0                	test   %eax,%eax
ffffffff80030cea:	79 0b                	jns    ffffffff80030cf7 <ZydisFormatterBasePrintPrefixes+0x65e>
ffffffff80030cec:	8b 85 40 ff ff ff    	mov    -0xc0(%rbp),%eax
ffffffff80030cf2:	e9 85 09 00 00       	jmp    ffffffff8003167c <ZydisFormatterBasePrintPrefixes+0xfe3>
ffffffff80030cf7:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
ffffffff80030cfe:	0f b6 00             	movzbl (%rax),%eax
ffffffff80030d01:	84 c0                	test   %al,%al
ffffffff80030d03:	74 2f                	je     ffffffff80030d34 <ZydisFormatterBasePrintPrefixes+0x69b>
ffffffff80030d05:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
ffffffff80030d0c:	be 01 00 00 00       	mov    $0x1,%esi
ffffffff80030d11:	48 89 c7             	mov    %rax,%rdi
ffffffff80030d14:	e8 f0 4d 00 00       	call   ffffffff80035b09 <ZydisFormatterBufferAppend>
ffffffff80030d19:	89 85 3c ff ff ff    	mov    %eax,-0xc4(%rbp)
ffffffff80030d1f:	8b 85 3c ff ff ff    	mov    -0xc4(%rbp),%eax
ffffffff80030d25:	85 c0                	test   %eax,%eax
ffffffff80030d27:	79 0b                	jns    ffffffff80030d34 <ZydisFormatterBasePrintPrefixes+0x69b>
ffffffff80030d29:	8b 85 3c ff ff ff    	mov    -0xc4(%rbp),%eax
ffffffff80030d2f:	e9 48 09 00 00       	jmp    ffffffff8003167c <ZydisFormatterBasePrintPrefixes+0xfe3>
ffffffff80030d34:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
ffffffff80030d3b:	48 83 c0 10          	add    $0x10,%rax
ffffffff80030d3f:	48 8d 15 0a 97 07 00 	lea    0x7970a(%rip),%rdx        # ffffffff800aa450 <STR_WHITESPACE.lto_priv.1>
ffffffff80030d46:	48 89 d6             	mov    %rdx,%rsi
ffffffff80030d49:	48 89 c7             	mov    %rax,%rdi
ffffffff80030d4c:	e8 64 e1 ff ff       	call   ffffffff8002eeb5 <ZydisStringAppendShort.lto_priv.1>
ffffffff80030d51:	89 85 38 ff ff ff    	mov    %eax,-0xc8(%rbp)
ffffffff80030d57:	8b 85 38 ff ff ff    	mov    -0xc8(%rbp),%eax
ffffffff80030d5d:	85 c0                	test   %eax,%eax
ffffffff80030d5f:	79 35                	jns    ffffffff80030d96 <ZydisFormatterBasePrintPrefixes+0x6fd>
ffffffff80030d61:	8b 85 38 ff ff ff    	mov    -0xc8(%rbp),%eax
ffffffff80030d67:	e9 10 09 00 00       	jmp    ffffffff8003167c <ZydisFormatterBasePrintPrefixes+0xfe3>
ffffffff80030d6c:	90                   	nop
ffffffff80030d6d:	e9 51 04 00 00       	jmp    ffffffff800311c3 <ZydisFormatterBasePrintPrefixes+0xb2a>
ffffffff80030d72:	90                   	nop
ffffffff80030d73:	e9 4b 04 00 00       	jmp    ffffffff800311c3 <ZydisFormatterBasePrintPrefixes+0xb2a>
ffffffff80030d78:	90                   	nop
ffffffff80030d79:	e9 45 04 00 00       	jmp    ffffffff800311c3 <ZydisFormatterBasePrintPrefixes+0xb2a>
ffffffff80030d7e:	90                   	nop
ffffffff80030d7f:	e9 3f 04 00 00       	jmp    ffffffff800311c3 <ZydisFormatterBasePrintPrefixes+0xb2a>
ffffffff80030d84:	90                   	nop
ffffffff80030d85:	e9 39 04 00 00       	jmp    ffffffff800311c3 <ZydisFormatterBasePrintPrefixes+0xb2a>
ffffffff80030d8a:	90                   	nop
ffffffff80030d8b:	e9 33 04 00 00       	jmp    ffffffff800311c3 <ZydisFormatterBasePrintPrefixes+0xb2a>
ffffffff80030d90:	90                   	nop
ffffffff80030d91:	e9 2d 04 00 00       	jmp    ffffffff800311c3 <ZydisFormatterBasePrintPrefixes+0xb2a>
ffffffff80030d96:	90                   	nop
ffffffff80030d97:	e9 27 04 00 00       	jmp    ffffffff800311c3 <ZydisFormatterBasePrintPrefixes+0xb2a>
ffffffff80030d9c:	0f b6 45 bb          	movzbl -0x45(%rbp),%eax
ffffffff80030da0:	3d f3 00 00 00       	cmp    $0xf3,%eax
ffffffff80030da5:	0f 84 56 02 00 00    	je     ffffffff80031001 <ZydisFormatterBasePrintPrefixes+0x968>
ffffffff80030dab:	3d f3 00 00 00       	cmp    $0xf3,%eax
ffffffff80030db0:	0f 8f f7 03 00 00    	jg     ffffffff800311ad <ZydisFormatterBasePrintPrefixes+0xb14>
ffffffff80030db6:	3d f0 00 00 00       	cmp    $0xf0,%eax
ffffffff80030dbb:	74 10                	je     ffffffff80030dcd <ZydisFormatterBasePrintPrefixes+0x734>
ffffffff80030dbd:	3d f2 00 00 00       	cmp    $0xf2,%eax
ffffffff80030dc2:	0f 84 81 00 00 00    	je     ffffffff80030e49 <ZydisFormatterBasePrintPrefixes+0x7b0>
ffffffff80030dc8:	e9 e0 03 00 00       	jmp    ffffffff800311ad <ZydisFormatterBasePrintPrefixes+0xb14>
ffffffff80030dcd:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
ffffffff80030dd4:	0f b6 00             	movzbl (%rax),%eax
ffffffff80030dd7:	84 c0                	test   %al,%al
ffffffff80030dd9:	74 2f                	je     ffffffff80030e0a <ZydisFormatterBasePrintPrefixes+0x771>
ffffffff80030ddb:	48 8d 15 46 f5 00 00 	lea    0xf546(%rip),%rdx        # ffffffff80040328 <TOK_DATA_PREF_LOCK.lto_priv.1>
ffffffff80030de2:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
ffffffff80030de9:	48 89 d6             	mov    %rdx,%rsi
ffffffff80030dec:	48 89 c7             	mov    %rax,%rdi
ffffffff80030def:	e8 88 e5 ff ff       	call   ffffffff8002f37c <ZydisFormatterBufferAppendPredefined.lto_priv.1>
ffffffff80030df4:	89 45 80             	mov    %eax,-0x80(%rbp)
ffffffff80030df7:	8b 45 80             	mov    -0x80(%rbp),%eax
ffffffff80030dfa:	85 c0                	test   %eax,%eax
ffffffff80030dfc:	0f 89 ae 03 00 00    	jns    ffffffff800311b0 <ZydisFormatterBasePrintPrefixes+0xb17>
ffffffff80030e02:	8b 45 80             	mov    -0x80(%rbp),%eax
ffffffff80030e05:	e9 72 08 00 00       	jmp    ffffffff8003167c <ZydisFormatterBasePrintPrefixes+0xfe3>
ffffffff80030e0a:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
ffffffff80030e11:	8b 40 34             	mov    0x34(%rax),%eax
ffffffff80030e14:	89 c2                	mov    %eax,%edx
ffffffff80030e16:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
ffffffff80030e1d:	48 83 c0 10          	add    $0x10,%rax
ffffffff80030e21:	48 8d 0d e8 91 07 00 	lea    0x791e8(%rip),%rcx        # ffffffff800aa010 <STR_PREF_LOCK.lto_priv.1>
ffffffff80030e28:	48 89 ce             	mov    %rcx,%rsi
ffffffff80030e2b:	48 89 c7             	mov    %rax,%rdi
ffffffff80030e2e:	e8 3c e1 ff ff       	call   ffffffff8002ef6f <ZydisStringAppendShortCase.lto_priv.1>
ffffffff80030e33:	89 45 84             	mov    %eax,-0x7c(%rbp)
ffffffff80030e36:	8b 45 84             	mov    -0x7c(%rbp),%eax
ffffffff80030e39:	85 c0                	test   %eax,%eax
ffffffff80030e3b:	0f 89 6f 03 00 00    	jns    ffffffff800311b0 <ZydisFormatterBasePrintPrefixes+0xb17>
ffffffff80030e41:	8b 45 84             	mov    -0x7c(%rbp),%eax
ffffffff80030e44:	e9 33 08 00 00       	jmp    ffffffff8003167c <ZydisFormatterBasePrintPrefixes+0xfe3>
ffffffff80030e49:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
ffffffff80030e50:	48 8b 00             	mov    (%rax),%rax
ffffffff80030e53:	48 8b 50 20          	mov    0x20(%rax),%rdx
ffffffff80030e57:	48 b8 00 00 00 00 01 	movabs $0x100000000,%rax
ffffffff80030e5e:	00 00 00 
ffffffff80030e61:	48 21 d0             	and    %rdx,%rax
ffffffff80030e64:	48 85 c0             	test   %rax,%rax
ffffffff80030e67:	74 74                	je     ffffffff80030edd <ZydisFormatterBasePrintPrefixes+0x844>
ffffffff80030e69:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
ffffffff80030e70:	0f b6 00             	movzbl (%rax),%eax
ffffffff80030e73:	84 c0                	test   %al,%al
ffffffff80030e75:	74 2b                	je     ffffffff80030ea2 <ZydisFormatterBasePrintPrefixes+0x809>
ffffffff80030e77:	48 8d 15 62 f6 00 00 	lea    0xf662(%rip),%rdx        # ffffffff800404e0 <TOK_DATA_PREF_XACQUIRE.lto_priv.1>
ffffffff80030e7e:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
ffffffff80030e85:	48 89 d6             	mov    %rdx,%rsi
ffffffff80030e88:	48 89 c7             	mov    %rax,%rdi
ffffffff80030e8b:	e8 ec e4 ff ff       	call   ffffffff8002f37c <ZydisFormatterBufferAppendPredefined.lto_priv.1>
ffffffff80030e90:	89 45 98             	mov    %eax,-0x68(%rbp)
ffffffff80030e93:	8b 45 98             	mov    -0x68(%rbp),%eax
ffffffff80030e96:	85 c0                	test   %eax,%eax
ffffffff80030e98:	79 43                	jns    ffffffff80030edd <ZydisFormatterBasePrintPrefixes+0x844>
ffffffff80030e9a:	8b 45 98             	mov    -0x68(%rbp),%eax
ffffffff80030e9d:	e9 da 07 00 00       	jmp    ffffffff8003167c <ZydisFormatterBasePrintPrefixes+0xfe3>
ffffffff80030ea2:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
ffffffff80030ea9:	8b 40 34             	mov    0x34(%rax),%eax
ffffffff80030eac:	89 c2                	mov    %eax,%edx
ffffffff80030eae:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
ffffffff80030eb5:	48 83 c0 10          	add    $0x10,%rax
ffffffff80030eb9:	48 8d 0d c0 93 07 00 	lea    0x793c0(%rip),%rcx        # ffffffff800aa280 <STR_PREF_XACQUIRE.lto_priv.1>
ffffffff80030ec0:	48 89 ce             	mov    %rcx,%rsi
ffffffff80030ec3:	48 89 c7             	mov    %rax,%rdi
ffffffff80030ec6:	e8 a4 e0 ff ff       	call   ffffffff8002ef6f <ZydisStringAppendShortCase.lto_priv.1>
ffffffff80030ecb:	89 45 9c             	mov    %eax,-0x64(%rbp)
ffffffff80030ece:	8b 45 9c             	mov    -0x64(%rbp),%eax
ffffffff80030ed1:	85 c0                	test   %eax,%eax
ffffffff80030ed3:	79 08                	jns    ffffffff80030edd <ZydisFormatterBasePrintPrefixes+0x844>
ffffffff80030ed5:	8b 45 9c             	mov    -0x64(%rbp),%eax
ffffffff80030ed8:	e9 9f 07 00 00       	jmp    ffffffff8003167c <ZydisFormatterBasePrintPrefixes+0xfe3>
ffffffff80030edd:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
ffffffff80030ee4:	48 8b 00             	mov    (%rax),%rax
ffffffff80030ee7:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff80030eeb:	25 00 00 00 40       	and    $0x40000000,%eax
ffffffff80030ef0:	48 85 c0             	test   %rax,%rax
ffffffff80030ef3:	74 74                	je     ffffffff80030f69 <ZydisFormatterBasePrintPrefixes+0x8d0>
ffffffff80030ef5:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
ffffffff80030efc:	0f b6 00             	movzbl (%rax),%eax
ffffffff80030eff:	84 c0                	test   %al,%al
ffffffff80030f01:	74 2b                	je     ffffffff80030f2e <ZydisFormatterBasePrintPrefixes+0x895>
ffffffff80030f03:	48 8d 15 4e f4 00 00 	lea    0xf44e(%rip),%rdx        # ffffffff80040358 <TOK_DATA_PREF_REPNE.lto_priv.1>
ffffffff80030f0a:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
ffffffff80030f11:	48 89 d6             	mov    %rdx,%rsi
ffffffff80030f14:	48 89 c7             	mov    %rax,%rdi
ffffffff80030f17:	e8 60 e4 ff ff       	call   ffffffff8002f37c <ZydisFormatterBufferAppendPredefined.lto_priv.1>
ffffffff80030f1c:	89 45 90             	mov    %eax,-0x70(%rbp)
ffffffff80030f1f:	8b 45 90             	mov    -0x70(%rbp),%eax
ffffffff80030f22:	85 c0                	test   %eax,%eax
ffffffff80030f24:	79 43                	jns    ffffffff80030f69 <ZydisFormatterBasePrintPrefixes+0x8d0>
ffffffff80030f26:	8b 45 90             	mov    -0x70(%rbp),%eax
ffffffff80030f29:	e9 4e 07 00 00       	jmp    ffffffff8003167c <ZydisFormatterBasePrintPrefixes+0xfe3>
ffffffff80030f2e:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
ffffffff80030f35:	8b 40 34             	mov    0x34(%rax),%eax
ffffffff80030f38:	89 c2                	mov    %eax,%edx
ffffffff80030f3a:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
ffffffff80030f41:	48 83 c0 10          	add    $0x10,%rax
ffffffff80030f45:	48 8d 0d 0c 91 07 00 	lea    0x7910c(%rip),%rcx        # ffffffff800aa058 <STR_PREF_REPNE.lto_priv.1>
ffffffff80030f4c:	48 89 ce             	mov    %rcx,%rsi
ffffffff80030f4f:	48 89 c7             	mov    %rax,%rdi
ffffffff80030f52:	e8 18 e0 ff ff       	call   ffffffff8002ef6f <ZydisStringAppendShortCase.lto_priv.1>
ffffffff80030f57:	89 45 94             	mov    %eax,-0x6c(%rbp)
ffffffff80030f5a:	8b 45 94             	mov    -0x6c(%rbp),%eax
ffffffff80030f5d:	85 c0                	test   %eax,%eax
ffffffff80030f5f:	79 08                	jns    ffffffff80030f69 <ZydisFormatterBasePrintPrefixes+0x8d0>
ffffffff80030f61:	8b 45 94             	mov    -0x6c(%rbp),%eax
ffffffff80030f64:	e9 13 07 00 00       	jmp    ffffffff8003167c <ZydisFormatterBasePrintPrefixes+0xfe3>
ffffffff80030f69:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
ffffffff80030f70:	48 8b 00             	mov    (%rax),%rax
ffffffff80030f73:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff80030f77:	25 00 00 00 80       	and    $0x80000000,%eax
ffffffff80030f7c:	48 85 c0             	test   %rax,%rax
ffffffff80030f7f:	0f 84 2e 02 00 00    	je     ffffffff800311b3 <ZydisFormatterBasePrintPrefixes+0xb1a>
ffffffff80030f85:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
ffffffff80030f8c:	0f b6 00             	movzbl (%rax),%eax
ffffffff80030f8f:	84 c0                	test   %al,%al
ffffffff80030f91:	74 2f                	je     ffffffff80030fc2 <ZydisFormatterBasePrintPrefixes+0x929>
ffffffff80030f93:	48 8d 15 7e f3 00 00 	lea    0xf37e(%rip),%rdx        # ffffffff80040318 <TOK_DATA_PREF_BND.lto_priv.1>
ffffffff80030f9a:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
ffffffff80030fa1:	48 89 d6             	mov    %rdx,%rsi
ffffffff80030fa4:	48 89 c7             	mov    %rax,%rdi
ffffffff80030fa7:	e8 d0 e3 ff ff       	call   ffffffff8002f37c <ZydisFormatterBufferAppendPredefined.lto_priv.1>
ffffffff80030fac:	89 45 88             	mov    %eax,-0x78(%rbp)
ffffffff80030faf:	8b 45 88             	mov    -0x78(%rbp),%eax
ffffffff80030fb2:	85 c0                	test   %eax,%eax
ffffffff80030fb4:	0f 89 f9 01 00 00    	jns    ffffffff800311b3 <ZydisFormatterBasePrintPrefixes+0xb1a>
ffffffff80030fba:	8b 45 88             	mov    -0x78(%rbp),%eax
ffffffff80030fbd:	e9 ba 06 00 00       	jmp    ffffffff8003167c <ZydisFormatterBasePrintPrefixes+0xfe3>
ffffffff80030fc2:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
ffffffff80030fc9:	8b 40 34             	mov    0x34(%rax),%eax
ffffffff80030fcc:	89 c2                	mov    %eax,%edx
ffffffff80030fce:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
ffffffff80030fd5:	48 83 c0 10          	add    $0x10,%rax
ffffffff80030fd9:	48 8d 0d 18 90 07 00 	lea    0x79018(%rip),%rcx        # ffffffff800a9ff8 <STR_PREF_BND.lto_priv.1>
ffffffff80030fe0:	48 89 ce             	mov    %rcx,%rsi
ffffffff80030fe3:	48 89 c7             	mov    %rax,%rdi
ffffffff80030fe6:	e8 84 df ff ff       	call   ffffffff8002ef6f <ZydisStringAppendShortCase.lto_priv.1>
ffffffff80030feb:	89 45 8c             	mov    %eax,-0x74(%rbp)
ffffffff80030fee:	8b 45 8c             	mov    -0x74(%rbp),%eax
ffffffff80030ff1:	85 c0                	test   %eax,%eax
ffffffff80030ff3:	0f 89 ba 01 00 00    	jns    ffffffff800311b3 <ZydisFormatterBasePrintPrefixes+0xb1a>
ffffffff80030ff9:	8b 45 8c             	mov    -0x74(%rbp),%eax
ffffffff80030ffc:	e9 7b 06 00 00       	jmp    ffffffff8003167c <ZydisFormatterBasePrintPrefixes+0xfe3>
ffffffff80031001:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
ffffffff80031008:	48 8b 00             	mov    (%rax),%rax
ffffffff8003100b:	48 8b 50 20          	mov    0x20(%rax),%rdx
ffffffff8003100f:	48 b8 00 00 00 00 02 	movabs $0x200000000,%rax
ffffffff80031016:	00 00 00 
ffffffff80031019:	48 21 d0             	and    %rdx,%rax
ffffffff8003101c:	48 85 c0             	test   %rax,%rax
ffffffff8003101f:	74 74                	je     ffffffff80031095 <ZydisFormatterBasePrintPrefixes+0x9fc>
ffffffff80031021:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
ffffffff80031028:	0f b6 00             	movzbl (%rax),%eax
ffffffff8003102b:	84 c0                	test   %al,%al
ffffffff8003102d:	74 2b                	je     ffffffff8003105a <ZydisFormatterBasePrintPrefixes+0x9c1>
ffffffff8003102f:	48 8d 15 ca f4 00 00 	lea    0xf4ca(%rip),%rdx        # ffffffff80040500 <TOK_DATA_PREF_XRELEASE.lto_priv.1>
ffffffff80031036:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
ffffffff8003103d:	48 89 d6             	mov    %rdx,%rsi
ffffffff80031040:	48 89 c7             	mov    %rax,%rdi
ffffffff80031043:	e8 34 e3 ff ff       	call   ffffffff8002f37c <ZydisFormatterBufferAppendPredefined.lto_priv.1>
ffffffff80031048:	89 45 b0             	mov    %eax,-0x50(%rbp)
ffffffff8003104b:	8b 45 b0             	mov    -0x50(%rbp),%eax
ffffffff8003104e:	85 c0                	test   %eax,%eax
ffffffff80031050:	79 43                	jns    ffffffff80031095 <ZydisFormatterBasePrintPrefixes+0x9fc>
ffffffff80031052:	8b 45 b0             	mov    -0x50(%rbp),%eax
ffffffff80031055:	e9 22 06 00 00       	jmp    ffffffff8003167c <ZydisFormatterBasePrintPrefixes+0xfe3>
ffffffff8003105a:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
ffffffff80031061:	8b 40 34             	mov    0x34(%rax),%eax
ffffffff80031064:	89 c2                	mov    %eax,%edx
ffffffff80031066:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
ffffffff8003106d:	48 83 c0 10          	add    $0x10,%rax
ffffffff80031071:	48 8d 0d 20 92 07 00 	lea    0x79220(%rip),%rcx        # ffffffff800aa298 <STR_PREF_XRELEASE.lto_priv.1>
ffffffff80031078:	48 89 ce             	mov    %rcx,%rsi
ffffffff8003107b:	48 89 c7             	mov    %rax,%rdi
ffffffff8003107e:	e8 ec de ff ff       	call   ffffffff8002ef6f <ZydisStringAppendShortCase.lto_priv.1>
ffffffff80031083:	89 45 b4             	mov    %eax,-0x4c(%rbp)
ffffffff80031086:	8b 45 b4             	mov    -0x4c(%rbp),%eax
ffffffff80031089:	85 c0                	test   %eax,%eax
ffffffff8003108b:	79 08                	jns    ffffffff80031095 <ZydisFormatterBasePrintPrefixes+0x9fc>
ffffffff8003108d:	8b 45 b4             	mov    -0x4c(%rbp),%eax
ffffffff80031090:	e9 e7 05 00 00       	jmp    ffffffff8003167c <ZydisFormatterBasePrintPrefixes+0xfe3>
ffffffff80031095:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
ffffffff8003109c:	48 8b 00             	mov    (%rax),%rax
ffffffff8003109f:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff800310a3:	25 00 00 00 10       	and    $0x10000000,%eax
ffffffff800310a8:	48 85 c0             	test   %rax,%rax
ffffffff800310ab:	74 74                	je     ffffffff80031121 <ZydisFormatterBasePrintPrefixes+0xa88>
ffffffff800310ad:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
ffffffff800310b4:	0f b6 00             	movzbl (%rax),%eax
ffffffff800310b7:	84 c0                	test   %al,%al
ffffffff800310b9:	74 2b                	je     ffffffff800310e6 <ZydisFormatterBasePrintPrefixes+0xa4d>
ffffffff800310bb:	48 8d 15 76 f2 00 00 	lea    0xf276(%rip),%rdx        # ffffffff80040338 <TOK_DATA_PREF_REP.lto_priv.1>
ffffffff800310c2:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
ffffffff800310c9:	48 89 d6             	mov    %rdx,%rsi
ffffffff800310cc:	48 89 c7             	mov    %rax,%rdi
ffffffff800310cf:	e8 a8 e2 ff ff       	call   ffffffff8002f37c <ZydisFormatterBufferAppendPredefined.lto_priv.1>
ffffffff800310d4:	89 45 a8             	mov    %eax,-0x58(%rbp)
ffffffff800310d7:	8b 45 a8             	mov    -0x58(%rbp),%eax
ffffffff800310da:	85 c0                	test   %eax,%eax
ffffffff800310dc:	79 43                	jns    ffffffff80031121 <ZydisFormatterBasePrintPrefixes+0xa88>
ffffffff800310de:	8b 45 a8             	mov    -0x58(%rbp),%eax
ffffffff800310e1:	e9 96 05 00 00       	jmp    ffffffff8003167c <ZydisFormatterBasePrintPrefixes+0xfe3>
ffffffff800310e6:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
ffffffff800310ed:	8b 40 34             	mov    0x34(%rax),%eax
ffffffff800310f0:	89 c2                	mov    %eax,%edx
ffffffff800310f2:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
ffffffff800310f9:	48 83 c0 10          	add    $0x10,%rax
ffffffff800310fd:	48 8d 0d 24 8f 07 00 	lea    0x78f24(%rip),%rcx        # ffffffff800aa028 <STR_PREF_REP.lto_priv.1>
ffffffff80031104:	48 89 ce             	mov    %rcx,%rsi
ffffffff80031107:	48 89 c7             	mov    %rax,%rdi
ffffffff8003110a:	e8 60 de ff ff       	call   ffffffff8002ef6f <ZydisStringAppendShortCase.lto_priv.1>
ffffffff8003110f:	89 45 ac             	mov    %eax,-0x54(%rbp)
ffffffff80031112:	8b 45 ac             	mov    -0x54(%rbp),%eax
ffffffff80031115:	85 c0                	test   %eax,%eax
ffffffff80031117:	79 08                	jns    ffffffff80031121 <ZydisFormatterBasePrintPrefixes+0xa88>
ffffffff80031119:	8b 45 ac             	mov    -0x54(%rbp),%eax
ffffffff8003111c:	e9 5b 05 00 00       	jmp    ffffffff8003167c <ZydisFormatterBasePrintPrefixes+0xfe3>
ffffffff80031121:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
ffffffff80031128:	48 8b 00             	mov    (%rax),%rax
ffffffff8003112b:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff8003112f:	25 00 00 00 20       	and    $0x20000000,%eax
ffffffff80031134:	48 85 c0             	test   %rax,%rax
ffffffff80031137:	74 7d                	je     ffffffff800311b6 <ZydisFormatterBasePrintPrefixes+0xb1d>
ffffffff80031139:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
ffffffff80031140:	0f b6 00             	movzbl (%rax),%eax
ffffffff80031143:	84 c0                	test   %al,%al
ffffffff80031145:	74 2b                	je     ffffffff80031172 <ZydisFormatterBasePrintPrefixes+0xad9>
ffffffff80031147:	48 8d 15 fa f1 00 00 	lea    0xf1fa(%rip),%rdx        # ffffffff80040348 <TOK_DATA_PREF_REPE.lto_priv.1>
ffffffff8003114e:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
ffffffff80031155:	48 89 d6             	mov    %rdx,%rsi
ffffffff80031158:	48 89 c7             	mov    %rax,%rdi
ffffffff8003115b:	e8 1c e2 ff ff       	call   ffffffff8002f37c <ZydisFormatterBufferAppendPredefined.lto_priv.1>
ffffffff80031160:	89 45 a0             	mov    %eax,-0x60(%rbp)
ffffffff80031163:	8b 45 a0             	mov    -0x60(%rbp),%eax
ffffffff80031166:	85 c0                	test   %eax,%eax
ffffffff80031168:	79 4c                	jns    ffffffff800311b6 <ZydisFormatterBasePrintPrefixes+0xb1d>
ffffffff8003116a:	8b 45 a0             	mov    -0x60(%rbp),%eax
ffffffff8003116d:	e9 0a 05 00 00       	jmp    ffffffff8003167c <ZydisFormatterBasePrintPrefixes+0xfe3>
ffffffff80031172:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
ffffffff80031179:	8b 40 34             	mov    0x34(%rax),%eax
ffffffff8003117c:	89 c2                	mov    %eax,%edx
ffffffff8003117e:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
ffffffff80031185:	48 83 c0 10          	add    $0x10,%rax
ffffffff80031189:	48 8d 0d b0 8e 07 00 	lea    0x78eb0(%rip),%rcx        # ffffffff800aa040 <STR_PREF_REPE.lto_priv.1>
ffffffff80031190:	48 89 ce             	mov    %rcx,%rsi
ffffffff80031193:	48 89 c7             	mov    %rax,%rdi
ffffffff80031196:	e8 d4 dd ff ff       	call   ffffffff8002ef6f <ZydisStringAppendShortCase.lto_priv.1>
ffffffff8003119b:	89 45 a4             	mov    %eax,-0x5c(%rbp)
ffffffff8003119e:	8b 45 a4             	mov    -0x5c(%rbp),%eax
ffffffff800311a1:	85 c0                	test   %eax,%eax
ffffffff800311a3:	79 11                	jns    ffffffff800311b6 <ZydisFormatterBasePrintPrefixes+0xb1d>
ffffffff800311a5:	8b 45 a4             	mov    -0x5c(%rbp),%eax
ffffffff800311a8:	e9 cf 04 00 00       	jmp    ffffffff8003167c <ZydisFormatterBasePrintPrefixes+0xfe3>
ffffffff800311ad:	90                   	nop
ffffffff800311ae:	eb 14                	jmp    ffffffff800311c4 <ZydisFormatterBasePrintPrefixes+0xb2b>
ffffffff800311b0:	90                   	nop
ffffffff800311b1:	eb 11                	jmp    ffffffff800311c4 <ZydisFormatterBasePrintPrefixes+0xb2b>
ffffffff800311b3:	90                   	nop
ffffffff800311b4:	eb 0e                	jmp    ffffffff800311c4 <ZydisFormatterBasePrintPrefixes+0xb2b>
ffffffff800311b6:	90                   	nop
ffffffff800311b7:	eb 0b                	jmp    ffffffff800311c4 <ZydisFormatterBasePrintPrefixes+0xb2b>
ffffffff800311b9:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff800311be:	e9 b9 04 00 00       	jmp    ffffffff8003167c <ZydisFormatterBasePrintPrefixes+0xfe3>
ffffffff800311c3:	90                   	nop
ffffffff800311c4:	80 45 ff 01          	addb   $0x1,-0x1(%rbp)
ffffffff800311c8:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
ffffffff800311cf:	48 8b 00             	mov    (%rax),%rax
ffffffff800311d2:	0f b6 40 70          	movzbl 0x70(%rax),%eax
ffffffff800311d6:	38 45 ff             	cmp    %al,-0x1(%rbp)
ffffffff800311d9:	0f 82 fa f4 ff ff    	jb     ffffffff800306d9 <ZydisFormatterBasePrintPrefixes+0x40>
ffffffff800311df:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff800311e4:	e9 93 04 00 00       	jmp    ffffffff8003167c <ZydisFormatterBasePrintPrefixes+0xfe3>
ffffffff800311e9:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
ffffffff800311f0:	48 8b 00             	mov    (%rax),%rax
ffffffff800311f3:	48 8b 50 20          	mov    0x20(%rax),%rdx
ffffffff800311f7:	48 b8 00 00 00 00 01 	movabs $0x100000000,%rax
ffffffff800311fe:	00 00 00 
ffffffff80031201:	48 21 d0             	and    %rdx,%rax
ffffffff80031204:	48 85 c0             	test   %rax,%rax
ffffffff80031207:	74 74                	je     ffffffff8003127d <ZydisFormatterBasePrintPrefixes+0xbe4>
ffffffff80031209:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
ffffffff80031210:	0f b6 00             	movzbl (%rax),%eax
ffffffff80031213:	84 c0                	test   %al,%al
ffffffff80031215:	74 2b                	je     ffffffff80031242 <ZydisFormatterBasePrintPrefixes+0xba9>
ffffffff80031217:	48 8d 15 c2 f2 00 00 	lea    0xf2c2(%rip),%rdx        # ffffffff800404e0 <TOK_DATA_PREF_XACQUIRE.lto_priv.1>
ffffffff8003121e:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
ffffffff80031225:	48 89 d6             	mov    %rdx,%rsi
ffffffff80031228:	48 89 c7             	mov    %rax,%rdi
ffffffff8003122b:	e8 4c e1 ff ff       	call   ffffffff8002f37c <ZydisFormatterBufferAppendPredefined.lto_priv.1>
ffffffff80031230:	89 45 f4             	mov    %eax,-0xc(%rbp)
ffffffff80031233:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff80031236:	85 c0                	test   %eax,%eax
ffffffff80031238:	79 43                	jns    ffffffff8003127d <ZydisFormatterBasePrintPrefixes+0xbe4>
ffffffff8003123a:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff8003123d:	e9 3a 04 00 00       	jmp    ffffffff8003167c <ZydisFormatterBasePrintPrefixes+0xfe3>
ffffffff80031242:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
ffffffff80031249:	8b 40 34             	mov    0x34(%rax),%eax
ffffffff8003124c:	89 c2                	mov    %eax,%edx
ffffffff8003124e:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
ffffffff80031255:	48 83 c0 10          	add    $0x10,%rax
ffffffff80031259:	48 8d 0d 20 90 07 00 	lea    0x79020(%rip),%rcx        # ffffffff800aa280 <STR_PREF_XACQUIRE.lto_priv.1>
ffffffff80031260:	48 89 ce             	mov    %rcx,%rsi
ffffffff80031263:	48 89 c7             	mov    %rax,%rdi
ffffffff80031266:	e8 04 dd ff ff       	call   ffffffff8002ef6f <ZydisStringAppendShortCase.lto_priv.1>
ffffffff8003126b:	89 45 f8             	mov    %eax,-0x8(%rbp)
ffffffff8003126e:	8b 45 f8             	mov    -0x8(%rbp),%eax
ffffffff80031271:	85 c0                	test   %eax,%eax
ffffffff80031273:	79 08                	jns    ffffffff8003127d <ZydisFormatterBasePrintPrefixes+0xbe4>
ffffffff80031275:	8b 45 f8             	mov    -0x8(%rbp),%eax
ffffffff80031278:	e9 ff 03 00 00       	jmp    ffffffff8003167c <ZydisFormatterBasePrintPrefixes+0xfe3>
ffffffff8003127d:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
ffffffff80031284:	48 8b 00             	mov    (%rax),%rax
ffffffff80031287:	48 8b 50 20          	mov    0x20(%rax),%rdx
ffffffff8003128b:	48 b8 00 00 00 00 02 	movabs $0x200000000,%rax
ffffffff80031292:	00 00 00 
ffffffff80031295:	48 21 d0             	and    %rdx,%rax
ffffffff80031298:	48 85 c0             	test   %rax,%rax
ffffffff8003129b:	74 74                	je     ffffffff80031311 <ZydisFormatterBasePrintPrefixes+0xc78>
ffffffff8003129d:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
ffffffff800312a4:	0f b6 00             	movzbl (%rax),%eax
ffffffff800312a7:	84 c0                	test   %al,%al
ffffffff800312a9:	74 2b                	je     ffffffff800312d6 <ZydisFormatterBasePrintPrefixes+0xc3d>
ffffffff800312ab:	48 8d 15 4e f2 00 00 	lea    0xf24e(%rip),%rdx        # ffffffff80040500 <TOK_DATA_PREF_XRELEASE.lto_priv.1>
ffffffff800312b2:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
ffffffff800312b9:	48 89 d6             	mov    %rdx,%rsi
ffffffff800312bc:	48 89 c7             	mov    %rax,%rdi
ffffffff800312bf:	e8 b8 e0 ff ff       	call   ffffffff8002f37c <ZydisFormatterBufferAppendPredefined.lto_priv.1>
ffffffff800312c4:	89 45 ec             	mov    %eax,-0x14(%rbp)
ffffffff800312c7:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff800312ca:	85 c0                	test   %eax,%eax
ffffffff800312cc:	79 43                	jns    ffffffff80031311 <ZydisFormatterBasePrintPrefixes+0xc78>
ffffffff800312ce:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff800312d1:	e9 a6 03 00 00       	jmp    ffffffff8003167c <ZydisFormatterBasePrintPrefixes+0xfe3>
ffffffff800312d6:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
ffffffff800312dd:	8b 40 34             	mov    0x34(%rax),%eax
ffffffff800312e0:	89 c2                	mov    %eax,%edx
ffffffff800312e2:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
ffffffff800312e9:	48 83 c0 10          	add    $0x10,%rax
ffffffff800312ed:	48 8d 0d a4 8f 07 00 	lea    0x78fa4(%rip),%rcx        # ffffffff800aa298 <STR_PREF_XRELEASE.lto_priv.1>
ffffffff800312f4:	48 89 ce             	mov    %rcx,%rsi
ffffffff800312f7:	48 89 c7             	mov    %rax,%rdi
ffffffff800312fa:	e8 70 dc ff ff       	call   ffffffff8002ef6f <ZydisStringAppendShortCase.lto_priv.1>
ffffffff800312ff:	89 45 f0             	mov    %eax,-0x10(%rbp)
ffffffff80031302:	8b 45 f0             	mov    -0x10(%rbp),%eax
ffffffff80031305:	85 c0                	test   %eax,%eax
ffffffff80031307:	79 08                	jns    ffffffff80031311 <ZydisFormatterBasePrintPrefixes+0xc78>
ffffffff80031309:	8b 45 f0             	mov    -0x10(%rbp),%eax
ffffffff8003130c:	e9 6b 03 00 00       	jmp    ffffffff8003167c <ZydisFormatterBasePrintPrefixes+0xfe3>
ffffffff80031311:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
ffffffff80031318:	48 8b 00             	mov    (%rax),%rax
ffffffff8003131b:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff8003131f:	25 00 00 00 08       	and    $0x8000000,%eax
ffffffff80031324:	48 85 c0             	test   %rax,%rax
ffffffff80031327:	74 74                	je     ffffffff8003139d <ZydisFormatterBasePrintPrefixes+0xd04>
ffffffff80031329:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
ffffffff80031330:	0f b6 00             	movzbl (%rax),%eax
ffffffff80031333:	84 c0                	test   %al,%al
ffffffff80031335:	74 2b                	je     ffffffff80031362 <ZydisFormatterBasePrintPrefixes+0xcc9>
ffffffff80031337:	48 8d 15 ea ef 00 00 	lea    0xefea(%rip),%rdx        # ffffffff80040328 <TOK_DATA_PREF_LOCK.lto_priv.1>
ffffffff8003133e:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
ffffffff80031345:	48 89 d6             	mov    %rdx,%rsi
ffffffff80031348:	48 89 c7             	mov    %rax,%rdi
ffffffff8003134b:	e8 2c e0 ff ff       	call   ffffffff8002f37c <ZydisFormatterBufferAppendPredefined.lto_priv.1>
ffffffff80031350:	89 45 e4             	mov    %eax,-0x1c(%rbp)
ffffffff80031353:	8b 45 e4             	mov    -0x1c(%rbp),%eax
ffffffff80031356:	85 c0                	test   %eax,%eax
ffffffff80031358:	79 43                	jns    ffffffff8003139d <ZydisFormatterBasePrintPrefixes+0xd04>
ffffffff8003135a:	8b 45 e4             	mov    -0x1c(%rbp),%eax
ffffffff8003135d:	e9 1a 03 00 00       	jmp    ffffffff8003167c <ZydisFormatterBasePrintPrefixes+0xfe3>
ffffffff80031362:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
ffffffff80031369:	8b 40 34             	mov    0x34(%rax),%eax
ffffffff8003136c:	89 c2                	mov    %eax,%edx
ffffffff8003136e:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
ffffffff80031375:	48 83 c0 10          	add    $0x10,%rax
ffffffff80031379:	48 8d 0d 90 8c 07 00 	lea    0x78c90(%rip),%rcx        # ffffffff800aa010 <STR_PREF_LOCK.lto_priv.1>
ffffffff80031380:	48 89 ce             	mov    %rcx,%rsi
ffffffff80031383:	48 89 c7             	mov    %rax,%rdi
ffffffff80031386:	e8 e4 db ff ff       	call   ffffffff8002ef6f <ZydisStringAppendShortCase.lto_priv.1>
ffffffff8003138b:	89 45 e8             	mov    %eax,-0x18(%rbp)
ffffffff8003138e:	8b 45 e8             	mov    -0x18(%rbp),%eax
ffffffff80031391:	85 c0                	test   %eax,%eax
ffffffff80031393:	79 08                	jns    ffffffff8003139d <ZydisFormatterBasePrintPrefixes+0xd04>
ffffffff80031395:	8b 45 e8             	mov    -0x18(%rbp),%eax
ffffffff80031398:	e9 df 02 00 00       	jmp    ffffffff8003167c <ZydisFormatterBasePrintPrefixes+0xfe3>
ffffffff8003139d:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
ffffffff800313a4:	48 8b 00             	mov    (%rax),%rax
ffffffff800313a7:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff800313ab:	25 00 00 00 80       	and    $0x80000000,%eax
ffffffff800313b0:	48 85 c0             	test   %rax,%rax
ffffffff800313b3:	74 74                	je     ffffffff80031429 <ZydisFormatterBasePrintPrefixes+0xd90>
ffffffff800313b5:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
ffffffff800313bc:	0f b6 00             	movzbl (%rax),%eax
ffffffff800313bf:	84 c0                	test   %al,%al
ffffffff800313c1:	74 2b                	je     ffffffff800313ee <ZydisFormatterBasePrintPrefixes+0xd55>
ffffffff800313c3:	48 8d 15 4e ef 00 00 	lea    0xef4e(%rip),%rdx        # ffffffff80040318 <TOK_DATA_PREF_BND.lto_priv.1>
ffffffff800313ca:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
ffffffff800313d1:	48 89 d6             	mov    %rdx,%rsi
ffffffff800313d4:	48 89 c7             	mov    %rax,%rdi
ffffffff800313d7:	e8 a0 df ff ff       	call   ffffffff8002f37c <ZydisFormatterBufferAppendPredefined.lto_priv.1>
ffffffff800313dc:	89 45 dc             	mov    %eax,-0x24(%rbp)
ffffffff800313df:	8b 45 dc             	mov    -0x24(%rbp),%eax
ffffffff800313e2:	85 c0                	test   %eax,%eax
ffffffff800313e4:	79 43                	jns    ffffffff80031429 <ZydisFormatterBasePrintPrefixes+0xd90>
ffffffff800313e6:	8b 45 dc             	mov    -0x24(%rbp),%eax
ffffffff800313e9:	e9 8e 02 00 00       	jmp    ffffffff8003167c <ZydisFormatterBasePrintPrefixes+0xfe3>
ffffffff800313ee:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
ffffffff800313f5:	8b 40 34             	mov    0x34(%rax),%eax
ffffffff800313f8:	89 c2                	mov    %eax,%edx
ffffffff800313fa:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
ffffffff80031401:	48 83 c0 10          	add    $0x10,%rax
ffffffff80031405:	48 8d 0d ec 8b 07 00 	lea    0x78bec(%rip),%rcx        # ffffffff800a9ff8 <STR_PREF_BND.lto_priv.1>
ffffffff8003140c:	48 89 ce             	mov    %rcx,%rsi
ffffffff8003140f:	48 89 c7             	mov    %rax,%rdi
ffffffff80031412:	e8 58 db ff ff       	call   ffffffff8002ef6f <ZydisStringAppendShortCase.lto_priv.1>
ffffffff80031417:	89 45 e0             	mov    %eax,-0x20(%rbp)
ffffffff8003141a:	8b 45 e0             	mov    -0x20(%rbp),%eax
ffffffff8003141d:	85 c0                	test   %eax,%eax
ffffffff8003141f:	79 08                	jns    ffffffff80031429 <ZydisFormatterBasePrintPrefixes+0xd90>
ffffffff80031421:	8b 45 e0             	mov    -0x20(%rbp),%eax
ffffffff80031424:	e9 53 02 00 00       	jmp    ffffffff8003167c <ZydisFormatterBasePrintPrefixes+0xfe3>
ffffffff80031429:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
ffffffff80031430:	48 8b 00             	mov    (%rax),%rax
ffffffff80031433:	48 8b 50 20          	mov    0x20(%rax),%rdx
ffffffff80031437:	48 b8 00 00 00 00 10 	movabs $0x1000000000,%rax
ffffffff8003143e:	00 00 00 
ffffffff80031441:	48 21 d0             	and    %rdx,%rax
ffffffff80031444:	48 85 c0             	test   %rax,%rax
ffffffff80031447:	74 74                	je     ffffffff800314bd <ZydisFormatterBasePrintPrefixes+0xe24>
ffffffff80031449:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
ffffffff80031450:	0f b6 00             	movzbl (%rax),%eax
ffffffff80031453:	84 c0                	test   %al,%al
ffffffff80031455:	74 2b                	je     ffffffff80031482 <ZydisFormatterBasePrintPrefixes+0xde9>
ffffffff80031457:	48 8d 15 c2 f0 00 00 	lea    0xf0c2(%rip),%rdx        # ffffffff80040520 <TOK_DATA_PREF_NOTRACK.lto_priv.1>
ffffffff8003145e:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
ffffffff80031465:	48 89 d6             	mov    %rdx,%rsi
ffffffff80031468:	48 89 c7             	mov    %rax,%rdi
ffffffff8003146b:	e8 0c df ff ff       	call   ffffffff8002f37c <ZydisFormatterBufferAppendPredefined.lto_priv.1>
ffffffff80031470:	89 45 d4             	mov    %eax,-0x2c(%rbp)
ffffffff80031473:	8b 45 d4             	mov    -0x2c(%rbp),%eax
ffffffff80031476:	85 c0                	test   %eax,%eax
ffffffff80031478:	79 43                	jns    ffffffff800314bd <ZydisFormatterBasePrintPrefixes+0xe24>
ffffffff8003147a:	8b 45 d4             	mov    -0x2c(%rbp),%eax
ffffffff8003147d:	e9 fa 01 00 00       	jmp    ffffffff8003167c <ZydisFormatterBasePrintPrefixes+0xfe3>
ffffffff80031482:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
ffffffff80031489:	8b 40 34             	mov    0x34(%rax),%eax
ffffffff8003148c:	89 c2                	mov    %eax,%edx
ffffffff8003148e:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
ffffffff80031495:	48 83 c0 10          	add    $0x10,%rax
ffffffff80031499:	48 8d 0d 10 8e 07 00 	lea    0x78e10(%rip),%rcx        # ffffffff800aa2b0 <STR_PREF_NOTRACK.lto_priv.1>
ffffffff800314a0:	48 89 ce             	mov    %rcx,%rsi
ffffffff800314a3:	48 89 c7             	mov    %rax,%rdi
ffffffff800314a6:	e8 c4 da ff ff       	call   ffffffff8002ef6f <ZydisStringAppendShortCase.lto_priv.1>
ffffffff800314ab:	89 45 d8             	mov    %eax,-0x28(%rbp)
ffffffff800314ae:	8b 45 d8             	mov    -0x28(%rbp),%eax
ffffffff800314b1:	85 c0                	test   %eax,%eax
ffffffff800314b3:	79 08                	jns    ffffffff800314bd <ZydisFormatterBasePrintPrefixes+0xe24>
ffffffff800314b5:	8b 45 d8             	mov    -0x28(%rbp),%eax
ffffffff800314b8:	e9 bf 01 00 00       	jmp    ffffffff8003167c <ZydisFormatterBasePrintPrefixes+0xfe3>
ffffffff800314bd:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
ffffffff800314c4:	48 8b 00             	mov    (%rax),%rax
ffffffff800314c7:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff800314cb:	25 00 00 00 10       	and    $0x10000000,%eax
ffffffff800314d0:	48 85 c0             	test   %rax,%rax
ffffffff800314d3:	74 7e                	je     ffffffff80031553 <ZydisFormatterBasePrintPrefixes+0xeba>
ffffffff800314d5:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
ffffffff800314dc:	0f b6 00             	movzbl (%rax),%eax
ffffffff800314df:	84 c0                	test   %al,%al
ffffffff800314e1:	74 2b                	je     ffffffff8003150e <ZydisFormatterBasePrintPrefixes+0xe75>
ffffffff800314e3:	48 8d 15 4e ee 00 00 	lea    0xee4e(%rip),%rdx        # ffffffff80040338 <TOK_DATA_PREF_REP.lto_priv.1>
ffffffff800314ea:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
ffffffff800314f1:	48 89 d6             	mov    %rdx,%rsi
ffffffff800314f4:	48 89 c7             	mov    %rax,%rdi
ffffffff800314f7:	e8 80 de ff ff       	call   ffffffff8002f37c <ZydisFormatterBufferAppendPredefined.lto_priv.1>
ffffffff800314fc:	89 45 bc             	mov    %eax,-0x44(%rbp)
ffffffff800314ff:	8b 45 bc             	mov    -0x44(%rbp),%eax
ffffffff80031502:	85 c0                	test   %eax,%eax
ffffffff80031504:	79 43                	jns    ffffffff80031549 <ZydisFormatterBasePrintPrefixes+0xeb0>
ffffffff80031506:	8b 45 bc             	mov    -0x44(%rbp),%eax
ffffffff80031509:	e9 6e 01 00 00       	jmp    ffffffff8003167c <ZydisFormatterBasePrintPrefixes+0xfe3>
ffffffff8003150e:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
ffffffff80031515:	8b 40 34             	mov    0x34(%rax),%eax
ffffffff80031518:	89 c2                	mov    %eax,%edx
ffffffff8003151a:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
ffffffff80031521:	48 83 c0 10          	add    $0x10,%rax
ffffffff80031525:	48 8d 0d fc 8a 07 00 	lea    0x78afc(%rip),%rcx        # ffffffff800aa028 <STR_PREF_REP.lto_priv.1>
ffffffff8003152c:	48 89 ce             	mov    %rcx,%rsi
ffffffff8003152f:	48 89 c7             	mov    %rax,%rdi
ffffffff80031532:	e8 38 da ff ff       	call   ffffffff8002ef6f <ZydisStringAppendShortCase.lto_priv.1>
ffffffff80031537:	89 45 c0             	mov    %eax,-0x40(%rbp)
ffffffff8003153a:	8b 45 c0             	mov    -0x40(%rbp),%eax
ffffffff8003153d:	85 c0                	test   %eax,%eax
ffffffff8003153f:	79 08                	jns    ffffffff80031549 <ZydisFormatterBasePrintPrefixes+0xeb0>
ffffffff80031541:	8b 45 c0             	mov    -0x40(%rbp),%eax
ffffffff80031544:	e9 33 01 00 00       	jmp    ffffffff8003167c <ZydisFormatterBasePrintPrefixes+0xfe3>
ffffffff80031549:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff8003154e:	e9 29 01 00 00       	jmp    ffffffff8003167c <ZydisFormatterBasePrintPrefixes+0xfe3>
ffffffff80031553:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
ffffffff8003155a:	48 8b 00             	mov    (%rax),%rax
ffffffff8003155d:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff80031561:	25 00 00 00 20       	and    $0x20000000,%eax
ffffffff80031566:	48 85 c0             	test   %rax,%rax
ffffffff80031569:	74 7e                	je     ffffffff800315e9 <ZydisFormatterBasePrintPrefixes+0xf50>
ffffffff8003156b:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
ffffffff80031572:	0f b6 00             	movzbl (%rax),%eax
ffffffff80031575:	84 c0                	test   %al,%al
ffffffff80031577:	74 2b                	je     ffffffff800315a4 <ZydisFormatterBasePrintPrefixes+0xf0b>
ffffffff80031579:	48 8d 15 c8 ed 00 00 	lea    0xedc8(%rip),%rdx        # ffffffff80040348 <TOK_DATA_PREF_REPE.lto_priv.1>
ffffffff80031580:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
ffffffff80031587:	48 89 d6             	mov    %rdx,%rsi
ffffffff8003158a:	48 89 c7             	mov    %rax,%rdi
ffffffff8003158d:	e8 ea dd ff ff       	call   ffffffff8002f37c <ZydisFormatterBufferAppendPredefined.lto_priv.1>
ffffffff80031592:	89 45 c4             	mov    %eax,-0x3c(%rbp)
ffffffff80031595:	8b 45 c4             	mov    -0x3c(%rbp),%eax
ffffffff80031598:	85 c0                	test   %eax,%eax
ffffffff8003159a:	79 43                	jns    ffffffff800315df <ZydisFormatterBasePrintPrefixes+0xf46>
ffffffff8003159c:	8b 45 c4             	mov    -0x3c(%rbp),%eax
ffffffff8003159f:	e9 d8 00 00 00       	jmp    ffffffff8003167c <ZydisFormatterBasePrintPrefixes+0xfe3>
ffffffff800315a4:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
ffffffff800315ab:	8b 40 34             	mov    0x34(%rax),%eax
ffffffff800315ae:	89 c2                	mov    %eax,%edx
ffffffff800315b0:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
ffffffff800315b7:	48 83 c0 10          	add    $0x10,%rax
ffffffff800315bb:	48 8d 0d 7e 8a 07 00 	lea    0x78a7e(%rip),%rcx        # ffffffff800aa040 <STR_PREF_REPE.lto_priv.1>
ffffffff800315c2:	48 89 ce             	mov    %rcx,%rsi
ffffffff800315c5:	48 89 c7             	mov    %rax,%rdi
ffffffff800315c8:	e8 a2 d9 ff ff       	call   ffffffff8002ef6f <ZydisStringAppendShortCase.lto_priv.1>
ffffffff800315cd:	89 45 c8             	mov    %eax,-0x38(%rbp)
ffffffff800315d0:	8b 45 c8             	mov    -0x38(%rbp),%eax
ffffffff800315d3:	85 c0                	test   %eax,%eax
ffffffff800315d5:	79 08                	jns    ffffffff800315df <ZydisFormatterBasePrintPrefixes+0xf46>
ffffffff800315d7:	8b 45 c8             	mov    -0x38(%rbp),%eax
ffffffff800315da:	e9 9d 00 00 00       	jmp    ffffffff8003167c <ZydisFormatterBasePrintPrefixes+0xfe3>
ffffffff800315df:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff800315e4:	e9 93 00 00 00       	jmp    ffffffff8003167c <ZydisFormatterBasePrintPrefixes+0xfe3>
ffffffff800315e9:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
ffffffff800315f0:	48 8b 00             	mov    (%rax),%rax
ffffffff800315f3:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff800315f7:	25 00 00 00 40       	and    $0x40000000,%eax
ffffffff800315fc:	48 85 c0             	test   %rax,%rax
ffffffff800315ff:	74 75                	je     ffffffff80031676 <ZydisFormatterBasePrintPrefixes+0xfdd>
ffffffff80031601:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
ffffffff80031608:	0f b6 00             	movzbl (%rax),%eax
ffffffff8003160b:	84 c0                	test   %al,%al
ffffffff8003160d:	74 28                	je     ffffffff80031637 <ZydisFormatterBasePrintPrefixes+0xf9e>
ffffffff8003160f:	48 8d 15 42 ed 00 00 	lea    0xed42(%rip),%rdx        # ffffffff80040358 <TOK_DATA_PREF_REPNE.lto_priv.1>
ffffffff80031616:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
ffffffff8003161d:	48 89 d6             	mov    %rdx,%rsi
ffffffff80031620:	48 89 c7             	mov    %rax,%rdi
ffffffff80031623:	e8 54 dd ff ff       	call   ffffffff8002f37c <ZydisFormatterBufferAppendPredefined.lto_priv.1>
ffffffff80031628:	89 45 cc             	mov    %eax,-0x34(%rbp)
ffffffff8003162b:	8b 45 cc             	mov    -0x34(%rbp),%eax
ffffffff8003162e:	85 c0                	test   %eax,%eax
ffffffff80031630:	79 3d                	jns    ffffffff8003166f <ZydisFormatterBasePrintPrefixes+0xfd6>
ffffffff80031632:	8b 45 cc             	mov    -0x34(%rbp),%eax
ffffffff80031635:	eb 45                	jmp    ffffffff8003167c <ZydisFormatterBasePrintPrefixes+0xfe3>
ffffffff80031637:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
ffffffff8003163e:	8b 40 34             	mov    0x34(%rax),%eax
ffffffff80031641:	89 c2                	mov    %eax,%edx
ffffffff80031643:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
ffffffff8003164a:	48 83 c0 10          	add    $0x10,%rax
ffffffff8003164e:	48 8d 0d 03 8a 07 00 	lea    0x78a03(%rip),%rcx        # ffffffff800aa058 <STR_PREF_REPNE.lto_priv.1>
ffffffff80031655:	48 89 ce             	mov    %rcx,%rsi
ffffffff80031658:	48 89 c7             	mov    %rax,%rdi
ffffffff8003165b:	e8 0f d9 ff ff       	call   ffffffff8002ef6f <ZydisStringAppendShortCase.lto_priv.1>
ffffffff80031660:	89 45 d0             	mov    %eax,-0x30(%rbp)
ffffffff80031663:	8b 45 d0             	mov    -0x30(%rbp),%eax
ffffffff80031666:	85 c0                	test   %eax,%eax
ffffffff80031668:	79 05                	jns    ffffffff8003166f <ZydisFormatterBasePrintPrefixes+0xfd6>
ffffffff8003166a:	8b 45 d0             	mov    -0x30(%rbp),%eax
ffffffff8003166d:	eb 0d                	jmp    ffffffff8003167c <ZydisFormatterBasePrintPrefixes+0xfe3>
ffffffff8003166f:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff80031674:	eb 06                	jmp    ffffffff8003167c <ZydisFormatterBasePrintPrefixes+0xfe3>
ffffffff80031676:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff8003167b:	90                   	nop
ffffffff8003167c:	c9                   	leave  
ffffffff8003167d:	c3                   	ret    

ffffffff8003167e <ZydisFormatterBasePrintDecorator>:
ffffffff8003167e:	f3 0f 1e fa          	endbr64 
ffffffff80031682:	55                   	push   %rbp
ffffffff80031683:	48 89 e5             	mov    %rsp,%rbp
ffffffff80031686:	48 81 ec 40 01 00 00 	sub    $0x140,%rsp
ffffffff8003168d:	48 89 bd d8 fe ff ff 	mov    %rdi,-0x128(%rbp)
ffffffff80031694:	48 89 b5 d0 fe ff ff 	mov    %rsi,-0x130(%rbp)
ffffffff8003169b:	48 89 95 c8 fe ff ff 	mov    %rdx,-0x138(%rbp)
ffffffff800316a2:	89 8d c4 fe ff ff    	mov    %ecx,-0x13c(%rbp)
ffffffff800316a8:	83 bd c4 fe ff ff 07 	cmpl   $0x7,-0x13c(%rbp)
ffffffff800316af:	0f 87 9e 15 00 00    	ja     ffffffff80032c53 <ZydisFormatterBasePrintDecorator+0x15d5>
ffffffff800316b5:	8b 85 c4 fe ff ff    	mov    -0x13c(%rbp),%eax
ffffffff800316bb:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
ffffffff800316c2:	00 
ffffffff800316c3:	48 8d 05 92 ef 00 00 	lea    0xef92(%rip),%rax        # ffffffff8004065c <TOK_DATA_SUB.lto_priv.1+0x8>
ffffffff800316ca:	8b 04 02             	mov    (%rdx,%rax,1),%eax
ffffffff800316cd:	48 98                	cltq   
ffffffff800316cf:	48 8d 15 86 ef 00 00 	lea    0xef86(%rip),%rdx        # ffffffff8004065c <TOK_DATA_SUB.lto_priv.1+0x8>
ffffffff800316d6:	48 01 d0             	add    %rdx,%rax
ffffffff800316d9:	3e ff e0             	notrack jmp *%rax
ffffffff800316dc:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
ffffffff800316e3:	48 8b 00             	mov    (%rax),%rax
ffffffff800316e6:	8b 40 40             	mov    0x40(%rax),%eax
ffffffff800316e9:	3d f8 00 00 00       	cmp    $0xf8,%eax
ffffffff800316ee:	0f 84 66 15 00 00    	je     ffffffff80032c5a <ZydisFormatterBasePrintDecorator+0x15dc>
ffffffff800316f4:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
ffffffff800316fb:	0f b6 00             	movzbl (%rax),%eax
ffffffff800316fe:	84 c0                	test   %al,%al
ffffffff80031700:	0f 84 4d 01 00 00    	je     ffffffff80031853 <ZydisFormatterBasePrintDecorator+0x1d5>
ffffffff80031706:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
ffffffff8003170d:	0f b6 00             	movzbl (%rax),%eax
ffffffff80031710:	84 c0                	test   %al,%al
ffffffff80031712:	74 34                	je     ffffffff80031748 <ZydisFormatterBasePrintDecorator+0xca>
ffffffff80031714:	48 8d 15 0d e9 00 00 	lea    0xe90d(%rip),%rdx        # ffffffff80040028 <TOK_DATA_DECO_BEGIN.lto_priv.1>
ffffffff8003171b:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
ffffffff80031722:	48 89 d6             	mov    %rdx,%rsi
ffffffff80031725:	48 89 c7             	mov    %rax,%rdi
ffffffff80031728:	e8 4f dc ff ff       	call   ffffffff8002f37c <ZydisFormatterBufferAppendPredefined.lto_priv.1>
ffffffff8003172d:	89 85 f4 fe ff ff    	mov    %eax,-0x10c(%rbp)
ffffffff80031733:	8b 85 f4 fe ff ff    	mov    -0x10c(%rbp),%eax
ffffffff80031739:	85 c0                	test   %eax,%eax
ffffffff8003173b:	79 43                	jns    ffffffff80031780 <ZydisFormatterBasePrintDecorator+0x102>
ffffffff8003173d:	8b 85 f4 fe ff ff    	mov    -0x10c(%rbp),%eax
ffffffff80031743:	e9 22 15 00 00       	jmp    ffffffff80032c6a <ZydisFormatterBasePrintDecorator+0x15ec>
ffffffff80031748:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
ffffffff8003174f:	48 83 c0 10          	add    $0x10,%rax
ffffffff80031753:	48 8d 15 3e 85 07 00 	lea    0x7853e(%rip),%rdx        # ffffffff800a9c98 <STR_DECO_BEGIN.lto_priv.1>
ffffffff8003175a:	48 89 d6             	mov    %rdx,%rsi
ffffffff8003175d:	48 89 c7             	mov    %rax,%rdi
ffffffff80031760:	e8 50 d7 ff ff       	call   ffffffff8002eeb5 <ZydisStringAppendShort.lto_priv.1>
ffffffff80031765:	89 85 f8 fe ff ff    	mov    %eax,-0x108(%rbp)
ffffffff8003176b:	8b 85 f8 fe ff ff    	mov    -0x108(%rbp),%eax
ffffffff80031771:	85 c0                	test   %eax,%eax
ffffffff80031773:	79 0b                	jns    ffffffff80031780 <ZydisFormatterBasePrintDecorator+0x102>
ffffffff80031775:	8b 85 f8 fe ff ff    	mov    -0x108(%rbp),%eax
ffffffff8003177b:	e9 ea 14 00 00       	jmp    ffffffff80032c6a <ZydisFormatterBasePrintDecorator+0x15ec>
ffffffff80031780:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
ffffffff80031787:	4c 8b 80 00 02 00 00 	mov    0x200(%rax),%r8
ffffffff8003178e:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
ffffffff80031795:	48 8b 00             	mov    (%rax),%rax
ffffffff80031798:	8b 48 40             	mov    0x40(%rax),%ecx
ffffffff8003179b:	48 8b 95 c8 fe ff ff 	mov    -0x138(%rbp),%rdx
ffffffff800317a2:	48 8b b5 d0 fe ff ff 	mov    -0x130(%rbp),%rsi
ffffffff800317a9:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
ffffffff800317b0:	48 89 c7             	mov    %rax,%rdi
ffffffff800317b3:	41 ff d0             	call   *%r8
ffffffff800317b6:	89 85 f0 fe ff ff    	mov    %eax,-0x110(%rbp)
ffffffff800317bc:	8b 85 f0 fe ff ff    	mov    -0x110(%rbp),%eax
ffffffff800317c2:	85 c0                	test   %eax,%eax
ffffffff800317c4:	79 0b                	jns    ffffffff800317d1 <ZydisFormatterBasePrintDecorator+0x153>
ffffffff800317c6:	8b 85 f0 fe ff ff    	mov    -0x110(%rbp),%eax
ffffffff800317cc:	e9 99 14 00 00       	jmp    ffffffff80032c6a <ZydisFormatterBasePrintDecorator+0x15ec>
ffffffff800317d1:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
ffffffff800317d8:	0f b6 00             	movzbl (%rax),%eax
ffffffff800317db:	84 c0                	test   %al,%al
ffffffff800317dd:	74 38                	je     ffffffff80031817 <ZydisFormatterBasePrintDecorator+0x199>
ffffffff800317df:	48 8d 15 ed e8 00 00 	lea    0xe8ed(%rip),%rdx        # ffffffff800400d3 <TOK_DATA_DECO_END.lto_priv.1>
ffffffff800317e6:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
ffffffff800317ed:	48 89 d6             	mov    %rdx,%rsi
ffffffff800317f0:	48 89 c7             	mov    %rax,%rdi
ffffffff800317f3:	e8 84 db ff ff       	call   ffffffff8002f37c <ZydisFormatterBufferAppendPredefined.lto_priv.1>
ffffffff800317f8:	89 85 e8 fe ff ff    	mov    %eax,-0x118(%rbp)
ffffffff800317fe:	8b 85 e8 fe ff ff    	mov    -0x118(%rbp),%eax
ffffffff80031804:	85 c0                	test   %eax,%eax
ffffffff80031806:	0f 89 08 01 00 00    	jns    ffffffff80031914 <ZydisFormatterBasePrintDecorator+0x296>
ffffffff8003180c:	8b 85 e8 fe ff ff    	mov    -0x118(%rbp),%eax
ffffffff80031812:	e9 53 14 00 00       	jmp    ffffffff80032c6a <ZydisFormatterBasePrintDecorator+0x15ec>
ffffffff80031817:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
ffffffff8003181e:	48 83 c0 10          	add    $0x10,%rax
ffffffff80031822:	48 8d 15 ff 84 07 00 	lea    0x784ff(%rip),%rdx        # ffffffff800a9d28 <STR_DECO_END.lto_priv.1>
ffffffff80031829:	48 89 d6             	mov    %rdx,%rsi
ffffffff8003182c:	48 89 c7             	mov    %rax,%rdi
ffffffff8003182f:	e8 81 d6 ff ff       	call   ffffffff8002eeb5 <ZydisStringAppendShort.lto_priv.1>
ffffffff80031834:	89 85 ec fe ff ff    	mov    %eax,-0x114(%rbp)
ffffffff8003183a:	8b 85 ec fe ff ff    	mov    -0x114(%rbp),%eax
ffffffff80031840:	85 c0                	test   %eax,%eax
ffffffff80031842:	0f 89 cc 00 00 00    	jns    ffffffff80031914 <ZydisFormatterBasePrintDecorator+0x296>
ffffffff80031848:	8b 85 ec fe ff ff    	mov    -0x114(%rbp),%eax
ffffffff8003184e:	e9 17 14 00 00       	jmp    ffffffff80032c6a <ZydisFormatterBasePrintDecorator+0x15ec>
ffffffff80031853:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
ffffffff8003185a:	48 83 c0 10          	add    $0x10,%rax
ffffffff8003185e:	48 8d 15 33 84 07 00 	lea    0x78433(%rip),%rdx        # ffffffff800a9c98 <STR_DECO_BEGIN.lto_priv.1>
ffffffff80031865:	48 89 d6             	mov    %rdx,%rsi
ffffffff80031868:	48 89 c7             	mov    %rax,%rdi
ffffffff8003186b:	e8 45 d6 ff ff       	call   ffffffff8002eeb5 <ZydisStringAppendShort.lto_priv.1>
ffffffff80031870:	89 85 04 ff ff ff    	mov    %eax,-0xfc(%rbp)
ffffffff80031876:	8b 85 04 ff ff ff    	mov    -0xfc(%rbp),%eax
ffffffff8003187c:	85 c0                	test   %eax,%eax
ffffffff8003187e:	79 0b                	jns    ffffffff8003188b <ZydisFormatterBasePrintDecorator+0x20d>
ffffffff80031880:	8b 85 04 ff ff ff    	mov    -0xfc(%rbp),%eax
ffffffff80031886:	e9 df 13 00 00       	jmp    ffffffff80032c6a <ZydisFormatterBasePrintDecorator+0x15ec>
ffffffff8003188b:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
ffffffff80031892:	4c 8b 80 00 02 00 00 	mov    0x200(%rax),%r8
ffffffff80031899:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
ffffffff800318a0:	48 8b 00             	mov    (%rax),%rax
ffffffff800318a3:	8b 48 40             	mov    0x40(%rax),%ecx
ffffffff800318a6:	48 8b 95 c8 fe ff ff 	mov    -0x138(%rbp),%rdx
ffffffff800318ad:	48 8b b5 d0 fe ff ff 	mov    -0x130(%rbp),%rsi
ffffffff800318b4:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
ffffffff800318bb:	48 89 c7             	mov    %rax,%rdi
ffffffff800318be:	41 ff d0             	call   *%r8
ffffffff800318c1:	89 85 00 ff ff ff    	mov    %eax,-0x100(%rbp)
ffffffff800318c7:	8b 85 00 ff ff ff    	mov    -0x100(%rbp),%eax
ffffffff800318cd:	85 c0                	test   %eax,%eax
ffffffff800318cf:	79 0b                	jns    ffffffff800318dc <ZydisFormatterBasePrintDecorator+0x25e>
ffffffff800318d1:	8b 85 00 ff ff ff    	mov    -0x100(%rbp),%eax
ffffffff800318d7:	e9 8e 13 00 00       	jmp    ffffffff80032c6a <ZydisFormatterBasePrintDecorator+0x15ec>
ffffffff800318dc:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
ffffffff800318e3:	48 83 c0 10          	add    $0x10,%rax
ffffffff800318e7:	48 8d 15 3a 84 07 00 	lea    0x7843a(%rip),%rdx        # ffffffff800a9d28 <STR_DECO_END.lto_priv.1>
ffffffff800318ee:	48 89 d6             	mov    %rdx,%rsi
ffffffff800318f1:	48 89 c7             	mov    %rax,%rdi
ffffffff800318f4:	e8 bc d5 ff ff       	call   ffffffff8002eeb5 <ZydisStringAppendShort.lto_priv.1>
ffffffff800318f9:	89 85 fc fe ff ff    	mov    %eax,-0x104(%rbp)
ffffffff800318ff:	8b 85 fc fe ff ff    	mov    -0x104(%rbp),%eax
ffffffff80031905:	85 c0                	test   %eax,%eax
ffffffff80031907:	79 0b                	jns    ffffffff80031914 <ZydisFormatterBasePrintDecorator+0x296>
ffffffff80031909:	8b 85 fc fe ff ff    	mov    -0x104(%rbp),%eax
ffffffff8003190f:	e9 56 13 00 00       	jmp    ffffffff80032c6a <ZydisFormatterBasePrintDecorator+0x15ec>
ffffffff80031914:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
ffffffff8003191b:	48 8b 00             	mov    (%rax),%rax
ffffffff8003191e:	8b 40 3c             	mov    0x3c(%rax),%eax
ffffffff80031921:	83 f8 03             	cmp    $0x3,%eax
ffffffff80031924:	74 16                	je     ffffffff8003193c <ZydisFormatterBasePrintDecorator+0x2be>
ffffffff80031926:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
ffffffff8003192d:	48 8b 00             	mov    (%rax),%rax
ffffffff80031930:	8b 40 3c             	mov    0x3c(%rax),%eax
ffffffff80031933:	83 f8 05             	cmp    $0x5,%eax
ffffffff80031936:	0f 85 1e 13 00 00    	jne    ffffffff80032c5a <ZydisFormatterBasePrintDecorator+0x15dc>
ffffffff8003193c:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
ffffffff80031943:	48 8b 00             	mov    (%rax),%rax
ffffffff80031946:	0f b6 80 0c 01 00 00 	movzbl 0x10c(%rax),%eax
ffffffff8003194d:	84 c0                	test   %al,%al
ffffffff8003194f:	0f 84 05 13 00 00    	je     ffffffff80032c5a <ZydisFormatterBasePrintDecorator+0x15dc>
ffffffff80031955:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
ffffffff8003195c:	0f b6 00             	movzbl (%rax),%eax
ffffffff8003195f:	84 c0                	test   %al,%al
ffffffff80031961:	74 38                	je     ffffffff8003199b <ZydisFormatterBasePrintDecorator+0x31d>
ffffffff80031963:	48 8d 15 36 e9 00 00 	lea    0xe936(%rip),%rdx        # ffffffff800402a0 <TOK_DATA_DECO_ZERO.lto_priv.1>
ffffffff8003196a:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
ffffffff80031971:	48 89 d6             	mov    %rdx,%rsi
ffffffff80031974:	48 89 c7             	mov    %rax,%rdi
ffffffff80031977:	e8 00 da ff ff       	call   ffffffff8002f37c <ZydisFormatterBufferAppendPredefined.lto_priv.1>
ffffffff8003197c:	89 85 e0 fe ff ff    	mov    %eax,-0x120(%rbp)
ffffffff80031982:	8b 85 e0 fe ff ff    	mov    -0x120(%rbp),%eax
ffffffff80031988:	85 c0                	test   %eax,%eax
ffffffff8003198a:	0f 89 ca 12 00 00    	jns    ffffffff80032c5a <ZydisFormatterBasePrintDecorator+0x15dc>
ffffffff80031990:	8b 85 e0 fe ff ff    	mov    -0x120(%rbp),%eax
ffffffff80031996:	e9 cf 12 00 00       	jmp    ffffffff80032c6a <ZydisFormatterBasePrintDecorator+0x15ec>
ffffffff8003199b:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
ffffffff800319a2:	8b 40 44             	mov    0x44(%rax),%eax
ffffffff800319a5:	89 c2                	mov    %eax,%edx
ffffffff800319a7:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
ffffffff800319ae:	48 83 c0 10          	add    $0x10,%rax
ffffffff800319b2:	48 8d 0d d7 84 07 00 	lea    0x784d7(%rip),%rcx        # ffffffff800a9e90 <STR_DECO_ZERO.lto_priv.1>
ffffffff800319b9:	48 89 ce             	mov    %rcx,%rsi
ffffffff800319bc:	48 89 c7             	mov    %rax,%rdi
ffffffff800319bf:	e8 ab d5 ff ff       	call   ffffffff8002ef6f <ZydisStringAppendShortCase.lto_priv.1>
ffffffff800319c4:	89 85 e4 fe ff ff    	mov    %eax,-0x11c(%rbp)
ffffffff800319ca:	8b 85 e4 fe ff ff    	mov    -0x11c(%rbp),%eax
ffffffff800319d0:	85 c0                	test   %eax,%eax
ffffffff800319d2:	0f 89 82 12 00 00    	jns    ffffffff80032c5a <ZydisFormatterBasePrintDecorator+0x15dc>
ffffffff800319d8:	8b 85 e4 fe ff ff    	mov    -0x11c(%rbp),%eax
ffffffff800319de:	e9 87 12 00 00       	jmp    ffffffff80032c6a <ZydisFormatterBasePrintDecorator+0x15ec>
ffffffff800319e3:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
ffffffff800319ea:	48 8b 00             	mov    (%rax),%rax
ffffffff800319ed:	0f b6 40 44          	movzbl 0x44(%rax),%eax
ffffffff800319f1:	84 c0                	test   %al,%al
ffffffff800319f3:	0f 85 64 12 00 00    	jne    ffffffff80032c5d <ZydisFormatterBasePrintDecorator+0x15df>
ffffffff800319f9:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
ffffffff80031a00:	48 8b 00             	mov    (%rax),%rax
ffffffff80031a03:	8b 40 48             	mov    0x48(%rax),%eax
ffffffff80031a06:	83 f8 0c             	cmp    $0xc,%eax
ffffffff80031a09:	0f 87 1d 05 00 00    	ja     ffffffff80031f2c <ZydisFormatterBasePrintDecorator+0x8ae>
ffffffff80031a0f:	89 c0                	mov    %eax,%eax
ffffffff80031a11:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
ffffffff80031a18:	00 
ffffffff80031a19:	48 8d 05 5c ec 00 00 	lea    0xec5c(%rip),%rax        # ffffffff8004067c <TOK_DATA_SUB.lto_priv.1+0x28>
ffffffff80031a20:	8b 04 02             	mov    (%rdx,%rax,1),%eax
ffffffff80031a23:	48 98                	cltq   
ffffffff80031a25:	48 8d 15 50 ec 00 00 	lea    0xec50(%rip),%rdx        # ffffffff8004067c <TOK_DATA_SUB.lto_priv.1+0x28>
ffffffff80031a2c:	48 01 d0             	add    %rdx,%rax
ffffffff80031a2f:	3e ff e0             	notrack jmp *%rax
ffffffff80031a32:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
ffffffff80031a39:	0f b6 00             	movzbl (%rax),%eax
ffffffff80031a3c:	84 c0                	test   %al,%al
ffffffff80031a3e:	74 38                	je     ffffffff80031a78 <ZydisFormatterBasePrintDecorator+0x3fa>
ffffffff80031a40:	48 8d 15 69 e4 00 00 	lea    0xe469(%rip),%rdx        # ffffffff8003feb0 <TOK_DATA_DECO_1TO2.lto_priv.1>
ffffffff80031a47:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
ffffffff80031a4e:	48 89 d6             	mov    %rdx,%rsi
ffffffff80031a51:	48 89 c7             	mov    %rax,%rdi
ffffffff80031a54:	e8 23 d9 ff ff       	call   ffffffff8002f37c <ZydisFormatterBufferAppendPredefined.lto_priv.1>
ffffffff80031a59:	89 85 08 ff ff ff    	mov    %eax,-0xf8(%rbp)
ffffffff80031a5f:	8b 85 08 ff ff ff    	mov    -0xf8(%rbp),%eax
ffffffff80031a65:	85 c0                	test   %eax,%eax
ffffffff80031a67:	0f 89 cf 04 00 00    	jns    ffffffff80031f3c <ZydisFormatterBasePrintDecorator+0x8be>
ffffffff80031a6d:	8b 85 08 ff ff ff    	mov    -0xf8(%rbp),%eax
ffffffff80031a73:	e9 f2 11 00 00       	jmp    ffffffff80032c6a <ZydisFormatterBasePrintDecorator+0x15ec>
ffffffff80031a78:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
ffffffff80031a7f:	8b 40 44             	mov    0x44(%rax),%eax
ffffffff80031a82:	89 c2                	mov    %eax,%edx
ffffffff80031a84:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
ffffffff80031a8b:	48 83 c0 10          	add    $0x10,%rax
ffffffff80031a8f:	48 8d 0d e2 80 07 00 	lea    0x780e2(%rip),%rcx        # ffffffff800a9b78 <STR_DECO_1TO2.lto_priv.1>
ffffffff80031a96:	48 89 ce             	mov    %rcx,%rsi
ffffffff80031a99:	48 89 c7             	mov    %rax,%rdi
ffffffff80031a9c:	e8 ce d4 ff ff       	call   ffffffff8002ef6f <ZydisStringAppendShortCase.lto_priv.1>
ffffffff80031aa1:	89 85 0c ff ff ff    	mov    %eax,-0xf4(%rbp)
ffffffff80031aa7:	8b 85 0c ff ff ff    	mov    -0xf4(%rbp),%eax
ffffffff80031aad:	85 c0                	test   %eax,%eax
ffffffff80031aaf:	0f 89 87 04 00 00    	jns    ffffffff80031f3c <ZydisFormatterBasePrintDecorator+0x8be>
ffffffff80031ab5:	8b 85 0c ff ff ff    	mov    -0xf4(%rbp),%eax
ffffffff80031abb:	e9 aa 11 00 00       	jmp    ffffffff80032c6a <ZydisFormatterBasePrintDecorator+0x15ec>
ffffffff80031ac0:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
ffffffff80031ac7:	0f b6 00             	movzbl (%rax),%eax
ffffffff80031aca:	84 c0                	test   %al,%al
ffffffff80031acc:	74 38                	je     ffffffff80031b06 <ZydisFormatterBasePrintDecorator+0x488>
ffffffff80031ace:	48 8d 15 fb e3 00 00 	lea    0xe3fb(%rip),%rdx        # ffffffff8003fed0 <TOK_DATA_DECO_1TO4.lto_priv.1>
ffffffff80031ad5:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
ffffffff80031adc:	48 89 d6             	mov    %rdx,%rsi
ffffffff80031adf:	48 89 c7             	mov    %rax,%rdi
ffffffff80031ae2:	e8 95 d8 ff ff       	call   ffffffff8002f37c <ZydisFormatterBufferAppendPredefined.lto_priv.1>
ffffffff80031ae7:	89 85 10 ff ff ff    	mov    %eax,-0xf0(%rbp)
ffffffff80031aed:	8b 85 10 ff ff ff    	mov    -0xf0(%rbp),%eax
ffffffff80031af3:	85 c0                	test   %eax,%eax
ffffffff80031af5:	0f 89 47 04 00 00    	jns    ffffffff80031f42 <ZydisFormatterBasePrintDecorator+0x8c4>
ffffffff80031afb:	8b 85 10 ff ff ff    	mov    -0xf0(%rbp),%eax
ffffffff80031b01:	e9 64 11 00 00       	jmp    ffffffff80032c6a <ZydisFormatterBasePrintDecorator+0x15ec>
ffffffff80031b06:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
ffffffff80031b0d:	8b 40 44             	mov    0x44(%rax),%eax
ffffffff80031b10:	89 c2                	mov    %eax,%edx
ffffffff80031b12:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
ffffffff80031b19:	48 83 c0 10          	add    $0x10,%rax
ffffffff80031b1d:	48 8d 0d 6c 80 07 00 	lea    0x7806c(%rip),%rcx        # ffffffff800a9b90 <STR_DECO_1TO4.lto_priv.1>
ffffffff80031b24:	48 89 ce             	mov    %rcx,%rsi
ffffffff80031b27:	48 89 c7             	mov    %rax,%rdi
ffffffff80031b2a:	e8 40 d4 ff ff       	call   ffffffff8002ef6f <ZydisStringAppendShortCase.lto_priv.1>
ffffffff80031b2f:	89 85 14 ff ff ff    	mov    %eax,-0xec(%rbp)
ffffffff80031b35:	8b 85 14 ff ff ff    	mov    -0xec(%rbp),%eax
ffffffff80031b3b:	85 c0                	test   %eax,%eax
ffffffff80031b3d:	0f 89 ff 03 00 00    	jns    ffffffff80031f42 <ZydisFormatterBasePrintDecorator+0x8c4>
ffffffff80031b43:	8b 85 14 ff ff ff    	mov    -0xec(%rbp),%eax
ffffffff80031b49:	e9 1c 11 00 00       	jmp    ffffffff80032c6a <ZydisFormatterBasePrintDecorator+0x15ec>
ffffffff80031b4e:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
ffffffff80031b55:	0f b6 00             	movzbl (%rax),%eax
ffffffff80031b58:	84 c0                	test   %al,%al
ffffffff80031b5a:	74 38                	je     ffffffff80031b94 <ZydisFormatterBasePrintDecorator+0x516>
ffffffff80031b5c:	48 8d 15 8d e3 00 00 	lea    0xe38d(%rip),%rdx        # ffffffff8003fef0 <TOK_DATA_DECO_1TO8.lto_priv.1>
ffffffff80031b63:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
ffffffff80031b6a:	48 89 d6             	mov    %rdx,%rsi
ffffffff80031b6d:	48 89 c7             	mov    %rax,%rdi
ffffffff80031b70:	e8 07 d8 ff ff       	call   ffffffff8002f37c <ZydisFormatterBufferAppendPredefined.lto_priv.1>
ffffffff80031b75:	89 85 18 ff ff ff    	mov    %eax,-0xe8(%rbp)
ffffffff80031b7b:	8b 85 18 ff ff ff    	mov    -0xe8(%rbp),%eax
ffffffff80031b81:	85 c0                	test   %eax,%eax
ffffffff80031b83:	0f 89 bf 03 00 00    	jns    ffffffff80031f48 <ZydisFormatterBasePrintDecorator+0x8ca>
ffffffff80031b89:	8b 85 18 ff ff ff    	mov    -0xe8(%rbp),%eax
ffffffff80031b8f:	e9 d6 10 00 00       	jmp    ffffffff80032c6a <ZydisFormatterBasePrintDecorator+0x15ec>
ffffffff80031b94:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
ffffffff80031b9b:	8b 40 44             	mov    0x44(%rax),%eax
ffffffff80031b9e:	89 c2                	mov    %eax,%edx
ffffffff80031ba0:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
ffffffff80031ba7:	48 83 c0 10          	add    $0x10,%rax
ffffffff80031bab:	48 8d 0d f6 7f 07 00 	lea    0x77ff6(%rip),%rcx        # ffffffff800a9ba8 <STR_DECO_1TO8.lto_priv.1>
ffffffff80031bb2:	48 89 ce             	mov    %rcx,%rsi
ffffffff80031bb5:	48 89 c7             	mov    %rax,%rdi
ffffffff80031bb8:	e8 b2 d3 ff ff       	call   ffffffff8002ef6f <ZydisStringAppendShortCase.lto_priv.1>
ffffffff80031bbd:	89 85 1c ff ff ff    	mov    %eax,-0xe4(%rbp)
ffffffff80031bc3:	8b 85 1c ff ff ff    	mov    -0xe4(%rbp),%eax
ffffffff80031bc9:	85 c0                	test   %eax,%eax
ffffffff80031bcb:	0f 89 77 03 00 00    	jns    ffffffff80031f48 <ZydisFormatterBasePrintDecorator+0x8ca>
ffffffff80031bd1:	8b 85 1c ff ff ff    	mov    -0xe4(%rbp),%eax
ffffffff80031bd7:	e9 8e 10 00 00       	jmp    ffffffff80032c6a <ZydisFormatterBasePrintDecorator+0x15ec>
ffffffff80031bdc:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
ffffffff80031be3:	0f b6 00             	movzbl (%rax),%eax
ffffffff80031be6:	84 c0                	test   %al,%al
ffffffff80031be8:	74 38                	je     ffffffff80031c22 <ZydisFormatterBasePrintDecorator+0x5a4>
ffffffff80031bea:	48 8d 15 1f e3 00 00 	lea    0xe31f(%rip),%rdx        # ffffffff8003ff10 <TOK_DATA_DECO_1TO16.lto_priv.1>
ffffffff80031bf1:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
ffffffff80031bf8:	48 89 d6             	mov    %rdx,%rsi
ffffffff80031bfb:	48 89 c7             	mov    %rax,%rdi
ffffffff80031bfe:	e8 79 d7 ff ff       	call   ffffffff8002f37c <ZydisFormatterBufferAppendPredefined.lto_priv.1>
ffffffff80031c03:	89 85 20 ff ff ff    	mov    %eax,-0xe0(%rbp)
ffffffff80031c09:	8b 85 20 ff ff ff    	mov    -0xe0(%rbp),%eax
ffffffff80031c0f:	85 c0                	test   %eax,%eax
ffffffff80031c11:	0f 89 37 03 00 00    	jns    ffffffff80031f4e <ZydisFormatterBasePrintDecorator+0x8d0>
ffffffff80031c17:	8b 85 20 ff ff ff    	mov    -0xe0(%rbp),%eax
ffffffff80031c1d:	e9 48 10 00 00       	jmp    ffffffff80032c6a <ZydisFormatterBasePrintDecorator+0x15ec>
ffffffff80031c22:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
ffffffff80031c29:	8b 40 44             	mov    0x44(%rax),%eax
ffffffff80031c2c:	89 c2                	mov    %eax,%edx
ffffffff80031c2e:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
ffffffff80031c35:	48 83 c0 10          	add    $0x10,%rax
ffffffff80031c39:	48 8d 0d 80 7f 07 00 	lea    0x77f80(%rip),%rcx        # ffffffff800a9bc0 <STR_DECO_1TO16.lto_priv.1>
ffffffff80031c40:	48 89 ce             	mov    %rcx,%rsi
ffffffff80031c43:	48 89 c7             	mov    %rax,%rdi
ffffffff80031c46:	e8 24 d3 ff ff       	call   ffffffff8002ef6f <ZydisStringAppendShortCase.lto_priv.1>
ffffffff80031c4b:	89 85 24 ff ff ff    	mov    %eax,-0xdc(%rbp)
ffffffff80031c51:	8b 85 24 ff ff ff    	mov    -0xdc(%rbp),%eax
ffffffff80031c57:	85 c0                	test   %eax,%eax
ffffffff80031c59:	0f 89 ef 02 00 00    	jns    ffffffff80031f4e <ZydisFormatterBasePrintDecorator+0x8d0>
ffffffff80031c5f:	8b 85 24 ff ff ff    	mov    -0xdc(%rbp),%eax
ffffffff80031c65:	e9 00 10 00 00       	jmp    ffffffff80032c6a <ZydisFormatterBasePrintDecorator+0x15ec>
ffffffff80031c6a:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
ffffffff80031c71:	0f b6 00             	movzbl (%rax),%eax
ffffffff80031c74:	84 c0                	test   %al,%al
ffffffff80031c76:	74 38                	je     ffffffff80031cb0 <ZydisFormatterBasePrintDecorator+0x632>
ffffffff80031c78:	48 8d 15 b1 e2 00 00 	lea    0xe2b1(%rip),%rdx        # ffffffff8003ff30 <TOK_DATA_DECO_1TO32.lto_priv.1>
ffffffff80031c7f:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
ffffffff80031c86:	48 89 d6             	mov    %rdx,%rsi
ffffffff80031c89:	48 89 c7             	mov    %rax,%rdi
ffffffff80031c8c:	e8 eb d6 ff ff       	call   ffffffff8002f37c <ZydisFormatterBufferAppendPredefined.lto_priv.1>
ffffffff80031c91:	89 85 28 ff ff ff    	mov    %eax,-0xd8(%rbp)
ffffffff80031c97:	8b 85 28 ff ff ff    	mov    -0xd8(%rbp),%eax
ffffffff80031c9d:	85 c0                	test   %eax,%eax
ffffffff80031c9f:	0f 89 af 02 00 00    	jns    ffffffff80031f54 <ZydisFormatterBasePrintDecorator+0x8d6>
ffffffff80031ca5:	8b 85 28 ff ff ff    	mov    -0xd8(%rbp),%eax
ffffffff80031cab:	e9 ba 0f 00 00       	jmp    ffffffff80032c6a <ZydisFormatterBasePrintDecorator+0x15ec>
ffffffff80031cb0:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
ffffffff80031cb7:	8b 40 44             	mov    0x44(%rax),%eax
ffffffff80031cba:	89 c2                	mov    %eax,%edx
ffffffff80031cbc:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
ffffffff80031cc3:	48 83 c0 10          	add    $0x10,%rax
ffffffff80031cc7:	48 8d 0d 0a 7f 07 00 	lea    0x77f0a(%rip),%rcx        # ffffffff800a9bd8 <STR_DECO_1TO32.lto_priv.1>
ffffffff80031cce:	48 89 ce             	mov    %rcx,%rsi
ffffffff80031cd1:	48 89 c7             	mov    %rax,%rdi
ffffffff80031cd4:	e8 96 d2 ff ff       	call   ffffffff8002ef6f <ZydisStringAppendShortCase.lto_priv.1>
ffffffff80031cd9:	89 85 2c ff ff ff    	mov    %eax,-0xd4(%rbp)
ffffffff80031cdf:	8b 85 2c ff ff ff    	mov    -0xd4(%rbp),%eax
ffffffff80031ce5:	85 c0                	test   %eax,%eax
ffffffff80031ce7:	0f 89 67 02 00 00    	jns    ffffffff80031f54 <ZydisFormatterBasePrintDecorator+0x8d6>
ffffffff80031ced:	8b 85 2c ff ff ff    	mov    -0xd4(%rbp),%eax
ffffffff80031cf3:	e9 72 0f 00 00       	jmp    ffffffff80032c6a <ZydisFormatterBasePrintDecorator+0x15ec>
ffffffff80031cf8:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
ffffffff80031cff:	0f b6 00             	movzbl (%rax),%eax
ffffffff80031d02:	84 c0                	test   %al,%al
ffffffff80031d04:	74 38                	je     ffffffff80031d3e <ZydisFormatterBasePrintDecorator+0x6c0>
ffffffff80031d06:	48 8d 15 43 e2 00 00 	lea    0xe243(%rip),%rdx        # ffffffff8003ff50 <TOK_DATA_DECO_1TO64.lto_priv.1>
ffffffff80031d0d:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
ffffffff80031d14:	48 89 d6             	mov    %rdx,%rsi
ffffffff80031d17:	48 89 c7             	mov    %rax,%rdi
ffffffff80031d1a:	e8 5d d6 ff ff       	call   ffffffff8002f37c <ZydisFormatterBufferAppendPredefined.lto_priv.1>
ffffffff80031d1f:	89 85 30 ff ff ff    	mov    %eax,-0xd0(%rbp)
ffffffff80031d25:	8b 85 30 ff ff ff    	mov    -0xd0(%rbp),%eax
ffffffff80031d2b:	85 c0                	test   %eax,%eax
ffffffff80031d2d:	0f 89 27 02 00 00    	jns    ffffffff80031f5a <ZydisFormatterBasePrintDecorator+0x8dc>
ffffffff80031d33:	8b 85 30 ff ff ff    	mov    -0xd0(%rbp),%eax
ffffffff80031d39:	e9 2c 0f 00 00       	jmp    ffffffff80032c6a <ZydisFormatterBasePrintDecorator+0x15ec>
ffffffff80031d3e:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
ffffffff80031d45:	8b 40 44             	mov    0x44(%rax),%eax
ffffffff80031d48:	89 c2                	mov    %eax,%edx
ffffffff80031d4a:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
ffffffff80031d51:	48 83 c0 10          	add    $0x10,%rax
ffffffff80031d55:	48 8d 0d 94 7e 07 00 	lea    0x77e94(%rip),%rcx        # ffffffff800a9bf0 <STR_DECO_1TO64.lto_priv.1>
ffffffff80031d5c:	48 89 ce             	mov    %rcx,%rsi
ffffffff80031d5f:	48 89 c7             	mov    %rax,%rdi
ffffffff80031d62:	e8 08 d2 ff ff       	call   ffffffff8002ef6f <ZydisStringAppendShortCase.lto_priv.1>
ffffffff80031d67:	89 85 34 ff ff ff    	mov    %eax,-0xcc(%rbp)
ffffffff80031d6d:	8b 85 34 ff ff ff    	mov    -0xcc(%rbp),%eax
ffffffff80031d73:	85 c0                	test   %eax,%eax
ffffffff80031d75:	0f 89 df 01 00 00    	jns    ffffffff80031f5a <ZydisFormatterBasePrintDecorator+0x8dc>
ffffffff80031d7b:	8b 85 34 ff ff ff    	mov    -0xcc(%rbp),%eax
ffffffff80031d81:	e9 e4 0e 00 00       	jmp    ffffffff80032c6a <ZydisFormatterBasePrintDecorator+0x15ec>
ffffffff80031d86:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
ffffffff80031d8d:	0f b6 00             	movzbl (%rax),%eax
ffffffff80031d90:	84 c0                	test   %al,%al
ffffffff80031d92:	74 38                	je     ffffffff80031dcc <ZydisFormatterBasePrintDecorator+0x74e>
ffffffff80031d94:	48 8d 15 d5 e1 00 00 	lea    0xe1d5(%rip),%rdx        # ffffffff8003ff70 <TOK_DATA_DECO_4TO8.lto_priv.1>
ffffffff80031d9b:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
ffffffff80031da2:	48 89 d6             	mov    %rdx,%rsi
ffffffff80031da5:	48 89 c7             	mov    %rax,%rdi
ffffffff80031da8:	e8 cf d5 ff ff       	call   ffffffff8002f37c <ZydisFormatterBufferAppendPredefined.lto_priv.1>
ffffffff80031dad:	89 85 38 ff ff ff    	mov    %eax,-0xc8(%rbp)
ffffffff80031db3:	8b 85 38 ff ff ff    	mov    -0xc8(%rbp),%eax
ffffffff80031db9:	85 c0                	test   %eax,%eax
ffffffff80031dbb:	0f 89 9f 01 00 00    	jns    ffffffff80031f60 <ZydisFormatterBasePrintDecorator+0x8e2>
ffffffff80031dc1:	8b 85 38 ff ff ff    	mov    -0xc8(%rbp),%eax
ffffffff80031dc7:	e9 9e 0e 00 00       	jmp    ffffffff80032c6a <ZydisFormatterBasePrintDecorator+0x15ec>
ffffffff80031dcc:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
ffffffff80031dd3:	8b 40 44             	mov    0x44(%rax),%eax
ffffffff80031dd6:	89 c2                	mov    %eax,%edx
ffffffff80031dd8:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
ffffffff80031ddf:	48 83 c0 10          	add    $0x10,%rax
ffffffff80031de3:	48 8d 0d 1e 7e 07 00 	lea    0x77e1e(%rip),%rcx        # ffffffff800a9c08 <STR_DECO_4TO8.lto_priv.1>
ffffffff80031dea:	48 89 ce             	mov    %rcx,%rsi
ffffffff80031ded:	48 89 c7             	mov    %rax,%rdi
ffffffff80031df0:	e8 7a d1 ff ff       	call   ffffffff8002ef6f <ZydisStringAppendShortCase.lto_priv.1>
ffffffff80031df5:	89 85 3c ff ff ff    	mov    %eax,-0xc4(%rbp)
ffffffff80031dfb:	8b 85 3c ff ff ff    	mov    -0xc4(%rbp),%eax
ffffffff80031e01:	85 c0                	test   %eax,%eax
ffffffff80031e03:	0f 89 57 01 00 00    	jns    ffffffff80031f60 <ZydisFormatterBasePrintDecorator+0x8e2>
ffffffff80031e09:	8b 85 3c ff ff ff    	mov    -0xc4(%rbp),%eax
ffffffff80031e0f:	e9 56 0e 00 00       	jmp    ffffffff80032c6a <ZydisFormatterBasePrintDecorator+0x15ec>
ffffffff80031e14:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
ffffffff80031e1b:	0f b6 00             	movzbl (%rax),%eax
ffffffff80031e1e:	84 c0                	test   %al,%al
ffffffff80031e20:	74 38                	je     ffffffff80031e5a <ZydisFormatterBasePrintDecorator+0x7dc>
ffffffff80031e22:	48 8d 15 67 e1 00 00 	lea    0xe167(%rip),%rdx        # ffffffff8003ff90 <TOK_DATA_DECO_4TO16.lto_priv.1>
ffffffff80031e29:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
ffffffff80031e30:	48 89 d6             	mov    %rdx,%rsi
ffffffff80031e33:	48 89 c7             	mov    %rax,%rdi
ffffffff80031e36:	e8 41 d5 ff ff       	call   ffffffff8002f37c <ZydisFormatterBufferAppendPredefined.lto_priv.1>
ffffffff80031e3b:	89 85 40 ff ff ff    	mov    %eax,-0xc0(%rbp)
ffffffff80031e41:	8b 85 40 ff ff ff    	mov    -0xc0(%rbp),%eax
ffffffff80031e47:	85 c0                	test   %eax,%eax
ffffffff80031e49:	0f 89 17 01 00 00    	jns    ffffffff80031f66 <ZydisFormatterBasePrintDecorator+0x8e8>
ffffffff80031e4f:	8b 85 40 ff ff ff    	mov    -0xc0(%rbp),%eax
ffffffff80031e55:	e9 10 0e 00 00       	jmp    ffffffff80032c6a <ZydisFormatterBasePrintDecorator+0x15ec>
ffffffff80031e5a:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
ffffffff80031e61:	8b 40 44             	mov    0x44(%rax),%eax
ffffffff80031e64:	89 c2                	mov    %eax,%edx
ffffffff80031e66:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
ffffffff80031e6d:	48 83 c0 10          	add    $0x10,%rax
ffffffff80031e71:	48 8d 0d a8 7d 07 00 	lea    0x77da8(%rip),%rcx        # ffffffff800a9c20 <STR_DECO_4TO16.lto_priv.1>
ffffffff80031e78:	48 89 ce             	mov    %rcx,%rsi
ffffffff80031e7b:	48 89 c7             	mov    %rax,%rdi
ffffffff80031e7e:	e8 ec d0 ff ff       	call   ffffffff8002ef6f <ZydisStringAppendShortCase.lto_priv.1>
ffffffff80031e83:	89 85 44 ff ff ff    	mov    %eax,-0xbc(%rbp)
ffffffff80031e89:	8b 85 44 ff ff ff    	mov    -0xbc(%rbp),%eax
ffffffff80031e8f:	85 c0                	test   %eax,%eax
ffffffff80031e91:	0f 89 cf 00 00 00    	jns    ffffffff80031f66 <ZydisFormatterBasePrintDecorator+0x8e8>
ffffffff80031e97:	8b 85 44 ff ff ff    	mov    -0xbc(%rbp),%eax
ffffffff80031e9d:	e9 c8 0d 00 00       	jmp    ffffffff80032c6a <ZydisFormatterBasePrintDecorator+0x15ec>
ffffffff80031ea2:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
ffffffff80031ea9:	0f b6 00             	movzbl (%rax),%eax
ffffffff80031eac:	84 c0                	test   %al,%al
ffffffff80031eae:	74 38                	je     ffffffff80031ee8 <ZydisFormatterBasePrintDecorator+0x86a>
ffffffff80031eb0:	48 8d 15 f9 e0 00 00 	lea    0xe0f9(%rip),%rdx        # ffffffff8003ffb0 <TOK_DATA_DECO_8TO16.lto_priv.1>
ffffffff80031eb7:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
ffffffff80031ebe:	48 89 d6             	mov    %rdx,%rsi
ffffffff80031ec1:	48 89 c7             	mov    %rax,%rdi
ffffffff80031ec4:	e8 b3 d4 ff ff       	call   ffffffff8002f37c <ZydisFormatterBufferAppendPredefined.lto_priv.1>
ffffffff80031ec9:	89 85 48 ff ff ff    	mov    %eax,-0xb8(%rbp)
ffffffff80031ecf:	8b 85 48 ff ff ff    	mov    -0xb8(%rbp),%eax
ffffffff80031ed5:	85 c0                	test   %eax,%eax
ffffffff80031ed7:	0f 89 8f 00 00 00    	jns    ffffffff80031f6c <ZydisFormatterBasePrintDecorator+0x8ee>
ffffffff80031edd:	8b 85 48 ff ff ff    	mov    -0xb8(%rbp),%eax
ffffffff80031ee3:	e9 82 0d 00 00       	jmp    ffffffff80032c6a <ZydisFormatterBasePrintDecorator+0x15ec>
ffffffff80031ee8:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
ffffffff80031eef:	8b 40 44             	mov    0x44(%rax),%eax
ffffffff80031ef2:	89 c2                	mov    %eax,%edx
ffffffff80031ef4:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
ffffffff80031efb:	48 83 c0 10          	add    $0x10,%rax
ffffffff80031eff:	48 8d 0d 32 7d 07 00 	lea    0x77d32(%rip),%rcx        # ffffffff800a9c38 <STR_DECO_8TO16.lto_priv.1>
ffffffff80031f06:	48 89 ce             	mov    %rcx,%rsi
ffffffff80031f09:	48 89 c7             	mov    %rax,%rdi
ffffffff80031f0c:	e8 5e d0 ff ff       	call   ffffffff8002ef6f <ZydisStringAppendShortCase.lto_priv.1>
ffffffff80031f11:	89 85 4c ff ff ff    	mov    %eax,-0xb4(%rbp)
ffffffff80031f17:	8b 85 4c ff ff ff    	mov    -0xb4(%rbp),%eax
ffffffff80031f1d:	85 c0                	test   %eax,%eax
ffffffff80031f1f:	79 4b                	jns    ffffffff80031f6c <ZydisFormatterBasePrintDecorator+0x8ee>
ffffffff80031f21:	8b 85 4c ff ff ff    	mov    -0xb4(%rbp),%eax
ffffffff80031f27:	e9 3e 0d 00 00       	jmp    ffffffff80032c6a <ZydisFormatterBasePrintDecorator+0x15ec>
ffffffff80031f2c:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff80031f31:	e9 34 0d 00 00       	jmp    ffffffff80032c6a <ZydisFormatterBasePrintDecorator+0x15ec>
ffffffff80031f36:	90                   	nop
ffffffff80031f37:	e9 21 0d 00 00       	jmp    ffffffff80032c5d <ZydisFormatterBasePrintDecorator+0x15df>
ffffffff80031f3c:	90                   	nop
ffffffff80031f3d:	e9 1b 0d 00 00       	jmp    ffffffff80032c5d <ZydisFormatterBasePrintDecorator+0x15df>
ffffffff80031f42:	90                   	nop
ffffffff80031f43:	e9 15 0d 00 00       	jmp    ffffffff80032c5d <ZydisFormatterBasePrintDecorator+0x15df>
ffffffff80031f48:	90                   	nop
ffffffff80031f49:	e9 0f 0d 00 00       	jmp    ffffffff80032c5d <ZydisFormatterBasePrintDecorator+0x15df>
ffffffff80031f4e:	90                   	nop
ffffffff80031f4f:	e9 09 0d 00 00       	jmp    ffffffff80032c5d <ZydisFormatterBasePrintDecorator+0x15df>
ffffffff80031f54:	90                   	nop
ffffffff80031f55:	e9 03 0d 00 00       	jmp    ffffffff80032c5d <ZydisFormatterBasePrintDecorator+0x15df>
ffffffff80031f5a:	90                   	nop
ffffffff80031f5b:	e9 fd 0c 00 00       	jmp    ffffffff80032c5d <ZydisFormatterBasePrintDecorator+0x15df>
ffffffff80031f60:	90                   	nop
ffffffff80031f61:	e9 f7 0c 00 00       	jmp    ffffffff80032c5d <ZydisFormatterBasePrintDecorator+0x15df>
ffffffff80031f66:	90                   	nop
ffffffff80031f67:	e9 f1 0c 00 00       	jmp    ffffffff80032c5d <ZydisFormatterBasePrintDecorator+0x15df>
ffffffff80031f6c:	90                   	nop
ffffffff80031f6d:	e9 eb 0c 00 00       	jmp    ffffffff80032c5d <ZydisFormatterBasePrintDecorator+0x15df>
ffffffff80031f72:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
ffffffff80031f79:	48 8b 00             	mov    (%rax),%rax
ffffffff80031f7c:	0f b6 40 58          	movzbl 0x58(%rax),%eax
ffffffff80031f80:	84 c0                	test   %al,%al
ffffffff80031f82:	0f 84 7b 02 00 00    	je     ffffffff80032203 <ZydisFormatterBasePrintDecorator+0xb85>
ffffffff80031f88:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
ffffffff80031f8f:	48 8b 00             	mov    (%rax),%rax
ffffffff80031f92:	8b 40 4c             	mov    0x4c(%rax),%eax
ffffffff80031f95:	83 f8 04             	cmp    $0x4,%eax
ffffffff80031f98:	0f 87 5b 02 00 00    	ja     ffffffff800321f9 <ZydisFormatterBasePrintDecorator+0xb7b>
ffffffff80031f9e:	89 c0                	mov    %eax,%eax
ffffffff80031fa0:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
ffffffff80031fa7:	00 
ffffffff80031fa8:	48 8d 05 01 e7 00 00 	lea    0xe701(%rip),%rax        # ffffffff800406b0 <TOK_DATA_SUB.lto_priv.1+0x5c>
ffffffff80031faf:	8b 04 02             	mov    (%rdx,%rax,1),%eax
ffffffff80031fb2:	48 98                	cltq   
ffffffff80031fb4:	48 8d 15 f5 e6 00 00 	lea    0xe6f5(%rip),%rdx        # ffffffff800406b0 <TOK_DATA_SUB.lto_priv.1+0x5c>
ffffffff80031fbb:	48 01 d0             	add    %rdx,%rax
ffffffff80031fbe:	3e ff e0             	notrack jmp *%rax
ffffffff80031fc1:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
ffffffff80031fc8:	0f b6 00             	movzbl (%rax),%eax
ffffffff80031fcb:	84 c0                	test   %al,%al
ffffffff80031fcd:	74 38                	je     ffffffff80032007 <ZydisFormatterBasePrintDecorator+0x989>
ffffffff80031fcf:	48 8d 15 8a e1 00 00 	lea    0xe18a(%rip),%rdx        # ffffffff80040160 <TOK_DATA_DECO_RN_SAE.lto_priv.1>
ffffffff80031fd6:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
ffffffff80031fdd:	48 89 d6             	mov    %rdx,%rsi
ffffffff80031fe0:	48 89 c7             	mov    %rax,%rdi
ffffffff80031fe3:	e8 94 d3 ff ff       	call   ffffffff8002f37c <ZydisFormatterBufferAppendPredefined.lto_priv.1>
ffffffff80031fe8:	89 85 50 ff ff ff    	mov    %eax,-0xb0(%rbp)
ffffffff80031fee:	8b 85 50 ff ff ff    	mov    -0xb0(%rbp),%eax
ffffffff80031ff4:	85 c0                	test   %eax,%eax
ffffffff80031ff6:	0f 89 60 04 00 00    	jns    ffffffff8003245c <ZydisFormatterBasePrintDecorator+0xdde>
ffffffff80031ffc:	8b 85 50 ff ff ff    	mov    -0xb0(%rbp),%eax
ffffffff80032002:	e9 63 0c 00 00       	jmp    ffffffff80032c6a <ZydisFormatterBasePrintDecorator+0x15ec>
ffffffff80032007:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
ffffffff8003200e:	8b 40 44             	mov    0x44(%rax),%eax
ffffffff80032011:	89 c2                	mov    %eax,%edx
ffffffff80032013:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
ffffffff8003201a:	48 83 c0 10          	add    $0x10,%rax
ffffffff8003201e:	48 8d 0d 7b 7d 07 00 	lea    0x77d7b(%rip),%rcx        # ffffffff800a9da0 <STR_DECO_RN_SAE.lto_priv.1>
ffffffff80032025:	48 89 ce             	mov    %rcx,%rsi
ffffffff80032028:	48 89 c7             	mov    %rax,%rdi
ffffffff8003202b:	e8 3f cf ff ff       	call   ffffffff8002ef6f <ZydisStringAppendShortCase.lto_priv.1>
ffffffff80032030:	89 85 54 ff ff ff    	mov    %eax,-0xac(%rbp)
ffffffff80032036:	8b 85 54 ff ff ff    	mov    -0xac(%rbp),%eax
ffffffff8003203c:	85 c0                	test   %eax,%eax
ffffffff8003203e:	0f 89 18 04 00 00    	jns    ffffffff8003245c <ZydisFormatterBasePrintDecorator+0xdde>
ffffffff80032044:	8b 85 54 ff ff ff    	mov    -0xac(%rbp),%eax
ffffffff8003204a:	e9 1b 0c 00 00       	jmp    ffffffff80032c6a <ZydisFormatterBasePrintDecorator+0x15ec>
ffffffff8003204f:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
ffffffff80032056:	0f b6 00             	movzbl (%rax),%eax
ffffffff80032059:	84 c0                	test   %al,%al
ffffffff8003205b:	74 38                	je     ffffffff80032095 <ZydisFormatterBasePrintDecorator+0xa17>
ffffffff8003205d:	48 8d 15 bc e0 00 00 	lea    0xe0bc(%rip),%rdx        # ffffffff80040120 <TOK_DATA_DECO_RD_SAE.lto_priv.1>
ffffffff80032064:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
ffffffff8003206b:	48 89 d6             	mov    %rdx,%rsi
ffffffff8003206e:	48 89 c7             	mov    %rax,%rdi
ffffffff80032071:	e8 06 d3 ff ff       	call   ffffffff8002f37c <ZydisFormatterBufferAppendPredefined.lto_priv.1>
ffffffff80032076:	89 85 58 ff ff ff    	mov    %eax,-0xa8(%rbp)
ffffffff8003207c:	8b 85 58 ff ff ff    	mov    -0xa8(%rbp),%eax
ffffffff80032082:	85 c0                	test   %eax,%eax
ffffffff80032084:	0f 89 d8 03 00 00    	jns    ffffffff80032462 <ZydisFormatterBasePrintDecorator+0xde4>
ffffffff8003208a:	8b 85 58 ff ff ff    	mov    -0xa8(%rbp),%eax
ffffffff80032090:	e9 d5 0b 00 00       	jmp    ffffffff80032c6a <ZydisFormatterBasePrintDecorator+0x15ec>
ffffffff80032095:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
ffffffff8003209c:	8b 40 44             	mov    0x44(%rax),%eax
ffffffff8003209f:	89 c2                	mov    %eax,%edx
ffffffff800320a1:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
ffffffff800320a8:	48 83 c0 10          	add    $0x10,%rax
ffffffff800320ac:	48 8d 0d bd 7c 07 00 	lea    0x77cbd(%rip),%rcx        # ffffffff800a9d70 <STR_DECO_RD_SAE.lto_priv.1>
ffffffff800320b3:	48 89 ce             	mov    %rcx,%rsi
ffffffff800320b6:	48 89 c7             	mov    %rax,%rdi
ffffffff800320b9:	e8 b1 ce ff ff       	call   ffffffff8002ef6f <ZydisStringAppendShortCase.lto_priv.1>
ffffffff800320be:	89 85 5c ff ff ff    	mov    %eax,-0xa4(%rbp)
ffffffff800320c4:	8b 85 5c ff ff ff    	mov    -0xa4(%rbp),%eax
ffffffff800320ca:	85 c0                	test   %eax,%eax
ffffffff800320cc:	0f 89 90 03 00 00    	jns    ffffffff80032462 <ZydisFormatterBasePrintDecorator+0xde4>
ffffffff800320d2:	8b 85 5c ff ff ff    	mov    -0xa4(%rbp),%eax
ffffffff800320d8:	e9 8d 0b 00 00       	jmp    ffffffff80032c6a <ZydisFormatterBasePrintDecorator+0x15ec>
ffffffff800320dd:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
ffffffff800320e4:	0f b6 00             	movzbl (%rax),%eax
ffffffff800320e7:	84 c0                	test   %al,%al
ffffffff800320e9:	74 38                	je     ffffffff80032123 <ZydisFormatterBasePrintDecorator+0xaa5>
ffffffff800320eb:	48 8d 15 ae e0 00 00 	lea    0xe0ae(%rip),%rdx        # ffffffff800401a0 <TOK_DATA_DECO_RU_SAE.lto_priv.1>
ffffffff800320f2:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
ffffffff800320f9:	48 89 d6             	mov    %rdx,%rsi
ffffffff800320fc:	48 89 c7             	mov    %rax,%rdi
ffffffff800320ff:	e8 78 d2 ff ff       	call   ffffffff8002f37c <ZydisFormatterBufferAppendPredefined.lto_priv.1>
ffffffff80032104:	89 85 60 ff ff ff    	mov    %eax,-0xa0(%rbp)
ffffffff8003210a:	8b 85 60 ff ff ff    	mov    -0xa0(%rbp),%eax
ffffffff80032110:	85 c0                	test   %eax,%eax
ffffffff80032112:	0f 89 50 03 00 00    	jns    ffffffff80032468 <ZydisFormatterBasePrintDecorator+0xdea>
ffffffff80032118:	8b 85 60 ff ff ff    	mov    -0xa0(%rbp),%eax
ffffffff8003211e:	e9 47 0b 00 00       	jmp    ffffffff80032c6a <ZydisFormatterBasePrintDecorator+0x15ec>
ffffffff80032123:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
ffffffff8003212a:	8b 40 44             	mov    0x44(%rax),%eax
ffffffff8003212d:	89 c2                	mov    %eax,%edx
ffffffff8003212f:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
ffffffff80032136:	48 83 c0 10          	add    $0x10,%rax
ffffffff8003213a:	48 8d 0d 8f 7c 07 00 	lea    0x77c8f(%rip),%rcx        # ffffffff800a9dd0 <STR_DECO_RU_SAE.lto_priv.1>
ffffffff80032141:	48 89 ce             	mov    %rcx,%rsi
ffffffff80032144:	48 89 c7             	mov    %rax,%rdi
ffffffff80032147:	e8 23 ce ff ff       	call   ffffffff8002ef6f <ZydisStringAppendShortCase.lto_priv.1>
ffffffff8003214c:	89 85 64 ff ff ff    	mov    %eax,-0x9c(%rbp)
ffffffff80032152:	8b 85 64 ff ff ff    	mov    -0x9c(%rbp),%eax
ffffffff80032158:	85 c0                	test   %eax,%eax
ffffffff8003215a:	0f 89 08 03 00 00    	jns    ffffffff80032468 <ZydisFormatterBasePrintDecorator+0xdea>
ffffffff80032160:	8b 85 64 ff ff ff    	mov    -0x9c(%rbp),%eax
ffffffff80032166:	e9 ff 0a 00 00       	jmp    ffffffff80032c6a <ZydisFormatterBasePrintDecorator+0x15ec>
ffffffff8003216b:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
ffffffff80032172:	0f b6 00             	movzbl (%rax),%eax
ffffffff80032175:	84 c0                	test   %al,%al
ffffffff80032177:	74 38                	je     ffffffff800321b1 <ZydisFormatterBasePrintDecorator+0xb33>
ffffffff80032179:	48 8d 15 60 e0 00 00 	lea    0xe060(%rip),%rdx        # ffffffff800401e0 <TOK_DATA_DECO_RZ_SAE.lto_priv.1>
ffffffff80032180:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
ffffffff80032187:	48 89 d6             	mov    %rdx,%rsi
ffffffff8003218a:	48 89 c7             	mov    %rax,%rdi
ffffffff8003218d:	e8 ea d1 ff ff       	call   ffffffff8002f37c <ZydisFormatterBufferAppendPredefined.lto_priv.1>
ffffffff80032192:	89 85 68 ff ff ff    	mov    %eax,-0x98(%rbp)
ffffffff80032198:	8b 85 68 ff ff ff    	mov    -0x98(%rbp),%eax
ffffffff8003219e:	85 c0                	test   %eax,%eax
ffffffff800321a0:	0f 89 c8 02 00 00    	jns    ffffffff8003246e <ZydisFormatterBasePrintDecorator+0xdf0>
ffffffff800321a6:	8b 85 68 ff ff ff    	mov    -0x98(%rbp),%eax
ffffffff800321ac:	e9 b9 0a 00 00       	jmp    ffffffff80032c6a <ZydisFormatterBasePrintDecorator+0x15ec>
ffffffff800321b1:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
ffffffff800321b8:	8b 40 44             	mov    0x44(%rax),%eax
ffffffff800321bb:	89 c2                	mov    %eax,%edx
ffffffff800321bd:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
ffffffff800321c4:	48 83 c0 10          	add    $0x10,%rax
ffffffff800321c8:	48 8d 0d 31 7c 07 00 	lea    0x77c31(%rip),%rcx        # ffffffff800a9e00 <STR_DECO_RZ_SAE.lto_priv.1>
ffffffff800321cf:	48 89 ce             	mov    %rcx,%rsi
ffffffff800321d2:	48 89 c7             	mov    %rax,%rdi
ffffffff800321d5:	e8 95 cd ff ff       	call   ffffffff8002ef6f <ZydisStringAppendShortCase.lto_priv.1>
ffffffff800321da:	89 85 6c ff ff ff    	mov    %eax,-0x94(%rbp)
ffffffff800321e0:	8b 85 6c ff ff ff    	mov    -0x94(%rbp),%eax
ffffffff800321e6:	85 c0                	test   %eax,%eax
ffffffff800321e8:	0f 89 80 02 00 00    	jns    ffffffff8003246e <ZydisFormatterBasePrintDecorator+0xdf0>
ffffffff800321ee:	8b 85 6c ff ff ff    	mov    -0x94(%rbp),%eax
ffffffff800321f4:	e9 71 0a 00 00       	jmp    ffffffff80032c6a <ZydisFormatterBasePrintDecorator+0x15ec>
ffffffff800321f9:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff800321fe:	e9 67 0a 00 00       	jmp    ffffffff80032c6a <ZydisFormatterBasePrintDecorator+0x15ec>
ffffffff80032203:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
ffffffff8003220a:	48 8b 00             	mov    (%rax),%rax
ffffffff8003220d:	8b 40 4c             	mov    0x4c(%rax),%eax
ffffffff80032210:	83 f8 04             	cmp    $0x4,%eax
ffffffff80032213:	0f 87 33 02 00 00    	ja     ffffffff8003244c <ZydisFormatterBasePrintDecorator+0xdce>
ffffffff80032219:	89 c0                	mov    %eax,%eax
ffffffff8003221b:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
ffffffff80032222:	00 
ffffffff80032223:	48 8d 05 9a e4 00 00 	lea    0xe49a(%rip),%rax        # ffffffff800406c4 <TOK_DATA_SUB.lto_priv.1+0x70>
ffffffff8003222a:	8b 04 02             	mov    (%rdx,%rax,1),%eax
ffffffff8003222d:	48 98                	cltq   
ffffffff8003222f:	48 8d 15 8e e4 00 00 	lea    0xe48e(%rip),%rdx        # ffffffff800406c4 <TOK_DATA_SUB.lto_priv.1+0x70>
ffffffff80032236:	48 01 d0             	add    %rdx,%rax
ffffffff80032239:	3e ff e0             	notrack jmp *%rax
ffffffff8003223c:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
ffffffff80032243:	0f b6 00             	movzbl (%rax),%eax
ffffffff80032246:	84 c0                	test   %al,%al
ffffffff80032248:	74 38                	je     ffffffff80032282 <ZydisFormatterBasePrintDecorator+0xc04>
ffffffff8003224a:	48 8d 15 ef de 00 00 	lea    0xdeef(%rip),%rdx        # ffffffff80040140 <TOK_DATA_DECO_RN.lto_priv.1>
ffffffff80032251:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
ffffffff80032258:	48 89 d6             	mov    %rdx,%rsi
ffffffff8003225b:	48 89 c7             	mov    %rax,%rdi
ffffffff8003225e:	e8 19 d1 ff ff       	call   ffffffff8002f37c <ZydisFormatterBufferAppendPredefined.lto_priv.1>
ffffffff80032263:	89 85 70 ff ff ff    	mov    %eax,-0x90(%rbp)
ffffffff80032269:	8b 85 70 ff ff ff    	mov    -0x90(%rbp),%eax
ffffffff8003226f:	85 c0                	test   %eax,%eax
ffffffff80032271:	0f 89 03 02 00 00    	jns    ffffffff8003247a <ZydisFormatterBasePrintDecorator+0xdfc>
ffffffff80032277:	8b 85 70 ff ff ff    	mov    -0x90(%rbp),%eax
ffffffff8003227d:	e9 e8 09 00 00       	jmp    ffffffff80032c6a <ZydisFormatterBasePrintDecorator+0x15ec>
ffffffff80032282:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
ffffffff80032289:	8b 40 44             	mov    0x44(%rax),%eax
ffffffff8003228c:	89 c2                	mov    %eax,%edx
ffffffff8003228e:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
ffffffff80032295:	48 83 c0 10          	add    $0x10,%rax
ffffffff80032299:	48 8d 0d e8 7a 07 00 	lea    0x77ae8(%rip),%rcx        # ffffffff800a9d88 <STR_DECO_RN.lto_priv.1>
ffffffff800322a0:	48 89 ce             	mov    %rcx,%rsi
ffffffff800322a3:	48 89 c7             	mov    %rax,%rdi
ffffffff800322a6:	e8 c4 cc ff ff       	call   ffffffff8002ef6f <ZydisStringAppendShortCase.lto_priv.1>
ffffffff800322ab:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%rbp)
ffffffff800322b1:	8b 85 74 ff ff ff    	mov    -0x8c(%rbp),%eax
ffffffff800322b7:	85 c0                	test   %eax,%eax
ffffffff800322b9:	0f 89 bb 01 00 00    	jns    ffffffff8003247a <ZydisFormatterBasePrintDecorator+0xdfc>
ffffffff800322bf:	8b 85 74 ff ff ff    	mov    -0x8c(%rbp),%eax
ffffffff800322c5:	e9 a0 09 00 00       	jmp    ffffffff80032c6a <ZydisFormatterBasePrintDecorator+0x15ec>
ffffffff800322ca:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
ffffffff800322d1:	0f b6 00             	movzbl (%rax),%eax
ffffffff800322d4:	84 c0                	test   %al,%al
ffffffff800322d6:	74 38                	je     ffffffff80032310 <ZydisFormatterBasePrintDecorator+0xc92>
ffffffff800322d8:	48 8d 15 21 de 00 00 	lea    0xde21(%rip),%rdx        # ffffffff80040100 <TOK_DATA_DECO_RD.lto_priv.1>
ffffffff800322df:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
ffffffff800322e6:	48 89 d6             	mov    %rdx,%rsi
ffffffff800322e9:	48 89 c7             	mov    %rax,%rdi
ffffffff800322ec:	e8 8b d0 ff ff       	call   ffffffff8002f37c <ZydisFormatterBufferAppendPredefined.lto_priv.1>
ffffffff800322f1:	89 85 78 ff ff ff    	mov    %eax,-0x88(%rbp)
ffffffff800322f7:	8b 85 78 ff ff ff    	mov    -0x88(%rbp),%eax
ffffffff800322fd:	85 c0                	test   %eax,%eax
ffffffff800322ff:	0f 89 7b 01 00 00    	jns    ffffffff80032480 <ZydisFormatterBasePrintDecorator+0xe02>
ffffffff80032305:	8b 85 78 ff ff ff    	mov    -0x88(%rbp),%eax
ffffffff8003230b:	e9 5a 09 00 00       	jmp    ffffffff80032c6a <ZydisFormatterBasePrintDecorator+0x15ec>
ffffffff80032310:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
ffffffff80032317:	8b 40 44             	mov    0x44(%rax),%eax
ffffffff8003231a:	89 c2                	mov    %eax,%edx
ffffffff8003231c:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
ffffffff80032323:	48 83 c0 10          	add    $0x10,%rax
ffffffff80032327:	48 8d 0d 2a 7a 07 00 	lea    0x77a2a(%rip),%rcx        # ffffffff800a9d58 <STR_DECO_RD.lto_priv.1>
ffffffff8003232e:	48 89 ce             	mov    %rcx,%rsi
ffffffff80032331:	48 89 c7             	mov    %rax,%rdi
ffffffff80032334:	e8 36 cc ff ff       	call   ffffffff8002ef6f <ZydisStringAppendShortCase.lto_priv.1>
ffffffff80032339:	89 85 7c ff ff ff    	mov    %eax,-0x84(%rbp)
ffffffff8003233f:	8b 85 7c ff ff ff    	mov    -0x84(%rbp),%eax
ffffffff80032345:	85 c0                	test   %eax,%eax
ffffffff80032347:	0f 89 33 01 00 00    	jns    ffffffff80032480 <ZydisFormatterBasePrintDecorator+0xe02>
ffffffff8003234d:	8b 85 7c ff ff ff    	mov    -0x84(%rbp),%eax
ffffffff80032353:	e9 12 09 00 00       	jmp    ffffffff80032c6a <ZydisFormatterBasePrintDecorator+0x15ec>
ffffffff80032358:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
ffffffff8003235f:	0f b6 00             	movzbl (%rax),%eax
ffffffff80032362:	84 c0                	test   %al,%al
ffffffff80032364:	74 2f                	je     ffffffff80032395 <ZydisFormatterBasePrintDecorator+0xd17>
ffffffff80032366:	48 8d 15 13 de 00 00 	lea    0xde13(%rip),%rdx        # ffffffff80040180 <TOK_DATA_DECO_RU.lto_priv.1>
ffffffff8003236d:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
ffffffff80032374:	48 89 d6             	mov    %rdx,%rsi
ffffffff80032377:	48 89 c7             	mov    %rax,%rdi
ffffffff8003237a:	e8 fd cf ff ff       	call   ffffffff8002f37c <ZydisFormatterBufferAppendPredefined.lto_priv.1>
ffffffff8003237f:	89 45 80             	mov    %eax,-0x80(%rbp)
ffffffff80032382:	8b 45 80             	mov    -0x80(%rbp),%eax
ffffffff80032385:	85 c0                	test   %eax,%eax
ffffffff80032387:	0f 89 f9 00 00 00    	jns    ffffffff80032486 <ZydisFormatterBasePrintDecorator+0xe08>
ffffffff8003238d:	8b 45 80             	mov    -0x80(%rbp),%eax
ffffffff80032390:	e9 d5 08 00 00       	jmp    ffffffff80032c6a <ZydisFormatterBasePrintDecorator+0x15ec>
ffffffff80032395:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
ffffffff8003239c:	8b 40 44             	mov    0x44(%rax),%eax
ffffffff8003239f:	89 c2                	mov    %eax,%edx
ffffffff800323a1:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
ffffffff800323a8:	48 83 c0 10          	add    $0x10,%rax
ffffffff800323ac:	48 8d 0d 05 7a 07 00 	lea    0x77a05(%rip),%rcx        # ffffffff800a9db8 <STR_DECO_RU.lto_priv.1>
ffffffff800323b3:	48 89 ce             	mov    %rcx,%rsi
ffffffff800323b6:	48 89 c7             	mov    %rax,%rdi
ffffffff800323b9:	e8 b1 cb ff ff       	call   ffffffff8002ef6f <ZydisStringAppendShortCase.lto_priv.1>
ffffffff800323be:	89 45 84             	mov    %eax,-0x7c(%rbp)
ffffffff800323c1:	8b 45 84             	mov    -0x7c(%rbp),%eax
ffffffff800323c4:	85 c0                	test   %eax,%eax
ffffffff800323c6:	0f 89 ba 00 00 00    	jns    ffffffff80032486 <ZydisFormatterBasePrintDecorator+0xe08>
ffffffff800323cc:	8b 45 84             	mov    -0x7c(%rbp),%eax
ffffffff800323cf:	e9 96 08 00 00       	jmp    ffffffff80032c6a <ZydisFormatterBasePrintDecorator+0x15ec>
ffffffff800323d4:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
ffffffff800323db:	0f b6 00             	movzbl (%rax),%eax
ffffffff800323de:	84 c0                	test   %al,%al
ffffffff800323e0:	74 2f                	je     ffffffff80032411 <ZydisFormatterBasePrintDecorator+0xd93>
ffffffff800323e2:	48 8d 15 d7 dd 00 00 	lea    0xddd7(%rip),%rdx        # ffffffff800401c0 <TOK_DATA_DECO_RZ.lto_priv.1>
ffffffff800323e9:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
ffffffff800323f0:	48 89 d6             	mov    %rdx,%rsi
ffffffff800323f3:	48 89 c7             	mov    %rax,%rdi
ffffffff800323f6:	e8 81 cf ff ff       	call   ffffffff8002f37c <ZydisFormatterBufferAppendPredefined.lto_priv.1>
ffffffff800323fb:	89 45 88             	mov    %eax,-0x78(%rbp)
ffffffff800323fe:	8b 45 88             	mov    -0x78(%rbp),%eax
ffffffff80032401:	85 c0                	test   %eax,%eax
ffffffff80032403:	0f 89 83 00 00 00    	jns    ffffffff8003248c <ZydisFormatterBasePrintDecorator+0xe0e>
ffffffff80032409:	8b 45 88             	mov    -0x78(%rbp),%eax
ffffffff8003240c:	e9 59 08 00 00       	jmp    ffffffff80032c6a <ZydisFormatterBasePrintDecorator+0x15ec>
ffffffff80032411:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
ffffffff80032418:	8b 40 44             	mov    0x44(%rax),%eax
ffffffff8003241b:	89 c2                	mov    %eax,%edx
ffffffff8003241d:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
ffffffff80032424:	48 83 c0 10          	add    $0x10,%rax
ffffffff80032428:	48 8d 0d b9 79 07 00 	lea    0x779b9(%rip),%rcx        # ffffffff800a9de8 <STR_DECO_RZ.lto_priv.1>
ffffffff8003242f:	48 89 ce             	mov    %rcx,%rsi
ffffffff80032432:	48 89 c7             	mov    %rax,%rdi
ffffffff80032435:	e8 35 cb ff ff       	call   ffffffff8002ef6f <ZydisStringAppendShortCase.lto_priv.1>
ffffffff8003243a:	89 45 8c             	mov    %eax,-0x74(%rbp)
ffffffff8003243d:	8b 45 8c             	mov    -0x74(%rbp),%eax
ffffffff80032440:	85 c0                	test   %eax,%eax
ffffffff80032442:	79 48                	jns    ffffffff8003248c <ZydisFormatterBasePrintDecorator+0xe0e>
ffffffff80032444:	8b 45 8c             	mov    -0x74(%rbp),%eax
ffffffff80032447:	e9 1e 08 00 00       	jmp    ffffffff80032c6a <ZydisFormatterBasePrintDecorator+0x15ec>
ffffffff8003244c:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff80032451:	e9 14 08 00 00       	jmp    ffffffff80032c6a <ZydisFormatterBasePrintDecorator+0x15ec>
ffffffff80032456:	90                   	nop
ffffffff80032457:	e9 08 08 00 00       	jmp    ffffffff80032c64 <ZydisFormatterBasePrintDecorator+0x15e6>
ffffffff8003245c:	90                   	nop
ffffffff8003245d:	e9 02 08 00 00       	jmp    ffffffff80032c64 <ZydisFormatterBasePrintDecorator+0x15e6>
ffffffff80032462:	90                   	nop
ffffffff80032463:	e9 fc 07 00 00       	jmp    ffffffff80032c64 <ZydisFormatterBasePrintDecorator+0x15e6>
ffffffff80032468:	90                   	nop
ffffffff80032469:	e9 f6 07 00 00       	jmp    ffffffff80032c64 <ZydisFormatterBasePrintDecorator+0x15e6>
ffffffff8003246e:	90                   	nop
ffffffff8003246f:	e9 f0 07 00 00       	jmp    ffffffff80032c64 <ZydisFormatterBasePrintDecorator+0x15e6>
ffffffff80032474:	90                   	nop
ffffffff80032475:	e9 ea 07 00 00       	jmp    ffffffff80032c64 <ZydisFormatterBasePrintDecorator+0x15e6>
ffffffff8003247a:	90                   	nop
ffffffff8003247b:	e9 e4 07 00 00       	jmp    ffffffff80032c64 <ZydisFormatterBasePrintDecorator+0x15e6>
ffffffff80032480:	90                   	nop
ffffffff80032481:	e9 de 07 00 00       	jmp    ffffffff80032c64 <ZydisFormatterBasePrintDecorator+0x15e6>
ffffffff80032486:	90                   	nop
ffffffff80032487:	e9 d8 07 00 00       	jmp    ffffffff80032c64 <ZydisFormatterBasePrintDecorator+0x15e6>
ffffffff8003248c:	90                   	nop
ffffffff8003248d:	e9 d2 07 00 00       	jmp    ffffffff80032c64 <ZydisFormatterBasePrintDecorator+0x15e6>
ffffffff80032492:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
ffffffff80032499:	48 8b 00             	mov    (%rax),%rax
ffffffff8003249c:	0f b6 40 58          	movzbl 0x58(%rax),%eax
ffffffff800324a0:	84 c0                	test   %al,%al
ffffffff800324a2:	0f 84 b8 07 00 00    	je     ffffffff80032c60 <ZydisFormatterBasePrintDecorator+0x15e2>
ffffffff800324a8:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
ffffffff800324af:	48 8b 00             	mov    (%rax),%rax
ffffffff800324b2:	8b 40 4c             	mov    0x4c(%rax),%eax
ffffffff800324b5:	85 c0                	test   %eax,%eax
ffffffff800324b7:	0f 85 a3 07 00 00    	jne    ffffffff80032c60 <ZydisFormatterBasePrintDecorator+0x15e2>
ffffffff800324bd:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
ffffffff800324c4:	0f b6 00             	movzbl (%rax),%eax
ffffffff800324c7:	84 c0                	test   %al,%al
ffffffff800324c9:	74 2f                	je     ffffffff800324fa <ZydisFormatterBasePrintDecorator+0xe7c>
ffffffff800324cb:	48 8d 15 2e dd 00 00 	lea    0xdd2e(%rip),%rdx        # ffffffff80040200 <TOK_DATA_DECO_SAE.lto_priv.1>
ffffffff800324d2:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
ffffffff800324d9:	48 89 d6             	mov    %rdx,%rsi
ffffffff800324dc:	48 89 c7             	mov    %rax,%rdi
ffffffff800324df:	e8 98 ce ff ff       	call   ffffffff8002f37c <ZydisFormatterBufferAppendPredefined.lto_priv.1>
ffffffff800324e4:	89 45 90             	mov    %eax,-0x70(%rbp)
ffffffff800324e7:	8b 45 90             	mov    -0x70(%rbp),%eax
ffffffff800324ea:	85 c0                	test   %eax,%eax
ffffffff800324ec:	0f 89 6e 07 00 00    	jns    ffffffff80032c60 <ZydisFormatterBasePrintDecorator+0x15e2>
ffffffff800324f2:	8b 45 90             	mov    -0x70(%rbp),%eax
ffffffff800324f5:	e9 70 07 00 00       	jmp    ffffffff80032c6a <ZydisFormatterBasePrintDecorator+0x15ec>
ffffffff800324fa:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
ffffffff80032501:	8b 40 44             	mov    0x44(%rax),%eax
ffffffff80032504:	89 c2                	mov    %eax,%edx
ffffffff80032506:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
ffffffff8003250d:	48 83 c0 10          	add    $0x10,%rax
ffffffff80032511:	48 8d 0d 00 79 07 00 	lea    0x77900(%rip),%rcx        # ffffffff800a9e18 <STR_DECO_SAE.lto_priv.1>
ffffffff80032518:	48 89 ce             	mov    %rcx,%rsi
ffffffff8003251b:	48 89 c7             	mov    %rax,%rdi
ffffffff8003251e:	e8 4c ca ff ff       	call   ffffffff8002ef6f <ZydisStringAppendShortCase.lto_priv.1>
ffffffff80032523:	89 45 94             	mov    %eax,-0x6c(%rbp)
ffffffff80032526:	8b 45 94             	mov    -0x6c(%rbp),%eax
ffffffff80032529:	85 c0                	test   %eax,%eax
ffffffff8003252b:	0f 89 2f 07 00 00    	jns    ffffffff80032c60 <ZydisFormatterBasePrintDecorator+0x15e2>
ffffffff80032531:	8b 45 94             	mov    -0x6c(%rbp),%eax
ffffffff80032534:	e9 31 07 00 00       	jmp    ffffffff80032c6a <ZydisFormatterBasePrintDecorator+0x15ec>
ffffffff80032539:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
ffffffff80032540:	48 8b 00             	mov    (%rax),%rax
ffffffff80032543:	8b 40 50             	mov    0x50(%rax),%eax
ffffffff80032546:	83 f8 08             	cmp    $0x8,%eax
ffffffff80032549:	0f 87 7f 03 00 00    	ja     ffffffff800328ce <ZydisFormatterBasePrintDecorator+0x1250>
ffffffff8003254f:	89 c0                	mov    %eax,%eax
ffffffff80032551:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
ffffffff80032558:	00 
ffffffff80032559:	48 8d 05 78 e1 00 00 	lea    0xe178(%rip),%rax        # ffffffff800406d8 <TOK_DATA_SUB.lto_priv.1+0x84>
ffffffff80032560:	8b 04 02             	mov    (%rdx,%rax,1),%eax
ffffffff80032563:	48 98                	cltq   
ffffffff80032565:	48 8d 15 6c e1 00 00 	lea    0xe16c(%rip),%rdx        # ffffffff800406d8 <TOK_DATA_SUB.lto_priv.1+0x84>
ffffffff8003256c:	48 01 d0             	add    %rdx,%rax
ffffffff8003256f:	3e ff e0             	notrack jmp *%rax
ffffffff80032572:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
ffffffff80032579:	0f b6 00             	movzbl (%rax),%eax
ffffffff8003257c:	84 c0                	test   %al,%al
ffffffff8003257e:	74 2f                	je     ffffffff800325af <ZydisFormatterBasePrintDecorator+0xf31>
ffffffff80032580:	48 8d 15 d9 da 00 00 	lea    0xdad9(%rip),%rdx        # ffffffff80040060 <TOK_DATA_DECO_CDAB.lto_priv.1>
ffffffff80032587:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
ffffffff8003258e:	48 89 d6             	mov    %rdx,%rsi
ffffffff80032591:	48 89 c7             	mov    %rax,%rdi
ffffffff80032594:	e8 e3 cd ff ff       	call   ffffffff8002f37c <ZydisFormatterBufferAppendPredefined.lto_priv.1>
ffffffff80032599:	89 45 98             	mov    %eax,-0x68(%rbp)
ffffffff8003259c:	8b 45 98             	mov    -0x68(%rbp),%eax
ffffffff8003259f:	85 c0                	test   %eax,%eax
ffffffff800325a1:	0f 89 37 03 00 00    	jns    ffffffff800328de <ZydisFormatterBasePrintDecorator+0x1260>
ffffffff800325a7:	8b 45 98             	mov    -0x68(%rbp),%eax
ffffffff800325aa:	e9 bb 06 00 00       	jmp    ffffffff80032c6a <ZydisFormatterBasePrintDecorator+0x15ec>
ffffffff800325af:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
ffffffff800325b6:	8b 40 44             	mov    0x44(%rax),%eax
ffffffff800325b9:	89 c2                	mov    %eax,%edx
ffffffff800325bb:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
ffffffff800325c2:	48 83 c0 10          	add    $0x10,%rax
ffffffff800325c6:	48 8d 0d fb 76 07 00 	lea    0x776fb(%rip),%rcx        # ffffffff800a9cc8 <STR_DECO_CDAB.lto_priv.1>
ffffffff800325cd:	48 89 ce             	mov    %rcx,%rsi
ffffffff800325d0:	48 89 c7             	mov    %rax,%rdi
ffffffff800325d3:	e8 97 c9 ff ff       	call   ffffffff8002ef6f <ZydisStringAppendShortCase.lto_priv.1>
ffffffff800325d8:	89 45 9c             	mov    %eax,-0x64(%rbp)
ffffffff800325db:	8b 45 9c             	mov    -0x64(%rbp),%eax
ffffffff800325de:	85 c0                	test   %eax,%eax
ffffffff800325e0:	0f 89 f8 02 00 00    	jns    ffffffff800328de <ZydisFormatterBasePrintDecorator+0x1260>
ffffffff800325e6:	8b 45 9c             	mov    -0x64(%rbp),%eax
ffffffff800325e9:	e9 7c 06 00 00       	jmp    ffffffff80032c6a <ZydisFormatterBasePrintDecorator+0x15ec>
ffffffff800325ee:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
ffffffff800325f5:	0f b6 00             	movzbl (%rax),%eax
ffffffff800325f8:	84 c0                	test   %al,%al
ffffffff800325fa:	74 2f                	je     ffffffff8003262b <ZydisFormatterBasePrintDecorator+0xfad>
ffffffff800325fc:	48 8d 15 ed d9 00 00 	lea    0xd9ed(%rip),%rdx        # ffffffff8003fff0 <TOK_DATA_DECO_BADC.lto_priv.1>
ffffffff80032603:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
ffffffff8003260a:	48 89 d6             	mov    %rdx,%rsi
ffffffff8003260d:	48 89 c7             	mov    %rax,%rdi
ffffffff80032610:	e8 67 cd ff ff       	call   ffffffff8002f37c <ZydisFormatterBufferAppendPredefined.lto_priv.1>
ffffffff80032615:	89 45 a0             	mov    %eax,-0x60(%rbp)
ffffffff80032618:	8b 45 a0             	mov    -0x60(%rbp),%eax
ffffffff8003261b:	85 c0                	test   %eax,%eax
ffffffff8003261d:	0f 89 c1 02 00 00    	jns    ffffffff800328e4 <ZydisFormatterBasePrintDecorator+0x1266>
ffffffff80032623:	8b 45 a0             	mov    -0x60(%rbp),%eax
ffffffff80032626:	e9 3f 06 00 00       	jmp    ffffffff80032c6a <ZydisFormatterBasePrintDecorator+0x15ec>
ffffffff8003262b:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
ffffffff80032632:	8b 40 44             	mov    0x44(%rax),%eax
ffffffff80032635:	89 c2                	mov    %eax,%edx
ffffffff80032637:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
ffffffff8003263e:	48 83 c0 10          	add    $0x10,%rax
ffffffff80032642:	48 8d 0d 1f 76 07 00 	lea    0x7761f(%rip),%rcx        # ffffffff800a9c68 <STR_DECO_BADC.lto_priv.1>
ffffffff80032649:	48 89 ce             	mov    %rcx,%rsi
ffffffff8003264c:	48 89 c7             	mov    %rax,%rdi
ffffffff8003264f:	e8 1b c9 ff ff       	call   ffffffff8002ef6f <ZydisStringAppendShortCase.lto_priv.1>
ffffffff80032654:	89 45 a4             	mov    %eax,-0x5c(%rbp)
ffffffff80032657:	8b 45 a4             	mov    -0x5c(%rbp),%eax
ffffffff8003265a:	85 c0                	test   %eax,%eax
ffffffff8003265c:	0f 89 82 02 00 00    	jns    ffffffff800328e4 <ZydisFormatterBasePrintDecorator+0x1266>
ffffffff80032662:	8b 45 a4             	mov    -0x5c(%rbp),%eax
ffffffff80032665:	e9 00 06 00 00       	jmp    ffffffff80032c6a <ZydisFormatterBasePrintDecorator+0x15ec>
ffffffff8003266a:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
ffffffff80032671:	0f b6 00             	movzbl (%rax),%eax
ffffffff80032674:	84 c0                	test   %al,%al
ffffffff80032676:	74 2f                	je     ffffffff800326a7 <ZydisFormatterBasePrintDecorator+0x1029>
ffffffff80032678:	48 8d 15 01 da 00 00 	lea    0xda01(%rip),%rdx        # ffffffff80040080 <TOK_DATA_DECO_DACB.lto_priv.1>
ffffffff8003267f:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
ffffffff80032686:	48 89 d6             	mov    %rdx,%rsi
ffffffff80032689:	48 89 c7             	mov    %rax,%rdi
ffffffff8003268c:	e8 eb cc ff ff       	call   ffffffff8002f37c <ZydisFormatterBufferAppendPredefined.lto_priv.1>
ffffffff80032691:	89 45 a8             	mov    %eax,-0x58(%rbp)
ffffffff80032694:	8b 45 a8             	mov    -0x58(%rbp),%eax
ffffffff80032697:	85 c0                	test   %eax,%eax
ffffffff80032699:	0f 89 4b 02 00 00    	jns    ffffffff800328ea <ZydisFormatterBasePrintDecorator+0x126c>
ffffffff8003269f:	8b 45 a8             	mov    -0x58(%rbp),%eax
ffffffff800326a2:	e9 c3 05 00 00       	jmp    ffffffff80032c6a <ZydisFormatterBasePrintDecorator+0x15ec>
ffffffff800326a7:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
ffffffff800326ae:	8b 40 44             	mov    0x44(%rax),%eax
ffffffff800326b1:	89 c2                	mov    %eax,%edx
ffffffff800326b3:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
ffffffff800326ba:	48 83 c0 10          	add    $0x10,%rax
ffffffff800326be:	48 8d 0d 1b 76 07 00 	lea    0x7761b(%rip),%rcx        # ffffffff800a9ce0 <STR_DECO_DACB.lto_priv.1>
ffffffff800326c5:	48 89 ce             	mov    %rcx,%rsi
ffffffff800326c8:	48 89 c7             	mov    %rax,%rdi
ffffffff800326cb:	e8 9f c8 ff ff       	call   ffffffff8002ef6f <ZydisStringAppendShortCase.lto_priv.1>
ffffffff800326d0:	89 45 ac             	mov    %eax,-0x54(%rbp)
ffffffff800326d3:	8b 45 ac             	mov    -0x54(%rbp),%eax
ffffffff800326d6:	85 c0                	test   %eax,%eax
ffffffff800326d8:	0f 89 0c 02 00 00    	jns    ffffffff800328ea <ZydisFormatterBasePrintDecorator+0x126c>
ffffffff800326de:	8b 45 ac             	mov    -0x54(%rbp),%eax
ffffffff800326e1:	e9 84 05 00 00       	jmp    ffffffff80032c6a <ZydisFormatterBasePrintDecorator+0x15ec>
ffffffff800326e6:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
ffffffff800326ed:	0f b6 00             	movzbl (%rax),%eax
ffffffff800326f0:	84 c0                	test   %al,%al
ffffffff800326f2:	74 2f                	je     ffffffff80032723 <ZydisFormatterBasePrintDecorator+0x10a5>
ffffffff800326f4:	48 8d 15 d5 d8 00 00 	lea    0xd8d5(%rip),%rdx        # ffffffff8003ffd0 <TOK_DATA_DECO_AAAA.lto_priv.1>
ffffffff800326fb:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
ffffffff80032702:	48 89 d6             	mov    %rdx,%rsi
ffffffff80032705:	48 89 c7             	mov    %rax,%rdi
ffffffff80032708:	e8 6f cc ff ff       	call   ffffffff8002f37c <ZydisFormatterBufferAppendPredefined.lto_priv.1>
ffffffff8003270d:	89 45 b0             	mov    %eax,-0x50(%rbp)
ffffffff80032710:	8b 45 b0             	mov    -0x50(%rbp),%eax
ffffffff80032713:	85 c0                	test   %eax,%eax
ffffffff80032715:	0f 89 d5 01 00 00    	jns    ffffffff800328f0 <ZydisFormatterBasePrintDecorator+0x1272>
ffffffff8003271b:	8b 45 b0             	mov    -0x50(%rbp),%eax
ffffffff8003271e:	e9 47 05 00 00       	jmp    ffffffff80032c6a <ZydisFormatterBasePrintDecorator+0x15ec>
ffffffff80032723:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
ffffffff8003272a:	8b 40 44             	mov    0x44(%rax),%eax
ffffffff8003272d:	89 c2                	mov    %eax,%edx
ffffffff8003272f:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
ffffffff80032736:	48 83 c0 10          	add    $0x10,%rax
ffffffff8003273a:	48 8d 0d 0f 75 07 00 	lea    0x7750f(%rip),%rcx        # ffffffff800a9c50 <STR_DECO_AAAA.lto_priv.1>
ffffffff80032741:	48 89 ce             	mov    %rcx,%rsi
ffffffff80032744:	48 89 c7             	mov    %rax,%rdi
ffffffff80032747:	e8 23 c8 ff ff       	call   ffffffff8002ef6f <ZydisStringAppendShortCase.lto_priv.1>
ffffffff8003274c:	89 45 b4             	mov    %eax,-0x4c(%rbp)
ffffffff8003274f:	8b 45 b4             	mov    -0x4c(%rbp),%eax
ffffffff80032752:	85 c0                	test   %eax,%eax
ffffffff80032754:	0f 89 96 01 00 00    	jns    ffffffff800328f0 <ZydisFormatterBasePrintDecorator+0x1272>
ffffffff8003275a:	8b 45 b4             	mov    -0x4c(%rbp),%eax
ffffffff8003275d:	e9 08 05 00 00       	jmp    ffffffff80032c6a <ZydisFormatterBasePrintDecorator+0x15ec>
ffffffff80032762:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
ffffffff80032769:	0f b6 00             	movzbl (%rax),%eax
ffffffff8003276c:	84 c0                	test   %al,%al
ffffffff8003276e:	74 2f                	je     ffffffff8003279f <ZydisFormatterBasePrintDecorator+0x1121>
ffffffff80032770:	48 8d 15 99 d8 00 00 	lea    0xd899(%rip),%rdx        # ffffffff80040010 <TOK_DATA_DECO_BBBB.lto_priv.1>
ffffffff80032777:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
ffffffff8003277e:	48 89 d6             	mov    %rdx,%rsi
ffffffff80032781:	48 89 c7             	mov    %rax,%rdi
ffffffff80032784:	e8 f3 cb ff ff       	call   ffffffff8002f37c <ZydisFormatterBufferAppendPredefined.lto_priv.1>
ffffffff80032789:	89 45 b8             	mov    %eax,-0x48(%rbp)
ffffffff8003278c:	8b 45 b8             	mov    -0x48(%rbp),%eax
ffffffff8003278f:	85 c0                	test   %eax,%eax
ffffffff80032791:	0f 89 5f 01 00 00    	jns    ffffffff800328f6 <ZydisFormatterBasePrintDecorator+0x1278>
ffffffff80032797:	8b 45 b8             	mov    -0x48(%rbp),%eax
ffffffff8003279a:	e9 cb 04 00 00       	jmp    ffffffff80032c6a <ZydisFormatterBasePrintDecorator+0x15ec>
ffffffff8003279f:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
ffffffff800327a6:	8b 40 44             	mov    0x44(%rax),%eax
ffffffff800327a9:	89 c2                	mov    %eax,%edx
ffffffff800327ab:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
ffffffff800327b2:	48 83 c0 10          	add    $0x10,%rax
ffffffff800327b6:	48 8d 0d c3 74 07 00 	lea    0x774c3(%rip),%rcx        # ffffffff800a9c80 <STR_DECO_BBBB.lto_priv.1>
ffffffff800327bd:	48 89 ce             	mov    %rcx,%rsi
ffffffff800327c0:	48 89 c7             	mov    %rax,%rdi
ffffffff800327c3:	e8 a7 c7 ff ff       	call   ffffffff8002ef6f <ZydisStringAppendShortCase.lto_priv.1>
ffffffff800327c8:	89 45 bc             	mov    %eax,-0x44(%rbp)
ffffffff800327cb:	8b 45 bc             	mov    -0x44(%rbp),%eax
ffffffff800327ce:	85 c0                	test   %eax,%eax
ffffffff800327d0:	0f 89 20 01 00 00    	jns    ffffffff800328f6 <ZydisFormatterBasePrintDecorator+0x1278>
ffffffff800327d6:	8b 45 bc             	mov    -0x44(%rbp),%eax
ffffffff800327d9:	e9 8c 04 00 00       	jmp    ffffffff80032c6a <ZydisFormatterBasePrintDecorator+0x15ec>
ffffffff800327de:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
ffffffff800327e5:	0f b6 00             	movzbl (%rax),%eax
ffffffff800327e8:	84 c0                	test   %al,%al
ffffffff800327ea:	74 2f                	je     ffffffff8003281b <ZydisFormatterBasePrintDecorator+0x119d>
ffffffff800327ec:	48 8d 15 4d d8 00 00 	lea    0xd84d(%rip),%rdx        # ffffffff80040040 <TOK_DATA_DECO_CCCC.lto_priv.1>
ffffffff800327f3:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
ffffffff800327fa:	48 89 d6             	mov    %rdx,%rsi
ffffffff800327fd:	48 89 c7             	mov    %rax,%rdi
ffffffff80032800:	e8 77 cb ff ff       	call   ffffffff8002f37c <ZydisFormatterBufferAppendPredefined.lto_priv.1>
ffffffff80032805:	89 45 c0             	mov    %eax,-0x40(%rbp)
ffffffff80032808:	8b 45 c0             	mov    -0x40(%rbp),%eax
ffffffff8003280b:	85 c0                	test   %eax,%eax
ffffffff8003280d:	0f 89 e9 00 00 00    	jns    ffffffff800328fc <ZydisFormatterBasePrintDecorator+0x127e>
ffffffff80032813:	8b 45 c0             	mov    -0x40(%rbp),%eax
ffffffff80032816:	e9 4f 04 00 00       	jmp    ffffffff80032c6a <ZydisFormatterBasePrintDecorator+0x15ec>
ffffffff8003281b:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
ffffffff80032822:	8b 40 44             	mov    0x44(%rax),%eax
ffffffff80032825:	89 c2                	mov    %eax,%edx
ffffffff80032827:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
ffffffff8003282e:	48 83 c0 10          	add    $0x10,%rax
ffffffff80032832:	48 8d 0d 77 74 07 00 	lea    0x77477(%rip),%rcx        # ffffffff800a9cb0 <STR_DECO_CCCC.lto_priv.1>
ffffffff80032839:	48 89 ce             	mov    %rcx,%rsi
ffffffff8003283c:	48 89 c7             	mov    %rax,%rdi
ffffffff8003283f:	e8 2b c7 ff ff       	call   ffffffff8002ef6f <ZydisStringAppendShortCase.lto_priv.1>
ffffffff80032844:	89 45 c4             	mov    %eax,-0x3c(%rbp)
ffffffff80032847:	8b 45 c4             	mov    -0x3c(%rbp),%eax
ffffffff8003284a:	85 c0                	test   %eax,%eax
ffffffff8003284c:	0f 89 aa 00 00 00    	jns    ffffffff800328fc <ZydisFormatterBasePrintDecorator+0x127e>
ffffffff80032852:	8b 45 c4             	mov    -0x3c(%rbp),%eax
ffffffff80032855:	e9 10 04 00 00       	jmp    ffffffff80032c6a <ZydisFormatterBasePrintDecorator+0x15ec>
ffffffff8003285a:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
ffffffff80032861:	0f b6 00             	movzbl (%rax),%eax
ffffffff80032864:	84 c0                	test   %al,%al
ffffffff80032866:	74 2b                	je     ffffffff80032893 <ZydisFormatterBasePrintDecorator+0x1215>
ffffffff80032868:	48 8d 15 31 d8 00 00 	lea    0xd831(%rip),%rdx        # ffffffff800400a0 <TOK_DATA_DECO_DDDD.lto_priv.1>
ffffffff8003286f:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
ffffffff80032876:	48 89 d6             	mov    %rdx,%rsi
ffffffff80032879:	48 89 c7             	mov    %rax,%rdi
ffffffff8003287c:	e8 fb ca ff ff       	call   ffffffff8002f37c <ZydisFormatterBufferAppendPredefined.lto_priv.1>
ffffffff80032881:	89 45 c8             	mov    %eax,-0x38(%rbp)
ffffffff80032884:	8b 45 c8             	mov    -0x38(%rbp),%eax
ffffffff80032887:	85 c0                	test   %eax,%eax
ffffffff80032889:	79 77                	jns    ffffffff80032902 <ZydisFormatterBasePrintDecorator+0x1284>
ffffffff8003288b:	8b 45 c8             	mov    -0x38(%rbp),%eax
ffffffff8003288e:	e9 d7 03 00 00       	jmp    ffffffff80032c6a <ZydisFormatterBasePrintDecorator+0x15ec>
ffffffff80032893:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
ffffffff8003289a:	8b 40 44             	mov    0x44(%rax),%eax
ffffffff8003289d:	89 c2                	mov    %eax,%edx
ffffffff8003289f:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
ffffffff800328a6:	48 83 c0 10          	add    $0x10,%rax
ffffffff800328aa:	48 8d 0d 47 74 07 00 	lea    0x77447(%rip),%rcx        # ffffffff800a9cf8 <STR_DECO_DDDD.lto_priv.1>
ffffffff800328b1:	48 89 ce             	mov    %rcx,%rsi
ffffffff800328b4:	48 89 c7             	mov    %rax,%rdi
ffffffff800328b7:	e8 b3 c6 ff ff       	call   ffffffff8002ef6f <ZydisStringAppendShortCase.lto_priv.1>
ffffffff800328bc:	89 45 cc             	mov    %eax,-0x34(%rbp)
ffffffff800328bf:	8b 45 cc             	mov    -0x34(%rbp),%eax
ffffffff800328c2:	85 c0                	test   %eax,%eax
ffffffff800328c4:	79 3c                	jns    ffffffff80032902 <ZydisFormatterBasePrintDecorator+0x1284>
ffffffff800328c6:	8b 45 cc             	mov    -0x34(%rbp),%eax
ffffffff800328c9:	e9 9c 03 00 00       	jmp    ffffffff80032c6a <ZydisFormatterBasePrintDecorator+0x15ec>
ffffffff800328ce:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff800328d3:	e9 92 03 00 00       	jmp    ffffffff80032c6a <ZydisFormatterBasePrintDecorator+0x15ec>
ffffffff800328d8:	90                   	nop
ffffffff800328d9:	e9 86 03 00 00       	jmp    ffffffff80032c64 <ZydisFormatterBasePrintDecorator+0x15e6>
ffffffff800328de:	90                   	nop
ffffffff800328df:	e9 80 03 00 00       	jmp    ffffffff80032c64 <ZydisFormatterBasePrintDecorator+0x15e6>
ffffffff800328e4:	90                   	nop
ffffffff800328e5:	e9 7a 03 00 00       	jmp    ffffffff80032c64 <ZydisFormatterBasePrintDecorator+0x15e6>
ffffffff800328ea:	90                   	nop
ffffffff800328eb:	e9 74 03 00 00       	jmp    ffffffff80032c64 <ZydisFormatterBasePrintDecorator+0x15e6>
ffffffff800328f0:	90                   	nop
ffffffff800328f1:	e9 6e 03 00 00       	jmp    ffffffff80032c64 <ZydisFormatterBasePrintDecorator+0x15e6>
ffffffff800328f6:	90                   	nop
ffffffff800328f7:	e9 68 03 00 00       	jmp    ffffffff80032c64 <ZydisFormatterBasePrintDecorator+0x15e6>
ffffffff800328fc:	90                   	nop
ffffffff800328fd:	e9 62 03 00 00       	jmp    ffffffff80032c64 <ZydisFormatterBasePrintDecorator+0x15e6>
ffffffff80032902:	90                   	nop
ffffffff80032903:	e9 5c 03 00 00       	jmp    ffffffff80032c64 <ZydisFormatterBasePrintDecorator+0x15e6>
ffffffff80032908:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
ffffffff8003290f:	48 8b 00             	mov    (%rax),%rax
ffffffff80032912:	8b 40 54             	mov    0x54(%rax),%eax
ffffffff80032915:	83 f8 05             	cmp    $0x5,%eax
ffffffff80032918:	0f 87 87 02 00 00    	ja     ffffffff80032ba5 <ZydisFormatterBasePrintDecorator+0x1527>
ffffffff8003291e:	89 c0                	mov    %eax,%eax
ffffffff80032920:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
ffffffff80032927:	00 
ffffffff80032928:	48 8d 05 cd dd 00 00 	lea    0xddcd(%rip),%rax        # ffffffff800406fc <TOK_DATA_SUB.lto_priv.1+0xa8>
ffffffff8003292f:	8b 04 02             	mov    (%rdx,%rax,1),%eax
ffffffff80032932:	48 98                	cltq   
ffffffff80032934:	48 8d 15 c1 dd 00 00 	lea    0xddc1(%rip),%rdx        # ffffffff800406fc <TOK_DATA_SUB.lto_priv.1+0xa8>
ffffffff8003293b:	48 01 d0             	add    %rdx,%rax
ffffffff8003293e:	3e ff e0             	notrack jmp *%rax
ffffffff80032941:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
ffffffff80032948:	0f b6 00             	movzbl (%rax),%eax
ffffffff8003294b:	84 c0                	test   %al,%al
ffffffff8003294d:	74 2f                	je     ffffffff8003297e <ZydisFormatterBasePrintDecorator+0x1300>
ffffffff8003294f:	48 8d 15 8a d7 00 00 	lea    0xd78a(%rip),%rdx        # ffffffff800400e0 <TOK_DATA_DECO_FLOAT16.lto_priv.1>
ffffffff80032956:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
ffffffff8003295d:	48 89 d6             	mov    %rdx,%rsi
ffffffff80032960:	48 89 c7             	mov    %rax,%rdi
ffffffff80032963:	e8 14 ca ff ff       	call   ffffffff8002f37c <ZydisFormatterBufferAppendPredefined.lto_priv.1>
ffffffff80032968:	89 45 d0             	mov    %eax,-0x30(%rbp)
ffffffff8003296b:	8b 45 d0             	mov    -0x30(%rbp),%eax
ffffffff8003296e:	85 c0                	test   %eax,%eax
ffffffff80032970:	0f 89 3f 02 00 00    	jns    ffffffff80032bb5 <ZydisFormatterBasePrintDecorator+0x1537>
ffffffff80032976:	8b 45 d0             	mov    -0x30(%rbp),%eax
ffffffff80032979:	e9 ec 02 00 00       	jmp    ffffffff80032c6a <ZydisFormatterBasePrintDecorator+0x15ec>
ffffffff8003297e:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
ffffffff80032985:	8b 40 44             	mov    0x44(%rax),%eax
ffffffff80032988:	89 c2                	mov    %eax,%edx
ffffffff8003298a:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
ffffffff80032991:	48 83 c0 10          	add    $0x10,%rax
ffffffff80032995:	48 8d 0d a4 73 07 00 	lea    0x773a4(%rip),%rcx        # ffffffff800a9d40 <STR_DECO_FLOAT16.lto_priv.1>
ffffffff8003299c:	48 89 ce             	mov    %rcx,%rsi
ffffffff8003299f:	48 89 c7             	mov    %rax,%rdi
ffffffff800329a2:	e8 c8 c5 ff ff       	call   ffffffff8002ef6f <ZydisStringAppendShortCase.lto_priv.1>
ffffffff800329a7:	89 45 d4             	mov    %eax,-0x2c(%rbp)
ffffffff800329aa:	8b 45 d4             	mov    -0x2c(%rbp),%eax
ffffffff800329ad:	85 c0                	test   %eax,%eax
ffffffff800329af:	0f 89 00 02 00 00    	jns    ffffffff80032bb5 <ZydisFormatterBasePrintDecorator+0x1537>
ffffffff800329b5:	8b 45 d4             	mov    -0x2c(%rbp),%eax
ffffffff800329b8:	e9 ad 02 00 00       	jmp    ffffffff80032c6a <ZydisFormatterBasePrintDecorator+0x15ec>
ffffffff800329bd:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
ffffffff800329c4:	0f b6 00             	movzbl (%rax),%eax
ffffffff800329c7:	84 c0                	test   %al,%al
ffffffff800329c9:	74 2f                	je     ffffffff800329fa <ZydisFormatterBasePrintDecorator+0x137c>
ffffffff800329cb:	48 8d 15 4e d8 00 00 	lea    0xd84e(%rip),%rdx        # ffffffff80040220 <TOK_DATA_DECO_SINT8.lto_priv.1>
ffffffff800329d2:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
ffffffff800329d9:	48 89 d6             	mov    %rdx,%rsi
ffffffff800329dc:	48 89 c7             	mov    %rax,%rdi
ffffffff800329df:	e8 98 c9 ff ff       	call   ffffffff8002f37c <ZydisFormatterBufferAppendPredefined.lto_priv.1>
ffffffff800329e4:	89 45 d8             	mov    %eax,-0x28(%rbp)
ffffffff800329e7:	8b 45 d8             	mov    -0x28(%rbp),%eax
ffffffff800329ea:	85 c0                	test   %eax,%eax
ffffffff800329ec:	0f 89 c9 01 00 00    	jns    ffffffff80032bbb <ZydisFormatterBasePrintDecorator+0x153d>
ffffffff800329f2:	8b 45 d8             	mov    -0x28(%rbp),%eax
ffffffff800329f5:	e9 70 02 00 00       	jmp    ffffffff80032c6a <ZydisFormatterBasePrintDecorator+0x15ec>
ffffffff800329fa:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
ffffffff80032a01:	8b 40 44             	mov    0x44(%rax),%eax
ffffffff80032a04:	89 c2                	mov    %eax,%edx
ffffffff80032a06:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
ffffffff80032a0d:	48 83 c0 10          	add    $0x10,%rax
ffffffff80032a11:	48 8d 0d 18 74 07 00 	lea    0x77418(%rip),%rcx        # ffffffff800a9e30 <STR_DECO_SINT8.lto_priv.1>
ffffffff80032a18:	48 89 ce             	mov    %rcx,%rsi
ffffffff80032a1b:	48 89 c7             	mov    %rax,%rdi
ffffffff80032a1e:	e8 4c c5 ff ff       	call   ffffffff8002ef6f <ZydisStringAppendShortCase.lto_priv.1>
ffffffff80032a23:	89 45 dc             	mov    %eax,-0x24(%rbp)
ffffffff80032a26:	8b 45 dc             	mov    -0x24(%rbp),%eax
ffffffff80032a29:	85 c0                	test   %eax,%eax
ffffffff80032a2b:	0f 89 8a 01 00 00    	jns    ffffffff80032bbb <ZydisFormatterBasePrintDecorator+0x153d>
ffffffff80032a31:	8b 45 dc             	mov    -0x24(%rbp),%eax
ffffffff80032a34:	e9 31 02 00 00       	jmp    ffffffff80032c6a <ZydisFormatterBasePrintDecorator+0x15ec>
ffffffff80032a39:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
ffffffff80032a40:	0f b6 00             	movzbl (%rax),%eax
ffffffff80032a43:	84 c0                	test   %al,%al
ffffffff80032a45:	74 2f                	je     ffffffff80032a76 <ZydisFormatterBasePrintDecorator+0x13f8>
ffffffff80032a47:	48 8d 15 12 d8 00 00 	lea    0xd812(%rip),%rdx        # ffffffff80040260 <TOK_DATA_DECO_UINT8.lto_priv.1>
ffffffff80032a4e:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
ffffffff80032a55:	48 89 d6             	mov    %rdx,%rsi
ffffffff80032a58:	48 89 c7             	mov    %rax,%rdi
ffffffff80032a5b:	e8 1c c9 ff ff       	call   ffffffff8002f37c <ZydisFormatterBufferAppendPredefined.lto_priv.1>
ffffffff80032a60:	89 45 e0             	mov    %eax,-0x20(%rbp)
ffffffff80032a63:	8b 45 e0             	mov    -0x20(%rbp),%eax
ffffffff80032a66:	85 c0                	test   %eax,%eax
ffffffff80032a68:	0f 89 53 01 00 00    	jns    ffffffff80032bc1 <ZydisFormatterBasePrintDecorator+0x1543>
ffffffff80032a6e:	8b 45 e0             	mov    -0x20(%rbp),%eax
ffffffff80032a71:	e9 f4 01 00 00       	jmp    ffffffff80032c6a <ZydisFormatterBasePrintDecorator+0x15ec>
ffffffff80032a76:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
ffffffff80032a7d:	8b 40 44             	mov    0x44(%rax),%eax
ffffffff80032a80:	89 c2                	mov    %eax,%edx
ffffffff80032a82:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
ffffffff80032a89:	48 83 c0 10          	add    $0x10,%rax
ffffffff80032a8d:	48 8d 0d cc 73 07 00 	lea    0x773cc(%rip),%rcx        # ffffffff800a9e60 <STR_DECO_UINT8.lto_priv.1>
ffffffff80032a94:	48 89 ce             	mov    %rcx,%rsi
ffffffff80032a97:	48 89 c7             	mov    %rax,%rdi
ffffffff80032a9a:	e8 d0 c4 ff ff       	call   ffffffff8002ef6f <ZydisStringAppendShortCase.lto_priv.1>
ffffffff80032a9f:	89 45 e4             	mov    %eax,-0x1c(%rbp)
ffffffff80032aa2:	8b 45 e4             	mov    -0x1c(%rbp),%eax
ffffffff80032aa5:	85 c0                	test   %eax,%eax
ffffffff80032aa7:	0f 89 14 01 00 00    	jns    ffffffff80032bc1 <ZydisFormatterBasePrintDecorator+0x1543>
ffffffff80032aad:	8b 45 e4             	mov    -0x1c(%rbp),%eax
ffffffff80032ab0:	e9 b5 01 00 00       	jmp    ffffffff80032c6a <ZydisFormatterBasePrintDecorator+0x15ec>
ffffffff80032ab5:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
ffffffff80032abc:	0f b6 00             	movzbl (%rax),%eax
ffffffff80032abf:	84 c0                	test   %al,%al
ffffffff80032ac1:	74 2f                	je     ffffffff80032af2 <ZydisFormatterBasePrintDecorator+0x1474>
ffffffff80032ac3:	48 8d 15 76 d7 00 00 	lea    0xd776(%rip),%rdx        # ffffffff80040240 <TOK_DATA_DECO_SINT16.lto_priv.1>
ffffffff80032aca:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
ffffffff80032ad1:	48 89 d6             	mov    %rdx,%rsi
ffffffff80032ad4:	48 89 c7             	mov    %rax,%rdi
ffffffff80032ad7:	e8 a0 c8 ff ff       	call   ffffffff8002f37c <ZydisFormatterBufferAppendPredefined.lto_priv.1>
ffffffff80032adc:	89 45 e8             	mov    %eax,-0x18(%rbp)
ffffffff80032adf:	8b 45 e8             	mov    -0x18(%rbp),%eax
ffffffff80032ae2:	85 c0                	test   %eax,%eax
ffffffff80032ae4:	0f 89 dd 00 00 00    	jns    ffffffff80032bc7 <ZydisFormatterBasePrintDecorator+0x1549>
ffffffff80032aea:	8b 45 e8             	mov    -0x18(%rbp),%eax
ffffffff80032aed:	e9 78 01 00 00       	jmp    ffffffff80032c6a <ZydisFormatterBasePrintDecorator+0x15ec>
ffffffff80032af2:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
ffffffff80032af9:	8b 40 44             	mov    0x44(%rax),%eax
ffffffff80032afc:	89 c2                	mov    %eax,%edx
ffffffff80032afe:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
ffffffff80032b05:	48 83 c0 10          	add    $0x10,%rax
ffffffff80032b09:	48 8d 0d 38 73 07 00 	lea    0x77338(%rip),%rcx        # ffffffff800a9e48 <STR_DECO_SINT16.lto_priv.1>
ffffffff80032b10:	48 89 ce             	mov    %rcx,%rsi
ffffffff80032b13:	48 89 c7             	mov    %rax,%rdi
ffffffff80032b16:	e8 54 c4 ff ff       	call   ffffffff8002ef6f <ZydisStringAppendShortCase.lto_priv.1>
ffffffff80032b1b:	89 45 ec             	mov    %eax,-0x14(%rbp)
ffffffff80032b1e:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff80032b21:	85 c0                	test   %eax,%eax
ffffffff80032b23:	0f 89 9e 00 00 00    	jns    ffffffff80032bc7 <ZydisFormatterBasePrintDecorator+0x1549>
ffffffff80032b29:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff80032b2c:	e9 39 01 00 00       	jmp    ffffffff80032c6a <ZydisFormatterBasePrintDecorator+0x15ec>
ffffffff80032b31:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
ffffffff80032b38:	0f b6 00             	movzbl (%rax),%eax
ffffffff80032b3b:	84 c0                	test   %al,%al
ffffffff80032b3d:	74 2b                	je     ffffffff80032b6a <ZydisFormatterBasePrintDecorator+0x14ec>
ffffffff80032b3f:	48 8d 15 3a d7 00 00 	lea    0xd73a(%rip),%rdx        # ffffffff80040280 <TOK_DATA_DECO_UINT16.lto_priv.1>
ffffffff80032b46:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
ffffffff80032b4d:	48 89 d6             	mov    %rdx,%rsi
ffffffff80032b50:	48 89 c7             	mov    %rax,%rdi
ffffffff80032b53:	e8 24 c8 ff ff       	call   ffffffff8002f37c <ZydisFormatterBufferAppendPredefined.lto_priv.1>
ffffffff80032b58:	89 45 f0             	mov    %eax,-0x10(%rbp)
ffffffff80032b5b:	8b 45 f0             	mov    -0x10(%rbp),%eax
ffffffff80032b5e:	85 c0                	test   %eax,%eax
ffffffff80032b60:	79 6b                	jns    ffffffff80032bcd <ZydisFormatterBasePrintDecorator+0x154f>
ffffffff80032b62:	8b 45 f0             	mov    -0x10(%rbp),%eax
ffffffff80032b65:	e9 00 01 00 00       	jmp    ffffffff80032c6a <ZydisFormatterBasePrintDecorator+0x15ec>
ffffffff80032b6a:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
ffffffff80032b71:	8b 40 44             	mov    0x44(%rax),%eax
ffffffff80032b74:	89 c2                	mov    %eax,%edx
ffffffff80032b76:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
ffffffff80032b7d:	48 83 c0 10          	add    $0x10,%rax
ffffffff80032b81:	48 8d 0d f0 72 07 00 	lea    0x772f0(%rip),%rcx        # ffffffff800a9e78 <STR_DECO_UINT16.lto_priv.1>
ffffffff80032b88:	48 89 ce             	mov    %rcx,%rsi
ffffffff80032b8b:	48 89 c7             	mov    %rax,%rdi
ffffffff80032b8e:	e8 dc c3 ff ff       	call   ffffffff8002ef6f <ZydisStringAppendShortCase.lto_priv.1>
ffffffff80032b93:	89 45 f4             	mov    %eax,-0xc(%rbp)
ffffffff80032b96:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff80032b99:	85 c0                	test   %eax,%eax
ffffffff80032b9b:	79 30                	jns    ffffffff80032bcd <ZydisFormatterBasePrintDecorator+0x154f>
ffffffff80032b9d:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff80032ba0:	e9 c5 00 00 00       	jmp    ffffffff80032c6a <ZydisFormatterBasePrintDecorator+0x15ec>
ffffffff80032ba5:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff80032baa:	e9 bb 00 00 00       	jmp    ffffffff80032c6a <ZydisFormatterBasePrintDecorator+0x15ec>
ffffffff80032baf:	90                   	nop
ffffffff80032bb0:	e9 af 00 00 00       	jmp    ffffffff80032c64 <ZydisFormatterBasePrintDecorator+0x15e6>
ffffffff80032bb5:	90                   	nop
ffffffff80032bb6:	e9 a9 00 00 00       	jmp    ffffffff80032c64 <ZydisFormatterBasePrintDecorator+0x15e6>
ffffffff80032bbb:	90                   	nop
ffffffff80032bbc:	e9 a3 00 00 00       	jmp    ffffffff80032c64 <ZydisFormatterBasePrintDecorator+0x15e6>
ffffffff80032bc1:	90                   	nop
ffffffff80032bc2:	e9 9d 00 00 00       	jmp    ffffffff80032c64 <ZydisFormatterBasePrintDecorator+0x15e6>
ffffffff80032bc7:	90                   	nop
ffffffff80032bc8:	e9 97 00 00 00       	jmp    ffffffff80032c64 <ZydisFormatterBasePrintDecorator+0x15e6>
ffffffff80032bcd:	90                   	nop
ffffffff80032bce:	e9 91 00 00 00       	jmp    ffffffff80032c64 <ZydisFormatterBasePrintDecorator+0x15e6>
ffffffff80032bd3:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
ffffffff80032bda:	48 8b 00             	mov    (%rax),%rax
ffffffff80032bdd:	0f b6 40 59          	movzbl 0x59(%rax),%eax
ffffffff80032be1:	84 c0                	test   %al,%al
ffffffff80032be3:	74 7e                	je     ffffffff80032c63 <ZydisFormatterBasePrintDecorator+0x15e5>
ffffffff80032be5:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
ffffffff80032bec:	0f b6 00             	movzbl (%rax),%eax
ffffffff80032bef:	84 c0                	test   %al,%al
ffffffff80032bf1:	74 28                	je     ffffffff80032c1b <ZydisFormatterBasePrintDecorator+0x159d>
ffffffff80032bf3:	48 8d 15 c6 d4 00 00 	lea    0xd4c6(%rip),%rdx        # ffffffff800400c0 <TOK_DATA_DECO_EH.lto_priv.1>
ffffffff80032bfa:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
ffffffff80032c01:	48 89 d6             	mov    %rdx,%rsi
ffffffff80032c04:	48 89 c7             	mov    %rax,%rdi
ffffffff80032c07:	e8 70 c7 ff ff       	call   ffffffff8002f37c <ZydisFormatterBufferAppendPredefined.lto_priv.1>
ffffffff80032c0c:	89 45 f8             	mov    %eax,-0x8(%rbp)
ffffffff80032c0f:	8b 45 f8             	mov    -0x8(%rbp),%eax
ffffffff80032c12:	85 c0                	test   %eax,%eax
ffffffff80032c14:	79 4d                	jns    ffffffff80032c63 <ZydisFormatterBasePrintDecorator+0x15e5>
ffffffff80032c16:	8b 45 f8             	mov    -0x8(%rbp),%eax
ffffffff80032c19:	eb 4f                	jmp    ffffffff80032c6a <ZydisFormatterBasePrintDecorator+0x15ec>
ffffffff80032c1b:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
ffffffff80032c22:	8b 40 44             	mov    0x44(%rax),%eax
ffffffff80032c25:	89 c2                	mov    %eax,%edx
ffffffff80032c27:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
ffffffff80032c2e:	48 83 c0 10          	add    $0x10,%rax
ffffffff80032c32:	48 8d 0d d7 70 07 00 	lea    0x770d7(%rip),%rcx        # ffffffff800a9d10 <STR_DECO_EH.lto_priv.1>
ffffffff80032c39:	48 89 ce             	mov    %rcx,%rsi
ffffffff80032c3c:	48 89 c7             	mov    %rax,%rdi
ffffffff80032c3f:	e8 2b c3 ff ff       	call   ffffffff8002ef6f <ZydisStringAppendShortCase.lto_priv.1>
ffffffff80032c44:	89 45 fc             	mov    %eax,-0x4(%rbp)
ffffffff80032c47:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff80032c4a:	85 c0                	test   %eax,%eax
ffffffff80032c4c:	79 15                	jns    ffffffff80032c63 <ZydisFormatterBasePrintDecorator+0x15e5>
ffffffff80032c4e:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff80032c51:	eb 17                	jmp    ffffffff80032c6a <ZydisFormatterBasePrintDecorator+0x15ec>
ffffffff80032c53:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff80032c58:	eb 10                	jmp    ffffffff80032c6a <ZydisFormatterBasePrintDecorator+0x15ec>
ffffffff80032c5a:	90                   	nop
ffffffff80032c5b:	eb 07                	jmp    ffffffff80032c64 <ZydisFormatterBasePrintDecorator+0x15e6>
ffffffff80032c5d:	90                   	nop
ffffffff80032c5e:	eb 04                	jmp    ffffffff80032c64 <ZydisFormatterBasePrintDecorator+0x15e6>
ffffffff80032c60:	90                   	nop
ffffffff80032c61:	eb 01                	jmp    ffffffff80032c64 <ZydisFormatterBasePrintDecorator+0x15e6>
ffffffff80032c63:	90                   	nop
ffffffff80032c64:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff80032c69:	90                   	nop
ffffffff80032c6a:	c9                   	leave  
ffffffff80032c6b:	c3                   	ret    

ffffffff80032c6c <ZYAN_MEMCPY.lto_priv.10>:
ffffffff80032c6c:	55                   	push   %rbp
ffffffff80032c6d:	48 89 e5             	mov    %rsp,%rbp
ffffffff80032c70:	48 83 ec 28          	sub    $0x28,%rsp
ffffffff80032c74:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff80032c78:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
ffffffff80032c7c:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
ffffffff80032c80:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80032c84:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff80032c88:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80032c8c:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff80032c90:	eb 1d                	jmp    ffffffff80032caf <ZYAN_MEMCPY.lto_priv.10+0x43>
ffffffff80032c92:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff80032c96:	48 8d 42 01          	lea    0x1(%rdx),%rax
ffffffff80032c9a:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff80032c9e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80032ca2:	48 8d 48 01          	lea    0x1(%rax),%rcx
ffffffff80032ca6:	48 89 4d f8          	mov    %rcx,-0x8(%rbp)
ffffffff80032caa:	0f b6 12             	movzbl (%rdx),%edx
ffffffff80032cad:	88 10                	mov    %dl,(%rax)
ffffffff80032caf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80032cb3:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
ffffffff80032cb7:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
ffffffff80032cbb:	48 85 c0             	test   %rax,%rax
ffffffff80032cbe:	75 d2                	jne    ffffffff80032c92 <ZYAN_MEMCPY.lto_priv.10+0x26>
ffffffff80032cc0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80032cc4:	c9                   	leave  
ffffffff80032cc5:	c3                   	ret    

ffffffff80032cc6 <ZyanAbsI64.lto_priv.3>:
ffffffff80032cc6:	55                   	push   %rbp
ffffffff80032cc7:	48 89 e5             	mov    %rsp,%rbp
ffffffff80032cca:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80032cce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff80032cd2:	48 b8 00 00 00 00 00 	movabs $0x8000000000000000,%rax
ffffffff80032cd9:	00 00 80 
ffffffff80032cdc:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
ffffffff80032ce0:	75 0c                	jne    ffffffff80032cee <ZyanAbsI64.lto_priv.3+0x28>
ffffffff80032ce2:	48 b8 00 00 00 00 00 	movabs $0x8000000000000000,%rax
ffffffff80032ce9:	00 00 80 
ffffffff80032cec:	eb 0c                	jmp    ffffffff80032cfa <ZyanAbsI64.lto_priv.3+0x34>
ffffffff80032cee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80032cf2:	48 99                	cqto   
ffffffff80032cf4:	48 31 d0             	xor    %rdx,%rax
ffffffff80032cf7:	48 29 d0             	sub    %rdx,%rax
ffffffff80032cfa:	c9                   	leave  
ffffffff80032cfb:	c3                   	ret    

ffffffff80032cfc <ZydisStringAppend.lto_priv.3>:
ffffffff80032cfc:	55                   	push   %rbp
ffffffff80032cfd:	48 89 e5             	mov    %rsp,%rbp
ffffffff80032d00:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff80032d04:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff80032d08:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff80032d0c:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff80032d11:	74 05                	je     ffffffff80032d18 <ZydisStringAppend.lto_priv.3+0x1c>
ffffffff80032d13:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
ffffffff80032d18:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80032d1c:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff80032d20:	48 85 c0             	test   %rax,%rax
ffffffff80032d23:	74 0b                	je     ffffffff80032d30 <ZydisStringAppend.lto_priv.3+0x34>
ffffffff80032d25:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80032d29:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff80032d2d:	48 85 c0             	test   %rax,%rax
ffffffff80032d30:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80032d34:	48 8b 50 18          	mov    0x18(%rax),%rdx
ffffffff80032d38:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80032d3c:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff80032d40:	48 01 d0             	add    %rdx,%rax
ffffffff80032d43:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
ffffffff80032d47:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80032d4b:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff80032d4f:	48 39 c2             	cmp    %rax,%rdx
ffffffff80032d52:	76 07                	jbe    ffffffff80032d5b <ZydisStringAppend.lto_priv.3+0x5f>
ffffffff80032d54:	b8 09 00 10 80       	mov    $0x80100009,%eax
ffffffff80032d59:	eb 74                	jmp    ffffffff80032dcf <ZydisStringAppend.lto_priv.3+0xd3>
ffffffff80032d5b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80032d5f:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff80032d63:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
ffffffff80032d67:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80032d6b:	48 8b 48 38          	mov    0x38(%rax),%rcx
ffffffff80032d6f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80032d73:	48 8b 70 38          	mov    0x38(%rax),%rsi
ffffffff80032d77:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80032d7b:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff80032d7f:	48 83 e8 01          	sub    $0x1,%rax
ffffffff80032d83:	48 01 f0             	add    %rsi,%rax
ffffffff80032d86:	48 89 ce             	mov    %rcx,%rsi
ffffffff80032d89:	48 89 c7             	mov    %rax,%rdi
ffffffff80032d8c:	e8 db fe ff ff       	call   ffffffff80032c6c <ZYAN_MEMCPY.lto_priv.10>
ffffffff80032d91:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80032d95:	48 8b 50 18          	mov    0x18(%rax),%rdx
ffffffff80032d99:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80032d9d:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff80032da1:	48 01 d0             	add    %rdx,%rax
ffffffff80032da4:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
ffffffff80032da8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80032dac:	48 89 50 18          	mov    %rdx,0x18(%rax)
ffffffff80032db0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80032db4:	48 8b 50 38          	mov    0x38(%rax),%rdx
ffffffff80032db8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80032dbc:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff80032dc0:	48 83 e8 01          	sub    $0x1,%rax
ffffffff80032dc4:	48 01 d0             	add    %rdx,%rax
ffffffff80032dc7:	c6 00 00             	movb   $0x0,(%rax)
ffffffff80032dca:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff80032dcf:	c9                   	leave  
ffffffff80032dd0:	c3                   	ret    

ffffffff80032dd1 <ZydisStringAppendShort.lto_priv.2>:
ffffffff80032dd1:	55                   	push   %rbp
ffffffff80032dd2:	48 89 e5             	mov    %rsp,%rbp
ffffffff80032dd5:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff80032dd9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff80032ddd:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff80032de1:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff80032de6:	74 05                	je     ffffffff80032ded <ZydisStringAppendShort.lto_priv.2+0x1c>
ffffffff80032de8:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
ffffffff80032ded:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80032df1:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff80032df5:	48 85 c0             	test   %rax,%rax
ffffffff80032df8:	74 0a                	je     ffffffff80032e04 <ZydisStringAppendShort.lto_priv.2+0x33>
ffffffff80032dfa:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80032dfe:	0f b6 40 08          	movzbl 0x8(%rax),%eax
ffffffff80032e02:	84 c0                	test   %al,%al
ffffffff80032e04:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80032e08:	48 8b 50 18          	mov    0x18(%rax),%rdx
ffffffff80032e0c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80032e10:	0f b6 40 08          	movzbl 0x8(%rax),%eax
ffffffff80032e14:	0f b6 c0             	movzbl %al,%eax
ffffffff80032e17:	48 01 c2             	add    %rax,%rdx
ffffffff80032e1a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80032e1e:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff80032e22:	48 39 c2             	cmp    %rax,%rdx
ffffffff80032e25:	76 07                	jbe    ffffffff80032e2e <ZydisStringAppendShort.lto_priv.2+0x5d>
ffffffff80032e27:	b8 09 00 10 80       	mov    $0x80100009,%eax
ffffffff80032e2c:	eb 5b                	jmp    ffffffff80032e89 <ZydisStringAppendShort.lto_priv.2+0xb8>
ffffffff80032e2e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80032e32:	0f b6 40 08          	movzbl 0x8(%rax),%eax
ffffffff80032e36:	0f b6 c0             	movzbl %al,%eax
ffffffff80032e39:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffff80032e3d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80032e41:	48 8b 08             	mov    (%rax),%rcx
ffffffff80032e44:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80032e48:	48 8b 70 38          	mov    0x38(%rax),%rsi
ffffffff80032e4c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80032e50:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff80032e54:	48 83 e8 01          	sub    $0x1,%rax
ffffffff80032e58:	48 01 f0             	add    %rsi,%rax
ffffffff80032e5b:	48 89 ce             	mov    %rcx,%rsi
ffffffff80032e5e:	48 89 c7             	mov    %rax,%rdi
ffffffff80032e61:	e8 06 fe ff ff       	call   ffffffff80032c6c <ZYAN_MEMCPY.lto_priv.10>
ffffffff80032e66:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80032e6a:	48 8b 50 18          	mov    0x18(%rax),%rdx
ffffffff80032e6e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80032e72:	0f b6 40 08          	movzbl 0x8(%rax),%eax
ffffffff80032e76:	0f b6 c0             	movzbl %al,%eax
ffffffff80032e79:	48 01 c2             	add    %rax,%rdx
ffffffff80032e7c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80032e80:	48 89 50 18          	mov    %rdx,0x18(%rax)
ffffffff80032e84:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff80032e89:	c9                   	leave  
ffffffff80032e8a:	c3                   	ret    

ffffffff80032e8b <ZydisStringAppendShortCase.lto_priv.2>:
ffffffff80032e8b:	55                   	push   %rbp
ffffffff80032e8c:	48 89 e5             	mov    %rsp,%rbp
ffffffff80032e8f:	48 83 ec 68          	sub    $0x68,%rsp
ffffffff80032e93:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
ffffffff80032e97:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
ffffffff80032e9b:	89 55 9c             	mov    %edx,-0x64(%rbp)
ffffffff80032e9e:	48 83 7d a8 00       	cmpq   $0x0,-0x58(%rbp)
ffffffff80032ea3:	74 05                	je     ffffffff80032eaa <ZydisStringAppendShortCase.lto_priv.2+0x1f>
ffffffff80032ea5:	48 83 7d a0 00       	cmpq   $0x0,-0x60(%rbp)
ffffffff80032eaa:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff80032eae:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff80032eb2:	48 85 c0             	test   %rax,%rax
ffffffff80032eb5:	74 0a                	je     ffffffff80032ec1 <ZydisStringAppendShortCase.lto_priv.2+0x36>
ffffffff80032eb7:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff80032ebb:	0f b6 40 08          	movzbl 0x8(%rax),%eax
ffffffff80032ebf:	84 c0                	test   %al,%al
ffffffff80032ec1:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff80032ec5:	48 8b 50 18          	mov    0x18(%rax),%rdx
ffffffff80032ec9:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff80032ecd:	0f b6 40 08          	movzbl 0x8(%rax),%eax
ffffffff80032ed1:	0f b6 c0             	movzbl %al,%eax
ffffffff80032ed4:	48 01 c2             	add    %rax,%rdx
ffffffff80032ed7:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff80032edb:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff80032edf:	48 39 c2             	cmp    %rax,%rdx
ffffffff80032ee2:	76 0a                	jbe    ffffffff80032eee <ZydisStringAppendShortCase.lto_priv.2+0x63>
ffffffff80032ee4:	b8 09 00 10 80       	mov    $0x80100009,%eax
ffffffff80032ee9:	e9 7e 01 00 00       	jmp    ffffffff8003306c <ZydisStringAppendShortCase.lto_priv.2+0x1e1>
ffffffff80032eee:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff80032ef2:	0f b6 40 08          	movzbl 0x8(%rax),%eax
ffffffff80032ef6:	0f b6 c0             	movzbl %al,%eax
ffffffff80032ef9:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffff80032efd:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff80032f01:	48 8b 08             	mov    (%rax),%rcx
ffffffff80032f04:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff80032f08:	48 8b 70 38          	mov    0x38(%rax),%rsi
ffffffff80032f0c:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff80032f10:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff80032f14:	48 83 e8 01          	sub    $0x1,%rax
ffffffff80032f18:	48 01 f0             	add    %rsi,%rax
ffffffff80032f1b:	48 89 ce             	mov    %rcx,%rsi
ffffffff80032f1e:	48 89 c7             	mov    %rax,%rdi
ffffffff80032f21:	e8 46 fd ff ff       	call   ffffffff80032c6c <ZYAN_MEMCPY.lto_priv.10>
ffffffff80032f26:	83 7d 9c 02          	cmpl   $0x2,-0x64(%rbp)
ffffffff80032f2a:	0f 84 9a 00 00 00    	je     ffffffff80032fca <ZydisStringAppendShortCase.lto_priv.2+0x13f>
ffffffff80032f30:	83 7d 9c 02          	cmpl   $0x2,-0x64(%rbp)
ffffffff80032f34:	0f 87 0c 01 00 00    	ja     ffffffff80033046 <ZydisStringAppendShortCase.lto_priv.2+0x1bb>
ffffffff80032f3a:	83 7d 9c 00          	cmpl   $0x0,-0x64(%rbp)
ffffffff80032f3e:	0f 84 04 01 00 00    	je     ffffffff80033048 <ZydisStringAppendShortCase.lto_priv.2+0x1bd>
ffffffff80032f44:	83 7d 9c 01          	cmpl   $0x1,-0x64(%rbp)
ffffffff80032f48:	0f 85 f8 00 00 00    	jne    ffffffff80033046 <ZydisStringAppendShortCase.lto_priv.2+0x1bb>
ffffffff80032f4e:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff80032f52:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff80032f56:	48 83 e8 01          	sub    $0x1,%rax
ffffffff80032f5a:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
ffffffff80032f5e:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff80032f62:	0f b6 40 08          	movzbl 0x8(%rax),%eax
ffffffff80032f66:	0f b6 c0             	movzbl %al,%eax
ffffffff80032f69:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
ffffffff80032f6d:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff80032f71:	48 8b 50 38          	mov    0x38(%rax),%rdx
ffffffff80032f75:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff80032f79:	48 01 d0             	add    %rdx,%rax
ffffffff80032f7c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff80032f80:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff80032f84:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff80032f88:	eb 2d                	jmp    ffffffff80032fb7 <ZydisStringAppendShortCase.lto_priv.2+0x12c>
ffffffff80032f8a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80032f8e:	0f b6 00             	movzbl (%rax),%eax
ffffffff80032f91:	88 45 b7             	mov    %al,-0x49(%rbp)
ffffffff80032f94:	80 7d b7 40          	cmpb   $0x40,-0x49(%rbp)
ffffffff80032f98:	7e 13                	jle    ffffffff80032fad <ZydisStringAppendShortCase.lto_priv.2+0x122>
ffffffff80032f9a:	80 7d b7 5a          	cmpb   $0x5a,-0x49(%rbp)
ffffffff80032f9e:	7f 0d                	jg     ffffffff80032fad <ZydisStringAppendShortCase.lto_priv.2+0x122>
ffffffff80032fa0:	0f b6 45 b7          	movzbl -0x49(%rbp),%eax
ffffffff80032fa4:	83 c8 20             	or     $0x20,%eax
ffffffff80032fa7:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff80032fab:	88 02                	mov    %al,(%rdx)
ffffffff80032fad:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
ffffffff80032fb2:	48 83 45 f0 01       	addq   $0x1,-0x10(%rbp)
ffffffff80032fb7:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
ffffffff80032fbb:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff80032fbf:	48 01 d0             	add    %rdx,%rax
ffffffff80032fc2:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
ffffffff80032fc6:	72 c2                	jb     ffffffff80032f8a <ZydisStringAppendShortCase.lto_priv.2+0xff>
ffffffff80032fc8:	eb 7f                	jmp    ffffffff80033049 <ZydisStringAppendShortCase.lto_priv.2+0x1be>
ffffffff80032fca:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff80032fce:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff80032fd2:	48 83 e8 01          	sub    $0x1,%rax
ffffffff80032fd6:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
ffffffff80032fda:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff80032fde:	0f b6 40 08          	movzbl 0x8(%rax),%eax
ffffffff80032fe2:	0f b6 c0             	movzbl %al,%eax
ffffffff80032fe5:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
ffffffff80032fe9:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff80032fed:	48 8b 50 38          	mov    0x38(%rax),%rdx
ffffffff80032ff1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80032ff5:	48 01 d0             	add    %rdx,%rax
ffffffff80032ff8:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff80032ffc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80033000:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff80033004:	eb 2d                	jmp    ffffffff80033033 <ZydisStringAppendShortCase.lto_priv.2+0x1a8>
ffffffff80033006:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8003300a:	0f b6 00             	movzbl (%rax),%eax
ffffffff8003300d:	88 45 cf             	mov    %al,-0x31(%rbp)
ffffffff80033010:	80 7d cf 60          	cmpb   $0x60,-0x31(%rbp)
ffffffff80033014:	7e 13                	jle    ffffffff80033029 <ZydisStringAppendShortCase.lto_priv.2+0x19e>
ffffffff80033016:	80 7d cf 7a          	cmpb   $0x7a,-0x31(%rbp)
ffffffff8003301a:	7f 0d                	jg     ffffffff80033029 <ZydisStringAppendShortCase.lto_priv.2+0x19e>
ffffffff8003301c:	0f b6 45 cf          	movzbl -0x31(%rbp),%eax
ffffffff80033020:	83 e0 df             	and    $0xffffffdf,%eax
ffffffff80033023:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff80033027:	88 02                	mov    %al,(%rdx)
ffffffff80033029:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
ffffffff8003302e:	48 83 45 e0 01       	addq   $0x1,-0x20(%rbp)
ffffffff80033033:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff80033037:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8003303b:	48 01 d0             	add    %rdx,%rax
ffffffff8003303e:	48 39 45 e0          	cmp    %rax,-0x20(%rbp)
ffffffff80033042:	72 c2                	jb     ffffffff80033006 <ZydisStringAppendShortCase.lto_priv.2+0x17b>
ffffffff80033044:	eb 03                	jmp    ffffffff80033049 <ZydisStringAppendShortCase.lto_priv.2+0x1be>
ffffffff80033046:	eb fe                	jmp    ffffffff80033046 <ZydisStringAppendShortCase.lto_priv.2+0x1bb>
ffffffff80033048:	90                   	nop
ffffffff80033049:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff8003304d:	48 8b 50 18          	mov    0x18(%rax),%rdx
ffffffff80033051:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff80033055:	0f b6 40 08          	movzbl 0x8(%rax),%eax
ffffffff80033059:	0f b6 c0             	movzbl %al,%eax
ffffffff8003305c:	48 01 c2             	add    %rax,%rdx
ffffffff8003305f:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff80033063:	48 89 50 18          	mov    %rdx,0x18(%rax)
ffffffff80033067:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff8003306c:	c9                   	leave  
ffffffff8003306d:	c3                   	ret    

ffffffff8003306e <ZydisStringAppendDecS.lto_priv.2>:
ffffffff8003306e:	55                   	push   %rbp
ffffffff8003306f:	48 89 e5             	mov    %rsp,%rbp
ffffffff80033072:	53                   	push   %rbx
ffffffff80033073:	48 83 ec 48          	sub    $0x48,%rsp
ffffffff80033077:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
ffffffff8003307b:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
ffffffff8003307f:	89 c8                	mov    %ecx,%eax
ffffffff80033081:	4c 89 45 c0          	mov    %r8,-0x40(%rbp)
ffffffff80033085:	4c 89 4d b8          	mov    %r9,-0x48(%rbp)
ffffffff80033089:	88 55 cc             	mov    %dl,-0x34(%rbp)
ffffffff8003308c:	88 45 c8             	mov    %al,-0x38(%rbp)
ffffffff8003308f:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
ffffffff80033094:	0f 89 80 00 00 00    	jns    ffffffff8003311a <ZydisStringAppendDecS.lto_priv.2+0xac>
ffffffff8003309a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8003309e:	48 8d 15 bb 82 07 00 	lea    0x782bb(%rip),%rdx        # ffffffff800ab360 <str_sub.3.lto_priv.2>
ffffffff800330a5:	48 89 d6             	mov    %rdx,%rsi
ffffffff800330a8:	48 89 c7             	mov    %rax,%rdi
ffffffff800330ab:	e8 21 fd ff ff       	call   ffffffff80032dd1 <ZydisStringAppendShort.lto_priv.2>
ffffffff800330b0:	89 45 e8             	mov    %eax,-0x18(%rbp)
ffffffff800330b3:	8b 45 e8             	mov    -0x18(%rbp),%eax
ffffffff800330b6:	85 c0                	test   %eax,%eax
ffffffff800330b8:	79 08                	jns    ffffffff800330c2 <ZydisStringAppendDecS.lto_priv.2+0x54>
ffffffff800330ba:	8b 45 e8             	mov    -0x18(%rbp),%eax
ffffffff800330bd:	e9 a5 00 00 00       	jmp    ffffffff80033167 <ZydisStringAppendDecS.lto_priv.2+0xf9>
ffffffff800330c2:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
ffffffff800330c7:	74 22                	je     ffffffff800330eb <ZydisStringAppendDecS.lto_priv.2+0x7d>
ffffffff800330c9:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
ffffffff800330cd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff800330d1:	48 89 d6             	mov    %rdx,%rsi
ffffffff800330d4:	48 89 c7             	mov    %rax,%rdi
ffffffff800330d7:	e8 20 fc ff ff       	call   ffffffff80032cfc <ZydisStringAppend.lto_priv.3>
ffffffff800330dc:	89 45 e4             	mov    %eax,-0x1c(%rbp)
ffffffff800330df:	8b 45 e4             	mov    -0x1c(%rbp),%eax
ffffffff800330e2:	85 c0                	test   %eax,%eax
ffffffff800330e4:	79 05                	jns    ffffffff800330eb <ZydisStringAppendDecS.lto_priv.2+0x7d>
ffffffff800330e6:	8b 45 e4             	mov    -0x1c(%rbp),%eax
ffffffff800330e9:	eb 7c                	jmp    ffffffff80033167 <ZydisStringAppendDecS.lto_priv.2+0xf9>
ffffffff800330eb:	0f b6 5d cc          	movzbl -0x34(%rbp),%ebx
ffffffff800330ef:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff800330f3:	48 89 c7             	mov    %rax,%rdi
ffffffff800330f6:	e8 cb fb ff ff       	call   ffffffff80032cc6 <ZyanAbsI64.lto_priv.3>
ffffffff800330fb:	48 89 c6             	mov    %rax,%rsi
ffffffff800330fe:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
ffffffff80033102:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80033106:	49 89 d0             	mov    %rdx,%r8
ffffffff80033109:	b9 00 00 00 00       	mov    $0x0,%ecx
ffffffff8003310e:	89 da                	mov    %ebx,%edx
ffffffff80033110:	48 89 c7             	mov    %rax,%rdi
ffffffff80033113:	e8 15 2f ff ff       	call   ffffffff8002602d <ZydisStringAppendDecU>
ffffffff80033118:	eb 4d                	jmp    ffffffff80033167 <ZydisStringAppendDecS.lto_priv.2+0xf9>
ffffffff8003311a:	80 7d c8 00          	cmpb   $0x0,-0x38(%rbp)
ffffffff8003311e:	74 25                	je     ffffffff80033145 <ZydisStringAppendDecS.lto_priv.2+0xd7>
ffffffff80033120:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80033124:	48 8d 15 45 82 07 00 	lea    0x78245(%rip),%rdx        # ffffffff800ab370 <str_add.2.lto_priv.2>
ffffffff8003312b:	48 89 d6             	mov    %rdx,%rsi
ffffffff8003312e:	48 89 c7             	mov    %rax,%rdi
ffffffff80033131:	e8 9b fc ff ff       	call   ffffffff80032dd1 <ZydisStringAppendShort.lto_priv.2>
ffffffff80033136:	89 45 ec             	mov    %eax,-0x14(%rbp)
ffffffff80033139:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff8003313c:	85 c0                	test   %eax,%eax
ffffffff8003313e:	79 05                	jns    ffffffff80033145 <ZydisStringAppendDecS.lto_priv.2+0xd7>
ffffffff80033140:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff80033143:	eb 22                	jmp    ffffffff80033167 <ZydisStringAppendDecS.lto_priv.2+0xf9>
ffffffff80033145:	0f b6 45 cc          	movzbl -0x34(%rbp),%eax
ffffffff80033149:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
ffffffff8003314d:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
ffffffff80033151:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
ffffffff80033155:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
ffffffff80033159:	49 89 c8             	mov    %rcx,%r8
ffffffff8003315c:	48 89 d1             	mov    %rdx,%rcx
ffffffff8003315f:	89 c2                	mov    %eax,%edx
ffffffff80033161:	e8 c7 2e ff ff       	call   ffffffff8002602d <ZydisStringAppendDecU>
ffffffff80033166:	90                   	nop
ffffffff80033167:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
ffffffff8003316b:	c9                   	leave  
ffffffff8003316c:	c3                   	ret    

ffffffff8003316d <ZydisStringAppendHexS.lto_priv.2>:
ffffffff8003316d:	55                   	push   %rbp
ffffffff8003316e:	48 89 e5             	mov    %rsp,%rbp
ffffffff80033171:	41 55                	push   %r13
ffffffff80033173:	41 54                	push   %r12
ffffffff80033175:	53                   	push   %rbx
ffffffff80033176:	48 83 ec 30          	sub    $0x30,%rsp
ffffffff8003317a:	48 89 7d d0          	mov    %rdi,-0x30(%rbp)
ffffffff8003317e:	48 89 75 c8          	mov    %rsi,-0x38(%rbp)
ffffffff80033182:	89 c8                	mov    %ecx,%eax
ffffffff80033184:	44 89 c6             	mov    %r8d,%esi
ffffffff80033187:	44 89 c9             	mov    %r9d,%ecx
ffffffff8003318a:	88 55 c4             	mov    %dl,-0x3c(%rbp)
ffffffff8003318d:	88 45 c0             	mov    %al,-0x40(%rbp)
ffffffff80033190:	89 f0                	mov    %esi,%eax
ffffffff80033192:	88 45 bc             	mov    %al,-0x44(%rbp)
ffffffff80033195:	89 c8                	mov    %ecx,%eax
ffffffff80033197:	88 45 b8             	mov    %al,-0x48(%rbp)
ffffffff8003319a:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
ffffffff8003319f:	0f 89 91 00 00 00    	jns    ffffffff80033236 <ZydisStringAppendHexS.lto_priv.2+0xc9>
ffffffff800331a5:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff800331a9:	48 8d 15 d0 81 07 00 	lea    0x781d0(%rip),%rdx        # ffffffff800ab380 <str_sub.1.lto_priv.2>
ffffffff800331b0:	48 89 d6             	mov    %rdx,%rsi
ffffffff800331b3:	48 89 c7             	mov    %rax,%rdi
ffffffff800331b6:	e8 16 fc ff ff       	call   ffffffff80032dd1 <ZydisStringAppendShort.lto_priv.2>
ffffffff800331bb:	89 45 e0             	mov    %eax,-0x20(%rbp)
ffffffff800331be:	8b 45 e0             	mov    -0x20(%rbp),%eax
ffffffff800331c1:	85 c0                	test   %eax,%eax
ffffffff800331c3:	79 08                	jns    ffffffff800331cd <ZydisStringAppendHexS.lto_priv.2+0x60>
ffffffff800331c5:	8b 45 e0             	mov    -0x20(%rbp),%eax
ffffffff800331c8:	e9 c0 00 00 00       	jmp    ffffffff8003328d <ZydisStringAppendHexS.lto_priv.2+0x120>
ffffffff800331cd:	48 83 7d 10 00       	cmpq   $0x0,0x10(%rbp)
ffffffff800331d2:	74 22                	je     ffffffff800331f6 <ZydisStringAppendHexS.lto_priv.2+0x89>
ffffffff800331d4:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff800331d8:	48 8b 75 10          	mov    0x10(%rbp),%rsi
ffffffff800331dc:	48 89 c7             	mov    %rax,%rdi
ffffffff800331df:	e8 18 fb ff ff       	call   ffffffff80032cfc <ZydisStringAppend.lto_priv.3>
ffffffff800331e4:	89 45 dc             	mov    %eax,-0x24(%rbp)
ffffffff800331e7:	8b 45 dc             	mov    -0x24(%rbp),%eax
ffffffff800331ea:	85 c0                	test   %eax,%eax
ffffffff800331ec:	79 08                	jns    ffffffff800331f6 <ZydisStringAppendHexS.lto_priv.2+0x89>
ffffffff800331ee:	8b 45 dc             	mov    -0x24(%rbp),%eax
ffffffff800331f1:	e9 97 00 00 00       	jmp    ffffffff8003328d <ZydisStringAppendHexS.lto_priv.2+0x120>
ffffffff800331f6:	44 0f b6 6d bc       	movzbl -0x44(%rbp),%r13d
ffffffff800331fb:	44 0f b6 65 c0       	movzbl -0x40(%rbp),%r12d
ffffffff80033200:	0f b6 5d c4          	movzbl -0x3c(%rbp),%ebx
ffffffff80033204:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80033208:	48 89 c7             	mov    %rax,%rdi
ffffffff8003320b:	e8 b6 fa ff ff       	call   ffffffff80032cc6 <ZyanAbsI64.lto_priv.3>
ffffffff80033210:	48 89 c6             	mov    %rax,%rsi
ffffffff80033213:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff80033217:	ff 75 18             	push   0x18(%rbp)
ffffffff8003321a:	41 b9 00 00 00 00    	mov    $0x0,%r9d
ffffffff80033220:	45 89 e8             	mov    %r13d,%r8d
ffffffff80033223:	44 89 e1             	mov    %r12d,%ecx
ffffffff80033226:	89 da                	mov    %ebx,%edx
ffffffff80033228:	48 89 c7             	mov    %rax,%rdi
ffffffff8003322b:	e8 8f 2e ff ff       	call   ffffffff800260bf <ZydisStringAppendHexU>
ffffffff80033230:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80033234:	eb 57                	jmp    ffffffff8003328d <ZydisStringAppendHexS.lto_priv.2+0x120>
ffffffff80033236:	80 7d b8 00          	cmpb   $0x0,-0x48(%rbp)
ffffffff8003323a:	74 25                	je     ffffffff80033261 <ZydisStringAppendHexS.lto_priv.2+0xf4>
ffffffff8003323c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff80033240:	48 8d 15 49 81 07 00 	lea    0x78149(%rip),%rdx        # ffffffff800ab390 <str_add.0.lto_priv.2>
ffffffff80033247:	48 89 d6             	mov    %rdx,%rsi
ffffffff8003324a:	48 89 c7             	mov    %rax,%rdi
ffffffff8003324d:	e8 7f fb ff ff       	call   ffffffff80032dd1 <ZydisStringAppendShort.lto_priv.2>
ffffffff80033252:	89 45 e4             	mov    %eax,-0x1c(%rbp)
ffffffff80033255:	8b 45 e4             	mov    -0x1c(%rbp),%eax
ffffffff80033258:	85 c0                	test   %eax,%eax
ffffffff8003325a:	79 05                	jns    ffffffff80033261 <ZydisStringAppendHexS.lto_priv.2+0xf4>
ffffffff8003325c:	8b 45 e4             	mov    -0x1c(%rbp),%eax
ffffffff8003325f:	eb 2c                	jmp    ffffffff8003328d <ZydisStringAppendHexS.lto_priv.2+0x120>
ffffffff80033261:	0f b6 4d bc          	movzbl -0x44(%rbp),%ecx
ffffffff80033265:	0f b6 55 c0          	movzbl -0x40(%rbp),%edx
ffffffff80033269:	0f b6 45 c4          	movzbl -0x3c(%rbp),%eax
ffffffff8003326d:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
ffffffff80033271:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
ffffffff80033275:	ff 75 18             	push   0x18(%rbp)
ffffffff80033278:	4c 8b 4d 10          	mov    0x10(%rbp),%r9
ffffffff8003327c:	41 89 c8             	mov    %ecx,%r8d
ffffffff8003327f:	89 d1                	mov    %edx,%ecx
ffffffff80033281:	89 c2                	mov    %eax,%edx
ffffffff80033283:	e8 37 2e ff ff       	call   ffffffff800260bf <ZydisStringAppendHexU>
ffffffff80033288:	48 83 c4 08          	add    $0x8,%rsp
ffffffff8003328c:	90                   	nop
ffffffff8003328d:	48 8d 65 e8          	lea    -0x18(%rbp),%rsp
ffffffff80033291:	5b                   	pop    %rbx
ffffffff80033292:	41 5c                	pop    %r12
ffffffff80033294:	41 5d                	pop    %r13
ffffffff80033296:	5d                   	pop    %rbp
ffffffff80033297:	c3                   	ret    

ffffffff80033298 <ZydisFormatterBufferAppendPredefined.lto_priv.2>:
ffffffff80033298:	55                   	push   %rbp
ffffffff80033299:	48 89 e5             	mov    %rsp,%rbp
ffffffff8003329c:	48 83 ec 30          	sub    $0x30,%rsp
ffffffff800332a0:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
ffffffff800332a4:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
ffffffff800332a8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff800332ac:	48 8b 40 28          	mov    0x28(%rax),%rax
ffffffff800332b0:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff800332b4:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff800332b9:	74 08                	je     ffffffff800332c3 <ZydisFormatterBufferAppendPredefined.lto_priv.2+0x2b>
ffffffff800332bb:	48 81 7d f8 ff 00 00 	cmpq   $0xff,-0x8(%rbp)
ffffffff800332c2:	00 
ffffffff800332c3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff800332c7:	48 8b 50 08          	mov    0x8(%rax),%rdx
ffffffff800332cb:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff800332cf:	0f b6 00             	movzbl (%rax),%eax
ffffffff800332d2:	0f b6 c0             	movzbl %al,%eax
ffffffff800332d5:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
ffffffff800332d9:	48 01 c8             	add    %rcx,%rax
ffffffff800332dc:	48 39 c2             	cmp    %rax,%rdx
ffffffff800332df:	77 0a                	ja     ffffffff800332eb <ZydisFormatterBufferAppendPredefined.lto_priv.2+0x53>
ffffffff800332e1:	b8 09 00 10 80       	mov    $0x80100009,%eax
ffffffff800332e6:	e9 ce 00 00 00       	jmp    ffffffff800333b9 <ZydisFormatterBufferAppendPredefined.lto_priv.2+0x121>
ffffffff800332eb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff800332ef:	48 8b 40 48          	mov    0x48(%rax),%rax
ffffffff800332f3:	48 83 e8 02          	sub    $0x2,%rax
ffffffff800332f7:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff800332fb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff800332ff:	89 c2                	mov    %eax,%edx
ffffffff80033301:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80033305:	88 50 01             	mov    %dl,0x1(%rax)
ffffffff80033308:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8003330c:	0f b6 00             	movzbl (%rax),%eax
ffffffff8003330f:	0f b6 c0             	movzbl %al,%eax
ffffffff80033312:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
ffffffff80033316:	48 8d 72 02          	lea    0x2(%rdx),%rsi
ffffffff8003331a:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff8003331e:	48 8b 4a 48          	mov    0x48(%rdx),%rcx
ffffffff80033322:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff80033326:	48 01 d1             	add    %rdx,%rcx
ffffffff80033329:	48 89 c2             	mov    %rax,%rdx
ffffffff8003332c:	48 89 cf             	mov    %rcx,%rdi
ffffffff8003332f:	e8 38 f9 ff ff       	call   ffffffff80032c6c <ZYAN_MEMCPY.lto_priv.10>
ffffffff80033334:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff80033338:	0f b6 40 01          	movzbl 0x1(%rax),%eax
ffffffff8003333c:	0f b6 c0             	movzbl %al,%eax
ffffffff8003333f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff80033343:	48 01 d0             	add    %rdx,%rax
ffffffff80033346:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff8003334a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8003334e:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff80033352:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
ffffffff80033356:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff8003335a:	48 89 42 08          	mov    %rax,0x8(%rdx)
ffffffff8003335e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80033362:	48 8b 50 48          	mov    0x48(%rax),%rdx
ffffffff80033366:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8003336a:	48 01 c2             	add    %rax,%rdx
ffffffff8003336d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80033371:	48 89 50 48          	mov    %rdx,0x48(%rax)
ffffffff80033375:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff80033379:	0f b6 00             	movzbl (%rax),%eax
ffffffff8003337c:	0f b6 d0             	movzbl %al,%edx
ffffffff8003337f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff80033383:	0f b6 40 01          	movzbl 0x1(%rax),%eax
ffffffff80033387:	0f b6 c8             	movzbl %al,%ecx
ffffffff8003338a:	89 d0                	mov    %edx,%eax
ffffffff8003338c:	29 c8                	sub    %ecx,%eax
ffffffff8003338e:	48 98                	cltq   
ffffffff80033390:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff80033394:	48 89 42 28          	mov    %rax,0x28(%rdx)
ffffffff80033398:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8003339c:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff800333a0:	ba ff 00 00 00       	mov    $0xff,%edx
ffffffff800333a5:	48 39 d0             	cmp    %rdx,%rax
ffffffff800333a8:	48 0f 47 c2          	cmova  %rdx,%rax
ffffffff800333ac:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff800333b0:	48 89 42 30          	mov    %rax,0x30(%rdx)
ffffffff800333b4:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff800333b9:	c9                   	leave  
ffffffff800333ba:	c3                   	ret    

ffffffff800333bb <ZydisFormatterIntelFormatInstruction>:
ffffffff800333bb:	f3 0f 1e fa          	endbr64 
ffffffff800333bf:	55                   	push   %rbp
ffffffff800333c0:	48 89 e5             	mov    %rsp,%rbp
ffffffff800333c3:	48 81 ec 90 00 00 00 	sub    $0x90,%rsp
ffffffff800333ca:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
ffffffff800333ce:	48 89 75 80          	mov    %rsi,-0x80(%rbp)
ffffffff800333d2:	48 89 95 78 ff ff ff 	mov    %rdx,-0x88(%rbp)
ffffffff800333d9:	48 8b 45 88          	mov    -0x78(%rbp),%rax
ffffffff800333dd:	4c 8b 80 38 02 00 00 	mov    0x238(%rax),%r8
ffffffff800333e4:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
ffffffff800333eb:	48 8b 4d 80          	mov    -0x80(%rbp),%rcx
ffffffff800333ef:	48 8b 45 88          	mov    -0x78(%rbp),%rax
ffffffff800333f3:	48 89 ce             	mov    %rcx,%rsi
ffffffff800333f6:	48 89 c7             	mov    %rax,%rdi
ffffffff800333f9:	41 ff d0             	call   *%r8
ffffffff800333fc:	89 45 dc             	mov    %eax,-0x24(%rbp)
ffffffff800333ff:	8b 45 dc             	mov    -0x24(%rbp),%eax
ffffffff80033402:	85 c0                	test   %eax,%eax
ffffffff80033404:	79 08                	jns    ffffffff8003340e <ZydisFormatterIntelFormatInstruction+0x53>
ffffffff80033406:	8b 45 dc             	mov    -0x24(%rbp),%eax
ffffffff80033409:	e9 9c 06 00 00       	jmp    ffffffff80033aaa <ZydisFormatterIntelFormatInstruction+0x6ef>
ffffffff8003340e:	48 8b 45 88          	mov    -0x78(%rbp),%rax
ffffffff80033412:	4c 8b 80 f8 01 00 00 	mov    0x1f8(%rax),%r8
ffffffff80033419:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
ffffffff80033420:	48 8b 4d 80          	mov    -0x80(%rbp),%rcx
ffffffff80033424:	48 8b 45 88          	mov    -0x78(%rbp),%rax
ffffffff80033428:	48 89 ce             	mov    %rcx,%rsi
ffffffff8003342b:	48 89 c7             	mov    %rax,%rdi
ffffffff8003342e:	41 ff d0             	call   *%r8
ffffffff80033431:	89 45 d8             	mov    %eax,-0x28(%rbp)
ffffffff80033434:	8b 45 d8             	mov    -0x28(%rbp),%eax
ffffffff80033437:	85 c0                	test   %eax,%eax
ffffffff80033439:	79 08                	jns    ffffffff80033443 <ZydisFormatterIntelFormatInstruction+0x88>
ffffffff8003343b:	8b 45 d8             	mov    -0x28(%rbp),%eax
ffffffff8003343e:	e9 67 06 00 00       	jmp    ffffffff80033aaa <ZydisFormatterIntelFormatInstruction+0x6ef>
ffffffff80033443:	48 8b 45 80          	mov    -0x80(%rbp),%rax
ffffffff80033447:	0f b6 00             	movzbl (%rax),%eax
ffffffff8003344a:	84 c0                	test   %al,%al
ffffffff8003344c:	74 0e                	je     ffffffff8003345c <ZydisFormatterIntelFormatInstruction+0xa1>
ffffffff8003344e:	48 8b 45 80          	mov    -0x80(%rbp),%rax
ffffffff80033452:	48 8b 40 48          	mov    0x48(%rax),%rax
ffffffff80033456:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8003345a:	eb 0c                	jmp    ffffffff80033468 <ZydisFormatterIntelFormatInstruction+0xad>
ffffffff8003345c:	48 8b 45 80          	mov    -0x80(%rbp),%rax
ffffffff80033460:	48 8b 40 28          	mov    0x28(%rax),%rax
ffffffff80033464:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff80033468:	c6 45 f7 00          	movb   $0x0,-0x9(%rbp)
ffffffff8003346c:	e9 1c 06 00 00       	jmp    ffffffff80033a8d <ZydisFormatterIntelFormatInstruction+0x6d2>
ffffffff80033471:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
ffffffff80033478:	48 8b 50 08          	mov    0x8(%rax),%rdx
ffffffff8003347c:	0f b6 45 f7          	movzbl -0x9(%rbp),%eax
ffffffff80033480:	48 6b c0 68          	imul   $0x68,%rax,%rax
ffffffff80033484:	48 01 d0             	add    %rdx,%rax
ffffffff80033487:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
ffffffff8003348b:	80 7d f7 01          	cmpb   $0x1,-0x9(%rbp)
ffffffff8003348f:	75 1c                	jne    ffffffff800334ad <ZydisFormatterIntelFormatInstruction+0xf2>
ffffffff80033491:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff80033495:	8b 40 04             	mov    0x4(%rax),%eax
ffffffff80033498:	83 f8 01             	cmp    $0x1,%eax
ffffffff8003349b:	75 10                	jne    ffffffff800334ad <ZydisFormatterIntelFormatInstruction+0xf2>
ffffffff8003349d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff800334a1:	8b 40 10             	mov    0x10(%rax),%eax
ffffffff800334a4:	83 f8 06             	cmp    $0x6,%eax
ffffffff800334a7:	0f 84 d2 05 00 00    	je     ffffffff80033a7f <ZydisFormatterIntelFormatInstruction+0x6c4>
ffffffff800334ad:	48 8b 45 80          	mov    -0x80(%rbp),%rax
ffffffff800334b1:	0f b6 00             	movzbl (%rax),%eax
ffffffff800334b4:	84 c0                	test   %al,%al
ffffffff800334b6:	74 0e                	je     ffffffff800334c6 <ZydisFormatterIntelFormatInstruction+0x10b>
ffffffff800334b8:	48 8b 45 80          	mov    -0x80(%rbp),%rax
ffffffff800334bc:	48 8b 40 48          	mov    0x48(%rax),%rax
ffffffff800334c0:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff800334c4:	eb 0c                	jmp    ffffffff800334d2 <ZydisFormatterIntelFormatInstruction+0x117>
ffffffff800334c6:	48 8b 45 80          	mov    -0x80(%rbp),%rax
ffffffff800334ca:	48 8b 40 28          	mov    0x28(%rax),%rax
ffffffff800334ce:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff800334d2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800334d6:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
ffffffff800334da:	74 63                	je     ffffffff8003353f <ZydisFormatterIntelFormatInstruction+0x184>
ffffffff800334dc:	48 8b 45 80          	mov    -0x80(%rbp),%rax
ffffffff800334e0:	0f b6 00             	movzbl (%rax),%eax
ffffffff800334e3:	84 c0                	test   %al,%al
ffffffff800334e5:	74 2c                	je     ffffffff80033513 <ZydisFormatterIntelFormatInstruction+0x158>
ffffffff800334e7:	48 8d 15 42 d6 00 00 	lea    0xd642(%rip),%rdx        # ffffffff80040b30 <TOK_DATA_DELIM_OPERAND.lto_priv.2>
ffffffff800334ee:	48 8b 45 80          	mov    -0x80(%rbp),%rax
ffffffff800334f2:	48 89 d6             	mov    %rdx,%rsi
ffffffff800334f5:	48 89 c7             	mov    %rax,%rdi
ffffffff800334f8:	e8 9b fd ff ff       	call   ffffffff80033298 <ZydisFormatterBufferAppendPredefined.lto_priv.2>
ffffffff800334fd:	89 45 c0             	mov    %eax,-0x40(%rbp)
ffffffff80033500:	8b 45 c0             	mov    -0x40(%rbp),%eax
ffffffff80033503:	85 c0                	test   %eax,%eax
ffffffff80033505:	0f 89 93 00 00 00    	jns    ffffffff8003359e <ZydisFormatterIntelFormatInstruction+0x1e3>
ffffffff8003350b:	8b 45 c0             	mov    -0x40(%rbp),%eax
ffffffff8003350e:	e9 97 05 00 00       	jmp    ffffffff80033aaa <ZydisFormatterIntelFormatInstruction+0x6ef>
ffffffff80033513:	48 8b 45 80          	mov    -0x80(%rbp),%rax
ffffffff80033517:	48 83 c0 10          	add    $0x10,%rax
ffffffff8003351b:	48 8d 15 b6 78 07 00 	lea    0x778b6(%rip),%rdx        # ffffffff800aadd8 <STR_DELIM_OPERAND.lto_priv.2>
ffffffff80033522:	48 89 d6             	mov    %rdx,%rsi
ffffffff80033525:	48 89 c7             	mov    %rax,%rdi
ffffffff80033528:	e8 a4 f8 ff ff       	call   ffffffff80032dd1 <ZydisStringAppendShort.lto_priv.2>
ffffffff8003352d:	89 45 c4             	mov    %eax,-0x3c(%rbp)
ffffffff80033530:	8b 45 c4             	mov    -0x3c(%rbp),%eax
ffffffff80033533:	85 c0                	test   %eax,%eax
ffffffff80033535:	79 67                	jns    ffffffff8003359e <ZydisFormatterIntelFormatInstruction+0x1e3>
ffffffff80033537:	8b 45 c4             	mov    -0x3c(%rbp),%eax
ffffffff8003353a:	e9 6b 05 00 00       	jmp    ffffffff80033aaa <ZydisFormatterIntelFormatInstruction+0x6ef>
ffffffff8003353f:	48 8b 45 80          	mov    -0x80(%rbp),%rax
ffffffff80033543:	0f b6 00             	movzbl (%rax),%eax
ffffffff80033546:	84 c0                	test   %al,%al
ffffffff80033548:	74 28                	je     ffffffff80033572 <ZydisFormatterIntelFormatInstruction+0x1b7>
ffffffff8003354a:	48 8d 15 d7 d5 00 00 	lea    0xd5d7(%rip),%rdx        # ffffffff80040b28 <TOK_DATA_DELIM_MNEMONIC.lto_priv.2>
ffffffff80033551:	48 8b 45 80          	mov    -0x80(%rbp),%rax
ffffffff80033555:	48 89 d6             	mov    %rdx,%rsi
ffffffff80033558:	48 89 c7             	mov    %rax,%rdi
ffffffff8003355b:	e8 38 fd ff ff       	call   ffffffff80033298 <ZydisFormatterBufferAppendPredefined.lto_priv.2>
ffffffff80033560:	89 45 c8             	mov    %eax,-0x38(%rbp)
ffffffff80033563:	8b 45 c8             	mov    -0x38(%rbp),%eax
ffffffff80033566:	85 c0                	test   %eax,%eax
ffffffff80033568:	79 34                	jns    ffffffff8003359e <ZydisFormatterIntelFormatInstruction+0x1e3>
ffffffff8003356a:	8b 45 c8             	mov    -0x38(%rbp),%eax
ffffffff8003356d:	e9 38 05 00 00       	jmp    ffffffff80033aaa <ZydisFormatterIntelFormatInstruction+0x6ef>
ffffffff80033572:	48 8b 45 80          	mov    -0x80(%rbp),%rax
ffffffff80033576:	48 83 c0 10          	add    $0x10,%rax
ffffffff8003357a:	48 8d 15 3f 78 07 00 	lea    0x7783f(%rip),%rdx        # ffffffff800aadc0 <STR_DELIM_MNEMONIC.lto_priv.2>
ffffffff80033581:	48 89 d6             	mov    %rdx,%rsi
ffffffff80033584:	48 89 c7             	mov    %rax,%rdi
ffffffff80033587:	e8 45 f8 ff ff       	call   ffffffff80032dd1 <ZydisStringAppendShort.lto_priv.2>
ffffffff8003358c:	89 45 cc             	mov    %eax,-0x34(%rbp)
ffffffff8003358f:	8b 45 cc             	mov    -0x34(%rbp),%eax
ffffffff80033592:	85 c0                	test   %eax,%eax
ffffffff80033594:	79 08                	jns    ffffffff8003359e <ZydisFormatterIntelFormatInstruction+0x1e3>
ffffffff80033596:	8b 45 cc             	mov    -0x34(%rbp),%eax
ffffffff80033599:	e9 0c 05 00 00       	jmp    ffffffff80033aaa <ZydisFormatterIntelFormatInstruction+0x6ef>
ffffffff8003359e:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
ffffffff800335a5:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
ffffffff800335a9:	48 89 50 10          	mov    %rdx,0x10(%rax)
ffffffff800335ad:	48 8b 45 88          	mov    -0x78(%rbp),%rax
ffffffff800335b1:	48 8b 80 c8 01 00 00 	mov    0x1c8(%rax),%rax
ffffffff800335b8:	48 85 c0             	test   %rax,%rax
ffffffff800335bb:	74 67                	je     ffffffff80033624 <ZydisFormatterIntelFormatInstruction+0x269>
ffffffff800335bd:	48 8b 45 88          	mov    -0x78(%rbp),%rax
ffffffff800335c1:	4c 8b 80 c8 01 00 00 	mov    0x1c8(%rax),%r8
ffffffff800335c8:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
ffffffff800335cf:	48 8b 4d 80          	mov    -0x80(%rbp),%rcx
ffffffff800335d3:	48 8b 45 88          	mov    -0x78(%rbp),%rax
ffffffff800335d7:	48 89 ce             	mov    %rcx,%rsi
ffffffff800335da:	48 89 c7             	mov    %rax,%rdi
ffffffff800335dd:	41 ff d0             	call   *%r8
ffffffff800335e0:	89 45 e4             	mov    %eax,-0x1c(%rbp)
ffffffff800335e3:	81 7d e4 0b 00 20 00 	cmpl   $0x20000b,-0x1c(%rbp)
ffffffff800335ea:	75 29                	jne    ffffffff80033615 <ZydisFormatterIntelFormatInstruction+0x25a>
ffffffff800335ec:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff800335f0:	48 8b 45 80          	mov    -0x80(%rbp),%rax
ffffffff800335f4:	48 89 d6             	mov    %rdx,%rsi
ffffffff800335f7:	48 89 c7             	mov    %rax,%rdi
ffffffff800335fa:	e8 8d 26 00 00       	call   ffffffff80035c8c <ZydisFormatterBufferRestore>
ffffffff800335ff:	89 45 bc             	mov    %eax,-0x44(%rbp)
ffffffff80033602:	8b 45 bc             	mov    -0x44(%rbp),%eax
ffffffff80033605:	85 c0                	test   %eax,%eax
ffffffff80033607:	0f 89 75 04 00 00    	jns    ffffffff80033a82 <ZydisFormatterIntelFormatInstruction+0x6c7>
ffffffff8003360d:	8b 45 bc             	mov    -0x44(%rbp),%eax
ffffffff80033610:	e9 95 04 00 00       	jmp    ffffffff80033aaa <ZydisFormatterIntelFormatInstruction+0x6ef>
ffffffff80033615:	8b 45 e4             	mov    -0x1c(%rbp),%eax
ffffffff80033618:	85 c0                	test   %eax,%eax
ffffffff8003361a:	79 08                	jns    ffffffff80033624 <ZydisFormatterIntelFormatInstruction+0x269>
ffffffff8003361c:	8b 45 e4             	mov    -0x1c(%rbp),%eax
ffffffff8003361f:	e9 86 04 00 00       	jmp    ffffffff80033aaa <ZydisFormatterIntelFormatInstruction+0x6ef>
ffffffff80033624:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff80033628:	8b 40 04             	mov    0x4(%rax),%eax
ffffffff8003362b:	83 f8 04             	cmp    $0x4,%eax
ffffffff8003362e:	0f 84 a1 00 00 00    	je     ffffffff800336d5 <ZydisFormatterIntelFormatInstruction+0x31a>
ffffffff80033634:	83 f8 04             	cmp    $0x4,%eax
ffffffff80033637:	0f 87 c0 00 00 00    	ja     ffffffff800336fd <ZydisFormatterIntelFormatInstruction+0x342>
ffffffff8003363d:	83 f8 03             	cmp    $0x3,%eax
ffffffff80033640:	74 6b                	je     ffffffff800336ad <ZydisFormatterIntelFormatInstruction+0x2f2>
ffffffff80033642:	83 f8 03             	cmp    $0x3,%eax
ffffffff80033645:	0f 87 b2 00 00 00    	ja     ffffffff800336fd <ZydisFormatterIntelFormatInstruction+0x342>
ffffffff8003364b:	83 f8 01             	cmp    $0x1,%eax
ffffffff8003364e:	74 0a                	je     ffffffff8003365a <ZydisFormatterIntelFormatInstruction+0x29f>
ffffffff80033650:	83 f8 02             	cmp    $0x2,%eax
ffffffff80033653:	74 30                	je     ffffffff80033685 <ZydisFormatterIntelFormatInstruction+0x2ca>
ffffffff80033655:	e9 a3 00 00 00       	jmp    ffffffff800336fd <ZydisFormatterIntelFormatInstruction+0x342>
ffffffff8003365a:	48 8b 45 88          	mov    -0x78(%rbp),%rax
ffffffff8003365e:	4c 8b 80 d8 01 00 00 	mov    0x1d8(%rax),%r8
ffffffff80033665:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
ffffffff8003366c:	48 8b 4d 80          	mov    -0x80(%rbp),%rcx
ffffffff80033670:	48 8b 45 88          	mov    -0x78(%rbp),%rax
ffffffff80033674:	48 89 ce             	mov    %rcx,%rsi
ffffffff80033677:	48 89 c7             	mov    %rax,%rdi
ffffffff8003367a:	41 ff d0             	call   *%r8
ffffffff8003367d:	89 45 e4             	mov    %eax,-0x1c(%rbp)
ffffffff80033680:	e9 82 00 00 00       	jmp    ffffffff80033707 <ZydisFormatterIntelFormatInstruction+0x34c>
ffffffff80033685:	48 8b 45 88          	mov    -0x78(%rbp),%rax
ffffffff80033689:	4c 8b 80 e0 01 00 00 	mov    0x1e0(%rax),%r8
ffffffff80033690:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
ffffffff80033697:	48 8b 4d 80          	mov    -0x80(%rbp),%rcx
ffffffff8003369b:	48 8b 45 88          	mov    -0x78(%rbp),%rax
ffffffff8003369f:	48 89 ce             	mov    %rcx,%rsi
ffffffff800336a2:	48 89 c7             	mov    %rax,%rdi
ffffffff800336a5:	41 ff d0             	call   *%r8
ffffffff800336a8:	89 45 e4             	mov    %eax,-0x1c(%rbp)
ffffffff800336ab:	eb 5a                	jmp    ffffffff80033707 <ZydisFormatterIntelFormatInstruction+0x34c>
ffffffff800336ad:	48 8b 45 88          	mov    -0x78(%rbp),%rax
ffffffff800336b1:	4c 8b 80 e8 01 00 00 	mov    0x1e8(%rax),%r8
ffffffff800336b8:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
ffffffff800336bf:	48 8b 4d 80          	mov    -0x80(%rbp),%rcx
ffffffff800336c3:	48 8b 45 88          	mov    -0x78(%rbp),%rax
ffffffff800336c7:	48 89 ce             	mov    %rcx,%rsi
ffffffff800336ca:	48 89 c7             	mov    %rax,%rdi
ffffffff800336cd:	41 ff d0             	call   *%r8
ffffffff800336d0:	89 45 e4             	mov    %eax,-0x1c(%rbp)
ffffffff800336d3:	eb 32                	jmp    ffffffff80033707 <ZydisFormatterIntelFormatInstruction+0x34c>
ffffffff800336d5:	48 8b 45 88          	mov    -0x78(%rbp),%rax
ffffffff800336d9:	4c 8b 80 f0 01 00 00 	mov    0x1f0(%rax),%r8
ffffffff800336e0:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
ffffffff800336e7:	48 8b 4d 80          	mov    -0x80(%rbp),%rcx
ffffffff800336eb:	48 8b 45 88          	mov    -0x78(%rbp),%rax
ffffffff800336ef:	48 89 ce             	mov    %rcx,%rsi
ffffffff800336f2:	48 89 c7             	mov    %rax,%rdi
ffffffff800336f5:	41 ff d0             	call   *%r8
ffffffff800336f8:	89 45 e4             	mov    %eax,-0x1c(%rbp)
ffffffff800336fb:	eb 0a                	jmp    ffffffff80033707 <ZydisFormatterIntelFormatInstruction+0x34c>
ffffffff800336fd:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff80033702:	e9 a3 03 00 00       	jmp    ffffffff80033aaa <ZydisFormatterIntelFormatInstruction+0x6ef>
ffffffff80033707:	81 7d e4 0b 00 20 00 	cmpl   $0x20000b,-0x1c(%rbp)
ffffffff8003370e:	75 29                	jne    ffffffff80033739 <ZydisFormatterIntelFormatInstruction+0x37e>
ffffffff80033710:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff80033714:	48 8b 45 80          	mov    -0x80(%rbp),%rax
ffffffff80033718:	48 89 d6             	mov    %rdx,%rsi
ffffffff8003371b:	48 89 c7             	mov    %rax,%rdi
ffffffff8003371e:	e8 69 25 00 00       	call   ffffffff80035c8c <ZydisFormatterBufferRestore>
ffffffff80033723:	89 45 98             	mov    %eax,-0x68(%rbp)
ffffffff80033726:	8b 45 98             	mov    -0x68(%rbp),%eax
ffffffff80033729:	85 c0                	test   %eax,%eax
ffffffff8003372b:	0f 89 54 03 00 00    	jns    ffffffff80033a85 <ZydisFormatterIntelFormatInstruction+0x6ca>
ffffffff80033731:	8b 45 98             	mov    -0x68(%rbp),%eax
ffffffff80033734:	e9 71 03 00 00       	jmp    ffffffff80033aaa <ZydisFormatterIntelFormatInstruction+0x6ef>
ffffffff80033739:	8b 45 e4             	mov    -0x1c(%rbp),%eax
ffffffff8003373c:	85 c0                	test   %eax,%eax
ffffffff8003373e:	79 08                	jns    ffffffff80033748 <ZydisFormatterIntelFormatInstruction+0x38d>
ffffffff80033740:	8b 45 e4             	mov    -0x1c(%rbp),%eax
ffffffff80033743:	e9 62 03 00 00       	jmp    ffffffff80033aaa <ZydisFormatterIntelFormatInstruction+0x6ef>
ffffffff80033748:	48 8b 45 88          	mov    -0x78(%rbp),%rax
ffffffff8003374c:	48 8b 80 d0 01 00 00 	mov    0x1d0(%rax),%rax
ffffffff80033753:	48 85 c0             	test   %rax,%rax
ffffffff80033756:	74 67                	je     ffffffff800337bf <ZydisFormatterIntelFormatInstruction+0x404>
ffffffff80033758:	48 8b 45 88          	mov    -0x78(%rbp),%rax
ffffffff8003375c:	4c 8b 80 d0 01 00 00 	mov    0x1d0(%rax),%r8
ffffffff80033763:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
ffffffff8003376a:	48 8b 4d 80          	mov    -0x80(%rbp),%rcx
ffffffff8003376e:	48 8b 45 88          	mov    -0x78(%rbp),%rax
ffffffff80033772:	48 89 ce             	mov    %rcx,%rsi
ffffffff80033775:	48 89 c7             	mov    %rax,%rdi
ffffffff80033778:	41 ff d0             	call   *%r8
ffffffff8003377b:	89 45 e4             	mov    %eax,-0x1c(%rbp)
ffffffff8003377e:	81 7d e4 0b 00 20 00 	cmpl   $0x20000b,-0x1c(%rbp)
ffffffff80033785:	75 29                	jne    ffffffff800337b0 <ZydisFormatterIntelFormatInstruction+0x3f5>
ffffffff80033787:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff8003378b:	48 8b 45 80          	mov    -0x80(%rbp),%rax
ffffffff8003378f:	48 89 d6             	mov    %rdx,%rsi
ffffffff80033792:	48 89 c7             	mov    %rax,%rdi
ffffffff80033795:	e8 f2 24 00 00       	call   ffffffff80035c8c <ZydisFormatterBufferRestore>
ffffffff8003379a:	89 45 b8             	mov    %eax,-0x48(%rbp)
ffffffff8003379d:	8b 45 b8             	mov    -0x48(%rbp),%eax
ffffffff800337a0:	85 c0                	test   %eax,%eax
ffffffff800337a2:	0f 89 e0 02 00 00    	jns    ffffffff80033a88 <ZydisFormatterIntelFormatInstruction+0x6cd>
ffffffff800337a8:	8b 45 b8             	mov    -0x48(%rbp),%eax
ffffffff800337ab:	e9 fa 02 00 00       	jmp    ffffffff80033aaa <ZydisFormatterIntelFormatInstruction+0x6ef>
ffffffff800337b0:	8b 45 e4             	mov    -0x1c(%rbp),%eax
ffffffff800337b3:	85 c0                	test   %eax,%eax
ffffffff800337b5:	78 08                	js     ffffffff800337bf <ZydisFormatterIntelFormatInstruction+0x404>
ffffffff800337b7:	8b 45 e4             	mov    -0x1c(%rbp),%eax
ffffffff800337ba:	e9 eb 02 00 00       	jmp    ffffffff80033aaa <ZydisFormatterIntelFormatInstruction+0x6ef>
ffffffff800337bf:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
ffffffff800337c6:	48 8b 00             	mov    (%rax),%rax
ffffffff800337c9:	8b 40 0c             	mov    0xc(%rax),%eax
ffffffff800337cc:	83 f8 04             	cmp    $0x4,%eax
ffffffff800337cf:	74 16                	je     ffffffff800337e7 <ZydisFormatterIntelFormatInstruction+0x42c>
ffffffff800337d1:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
ffffffff800337d8:	48 8b 00             	mov    (%rax),%rax
ffffffff800337db:	8b 40 0c             	mov    0xc(%rax),%eax
ffffffff800337de:	83 f8 05             	cmp    $0x5,%eax
ffffffff800337e1:	0f 85 a2 02 00 00    	jne    ffffffff80033a89 <ZydisFormatterIntelFormatInstruction+0x6ce>
ffffffff800337e7:	80 7d f7 00          	cmpb   $0x0,-0x9(%rbp)
ffffffff800337eb:	75 6b                	jne    ffffffff80033858 <ZydisFormatterIntelFormatInstruction+0x49d>
ffffffff800337ed:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
ffffffff800337f4:	48 8b 00             	mov    (%rax),%rax
ffffffff800337f7:	0f b6 40 19          	movzbl 0x19(%rax),%eax
ffffffff800337fb:	3c 01                	cmp    $0x1,%al
ffffffff800337fd:	76 59                	jbe    ffffffff80033858 <ZydisFormatterIntelFormatInstruction+0x49d>
ffffffff800337ff:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
ffffffff80033806:	48 8b 50 08          	mov    0x8(%rax),%rdx
ffffffff8003380a:	0f b6 45 f7          	movzbl -0x9(%rbp),%eax
ffffffff8003380e:	48 83 c0 01          	add    $0x1,%rax
ffffffff80033812:	48 6b c0 68          	imul   $0x68,%rax,%rax
ffffffff80033816:	48 01 d0             	add    %rdx,%rax
ffffffff80033819:	8b 40 10             	mov    0x10(%rax),%eax
ffffffff8003381c:	83 f8 06             	cmp    $0x6,%eax
ffffffff8003381f:	75 37                	jne    ffffffff80033858 <ZydisFormatterIntelFormatInstruction+0x49d>
ffffffff80033821:	48 8b 45 88          	mov    -0x78(%rbp),%rax
ffffffff80033825:	4c 8b 80 40 02 00 00 	mov    0x240(%rax),%r8
ffffffff8003382c:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
ffffffff80033833:	48 8b 75 80          	mov    -0x80(%rbp),%rsi
ffffffff80033837:	48 8b 45 88          	mov    -0x78(%rbp),%rax
ffffffff8003383b:	b9 01 00 00 00       	mov    $0x1,%ecx
ffffffff80033840:	48 89 c7             	mov    %rax,%rdi
ffffffff80033843:	41 ff d0             	call   *%r8
ffffffff80033846:	89 45 b4             	mov    %eax,-0x4c(%rbp)
ffffffff80033849:	8b 45 b4             	mov    -0x4c(%rbp),%eax
ffffffff8003384c:	85 c0                	test   %eax,%eax
ffffffff8003384e:	79 08                	jns    ffffffff80033858 <ZydisFormatterIntelFormatInstruction+0x49d>
ffffffff80033850:	8b 45 b4             	mov    -0x4c(%rbp),%eax
ffffffff80033853:	e9 52 02 00 00       	jmp    ffffffff80033aaa <ZydisFormatterIntelFormatInstruction+0x6ef>
ffffffff80033858:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8003385c:	8b 40 04             	mov    0x4(%rax),%eax
ffffffff8003385f:	83 f8 02             	cmp    $0x2,%eax
ffffffff80033862:	0f 85 bf 00 00 00    	jne    ffffffff80033927 <ZydisFormatterIntelFormatInstruction+0x56c>
ffffffff80033868:	48 8b 45 88          	mov    -0x78(%rbp),%rax
ffffffff8003386c:	4c 8b 80 40 02 00 00 	mov    0x240(%rax),%r8
ffffffff80033873:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
ffffffff8003387a:	48 8b 75 80          	mov    -0x80(%rbp),%rsi
ffffffff8003387e:	48 8b 45 88          	mov    -0x78(%rbp),%rax
ffffffff80033882:	b9 02 00 00 00       	mov    $0x2,%ecx
ffffffff80033887:	48 89 c7             	mov    %rax,%rdi
ffffffff8003388a:	41 ff d0             	call   *%r8
ffffffff8003388d:	89 45 a4             	mov    %eax,-0x5c(%rbp)
ffffffff80033890:	8b 45 a4             	mov    -0x5c(%rbp),%eax
ffffffff80033893:	85 c0                	test   %eax,%eax
ffffffff80033895:	79 08                	jns    ffffffff8003389f <ZydisFormatterIntelFormatInstruction+0x4e4>
ffffffff80033897:	8b 45 a4             	mov    -0x5c(%rbp),%eax
ffffffff8003389a:	e9 0b 02 00 00       	jmp    ffffffff80033aaa <ZydisFormatterIntelFormatInstruction+0x6ef>
ffffffff8003389f:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
ffffffff800338a6:	48 8b 00             	mov    (%rax),%rax
ffffffff800338a9:	8b 40 0c             	mov    0xc(%rax),%eax
ffffffff800338ac:	83 f8 05             	cmp    $0x5,%eax
ffffffff800338af:	0f 85 d4 01 00 00    	jne    ffffffff80033a89 <ZydisFormatterIntelFormatInstruction+0x6ce>
ffffffff800338b5:	48 8b 45 88          	mov    -0x78(%rbp),%rax
ffffffff800338b9:	4c 8b 80 40 02 00 00 	mov    0x240(%rax),%r8
ffffffff800338c0:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
ffffffff800338c7:	48 8b 75 80          	mov    -0x80(%rbp),%rsi
ffffffff800338cb:	48 8b 45 88          	mov    -0x78(%rbp),%rax
ffffffff800338cf:	b9 06 00 00 00       	mov    $0x6,%ecx
ffffffff800338d4:	48 89 c7             	mov    %rax,%rdi
ffffffff800338d7:	41 ff d0             	call   *%r8
ffffffff800338da:	89 45 a0             	mov    %eax,-0x60(%rbp)
ffffffff800338dd:	8b 45 a0             	mov    -0x60(%rbp),%eax
ffffffff800338e0:	85 c0                	test   %eax,%eax
ffffffff800338e2:	79 08                	jns    ffffffff800338ec <ZydisFormatterIntelFormatInstruction+0x531>
ffffffff800338e4:	8b 45 a0             	mov    -0x60(%rbp),%eax
ffffffff800338e7:	e9 be 01 00 00       	jmp    ffffffff80033aaa <ZydisFormatterIntelFormatInstruction+0x6ef>
ffffffff800338ec:	48 8b 45 88          	mov    -0x78(%rbp),%rax
ffffffff800338f0:	4c 8b 80 40 02 00 00 	mov    0x240(%rax),%r8
ffffffff800338f7:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
ffffffff800338fe:	48 8b 75 80          	mov    -0x80(%rbp),%rsi
ffffffff80033902:	48 8b 45 88          	mov    -0x78(%rbp),%rax
ffffffff80033906:	b9 07 00 00 00       	mov    $0x7,%ecx
ffffffff8003390b:	48 89 c7             	mov    %rax,%rdi
ffffffff8003390e:	41 ff d0             	call   *%r8
ffffffff80033911:	89 45 9c             	mov    %eax,-0x64(%rbp)
ffffffff80033914:	8b 45 9c             	mov    -0x64(%rbp),%eax
ffffffff80033917:	85 c0                	test   %eax,%eax
ffffffff80033919:	0f 89 6a 01 00 00    	jns    ffffffff80033a89 <ZydisFormatterIntelFormatInstruction+0x6ce>
ffffffff8003391f:	8b 45 9c             	mov    -0x64(%rbp),%eax
ffffffff80033922:	e9 83 01 00 00       	jmp    ffffffff80033aaa <ZydisFormatterIntelFormatInstruction+0x6ef>
ffffffff80033927:	0f b6 55 f7          	movzbl -0x9(%rbp),%edx
ffffffff8003392b:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
ffffffff80033932:	48 8b 00             	mov    (%rax),%rax
ffffffff80033935:	0f b6 40 19          	movzbl 0x19(%rax),%eax
ffffffff80033939:	0f b6 c0             	movzbl %al,%eax
ffffffff8003393c:	83 e8 01             	sub    $0x1,%eax
ffffffff8003393f:	39 c2                	cmp    %eax,%edx
ffffffff80033941:	75 12                	jne    ffffffff80033955 <ZydisFormatterIntelFormatInstruction+0x59a>
ffffffff80033943:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff80033947:	8b 40 04             	mov    0x4(%rax),%eax
ffffffff8003394a:	83 f8 04             	cmp    $0x4,%eax
ffffffff8003394d:	0f 95 c0             	setne  %al
ffffffff80033950:	88 45 e3             	mov    %al,-0x1d(%rbp)
ffffffff80033953:	eb 6f                	jmp    ffffffff800339c4 <ZydisFormatterIntelFormatInstruction+0x609>
ffffffff80033955:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
ffffffff8003395c:	48 8b 00             	mov    (%rax),%rax
ffffffff8003395f:	0f b6 40 19          	movzbl 0x19(%rax),%eax
ffffffff80033963:	0f b6 c0             	movzbl %al,%eax
ffffffff80033966:	0f b6 55 f7          	movzbl -0x9(%rbp),%edx
ffffffff8003396a:	83 c2 01             	add    $0x1,%edx
ffffffff8003396d:	39 d0                	cmp    %edx,%eax
ffffffff8003396f:	7e 4b                	jle    ffffffff800339bc <ZydisFormatterIntelFormatInstruction+0x601>
ffffffff80033971:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
ffffffff80033978:	48 8b 50 08          	mov    0x8(%rax),%rdx
ffffffff8003397c:	0f b6 45 f7          	movzbl -0x9(%rbp),%eax
ffffffff80033980:	48 83 c0 01          	add    $0x1,%rax
ffffffff80033984:	48 6b c0 68          	imul   $0x68,%rax,%rax
ffffffff80033988:	48 01 d0             	add    %rdx,%rax
ffffffff8003398b:	8b 40 04             	mov    0x4(%rax),%eax
ffffffff8003398e:	83 f8 04             	cmp    $0x4,%eax
ffffffff80033991:	74 22                	je     ffffffff800339b5 <ZydisFormatterIntelFormatInstruction+0x5fa>
ffffffff80033993:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
ffffffff8003399a:	48 8b 50 08          	mov    0x8(%rax),%rdx
ffffffff8003399e:	0f b6 45 f7          	movzbl -0x9(%rbp),%eax
ffffffff800339a2:	48 83 c0 01          	add    $0x1,%rax
ffffffff800339a6:	48 6b c0 68          	imul   $0x68,%rax,%rax
ffffffff800339aa:	48 01 d0             	add    %rdx,%rax
ffffffff800339ad:	8b 40 08             	mov    0x8(%rax),%eax
ffffffff800339b0:	83 f8 03             	cmp    $0x3,%eax
ffffffff800339b3:	75 07                	jne    ffffffff800339bc <ZydisFormatterIntelFormatInstruction+0x601>
ffffffff800339b5:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff800339ba:	eb 05                	jmp    ffffffff800339c1 <ZydisFormatterIntelFormatInstruction+0x606>
ffffffff800339bc:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800339c1:	88 45 e3             	mov    %al,-0x1d(%rbp)
ffffffff800339c4:	80 7d e3 00          	cmpb   $0x0,-0x1d(%rbp)
ffffffff800339c8:	0f 84 bb 00 00 00    	je     ffffffff80033a89 <ZydisFormatterIntelFormatInstruction+0x6ce>
ffffffff800339ce:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
ffffffff800339d5:	48 8b 00             	mov    (%rax),%rax
ffffffff800339d8:	8b 40 0c             	mov    0xc(%rax),%eax
ffffffff800339db:	83 f8 05             	cmp    $0x5,%eax
ffffffff800339de:	75 37                	jne    ffffffff80033a17 <ZydisFormatterIntelFormatInstruction+0x65c>
ffffffff800339e0:	48 8b 45 88          	mov    -0x78(%rbp),%rax
ffffffff800339e4:	4c 8b 80 40 02 00 00 	mov    0x240(%rax),%r8
ffffffff800339eb:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
ffffffff800339f2:	48 8b 75 80          	mov    -0x80(%rbp),%rsi
ffffffff800339f6:	48 8b 45 88          	mov    -0x78(%rbp),%rax
ffffffff800339fa:	b9 05 00 00 00       	mov    $0x5,%ecx
ffffffff800339ff:	48 89 c7             	mov    %rax,%rdi
ffffffff80033a02:	41 ff d0             	call   *%r8
ffffffff80033a05:	89 45 b0             	mov    %eax,-0x50(%rbp)
ffffffff80033a08:	8b 45 b0             	mov    -0x50(%rbp),%eax
ffffffff80033a0b:	85 c0                	test   %eax,%eax
ffffffff80033a0d:	79 08                	jns    ffffffff80033a17 <ZydisFormatterIntelFormatInstruction+0x65c>
ffffffff80033a0f:	8b 45 b0             	mov    -0x50(%rbp),%eax
ffffffff80033a12:	e9 93 00 00 00       	jmp    ffffffff80033aaa <ZydisFormatterIntelFormatInstruction+0x6ef>
ffffffff80033a17:	48 8b 45 88          	mov    -0x78(%rbp),%rax
ffffffff80033a1b:	4c 8b 80 40 02 00 00 	mov    0x240(%rax),%r8
ffffffff80033a22:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
ffffffff80033a29:	48 8b 75 80          	mov    -0x80(%rbp),%rsi
ffffffff80033a2d:	48 8b 45 88          	mov    -0x78(%rbp),%rax
ffffffff80033a31:	b9 03 00 00 00       	mov    $0x3,%ecx
ffffffff80033a36:	48 89 c7             	mov    %rax,%rdi
ffffffff80033a39:	41 ff d0             	call   *%r8
ffffffff80033a3c:	89 45 ac             	mov    %eax,-0x54(%rbp)
ffffffff80033a3f:	8b 45 ac             	mov    -0x54(%rbp),%eax
ffffffff80033a42:	85 c0                	test   %eax,%eax
ffffffff80033a44:	79 05                	jns    ffffffff80033a4b <ZydisFormatterIntelFormatInstruction+0x690>
ffffffff80033a46:	8b 45 ac             	mov    -0x54(%rbp),%eax
ffffffff80033a49:	eb 5f                	jmp    ffffffff80033aaa <ZydisFormatterIntelFormatInstruction+0x6ef>
ffffffff80033a4b:	48 8b 45 88          	mov    -0x78(%rbp),%rax
ffffffff80033a4f:	4c 8b 80 40 02 00 00 	mov    0x240(%rax),%r8
ffffffff80033a56:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
ffffffff80033a5d:	48 8b 75 80          	mov    -0x80(%rbp),%rsi
ffffffff80033a61:	48 8b 45 88          	mov    -0x78(%rbp),%rax
ffffffff80033a65:	b9 04 00 00 00       	mov    $0x4,%ecx
ffffffff80033a6a:	48 89 c7             	mov    %rax,%rdi
ffffffff80033a6d:	41 ff d0             	call   *%r8
ffffffff80033a70:	89 45 a8             	mov    %eax,-0x58(%rbp)
ffffffff80033a73:	8b 45 a8             	mov    -0x58(%rbp),%eax
ffffffff80033a76:	85 c0                	test   %eax,%eax
ffffffff80033a78:	79 0f                	jns    ffffffff80033a89 <ZydisFormatterIntelFormatInstruction+0x6ce>
ffffffff80033a7a:	8b 45 a8             	mov    -0x58(%rbp),%eax
ffffffff80033a7d:	eb 2b                	jmp    ffffffff80033aaa <ZydisFormatterIntelFormatInstruction+0x6ef>
ffffffff80033a7f:	90                   	nop
ffffffff80033a80:	eb 07                	jmp    ffffffff80033a89 <ZydisFormatterIntelFormatInstruction+0x6ce>
ffffffff80033a82:	90                   	nop
ffffffff80033a83:	eb 04                	jmp    ffffffff80033a89 <ZydisFormatterIntelFormatInstruction+0x6ce>
ffffffff80033a85:	90                   	nop
ffffffff80033a86:	eb 01                	jmp    ffffffff80033a89 <ZydisFormatterIntelFormatInstruction+0x6ce>
ffffffff80033a88:	90                   	nop
ffffffff80033a89:	80 45 f7 01          	addb   $0x1,-0x9(%rbp)
ffffffff80033a8d:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
ffffffff80033a94:	48 8b 00             	mov    (%rax),%rax
ffffffff80033a97:	0f b6 40 19          	movzbl 0x19(%rax),%eax
ffffffff80033a9b:	38 45 f7             	cmp    %al,-0x9(%rbp)
ffffffff80033a9e:	0f 82 cd f9 ff ff    	jb     ffffffff80033471 <ZydisFormatterIntelFormatInstruction+0xb6>
ffffffff80033aa4:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff80033aa9:	90                   	nop
ffffffff80033aaa:	c9                   	leave  
ffffffff80033aab:	c3                   	ret    

ffffffff80033aac <ZydisFormatterIntelFormatOperandMEM>:
ffffffff80033aac:	f3 0f 1e fa          	endbr64 
ffffffff80033ab0:	55                   	push   %rbp
ffffffff80033ab1:	48 89 e5             	mov    %rsp,%rbp
ffffffff80033ab4:	48 83 ec 70          	sub    $0x70,%rsp
ffffffff80033ab8:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
ffffffff80033abc:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
ffffffff80033ac0:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
ffffffff80033ac4:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff80033ac8:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff80033acc:	8b 40 28             	mov    0x28(%rax),%eax
ffffffff80033acf:	83 f8 01             	cmp    $0x1,%eax
ffffffff80033ad2:	74 10                	je     ffffffff80033ae4 <ZydisFormatterIntelFormatOperandMEM+0x38>
ffffffff80033ad4:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff80033ad8:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff80033adc:	8b 40 28             	mov    0x28(%rax),%eax
ffffffff80033adf:	83 f8 04             	cmp    $0x4,%eax
ffffffff80033ae2:	75 32                	jne    ffffffff80033b16 <ZydisFormatterIntelFormatOperandMEM+0x6a>
ffffffff80033ae4:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff80033ae8:	4c 8b 80 28 02 00 00 	mov    0x228(%rax),%r8
ffffffff80033aef:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
ffffffff80033af3:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
ffffffff80033af7:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff80033afb:	48 89 ce             	mov    %rcx,%rsi
ffffffff80033afe:	48 89 c7             	mov    %rax,%rdi
ffffffff80033b01:	41 ff d0             	call   *%r8
ffffffff80033b04:	89 45 fc             	mov    %eax,-0x4(%rbp)
ffffffff80033b07:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff80033b0a:	85 c0                	test   %eax,%eax
ffffffff80033b0c:	79 08                	jns    ffffffff80033b16 <ZydisFormatterIntelFormatOperandMEM+0x6a>
ffffffff80033b0e:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff80033b11:	e9 7d 04 00 00       	jmp    ffffffff80033f93 <ZydisFormatterIntelFormatOperandMEM+0x4e7>
ffffffff80033b16:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff80033b1a:	4c 8b 80 30 02 00 00 	mov    0x230(%rax),%r8
ffffffff80033b21:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
ffffffff80033b25:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
ffffffff80033b29:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff80033b2d:	48 89 ce             	mov    %rcx,%rsi
ffffffff80033b30:	48 89 c7             	mov    %rax,%rdi
ffffffff80033b33:	41 ff d0             	call   *%r8
ffffffff80033b36:	89 45 f8             	mov    %eax,-0x8(%rbp)
ffffffff80033b39:	8b 45 f8             	mov    -0x8(%rbp),%eax
ffffffff80033b3c:	85 c0                	test   %eax,%eax
ffffffff80033b3e:	79 08                	jns    ffffffff80033b48 <ZydisFormatterIntelFormatOperandMEM+0x9c>
ffffffff80033b40:	8b 45 f8             	mov    -0x8(%rbp),%eax
ffffffff80033b43:	e9 4b 04 00 00       	jmp    ffffffff80033f93 <ZydisFormatterIntelFormatOperandMEM+0x4e7>
ffffffff80033b48:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff80033b4c:	0f b6 00             	movzbl (%rax),%eax
ffffffff80033b4f:	84 c0                	test   %al,%al
ffffffff80033b51:	74 28                	je     ffffffff80033b7b <ZydisFormatterIntelFormatOperandMEM+0xcf>
ffffffff80033b53:	48 8d 15 10 d0 00 00 	lea    0xd010(%rip),%rdx        # ffffffff80040b6a <TOK_DATA_MEMORY_BEGIN_INTEL.lto_priv.2>
ffffffff80033b5a:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff80033b5e:	48 89 d6             	mov    %rdx,%rsi
ffffffff80033b61:	48 89 c7             	mov    %rax,%rdi
ffffffff80033b64:	e8 2f f7 ff ff       	call   ffffffff80033298 <ZydisFormatterBufferAppendPredefined.lto_priv.2>
ffffffff80033b69:	89 45 f0             	mov    %eax,-0x10(%rbp)
ffffffff80033b6c:	8b 45 f0             	mov    -0x10(%rbp),%eax
ffffffff80033b6f:	85 c0                	test   %eax,%eax
ffffffff80033b71:	79 34                	jns    ffffffff80033ba7 <ZydisFormatterIntelFormatOperandMEM+0xfb>
ffffffff80033b73:	8b 45 f0             	mov    -0x10(%rbp),%eax
ffffffff80033b76:	e9 18 04 00 00       	jmp    ffffffff80033f93 <ZydisFormatterIntelFormatOperandMEM+0x4e7>
ffffffff80033b7b:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff80033b7f:	48 83 c0 10          	add    $0x10,%rax
ffffffff80033b83:	48 8d 15 fe 72 07 00 	lea    0x772fe(%rip),%rdx        # ffffffff800aae88 <STR_MEMORY_BEGIN_INTEL.lto_priv.2>
ffffffff80033b8a:	48 89 d6             	mov    %rdx,%rsi
ffffffff80033b8d:	48 89 c7             	mov    %rax,%rdi
ffffffff80033b90:	e8 3c f2 ff ff       	call   ffffffff80032dd1 <ZydisStringAppendShort.lto_priv.2>
ffffffff80033b95:	89 45 f4             	mov    %eax,-0xc(%rbp)
ffffffff80033b98:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff80033b9b:	85 c0                	test   %eax,%eax
ffffffff80033b9d:	79 08                	jns    ffffffff80033ba7 <ZydisFormatterIntelFormatOperandMEM+0xfb>
ffffffff80033b9f:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff80033ba2:	e9 ec 03 00 00       	jmp    ffffffff80033f93 <ZydisFormatterIntelFormatOperandMEM+0x4e7>
ffffffff80033ba7:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff80033bab:	0f b6 40 08          	movzbl 0x8(%rax),%eax
ffffffff80033baf:	84 c0                	test   %al,%al
ffffffff80033bb1:	75 15                	jne    ffffffff80033bc8 <ZydisFormatterIntelFormatOperandMEM+0x11c>
ffffffff80033bb3:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff80033bb7:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff80033bbb:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
ffffffff80033bbf:	74 07                	je     ffffffff80033bc8 <ZydisFormatterIntelFormatOperandMEM+0x11c>
ffffffff80033bc1:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff80033bc6:	eb 05                	jmp    ffffffff80033bcd <ZydisFormatterIntelFormatOperandMEM+0x121>
ffffffff80033bc8:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80033bcd:	88 45 ef             	mov    %al,-0x11(%rbp)
ffffffff80033bd0:	80 7d ef 00          	cmpb   $0x0,-0x11(%rbp)
ffffffff80033bd4:	0f 84 88 00 00 00    	je     ffffffff80033c62 <ZydisFormatterIntelFormatOperandMEM+0x1b6>
ffffffff80033bda:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff80033bde:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff80033be2:	0f b6 40 40          	movzbl 0x40(%rax),%eax
ffffffff80033be6:	84 c0                	test   %al,%al
ffffffff80033be8:	74 78                	je     ffffffff80033c62 <ZydisFormatterIntelFormatOperandMEM+0x1b6>
ffffffff80033bea:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff80033bee:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff80033bf2:	8b 40 34             	mov    0x34(%rax),%eax
ffffffff80033bf5:	85 c0                	test   %eax,%eax
ffffffff80033bf7:	75 69                	jne    ffffffff80033c62 <ZydisFormatterIntelFormatOperandMEM+0x1b6>
ffffffff80033bf9:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff80033bfd:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff80033c01:	8b 40 30             	mov    0x30(%rax),%eax
ffffffff80033c04:	85 c0                	test   %eax,%eax
ffffffff80033c06:	74 24                	je     ffffffff80033c2c <ZydisFormatterIntelFormatOperandMEM+0x180>
ffffffff80033c08:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff80033c0c:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff80033c10:	8b 40 30             	mov    0x30(%rax),%eax
ffffffff80033c13:	3d c4 00 00 00       	cmp    $0xc4,%eax
ffffffff80033c18:	74 12                	je     ffffffff80033c2c <ZydisFormatterIntelFormatOperandMEM+0x180>
ffffffff80033c1a:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff80033c1e:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff80033c22:	8b 40 30             	mov    0x30(%rax),%eax
ffffffff80033c25:	3d c5 00 00 00       	cmp    $0xc5,%eax
ffffffff80033c2a:	75 36                	jne    ffffffff80033c62 <ZydisFormatterIntelFormatOperandMEM+0x1b6>
ffffffff80033c2c:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff80033c30:	4c 8b 80 08 02 00 00 	mov    0x208(%rax),%r8
ffffffff80033c37:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
ffffffff80033c3b:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
ffffffff80033c3f:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff80033c43:	48 89 ce             	mov    %rcx,%rsi
ffffffff80033c46:	48 89 c7             	mov    %rax,%rdi
ffffffff80033c49:	41 ff d0             	call   *%r8
ffffffff80033c4c:	89 45 e8             	mov    %eax,-0x18(%rbp)
ffffffff80033c4f:	8b 45 e8             	mov    -0x18(%rbp),%eax
ffffffff80033c52:	85 c0                	test   %eax,%eax
ffffffff80033c54:	0f 89 d9 02 00 00    	jns    ffffffff80033f33 <ZydisFormatterIntelFormatOperandMEM+0x487>
ffffffff80033c5a:	8b 45 e8             	mov    -0x18(%rbp),%eax
ffffffff80033c5d:	e9 31 03 00 00       	jmp    ffffffff80033f93 <ZydisFormatterIntelFormatOperandMEM+0x4e7>
ffffffff80033c62:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff80033c66:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff80033c6a:	8b 40 30             	mov    0x30(%rax),%eax
ffffffff80033c6d:	85 c0                	test   %eax,%eax
ffffffff80033c6f:	0f 95 c0             	setne  %al
ffffffff80033c72:	88 45 e7             	mov    %al,-0x19(%rbp)
ffffffff80033c75:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff80033c79:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff80033c7d:	8b 40 34             	mov    0x34(%rax),%eax
ffffffff80033c80:	85 c0                	test   %eax,%eax
ffffffff80033c82:	0f 95 c0             	setne  %al
ffffffff80033c85:	88 45 e6             	mov    %al,-0x1a(%rbp)
ffffffff80033c88:	80 7d e7 00          	cmpb   $0x0,-0x19(%rbp)
ffffffff80033c8c:	75 0d                	jne    ffffffff80033c9b <ZydisFormatterIntelFormatOperandMEM+0x1ef>
ffffffff80033c8e:	80 7d e6 00          	cmpb   $0x0,-0x1a(%rbp)
ffffffff80033c92:	75 07                	jne    ffffffff80033c9b <ZydisFormatterIntelFormatOperandMEM+0x1ef>
ffffffff80033c94:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff80033c99:	eb 05                	jmp    ffffffff80033ca0 <ZydisFormatterIntelFormatOperandMEM+0x1f4>
ffffffff80033c9b:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80033ca0:	88 45 e5             	mov    %al,-0x1b(%rbp)
ffffffff80033ca3:	80 7d e7 00          	cmpb   $0x0,-0x19(%rbp)
ffffffff80033ca7:	74 3a                	je     ffffffff80033ce3 <ZydisFormatterIntelFormatOperandMEM+0x237>
ffffffff80033ca9:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff80033cad:	4c 8b 80 00 02 00 00 	mov    0x200(%rax),%r8
ffffffff80033cb4:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff80033cb8:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff80033cbc:	8b 48 30             	mov    0x30(%rax),%ecx
ffffffff80033cbf:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
ffffffff80033cc3:	48 8b 75 a0          	mov    -0x60(%rbp),%rsi
ffffffff80033cc7:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff80033ccb:	48 89 c7             	mov    %rax,%rdi
ffffffff80033cce:	41 ff d0             	call   *%r8
ffffffff80033cd1:	89 45 e0             	mov    %eax,-0x20(%rbp)
ffffffff80033cd4:	8b 45 e0             	mov    -0x20(%rbp),%eax
ffffffff80033cd7:	85 c0                	test   %eax,%eax
ffffffff80033cd9:	79 08                	jns    ffffffff80033ce3 <ZydisFormatterIntelFormatOperandMEM+0x237>
ffffffff80033cdb:	8b 45 e0             	mov    -0x20(%rbp),%eax
ffffffff80033cde:	e9 b0 02 00 00       	jmp    ffffffff80033f93 <ZydisFormatterIntelFormatOperandMEM+0x4e7>
ffffffff80033ce3:	80 7d e6 00          	cmpb   $0x0,-0x1a(%rbp)
ffffffff80033ce7:	0f 84 be 01 00 00    	je     ffffffff80033eab <ZydisFormatterIntelFormatOperandMEM+0x3ff>
ffffffff80033ced:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff80033cf1:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff80033cf5:	8b 40 30             	mov    0x30(%rax),%eax
ffffffff80033cf8:	85 c0                	test   %eax,%eax
ffffffff80033cfa:	74 5f                	je     ffffffff80033d5b <ZydisFormatterIntelFormatOperandMEM+0x2af>
ffffffff80033cfc:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff80033d00:	0f b6 00             	movzbl (%rax),%eax
ffffffff80033d03:	84 c0                	test   %al,%al
ffffffff80033d05:	74 28                	je     ffffffff80033d2f <ZydisFormatterIntelFormatOperandMEM+0x283>
ffffffff80033d07:	48 8d 15 06 ca 00 00 	lea    0xca06(%rip),%rdx        # ffffffff80040714 <TOK_DATA_ADD.lto_priv.2>
ffffffff80033d0e:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff80033d12:	48 89 d6             	mov    %rdx,%rsi
ffffffff80033d15:	48 89 c7             	mov    %rax,%rdi
ffffffff80033d18:	e8 7b f5 ff ff       	call   ffffffff80033298 <ZydisFormatterBufferAppendPredefined.lto_priv.2>
ffffffff80033d1d:	89 45 d8             	mov    %eax,-0x28(%rbp)
ffffffff80033d20:	8b 45 d8             	mov    -0x28(%rbp),%eax
ffffffff80033d23:	85 c0                	test   %eax,%eax
ffffffff80033d25:	79 34                	jns    ffffffff80033d5b <ZydisFormatterIntelFormatOperandMEM+0x2af>
ffffffff80033d27:	8b 45 d8             	mov    -0x28(%rbp),%eax
ffffffff80033d2a:	e9 64 02 00 00       	jmp    ffffffff80033f93 <ZydisFormatterIntelFormatOperandMEM+0x4e7>
ffffffff80033d2f:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff80033d33:	48 83 c0 10          	add    $0x10,%rax
ffffffff80033d37:	48 8d 15 0a 6d 07 00 	lea    0x76d0a(%rip),%rdx        # ffffffff800aaa48 <STR_ADD.lto_priv.3>
ffffffff80033d3e:	48 89 d6             	mov    %rdx,%rsi
ffffffff80033d41:	48 89 c7             	mov    %rax,%rdi
ffffffff80033d44:	e8 88 f0 ff ff       	call   ffffffff80032dd1 <ZydisStringAppendShort.lto_priv.2>
ffffffff80033d49:	89 45 dc             	mov    %eax,-0x24(%rbp)
ffffffff80033d4c:	8b 45 dc             	mov    -0x24(%rbp),%eax
ffffffff80033d4f:	85 c0                	test   %eax,%eax
ffffffff80033d51:	79 08                	jns    ffffffff80033d5b <ZydisFormatterIntelFormatOperandMEM+0x2af>
ffffffff80033d53:	8b 45 dc             	mov    -0x24(%rbp),%eax
ffffffff80033d56:	e9 38 02 00 00       	jmp    ffffffff80033f93 <ZydisFormatterIntelFormatOperandMEM+0x4e7>
ffffffff80033d5b:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff80033d5f:	4c 8b 80 00 02 00 00 	mov    0x200(%rax),%r8
ffffffff80033d66:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff80033d6a:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff80033d6e:	8b 48 34             	mov    0x34(%rax),%ecx
ffffffff80033d71:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
ffffffff80033d75:	48 8b 75 a0          	mov    -0x60(%rbp),%rsi
ffffffff80033d79:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff80033d7d:	48 89 c7             	mov    %rax,%rdi
ffffffff80033d80:	41 ff d0             	call   *%r8
ffffffff80033d83:	89 45 d4             	mov    %eax,-0x2c(%rbp)
ffffffff80033d86:	8b 45 d4             	mov    -0x2c(%rbp),%eax
ffffffff80033d89:	85 c0                	test   %eax,%eax
ffffffff80033d8b:	79 08                	jns    ffffffff80033d95 <ZydisFormatterIntelFormatOperandMEM+0x2e9>
ffffffff80033d8d:	8b 45 d4             	mov    -0x2c(%rbp),%eax
ffffffff80033d90:	e9 fe 01 00 00       	jmp    ffffffff80033f93 <ZydisFormatterIntelFormatOperandMEM+0x4e7>
ffffffff80033d95:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff80033d99:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff80033d9d:	0f b6 40 38          	movzbl 0x38(%rax),%eax
ffffffff80033da1:	84 c0                	test   %al,%al
ffffffff80033da3:	0f 84 02 01 00 00    	je     ffffffff80033eab <ZydisFormatterIntelFormatOperandMEM+0x3ff>
ffffffff80033da9:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff80033dad:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff80033db1:	8b 40 28             	mov    0x28(%rax),%eax
ffffffff80033db4:	83 f8 03             	cmp    $0x3,%eax
ffffffff80033db7:	0f 84 ee 00 00 00    	je     ffffffff80033eab <ZydisFormatterIntelFormatOperandMEM+0x3ff>
ffffffff80033dbd:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff80033dc1:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff80033dc5:	0f b6 40 38          	movzbl 0x38(%rax),%eax
ffffffff80033dc9:	3c 01                	cmp    $0x1,%al
ffffffff80033dcb:	77 10                	ja     ffffffff80033ddd <ZydisFormatterIntelFormatOperandMEM+0x331>
ffffffff80033dcd:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff80033dd1:	0f b6 40 06          	movzbl 0x6(%rax),%eax
ffffffff80033dd5:	84 c0                	test   %al,%al
ffffffff80033dd7:	0f 84 ce 00 00 00    	je     ffffffff80033eab <ZydisFormatterIntelFormatOperandMEM+0x3ff>
ffffffff80033ddd:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff80033de1:	0f b6 00             	movzbl (%rax),%eax
ffffffff80033de4:	84 c0                	test   %al,%al
ffffffff80033de6:	74 28                	je     ffffffff80033e10 <ZydisFormatterIntelFormatOperandMEM+0x364>
ffffffff80033de8:	48 8d 15 8d cd 00 00 	lea    0xcd8d(%rip),%rdx        # ffffffff80040b7c <TOK_DATA_MUL.lto_priv.2>
ffffffff80033def:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff80033df3:	48 89 d6             	mov    %rdx,%rsi
ffffffff80033df6:	48 89 c7             	mov    %rax,%rdi
ffffffff80033df9:	e8 9a f4 ff ff       	call   ffffffff80033298 <ZydisFormatterBufferAppendPredefined.lto_priv.2>
ffffffff80033dfe:	89 45 cc             	mov    %eax,-0x34(%rbp)
ffffffff80033e01:	8b 45 cc             	mov    -0x34(%rbp),%eax
ffffffff80033e04:	85 c0                	test   %eax,%eax
ffffffff80033e06:	79 34                	jns    ffffffff80033e3c <ZydisFormatterIntelFormatOperandMEM+0x390>
ffffffff80033e08:	8b 45 cc             	mov    -0x34(%rbp),%eax
ffffffff80033e0b:	e9 83 01 00 00       	jmp    ffffffff80033f93 <ZydisFormatterIntelFormatOperandMEM+0x4e7>
ffffffff80033e10:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff80033e14:	48 83 c0 10          	add    $0x10,%rax
ffffffff80033e18:	48 8d 15 b1 70 07 00 	lea    0x770b1(%rip),%rdx        # ffffffff800aaed0 <STR_MUL.lto_priv.2>
ffffffff80033e1f:	48 89 d6             	mov    %rdx,%rsi
ffffffff80033e22:	48 89 c7             	mov    %rax,%rdi
ffffffff80033e25:	e8 a7 ef ff ff       	call   ffffffff80032dd1 <ZydisStringAppendShort.lto_priv.2>
ffffffff80033e2a:	89 45 d0             	mov    %eax,-0x30(%rbp)
ffffffff80033e2d:	8b 45 d0             	mov    -0x30(%rbp),%eax
ffffffff80033e30:	85 c0                	test   %eax,%eax
ffffffff80033e32:	79 08                	jns    ffffffff80033e3c <ZydisFormatterIntelFormatOperandMEM+0x390>
ffffffff80033e34:	8b 45 d0             	mov    -0x30(%rbp),%eax
ffffffff80033e37:	e9 57 01 00 00       	jmp    ffffffff80033f93 <ZydisFormatterIntelFormatOperandMEM+0x4e7>
ffffffff80033e3c:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff80033e40:	0f b6 00             	movzbl (%rax),%eax
ffffffff80033e43:	84 c0                	test   %al,%al
ffffffff80033e45:	74 23                	je     ffffffff80033e6a <ZydisFormatterIntelFormatOperandMEM+0x3be>
ffffffff80033e47:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff80033e4b:	be 0b 00 00 00       	mov    $0xb,%esi
ffffffff80033e50:	48 89 c7             	mov    %rax,%rdi
ffffffff80033e53:	e8 b1 1c 00 00       	call   ffffffff80035b09 <ZydisFormatterBufferAppend>
ffffffff80033e58:	89 45 c8             	mov    %eax,-0x38(%rbp)
ffffffff80033e5b:	8b 45 c8             	mov    -0x38(%rbp),%eax
ffffffff80033e5e:	85 c0                	test   %eax,%eax
ffffffff80033e60:	79 08                	jns    ffffffff80033e6a <ZydisFormatterIntelFormatOperandMEM+0x3be>
ffffffff80033e62:	8b 45 c8             	mov    -0x38(%rbp),%eax
ffffffff80033e65:	e9 29 01 00 00       	jmp    ffffffff80033f93 <ZydisFormatterIntelFormatOperandMEM+0x4e7>
ffffffff80033e6a:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff80033e6e:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff80033e72:	0f b6 40 38          	movzbl 0x38(%rax),%eax
ffffffff80033e76:	0f b6 c0             	movzbl %al,%eax
ffffffff80033e79:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
ffffffff80033e7d:	48 8d 7a 10          	lea    0x10(%rdx),%rdi
ffffffff80033e81:	41 b8 00 00 00 00    	mov    $0x0,%r8d
ffffffff80033e87:	b9 00 00 00 00       	mov    $0x0,%ecx
ffffffff80033e8c:	ba 00 00 00 00       	mov    $0x0,%edx
ffffffff80033e91:	48 89 c6             	mov    %rax,%rsi
ffffffff80033e94:	e8 94 21 ff ff       	call   ffffffff8002602d <ZydisStringAppendDecU>
ffffffff80033e99:	89 45 c4             	mov    %eax,-0x3c(%rbp)
ffffffff80033e9c:	8b 45 c4             	mov    -0x3c(%rbp),%eax
ffffffff80033e9f:	85 c0                	test   %eax,%eax
ffffffff80033ea1:	79 08                	jns    ffffffff80033eab <ZydisFormatterIntelFormatOperandMEM+0x3ff>
ffffffff80033ea3:	8b 45 c4             	mov    -0x3c(%rbp),%eax
ffffffff80033ea6:	e9 e8 00 00 00       	jmp    ffffffff80033f93 <ZydisFormatterIntelFormatOperandMEM+0x4e7>
ffffffff80033eab:	80 7d e5 00          	cmpb   $0x0,-0x1b(%rbp)
ffffffff80033eaf:	74 32                	je     ffffffff80033ee3 <ZydisFormatterIntelFormatOperandMEM+0x437>
ffffffff80033eb1:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff80033eb5:	4c 8b 80 08 02 00 00 	mov    0x208(%rax),%r8
ffffffff80033ebc:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
ffffffff80033ec0:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
ffffffff80033ec4:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff80033ec8:	48 89 ce             	mov    %rcx,%rsi
ffffffff80033ecb:	48 89 c7             	mov    %rax,%rdi
ffffffff80033ece:	41 ff d0             	call   *%r8
ffffffff80033ed1:	89 45 bc             	mov    %eax,-0x44(%rbp)
ffffffff80033ed4:	8b 45 bc             	mov    -0x44(%rbp),%eax
ffffffff80033ed7:	85 c0                	test   %eax,%eax
ffffffff80033ed9:	79 59                	jns    ffffffff80033f34 <ZydisFormatterIntelFormatOperandMEM+0x488>
ffffffff80033edb:	8b 45 bc             	mov    -0x44(%rbp),%eax
ffffffff80033ede:	e9 b0 00 00 00       	jmp    ffffffff80033f93 <ZydisFormatterIntelFormatOperandMEM+0x4e7>
ffffffff80033ee3:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff80033ee7:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff80033eeb:	0f b6 40 40          	movzbl 0x40(%rax),%eax
ffffffff80033eef:	84 c0                	test   %al,%al
ffffffff80033ef1:	74 41                	je     ffffffff80033f34 <ZydisFormatterIntelFormatOperandMEM+0x488>
ffffffff80033ef3:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff80033ef7:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff80033efb:	48 8b 40 48          	mov    0x48(%rax),%rax
ffffffff80033eff:	48 85 c0             	test   %rax,%rax
ffffffff80033f02:	74 30                	je     ffffffff80033f34 <ZydisFormatterIntelFormatOperandMEM+0x488>
ffffffff80033f04:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff80033f08:	4c 8b 80 18 02 00 00 	mov    0x218(%rax),%r8
ffffffff80033f0f:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
ffffffff80033f13:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
ffffffff80033f17:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff80033f1b:	48 89 ce             	mov    %rcx,%rsi
ffffffff80033f1e:	48 89 c7             	mov    %rax,%rdi
ffffffff80033f21:	41 ff d0             	call   *%r8
ffffffff80033f24:	89 45 c0             	mov    %eax,-0x40(%rbp)
ffffffff80033f27:	8b 45 c0             	mov    -0x40(%rbp),%eax
ffffffff80033f2a:	85 c0                	test   %eax,%eax
ffffffff80033f2c:	79 06                	jns    ffffffff80033f34 <ZydisFormatterIntelFormatOperandMEM+0x488>
ffffffff80033f2e:	8b 45 c0             	mov    -0x40(%rbp),%eax
ffffffff80033f31:	eb 60                	jmp    ffffffff80033f93 <ZydisFormatterIntelFormatOperandMEM+0x4e7>
ffffffff80033f33:	90                   	nop
ffffffff80033f34:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff80033f38:	0f b6 00             	movzbl (%rax),%eax
ffffffff80033f3b:	84 c0                	test   %al,%al
ffffffff80033f3d:	74 25                	je     ffffffff80033f64 <ZydisFormatterIntelFormatOperandMEM+0x4b8>
ffffffff80033f3f:	48 8d 15 30 cc 00 00 	lea    0xcc30(%rip),%rdx        # ffffffff80040b76 <TOK_DATA_MEMORY_END_INTEL.lto_priv.2>
ffffffff80033f46:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff80033f4a:	48 89 d6             	mov    %rdx,%rsi
ffffffff80033f4d:	48 89 c7             	mov    %rax,%rdi
ffffffff80033f50:	e8 43 f3 ff ff       	call   ffffffff80033298 <ZydisFormatterBufferAppendPredefined.lto_priv.2>
ffffffff80033f55:	89 45 b4             	mov    %eax,-0x4c(%rbp)
ffffffff80033f58:	8b 45 b4             	mov    -0x4c(%rbp),%eax
ffffffff80033f5b:	85 c0                	test   %eax,%eax
ffffffff80033f5d:	79 2e                	jns    ffffffff80033f8d <ZydisFormatterIntelFormatOperandMEM+0x4e1>
ffffffff80033f5f:	8b 45 b4             	mov    -0x4c(%rbp),%eax
ffffffff80033f62:	eb 2f                	jmp    ffffffff80033f93 <ZydisFormatterIntelFormatOperandMEM+0x4e7>
ffffffff80033f64:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff80033f68:	48 83 c0 10          	add    $0x10,%rax
ffffffff80033f6c:	48 8d 15 45 6f 07 00 	lea    0x76f45(%rip),%rdx        # ffffffff800aaeb8 <STR_MEMORY_END_INTEL.lto_priv.2>
ffffffff80033f73:	48 89 d6             	mov    %rdx,%rsi
ffffffff80033f76:	48 89 c7             	mov    %rax,%rdi
ffffffff80033f79:	e8 53 ee ff ff       	call   ffffffff80032dd1 <ZydisStringAppendShort.lto_priv.2>
ffffffff80033f7e:	89 45 b8             	mov    %eax,-0x48(%rbp)
ffffffff80033f81:	8b 45 b8             	mov    -0x48(%rbp),%eax
ffffffff80033f84:	85 c0                	test   %eax,%eax
ffffffff80033f86:	79 05                	jns    ffffffff80033f8d <ZydisFormatterIntelFormatOperandMEM+0x4e1>
ffffffff80033f88:	8b 45 b8             	mov    -0x48(%rbp),%eax
ffffffff80033f8b:	eb 06                	jmp    ffffffff80033f93 <ZydisFormatterIntelFormatOperandMEM+0x4e7>
ffffffff80033f8d:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff80033f92:	90                   	nop
ffffffff80033f93:	c9                   	leave  
ffffffff80033f94:	c3                   	ret    

ffffffff80033f95 <ZydisFormatterIntelPrintMnemonic>:
ffffffff80033f95:	f3 0f 1e fa          	endbr64 
ffffffff80033f99:	55                   	push   %rbp
ffffffff80033f9a:	48 89 e5             	mov    %rsp,%rbp
ffffffff80033f9d:	48 83 ec 40          	sub    $0x40,%rsp
ffffffff80033fa1:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
ffffffff80033fa5:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
ffffffff80033fa9:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
ffffffff80033fad:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80033fb1:	48 8b 00             	mov    (%rax),%rax
ffffffff80033fb4:	8b 40 04             	mov    0x4(%rax),%eax
ffffffff80033fb7:	89 c7                	mov    %eax,%edi
ffffffff80033fb9:	e8 eb 24 00 00       	call   ffffffff800364a9 <ZydisMnemonicGetStringWrapped>
ffffffff80033fbe:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff80033fc2:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff80033fc7:	75 72                	jne    ffffffff8003403b <ZydisFormatterIntelPrintMnemonic+0xa6>
ffffffff80033fc9:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff80033fcd:	0f b6 00             	movzbl (%rax),%eax
ffffffff80033fd0:	84 c0                	test   %al,%al
ffffffff80033fd2:	74 28                	je     ffffffff80033ffc <ZydisFormatterIntelPrintMnemonic+0x67>
ffffffff80033fd4:	48 8d 15 6d cb 00 00 	lea    0xcb6d(%rip),%rdx        # ffffffff80040b48 <TOK_DATA_INVALID_MNEMONIC.lto_priv.2>
ffffffff80033fdb:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff80033fdf:	48 89 d6             	mov    %rdx,%rsi
ffffffff80033fe2:	48 89 c7             	mov    %rax,%rdi
ffffffff80033fe5:	e8 ae f2 ff ff       	call   ffffffff80033298 <ZydisFormatterBufferAppendPredefined.lto_priv.2>
ffffffff80033fea:	89 45 e8             	mov    %eax,-0x18(%rbp)
ffffffff80033fed:	8b 45 e8             	mov    -0x18(%rbp),%eax
ffffffff80033ff0:	85 c0                	test   %eax,%eax
ffffffff80033ff2:	79 3d                	jns    ffffffff80034031 <ZydisFormatterIntelPrintMnemonic+0x9c>
ffffffff80033ff4:	8b 45 e8             	mov    -0x18(%rbp),%eax
ffffffff80033ff7:	e9 57 01 00 00       	jmp    ffffffff80034153 <ZydisFormatterIntelPrintMnemonic+0x1be>
ffffffff80033ffc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80034000:	8b 40 38             	mov    0x38(%rax),%eax
ffffffff80034003:	89 c2                	mov    %eax,%edx
ffffffff80034005:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff80034009:	48 83 c0 10          	add    $0x10,%rax
ffffffff8003400d:	48 8d 0d 2c 6e 07 00 	lea    0x76e2c(%rip),%rcx        # ffffffff800aae40 <STR_INVALID_MNEMONIC.lto_priv.2>
ffffffff80034014:	48 89 ce             	mov    %rcx,%rsi
ffffffff80034017:	48 89 c7             	mov    %rax,%rdi
ffffffff8003401a:	e8 6c ee ff ff       	call   ffffffff80032e8b <ZydisStringAppendShortCase.lto_priv.2>
ffffffff8003401f:	89 45 ec             	mov    %eax,-0x14(%rbp)
ffffffff80034022:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff80034025:	85 c0                	test   %eax,%eax
ffffffff80034027:	79 08                	jns    ffffffff80034031 <ZydisFormatterIntelPrintMnemonic+0x9c>
ffffffff80034029:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff8003402c:	e9 22 01 00 00       	jmp    ffffffff80034153 <ZydisFormatterIntelPrintMnemonic+0x1be>
ffffffff80034031:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff80034036:	e9 18 01 00 00       	jmp    ffffffff80034153 <ZydisFormatterIntelPrintMnemonic+0x1be>
ffffffff8003403b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8003403f:	0f b6 00             	movzbl (%rax),%eax
ffffffff80034042:	84 c0                	test   %al,%al
ffffffff80034044:	74 23                	je     ffffffff80034069 <ZydisFormatterIntelPrintMnemonic+0xd4>
ffffffff80034046:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8003404a:	be 06 00 00 00       	mov    $0x6,%esi
ffffffff8003404f:	48 89 c7             	mov    %rax,%rdi
ffffffff80034052:	e8 b2 1a 00 00       	call   ffffffff80035b09 <ZydisFormatterBufferAppend>
ffffffff80034057:	89 45 f4             	mov    %eax,-0xc(%rbp)
ffffffff8003405a:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff8003405d:	85 c0                	test   %eax,%eax
ffffffff8003405f:	79 08                	jns    ffffffff80034069 <ZydisFormatterIntelPrintMnemonic+0xd4>
ffffffff80034061:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff80034064:	e9 ea 00 00 00       	jmp    ffffffff80034153 <ZydisFormatterIntelPrintMnemonic+0x1be>
ffffffff80034069:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8003406d:	8b 40 38             	mov    0x38(%rax),%eax
ffffffff80034070:	89 c2                	mov    %eax,%edx
ffffffff80034072:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff80034076:	48 83 c0 10          	add    $0x10,%rax
ffffffff8003407a:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
ffffffff8003407e:	48 89 ce             	mov    %rcx,%rsi
ffffffff80034081:	48 89 c7             	mov    %rax,%rdi
ffffffff80034084:	e8 02 ee ff ff       	call   ffffffff80032e8b <ZydisStringAppendShortCase.lto_priv.2>
ffffffff80034089:	89 45 f0             	mov    %eax,-0x10(%rbp)
ffffffff8003408c:	8b 45 f0             	mov    -0x10(%rbp),%eax
ffffffff8003408f:	85 c0                	test   %eax,%eax
ffffffff80034091:	79 08                	jns    ffffffff8003409b <ZydisFormatterIntelPrintMnemonic+0x106>
ffffffff80034093:	8b 45 f0             	mov    -0x10(%rbp),%eax
ffffffff80034096:	e9 b8 00 00 00       	jmp    ffffffff80034153 <ZydisFormatterIntelPrintMnemonic+0x1be>
ffffffff8003409b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8003409f:	48 8b 00             	mov    (%rax),%rax
ffffffff800340a2:	8b 40 68             	mov    0x68(%rax),%eax
ffffffff800340a5:	83 f8 03             	cmp    $0x3,%eax
ffffffff800340a8:	75 28                	jne    ffffffff800340d2 <ZydisFormatterIntelPrintMnemonic+0x13d>
ffffffff800340aa:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff800340ae:	8b 40 38             	mov    0x38(%rax),%eax
ffffffff800340b1:	89 c2                	mov    %eax,%edx
ffffffff800340b3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff800340b7:	48 83 c0 10          	add    $0x10,%rax
ffffffff800340bb:	48 8d 0d 46 6d 07 00 	lea    0x76d46(%rip),%rcx        # ffffffff800aae08 <STR_FAR.lto_priv.2>
ffffffff800340c2:	48 89 ce             	mov    %rcx,%rsi
ffffffff800340c5:	48 89 c7             	mov    %rax,%rdi
ffffffff800340c8:	e8 be ed ff ff       	call   ffffffff80032e8b <ZydisStringAppendShortCase.lto_priv.2>
ffffffff800340cd:	e9 81 00 00 00       	jmp    ffffffff80034153 <ZydisFormatterIntelPrintMnemonic+0x1be>
ffffffff800340d2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff800340d6:	0f b6 40 09          	movzbl 0x9(%rax),%eax
ffffffff800340da:	84 c0                	test   %al,%al
ffffffff800340dc:	74 6f                	je     ffffffff8003414d <ZydisFormatterIntelPrintMnemonic+0x1b8>
ffffffff800340de:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff800340e2:	48 8b 00             	mov    (%rax),%rax
ffffffff800340e5:	8b 40 68             	mov    0x68(%rax),%eax
ffffffff800340e8:	83 f8 02             	cmp    $0x2,%eax
ffffffff800340eb:	74 33                	je     ffffffff80034120 <ZydisFormatterIntelPrintMnemonic+0x18b>
ffffffff800340ed:	83 f8 02             	cmp    $0x2,%eax
ffffffff800340f0:	77 53                	ja     ffffffff80034145 <ZydisFormatterIntelPrintMnemonic+0x1b0>
ffffffff800340f2:	85 c0                	test   %eax,%eax
ffffffff800340f4:	74 56                	je     ffffffff8003414c <ZydisFormatterIntelPrintMnemonic+0x1b7>
ffffffff800340f6:	83 f8 01             	cmp    $0x1,%eax
ffffffff800340f9:	75 4a                	jne    ffffffff80034145 <ZydisFormatterIntelPrintMnemonic+0x1b0>
ffffffff800340fb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff800340ff:	8b 40 38             	mov    0x38(%rax),%eax
ffffffff80034102:	89 c2                	mov    %eax,%edx
ffffffff80034104:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff80034108:	48 83 c0 10          	add    $0x10,%rax
ffffffff8003410c:	48 8d 0d cd 70 07 00 	lea    0x770cd(%rip),%rcx        # ffffffff800ab1e0 <STR_SHORT.lto_priv.2>
ffffffff80034113:	48 89 ce             	mov    %rcx,%rsi
ffffffff80034116:	48 89 c7             	mov    %rax,%rdi
ffffffff80034119:	e8 6d ed ff ff       	call   ffffffff80032e8b <ZydisStringAppendShortCase.lto_priv.2>
ffffffff8003411e:	eb 33                	jmp    ffffffff80034153 <ZydisFormatterIntelPrintMnemonic+0x1be>
ffffffff80034120:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80034124:	8b 40 38             	mov    0x38(%rax),%eax
ffffffff80034127:	89 c2                	mov    %eax,%edx
ffffffff80034129:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8003412d:	48 83 c0 10          	add    $0x10,%rax
ffffffff80034131:	48 8d 0d b0 6d 07 00 	lea    0x76db0(%rip),%rcx        # ffffffff800aaee8 <STR_NEAR.lto_priv.2>
ffffffff80034138:	48 89 ce             	mov    %rcx,%rsi
ffffffff8003413b:	48 89 c7             	mov    %rax,%rdi
ffffffff8003413e:	e8 48 ed ff ff       	call   ffffffff80032e8b <ZydisStringAppendShortCase.lto_priv.2>
ffffffff80034143:	eb 0e                	jmp    ffffffff80034153 <ZydisFormatterIntelPrintMnemonic+0x1be>
ffffffff80034145:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff8003414a:	eb 07                	jmp    ffffffff80034153 <ZydisFormatterIntelPrintMnemonic+0x1be>
ffffffff8003414c:	90                   	nop
ffffffff8003414d:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff80034152:	90                   	nop
ffffffff80034153:	c9                   	leave  
ffffffff80034154:	c3                   	ret    

ffffffff80034155 <ZydisFormatterIntelPrintRegister>:
ffffffff80034155:	f3 0f 1e fa          	endbr64 
ffffffff80034159:	55                   	push   %rbp
ffffffff8003415a:	48 89 e5             	mov    %rsp,%rbp
ffffffff8003415d:	48 83 ec 40          	sub    $0x40,%rsp
ffffffff80034161:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
ffffffff80034165:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
ffffffff80034169:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
ffffffff8003416d:	89 4d c4             	mov    %ecx,-0x3c(%rbp)
ffffffff80034170:	8b 45 c4             	mov    -0x3c(%rbp),%eax
ffffffff80034173:	89 c7                	mov    %eax,%edi
ffffffff80034175:	e8 38 18 ff ff       	call   ffffffff800259b2 <ZydisRegisterGetStringWrapped>
ffffffff8003417a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8003417e:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff80034183:	75 6c                	jne    ffffffff800341f1 <ZydisFormatterIntelPrintRegister+0x9c>
ffffffff80034185:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff80034189:	0f b6 00             	movzbl (%rax),%eax
ffffffff8003418c:	84 c0                	test   %al,%al
ffffffff8003418e:	74 28                	je     ffffffff800341b8 <ZydisFormatterIntelPrintRegister+0x63>
ffffffff80034190:	48 8d 15 c1 c9 00 00 	lea    0xc9c1(%rip),%rdx        # ffffffff80040b58 <TOK_DATA_INVALID_REG.lto_priv.2>
ffffffff80034197:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8003419b:	48 89 d6             	mov    %rdx,%rsi
ffffffff8003419e:	48 89 c7             	mov    %rax,%rdi
ffffffff800341a1:	e8 f2 f0 ff ff       	call   ffffffff80033298 <ZydisFormatterBufferAppendPredefined.lto_priv.2>
ffffffff800341a6:	89 45 ec             	mov    %eax,-0x14(%rbp)
ffffffff800341a9:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff800341ac:	85 c0                	test   %eax,%eax
ffffffff800341ae:	79 3a                	jns    ffffffff800341ea <ZydisFormatterIntelPrintRegister+0x95>
ffffffff800341b0:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff800341b3:	e9 85 00 00 00       	jmp    ffffffff8003423d <ZydisFormatterIntelPrintRegister+0xe8>
ffffffff800341b8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff800341bc:	8b 40 3c             	mov    0x3c(%rax),%eax
ffffffff800341bf:	89 c2                	mov    %eax,%edx
ffffffff800341c1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff800341c5:	48 83 c0 10          	add    $0x10,%rax
ffffffff800341c9:	48 8d 0d 88 6c 07 00 	lea    0x76c88(%rip),%rcx        # ffffffff800aae58 <STR_INVALID_REG.lto_priv.2>
ffffffff800341d0:	48 89 ce             	mov    %rcx,%rsi
ffffffff800341d3:	48 89 c7             	mov    %rax,%rdi
ffffffff800341d6:	e8 b0 ec ff ff       	call   ffffffff80032e8b <ZydisStringAppendShortCase.lto_priv.2>
ffffffff800341db:	89 45 f0             	mov    %eax,-0x10(%rbp)
ffffffff800341de:	8b 45 f0             	mov    -0x10(%rbp),%eax
ffffffff800341e1:	85 c0                	test   %eax,%eax
ffffffff800341e3:	79 05                	jns    ffffffff800341ea <ZydisFormatterIntelPrintRegister+0x95>
ffffffff800341e5:	8b 45 f0             	mov    -0x10(%rbp),%eax
ffffffff800341e8:	eb 53                	jmp    ffffffff8003423d <ZydisFormatterIntelPrintRegister+0xe8>
ffffffff800341ea:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff800341ef:	eb 4c                	jmp    ffffffff8003423d <ZydisFormatterIntelPrintRegister+0xe8>
ffffffff800341f1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff800341f5:	0f b6 00             	movzbl (%rax),%eax
ffffffff800341f8:	84 c0                	test   %al,%al
ffffffff800341fa:	74 20                	je     ffffffff8003421c <ZydisFormatterIntelPrintRegister+0xc7>
ffffffff800341fc:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff80034200:	be 07 00 00 00       	mov    $0x7,%esi
ffffffff80034205:	48 89 c7             	mov    %rax,%rdi
ffffffff80034208:	e8 fc 18 00 00       	call   ffffffff80035b09 <ZydisFormatterBufferAppend>
ffffffff8003420d:	89 45 f4             	mov    %eax,-0xc(%rbp)
ffffffff80034210:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff80034213:	85 c0                	test   %eax,%eax
ffffffff80034215:	79 05                	jns    ffffffff8003421c <ZydisFormatterIntelPrintRegister+0xc7>
ffffffff80034217:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff8003421a:	eb 21                	jmp    ffffffff8003423d <ZydisFormatterIntelPrintRegister+0xe8>
ffffffff8003421c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80034220:	8b 40 3c             	mov    0x3c(%rax),%eax
ffffffff80034223:	89 c2                	mov    %eax,%edx
ffffffff80034225:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff80034229:	48 83 c0 10          	add    $0x10,%rax
ffffffff8003422d:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
ffffffff80034231:	48 89 ce             	mov    %rcx,%rsi
ffffffff80034234:	48 89 c7             	mov    %rax,%rdi
ffffffff80034237:	e8 4f ec ff ff       	call   ffffffff80032e8b <ZydisStringAppendShortCase.lto_priv.2>
ffffffff8003423c:	90                   	nop
ffffffff8003423d:	c9                   	leave  
ffffffff8003423e:	c3                   	ret    

ffffffff8003423f <ZydisFormatterIntelPrintDISP>:
ffffffff8003423f:	f3 0f 1e fa          	endbr64 
ffffffff80034243:	55                   	push   %rbp
ffffffff80034244:	48 89 e5             	mov    %rsp,%rbp
ffffffff80034247:	41 57                	push   %r15
ffffffff80034249:	41 56                	push   %r14
ffffffff8003424b:	41 55                	push   %r13
ffffffff8003424d:	41 54                	push   %r12
ffffffff8003424f:	53                   	push   %rbx
ffffffff80034250:	48 83 ec 58          	sub    $0x58,%rsp
ffffffff80034254:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
ffffffff80034258:	48 89 75 90          	mov    %rsi,-0x70(%rbp)
ffffffff8003425c:	48 89 55 88          	mov    %rdx,-0x78(%rbp)
ffffffff80034260:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff80034264:	8b 40 20             	mov    0x20(%rax),%eax
ffffffff80034267:	83 f8 01             	cmp    $0x1,%eax
ffffffff8003426a:	76 0e                	jbe    ffffffff8003427a <ZydisFormatterIntelPrintDISP+0x3b>
ffffffff8003426c:	83 f8 02             	cmp    $0x2,%eax
ffffffff8003426f:	0f 84 29 02 00 00    	je     ffffffff8003449e <ZydisFormatterIntelPrintDISP+0x25f>
ffffffff80034275:	e9 11 04 00 00       	jmp    ffffffff8003468b <ZydisFormatterIntelPrintDISP+0x44c>
ffffffff8003427a:	48 8b 45 88          	mov    -0x78(%rbp),%rax
ffffffff8003427e:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff80034282:	48 8b 40 48          	mov    0x48(%rax),%rax
ffffffff80034286:	48 85 c0             	test   %rax,%rax
ffffffff80034289:	0f 89 0f 02 00 00    	jns    ffffffff8003449e <ZydisFormatterIntelPrintDISP+0x25f>
ffffffff8003428f:	48 8b 45 88          	mov    -0x78(%rbp),%rax
ffffffff80034293:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff80034297:	8b 40 30             	mov    0x30(%rax),%eax
ffffffff8003429a:	85 c0                	test   %eax,%eax
ffffffff8003429c:	75 0f                	jne    ffffffff800342ad <ZydisFormatterIntelPrintDISP+0x6e>
ffffffff8003429e:	48 8b 45 88          	mov    -0x78(%rbp),%rax
ffffffff800342a2:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff800342a6:	8b 40 34             	mov    0x34(%rax),%eax
ffffffff800342a9:	85 c0                	test   %eax,%eax
ffffffff800342ab:	74 5f                	je     ffffffff8003430c <ZydisFormatterIntelPrintDISP+0xcd>
ffffffff800342ad:	48 8b 45 90          	mov    -0x70(%rbp),%rax
ffffffff800342b1:	0f b6 00             	movzbl (%rax),%eax
ffffffff800342b4:	84 c0                	test   %al,%al
ffffffff800342b6:	74 28                	je     ffffffff800342e0 <ZydisFormatterIntelPrintDISP+0xa1>
ffffffff800342b8:	48 8d 15 05 cc 00 00 	lea    0xcc05(%rip),%rdx        # ffffffff80040ec4 <TOK_DATA_SUB.lto_priv.2>
ffffffff800342bf:	48 8b 45 90          	mov    -0x70(%rbp),%rax
ffffffff800342c3:	48 89 d6             	mov    %rdx,%rsi
ffffffff800342c6:	48 89 c7             	mov    %rax,%rdi
ffffffff800342c9:	e8 ca ef ff ff       	call   ffffffff80033298 <ZydisFormatterBufferAppendPredefined.lto_priv.2>
ffffffff800342ce:	89 45 c8             	mov    %eax,-0x38(%rbp)
ffffffff800342d1:	8b 45 c8             	mov    -0x38(%rbp),%eax
ffffffff800342d4:	85 c0                	test   %eax,%eax
ffffffff800342d6:	79 34                	jns    ffffffff8003430c <ZydisFormatterIntelPrintDISP+0xcd>
ffffffff800342d8:	8b 45 c8             	mov    -0x38(%rbp),%eax
ffffffff800342db:	e9 b8 03 00 00       	jmp    ffffffff80034698 <ZydisFormatterIntelPrintDISP+0x459>
ffffffff800342e0:	48 8b 45 90          	mov    -0x70(%rbp),%rax
ffffffff800342e4:	48 83 c0 10          	add    $0x10,%rax
ffffffff800342e8:	48 8d 15 49 70 07 00 	lea    0x77049(%rip),%rdx        # ffffffff800ab338 <STR_SUB.lto_priv.3>
ffffffff800342ef:	48 89 d6             	mov    %rdx,%rsi
ffffffff800342f2:	48 89 c7             	mov    %rax,%rdi
ffffffff800342f5:	e8 d7 ea ff ff       	call   ffffffff80032dd1 <ZydisStringAppendShort.lto_priv.2>
ffffffff800342fa:	89 45 cc             	mov    %eax,-0x34(%rbp)
ffffffff800342fd:	8b 45 cc             	mov    -0x34(%rbp),%eax
ffffffff80034300:	85 c0                	test   %eax,%eax
ffffffff80034302:	79 08                	jns    ffffffff8003430c <ZydisFormatterIntelPrintDISP+0xcd>
ffffffff80034304:	8b 45 cc             	mov    -0x34(%rbp),%eax
ffffffff80034307:	e9 8c 03 00 00       	jmp    ffffffff80034698 <ZydisFormatterIntelPrintDISP+0x459>
ffffffff8003430c:	48 8b 45 90          	mov    -0x70(%rbp),%rax
ffffffff80034310:	0f b6 00             	movzbl (%rax),%eax
ffffffff80034313:	84 c0                	test   %al,%al
ffffffff80034315:	74 23                	je     ffffffff8003433a <ZydisFormatterIntelPrintDISP+0xfb>
ffffffff80034317:	48 8b 45 90          	mov    -0x70(%rbp),%rax
ffffffff8003431b:	be 0a 00 00 00       	mov    $0xa,%esi
ffffffff80034320:	48 89 c7             	mov    %rax,%rdi
ffffffff80034323:	e8 e1 17 00 00       	call   ffffffff80035b09 <ZydisFormatterBufferAppend>
ffffffff80034328:	89 45 c4             	mov    %eax,-0x3c(%rbp)
ffffffff8003432b:	8b 45 c4             	mov    -0x3c(%rbp),%eax
ffffffff8003432e:	85 c0                	test   %eax,%eax
ffffffff80034330:	79 08                	jns    ffffffff8003433a <ZydisFormatterIntelPrintDISP+0xfb>
ffffffff80034332:	8b 45 c4             	mov    -0x3c(%rbp),%eax
ffffffff80034335:	e9 5e 03 00 00       	jmp    ffffffff80034698 <ZydisFormatterIntelPrintDISP+0x459>
ffffffff8003433a:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff8003433e:	8b 40 1c             	mov    0x1c(%rax),%eax
ffffffff80034341:	85 c0                	test   %eax,%eax
ffffffff80034343:	74 0e                	je     ffffffff80034353 <ZydisFormatterIntelPrintDISP+0x114>
ffffffff80034345:	83 f8 01             	cmp    $0x1,%eax
ffffffff80034348:	0f 84 92 00 00 00    	je     ffffffff800343e0 <ZydisFormatterIntelPrintDISP+0x1a1>
ffffffff8003434e:	e9 3b 01 00 00       	jmp    ffffffff8003448e <ZydisFormatterIntelPrintDISP+0x24f>
ffffffff80034353:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff80034357:	8b 40 1c             	mov    0x1c(%rax),%eax
ffffffff8003435a:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
ffffffff8003435e:	89 c0                	mov    %eax,%eax
ffffffff80034360:	48 69 c0 b0 00 00 00 	imul   $0xb0,%rax,%rax
ffffffff80034367:	48 01 d0             	add    %rdx,%rax
ffffffff8003436a:	48 05 a8 00 00 00    	add    $0xa8,%rax
ffffffff80034370:	4c 8b 28             	mov    (%rax),%r13
ffffffff80034373:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff80034377:	8b 40 1c             	mov    0x1c(%rax),%eax
ffffffff8003437a:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
ffffffff8003437e:	89 c0                	mov    %eax,%eax
ffffffff80034380:	48 69 c0 b0 00 00 00 	imul   $0xb0,%rax,%rax
ffffffff80034387:	48 01 d0             	add    %rdx,%rax
ffffffff8003438a:	48 83 c0 50          	add    $0x50,%rax
ffffffff8003438e:	4c 8b 20             	mov    (%rax),%r12
ffffffff80034391:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff80034395:	8b 40 24             	mov    0x24(%rax),%eax
ffffffff80034398:	0f b6 d8             	movzbl %al,%ebx
ffffffff8003439b:	48 8b 45 88          	mov    -0x78(%rbp),%rax
ffffffff8003439f:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff800343a3:	48 8b 40 48          	mov    0x48(%rax),%rax
ffffffff800343a7:	48 89 c7             	mov    %rax,%rdi
ffffffff800343aa:	e8 17 e9 ff ff       	call   ffffffff80032cc6 <ZyanAbsI64.lto_priv.3>
ffffffff800343af:	48 89 c6             	mov    %rax,%rsi
ffffffff800343b2:	48 8b 45 90          	mov    -0x70(%rbp),%rax
ffffffff800343b6:	48 83 c0 10          	add    $0x10,%rax
ffffffff800343ba:	4d 89 e8             	mov    %r13,%r8
ffffffff800343bd:	4c 89 e1             	mov    %r12,%rcx
ffffffff800343c0:	89 da                	mov    %ebx,%edx
ffffffff800343c2:	48 89 c7             	mov    %rax,%rdi
ffffffff800343c5:	e8 63 1c ff ff       	call   ffffffff8002602d <ZydisStringAppendDecU>
ffffffff800343ca:	89 45 bc             	mov    %eax,-0x44(%rbp)
ffffffff800343cd:	8b 45 bc             	mov    -0x44(%rbp),%eax
ffffffff800343d0:	85 c0                	test   %eax,%eax
ffffffff800343d2:	0f 89 c0 00 00 00    	jns    ffffffff80034498 <ZydisFormatterIntelPrintDISP+0x259>
ffffffff800343d8:	8b 45 bc             	mov    -0x44(%rbp),%eax
ffffffff800343db:	e9 b8 02 00 00       	jmp    ffffffff80034698 <ZydisFormatterIntelPrintDISP+0x459>
ffffffff800343e0:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff800343e4:	8b 40 1c             	mov    0x1c(%rax),%eax
ffffffff800343e7:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
ffffffff800343eb:	89 c0                	mov    %eax,%eax
ffffffff800343ed:	48 69 c0 b0 00 00 00 	imul   $0xb0,%rax,%rax
ffffffff800343f4:	48 01 d0             	add    %rdx,%rax
ffffffff800343f7:	48 05 a8 00 00 00    	add    $0xa8,%rax
ffffffff800343fd:	4c 8b 28             	mov    (%rax),%r13
ffffffff80034400:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff80034404:	8b 40 1c             	mov    0x1c(%rax),%eax
ffffffff80034407:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
ffffffff8003440b:	89 c0                	mov    %eax,%eax
ffffffff8003440d:	48 69 c0 b0 00 00 00 	imul   $0xb0,%rax,%rax
ffffffff80034414:	48 01 d0             	add    %rdx,%rax
ffffffff80034417:	48 83 c0 50          	add    $0x50,%rax
ffffffff8003441b:	4c 8b 38             	mov    (%rax),%r15
ffffffff8003441e:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff80034422:	0f b6 40 48          	movzbl 0x48(%rax),%eax
ffffffff80034426:	44 0f b6 f0          	movzbl %al,%r14d
ffffffff8003442a:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff8003442e:	0f b6 40 49          	movzbl 0x49(%rax),%eax
ffffffff80034432:	44 0f b6 e0          	movzbl %al,%r12d
ffffffff80034436:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff8003443a:	8b 40 24             	mov    0x24(%rax),%eax
ffffffff8003443d:	0f b6 d8             	movzbl %al,%ebx
ffffffff80034440:	48 8b 45 88          	mov    -0x78(%rbp),%rax
ffffffff80034444:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff80034448:	48 8b 40 48          	mov    0x48(%rax),%rax
ffffffff8003444c:	48 89 c7             	mov    %rax,%rdi
ffffffff8003444f:	e8 72 e8 ff ff       	call   ffffffff80032cc6 <ZyanAbsI64.lto_priv.3>
ffffffff80034454:	48 89 c6             	mov    %rax,%rsi
ffffffff80034457:	48 8b 45 90          	mov    -0x70(%rbp),%rax
ffffffff8003445b:	48 83 c0 10          	add    $0x10,%rax
ffffffff8003445f:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80034463:	41 55                	push   %r13
ffffffff80034465:	4d 89 f9             	mov    %r15,%r9
ffffffff80034468:	45 89 f0             	mov    %r14d,%r8d
ffffffff8003446b:	44 89 e1             	mov    %r12d,%ecx
ffffffff8003446e:	89 da                	mov    %ebx,%edx
ffffffff80034470:	48 89 c7             	mov    %rax,%rdi
ffffffff80034473:	e8 47 1c ff ff       	call   ffffffff800260bf <ZydisStringAppendHexU>
ffffffff80034478:	48 83 c4 10          	add    $0x10,%rsp
ffffffff8003447c:	89 45 c0             	mov    %eax,-0x40(%rbp)
ffffffff8003447f:	8b 45 c0             	mov    -0x40(%rbp),%eax
ffffffff80034482:	85 c0                	test   %eax,%eax
ffffffff80034484:	79 12                	jns    ffffffff80034498 <ZydisFormatterIntelPrintDISP+0x259>
ffffffff80034486:	8b 45 c0             	mov    -0x40(%rbp),%eax
ffffffff80034489:	e9 0a 02 00 00       	jmp    ffffffff80034698 <ZydisFormatterIntelPrintDISP+0x459>
ffffffff8003448e:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff80034493:	e9 00 02 00 00       	jmp    ffffffff80034698 <ZydisFormatterIntelPrintDISP+0x459>
ffffffff80034498:	90                   	nop
ffffffff80034499:	e9 f4 01 00 00       	jmp    ffffffff80034692 <ZydisFormatterIntelPrintDISP+0x453>
ffffffff8003449e:	48 8b 45 88          	mov    -0x78(%rbp),%rax
ffffffff800344a2:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff800344a6:	8b 40 30             	mov    0x30(%rax),%eax
ffffffff800344a9:	85 c0                	test   %eax,%eax
ffffffff800344ab:	75 0f                	jne    ffffffff800344bc <ZydisFormatterIntelPrintDISP+0x27d>
ffffffff800344ad:	48 8b 45 88          	mov    -0x78(%rbp),%rax
ffffffff800344b1:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff800344b5:	8b 40 34             	mov    0x34(%rax),%eax
ffffffff800344b8:	85 c0                	test   %eax,%eax
ffffffff800344ba:	74 5f                	je     ffffffff8003451b <ZydisFormatterIntelPrintDISP+0x2dc>
ffffffff800344bc:	48 8b 45 90          	mov    -0x70(%rbp),%rax
ffffffff800344c0:	0f b6 00             	movzbl (%rax),%eax
ffffffff800344c3:	84 c0                	test   %al,%al
ffffffff800344c5:	74 28                	je     ffffffff800344ef <ZydisFormatterIntelPrintDISP+0x2b0>
ffffffff800344c7:	48 8d 15 46 c2 00 00 	lea    0xc246(%rip),%rdx        # ffffffff80040714 <TOK_DATA_ADD.lto_priv.2>
ffffffff800344ce:	48 8b 45 90          	mov    -0x70(%rbp),%rax
ffffffff800344d2:	48 89 d6             	mov    %rdx,%rsi
ffffffff800344d5:	48 89 c7             	mov    %rax,%rdi
ffffffff800344d8:	e8 bb ed ff ff       	call   ffffffff80033298 <ZydisFormatterBufferAppendPredefined.lto_priv.2>
ffffffff800344dd:	89 45 b4             	mov    %eax,-0x4c(%rbp)
ffffffff800344e0:	8b 45 b4             	mov    -0x4c(%rbp),%eax
ffffffff800344e3:	85 c0                	test   %eax,%eax
ffffffff800344e5:	79 34                	jns    ffffffff8003451b <ZydisFormatterIntelPrintDISP+0x2dc>
ffffffff800344e7:	8b 45 b4             	mov    -0x4c(%rbp),%eax
ffffffff800344ea:	e9 a9 01 00 00       	jmp    ffffffff80034698 <ZydisFormatterIntelPrintDISP+0x459>
ffffffff800344ef:	48 8b 45 90          	mov    -0x70(%rbp),%rax
ffffffff800344f3:	48 83 c0 10          	add    $0x10,%rax
ffffffff800344f7:	48 8d 15 4a 65 07 00 	lea    0x7654a(%rip),%rdx        # ffffffff800aaa48 <STR_ADD.lto_priv.3>
ffffffff800344fe:	48 89 d6             	mov    %rdx,%rsi
ffffffff80034501:	48 89 c7             	mov    %rax,%rdi
ffffffff80034504:	e8 c8 e8 ff ff       	call   ffffffff80032dd1 <ZydisStringAppendShort.lto_priv.2>
ffffffff80034509:	89 45 b8             	mov    %eax,-0x48(%rbp)
ffffffff8003450c:	8b 45 b8             	mov    -0x48(%rbp),%eax
ffffffff8003450f:	85 c0                	test   %eax,%eax
ffffffff80034511:	79 08                	jns    ffffffff8003451b <ZydisFormatterIntelPrintDISP+0x2dc>
ffffffff80034513:	8b 45 b8             	mov    -0x48(%rbp),%eax
ffffffff80034516:	e9 7d 01 00 00       	jmp    ffffffff80034698 <ZydisFormatterIntelPrintDISP+0x459>
ffffffff8003451b:	48 8b 45 90          	mov    -0x70(%rbp),%rax
ffffffff8003451f:	0f b6 00             	movzbl (%rax),%eax
ffffffff80034522:	84 c0                	test   %al,%al
ffffffff80034524:	74 23                	je     ffffffff80034549 <ZydisFormatterIntelPrintDISP+0x30a>
ffffffff80034526:	48 8b 45 90          	mov    -0x70(%rbp),%rax
ffffffff8003452a:	be 0a 00 00 00       	mov    $0xa,%esi
ffffffff8003452f:	48 89 c7             	mov    %rax,%rdi
ffffffff80034532:	e8 d2 15 00 00       	call   ffffffff80035b09 <ZydisFormatterBufferAppend>
ffffffff80034537:	89 45 b0             	mov    %eax,-0x50(%rbp)
ffffffff8003453a:	8b 45 b0             	mov    -0x50(%rbp),%eax
ffffffff8003453d:	85 c0                	test   %eax,%eax
ffffffff8003453f:	79 08                	jns    ffffffff80034549 <ZydisFormatterIntelPrintDISP+0x30a>
ffffffff80034541:	8b 45 b0             	mov    -0x50(%rbp),%eax
ffffffff80034544:	e9 4f 01 00 00       	jmp    ffffffff80034698 <ZydisFormatterIntelPrintDISP+0x459>
ffffffff80034549:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff8003454d:	8b 40 1c             	mov    0x1c(%rax),%eax
ffffffff80034550:	85 c0                	test   %eax,%eax
ffffffff80034552:	74 0e                	je     ffffffff80034562 <ZydisFormatterIntelPrintDISP+0x323>
ffffffff80034554:	83 f8 01             	cmp    $0x1,%eax
ffffffff80034557:	0f 84 8a 00 00 00    	je     ffffffff800345e7 <ZydisFormatterIntelPrintDISP+0x3a8>
ffffffff8003455d:	e9 1f 01 00 00       	jmp    ffffffff80034681 <ZydisFormatterIntelPrintDISP+0x442>
ffffffff80034562:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff80034566:	8b 40 1c             	mov    0x1c(%rax),%eax
ffffffff80034569:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
ffffffff8003456d:	89 c0                	mov    %eax,%eax
ffffffff8003456f:	48 69 c0 b0 00 00 00 	imul   $0xb0,%rax,%rax
ffffffff80034576:	48 01 d0             	add    %rdx,%rax
ffffffff80034579:	48 05 a8 00 00 00    	add    $0xa8,%rax
ffffffff8003457f:	48 8b 30             	mov    (%rax),%rsi
ffffffff80034582:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff80034586:	8b 40 1c             	mov    0x1c(%rax),%eax
ffffffff80034589:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
ffffffff8003458d:	89 c0                	mov    %eax,%eax
ffffffff8003458f:	48 69 c0 b0 00 00 00 	imul   $0xb0,%rax,%rax
ffffffff80034596:	48 01 d0             	add    %rdx,%rax
ffffffff80034599:	48 83 c0 50          	add    $0x50,%rax
ffffffff8003459d:	48 8b 10             	mov    (%rax),%rdx
ffffffff800345a0:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff800345a4:	8b 40 24             	mov    0x24(%rax),%eax
ffffffff800345a7:	0f b6 c0             	movzbl %al,%eax
ffffffff800345aa:	48 8b 4d 88          	mov    -0x78(%rbp),%rcx
ffffffff800345ae:	48 8b 49 10          	mov    0x10(%rcx),%rcx
ffffffff800345b2:	48 8b 49 48          	mov    0x48(%rcx),%rcx
ffffffff800345b6:	49 89 c9             	mov    %rcx,%r9
ffffffff800345b9:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
ffffffff800345bd:	48 8d 79 10          	lea    0x10(%rcx),%rdi
ffffffff800345c1:	49 89 f0             	mov    %rsi,%r8
ffffffff800345c4:	48 89 d1             	mov    %rdx,%rcx
ffffffff800345c7:	89 c2                	mov    %eax,%edx
ffffffff800345c9:	4c 89 ce             	mov    %r9,%rsi
ffffffff800345cc:	e8 5c 1a ff ff       	call   ffffffff8002602d <ZydisStringAppendDecU>
ffffffff800345d1:	89 45 a8             	mov    %eax,-0x58(%rbp)
ffffffff800345d4:	8b 45 a8             	mov    -0x58(%rbp),%eax
ffffffff800345d7:	85 c0                	test   %eax,%eax
ffffffff800345d9:	0f 89 a9 00 00 00    	jns    ffffffff80034688 <ZydisFormatterIntelPrintDISP+0x449>
ffffffff800345df:	8b 45 a8             	mov    -0x58(%rbp),%eax
ffffffff800345e2:	e9 b1 00 00 00       	jmp    ffffffff80034698 <ZydisFormatterIntelPrintDISP+0x459>
ffffffff800345e7:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff800345eb:	8b 40 1c             	mov    0x1c(%rax),%eax
ffffffff800345ee:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
ffffffff800345f2:	89 c0                	mov    %eax,%eax
ffffffff800345f4:	48 69 c0 b0 00 00 00 	imul   $0xb0,%rax,%rax
ffffffff800345fb:	48 01 d0             	add    %rdx,%rax
ffffffff800345fe:	48 05 a8 00 00 00    	add    $0xa8,%rax
ffffffff80034604:	48 8b 08             	mov    (%rax),%rcx
ffffffff80034607:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff8003460b:	8b 40 1c             	mov    0x1c(%rax),%eax
ffffffff8003460e:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
ffffffff80034612:	89 c0                	mov    %eax,%eax
ffffffff80034614:	48 69 c0 b0 00 00 00 	imul   $0xb0,%rax,%rax
ffffffff8003461b:	48 01 d0             	add    %rdx,%rax
ffffffff8003461e:	48 83 c0 50          	add    $0x50,%rax
ffffffff80034622:	4c 8b 08             	mov    (%rax),%r9
ffffffff80034625:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff80034629:	0f b6 40 48          	movzbl 0x48(%rax),%eax
ffffffff8003462d:	44 0f b6 c0          	movzbl %al,%r8d
ffffffff80034631:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff80034635:	0f b6 40 49          	movzbl 0x49(%rax),%eax
ffffffff80034639:	0f b6 d0             	movzbl %al,%edx
ffffffff8003463c:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff80034640:	8b 40 24             	mov    0x24(%rax),%eax
ffffffff80034643:	0f b6 c0             	movzbl %al,%eax
ffffffff80034646:	48 8b 75 88          	mov    -0x78(%rbp),%rsi
ffffffff8003464a:	48 8b 76 10          	mov    0x10(%rsi),%rsi
ffffffff8003464e:	48 8b 76 48          	mov    0x48(%rsi),%rsi
ffffffff80034652:	49 89 f2             	mov    %rsi,%r10
ffffffff80034655:	48 8b 75 90          	mov    -0x70(%rbp),%rsi
ffffffff80034659:	48 8d 7e 10          	lea    0x10(%rsi),%rdi
ffffffff8003465d:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80034661:	51                   	push   %rcx
ffffffff80034662:	89 d1                	mov    %edx,%ecx
ffffffff80034664:	89 c2                	mov    %eax,%edx
ffffffff80034666:	4c 89 d6             	mov    %r10,%rsi
ffffffff80034669:	e8 51 1a ff ff       	call   ffffffff800260bf <ZydisStringAppendHexU>
ffffffff8003466e:	48 83 c4 10          	add    $0x10,%rsp
ffffffff80034672:	89 45 ac             	mov    %eax,-0x54(%rbp)
ffffffff80034675:	8b 45 ac             	mov    -0x54(%rbp),%eax
ffffffff80034678:	85 c0                	test   %eax,%eax
ffffffff8003467a:	79 0c                	jns    ffffffff80034688 <ZydisFormatterIntelPrintDISP+0x449>
ffffffff8003467c:	8b 45 ac             	mov    -0x54(%rbp),%eax
ffffffff8003467f:	eb 17                	jmp    ffffffff80034698 <ZydisFormatterIntelPrintDISP+0x459>
ffffffff80034681:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff80034686:	eb 10                	jmp    ffffffff80034698 <ZydisFormatterIntelPrintDISP+0x459>
ffffffff80034688:	90                   	nop
ffffffff80034689:	eb 07                	jmp    ffffffff80034692 <ZydisFormatterIntelPrintDISP+0x453>
ffffffff8003468b:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff80034690:	eb 06                	jmp    ffffffff80034698 <ZydisFormatterIntelPrintDISP+0x459>
ffffffff80034692:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff80034697:	90                   	nop
ffffffff80034698:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
ffffffff8003469c:	5b                   	pop    %rbx
ffffffff8003469d:	41 5c                	pop    %r12
ffffffff8003469f:	41 5d                	pop    %r13
ffffffff800346a1:	41 5e                	pop    %r14
ffffffff800346a3:	41 5f                	pop    %r15
ffffffff800346a5:	5d                   	pop    %rbp
ffffffff800346a6:	c3                   	ret    

ffffffff800346a7 <ZydisFormatterIntelPrintTypecast>:
ffffffff800346a7:	f3 0f 1e fa          	endbr64 
ffffffff800346ab:	55                   	push   %rbp
ffffffff800346ac:	48 89 e5             	mov    %rsp,%rbp
ffffffff800346af:	48 83 ec 68          	sub    $0x68,%rsp
ffffffff800346b3:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
ffffffff800346b7:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
ffffffff800346bb:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
ffffffff800346bf:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff800346c3:	48 8b 50 10          	mov    0x10(%rax),%rdx
ffffffff800346c7:	48 8b 4d 98          	mov    -0x68(%rbp),%rcx
ffffffff800346cb:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff800346cf:	48 89 ce             	mov    %rcx,%rsi
ffffffff800346d2:	48 89 c7             	mov    %rax,%rdi
ffffffff800346d5:	e8 c5 ad ff ff       	call   ffffffff8002f49f <ZydisFormatterHelperGetExplicitSize>
ffffffff800346da:	3d 00 02 00 00       	cmp    $0x200,%eax
ffffffff800346df:	0f 84 bf 03 00 00    	je     ffffffff80034aa4 <ZydisFormatterIntelPrintTypecast+0x3fd>
ffffffff800346e5:	3d 00 02 00 00       	cmp    $0x200,%eax
ffffffff800346ea:	0f 87 0d 04 00 00    	ja     ffffffff80034afd <ZydisFormatterIntelPrintTypecast+0x456>
ffffffff800346f0:	3d 00 01 00 00       	cmp    $0x100,%eax
ffffffff800346f5:	0f 84 49 03 00 00    	je     ffffffff80034a44 <ZydisFormatterIntelPrintTypecast+0x39d>
ffffffff800346fb:	3d 00 01 00 00       	cmp    $0x100,%eax
ffffffff80034700:	0f 87 f7 03 00 00    	ja     ffffffff80034afd <ZydisFormatterIntelPrintTypecast+0x456>
ffffffff80034706:	3d 80 00 00 00       	cmp    $0x80,%eax
ffffffff8003470b:	0f 84 cc 02 00 00    	je     ffffffff800349dd <ZydisFormatterIntelPrintTypecast+0x336>
ffffffff80034711:	3d 80 00 00 00       	cmp    $0x80,%eax
ffffffff80034716:	0f 87 e1 03 00 00    	ja     ffffffff80034afd <ZydisFormatterIntelPrintTypecast+0x456>
ffffffff8003471c:	83 f8 50             	cmp    $0x50,%eax
ffffffff8003471f:	0f 84 51 02 00 00    	je     ffffffff80034976 <ZydisFormatterIntelPrintTypecast+0x2cf>
ffffffff80034725:	83 f8 50             	cmp    $0x50,%eax
ffffffff80034728:	0f 87 cf 03 00 00    	ja     ffffffff80034afd <ZydisFormatterIntelPrintTypecast+0x456>
ffffffff8003472e:	83 f8 40             	cmp    $0x40,%eax
ffffffff80034731:	0f 84 d8 01 00 00    	je     ffffffff8003490f <ZydisFormatterIntelPrintTypecast+0x268>
ffffffff80034737:	83 f8 40             	cmp    $0x40,%eax
ffffffff8003473a:	0f 87 bd 03 00 00    	ja     ffffffff80034afd <ZydisFormatterIntelPrintTypecast+0x456>
ffffffff80034740:	83 f8 30             	cmp    $0x30,%eax
ffffffff80034743:	0f 84 5f 01 00 00    	je     ffffffff800348a8 <ZydisFormatterIntelPrintTypecast+0x201>
ffffffff80034749:	83 f8 30             	cmp    $0x30,%eax
ffffffff8003474c:	0f 87 ab 03 00 00    	ja     ffffffff80034afd <ZydisFormatterIntelPrintTypecast+0x456>
ffffffff80034752:	83 f8 20             	cmp    $0x20,%eax
ffffffff80034755:	0f 84 e6 00 00 00    	je     ffffffff80034841 <ZydisFormatterIntelPrintTypecast+0x19a>
ffffffff8003475b:	83 f8 20             	cmp    $0x20,%eax
ffffffff8003475e:	0f 87 99 03 00 00    	ja     ffffffff80034afd <ZydisFormatterIntelPrintTypecast+0x456>
ffffffff80034764:	83 f8 08             	cmp    $0x8,%eax
ffffffff80034767:	74 0a                	je     ffffffff80034773 <ZydisFormatterIntelPrintTypecast+0xcc>
ffffffff80034769:	83 f8 10             	cmp    $0x10,%eax
ffffffff8003476c:	74 6c                	je     ffffffff800347da <ZydisFormatterIntelPrintTypecast+0x133>
ffffffff8003476e:	e9 8a 03 00 00       	jmp    ffffffff80034afd <ZydisFormatterIntelPrintTypecast+0x456>
ffffffff80034773:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff80034777:	0f b6 00             	movzbl (%rax),%eax
ffffffff8003477a:	84 c0                	test   %al,%al
ffffffff8003477c:	74 2c                	je     ffffffff800347aa <ZydisFormatterIntelPrintTypecast+0x103>
ffffffff8003477e:	48 8d 15 2b c6 00 00 	lea    0xc62b(%rip),%rdx        # ffffffff80040db0 <TOK_DATA_SIZE_8_INTEL.lto_priv.2>
ffffffff80034785:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff80034789:	48 89 d6             	mov    %rdx,%rsi
ffffffff8003478c:	48 89 c7             	mov    %rax,%rdi
ffffffff8003478f:	e8 04 eb ff ff       	call   ffffffff80033298 <ZydisFormatterBufferAppendPredefined.lto_priv.2>
ffffffff80034794:	89 45 b8             	mov    %eax,-0x48(%rbp)
ffffffff80034797:	8b 45 b8             	mov    -0x48(%rbp),%eax
ffffffff8003479a:	85 c0                	test   %eax,%eax
ffffffff8003479c:	0f 89 5e 03 00 00    	jns    ffffffff80034b00 <ZydisFormatterIntelPrintTypecast+0x459>
ffffffff800347a2:	8b 45 b8             	mov    -0x48(%rbp),%eax
ffffffff800347a5:	e9 75 03 00 00       	jmp    ffffffff80034b1f <ZydisFormatterIntelPrintTypecast+0x478>
ffffffff800347aa:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff800347ae:	48 83 c0 10          	add    $0x10,%rax
ffffffff800347b2:	48 8d 15 47 6a 07 00 	lea    0x76a47(%rip),%rdx        # ffffffff800ab200 <STR_SIZE_8_INTEL.lto_priv.2>
ffffffff800347b9:	48 89 d6             	mov    %rdx,%rsi
ffffffff800347bc:	48 89 c7             	mov    %rax,%rdi
ffffffff800347bf:	e8 0d e6 ff ff       	call   ffffffff80032dd1 <ZydisStringAppendShort.lto_priv.2>
ffffffff800347c4:	89 45 bc             	mov    %eax,-0x44(%rbp)
ffffffff800347c7:	8b 45 bc             	mov    -0x44(%rbp),%eax
ffffffff800347ca:	85 c0                	test   %eax,%eax
ffffffff800347cc:	0f 89 2e 03 00 00    	jns    ffffffff80034b00 <ZydisFormatterIntelPrintTypecast+0x459>
ffffffff800347d2:	8b 45 bc             	mov    -0x44(%rbp),%eax
ffffffff800347d5:	e9 45 03 00 00       	jmp    ffffffff80034b1f <ZydisFormatterIntelPrintTypecast+0x478>
ffffffff800347da:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff800347de:	0f b6 00             	movzbl (%rax),%eax
ffffffff800347e1:	84 c0                	test   %al,%al
ffffffff800347e3:	74 2c                	je     ffffffff80034811 <ZydisFormatterIntelPrintTypecast+0x16a>
ffffffff800347e5:	48 8d 15 e4 c5 00 00 	lea    0xc5e4(%rip),%rdx        # ffffffff80040dd0 <TOK_DATA_SIZE_16_INTEL.lto_priv.2>
ffffffff800347ec:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff800347f0:	48 89 d6             	mov    %rdx,%rsi
ffffffff800347f3:	48 89 c7             	mov    %rax,%rdi
ffffffff800347f6:	e8 9d ea ff ff       	call   ffffffff80033298 <ZydisFormatterBufferAppendPredefined.lto_priv.2>
ffffffff800347fb:	89 45 c0             	mov    %eax,-0x40(%rbp)
ffffffff800347fe:	8b 45 c0             	mov    -0x40(%rbp),%eax
ffffffff80034801:	85 c0                	test   %eax,%eax
ffffffff80034803:	0f 89 fa 02 00 00    	jns    ffffffff80034b03 <ZydisFormatterIntelPrintTypecast+0x45c>
ffffffff80034809:	8b 45 c0             	mov    -0x40(%rbp),%eax
ffffffff8003480c:	e9 0e 03 00 00       	jmp    ffffffff80034b1f <ZydisFormatterIntelPrintTypecast+0x478>
ffffffff80034811:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff80034815:	48 83 c0 10          	add    $0x10,%rax
ffffffff80034819:	48 8d 15 08 6a 07 00 	lea    0x76a08(%rip),%rdx        # ffffffff800ab228 <STR_SIZE_16_INTEL.lto_priv.2>
ffffffff80034820:	48 89 d6             	mov    %rdx,%rsi
ffffffff80034823:	48 89 c7             	mov    %rax,%rdi
ffffffff80034826:	e8 a6 e5 ff ff       	call   ffffffff80032dd1 <ZydisStringAppendShort.lto_priv.2>
ffffffff8003482b:	89 45 c4             	mov    %eax,-0x3c(%rbp)
ffffffff8003482e:	8b 45 c4             	mov    -0x3c(%rbp),%eax
ffffffff80034831:	85 c0                	test   %eax,%eax
ffffffff80034833:	0f 89 ca 02 00 00    	jns    ffffffff80034b03 <ZydisFormatterIntelPrintTypecast+0x45c>
ffffffff80034839:	8b 45 c4             	mov    -0x3c(%rbp),%eax
ffffffff8003483c:	e9 de 02 00 00       	jmp    ffffffff80034b1f <ZydisFormatterIntelPrintTypecast+0x478>
ffffffff80034841:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff80034845:	0f b6 00             	movzbl (%rax),%eax
ffffffff80034848:	84 c0                	test   %al,%al
ffffffff8003484a:	74 2c                	je     ffffffff80034878 <ZydisFormatterIntelPrintTypecast+0x1d1>
ffffffff8003484c:	48 8d 15 9d c5 00 00 	lea    0xc59d(%rip),%rdx        # ffffffff80040df0 <TOK_DATA_SIZE_32_INTEL.lto_priv.2>
ffffffff80034853:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff80034857:	48 89 d6             	mov    %rdx,%rsi
ffffffff8003485a:	48 89 c7             	mov    %rax,%rdi
ffffffff8003485d:	e8 36 ea ff ff       	call   ffffffff80033298 <ZydisFormatterBufferAppendPredefined.lto_priv.2>
ffffffff80034862:	89 45 c8             	mov    %eax,-0x38(%rbp)
ffffffff80034865:	8b 45 c8             	mov    -0x38(%rbp),%eax
ffffffff80034868:	85 c0                	test   %eax,%eax
ffffffff8003486a:	0f 89 96 02 00 00    	jns    ffffffff80034b06 <ZydisFormatterIntelPrintTypecast+0x45f>
ffffffff80034870:	8b 45 c8             	mov    -0x38(%rbp),%eax
ffffffff80034873:	e9 a7 02 00 00       	jmp    ffffffff80034b1f <ZydisFormatterIntelPrintTypecast+0x478>
ffffffff80034878:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff8003487c:	48 83 c0 10          	add    $0x10,%rax
ffffffff80034880:	48 8d 15 c9 69 07 00 	lea    0x769c9(%rip),%rdx        # ffffffff800ab250 <STR_SIZE_32_INTEL.lto_priv.2>
ffffffff80034887:	48 89 d6             	mov    %rdx,%rsi
ffffffff8003488a:	48 89 c7             	mov    %rax,%rdi
ffffffff8003488d:	e8 3f e5 ff ff       	call   ffffffff80032dd1 <ZydisStringAppendShort.lto_priv.2>
ffffffff80034892:	89 45 cc             	mov    %eax,-0x34(%rbp)
ffffffff80034895:	8b 45 cc             	mov    -0x34(%rbp),%eax
ffffffff80034898:	85 c0                	test   %eax,%eax
ffffffff8003489a:	0f 89 66 02 00 00    	jns    ffffffff80034b06 <ZydisFormatterIntelPrintTypecast+0x45f>
ffffffff800348a0:	8b 45 cc             	mov    -0x34(%rbp),%eax
ffffffff800348a3:	e9 77 02 00 00       	jmp    ffffffff80034b1f <ZydisFormatterIntelPrintTypecast+0x478>
ffffffff800348a8:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff800348ac:	0f b6 00             	movzbl (%rax),%eax
ffffffff800348af:	84 c0                	test   %al,%al
ffffffff800348b1:	74 2c                	je     ffffffff800348df <ZydisFormatterIntelPrintTypecast+0x238>
ffffffff800348b3:	48 8d 15 56 c5 00 00 	lea    0xc556(%rip),%rdx        # ffffffff80040e10 <TOK_DATA_SIZE_48.lto_priv.2>
ffffffff800348ba:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff800348be:	48 89 d6             	mov    %rdx,%rsi
ffffffff800348c1:	48 89 c7             	mov    %rax,%rdi
ffffffff800348c4:	e8 cf e9 ff ff       	call   ffffffff80033298 <ZydisFormatterBufferAppendPredefined.lto_priv.2>
ffffffff800348c9:	89 45 d0             	mov    %eax,-0x30(%rbp)
ffffffff800348cc:	8b 45 d0             	mov    -0x30(%rbp),%eax
ffffffff800348cf:	85 c0                	test   %eax,%eax
ffffffff800348d1:	0f 89 32 02 00 00    	jns    ffffffff80034b09 <ZydisFormatterIntelPrintTypecast+0x462>
ffffffff800348d7:	8b 45 d0             	mov    -0x30(%rbp),%eax
ffffffff800348da:	e9 40 02 00 00       	jmp    ffffffff80034b1f <ZydisFormatterIntelPrintTypecast+0x478>
ffffffff800348df:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff800348e3:	48 83 c0 10          	add    $0x10,%rax
ffffffff800348e7:	48 8d 15 7a 69 07 00 	lea    0x7697a(%rip),%rdx        # ffffffff800ab268 <STR_SIZE_48.lto_priv.2>
ffffffff800348ee:	48 89 d6             	mov    %rdx,%rsi
ffffffff800348f1:	48 89 c7             	mov    %rax,%rdi
ffffffff800348f4:	e8 d8 e4 ff ff       	call   ffffffff80032dd1 <ZydisStringAppendShort.lto_priv.2>
ffffffff800348f9:	89 45 d4             	mov    %eax,-0x2c(%rbp)
ffffffff800348fc:	8b 45 d4             	mov    -0x2c(%rbp),%eax
ffffffff800348ff:	85 c0                	test   %eax,%eax
ffffffff80034901:	0f 89 02 02 00 00    	jns    ffffffff80034b09 <ZydisFormatterIntelPrintTypecast+0x462>
ffffffff80034907:	8b 45 d4             	mov    -0x2c(%rbp),%eax
ffffffff8003490a:	e9 10 02 00 00       	jmp    ffffffff80034b1f <ZydisFormatterIntelPrintTypecast+0x478>
ffffffff8003490f:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff80034913:	0f b6 00             	movzbl (%rax),%eax
ffffffff80034916:	84 c0                	test   %al,%al
ffffffff80034918:	74 2c                	je     ffffffff80034946 <ZydisFormatterIntelPrintTypecast+0x29f>
ffffffff8003491a:	48 8d 15 0f c5 00 00 	lea    0xc50f(%rip),%rdx        # ffffffff80040e30 <TOK_DATA_SIZE_64_INTEL.lto_priv.2>
ffffffff80034921:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff80034925:	48 89 d6             	mov    %rdx,%rsi
ffffffff80034928:	48 89 c7             	mov    %rax,%rdi
ffffffff8003492b:	e8 68 e9 ff ff       	call   ffffffff80033298 <ZydisFormatterBufferAppendPredefined.lto_priv.2>
ffffffff80034930:	89 45 d8             	mov    %eax,-0x28(%rbp)
ffffffff80034933:	8b 45 d8             	mov    -0x28(%rbp),%eax
ffffffff80034936:	85 c0                	test   %eax,%eax
ffffffff80034938:	0f 89 ce 01 00 00    	jns    ffffffff80034b0c <ZydisFormatterIntelPrintTypecast+0x465>
ffffffff8003493e:	8b 45 d8             	mov    -0x28(%rbp),%eax
ffffffff80034941:	e9 d9 01 00 00       	jmp    ffffffff80034b1f <ZydisFormatterIntelPrintTypecast+0x478>
ffffffff80034946:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff8003494a:	48 83 c0 10          	add    $0x10,%rax
ffffffff8003494e:	48 8d 15 3b 69 07 00 	lea    0x7693b(%rip),%rdx        # ffffffff800ab290 <STR_SIZE_64_INTEL.lto_priv.2>
ffffffff80034955:	48 89 d6             	mov    %rdx,%rsi
ffffffff80034958:	48 89 c7             	mov    %rax,%rdi
ffffffff8003495b:	e8 71 e4 ff ff       	call   ffffffff80032dd1 <ZydisStringAppendShort.lto_priv.2>
ffffffff80034960:	89 45 dc             	mov    %eax,-0x24(%rbp)
ffffffff80034963:	8b 45 dc             	mov    -0x24(%rbp),%eax
ffffffff80034966:	85 c0                	test   %eax,%eax
ffffffff80034968:	0f 89 9e 01 00 00    	jns    ffffffff80034b0c <ZydisFormatterIntelPrintTypecast+0x465>
ffffffff8003496e:	8b 45 dc             	mov    -0x24(%rbp),%eax
ffffffff80034971:	e9 a9 01 00 00       	jmp    ffffffff80034b1f <ZydisFormatterIntelPrintTypecast+0x478>
ffffffff80034976:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff8003497a:	0f b6 00             	movzbl (%rax),%eax
ffffffff8003497d:	84 c0                	test   %al,%al
ffffffff8003497f:	74 2c                	je     ffffffff800349ad <ZydisFormatterIntelPrintTypecast+0x306>
ffffffff80034981:	48 8d 15 c8 c4 00 00 	lea    0xc4c8(%rip),%rdx        # ffffffff80040e50 <TOK_DATA_SIZE_80.lto_priv.2>
ffffffff80034988:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff8003498c:	48 89 d6             	mov    %rdx,%rsi
ffffffff8003498f:	48 89 c7             	mov    %rax,%rdi
ffffffff80034992:	e8 01 e9 ff ff       	call   ffffffff80033298 <ZydisFormatterBufferAppendPredefined.lto_priv.2>
ffffffff80034997:	89 45 e0             	mov    %eax,-0x20(%rbp)
ffffffff8003499a:	8b 45 e0             	mov    -0x20(%rbp),%eax
ffffffff8003499d:	85 c0                	test   %eax,%eax
ffffffff8003499f:	0f 89 6a 01 00 00    	jns    ffffffff80034b0f <ZydisFormatterIntelPrintTypecast+0x468>
ffffffff800349a5:	8b 45 e0             	mov    -0x20(%rbp),%eax
ffffffff800349a8:	e9 72 01 00 00       	jmp    ffffffff80034b1f <ZydisFormatterIntelPrintTypecast+0x478>
ffffffff800349ad:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff800349b1:	48 83 c0 10          	add    $0x10,%rax
ffffffff800349b5:	48 8d 15 ec 68 07 00 	lea    0x768ec(%rip),%rdx        # ffffffff800ab2a8 <STR_SIZE_80.lto_priv.2>
ffffffff800349bc:	48 89 d6             	mov    %rdx,%rsi
ffffffff800349bf:	48 89 c7             	mov    %rax,%rdi
ffffffff800349c2:	e8 0a e4 ff ff       	call   ffffffff80032dd1 <ZydisStringAppendShort.lto_priv.2>
ffffffff800349c7:	89 45 e4             	mov    %eax,-0x1c(%rbp)
ffffffff800349ca:	8b 45 e4             	mov    -0x1c(%rbp),%eax
ffffffff800349cd:	85 c0                	test   %eax,%eax
ffffffff800349cf:	0f 89 3a 01 00 00    	jns    ffffffff80034b0f <ZydisFormatterIntelPrintTypecast+0x468>
ffffffff800349d5:	8b 45 e4             	mov    -0x1c(%rbp),%eax
ffffffff800349d8:	e9 42 01 00 00       	jmp    ffffffff80034b1f <ZydisFormatterIntelPrintTypecast+0x478>
ffffffff800349dd:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff800349e1:	0f b6 00             	movzbl (%rax),%eax
ffffffff800349e4:	84 c0                	test   %al,%al
ffffffff800349e6:	74 2c                	je     ffffffff80034a14 <ZydisFormatterIntelPrintTypecast+0x36d>
ffffffff800349e8:	48 8d 15 81 c4 00 00 	lea    0xc481(%rip),%rdx        # ffffffff80040e70 <TOK_DATA_SIZE_128_INTEL.lto_priv.2>
ffffffff800349ef:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff800349f3:	48 89 d6             	mov    %rdx,%rsi
ffffffff800349f6:	48 89 c7             	mov    %rax,%rdi
ffffffff800349f9:	e8 9a e8 ff ff       	call   ffffffff80033298 <ZydisFormatterBufferAppendPredefined.lto_priv.2>
ffffffff800349fe:	89 45 e8             	mov    %eax,-0x18(%rbp)
ffffffff80034a01:	8b 45 e8             	mov    -0x18(%rbp),%eax
ffffffff80034a04:	85 c0                	test   %eax,%eax
ffffffff80034a06:	0f 89 06 01 00 00    	jns    ffffffff80034b12 <ZydisFormatterIntelPrintTypecast+0x46b>
ffffffff80034a0c:	8b 45 e8             	mov    -0x18(%rbp),%eax
ffffffff80034a0f:	e9 0b 01 00 00       	jmp    ffffffff80034b1f <ZydisFormatterIntelPrintTypecast+0x478>
ffffffff80034a14:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff80034a18:	48 83 c0 10          	add    $0x10,%rax
ffffffff80034a1c:	48 8d 15 ad 68 07 00 	lea    0x768ad(%rip),%rdx        # ffffffff800ab2d0 <STR_SIZE_128_INTEL.lto_priv.2>
ffffffff80034a23:	48 89 d6             	mov    %rdx,%rsi
ffffffff80034a26:	48 89 c7             	mov    %rax,%rdi
ffffffff80034a29:	e8 a3 e3 ff ff       	call   ffffffff80032dd1 <ZydisStringAppendShort.lto_priv.2>
ffffffff80034a2e:	89 45 ec             	mov    %eax,-0x14(%rbp)
ffffffff80034a31:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff80034a34:	85 c0                	test   %eax,%eax
ffffffff80034a36:	0f 89 d6 00 00 00    	jns    ffffffff80034b12 <ZydisFormatterIntelPrintTypecast+0x46b>
ffffffff80034a3c:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff80034a3f:	e9 db 00 00 00       	jmp    ffffffff80034b1f <ZydisFormatterIntelPrintTypecast+0x478>
ffffffff80034a44:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff80034a48:	0f b6 00             	movzbl (%rax),%eax
ffffffff80034a4b:	84 c0                	test   %al,%al
ffffffff80034a4d:	74 2c                	je     ffffffff80034a7b <ZydisFormatterIntelPrintTypecast+0x3d4>
ffffffff80034a4f:	48 8d 15 3a c4 00 00 	lea    0xc43a(%rip),%rdx        # ffffffff80040e90 <TOK_DATA_SIZE_256_INTEL.lto_priv.2>
ffffffff80034a56:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff80034a5a:	48 89 d6             	mov    %rdx,%rsi
ffffffff80034a5d:	48 89 c7             	mov    %rax,%rdi
ffffffff80034a60:	e8 33 e8 ff ff       	call   ffffffff80033298 <ZydisFormatterBufferAppendPredefined.lto_priv.2>
ffffffff80034a65:	89 45 f0             	mov    %eax,-0x10(%rbp)
ffffffff80034a68:	8b 45 f0             	mov    -0x10(%rbp),%eax
ffffffff80034a6b:	85 c0                	test   %eax,%eax
ffffffff80034a6d:	0f 89 a2 00 00 00    	jns    ffffffff80034b15 <ZydisFormatterIntelPrintTypecast+0x46e>
ffffffff80034a73:	8b 45 f0             	mov    -0x10(%rbp),%eax
ffffffff80034a76:	e9 a4 00 00 00       	jmp    ffffffff80034b1f <ZydisFormatterIntelPrintTypecast+0x478>
ffffffff80034a7b:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff80034a7f:	48 83 c0 10          	add    $0x10,%rax
ffffffff80034a83:	48 8d 15 6e 68 07 00 	lea    0x7686e(%rip),%rdx        # ffffffff800ab2f8 <STR_SIZE_256_INTEL.lto_priv.2>
ffffffff80034a8a:	48 89 d6             	mov    %rdx,%rsi
ffffffff80034a8d:	48 89 c7             	mov    %rax,%rdi
ffffffff80034a90:	e8 3c e3 ff ff       	call   ffffffff80032dd1 <ZydisStringAppendShort.lto_priv.2>
ffffffff80034a95:	89 45 f4             	mov    %eax,-0xc(%rbp)
ffffffff80034a98:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff80034a9b:	85 c0                	test   %eax,%eax
ffffffff80034a9d:	79 76                	jns    ffffffff80034b15 <ZydisFormatterIntelPrintTypecast+0x46e>
ffffffff80034a9f:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff80034aa2:	eb 7b                	jmp    ffffffff80034b1f <ZydisFormatterIntelPrintTypecast+0x478>
ffffffff80034aa4:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff80034aa8:	0f b6 00             	movzbl (%rax),%eax
ffffffff80034aab:	84 c0                	test   %al,%al
ffffffff80034aad:	74 25                	je     ffffffff80034ad4 <ZydisFormatterIntelPrintTypecast+0x42d>
ffffffff80034aaf:	48 8d 15 fa c3 00 00 	lea    0xc3fa(%rip),%rdx        # ffffffff80040eb0 <TOK_DATA_SIZE_512_INTEL.lto_priv.2>
ffffffff80034ab6:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff80034aba:	48 89 d6             	mov    %rdx,%rsi
ffffffff80034abd:	48 89 c7             	mov    %rax,%rdi
ffffffff80034ac0:	e8 d3 e7 ff ff       	call   ffffffff80033298 <ZydisFormatterBufferAppendPredefined.lto_priv.2>
ffffffff80034ac5:	89 45 f8             	mov    %eax,-0x8(%rbp)
ffffffff80034ac8:	8b 45 f8             	mov    -0x8(%rbp),%eax
ffffffff80034acb:	85 c0                	test   %eax,%eax
ffffffff80034acd:	79 49                	jns    ffffffff80034b18 <ZydisFormatterIntelPrintTypecast+0x471>
ffffffff80034acf:	8b 45 f8             	mov    -0x8(%rbp),%eax
ffffffff80034ad2:	eb 4b                	jmp    ffffffff80034b1f <ZydisFormatterIntelPrintTypecast+0x478>
ffffffff80034ad4:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
ffffffff80034ad8:	48 83 c0 10          	add    $0x10,%rax
ffffffff80034adc:	48 8d 15 3d 68 07 00 	lea    0x7683d(%rip),%rdx        # ffffffff800ab320 <STR_SIZE_512_INTEL.lto_priv.2>
ffffffff80034ae3:	48 89 d6             	mov    %rdx,%rsi
ffffffff80034ae6:	48 89 c7             	mov    %rax,%rdi
ffffffff80034ae9:	e8 e3 e2 ff ff       	call   ffffffff80032dd1 <ZydisStringAppendShort.lto_priv.2>
ffffffff80034aee:	89 45 fc             	mov    %eax,-0x4(%rbp)
ffffffff80034af1:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff80034af4:	85 c0                	test   %eax,%eax
ffffffff80034af6:	79 20                	jns    ffffffff80034b18 <ZydisFormatterIntelPrintTypecast+0x471>
ffffffff80034af8:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff80034afb:	eb 22                	jmp    ffffffff80034b1f <ZydisFormatterIntelPrintTypecast+0x478>
ffffffff80034afd:	90                   	nop
ffffffff80034afe:	eb 19                	jmp    ffffffff80034b19 <ZydisFormatterIntelPrintTypecast+0x472>
ffffffff80034b00:	90                   	nop
ffffffff80034b01:	eb 16                	jmp    ffffffff80034b19 <ZydisFormatterIntelPrintTypecast+0x472>
ffffffff80034b03:	90                   	nop
ffffffff80034b04:	eb 13                	jmp    ffffffff80034b19 <ZydisFormatterIntelPrintTypecast+0x472>
ffffffff80034b06:	90                   	nop
ffffffff80034b07:	eb 10                	jmp    ffffffff80034b19 <ZydisFormatterIntelPrintTypecast+0x472>
ffffffff80034b09:	90                   	nop
ffffffff80034b0a:	eb 0d                	jmp    ffffffff80034b19 <ZydisFormatterIntelPrintTypecast+0x472>
ffffffff80034b0c:	90                   	nop
ffffffff80034b0d:	eb 0a                	jmp    ffffffff80034b19 <ZydisFormatterIntelPrintTypecast+0x472>
ffffffff80034b0f:	90                   	nop
ffffffff80034b10:	eb 07                	jmp    ffffffff80034b19 <ZydisFormatterIntelPrintTypecast+0x472>
ffffffff80034b12:	90                   	nop
ffffffff80034b13:	eb 04                	jmp    ffffffff80034b19 <ZydisFormatterIntelPrintTypecast+0x472>
ffffffff80034b15:	90                   	nop
ffffffff80034b16:	eb 01                	jmp    ffffffff80034b19 <ZydisFormatterIntelPrintTypecast+0x472>
ffffffff80034b18:	90                   	nop
ffffffff80034b19:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff80034b1e:	90                   	nop
ffffffff80034b1f:	c9                   	leave  
ffffffff80034b20:	c3                   	ret    

ffffffff80034b21 <ZydisFormatterIntelFormatInstructionMASM>:
ffffffff80034b21:	f3 0f 1e fa          	endbr64 
ffffffff80034b25:	55                   	push   %rbp
ffffffff80034b26:	48 89 e5             	mov    %rsp,%rbp
ffffffff80034b29:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff80034b2d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff80034b31:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff80034b35:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
ffffffff80034b39:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80034b3d:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)
ffffffff80034b44:	00 
ffffffff80034b45:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff80034b49:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
ffffffff80034b4d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80034b51:	48 89 ce             	mov    %rcx,%rsi
ffffffff80034b54:	48 89 c7             	mov    %rax,%rdi
ffffffff80034b57:	e8 5f e8 ff ff       	call   ffffffff800333bb <ZydisFormatterIntelFormatInstruction>
ffffffff80034b5c:	c9                   	leave  
ffffffff80034b5d:	c3                   	ret    

ffffffff80034b5e <ZydisFormatterIntelPrintAddressMASM>:
ffffffff80034b5e:	f3 0f 1e fa          	endbr64 
ffffffff80034b62:	55                   	push   %rbp
ffffffff80034b63:	48 89 e5             	mov    %rsp,%rbp
ffffffff80034b66:	48 83 ec 40          	sub    $0x40,%rsp
ffffffff80034b6a:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
ffffffff80034b6e:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
ffffffff80034b72:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
ffffffff80034b76:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80034b7a:	48 8b 70 10          	mov    0x10(%rax),%rsi
ffffffff80034b7e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80034b82:	48 8b 38             	mov    (%rax),%rdi
ffffffff80034b85:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
ffffffff80034b89:	48 89 c1             	mov    %rax,%rcx
ffffffff80034b8c:	ba 00 00 00 00       	mov    $0x0,%edx
ffffffff80034b91:	e8 74 02 00 00       	call   ffffffff80034e0a <ZydisCalcAbsoluteAddress>
ffffffff80034b96:	89 45 f8             	mov    %eax,-0x8(%rbp)
ffffffff80034b99:	8b 45 f8             	mov    -0x8(%rbp),%eax
ffffffff80034b9c:	85 c0                	test   %eax,%eax
ffffffff80034b9e:	79 08                	jns    ffffffff80034ba8 <ZydisFormatterIntelPrintAddressMASM+0x4a>
ffffffff80034ba0:	8b 45 f8             	mov    -0x8(%rbp),%eax
ffffffff80034ba3:	e9 1b 02 00 00       	jmp    ffffffff80034dc3 <ZydisFormatterIntelPrintAddressMASM+0x265>
ffffffff80034ba8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80034bac:	8b 40 18             	mov    0x18(%rax),%eax
ffffffff80034baf:	83 f8 ff             	cmp    $0xffffffff,%eax
ffffffff80034bb2:	74 09                	je     ffffffff80034bbd <ZydisFormatterIntelPrintAddressMASM+0x5f>
ffffffff80034bb4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80034bb8:	8b 40 18             	mov    0x18(%rax),%eax
ffffffff80034bbb:	eb 05                	jmp    ffffffff80034bc2 <ZydisFormatterIntelPrintAddressMASM+0x64>
ffffffff80034bbd:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80034bc2:	88 45 ff             	mov    %al,-0x1(%rbp)
ffffffff80034bc5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80034bc9:	8b 40 18             	mov    0x18(%rax),%eax
ffffffff80034bcc:	83 f8 ff             	cmp    $0xffffffff,%eax
ffffffff80034bcf:	75 61                	jne    ffffffff80034c32 <ZydisFormatterIntelPrintAddressMASM+0xd4>
ffffffff80034bd1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80034bd5:	8b 40 0c             	mov    0xc(%rax),%eax
ffffffff80034bd8:	83 f8 01             	cmp    $0x1,%eax
ffffffff80034bdb:	75 55                	jne    ffffffff80034c32 <ZydisFormatterIntelPrintAddressMASM+0xd4>
ffffffff80034bdd:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80034be1:	48 8b 00             	mov    (%rax),%rax
ffffffff80034be4:	0f b6 40 15          	movzbl 0x15(%rax),%eax
ffffffff80034be8:	0f b6 c0             	movzbl %al,%eax
ffffffff80034beb:	83 f8 40             	cmp    $0x40,%eax
ffffffff80034bee:	74 32                	je     ffffffff80034c22 <ZydisFormatterIntelPrintAddressMASM+0xc4>
ffffffff80034bf0:	83 f8 40             	cmp    $0x40,%eax
ffffffff80034bf3:	7f 33                	jg     ffffffff80034c28 <ZydisFormatterIntelPrintAddressMASM+0xca>
ffffffff80034bf5:	83 f8 10             	cmp    $0x10,%eax
ffffffff80034bf8:	74 07                	je     ffffffff80034c01 <ZydisFormatterIntelPrintAddressMASM+0xa3>
ffffffff80034bfa:	83 f8 20             	cmp    $0x20,%eax
ffffffff80034bfd:	74 13                	je     ffffffff80034c12 <ZydisFormatterIntelPrintAddressMASM+0xb4>
ffffffff80034bff:	eb 27                	jmp    ffffffff80034c28 <ZydisFormatterIntelPrintAddressMASM+0xca>
ffffffff80034c01:	c6 45 ff 04          	movb   $0x4,-0x1(%rbp)
ffffffff80034c05:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80034c09:	0f b7 c0             	movzwl %ax,%eax
ffffffff80034c0c:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff80034c10:	eb 20                	jmp    ffffffff80034c32 <ZydisFormatterIntelPrintAddressMASM+0xd4>
ffffffff80034c12:	c6 45 ff 08          	movb   $0x8,-0x1(%rbp)
ffffffff80034c16:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80034c1a:	89 c0                	mov    %eax,%eax
ffffffff80034c1c:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff80034c20:	eb 10                	jmp    ffffffff80034c32 <ZydisFormatterIntelPrintAddressMASM+0xd4>
ffffffff80034c22:	c6 45 ff 10          	movb   $0x10,-0x1(%rbp)
ffffffff80034c26:	eb 0a                	jmp    ffffffff80034c32 <ZydisFormatterIntelPrintAddressMASM+0xd4>
ffffffff80034c28:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff80034c2d:	e9 91 01 00 00       	jmp    ffffffff80034dc3 <ZydisFormatterIntelPrintAddressMASM+0x265>
ffffffff80034c32:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff80034c36:	0f b6 00             	movzbl (%rax),%eax
ffffffff80034c39:	84 c0                	test   %al,%al
ffffffff80034c3b:	74 28                	je     ffffffff80034c65 <ZydisFormatterIntelPrintAddressMASM+0x107>
ffffffff80034c3d:	48 8d 15 d6 ba 00 00 	lea    0xbad6(%rip),%rdx        # ffffffff8004071a <TOK_DATA_ADDR_RELATIVE.lto_priv.2>
ffffffff80034c44:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff80034c48:	48 89 d6             	mov    %rdx,%rsi
ffffffff80034c4b:	48 89 c7             	mov    %rax,%rdi
ffffffff80034c4e:	e8 45 e6 ff ff       	call   ffffffff80033298 <ZydisFormatterBufferAppendPredefined.lto_priv.2>
ffffffff80034c53:	89 45 f0             	mov    %eax,-0x10(%rbp)
ffffffff80034c56:	8b 45 f0             	mov    -0x10(%rbp),%eax
ffffffff80034c59:	85 c0                	test   %eax,%eax
ffffffff80034c5b:	79 34                	jns    ffffffff80034c91 <ZydisFormatterIntelPrintAddressMASM+0x133>
ffffffff80034c5d:	8b 45 f0             	mov    -0x10(%rbp),%eax
ffffffff80034c60:	e9 5e 01 00 00       	jmp    ffffffff80034dc3 <ZydisFormatterIntelPrintAddressMASM+0x265>
ffffffff80034c65:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff80034c69:	48 83 c0 10          	add    $0x10,%rax
ffffffff80034c6d:	48 8d 15 ec 5d 07 00 	lea    0x75dec(%rip),%rdx        # ffffffff800aaa60 <STR_ADDR_RELATIVE.lto_priv.2>
ffffffff80034c74:	48 89 d6             	mov    %rdx,%rsi
ffffffff80034c77:	48 89 c7             	mov    %rax,%rdi
ffffffff80034c7a:	e8 52 e1 ff ff       	call   ffffffff80032dd1 <ZydisStringAppendShort.lto_priv.2>
ffffffff80034c7f:	89 45 f4             	mov    %eax,-0xc(%rbp)
ffffffff80034c82:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff80034c85:	85 c0                	test   %eax,%eax
ffffffff80034c87:	79 08                	jns    ffffffff80034c91 <ZydisFormatterIntelPrintAddressMASM+0x133>
ffffffff80034c89:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff80034c8c:	e9 32 01 00 00       	jmp    ffffffff80034dc3 <ZydisFormatterIntelPrintAddressMASM+0x265>
ffffffff80034c91:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80034c95:	8b 40 0c             	mov    0xc(%rax),%eax
ffffffff80034c98:	85 c0                	test   %eax,%eax
ffffffff80034c9a:	74 0e                	je     ffffffff80034caa <ZydisFormatterIntelPrintAddressMASM+0x14c>
ffffffff80034c9c:	83 f8 01             	cmp    $0x1,%eax
ffffffff80034c9f:	0f 84 81 00 00 00    	je     ffffffff80034d26 <ZydisFormatterIntelPrintAddressMASM+0x1c8>
ffffffff80034ca5:	e9 0b 01 00 00       	jmp    ffffffff80034db5 <ZydisFormatterIntelPrintAddressMASM+0x257>
ffffffff80034caa:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80034cae:	8b 40 0c             	mov    0xc(%rax),%eax
ffffffff80034cb1:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff80034cb5:	89 c0                	mov    %eax,%eax
ffffffff80034cb7:	48 69 c0 b0 00 00 00 	imul   $0xb0,%rax,%rax
ffffffff80034cbe:	48 01 d0             	add    %rdx,%rax
ffffffff80034cc1:	48 05 a8 00 00 00    	add    $0xa8,%rax
ffffffff80034cc7:	48 8b 30             	mov    (%rax),%rsi
ffffffff80034cca:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80034cce:	8b 40 0c             	mov    0xc(%rax),%eax
ffffffff80034cd1:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff80034cd5:	89 c0                	mov    %eax,%eax
ffffffff80034cd7:	48 69 c0 b0 00 00 00 	imul   $0xb0,%rax,%rax
ffffffff80034cde:	48 01 d0             	add    %rdx,%rax
ffffffff80034ce1:	48 83 c0 50          	add    $0x50,%rax
ffffffff80034ce5:	48 8b 08             	mov    (%rax),%rcx
ffffffff80034ce8:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
ffffffff80034cec:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff80034cf0:	49 89 d2             	mov    %rdx,%r10
ffffffff80034cf3:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
ffffffff80034cf7:	48 8d 7a 10          	lea    0x10(%rdx),%rdi
ffffffff80034cfb:	49 89 f1             	mov    %rsi,%r9
ffffffff80034cfe:	49 89 c8             	mov    %rcx,%r8
ffffffff80034d01:	b9 01 00 00 00       	mov    $0x1,%ecx
ffffffff80034d06:	89 c2                	mov    %eax,%edx
ffffffff80034d08:	4c 89 d6             	mov    %r10,%rsi
ffffffff80034d0b:	e8 5e e3 ff ff       	call   ffffffff8003306e <ZydisStringAppendDecS.lto_priv.2>
ffffffff80034d10:	89 45 e8             	mov    %eax,-0x18(%rbp)
ffffffff80034d13:	8b 45 e8             	mov    -0x18(%rbp),%eax
ffffffff80034d16:	85 c0                	test   %eax,%eax
ffffffff80034d18:	0f 89 9e 00 00 00    	jns    ffffffff80034dbc <ZydisFormatterIntelPrintAddressMASM+0x25e>
ffffffff80034d1e:	8b 45 e8             	mov    -0x18(%rbp),%eax
ffffffff80034d21:	e9 9d 00 00 00       	jmp    ffffffff80034dc3 <ZydisFormatterIntelPrintAddressMASM+0x265>
ffffffff80034d26:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80034d2a:	8b 40 0c             	mov    0xc(%rax),%eax
ffffffff80034d2d:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff80034d31:	89 c0                	mov    %eax,%eax
ffffffff80034d33:	48 69 c0 b0 00 00 00 	imul   $0xb0,%rax,%rax
ffffffff80034d3a:	48 01 d0             	add    %rdx,%rax
ffffffff80034d3d:	48 05 a8 00 00 00    	add    $0xa8,%rax
ffffffff80034d43:	48 8b 30             	mov    (%rax),%rsi
ffffffff80034d46:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80034d4a:	8b 40 0c             	mov    0xc(%rax),%eax
ffffffff80034d4d:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff80034d51:	89 c0                	mov    %eax,%eax
ffffffff80034d53:	48 69 c0 b0 00 00 00 	imul   $0xb0,%rax,%rax
ffffffff80034d5a:	48 01 d0             	add    %rdx,%rax
ffffffff80034d5d:	48 83 c0 50          	add    $0x50,%rax
ffffffff80034d61:	48 8b 08             	mov    (%rax),%rcx
ffffffff80034d64:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80034d68:	0f b6 40 48          	movzbl 0x48(%rax),%eax
ffffffff80034d6c:	44 0f b6 c0          	movzbl %al,%r8d
ffffffff80034d70:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80034d74:	0f b6 40 49          	movzbl 0x49(%rax),%eax
ffffffff80034d78:	0f b6 d0             	movzbl %al,%edx
ffffffff80034d7b:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
ffffffff80034d7f:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
ffffffff80034d83:	49 89 fa             	mov    %rdi,%r10
ffffffff80034d86:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
ffffffff80034d8a:	48 83 c7 10          	add    $0x10,%rdi
ffffffff80034d8e:	56                   	push   %rsi
ffffffff80034d8f:	51                   	push   %rcx
ffffffff80034d90:	41 b9 01 00 00 00    	mov    $0x1,%r9d
ffffffff80034d96:	89 d1                	mov    %edx,%ecx
ffffffff80034d98:	89 c2                	mov    %eax,%edx
ffffffff80034d9a:	4c 89 d6             	mov    %r10,%rsi
ffffffff80034d9d:	e8 cb e3 ff ff       	call   ffffffff8003316d <ZydisStringAppendHexS.lto_priv.2>
ffffffff80034da2:	48 83 c4 10          	add    $0x10,%rsp
ffffffff80034da6:	89 45 ec             	mov    %eax,-0x14(%rbp)
ffffffff80034da9:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff80034dac:	85 c0                	test   %eax,%eax
ffffffff80034dae:	79 0c                	jns    ffffffff80034dbc <ZydisFormatterIntelPrintAddressMASM+0x25e>
ffffffff80034db0:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff80034db3:	eb 0e                	jmp    ffffffff80034dc3 <ZydisFormatterIntelPrintAddressMASM+0x265>
ffffffff80034db5:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff80034dba:	eb 07                	jmp    ffffffff80034dc3 <ZydisFormatterIntelPrintAddressMASM+0x265>
ffffffff80034dbc:	90                   	nop
ffffffff80034dbd:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff80034dc2:	90                   	nop
ffffffff80034dc3:	c9                   	leave  
ffffffff80034dc4:	c3                   	ret    

ffffffff80034dc5 <ZYAN_MEMSET.lto_priv.5>:
ffffffff80034dc5:	55                   	push   %rbp
ffffffff80034dc6:	48 89 e5             	mov    %rsp,%rbp
ffffffff80034dc9:	48 83 ec 28          	sub    $0x28,%rsp
ffffffff80034dcd:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff80034dd1:	89 75 e4             	mov    %esi,-0x1c(%rbp)
ffffffff80034dd4:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
ffffffff80034dd8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80034ddc:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff80034de0:	eb 11                	jmp    ffffffff80034df3 <ZYAN_MEMSET.lto_priv.5+0x2e>
ffffffff80034de2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80034de6:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffff80034dea:	48 89 55 f8          	mov    %rdx,-0x8(%rbp)
ffffffff80034dee:	8b 55 e4             	mov    -0x1c(%rbp),%edx
ffffffff80034df1:	88 10                	mov    %dl,(%rax)
ffffffff80034df3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80034df7:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
ffffffff80034dfb:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
ffffffff80034dff:	48 85 c0             	test   %rax,%rax
ffffffff80034e02:	75 de                	jne    ffffffff80034de2 <ZYAN_MEMSET.lto_priv.5+0x1d>
ffffffff80034e04:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80034e08:	c9                   	leave  
ffffffff80034e09:	c3                   	ret    

ffffffff80034e0a <ZydisCalcAbsoluteAddress>:
ffffffff80034e0a:	f3 0f 1e fa          	endbr64 
ffffffff80034e0e:	55                   	push   %rbp
ffffffff80034e0f:	48 89 e5             	mov    %rsp,%rbp
ffffffff80034e12:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff80034e16:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff80034e1a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff80034e1e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
ffffffff80034e22:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
ffffffff80034e26:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff80034e2b:	74 0e                	je     ffffffff80034e3b <ZydisCalcAbsoluteAddress+0x31>
ffffffff80034e2d:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
ffffffff80034e32:	74 07                	je     ffffffff80034e3b <ZydisCalcAbsoluteAddress+0x31>
ffffffff80034e34:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
ffffffff80034e39:	75 0a                	jne    ffffffff80034e45 <ZydisCalcAbsoluteAddress+0x3b>
ffffffff80034e3b:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff80034e40:	e9 e3 01 00 00       	jmp    ffffffff80035028 <ZydisCalcAbsoluteAddress+0x21e>
ffffffff80034e45:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80034e49:	8b 40 04             	mov    0x4(%rax),%eax
ffffffff80034e4c:	83 f8 02             	cmp    $0x2,%eax
ffffffff80034e4f:	74 0e                	je     ffffffff80034e5f <ZydisCalcAbsoluteAddress+0x55>
ffffffff80034e51:	83 f8 04             	cmp    $0x4,%eax
ffffffff80034e54:	0f 84 31 01 00 00    	je     ffffffff80034f8b <ZydisCalcAbsoluteAddress+0x181>
ffffffff80034e5a:	e9 c4 01 00 00       	jmp    ffffffff80035023 <ZydisCalcAbsoluteAddress+0x219>
ffffffff80034e5f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80034e63:	0f b6 40 40          	movzbl 0x40(%rax),%eax
ffffffff80034e67:	84 c0                	test   %al,%al
ffffffff80034e69:	75 0a                	jne    ffffffff80034e75 <ZydisCalcAbsoluteAddress+0x6b>
ffffffff80034e6b:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff80034e70:	e9 b3 01 00 00       	jmp    ffffffff80035028 <ZydisCalcAbsoluteAddress+0x21e>
ffffffff80034e75:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80034e79:	8b 40 30             	mov    0x30(%rax),%eax
ffffffff80034e7c:	3d c4 00 00 00       	cmp    $0xc4,%eax
ffffffff80034e81:	75 30                	jne    ffffffff80034eb3 <ZydisCalcAbsoluteAddress+0xa9>
ffffffff80034e83:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80034e87:	89 c2                	mov    %eax,%edx
ffffffff80034e89:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80034e8d:	0f b6 40 08          	movzbl 0x8(%rax),%eax
ffffffff80034e91:	0f b6 c0             	movzbl %al,%eax
ffffffff80034e94:	01 c2                	add    %eax,%edx
ffffffff80034e96:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80034e9a:	48 8b 40 48          	mov    0x48(%rax),%rax
ffffffff80034e9e:	01 d0                	add    %edx,%eax
ffffffff80034ea0:	89 c2                	mov    %eax,%edx
ffffffff80034ea2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80034ea6:	48 89 10             	mov    %rdx,(%rax)
ffffffff80034ea9:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff80034eae:	e9 75 01 00 00       	jmp    ffffffff80035028 <ZydisCalcAbsoluteAddress+0x21e>
ffffffff80034eb3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80034eb7:	8b 40 30             	mov    0x30(%rax),%eax
ffffffff80034eba:	3d c5 00 00 00       	cmp    $0xc5,%eax
ffffffff80034ebf:	75 2e                	jne    ffffffff80034eef <ZydisCalcAbsoluteAddress+0xe5>
ffffffff80034ec1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80034ec5:	0f b6 40 08          	movzbl 0x8(%rax),%eax
ffffffff80034ec9:	0f b6 c0             	movzbl %al,%eax
ffffffff80034ecc:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff80034ed0:	48 01 c2             	add    %rax,%rdx
ffffffff80034ed3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80034ed7:	48 8b 40 48          	mov    0x48(%rax),%rax
ffffffff80034edb:	48 01 c2             	add    %rax,%rdx
ffffffff80034ede:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80034ee2:	48 89 10             	mov    %rdx,(%rax)
ffffffff80034ee5:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff80034eea:	e9 39 01 00 00       	jmp    ffffffff80035028 <ZydisCalcAbsoluteAddress+0x21e>
ffffffff80034eef:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80034ef3:	8b 40 30             	mov    0x30(%rax),%eax
ffffffff80034ef6:	85 c0                	test   %eax,%eax
ffffffff80034ef8:	0f 85 21 01 00 00    	jne    ffffffff8003501f <ZydisCalcAbsoluteAddress+0x215>
ffffffff80034efe:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80034f02:	8b 40 34             	mov    0x34(%rax),%eax
ffffffff80034f05:	85 c0                	test   %eax,%eax
ffffffff80034f07:	0f 85 12 01 00 00    	jne    ffffffff8003501f <ZydisCalcAbsoluteAddress+0x215>
ffffffff80034f0d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80034f11:	0f b6 40 17          	movzbl 0x17(%rax),%eax
ffffffff80034f15:	0f b6 c0             	movzbl %al,%eax
ffffffff80034f18:	83 f8 40             	cmp    $0x40,%eax
ffffffff80034f1b:	74 48                	je     ffffffff80034f65 <ZydisCalcAbsoluteAddress+0x15b>
ffffffff80034f1d:	83 f8 40             	cmp    $0x40,%eax
ffffffff80034f20:	7f 5f                	jg     ffffffff80034f81 <ZydisCalcAbsoluteAddress+0x177>
ffffffff80034f22:	83 f8 10             	cmp    $0x10,%eax
ffffffff80034f25:	74 07                	je     ffffffff80034f2e <ZydisCalcAbsoluteAddress+0x124>
ffffffff80034f27:	83 f8 20             	cmp    $0x20,%eax
ffffffff80034f2a:	74 1e                	je     ffffffff80034f4a <ZydisCalcAbsoluteAddress+0x140>
ffffffff80034f2c:	eb 53                	jmp    ffffffff80034f81 <ZydisCalcAbsoluteAddress+0x177>
ffffffff80034f2e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80034f32:	48 8b 40 48          	mov    0x48(%rax),%rax
ffffffff80034f36:	0f b7 c0             	movzwl %ax,%eax
ffffffff80034f39:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff80034f3d:	48 89 02             	mov    %rax,(%rdx)
ffffffff80034f40:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff80034f45:	e9 de 00 00 00       	jmp    ffffffff80035028 <ZydisCalcAbsoluteAddress+0x21e>
ffffffff80034f4a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80034f4e:	48 8b 40 48          	mov    0x48(%rax),%rax
ffffffff80034f52:	89 c2                	mov    %eax,%edx
ffffffff80034f54:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80034f58:	48 89 10             	mov    %rdx,(%rax)
ffffffff80034f5b:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff80034f60:	e9 c3 00 00 00       	jmp    ffffffff80035028 <ZydisCalcAbsoluteAddress+0x21e>
ffffffff80034f65:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80034f69:	48 8b 40 48          	mov    0x48(%rax),%rax
ffffffff80034f6d:	48 89 c2             	mov    %rax,%rdx
ffffffff80034f70:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80034f74:	48 89 10             	mov    %rdx,(%rax)
ffffffff80034f77:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff80034f7c:	e9 a7 00 00 00       	jmp    ffffffff80035028 <ZydisCalcAbsoluteAddress+0x21e>
ffffffff80034f81:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff80034f86:	e9 9d 00 00 00       	jmp    ffffffff80035028 <ZydisCalcAbsoluteAddress+0x21e>
ffffffff80034f8b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80034f8f:	0f b6 40 58          	movzbl 0x58(%rax),%eax
ffffffff80034f93:	84 c0                	test   %al,%al
ffffffff80034f95:	0f 84 87 00 00 00    	je     ffffffff80035022 <ZydisCalcAbsoluteAddress+0x218>
ffffffff80034f9b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80034f9f:	0f b6 40 59          	movzbl 0x59(%rax),%eax
ffffffff80034fa3:	84 c0                	test   %al,%al
ffffffff80034fa5:	74 7b                	je     ffffffff80035022 <ZydisCalcAbsoluteAddress+0x218>
ffffffff80034fa7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80034fab:	0f b6 40 08          	movzbl 0x8(%rax),%eax
ffffffff80034faf:	0f b6 c0             	movzbl %al,%eax
ffffffff80034fb2:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff80034fb6:	48 01 c2             	add    %rax,%rdx
ffffffff80034fb9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80034fbd:	48 8b 40 60          	mov    0x60(%rax),%rax
ffffffff80034fc1:	48 01 d0             	add    %rdx,%rax
ffffffff80034fc4:	48 89 c2             	mov    %rax,%rdx
ffffffff80034fc7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80034fcb:	48 89 10             	mov    %rdx,(%rax)
ffffffff80034fce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80034fd2:	8b 00                	mov    (%rax),%eax
ffffffff80034fd4:	85 c0                	test   %eax,%eax
ffffffff80034fd6:	74 3c                	je     ffffffff80035014 <ZydisCalcAbsoluteAddress+0x20a>
ffffffff80034fd8:	83 e8 01             	sub    $0x1,%eax
ffffffff80034fdb:	83 f8 04             	cmp    $0x4,%eax
ffffffff80034fde:	77 2d                	ja     ffffffff8003500d <ZydisCalcAbsoluteAddress+0x203>
ffffffff80034fe0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80034fe4:	0f b6 40 16          	movzbl 0x16(%rax),%eax
ffffffff80034fe8:	3c 10                	cmp    $0x10,%al
ffffffff80034fea:	75 2b                	jne    ffffffff80035017 <ZydisCalcAbsoluteAddress+0x20d>
ffffffff80034fec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80034ff0:	8b 40 04             	mov    0x4(%rax),%eax
ffffffff80034ff3:	3d bb 06 00 00       	cmp    $0x6bb,%eax
ffffffff80034ff8:	74 1d                	je     ffffffff80035017 <ZydisCalcAbsoluteAddress+0x20d>
ffffffff80034ffa:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80034ffe:	48 8b 00             	mov    (%rax),%rax
ffffffff80035001:	0f b7 c0             	movzwl %ax,%eax
ffffffff80035004:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff80035008:	48 89 02             	mov    %rax,(%rdx)
ffffffff8003500b:	eb 0a                	jmp    ffffffff80035017 <ZydisCalcAbsoluteAddress+0x20d>
ffffffff8003500d:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff80035012:	eb 14                	jmp    ffffffff80035028 <ZydisCalcAbsoluteAddress+0x21e>
ffffffff80035014:	90                   	nop
ffffffff80035015:	eb 01                	jmp    ffffffff80035018 <ZydisCalcAbsoluteAddress+0x20e>
ffffffff80035017:	90                   	nop
ffffffff80035018:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff8003501d:	eb 09                	jmp    ffffffff80035028 <ZydisCalcAbsoluteAddress+0x21e>
ffffffff8003501f:	90                   	nop
ffffffff80035020:	eb 01                	jmp    ffffffff80035023 <ZydisCalcAbsoluteAddress+0x219>
ffffffff80035022:	90                   	nop
ffffffff80035023:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff80035028:	c9                   	leave  
ffffffff80035029:	c3                   	ret    

ffffffff8003502a <ZydisCalcAbsoluteAddressEx>:
ffffffff8003502a:	f3 0f 1e fa          	endbr64 
ffffffff8003502e:	55                   	push   %rbp
ffffffff8003502f:	48 89 e5             	mov    %rsp,%rbp
ffffffff80035032:	48 83 ec 38          	sub    $0x38,%rsp
ffffffff80035036:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff8003503a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
ffffffff8003503e:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
ffffffff80035042:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
ffffffff80035046:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
ffffffff8003504a:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
ffffffff8003504f:	74 15                	je     ffffffff80035066 <ZydisCalcAbsoluteAddressEx+0x3c>
ffffffff80035051:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
ffffffff80035056:	74 0e                	je     ffffffff80035066 <ZydisCalcAbsoluteAddressEx+0x3c>
ffffffff80035058:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
ffffffff8003505d:	74 07                	je     ffffffff80035066 <ZydisCalcAbsoluteAddressEx+0x3c>
ffffffff8003505f:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
ffffffff80035064:	75 0a                	jne    ffffffff80035070 <ZydisCalcAbsoluteAddressEx+0x46>
ffffffff80035066:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff8003506b:	e9 17 01 00 00       	jmp    ffffffff80035187 <ZydisCalcAbsoluteAddressEx+0x15d>
ffffffff80035070:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80035074:	8b 40 04             	mov    0x4(%rax),%eax
ffffffff80035077:	83 f8 02             	cmp    $0x2,%eax
ffffffff8003507a:	75 32                	jne    ffffffff800350ae <ZydisCalcAbsoluteAddressEx+0x84>
ffffffff8003507c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80035080:	8b 40 30             	mov    0x30(%rax),%eax
ffffffff80035083:	85 c0                	test   %eax,%eax
ffffffff80035085:	75 0b                	jne    ffffffff80035092 <ZydisCalcAbsoluteAddressEx+0x68>
ffffffff80035087:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8003508b:	8b 40 34             	mov    0x34(%rax),%eax
ffffffff8003508e:	85 c0                	test   %eax,%eax
ffffffff80035090:	74 1c                	je     ffffffff800350ae <ZydisCalcAbsoluteAddressEx+0x84>
ffffffff80035092:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80035096:	8b 40 30             	mov    0x30(%rax),%eax
ffffffff80035099:	3d c4 00 00 00       	cmp    $0xc4,%eax
ffffffff8003509e:	74 0e                	je     ffffffff800350ae <ZydisCalcAbsoluteAddressEx+0x84>
ffffffff800350a0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff800350a4:	8b 40 30             	mov    0x30(%rax),%eax
ffffffff800350a7:	3d c5 00 00 00       	cmp    $0xc5,%eax
ffffffff800350ac:	75 1d                	jne    ffffffff800350cb <ZydisCalcAbsoluteAddressEx+0xa1>
ffffffff800350ae:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
ffffffff800350b2:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff800350b6:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
ffffffff800350ba:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800350be:	48 89 c7             	mov    %rax,%rdi
ffffffff800350c1:	e8 44 fd ff ff       	call   ffffffff80034e0a <ZydisCalcAbsoluteAddress>
ffffffff800350c6:	e9 bc 00 00 00       	jmp    ffffffff80035187 <ZydisCalcAbsoluteAddressEx+0x15d>
ffffffff800350cb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff800350cf:	48 8b 40 48          	mov    0x48(%rax),%rax
ffffffff800350d3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff800350d7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff800350db:	8b 40 30             	mov    0x30(%rax),%eax
ffffffff800350de:	85 c0                	test   %eax,%eax
ffffffff800350e0:	74 15                	je     ffffffff800350f7 <ZydisCalcAbsoluteAddressEx+0xcd>
ffffffff800350e2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff800350e6:	8b 50 30             	mov    0x30(%rax),%edx
ffffffff800350e9:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff800350ed:	89 d2                	mov    %edx,%edx
ffffffff800350ef:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
ffffffff800350f3:	48 01 45 f8          	add    %rax,-0x8(%rbp)
ffffffff800350f7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff800350fb:	8b 40 34             	mov    0x34(%rax),%eax
ffffffff800350fe:	85 c0                	test   %eax,%eax
ffffffff80035100:	74 24                	je     ffffffff80035126 <ZydisCalcAbsoluteAddressEx+0xfc>
ffffffff80035102:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80035106:	8b 50 34             	mov    0x34(%rax),%edx
ffffffff80035109:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8003510d:	89 d2                	mov    %edx,%edx
ffffffff8003510f:	48 8b 14 d0          	mov    (%rax,%rdx,8),%rdx
ffffffff80035113:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80035117:	0f b6 40 38          	movzbl 0x38(%rax),%eax
ffffffff8003511b:	0f b6 c0             	movzbl %al,%eax
ffffffff8003511e:	48 0f af c2          	imul   %rdx,%rax
ffffffff80035122:	48 01 45 f8          	add    %rax,-0x8(%rbp)
ffffffff80035126:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8003512a:	0f b6 40 17          	movzbl 0x17(%rax),%eax
ffffffff8003512e:	0f b6 c0             	movzbl %al,%eax
ffffffff80035131:	83 f8 40             	cmp    $0x40,%eax
ffffffff80035134:	74 3a                	je     ffffffff80035170 <ZydisCalcAbsoluteAddressEx+0x146>
ffffffff80035136:	83 f8 40             	cmp    $0x40,%eax
ffffffff80035139:	7f 47                	jg     ffffffff80035182 <ZydisCalcAbsoluteAddressEx+0x158>
ffffffff8003513b:	83 f8 10             	cmp    $0x10,%eax
ffffffff8003513e:	74 07                	je     ffffffff80035147 <ZydisCalcAbsoluteAddressEx+0x11d>
ffffffff80035140:	83 f8 20             	cmp    $0x20,%eax
ffffffff80035143:	74 17                	je     ffffffff8003515c <ZydisCalcAbsoluteAddressEx+0x132>
ffffffff80035145:	eb 3b                	jmp    ffffffff80035182 <ZydisCalcAbsoluteAddressEx+0x158>
ffffffff80035147:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8003514b:	0f b7 c0             	movzwl %ax,%eax
ffffffff8003514e:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
ffffffff80035152:	48 89 02             	mov    %rax,(%rdx)
ffffffff80035155:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff8003515a:	eb 2b                	jmp    ffffffff80035187 <ZydisCalcAbsoluteAddressEx+0x15d>
ffffffff8003515c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80035160:	89 c2                	mov    %eax,%edx
ffffffff80035162:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80035166:	48 89 10             	mov    %rdx,(%rax)
ffffffff80035169:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff8003516e:	eb 17                	jmp    ffffffff80035187 <ZydisCalcAbsoluteAddressEx+0x15d>
ffffffff80035170:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80035174:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff80035178:	48 89 10             	mov    %rdx,(%rax)
ffffffff8003517b:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff80035180:	eb 05                	jmp    ffffffff80035187 <ZydisCalcAbsoluteAddressEx+0x15d>
ffffffff80035182:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff80035187:	c9                   	leave  
ffffffff80035188:	c3                   	ret    

ffffffff80035189 <ZydisGetInstructionSegments>:
ffffffff80035189:	f3 0f 1e fa          	endbr64 
ffffffff8003518d:	55                   	push   %rbp
ffffffff8003518e:	48 89 e5             	mov    %rsp,%rbp
ffffffff80035191:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff80035195:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff80035199:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
ffffffff8003519d:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
ffffffff800351a2:	74 07                	je     ffffffff800351ab <ZydisGetInstructionSegments+0x22>
ffffffff800351a4:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
ffffffff800351a9:	75 0a                	jne    ffffffff800351b5 <ZydisGetInstructionSegments+0x2c>
ffffffff800351ab:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff800351b0:	e9 80 05 00 00       	jmp    ffffffff80035735 <ZydisGetInstructionSegments+0x5ac>
ffffffff800351b5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff800351b9:	ba 4c 00 00 00       	mov    $0x4c,%edx
ffffffff800351be:	be 00 00 00 00       	mov    $0x0,%esi
ffffffff800351c3:	48 89 c7             	mov    %rax,%rdi
ffffffff800351c6:	e8 fa fb ff ff       	call   ffffffff80034dc5 <ZYAN_MEMSET.lto_priv.5>
ffffffff800351cb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800351cf:	0f b6 40 70          	movzbl 0x70(%rax),%eax
ffffffff800351d3:	84 c0                	test   %al,%al
ffffffff800351d5:	0f 84 d8 00 00 00    	je     ffffffff800352b3 <ZydisGetInstructionSegments+0x12a>
ffffffff800351db:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800351df:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff800351e3:	48 c1 e8 02          	shr    $0x2,%rax
ffffffff800351e7:	83 e0 01             	and    $0x1,%eax
ffffffff800351ea:	88 45 f8             	mov    %al,-0x8(%rbp)
ffffffff800351ed:	80 7d f8 00          	cmpb   $0x0,-0x8(%rbp)
ffffffff800351f1:	74 0c                	je     ffffffff800351ff <ZydisGetInstructionSegments+0x76>
ffffffff800351f3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800351f7:	0f b6 40 70          	movzbl 0x70(%rax),%eax
ffffffff800351fb:	3c 01                	cmp    $0x1,%al
ffffffff800351fd:	76 58                	jbe    ffffffff80035257 <ZydisGetInstructionSegments+0xce>
ffffffff800351ff:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80035203:	0f b6 00             	movzbl (%rax),%eax
ffffffff80035206:	0f b6 c0             	movzbl %al,%eax
ffffffff80035209:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff8003520d:	48 98                	cltq   
ffffffff8003520f:	c7 44 c2 04 01 00 00 	movl   $0x1,0x4(%rdx,%rax,8)
ffffffff80035216:	00 
ffffffff80035217:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8003521b:	0f b6 00             	movzbl (%rax),%eax
ffffffff8003521e:	0f b6 c0             	movzbl %al,%eax
ffffffff80035221:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff80035225:	48 98                	cltq   
ffffffff80035227:	c6 44 c2 08 00       	movb   $0x0,0x8(%rdx,%rax,8)
ffffffff8003522c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80035230:	0f b6 50 70          	movzbl 0x70(%rax),%edx
ffffffff80035234:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80035238:	0f b6 00             	movzbl (%rax),%eax
ffffffff8003523b:	8d 48 01             	lea    0x1(%rax),%ecx
ffffffff8003523e:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
ffffffff80035242:	88 0e                	mov    %cl,(%rsi)
ffffffff80035244:	0f b6 f0             	movzbl %al,%esi
ffffffff80035247:	89 d0                	mov    %edx,%eax
ffffffff80035249:	2a 45 f8             	sub    -0x8(%rbp),%al
ffffffff8003524c:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
ffffffff80035250:	48 63 d6             	movslq %esi,%rdx
ffffffff80035253:	88 44 d1 09          	mov    %al,0x9(%rcx,%rdx,8)
ffffffff80035257:	80 7d f8 00          	cmpb   $0x0,-0x8(%rbp)
ffffffff8003525b:	74 56                	je     ffffffff800352b3 <ZydisGetInstructionSegments+0x12a>
ffffffff8003525d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80035261:	0f b6 00             	movzbl (%rax),%eax
ffffffff80035264:	0f b6 c0             	movzbl %al,%eax
ffffffff80035267:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff8003526b:	48 98                	cltq   
ffffffff8003526d:	c7 44 c2 04 02 00 00 	movl   $0x2,0x4(%rdx,%rax,8)
ffffffff80035274:	00 
ffffffff80035275:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80035279:	0f b6 40 70          	movzbl 0x70(%rax),%eax
ffffffff8003527d:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff80035281:	0f b6 12             	movzbl (%rdx),%edx
ffffffff80035284:	0f b6 d2             	movzbl %dl,%edx
ffffffff80035287:	2a 45 f8             	sub    -0x8(%rbp),%al
ffffffff8003528a:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
ffffffff8003528e:	48 63 d2             	movslq %edx,%rdx
ffffffff80035291:	88 44 d1 08          	mov    %al,0x8(%rcx,%rdx,8)
ffffffff80035295:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80035299:	0f b6 00             	movzbl (%rax),%eax
ffffffff8003529c:	8d 50 01             	lea    0x1(%rax),%edx
ffffffff8003529f:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
ffffffff800352a3:	88 11                	mov    %dl,(%rcx)
ffffffff800352a5:	0f b6 c0             	movzbl %al,%eax
ffffffff800352a8:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff800352ac:	48 98                	cltq   
ffffffff800352ae:	c6 44 c2 09 01       	movb   $0x1,0x9(%rdx,%rax,8)
ffffffff800352b3:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
ffffffff800352ba:	c6 45 fb 00          	movb   $0x0,-0x5(%rbp)
ffffffff800352be:	c6 45 fa 00          	movb   $0x0,-0x6(%rbp)
ffffffff800352c2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800352c6:	8b 40 0c             	mov    0xc(%rax),%eax
ffffffff800352c9:	83 f8 05             	cmp    $0x5,%eax
ffffffff800352cc:	74 7e                	je     ffffffff8003534c <ZydisGetInstructionSegments+0x1c3>
ffffffff800352ce:	83 f8 05             	cmp    $0x5,%eax
ffffffff800352d1:	0f 87 90 00 00 00    	ja     ffffffff80035367 <ZydisGetInstructionSegments+0x1de>
ffffffff800352d7:	83 f8 04             	cmp    $0x4,%eax
ffffffff800352da:	74 55                	je     ffffffff80035331 <ZydisGetInstructionSegments+0x1a8>
ffffffff800352dc:	83 f8 04             	cmp    $0x4,%eax
ffffffff800352df:	0f 87 82 00 00 00    	ja     ffffffff80035367 <ZydisGetInstructionSegments+0x1de>
ffffffff800352e5:	83 f8 02             	cmp    $0x2,%eax
ffffffff800352e8:	74 07                	je     ffffffff800352f1 <ZydisGetInstructionSegments+0x168>
ffffffff800352ea:	83 f8 03             	cmp    $0x3,%eax
ffffffff800352ed:	74 1d                	je     ffffffff8003530c <ZydisGetInstructionSegments+0x183>
ffffffff800352ef:	eb 76                	jmp    ffffffff80035367 <ZydisGetInstructionSegments+0x1de>
ffffffff800352f1:	c7 45 fc 03 00 00 00 	movl   $0x3,-0x4(%rbp)
ffffffff800352f8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800352fc:	0f b6 80 f9 00 00 00 	movzbl 0xf9(%rax),%eax
ffffffff80035303:	88 45 fb             	mov    %al,-0x5(%rbp)
ffffffff80035306:	c6 45 fa 03          	movb   $0x3,-0x6(%rbp)
ffffffff8003530a:	eb 5c                	jmp    ffffffff80035368 <ZydisGetInstructionSegments+0x1df>
ffffffff8003530c:	c7 45 fc 04 00 00 00 	movl   $0x4,-0x4(%rbp)
ffffffff80035313:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80035317:	0f b6 80 02 01 00 00 	movzbl 0x102(%rax),%eax
ffffffff8003531e:	88 45 fb             	mov    %al,-0x5(%rbp)
ffffffff80035321:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80035325:	0f b6 80 03 01 00 00 	movzbl 0x103(%rax),%eax
ffffffff8003532c:	88 45 fa             	mov    %al,-0x6(%rbp)
ffffffff8003532f:	eb 37                	jmp    ffffffff80035368 <ZydisGetInstructionSegments+0x1df>
ffffffff80035331:	c7 45 fc 05 00 00 00 	movl   $0x5,-0x4(%rbp)
ffffffff80035338:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8003533c:	0f b6 80 12 01 00 00 	movzbl 0x112(%rax),%eax
ffffffff80035343:	88 45 fb             	mov    %al,-0x5(%rbp)
ffffffff80035346:	c6 45 fa 04          	movb   $0x4,-0x6(%rbp)
ffffffff8003534a:	eb 1c                	jmp    ffffffff80035368 <ZydisGetInstructionSegments+0x1df>
ffffffff8003534c:	c7 45 fc 06 00 00 00 	movl   $0x6,-0x4(%rbp)
ffffffff80035353:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80035357:	0f b6 80 1f 01 00 00 	movzbl 0x11f(%rax),%eax
ffffffff8003535e:	88 45 fb             	mov    %al,-0x5(%rbp)
ffffffff80035361:	c6 45 fa 04          	movb   $0x4,-0x6(%rbp)
ffffffff80035365:	eb 01                	jmp    ffffffff80035368 <ZydisGetInstructionSegments+0x1df>
ffffffff80035367:	90                   	nop
ffffffff80035368:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
ffffffff8003536c:	74 52                	je     ffffffff800353c0 <ZydisGetInstructionSegments+0x237>
ffffffff8003536e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80035372:	0f b6 00             	movzbl (%rax),%eax
ffffffff80035375:	0f b6 c0             	movzbl %al,%eax
ffffffff80035378:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff8003537c:	48 98                	cltq   
ffffffff8003537e:	8b 4d fc             	mov    -0x4(%rbp),%ecx
ffffffff80035381:	89 4c c2 04          	mov    %ecx,0x4(%rdx,%rax,8)
ffffffff80035385:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80035389:	0f b6 00             	movzbl (%rax),%eax
ffffffff8003538c:	0f b6 c0             	movzbl %al,%eax
ffffffff8003538f:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
ffffffff80035393:	48 63 d0             	movslq %eax,%rdx
ffffffff80035396:	0f b6 45 fb          	movzbl -0x5(%rbp),%eax
ffffffff8003539a:	88 44 d1 08          	mov    %al,0x8(%rcx,%rdx,8)
ffffffff8003539e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff800353a2:	0f b6 00             	movzbl (%rax),%eax
ffffffff800353a5:	8d 50 01             	lea    0x1(%rax),%edx
ffffffff800353a8:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
ffffffff800353ac:	88 11                	mov    %dl,(%rcx)
ffffffff800353ae:	0f b6 c0             	movzbl %al,%eax
ffffffff800353b1:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
ffffffff800353b5:	48 63 d0             	movslq %eax,%rdx
ffffffff800353b8:	0f b6 45 fa          	movzbl -0x6(%rbp),%eax
ffffffff800353bc:	88 44 d1 09          	mov    %al,0x9(%rcx,%rdx,8)
ffffffff800353c0:	c6 45 fa 01          	movb   $0x1,-0x6(%rbp)
ffffffff800353c4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800353c8:	8b 40 0c             	mov    0xc(%rax),%eax
ffffffff800353cb:	85 c0                	test   %eax,%eax
ffffffff800353cd:	74 0c                	je     ffffffff800353db <ZydisGetInstructionSegments+0x252>
ffffffff800353cf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800353d3:	8b 40 0c             	mov    0xc(%rax),%eax
ffffffff800353d6:	83 f8 01             	cmp    $0x1,%eax
ffffffff800353d9:	75 33                	jne    ffffffff8003540e <ZydisGetInstructionSegments+0x285>
ffffffff800353db:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800353df:	8b 40 10             	mov    0x10(%rax),%eax
ffffffff800353e2:	83 f8 08             	cmp    $0x8,%eax
ffffffff800353e5:	74 18                	je     ffffffff800353ff <ZydisGetInstructionSegments+0x276>
ffffffff800353e7:	83 f8 08             	cmp    $0x8,%eax
ffffffff800353ea:	77 1f                	ja     ffffffff8003540b <ZydisGetInstructionSegments+0x282>
ffffffff800353ec:	83 f8 03             	cmp    $0x3,%eax
ffffffff800353ef:	77 1a                	ja     ffffffff8003540b <ZydisGetInstructionSegments+0x282>
ffffffff800353f1:	83 f8 02             	cmp    $0x2,%eax
ffffffff800353f4:	73 0f                	jae    ffffffff80035405 <ZydisGetInstructionSegments+0x27c>
ffffffff800353f6:	85 c0                	test   %eax,%eax
ffffffff800353f8:	74 13                	je     ffffffff8003540d <ZydisGetInstructionSegments+0x284>
ffffffff800353fa:	83 f8 01             	cmp    $0x1,%eax
ffffffff800353fd:	75 0c                	jne    ffffffff8003540b <ZydisGetInstructionSegments+0x282>
ffffffff800353ff:	c6 45 fa 02          	movb   $0x2,-0x6(%rbp)
ffffffff80035403:	eb 09                	jmp    ffffffff8003540e <ZydisGetInstructionSegments+0x285>
ffffffff80035405:	c6 45 fa 03          	movb   $0x3,-0x6(%rbp)
ffffffff80035409:	eb 03                	jmp    ffffffff8003540e <ZydisGetInstructionSegments+0x285>
ffffffff8003540b:	eb fe                	jmp    ffffffff8003540b <ZydisGetInstructionSegments+0x282>
ffffffff8003540d:	90                   	nop
ffffffff8003540e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80035412:	0f b6 00             	movzbl (%rax),%eax
ffffffff80035415:	0f b6 c0             	movzbl %al,%eax
ffffffff80035418:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff8003541c:	48 98                	cltq   
ffffffff8003541e:	c7 44 c2 04 07 00 00 	movl   $0x7,0x4(%rdx,%rax,8)
ffffffff80035425:	00 
ffffffff80035426:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8003542a:	0f b6 00             	movzbl (%rax),%eax
ffffffff8003542d:	84 c0                	test   %al,%al
ffffffff8003542f:	74 4a                	je     ffffffff8003547b <ZydisGetInstructionSegments+0x2f2>
ffffffff80035431:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80035435:	0f b6 00             	movzbl (%rax),%eax
ffffffff80035438:	0f b6 c0             	movzbl %al,%eax
ffffffff8003543b:	83 e8 01             	sub    $0x1,%eax
ffffffff8003543e:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff80035442:	48 98                	cltq   
ffffffff80035444:	0f b6 74 c2 08       	movzbl 0x8(%rdx,%rax,8),%esi
ffffffff80035449:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8003544d:	0f b6 00             	movzbl (%rax),%eax
ffffffff80035450:	0f b6 c0             	movzbl %al,%eax
ffffffff80035453:	83 e8 01             	sub    $0x1,%eax
ffffffff80035456:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff8003545a:	48 98                	cltq   
ffffffff8003545c:	0f b6 4c c2 09       	movzbl 0x9(%rdx,%rax,8),%ecx
ffffffff80035461:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80035465:	0f b6 00             	movzbl (%rax),%eax
ffffffff80035468:	0f b6 d0             	movzbl %al,%edx
ffffffff8003546b:	8d 04 0e             	lea    (%rsi,%rcx,1),%eax
ffffffff8003546e:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
ffffffff80035472:	48 63 d2             	movslq %edx,%rdx
ffffffff80035475:	88 44 d1 08          	mov    %al,0x8(%rcx,%rdx,8)
ffffffff80035479:	eb 15                	jmp    ffffffff80035490 <ZydisGetInstructionSegments+0x307>
ffffffff8003547b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8003547f:	0f b6 00             	movzbl (%rax),%eax
ffffffff80035482:	0f b6 c0             	movzbl %al,%eax
ffffffff80035485:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff80035489:	48 98                	cltq   
ffffffff8003548b:	c6 44 c2 08 00       	movb   $0x0,0x8(%rdx,%rax,8)
ffffffff80035490:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80035494:	0f b6 00             	movzbl (%rax),%eax
ffffffff80035497:	8d 50 01             	lea    0x1(%rax),%edx
ffffffff8003549a:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
ffffffff8003549e:	88 11                	mov    %dl,(%rcx)
ffffffff800354a0:	0f b6 c0             	movzbl %al,%eax
ffffffff800354a3:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
ffffffff800354a7:	48 63 d0             	movslq %eax,%rdx
ffffffff800354aa:	0f b6 45 fa          	movzbl -0x6(%rbp),%eax
ffffffff800354ae:	88 44 d1 09          	mov    %al,0x9(%rcx,%rdx,8)
ffffffff800354b2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800354b6:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff800354ba:	83 e0 01             	and    $0x1,%eax
ffffffff800354bd:	48 85 c0             	test   %rax,%rax
ffffffff800354c0:	74 56                	je     ffffffff80035518 <ZydisGetInstructionSegments+0x38f>
ffffffff800354c2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff800354c6:	0f b6 00             	movzbl (%rax),%eax
ffffffff800354c9:	0f b6 c0             	movzbl %al,%eax
ffffffff800354cc:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff800354d0:	48 98                	cltq   
ffffffff800354d2:	c7 44 c2 04 08 00 00 	movl   $0x8,0x4(%rdx,%rax,8)
ffffffff800354d9:	00 
ffffffff800354da:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff800354de:	0f b6 00             	movzbl (%rax),%eax
ffffffff800354e1:	0f b6 d0             	movzbl %al,%edx
ffffffff800354e4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800354e8:	0f b6 80 23 01 00 00 	movzbl 0x123(%rax),%eax
ffffffff800354ef:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
ffffffff800354f3:	48 63 d2             	movslq %edx,%rdx
ffffffff800354f6:	88 44 d1 08          	mov    %al,0x8(%rcx,%rdx,8)
ffffffff800354fa:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff800354fe:	0f b6 00             	movzbl (%rax),%eax
ffffffff80035501:	8d 50 01             	lea    0x1(%rax),%edx
ffffffff80035504:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
ffffffff80035508:	88 11                	mov    %dl,(%rcx)
ffffffff8003550a:	0f b6 c0             	movzbl %al,%eax
ffffffff8003550d:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff80035511:	48 98                	cltq   
ffffffff80035513:	c6 44 c2 09 01       	movb   $0x1,0x9(%rdx,%rax,8)
ffffffff80035518:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8003551c:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff80035520:	83 e0 02             	and    $0x2,%eax
ffffffff80035523:	48 85 c0             	test   %rax,%rax
ffffffff80035526:	74 56                	je     ffffffff8003557e <ZydisGetInstructionSegments+0x3f5>
ffffffff80035528:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8003552c:	0f b6 00             	movzbl (%rax),%eax
ffffffff8003552f:	0f b6 c0             	movzbl %al,%eax
ffffffff80035532:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff80035536:	48 98                	cltq   
ffffffff80035538:	c7 44 c2 04 09 00 00 	movl   $0x9,0x4(%rdx,%rax,8)
ffffffff8003553f:	00 
ffffffff80035540:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80035544:	0f b6 00             	movzbl (%rax),%eax
ffffffff80035547:	0f b6 d0             	movzbl %al,%edx
ffffffff8003554a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8003554e:	0f b6 80 27 01 00 00 	movzbl 0x127(%rax),%eax
ffffffff80035555:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
ffffffff80035559:	48 63 d2             	movslq %edx,%rdx
ffffffff8003555c:	88 44 d1 08          	mov    %al,0x8(%rcx,%rdx,8)
ffffffff80035560:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80035564:	0f b6 00             	movzbl (%rax),%eax
ffffffff80035567:	8d 50 01             	lea    0x1(%rax),%edx
ffffffff8003556a:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
ffffffff8003556e:	88 11                	mov    %dl,(%rcx)
ffffffff80035570:	0f b6 c0             	movzbl %al,%eax
ffffffff80035573:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff80035577:	48 98                	cltq   
ffffffff80035579:	c6 44 c2 09 01       	movb   $0x1,0x9(%rdx,%rax,8)
ffffffff8003557e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80035582:	0f b6 80 30 01 00 00 	movzbl 0x130(%rax),%eax
ffffffff80035589:	84 c0                	test   %al,%al
ffffffff8003558b:	74 66                	je     ffffffff800355f3 <ZydisGetInstructionSegments+0x46a>
ffffffff8003558d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80035591:	0f b6 00             	movzbl (%rax),%eax
ffffffff80035594:	0f b6 c0             	movzbl %al,%eax
ffffffff80035597:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff8003559b:	48 98                	cltq   
ffffffff8003559d:	c7 44 c2 04 0a 00 00 	movl   $0xa,0x4(%rdx,%rax,8)
ffffffff800355a4:	00 
ffffffff800355a5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff800355a9:	0f b6 00             	movzbl (%rax),%eax
ffffffff800355ac:	0f b6 d0             	movzbl %al,%edx
ffffffff800355af:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800355b3:	0f b6 80 31 01 00 00 	movzbl 0x131(%rax),%eax
ffffffff800355ba:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
ffffffff800355be:	48 63 d2             	movslq %edx,%rdx
ffffffff800355c1:	88 44 d1 08          	mov    %al,0x8(%rcx,%rdx,8)
ffffffff800355c5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800355c9:	0f b6 88 30 01 00 00 	movzbl 0x130(%rax),%ecx
ffffffff800355d0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff800355d4:	0f b6 00             	movzbl (%rax),%eax
ffffffff800355d7:	8d 50 01             	lea    0x1(%rax),%edx
ffffffff800355da:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
ffffffff800355de:	88 16                	mov    %dl,(%rsi)
ffffffff800355e0:	0f b6 d0             	movzbl %al,%edx
ffffffff800355e3:	89 c8                	mov    %ecx,%eax
ffffffff800355e5:	c0 e8 03             	shr    $0x3,%al
ffffffff800355e8:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
ffffffff800355ec:	48 63 d2             	movslq %edx,%rdx
ffffffff800355ef:	88 44 d1 09          	mov    %al,0x9(%rcx,%rdx,8)
ffffffff800355f3:	c6 45 f9 00          	movb   $0x0,-0x7(%rbp)
ffffffff800355f7:	e9 c8 00 00 00       	jmp    ffffffff800356c4 <ZydisGetInstructionSegments+0x53b>
ffffffff800355fc:	0f b6 45 f9          	movzbl -0x7(%rbp),%eax
ffffffff80035600:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
ffffffff80035604:	48 63 d0             	movslq %eax,%rdx
ffffffff80035607:	48 89 d0             	mov    %rdx,%rax
ffffffff8003560a:	48 01 c0             	add    %rax,%rax
ffffffff8003560d:	48 01 d0             	add    %rdx,%rax
ffffffff80035610:	48 c1 e0 03          	shl    $0x3,%rax
ffffffff80035614:	48 01 c8             	add    %rcx,%rax
ffffffff80035617:	48 05 48 01 00 00    	add    $0x148,%rax
ffffffff8003561d:	0f b6 00             	movzbl (%rax),%eax
ffffffff80035620:	84 c0                	test   %al,%al
ffffffff80035622:	0f 84 98 00 00 00    	je     ffffffff800356c0 <ZydisGetInstructionSegments+0x537>
ffffffff80035628:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8003562c:	0f b6 00             	movzbl (%rax),%eax
ffffffff8003562f:	0f b6 c0             	movzbl %al,%eax
ffffffff80035632:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff80035636:	48 98                	cltq   
ffffffff80035638:	c7 44 c2 04 0b 00 00 	movl   $0xb,0x4(%rdx,%rax,8)
ffffffff8003563f:	00 
ffffffff80035640:	0f b6 55 f9          	movzbl -0x7(%rbp),%edx
ffffffff80035644:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80035648:	0f b6 00             	movzbl (%rax),%eax
ffffffff8003564b:	0f b6 f0             	movzbl %al,%esi
ffffffff8003564e:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
ffffffff80035652:	48 63 d2             	movslq %edx,%rdx
ffffffff80035655:	48 89 d0             	mov    %rdx,%rax
ffffffff80035658:	48 01 c0             	add    %rax,%rax
ffffffff8003565b:	48 01 d0             	add    %rdx,%rax
ffffffff8003565e:	48 c1 e0 03          	shl    $0x3,%rax
ffffffff80035662:	48 01 c8             	add    %rcx,%rax
ffffffff80035665:	48 05 49 01 00 00    	add    $0x149,%rax
ffffffff8003566b:	0f b6 00             	movzbl (%rax),%eax
ffffffff8003566e:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
ffffffff80035672:	48 63 d6             	movslq %esi,%rdx
ffffffff80035675:	88 44 d1 08          	mov    %al,0x8(%rcx,%rdx,8)
ffffffff80035679:	0f b6 45 f9          	movzbl -0x7(%rbp),%eax
ffffffff8003567d:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
ffffffff80035681:	48 63 d0             	movslq %eax,%rdx
ffffffff80035684:	48 89 d0             	mov    %rdx,%rax
ffffffff80035687:	48 01 c0             	add    %rax,%rax
ffffffff8003568a:	48 01 d0             	add    %rdx,%rax
ffffffff8003568d:	48 c1 e0 03          	shl    $0x3,%rax
ffffffff80035691:	48 01 c8             	add    %rcx,%rax
ffffffff80035694:	48 05 48 01 00 00    	add    $0x148,%rax
ffffffff8003569a:	0f b6 08             	movzbl (%rax),%ecx
ffffffff8003569d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff800356a1:	0f b6 00             	movzbl (%rax),%eax
ffffffff800356a4:	8d 50 01             	lea    0x1(%rax),%edx
ffffffff800356a7:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
ffffffff800356ab:	88 16                	mov    %dl,(%rsi)
ffffffff800356ad:	0f b6 d0             	movzbl %al,%edx
ffffffff800356b0:	89 c8                	mov    %ecx,%eax
ffffffff800356b2:	c0 e8 03             	shr    $0x3,%al
ffffffff800356b5:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
ffffffff800356b9:	48 63 d2             	movslq %edx,%rdx
ffffffff800356bc:	88 44 d1 09          	mov    %al,0x9(%rcx,%rdx,8)
ffffffff800356c0:	80 45 f9 01          	addb   $0x1,-0x7(%rbp)
ffffffff800356c4:	80 7d f9 01          	cmpb   $0x1,-0x7(%rbp)
ffffffff800356c8:	0f 86 2e ff ff ff    	jbe    ffffffff800355fc <ZydisGetInstructionSegments+0x473>
ffffffff800356ce:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800356d2:	8b 40 0c             	mov    0xc(%rax),%eax
ffffffff800356d5:	83 f8 01             	cmp    $0x1,%eax
ffffffff800356d8:	75 56                	jne    ffffffff80035730 <ZydisGetInstructionSegments+0x5a7>
ffffffff800356da:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff800356de:	0f b6 00             	movzbl (%rax),%eax
ffffffff800356e1:	0f b6 c0             	movzbl %al,%eax
ffffffff800356e4:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff800356e8:	48 98                	cltq   
ffffffff800356ea:	c7 44 c2 04 07 00 00 	movl   $0x7,0x4(%rdx,%rax,8)
ffffffff800356f1:	00 
ffffffff800356f2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800356f6:	0f b6 40 08          	movzbl 0x8(%rax),%eax
ffffffff800356fa:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff800356fe:	0f b6 12             	movzbl (%rdx),%edx
ffffffff80035701:	0f b6 d2             	movzbl %dl,%edx
ffffffff80035704:	83 e8 01             	sub    $0x1,%eax
ffffffff80035707:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
ffffffff8003570b:	48 63 d2             	movslq %edx,%rdx
ffffffff8003570e:	88 44 d1 08          	mov    %al,0x8(%rcx,%rdx,8)
ffffffff80035712:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80035716:	0f b6 00             	movzbl (%rax),%eax
ffffffff80035719:	8d 50 01             	lea    0x1(%rax),%edx
ffffffff8003571c:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
ffffffff80035720:	88 11                	mov    %dl,(%rcx)
ffffffff80035722:	0f b6 c0             	movzbl %al,%eax
ffffffff80035725:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff80035729:	48 98                	cltq   
ffffffff8003572b:	c6 44 c2 09 01       	movb   $0x1,0x9(%rdx,%rax,8)
ffffffff80035730:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff80035735:	c9                   	leave  
ffffffff80035736:	c3                   	ret    

ffffffff80035737 <ZydisGetInstructionDefinition>:
ffffffff80035737:	f3 0f 1e fa          	endbr64 
ffffffff8003573b:	55                   	push   %rbp
ffffffff8003573c:	48 89 e5             	mov    %rsp,%rbp
ffffffff8003573f:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff80035743:	89 7d fc             	mov    %edi,-0x4(%rbp)
ffffffff80035746:	89 f0                	mov    %esi,%eax
ffffffff80035748:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
ffffffff8003574c:	66 89 45 f8          	mov    %ax,-0x8(%rbp)
ffffffff80035750:	83 7d fc 05          	cmpl   $0x5,-0x4(%rbp)
ffffffff80035754:	0f 87 f9 00 00 00    	ja     ffffffff80035853 <ZydisGetInstructionDefinition+0x11c>
ffffffff8003575a:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8003575d:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
ffffffff80035764:	00 
ffffffff80035765:	48 8d 05 bc 04 04 00 	lea    0x404bc(%rip),%rax        # ffffffff80075c28 <ACCESSED_FLAGS+0xb68>
ffffffff8003576c:	8b 04 02             	mov    (%rdx,%rax,1),%eax
ffffffff8003576f:	48 98                	cltq   
ffffffff80035771:	48 8d 15 b0 04 04 00 	lea    0x404b0(%rip),%rdx        # ffffffff80075c28 <ACCESSED_FLAGS+0xb68>
ffffffff80035778:	48 01 d0             	add    %rdx,%rax
ffffffff8003577b:	3e ff e0             	notrack jmp *%rax
ffffffff8003577e:	0f b7 45 f8          	movzwl -0x8(%rbp),%eax
ffffffff80035782:	48 98                	cltq   
ffffffff80035784:	48 6b c0 0e          	imul   $0xe,%rax,%rax
ffffffff80035788:	48 8d 15 51 b7 00 00 	lea    0xb751(%rip),%rdx        # ffffffff80040ee0 <ISTR_DEFINITIONS_LEGACY>
ffffffff8003578f:	48 01 c2             	add    %rax,%rdx
ffffffff80035792:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80035796:	48 89 10             	mov    %rdx,(%rax)
ffffffff80035799:	e9 b7 00 00 00       	jmp    ffffffff80035855 <ZydisGetInstructionDefinition+0x11e>
ffffffff8003579e:	0f b7 45 f8          	movzwl -0x8(%rbp),%eax
ffffffff800357a2:	48 63 d0             	movslq %eax,%rdx
ffffffff800357a5:	48 89 d0             	mov    %rdx,%rax
ffffffff800357a8:	48 01 c0             	add    %rax,%rax
ffffffff800357ab:	48 01 d0             	add    %rdx,%rax
ffffffff800357ae:	48 c1 e0 02          	shl    $0x2,%rax
ffffffff800357b2:	48 8d 15 07 21 01 00 	lea    0x12107(%rip),%rdx        # ffffffff800478c0 <ISTR_DEFINITIONS_3DNOW>
ffffffff800357b9:	48 01 c2             	add    %rax,%rdx
ffffffff800357bc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff800357c0:	48 89 10             	mov    %rdx,(%rax)
ffffffff800357c3:	e9 8d 00 00 00       	jmp    ffffffff80035855 <ZydisGetInstructionDefinition+0x11e>
ffffffff800357c8:	0f b7 45 f8          	movzwl -0x8(%rbp),%eax
ffffffff800357cc:	48 63 d0             	movslq %eax,%rdx
ffffffff800357cf:	48 89 d0             	mov    %rdx,%rax
ffffffff800357d2:	48 01 c0             	add    %rax,%rax
ffffffff800357d5:	48 01 d0             	add    %rdx,%rax
ffffffff800357d8:	48 c1 e0 02          	shl    $0x2,%rax
ffffffff800357dc:	48 01 d0             	add    %rdx,%rax
ffffffff800357df:	48 8d 15 1a 23 01 00 	lea    0x1231a(%rip),%rdx        # ffffffff80047b00 <ISTR_DEFINITIONS_XOP>
ffffffff800357e6:	48 01 c2             	add    %rax,%rdx
ffffffff800357e9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff800357ed:	48 89 10             	mov    %rdx,(%rax)
ffffffff800357f0:	eb 63                	jmp    ffffffff80035855 <ZydisGetInstructionDefinition+0x11e>
ffffffff800357f2:	0f b7 45 f8          	movzwl -0x8(%rbp),%eax
ffffffff800357f6:	48 98                	cltq   
ffffffff800357f8:	48 6b c0 0e          	imul   $0xe,%rax,%rax
ffffffff800357fc:	48 8d 15 fd 2b 01 00 	lea    0x12bfd(%rip),%rdx        # ffffffff80048400 <ISTR_DEFINITIONS_VEX>
ffffffff80035803:	48 01 c2             	add    %rax,%rdx
ffffffff80035806:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8003580a:	48 89 10             	mov    %rdx,(%rax)
ffffffff8003580d:	eb 46                	jmp    ffffffff80035855 <ZydisGetInstructionDefinition+0x11e>
ffffffff8003580f:	0f b7 45 f8          	movzwl -0x8(%rbp),%eax
ffffffff80035813:	48 98                	cltq   
ffffffff80035815:	48 c1 e0 04          	shl    $0x4,%rax
ffffffff80035819:	48 89 c2             	mov    %rax,%rdx
ffffffff8003581c:	48 8d 05 9d 83 01 00 	lea    0x1839d(%rip),%rax        # ffffffff8004dbc0 <ISTR_DEFINITIONS_EVEX>
ffffffff80035823:	48 01 c2             	add    %rax,%rdx
ffffffff80035826:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8003582a:	48 89 10             	mov    %rdx,(%rax)
ffffffff8003582d:	eb 26                	jmp    ffffffff80035855 <ZydisGetInstructionDefinition+0x11e>
ffffffff8003582f:	0f b7 45 f8          	movzwl -0x8(%rbp),%eax
ffffffff80035833:	48 63 d0             	movslq %eax,%rdx
ffffffff80035836:	48 89 d0             	mov    %rdx,%rax
ffffffff80035839:	48 c1 e0 04          	shl    $0x4,%rax
ffffffff8003583d:	48 29 d0             	sub    %rdx,%rax
ffffffff80035840:	48 8d 15 39 67 02 00 	lea    0x26739(%rip),%rdx        # ffffffff8005bf80 <ISTR_DEFINITIONS_MVEX>
ffffffff80035847:	48 01 c2             	add    %rax,%rdx
ffffffff8003584a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8003584e:	48 89 10             	mov    %rdx,(%rax)
ffffffff80035851:	eb 02                	jmp    ffffffff80035855 <ZydisGetInstructionDefinition+0x11e>
ffffffff80035853:	eb fe                	jmp    ffffffff80035853 <ZydisGetInstructionDefinition+0x11c>
ffffffff80035855:	90                   	nop
ffffffff80035856:	c9                   	leave  
ffffffff80035857:	c3                   	ret    

ffffffff80035858 <ZydisGetOperandDefinitions>:
ffffffff80035858:	f3 0f 1e fa          	endbr64 
ffffffff8003585c:	55                   	push   %rbp
ffffffff8003585d:	48 89 e5             	mov    %rsp,%rbp
ffffffff80035860:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80035864:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff80035868:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8003586c:	0f b6 40 01          	movzbl 0x1(%rax),%eax
ffffffff80035870:	83 e0 78             	and    $0x78,%eax
ffffffff80035873:	84 c0                	test   %al,%al
ffffffff80035875:	75 07                	jne    ffffffff8003587e <ZydisGetOperandDefinitions+0x26>
ffffffff80035877:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8003587c:	eb 47                	jmp    ffffffff800358c5 <ZydisGetOperandDefinitions+0x6d>
ffffffff8003587e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80035882:	0f b6 50 02          	movzbl 0x2(%rax),%edx
ffffffff80035886:	c0 ea 02             	shr    $0x2,%dl
ffffffff80035889:	0f b6 ca             	movzbl %dl,%ecx
ffffffff8003588c:	0f b6 50 03          	movzbl 0x3(%rax),%edx
ffffffff80035890:	48 c1 e2 06          	shl    $0x6,%rdx
ffffffff80035894:	48 09 ca             	or     %rcx,%rdx
ffffffff80035897:	0f b6 40 04          	movzbl 0x4(%rax),%eax
ffffffff8003589b:	83 e0 01             	and    $0x1,%eax
ffffffff8003589e:	48 c1 e0 0e          	shl    $0xe,%rax
ffffffff800358a2:	48 09 d0             	or     %rdx,%rax
ffffffff800358a5:	0f b7 c0             	movzwl %ax,%eax
ffffffff800358a8:	48 63 d0             	movslq %eax,%rdx
ffffffff800358ab:	48 89 d0             	mov    %rdx,%rax
ffffffff800358ae:	48 01 c0             	add    %rax,%rax
ffffffff800358b1:	48 01 d0             	add    %rdx,%rax
ffffffff800358b4:	48 c1 e0 02          	shl    $0x2,%rax
ffffffff800358b8:	48 01 d0             	add    %rdx,%rax
ffffffff800358bb:	48 8d 15 9e 7e 02 00 	lea    0x27e9e(%rip),%rdx        # ffffffff8005d760 <OPERAND_DEFINITIONS>
ffffffff800358c2:	48 01 d0             	add    %rdx,%rax
ffffffff800358c5:	c9                   	leave  
ffffffff800358c6:	c3                   	ret    

ffffffff800358c7 <ZydisGetElementInfo>:
ffffffff800358c7:	f3 0f 1e fa          	endbr64 
ffffffff800358cb:	55                   	push   %rbp
ffffffff800358cc:	48 89 e5             	mov    %rsp,%rbp
ffffffff800358cf:	48 83 ec 18          	sub    $0x18,%rsp
ffffffff800358d3:	89 7d fc             	mov    %edi,-0x4(%rbp)
ffffffff800358d6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff800358da:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
ffffffff800358de:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff800358e1:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
ffffffff800358e8:	00 
ffffffff800358e9:	48 8d 05 50 03 04 00 	lea    0x40350(%rip),%rax        # ffffffff80075c40 <lookup.0>
ffffffff800358f0:	8b 14 02             	mov    (%rdx,%rax,1),%edx
ffffffff800358f3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff800358f7:	89 10                	mov    %edx,(%rax)
ffffffff800358f9:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff800358fc:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
ffffffff80035903:	00 
ffffffff80035904:	48 8d 05 39 03 04 00 	lea    0x40339(%rip),%rax        # ffffffff80075c44 <lookup.0+0x4>
ffffffff8003590b:	0f b7 14 02          	movzwl (%rdx,%rax,1),%edx
ffffffff8003590f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80035913:	66 89 10             	mov    %dx,(%rax)
ffffffff80035916:	90                   	nop
ffffffff80035917:	c9                   	leave  
ffffffff80035918:	c3                   	ret    

ffffffff80035919 <ZydisGetAccessedFlags>:
ffffffff80035919:	f3 0f 1e fa          	endbr64 
ffffffff8003591d:	55                   	push   %rbp
ffffffff8003591e:	48 89 e5             	mov    %rsp,%rbp
ffffffff80035921:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff80035925:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff80035929:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff8003592d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80035931:	0f b6 50 04          	movzbl 0x4(%rax),%edx
ffffffff80035935:	c0 ea 06             	shr    $0x6,%dl
ffffffff80035938:	0f b6 d2             	movzbl %dl,%edx
ffffffff8003593b:	0f b6 40 05          	movzbl 0x5(%rax),%eax
ffffffff8003593f:	83 e0 1f             	and    $0x1f,%eax
ffffffff80035942:	48 c1 e0 02          	shl    $0x2,%rax
ffffffff80035946:	48 09 d0             	or     %rdx,%rax
ffffffff80035949:	0f b6 c0             	movzbl %al,%eax
ffffffff8003594c:	48 63 d0             	movslq %eax,%rdx
ffffffff8003594f:	48 89 d0             	mov    %rdx,%rax
ffffffff80035952:	48 c1 e0 02          	shl    $0x2,%rax
ffffffff80035956:	48 01 d0             	add    %rdx,%rax
ffffffff80035959:	48 c1 e0 03          	shl    $0x3,%rax
ffffffff8003595d:	48 8d 15 5c f7 03 00 	lea    0x3f75c(%rip),%rdx        # ffffffff800750c0 <ACCESSED_FLAGS>
ffffffff80035964:	48 01 c2             	add    %rax,%rdx
ffffffff80035967:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8003596b:	48 89 10             	mov    %rdx,(%rax)
ffffffff8003596e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80035972:	0f b6 50 04          	movzbl 0x4(%rax),%edx
ffffffff80035976:	c0 ea 06             	shr    $0x6,%dl
ffffffff80035979:	0f b6 d2             	movzbl %dl,%edx
ffffffff8003597c:	0f b6 40 05          	movzbl 0x5(%rax),%eax
ffffffff80035980:	83 e0 1f             	and    $0x1f,%eax
ffffffff80035983:	48 c1 e0 02          	shl    $0x2,%rax
ffffffff80035987:	48 09 d0             	or     %rdx,%rax
ffffffff8003598a:	84 c0                	test   %al,%al
ffffffff8003598c:	0f 95 c0             	setne  %al
ffffffff8003598f:	c9                   	leave  
ffffffff80035990:	c3                   	ret    

ffffffff80035991 <ZydisFormatterTokenGetValue>:
ffffffff80035991:	f3 0f 1e fa          	endbr64 
ffffffff80035995:	55                   	push   %rbp
ffffffff80035996:	48 89 e5             	mov    %rsp,%rbp
ffffffff80035999:	48 83 ec 18          	sub    $0x18,%rsp
ffffffff8003599d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff800359a1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff800359a5:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
ffffffff800359a9:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff800359ae:	74 0e                	je     ffffffff800359be <ZydisFormatterTokenGetValue+0x2d>
ffffffff800359b0:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
ffffffff800359b5:	74 07                	je     ffffffff800359be <ZydisFormatterTokenGetValue+0x2d>
ffffffff800359b7:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
ffffffff800359bc:	75 07                	jne    ffffffff800359c5 <ZydisFormatterTokenGetValue+0x34>
ffffffff800359be:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff800359c3:	eb 21                	jmp    ffffffff800359e6 <ZydisFormatterTokenGetValue+0x55>
ffffffff800359c5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff800359c9:	0f b6 00             	movzbl (%rax),%eax
ffffffff800359cc:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff800359d0:	88 02                	mov    %al,(%rdx)
ffffffff800359d2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff800359d6:	48 8d 50 02          	lea    0x2(%rax),%rdx
ffffffff800359da:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff800359de:	48 89 10             	mov    %rdx,(%rax)
ffffffff800359e1:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff800359e6:	c9                   	leave  
ffffffff800359e7:	c3                   	ret    

ffffffff800359e8 <ZydisFormatterTokenNext>:
ffffffff800359e8:	f3 0f 1e fa          	endbr64 
ffffffff800359ec:	55                   	push   %rbp
ffffffff800359ed:	48 89 e5             	mov    %rsp,%rbp
ffffffff800359f0:	48 83 ec 18          	sub    $0x18,%rsp
ffffffff800359f4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff800359f8:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
ffffffff800359fd:	74 0c                	je     ffffffff80035a0b <ZydisFormatterTokenNext+0x23>
ffffffff800359ff:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80035a03:	48 8b 00             	mov    (%rax),%rax
ffffffff80035a06:	48 85 c0             	test   %rax,%rax
ffffffff80035a09:	75 07                	jne    ffffffff80035a12 <ZydisFormatterTokenNext+0x2a>
ffffffff80035a0b:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff80035a10:	eb 39                	jmp    ffffffff80035a4b <ZydisFormatterTokenNext+0x63>
ffffffff80035a12:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80035a16:	48 8b 00             	mov    (%rax),%rax
ffffffff80035a19:	0f b6 40 01          	movzbl 0x1(%rax),%eax
ffffffff80035a1d:	88 45 ff             	mov    %al,-0x1(%rbp)
ffffffff80035a20:	80 7d ff 00          	cmpb   $0x0,-0x1(%rbp)
ffffffff80035a24:	75 07                	jne    ffffffff80035a2d <ZydisFormatterTokenNext+0x45>
ffffffff80035a26:	b8 08 00 10 80       	mov    $0x80100008,%eax
ffffffff80035a2b:	eb 1e                	jmp    ffffffff80035a4b <ZydisFormatterTokenNext+0x63>
ffffffff80035a2d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80035a31:	48 8b 10             	mov    (%rax),%rdx
ffffffff80035a34:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
ffffffff80035a38:	48 83 c0 02          	add    $0x2,%rax
ffffffff80035a3c:	48 01 c2             	add    %rax,%rdx
ffffffff80035a3f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80035a43:	48 89 10             	mov    %rdx,(%rax)
ffffffff80035a46:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff80035a4b:	c9                   	leave  
ffffffff80035a4c:	c3                   	ret    

ffffffff80035a4d <ZydisFormatterBufferGetToken>:
ffffffff80035a4d:	f3 0f 1e fa          	endbr64 
ffffffff80035a51:	55                   	push   %rbp
ffffffff80035a52:	48 89 e5             	mov    %rsp,%rbp
ffffffff80035a55:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff80035a59:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff80035a5d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff80035a61:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff80035a66:	74 07                	je     ffffffff80035a6f <ZydisFormatterBufferGetToken+0x22>
ffffffff80035a68:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
ffffffff80035a6d:	75 07                	jne    ffffffff80035a76 <ZydisFormatterBufferGetToken+0x29>
ffffffff80035a6f:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff80035a74:	eb 2d                	jmp    ffffffff80035aa3 <ZydisFormatterBufferGetToken+0x56>
ffffffff80035a76:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80035a7a:	48 8b 40 48          	mov    0x48(%rax),%rax
ffffffff80035a7e:	48 8d 50 fe          	lea    -0x2(%rax),%rdx
ffffffff80035a82:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80035a86:	48 89 10             	mov    %rdx,(%rax)
ffffffff80035a89:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80035a8d:	48 8b 00             	mov    (%rax),%rax
ffffffff80035a90:	0f b6 00             	movzbl (%rax),%eax
ffffffff80035a93:	84 c0                	test   %al,%al
ffffffff80035a95:	75 07                	jne    ffffffff80035a9e <ZydisFormatterBufferGetToken+0x51>
ffffffff80035a97:	b8 05 00 10 80       	mov    $0x80100005,%eax
ffffffff80035a9c:	eb 05                	jmp    ffffffff80035aa3 <ZydisFormatterBufferGetToken+0x56>
ffffffff80035a9e:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff80035aa3:	c9                   	leave  
ffffffff80035aa4:	c3                   	ret    

ffffffff80035aa5 <ZydisFormatterBufferGetString>:
ffffffff80035aa5:	f3 0f 1e fa          	endbr64 
ffffffff80035aa9:	55                   	push   %rbp
ffffffff80035aaa:	48 89 e5             	mov    %rsp,%rbp
ffffffff80035aad:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff80035ab1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff80035ab5:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff80035ab9:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff80035abe:	74 07                	je     ffffffff80035ac7 <ZydisFormatterBufferGetString+0x22>
ffffffff80035ac0:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
ffffffff80035ac5:	75 07                	jne    ffffffff80035ace <ZydisFormatterBufferGetString+0x29>
ffffffff80035ac7:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff80035acc:	eb 39                	jmp    ffffffff80035b07 <ZydisFormatterBufferGetString+0x62>
ffffffff80035ace:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80035ad2:	0f b6 00             	movzbl (%rax),%eax
ffffffff80035ad5:	84 c0                	test   %al,%al
ffffffff80035ad7:	74 1a                	je     ffffffff80035af3 <ZydisFormatterBufferGetString+0x4e>
ffffffff80035ad9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80035add:	48 8b 40 48          	mov    0x48(%rax),%rax
ffffffff80035ae1:	48 83 e8 02          	sub    $0x2,%rax
ffffffff80035ae5:	0f b6 00             	movzbl (%rax),%eax
ffffffff80035ae8:	84 c0                	test   %al,%al
ffffffff80035aea:	75 07                	jne    ffffffff80035af3 <ZydisFormatterBufferGetString+0x4e>
ffffffff80035aec:	b8 05 00 10 80       	mov    $0x80100005,%eax
ffffffff80035af1:	eb 14                	jmp    ffffffff80035b07 <ZydisFormatterBufferGetString+0x62>
ffffffff80035af3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80035af7:	48 8d 50 10          	lea    0x10(%rax),%rdx
ffffffff80035afb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80035aff:	48 89 10             	mov    %rdx,(%rax)
ffffffff80035b02:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff80035b07:	c9                   	leave  
ffffffff80035b08:	c3                   	ret    

ffffffff80035b09 <ZydisFormatterBufferAppend>:
ffffffff80035b09:	f3 0f 1e fa          	endbr64 
ffffffff80035b0d:	55                   	push   %rbp
ffffffff80035b0e:	48 89 e5             	mov    %rsp,%rbp
ffffffff80035b11:	48 83 ec 30          	sub    $0x30,%rsp
ffffffff80035b15:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
ffffffff80035b19:	89 f0                	mov    %esi,%eax
ffffffff80035b1b:	88 45 d4             	mov    %al,-0x2c(%rbp)
ffffffff80035b1e:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
ffffffff80035b23:	75 0a                	jne    ffffffff80035b2f <ZydisFormatterBufferAppend+0x26>
ffffffff80035b25:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff80035b2a:	e9 fd 00 00 00       	jmp    ffffffff80035c2c <ZydisFormatterBufferAppend+0x123>
ffffffff80035b2f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80035b33:	0f b6 00             	movzbl (%rax),%eax
ffffffff80035b36:	84 c0                	test   %al,%al
ffffffff80035b38:	75 0a                	jne    ffffffff80035b44 <ZydisFormatterBufferAppend+0x3b>
ffffffff80035b3a:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff80035b3f:	e9 e8 00 00 00       	jmp    ffffffff80035c2c <ZydisFormatterBufferAppend+0x123>
ffffffff80035b44:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80035b48:	48 8b 40 28          	mov    0x28(%rax),%rax
ffffffff80035b4c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff80035b50:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff80035b55:	74 08                	je     ffffffff80035b5f <ZydisFormatterBufferAppend+0x56>
ffffffff80035b57:	48 81 7d f8 ff 00 00 	cmpq   $0xff,-0x8(%rbp)
ffffffff80035b5e:	00 
ffffffff80035b5f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80035b63:	48 8b 50 08          	mov    0x8(%rax),%rdx
ffffffff80035b67:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80035b6b:	48 83 c0 02          	add    $0x2,%rax
ffffffff80035b6f:	48 39 c2             	cmp    %rax,%rdx
ffffffff80035b72:	77 0a                	ja     ffffffff80035b7e <ZydisFormatterBufferAppend+0x75>
ffffffff80035b74:	b8 09 00 10 80       	mov    $0x80100009,%eax
ffffffff80035b79:	e9 ae 00 00 00       	jmp    ffffffff80035c2c <ZydisFormatterBufferAppend+0x123>
ffffffff80035b7e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80035b82:	48 8b 40 48          	mov    0x48(%rax),%rax
ffffffff80035b86:	48 83 e8 02          	sub    $0x2,%rax
ffffffff80035b8a:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff80035b8e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80035b92:	89 c2                	mov    %eax,%edx
ffffffff80035b94:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80035b98:	88 50 01             	mov    %dl,0x1(%rax)
ffffffff80035b9b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80035b9f:	48 83 c0 02          	add    $0x2,%rax
ffffffff80035ba3:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff80035ba7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80035bab:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff80035baf:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
ffffffff80035bb3:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff80035bb7:	48 89 42 08          	mov    %rax,0x8(%rdx)
ffffffff80035bbb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80035bbf:	48 8b 50 48          	mov    0x48(%rax),%rdx
ffffffff80035bc3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80035bc7:	48 01 c2             	add    %rax,%rdx
ffffffff80035bca:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80035bce:	48 89 50 48          	mov    %rdx,0x48(%rax)
ffffffff80035bd2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80035bd6:	48 c7 40 28 01 00 00 	movq   $0x1,0x28(%rax)
ffffffff80035bdd:	00 
ffffffff80035bde:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80035be2:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff80035be6:	ba ff 00 00 00       	mov    $0xff,%edx
ffffffff80035beb:	48 39 d0             	cmp    %rdx,%rax
ffffffff80035bee:	48 0f 47 c2          	cmova  %rdx,%rax
ffffffff80035bf2:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff80035bf6:	48 89 42 30          	mov    %rax,0x30(%rdx)
ffffffff80035bfa:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80035bfe:	48 8b 40 48          	mov    0x48(%rax),%rax
ffffffff80035c02:	c6 00 00             	movb   $0x0,(%rax)
ffffffff80035c05:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80035c09:	48 8b 40 48          	mov    0x48(%rax),%rax
ffffffff80035c0d:	48 83 e8 02          	sub    $0x2,%rax
ffffffff80035c11:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff80035c15:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff80035c19:	0f b6 45 d4          	movzbl -0x2c(%rbp),%eax
ffffffff80035c1d:	88 02                	mov    %al,(%rdx)
ffffffff80035c1f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80035c23:	c6 40 01 00          	movb   $0x0,0x1(%rax)
ffffffff80035c27:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff80035c2c:	c9                   	leave  
ffffffff80035c2d:	c3                   	ret    

ffffffff80035c2e <ZydisFormatterBufferRemember>:
ffffffff80035c2e:	f3 0f 1e fa          	endbr64 
ffffffff80035c32:	55                   	push   %rbp
ffffffff80035c33:	48 89 e5             	mov    %rsp,%rbp
ffffffff80035c36:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff80035c3a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff80035c3e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff80035c42:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff80035c47:	74 07                	je     ffffffff80035c50 <ZydisFormatterBufferRemember+0x22>
ffffffff80035c49:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
ffffffff80035c4e:	75 07                	jne    ffffffff80035c57 <ZydisFormatterBufferRemember+0x29>
ffffffff80035c50:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff80035c55:	eb 33                	jmp    ffffffff80035c8a <ZydisFormatterBufferRemember+0x5c>
ffffffff80035c57:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80035c5b:	0f b6 00             	movzbl (%rax),%eax
ffffffff80035c5e:	84 c0                	test   %al,%al
ffffffff80035c60:	74 14                	je     ffffffff80035c76 <ZydisFormatterBufferRemember+0x48>
ffffffff80035c62:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80035c66:	48 8b 40 48          	mov    0x48(%rax),%rax
ffffffff80035c6a:	48 89 c2             	mov    %rax,%rdx
ffffffff80035c6d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80035c71:	48 89 10             	mov    %rdx,(%rax)
ffffffff80035c74:	eb 0f                	jmp    ffffffff80035c85 <ZydisFormatterBufferRemember+0x57>
ffffffff80035c76:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80035c7a:	48 8b 50 28          	mov    0x28(%rax),%rdx
ffffffff80035c7e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80035c82:	48 89 10             	mov    %rdx,(%rax)
ffffffff80035c85:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff80035c8a:	c9                   	leave  
ffffffff80035c8b:	c3                   	ret    

ffffffff80035c8c <ZydisFormatterBufferRestore>:
ffffffff80035c8c:	f3 0f 1e fa          	endbr64 
ffffffff80035c90:	55                   	push   %rbp
ffffffff80035c91:	48 89 e5             	mov    %rsp,%rbp
ffffffff80035c94:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff80035c98:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff80035c9c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
ffffffff80035ca0:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
ffffffff80035ca5:	75 0a                	jne    ffffffff80035cb1 <ZydisFormatterBufferRestore+0x25>
ffffffff80035ca7:	b8 04 00 10 80       	mov    $0x80100004,%eax
ffffffff80035cac:	e9 9e 00 00 00       	jmp    ffffffff80035d4f <ZydisFormatterBufferRestore+0xc3>
ffffffff80035cb1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80035cb5:	0f b6 00             	movzbl (%rax),%eax
ffffffff80035cb8:	84 c0                	test   %al,%al
ffffffff80035cba:	74 68                	je     ffffffff80035d24 <ZydisFormatterBufferRestore+0x98>
ffffffff80035cbc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80035cc0:	48 8b 40 48          	mov    0x48(%rax),%rax
ffffffff80035cc4:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
ffffffff80035cc8:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff80035ccc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80035cd0:	48 8b 50 08          	mov    0x8(%rax),%rdx
ffffffff80035cd4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80035cd8:	48 01 c2             	add    %rax,%rdx
ffffffff80035cdb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80035cdf:	48 89 50 08          	mov    %rdx,0x8(%rax)
ffffffff80035ce3:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff80035ce7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80035ceb:	48 89 50 48          	mov    %rdx,0x48(%rax)
ffffffff80035cef:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80035cf3:	48 c7 40 28 01 00 00 	movq   $0x1,0x28(%rax)
ffffffff80035cfa:	00 
ffffffff80035cfb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80035cff:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff80035d03:	ba ff 00 00 00       	mov    $0xff,%edx
ffffffff80035d08:	48 39 d0             	cmp    %rdx,%rax
ffffffff80035d0b:	48 0f 47 c2          	cmova  %rdx,%rax
ffffffff80035d0f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff80035d13:	48 89 42 30          	mov    %rax,0x30(%rdx)
ffffffff80035d17:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80035d1b:	48 8b 40 48          	mov    0x48(%rax),%rax
ffffffff80035d1f:	c6 00 00             	movb   $0x0,(%rax)
ffffffff80035d22:	eb 26                	jmp    ffffffff80035d4a <ZydisFormatterBufferRestore+0xbe>
ffffffff80035d24:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80035d28:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff80035d2c:	48 89 50 28          	mov    %rdx,0x28(%rax)
ffffffff80035d30:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80035d34:	48 8b 50 48          	mov    0x48(%rax),%rdx
ffffffff80035d38:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80035d3c:	48 8b 40 28          	mov    0x28(%rax),%rax
ffffffff80035d40:	48 83 e8 01          	sub    $0x1,%rax
ffffffff80035d44:	48 01 d0             	add    %rdx,%rax
ffffffff80035d47:	c6 00 00             	movb   $0x0,(%rax)
ffffffff80035d4a:	b8 00 00 10 00       	mov    $0x100000,%eax
ffffffff80035d4f:	c9                   	leave  
ffffffff80035d50:	c3                   	ret    

ffffffff80035d51 <ZydisGetEncodableInstructions>:
ffffffff80035d51:	f3 0f 1e fa          	endbr64 
ffffffff80035d55:	55                   	push   %rbp
ffffffff80035d56:	48 89 e5             	mov    %rsp,%rbp
ffffffff80035d59:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff80035d5d:	89 7d ec             	mov    %edi,-0x14(%rbp)
ffffffff80035d60:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
ffffffff80035d64:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
ffffffff80035d68:	74 09                	je     ffffffff80035d73 <ZydisGetEncodableInstructions+0x22>
ffffffff80035d6a:	81 7d ec da 06 00 00 	cmpl   $0x6da,-0x14(%rbp)
ffffffff80035d71:	76 12                	jbe    ffffffff80035d85 <ZydisGetEncodableInstructions+0x34>
ffffffff80035d73:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80035d77:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
ffffffff80035d7e:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff80035d83:	eb 41                	jmp    ffffffff80035dc6 <ZydisGetEncodableInstructions+0x75>
ffffffff80035d85:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff80035d88:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
ffffffff80035d8f:	00 
ffffffff80035d90:	48 8d 05 69 ff 03 00 	lea    0x3ff69(%rip),%rax        # ffffffff80075d00 <encoder_instruction_lookup>
ffffffff80035d97:	8b 04 02             	mov    (%rdx,%rax,1),%eax
ffffffff80035d9a:	89 45 fc             	mov    %eax,-0x4(%rbp)
ffffffff80035d9d:	0f b7 45 fc          	movzwl -0x4(%rbp),%eax
ffffffff80035da1:	0f b7 c0             	movzwl %ax,%eax
ffffffff80035da4:	48 63 d0             	movslq %eax,%rdx
ffffffff80035da7:	48 89 d0             	mov    %rdx,%rax
ffffffff80035daa:	48 c1 e0 03          	shl    $0x3,%rax
ffffffff80035dae:	48 01 d0             	add    %rdx,%rax
ffffffff80035db1:	48 8d 15 c8 1a 04 00 	lea    0x41ac8(%rip),%rdx        # ffffffff80077880 <encoder_instructions>
ffffffff80035db8:	48 01 c2             	add    %rax,%rdx
ffffffff80035dbb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80035dbf:	48 89 10             	mov    %rdx,(%rax)
ffffffff80035dc2:	0f b6 45 fe          	movzbl -0x2(%rbp),%eax
ffffffff80035dc6:	c9                   	leave  
ffffffff80035dc7:	c3                   	ret    

ffffffff80035dc8 <ZydisDecoderTreeGetChildNode>:
ffffffff80035dc8:	f3 0f 1e fa          	endbr64 
ffffffff80035dcc:	55                   	push   %rbp
ffffffff80035dcd:	48 89 e5             	mov    %rsp,%rbp
ffffffff80035dd0:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff80035dd4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff80035dd8:	89 f0                	mov    %esi,%eax
ffffffff80035dda:	66 89 45 f4          	mov    %ax,-0xc(%rbp)
ffffffff80035dde:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80035de2:	0f b6 00             	movzbl (%rax),%eax
ffffffff80035de5:	0f b6 c0             	movzbl %al,%eax
ffffffff80035de8:	83 f8 1b             	cmp    $0x1b,%eax
ffffffff80035deb:	0f 87 3c 06 00 00    	ja     ffffffff8003642d <ZydisDecoderTreeGetChildNode+0x665>
ffffffff80035df1:	89 c0                	mov    %eax,%eax
ffffffff80035df3:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
ffffffff80035dfa:	00 
ffffffff80035dfb:	48 8d 05 12 95 06 00 	lea    0x69512(%rip),%rax        # ffffffff8009f314 <zydis_decoder_tree_root+0x6>
ffffffff80035e02:	8b 04 02             	mov    (%rdx,%rax,1),%eax
ffffffff80035e05:	48 98                	cltq   
ffffffff80035e07:	48 8d 15 06 95 06 00 	lea    0x69506(%rip),%rdx        # ffffffff8009f314 <zydis_decoder_tree_root+0x6>
ffffffff80035e0e:	48 01 d0             	add    %rdx,%rax
ffffffff80035e11:	3e ff e0             	notrack jmp *%rax
ffffffff80035e14:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80035e18:	0f b7 40 01          	movzwl 0x1(%rax),%eax
ffffffff80035e1c:	0f b7 c8             	movzwl %ax,%ecx
ffffffff80035e1f:	0f b7 45 f4          	movzwl -0xc(%rbp),%eax
ffffffff80035e23:	48 63 d0             	movslq %eax,%rdx
ffffffff80035e26:	48 89 d0             	mov    %rdx,%rax
ffffffff80035e29:	48 01 c0             	add    %rax,%rax
ffffffff80035e2c:	48 01 d0             	add    %rdx,%rax
ffffffff80035e2f:	48 63 d1             	movslq %ecx,%rdx
ffffffff80035e32:	48 6b d2 27          	imul   $0x27,%rdx,%rdx
ffffffff80035e36:	48 01 c2             	add    %rax,%rdx
ffffffff80035e39:	48 8d 05 40 2a 05 00 	lea    0x52a40(%rip),%rax        # ffffffff80088880 <FILTERS_XOP>
ffffffff80035e40:	48 01 d0             	add    %rdx,%rax
ffffffff80035e43:	e9 e7 05 00 00       	jmp    ffffffff8003642f <ZydisDecoderTreeGetChildNode+0x667>
ffffffff80035e48:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80035e4c:	0f b7 40 01          	movzwl 0x1(%rax),%eax
ffffffff80035e50:	0f b7 c8             	movzwl %ax,%ecx
ffffffff80035e53:	0f b7 45 f4          	movzwl -0xc(%rbp),%eax
ffffffff80035e57:	48 63 d0             	movslq %eax,%rdx
ffffffff80035e5a:	48 89 d0             	mov    %rdx,%rax
ffffffff80035e5d:	48 01 c0             	add    %rax,%rax
ffffffff80035e60:	48 01 d0             	add    %rdx,%rax
ffffffff80035e63:	48 63 d1             	movslq %ecx,%rdx
ffffffff80035e66:	48 6b d2 33          	imul   $0x33,%rdx,%rdx
ffffffff80035e6a:	48 01 c2             	add    %rax,%rdx
ffffffff80035e6d:	48 8d 05 4c 2a 05 00 	lea    0x52a4c(%rip),%rax        # ffffffff800888c0 <FILTERS_VEX>
ffffffff80035e74:	48 01 d0             	add    %rdx,%rax
ffffffff80035e77:	e9 b3 05 00 00       	jmp    ffffffff8003642f <ZydisDecoderTreeGetChildNode+0x667>
ffffffff80035e7c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80035e80:	0f b7 40 01          	movzwl 0x1(%rax),%eax
ffffffff80035e84:	0f b7 c8             	movzwl %ax,%ecx
ffffffff80035e87:	0f b7 45 f4          	movzwl -0xc(%rbp),%eax
ffffffff80035e8b:	48 63 d0             	movslq %eax,%rdx
ffffffff80035e8e:	48 89 d0             	mov    %rdx,%rax
ffffffff80035e91:	48 01 c0             	add    %rax,%rax
ffffffff80035e94:	48 01 d0             	add    %rdx,%rax
ffffffff80035e97:	48 63 d1             	movslq %ecx,%rdx
ffffffff80035e9a:	48 69 d2 93 00 00 00 	imul   $0x93,%rdx,%rdx
ffffffff80035ea1:	48 01 c2             	add    %rax,%rdx
ffffffff80035ea4:	48 8d 05 95 2a 05 00 	lea    0x52a95(%rip),%rax        # ffffffff80088940 <FILTERS_EMVEX>
ffffffff80035eab:	48 01 d0             	add    %rdx,%rax
ffffffff80035eae:	e9 7c 05 00 00       	jmp    ffffffff8003642f <ZydisDecoderTreeGetChildNode+0x667>
ffffffff80035eb3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80035eb7:	0f b7 40 01          	movzwl 0x1(%rax),%eax
ffffffff80035ebb:	0f b7 c8             	movzwl %ax,%ecx
ffffffff80035ebe:	0f b7 45 f4          	movzwl -0xc(%rbp),%eax
ffffffff80035ec2:	48 98                	cltq   
ffffffff80035ec4:	48 89 c2             	mov    %rax,%rdx
ffffffff80035ec7:	48 01 d2             	add    %rdx,%rdx
ffffffff80035eca:	48 01 c2             	add    %rax,%rdx
ffffffff80035ecd:	48 63 c9             	movslq %ecx,%rcx
ffffffff80035ed0:	48 89 c8             	mov    %rcx,%rax
ffffffff80035ed3:	48 01 c0             	add    %rax,%rax
ffffffff80035ed6:	48 01 c8             	add    %rcx,%rax
ffffffff80035ed9:	48 c1 e0 08          	shl    $0x8,%rax
ffffffff80035edd:	48 01 c2             	add    %rax,%rdx
ffffffff80035ee0:	48 8d 05 f9 2a 05 00 	lea    0x52af9(%rip),%rax        # ffffffff800889e0 <FILTERS_OPCODE>
ffffffff80035ee7:	48 01 d0             	add    %rdx,%rax
ffffffff80035eea:	e9 40 05 00 00       	jmp    ffffffff8003642f <ZydisDecoderTreeGetChildNode+0x667>
ffffffff80035eef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80035ef3:	0f b7 40 01          	movzwl 0x1(%rax),%eax
ffffffff80035ef7:	0f b7 c8             	movzwl %ax,%ecx
ffffffff80035efa:	0f b7 45 f4          	movzwl -0xc(%rbp),%eax
ffffffff80035efe:	48 98                	cltq   
ffffffff80035f00:	48 89 c2             	mov    %rax,%rdx
ffffffff80035f03:	48 01 d2             	add    %rdx,%rdx
ffffffff80035f06:	48 01 c2             	add    %rax,%rdx
ffffffff80035f09:	48 63 c9             	movslq %ecx,%rcx
ffffffff80035f0c:	48 89 c8             	mov    %rcx,%rax
ffffffff80035f0f:	48 c1 e0 03          	shl    $0x3,%rax
ffffffff80035f13:	48 01 c8             	add    %rcx,%rax
ffffffff80035f16:	48 01 c2             	add    %rax,%rdx
ffffffff80035f19:	48 8d 05 c0 b4 05 00 	lea    0x5b4c0(%rip),%rax        # ffffffff800913e0 <FILTERS_MODE>
ffffffff80035f20:	48 01 d0             	add    %rdx,%rax
ffffffff80035f23:	e9 07 05 00 00       	jmp    ffffffff8003642f <ZydisDecoderTreeGetChildNode+0x667>
ffffffff80035f28:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80035f2c:	0f b7 40 01          	movzwl 0x1(%rax),%eax
ffffffff80035f30:	0f b7 c8             	movzwl %ax,%ecx
ffffffff80035f33:	0f b7 45 f4          	movzwl -0xc(%rbp),%eax
ffffffff80035f37:	48 98                	cltq   
ffffffff80035f39:	48 89 c2             	mov    %rax,%rdx
ffffffff80035f3c:	48 01 d2             	add    %rdx,%rdx
ffffffff80035f3f:	48 01 c2             	add    %rax,%rdx
ffffffff80035f42:	48 63 c9             	movslq %ecx,%rcx
ffffffff80035f45:	48 89 c8             	mov    %rcx,%rax
ffffffff80035f48:	48 01 c0             	add    %rax,%rax
ffffffff80035f4b:	48 01 c8             	add    %rcx,%rax
ffffffff80035f4e:	48 01 c0             	add    %rax,%rax
ffffffff80035f51:	48 01 c2             	add    %rax,%rdx
ffffffff80035f54:	48 8d 05 a5 b4 05 00 	lea    0x5b4a5(%rip),%rax        # ffffffff80091400 <FILTERS_MODE_COMPACT>
ffffffff80035f5b:	48 01 d0             	add    %rdx,%rax
ffffffff80035f5e:	e9 cc 04 00 00       	jmp    ffffffff8003642f <ZydisDecoderTreeGetChildNode+0x667>
ffffffff80035f63:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80035f67:	0f b7 40 01          	movzwl 0x1(%rax),%eax
ffffffff80035f6b:	0f b7 c8             	movzwl %ax,%ecx
ffffffff80035f6e:	0f b7 45 f4          	movzwl -0xc(%rbp),%eax
ffffffff80035f72:	48 98                	cltq   
ffffffff80035f74:	48 89 c2             	mov    %rax,%rdx
ffffffff80035f77:	48 01 d2             	add    %rdx,%rdx
ffffffff80035f7a:	48 01 c2             	add    %rax,%rdx
ffffffff80035f7d:	48 63 c9             	movslq %ecx,%rcx
ffffffff80035f80:	48 89 c8             	mov    %rcx,%rax
ffffffff80035f83:	48 01 c0             	add    %rax,%rax
ffffffff80035f86:	48 01 c8             	add    %rcx,%rax
ffffffff80035f89:	48 c1 e0 02          	shl    $0x2,%rax
ffffffff80035f8d:	48 01 c2             	add    %rax,%rdx
ffffffff80035f90:	48 8d 05 71 bb 05 00 	lea    0x5bb71(%rip),%rax        # ffffffff80091b08 <FILTERS_MODRM_MOD>
ffffffff80035f97:	48 01 d0             	add    %rdx,%rax
ffffffff80035f9a:	e9 90 04 00 00       	jmp    ffffffff8003642f <ZydisDecoderTreeGetChildNode+0x667>
ffffffff80035f9f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80035fa3:	0f b7 40 01          	movzwl 0x1(%rax),%eax
ffffffff80035fa7:	0f b7 c8             	movzwl %ax,%ecx
ffffffff80035faa:	0f b7 45 f4          	movzwl -0xc(%rbp),%eax
ffffffff80035fae:	48 98                	cltq   
ffffffff80035fb0:	48 89 c2             	mov    %rax,%rdx
ffffffff80035fb3:	48 01 d2             	add    %rdx,%rdx
ffffffff80035fb6:	48 01 c2             	add    %rax,%rdx
ffffffff80035fb9:	48 63 c9             	movslq %ecx,%rcx
ffffffff80035fbc:	48 89 c8             	mov    %rcx,%rax
ffffffff80035fbf:	48 01 c0             	add    %rax,%rax
ffffffff80035fc2:	48 01 c8             	add    %rcx,%rax
ffffffff80035fc5:	48 01 c0             	add    %rax,%rax
ffffffff80035fc8:	48 01 c2             	add    %rax,%rdx
ffffffff80035fcb:	48 8d 05 4e bb 05 00 	lea    0x5bb4e(%rip),%rax        # ffffffff80091b20 <FILTERS_MODRM_MOD_COMPACT>
ffffffff80035fd2:	48 01 d0             	add    %rdx,%rax
ffffffff80035fd5:	e9 55 04 00 00       	jmp    ffffffff8003642f <ZydisDecoderTreeGetChildNode+0x667>
ffffffff80035fda:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80035fde:	0f b7 40 01          	movzwl 0x1(%rax),%eax
ffffffff80035fe2:	0f b7 c8             	movzwl %ax,%ecx
ffffffff80035fe5:	0f b7 45 f4          	movzwl -0xc(%rbp),%eax
ffffffff80035fe9:	48 98                	cltq   
ffffffff80035feb:	48 89 c2             	mov    %rax,%rdx
ffffffff80035fee:	48 01 d2             	add    %rdx,%rdx
ffffffff80035ff1:	48 01 c2             	add    %rax,%rdx
ffffffff80035ff4:	48 63 c9             	movslq %ecx,%rcx
ffffffff80035ff7:	48 89 c8             	mov    %rcx,%rax
ffffffff80035ffa:	48 01 c0             	add    %rax,%rax
ffffffff80035ffd:	48 01 c8             	add    %rcx,%rax
ffffffff80036000:	48 c1 e0 03          	shl    $0x3,%rax
ffffffff80036004:	48 01 c2             	add    %rax,%rdx
ffffffff80036007:	48 8d 05 72 e6 05 00 	lea    0x5e672(%rip),%rax        # ffffffff80094680 <FILTERS_MODRM_REG>
ffffffff8003600e:	48 01 d0             	add    %rdx,%rax
ffffffff80036011:	e9 19 04 00 00       	jmp    ffffffff8003642f <ZydisDecoderTreeGetChildNode+0x667>
ffffffff80036016:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8003601a:	0f b7 40 01          	movzwl 0x1(%rax),%eax
ffffffff8003601e:	0f b7 c8             	movzwl %ax,%ecx
ffffffff80036021:	0f b7 45 f4          	movzwl -0xc(%rbp),%eax
ffffffff80036025:	48 98                	cltq   
ffffffff80036027:	48 89 c2             	mov    %rax,%rdx
ffffffff8003602a:	48 01 d2             	add    %rdx,%rdx
ffffffff8003602d:	48 01 c2             	add    %rax,%rdx
ffffffff80036030:	48 63 c9             	movslq %ecx,%rcx
ffffffff80036033:	48 89 c8             	mov    %rcx,%rax
ffffffff80036036:	48 01 c0             	add    %rax,%rax
ffffffff80036039:	48 01 c8             	add    %rcx,%rax
ffffffff8003603c:	48 c1 e0 03          	shl    $0x3,%rax
ffffffff80036040:	48 01 c2             	add    %rax,%rdx
ffffffff80036043:	48 8d 05 96 f1 05 00 	lea    0x5f196(%rip),%rax        # ffffffff800951e0 <FILTERS_MODRM_RM>
ffffffff8003604a:	48 01 d0             	add    %rdx,%rax
ffffffff8003604d:	e9 dd 03 00 00       	jmp    ffffffff8003642f <ZydisDecoderTreeGetChildNode+0x667>
ffffffff80036052:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80036056:	0f b7 40 01          	movzwl 0x1(%rax),%eax
ffffffff8003605a:	0f b7 c8             	movzwl %ax,%ecx
ffffffff8003605d:	0f b7 45 f4          	movzwl -0xc(%rbp),%eax
ffffffff80036061:	48 98                	cltq   
ffffffff80036063:	48 89 c2             	mov    %rax,%rdx
ffffffff80036066:	48 01 d2             	add    %rdx,%rdx
ffffffff80036069:	48 01 c2             	add    %rax,%rdx
ffffffff8003606c:	48 63 c9             	movslq %ecx,%rcx
ffffffff8003606f:	48 89 c8             	mov    %rcx,%rax
ffffffff80036072:	48 01 c0             	add    %rax,%rax
ffffffff80036075:	48 01 c8             	add    %rcx,%rax
ffffffff80036078:	48 01 c0             	add    %rax,%rax
ffffffff8003607b:	48 01 c2             	add    %rax,%rdx
ffffffff8003607e:	48 8d 05 6b ba 05 00 	lea    0x5ba6b(%rip),%rax        # ffffffff80091af0 <FILTERS_PREFIX_GROUP1>
ffffffff80036085:	48 01 d0             	add    %rdx,%rax
ffffffff80036088:	e9 a2 03 00 00       	jmp    ffffffff8003642f <ZydisDecoderTreeGetChildNode+0x667>
ffffffff8003608d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80036091:	0f b7 40 01          	movzwl 0x1(%rax),%eax
ffffffff80036095:	0f b7 c8             	movzwl %ax,%ecx
ffffffff80036098:	0f b7 45 f4          	movzwl -0xc(%rbp),%eax
ffffffff8003609c:	48 63 d0             	movslq %eax,%rdx
ffffffff8003609f:	48 89 d0             	mov    %rdx,%rax
ffffffff800360a2:	48 01 c0             	add    %rax,%rax
ffffffff800360a5:	48 01 d0             	add    %rdx,%rax
ffffffff800360a8:	48 63 c9             	movslq %ecx,%rcx
ffffffff800360ab:	48 89 ca             	mov    %rcx,%rdx
ffffffff800360ae:	48 c1 e2 04          	shl    $0x4,%rdx
ffffffff800360b2:	48 29 ca             	sub    %rcx,%rdx
ffffffff800360b5:	48 01 c2             	add    %rax,%rdx
ffffffff800360b8:	48 8d 05 c1 f7 05 00 	lea    0x5f7c1(%rip),%rax        # ffffffff80095880 <FILTERS_MANDATORY_PREFIX>
ffffffff800360bf:	48 01 d0             	add    %rdx,%rax
ffffffff800360c2:	e9 68 03 00 00       	jmp    ffffffff8003642f <ZydisDecoderTreeGetChildNode+0x667>
ffffffff800360c7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff800360cb:	0f b7 40 01          	movzwl 0x1(%rax),%eax
ffffffff800360cf:	0f b7 c8             	movzwl %ax,%ecx
ffffffff800360d2:	0f b7 45 f4          	movzwl -0xc(%rbp),%eax
ffffffff800360d6:	48 98                	cltq   
ffffffff800360d8:	48 89 c2             	mov    %rax,%rdx
ffffffff800360db:	48 01 d2             	add    %rdx,%rdx
ffffffff800360de:	48 01 c2             	add    %rax,%rdx
ffffffff800360e1:	48 63 c9             	movslq %ecx,%rcx
ffffffff800360e4:	48 89 c8             	mov    %rcx,%rax
ffffffff800360e7:	48 c1 e0 03          	shl    $0x3,%rax
ffffffff800360eb:	48 01 c8             	add    %rcx,%rax
ffffffff800360ee:	48 01 c2             	add    %rax,%rdx
ffffffff800360f1:	48 8d 05 08 11 06 00 	lea    0x61108(%rip),%rax        # ffffffff80097200 <FILTERS_OPERAND_SIZE>
ffffffff800360f8:	48 01 d0             	add    %rdx,%rax
ffffffff800360fb:	e9 2f 03 00 00       	jmp    ffffffff8003642f <ZydisDecoderTreeGetChildNode+0x667>
ffffffff80036100:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80036104:	0f b7 40 01          	movzwl 0x1(%rax),%eax
ffffffff80036108:	0f b7 c8             	movzwl %ax,%ecx
ffffffff8003610b:	0f b7 45 f4          	movzwl -0xc(%rbp),%eax
ffffffff8003610f:	48 98                	cltq   
ffffffff80036111:	48 89 c2             	mov    %rax,%rdx
ffffffff80036114:	48 01 d2             	add    %rdx,%rdx
ffffffff80036117:	48 01 c2             	add    %rax,%rdx
ffffffff8003611a:	48 63 c9             	movslq %ecx,%rcx
ffffffff8003611d:	48 89 c8             	mov    %rcx,%rax
ffffffff80036120:	48 c1 e0 03          	shl    $0x3,%rax
ffffffff80036124:	48 01 c8             	add    %rcx,%rax
ffffffff80036127:	48 01 c2             	add    %rax,%rdx
ffffffff8003612a:	48 8d 05 4f 12 06 00 	lea    0x6124f(%rip),%rax        # ffffffff80097380 <FILTERS_ADDRESS_SIZE>
ffffffff80036131:	48 01 d0             	add    %rdx,%rax
ffffffff80036134:	e9 f6 02 00 00       	jmp    ffffffff8003642f <ZydisDecoderTreeGetChildNode+0x667>
ffffffff80036139:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8003613d:	0f b7 40 01          	movzwl 0x1(%rax),%eax
ffffffff80036141:	0f b7 c8             	movzwl %ax,%ecx
ffffffff80036144:	0f b7 45 f4          	movzwl -0xc(%rbp),%eax
ffffffff80036148:	48 98                	cltq   
ffffffff8003614a:	48 89 c2             	mov    %rax,%rdx
ffffffff8003614d:	48 01 d2             	add    %rdx,%rdx
ffffffff80036150:	48 01 c2             	add    %rax,%rdx
ffffffff80036153:	48 63 c9             	movslq %ecx,%rcx
ffffffff80036156:	48 89 c8             	mov    %rcx,%rax
ffffffff80036159:	48 c1 e0 03          	shl    $0x3,%rax
ffffffff8003615d:	48 01 c8             	add    %rcx,%rax
ffffffff80036160:	48 01 c2             	add    %rax,%rdx
ffffffff80036163:	48 8d 05 36 14 06 00 	lea    0x61436(%rip),%rax        # ffffffff800975a0 <FILTERS_VECTOR_LENGTH>
ffffffff8003616a:	48 01 d0             	add    %rdx,%rax
ffffffff8003616d:	e9 bd 02 00 00       	jmp    ffffffff8003642f <ZydisDecoderTreeGetChildNode+0x667>
ffffffff80036172:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80036176:	0f b7 40 01          	movzwl 0x1(%rax),%eax
ffffffff8003617a:	0f b7 c8             	movzwl %ax,%ecx
ffffffff8003617d:	0f b7 45 f4          	movzwl -0xc(%rbp),%eax
ffffffff80036181:	48 98                	cltq   
ffffffff80036183:	48 89 c2             	mov    %rax,%rdx
ffffffff80036186:	48 01 d2             	add    %rdx,%rdx
ffffffff80036189:	48 01 c2             	add    %rax,%rdx
ffffffff8003618c:	48 63 c9             	movslq %ecx,%rcx
ffffffff8003618f:	48 89 c8             	mov    %rcx,%rax
ffffffff80036192:	48 01 c0             	add    %rax,%rax
ffffffff80036195:	48 01 c8             	add    %rcx,%rax
ffffffff80036198:	48 01 c0             	add    %rax,%rax
ffffffff8003619b:	48 01 c2             	add    %rax,%rdx
ffffffff8003619e:	48 8d 05 fb 4a 06 00 	lea    0x64afb(%rip),%rax        # ffffffff8009aca0 <FILTERS_REX_W>
ffffffff800361a5:	48 01 d0             	add    %rdx,%rax
ffffffff800361a8:	e9 82 02 00 00       	jmp    ffffffff8003642f <ZydisDecoderTreeGetChildNode+0x667>
ffffffff800361ad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff800361b1:	0f b7 40 01          	movzwl 0x1(%rax),%eax
ffffffff800361b5:	0f b7 c8             	movzwl %ax,%ecx
ffffffff800361b8:	0f b7 45 f4          	movzwl -0xc(%rbp),%eax
ffffffff800361bc:	48 98                	cltq   
ffffffff800361be:	48 89 c2             	mov    %rax,%rdx
ffffffff800361c1:	48 01 d2             	add    %rdx,%rdx
ffffffff800361c4:	48 01 c2             	add    %rax,%rdx
ffffffff800361c7:	48 63 c9             	movslq %ecx,%rcx
ffffffff800361ca:	48 89 c8             	mov    %rcx,%rax
ffffffff800361cd:	48 01 c0             	add    %rax,%rax
ffffffff800361d0:	48 01 c8             	add    %rcx,%rax
ffffffff800361d3:	48 01 c0             	add    %rax,%rax
ffffffff800361d6:	48 01 c2             	add    %rax,%rdx
ffffffff800361d9:	48 8d 05 c2 72 06 00 	lea    0x672c2(%rip),%rax        # ffffffff8009d4a2 <FILTERS_REX_B>
ffffffff800361e0:	48 01 d0             	add    %rdx,%rax
ffffffff800361e3:	e9 47 02 00 00       	jmp    ffffffff8003642f <ZydisDecoderTreeGetChildNode+0x667>
ffffffff800361e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff800361ec:	0f b7 40 01          	movzwl 0x1(%rax),%eax
ffffffff800361f0:	0f b7 c8             	movzwl %ax,%ecx
ffffffff800361f3:	0f b7 45 f4          	movzwl -0xc(%rbp),%eax
ffffffff800361f7:	48 98                	cltq   
ffffffff800361f9:	48 89 c2             	mov    %rax,%rdx
ffffffff800361fc:	48 01 d2             	add    %rdx,%rdx
ffffffff800361ff:	48 01 c2             	add    %rax,%rdx
ffffffff80036202:	48 63 c9             	movslq %ecx,%rcx
ffffffff80036205:	48 89 c8             	mov    %rcx,%rax
ffffffff80036208:	48 01 c0             	add    %rax,%rax
ffffffff8003620b:	48 01 c8             	add    %rcx,%rax
ffffffff8003620e:	48 01 c0             	add    %rax,%rax
ffffffff80036211:	48 01 c2             	add    %rax,%rdx
ffffffff80036214:	48 8d 05 a5 72 06 00 	lea    0x672a5(%rip),%rax        # ffffffff8009d4c0 <FILTERS_EVEX_B>
ffffffff8003621b:	48 01 d0             	add    %rdx,%rax
ffffffff8003621e:	e9 0c 02 00 00       	jmp    ffffffff8003642f <ZydisDecoderTreeGetChildNode+0x667>
ffffffff80036223:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80036227:	0f b7 40 01          	movzwl 0x1(%rax),%eax
ffffffff8003622b:	0f b7 c8             	movzwl %ax,%ecx
ffffffff8003622e:	0f b7 45 f4          	movzwl -0xc(%rbp),%eax
ffffffff80036232:	48 98                	cltq   
ffffffff80036234:	48 89 c2             	mov    %rax,%rdx
ffffffff80036237:	48 01 d2             	add    %rdx,%rdx
ffffffff8003623a:	48 01 c2             	add    %rax,%rdx
ffffffff8003623d:	48 63 c9             	movslq %ecx,%rcx
ffffffff80036240:	48 89 c8             	mov    %rcx,%rax
ffffffff80036243:	48 01 c0             	add    %rax,%rax
ffffffff80036246:	48 01 c8             	add    %rcx,%rax
ffffffff80036249:	48 01 c0             	add    %rax,%rax
ffffffff8003624c:	48 01 c2             	add    %rax,%rdx
ffffffff8003624f:	48 8d 05 ca 8c 06 00 	lea    0x68cca(%rip),%rax        # ffffffff8009ef20 <FILTERS_MVEX_E>
ffffffff80036256:	48 01 d0             	add    %rdx,%rax
ffffffff80036259:	e9 d1 01 00 00       	jmp    ffffffff8003642f <ZydisDecoderTreeGetChildNode+0x667>
ffffffff8003625e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80036262:	0f b7 40 01          	movzwl 0x1(%rax),%eax
ffffffff80036266:	0f b7 c8             	movzwl %ax,%ecx
ffffffff80036269:	0f b7 45 f4          	movzwl -0xc(%rbp),%eax
ffffffff8003626d:	48 98                	cltq   
ffffffff8003626f:	48 89 c2             	mov    %rax,%rdx
ffffffff80036272:	48 01 d2             	add    %rdx,%rdx
ffffffff80036275:	48 01 c2             	add    %rax,%rdx
ffffffff80036278:	48 63 c9             	movslq %ecx,%rcx
ffffffff8003627b:	48 89 c8             	mov    %rcx,%rax
ffffffff8003627e:	48 01 c0             	add    %rax,%rax
ffffffff80036281:	48 01 c8             	add    %rcx,%rax
ffffffff80036284:	48 01 c0             	add    %rax,%rax
ffffffff80036287:	48 01 c2             	add    %rax,%rdx
ffffffff8003628a:	48 8d 05 6f 8f 06 00 	lea    0x68f6f(%rip),%rax        # ffffffff8009f200 <FILTERS_MODE_AMD>
ffffffff80036291:	48 01 d0             	add    %rdx,%rax
ffffffff80036294:	e9 96 01 00 00       	jmp    ffffffff8003642f <ZydisDecoderTreeGetChildNode+0x667>
ffffffff80036299:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8003629d:	0f b7 40 01          	movzwl 0x1(%rax),%eax
ffffffff800362a1:	0f b7 c8             	movzwl %ax,%ecx
ffffffff800362a4:	0f b7 45 f4          	movzwl -0xc(%rbp),%eax
ffffffff800362a8:	48 98                	cltq   
ffffffff800362aa:	48 89 c2             	mov    %rax,%rdx
ffffffff800362ad:	48 01 d2             	add    %rdx,%rdx
ffffffff800362b0:	48 01 c2             	add    %rax,%rdx
ffffffff800362b3:	48 63 c9             	movslq %ecx,%rcx
ffffffff800362b6:	48 89 c8             	mov    %rcx,%rax
ffffffff800362b9:	48 01 c0             	add    %rax,%rax
ffffffff800362bc:	48 01 c8             	add    %rcx,%rax
ffffffff800362bf:	48 01 c0             	add    %rax,%rax
ffffffff800362c2:	48 01 c2             	add    %rax,%rdx
ffffffff800362c5:	48 8d 05 b4 8f 06 00 	lea    0x68fb4(%rip),%rax        # ffffffff8009f280 <FILTERS_MODE_KNC>
ffffffff800362cc:	48 01 d0             	add    %rdx,%rax
ffffffff800362cf:	e9 5b 01 00 00       	jmp    ffffffff8003642f <ZydisDecoderTreeGetChildNode+0x667>
ffffffff800362d4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff800362d8:	0f b7 40 01          	movzwl 0x1(%rax),%eax
ffffffff800362dc:	0f b7 c8             	movzwl %ax,%ecx
ffffffff800362df:	0f b7 45 f4          	movzwl -0xc(%rbp),%eax
ffffffff800362e3:	48 98                	cltq   
ffffffff800362e5:	48 89 c2             	mov    %rax,%rdx
ffffffff800362e8:	48 01 d2             	add    %rdx,%rdx
ffffffff800362eb:	48 01 c2             	add    %rax,%rdx
ffffffff800362ee:	48 63 c9             	movslq %ecx,%rcx
ffffffff800362f1:	48 89 c8             	mov    %rcx,%rax
ffffffff800362f4:	48 01 c0             	add    %rax,%rax
ffffffff800362f7:	48 01 c8             	add    %rcx,%rax
ffffffff800362fa:	48 01 c0             	add    %rax,%rax
ffffffff800362fd:	48 01 c2             	add    %rax,%rdx
ffffffff80036300:	48 8d 05 a9 8f 06 00 	lea    0x68fa9(%rip),%rax        # ffffffff8009f2b0 <FILTERS_MODE_MPX>
ffffffff80036307:	48 01 d0             	add    %rdx,%rax
ffffffff8003630a:	e9 20 01 00 00       	jmp    ffffffff8003642f <ZydisDecoderTreeGetChildNode+0x667>
ffffffff8003630f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80036313:	0f b7 40 01          	movzwl 0x1(%rax),%eax
ffffffff80036317:	0f b7 c8             	movzwl %ax,%ecx
ffffffff8003631a:	0f b7 45 f4          	movzwl -0xc(%rbp),%eax
ffffffff8003631e:	48 98                	cltq   
ffffffff80036320:	48 89 c2             	mov    %rax,%rdx
ffffffff80036323:	48 01 d2             	add    %rdx,%rdx
ffffffff80036326:	48 01 c2             	add    %rax,%rdx
ffffffff80036329:	48 63 c9             	movslq %ecx,%rcx
ffffffff8003632c:	48 89 c8             	mov    %rcx,%rax
ffffffff8003632f:	48 01 c0             	add    %rax,%rax
ffffffff80036332:	48 01 c8             	add    %rcx,%rax
ffffffff80036335:	48 01 c0             	add    %rax,%rax
ffffffff80036338:	48 01 c2             	add    %rax,%rdx
ffffffff8003633b:	48 8d 05 7e 8f 06 00 	lea    0x68f7e(%rip),%rax        # ffffffff8009f2c0 <FILTERS_MODE_CET>
ffffffff80036342:	48 01 d0             	add    %rdx,%rax
ffffffff80036345:	e9 e5 00 00 00       	jmp    ffffffff8003642f <ZydisDecoderTreeGetChildNode+0x667>
ffffffff8003634a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8003634e:	0f b7 40 01          	movzwl 0x1(%rax),%eax
ffffffff80036352:	0f b7 c8             	movzwl %ax,%ecx
ffffffff80036355:	0f b7 45 f4          	movzwl -0xc(%rbp),%eax
ffffffff80036359:	48 98                	cltq   
ffffffff8003635b:	48 89 c2             	mov    %rax,%rdx
ffffffff8003635e:	48 01 d2             	add    %rdx,%rdx
ffffffff80036361:	48 01 c2             	add    %rax,%rdx
ffffffff80036364:	48 63 c9             	movslq %ecx,%rcx
ffffffff80036367:	48 89 c8             	mov    %rcx,%rax
ffffffff8003636a:	48 01 c0             	add    %rax,%rax
ffffffff8003636d:	48 01 c8             	add    %rcx,%rax
ffffffff80036370:	48 01 c0             	add    %rax,%rax
ffffffff80036373:	48 01 c2             	add    %rax,%rdx
ffffffff80036376:	48 8d 05 63 8f 06 00 	lea    0x68f63(%rip),%rax        # ffffffff8009f2e0 <FILTERS_MODE_LZCNT>
ffffffff8003637d:	48 01 d0             	add    %rdx,%rax
ffffffff80036380:	e9 aa 00 00 00       	jmp    ffffffff8003642f <ZydisDecoderTreeGetChildNode+0x667>
ffffffff80036385:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80036389:	0f b7 40 01          	movzwl 0x1(%rax),%eax
ffffffff8003638d:	0f b7 c8             	movzwl %ax,%ecx
ffffffff80036390:	0f b7 45 f4          	movzwl -0xc(%rbp),%eax
ffffffff80036394:	48 98                	cltq   
ffffffff80036396:	48 89 c2             	mov    %rax,%rdx
ffffffff80036399:	48 01 d2             	add    %rdx,%rdx
ffffffff8003639c:	48 01 c2             	add    %rax,%rdx
ffffffff8003639f:	48 63 c9             	movslq %ecx,%rcx
ffffffff800363a2:	48 89 c8             	mov    %rcx,%rax
ffffffff800363a5:	48 01 c0             	add    %rax,%rax
ffffffff800363a8:	48 01 c8             	add    %rcx,%rax
ffffffff800363ab:	48 01 c0             	add    %rax,%rax
ffffffff800363ae:	48 01 c2             	add    %rax,%rdx
ffffffff800363b1:	48 8d 05 38 8f 06 00 	lea    0x68f38(%rip),%rax        # ffffffff8009f2f0 <FILTERS_MODE_TZCNT>
ffffffff800363b8:	48 01 d0             	add    %rdx,%rax
ffffffff800363bb:	eb 72                	jmp    ffffffff8003642f <ZydisDecoderTreeGetChildNode+0x667>
ffffffff800363bd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff800363c1:	0f b7 40 01          	movzwl 0x1(%rax),%eax
ffffffff800363c5:	0f b7 c8             	movzwl %ax,%ecx
ffffffff800363c8:	0f b7 45 f4          	movzwl -0xc(%rbp),%eax
ffffffff800363cc:	48 98                	cltq   
ffffffff800363ce:	48 89 c2             	mov    %rax,%rdx
ffffffff800363d1:	48 01 d2             	add    %rdx,%rdx
ffffffff800363d4:	48 01 c2             	add    %rax,%rdx
ffffffff800363d7:	48 63 c9             	movslq %ecx,%rcx
ffffffff800363da:	48 89 c8             	mov    %rcx,%rax
ffffffff800363dd:	48 01 c0             	add    %rax,%rax
ffffffff800363e0:	48 01 c8             	add    %rcx,%rax
ffffffff800363e3:	48 01 c0             	add    %rax,%rax
ffffffff800363e6:	48 01 c2             	add    %rax,%rdx
ffffffff800363e9:	48 8d 05 0c 8f 06 00 	lea    0x68f0c(%rip),%rax        # ffffffff8009f2fc <FILTERS_MODE_WBNOINVD>
ffffffff800363f0:	48 01 d0             	add    %rdx,%rax
ffffffff800363f3:	eb 3a                	jmp    ffffffff8003642f <ZydisDecoderTreeGetChildNode+0x667>
ffffffff800363f5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff800363f9:	0f b7 40 01          	movzwl 0x1(%rax),%eax
ffffffff800363fd:	0f b7 c8             	movzwl %ax,%ecx
ffffffff80036400:	0f b7 45 f4          	movzwl -0xc(%rbp),%eax
ffffffff80036404:	48 98                	cltq   
ffffffff80036406:	48 89 c2             	mov    %rax,%rdx
ffffffff80036409:	48 01 d2             	add    %rdx,%rdx
ffffffff8003640c:	48 01 c2             	add    %rax,%rdx
ffffffff8003640f:	48 63 c9             	movslq %ecx,%rcx
ffffffff80036412:	48 89 c8             	mov    %rcx,%rax
ffffffff80036415:	48 01 c0             	add    %rax,%rax
ffffffff80036418:	48 01 c8             	add    %rcx,%rax
ffffffff8003641b:	48 01 c0             	add    %rax,%rax
ffffffff8003641e:	48 01 c2             	add    %rax,%rdx
ffffffff80036421:	48 8d 05 da 8e 06 00 	lea    0x68eda(%rip),%rax        # ffffffff8009f302 <FILTERS_MODE_CLDEMOTE>
ffffffff80036428:	48 01 d0             	add    %rdx,%rax
ffffffff8003642b:	eb 02                	jmp    ffffffff8003642f <ZydisDecoderTreeGetChildNode+0x667>
ffffffff8003642d:	eb fe                	jmp    ffffffff8003642d <ZydisDecoderTreeGetChildNode+0x665>
ffffffff8003642f:	c9                   	leave  
ffffffff80036430:	c3                   	ret    

ffffffff80036431 <ZydisGetInstructionEncodingInfo>:
ffffffff80036431:	f3 0f 1e fa          	endbr64 
ffffffff80036435:	55                   	push   %rbp
ffffffff80036436:	48 89 e5             	mov    %rsp,%rbp
ffffffff80036439:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff8003643d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff80036441:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
ffffffff80036445:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80036449:	0f b6 00             	movzbl (%rax),%eax
ffffffff8003644c:	83 e0 7f             	and    $0x7f,%eax
ffffffff8003644f:	88 45 ff             	mov    %al,-0x1(%rbp)
ffffffff80036452:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
ffffffff80036456:	48 98                	cltq   
ffffffff80036458:	48 6b c0 0e          	imul   $0xe,%rax,%rax
ffffffff8003645c:	48 8d 15 fd 22 05 00 	lea    0x522fd(%rip),%rdx        # ffffffff80088760 <INSTR_ENCODINGS>
ffffffff80036463:	48 01 c2             	add    %rax,%rdx
ffffffff80036466:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8003646a:	48 89 10             	mov    %rdx,(%rax)
ffffffff8003646d:	90                   	nop
ffffffff8003646e:	c9                   	leave  
ffffffff8003646f:	c3                   	ret    

ffffffff80036470 <ZydisMnemonicGetString>:
ffffffff80036470:	f3 0f 1e fa          	endbr64 
ffffffff80036474:	55                   	push   %rbp
ffffffff80036475:	48 89 e5             	mov    %rsp,%rbp
ffffffff80036478:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff8003647c:	89 7d fc             	mov    %edi,-0x4(%rbp)
ffffffff8003647f:	81 7d fc da 06 00 00 	cmpl   $0x6da,-0x4(%rbp)
ffffffff80036486:	76 07                	jbe    ffffffff8003648f <ZydisMnemonicGetString+0x1f>
ffffffff80036488:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8003648d:	eb 18                	jmp    ffffffff800364a7 <ZydisMnemonicGetString+0x37>
ffffffff8003648f:	8b 55 fc             	mov    -0x4(%rbp),%edx
ffffffff80036492:	48 89 d0             	mov    %rdx,%rax
ffffffff80036495:	48 c1 e0 03          	shl    $0x3,%rax
ffffffff80036499:	48 01 c2             	add    %rax,%rdx
ffffffff8003649c:	48 8d 05 fd 4e 07 00 	lea    0x74efd(%rip),%rax        # ffffffff800ab3a0 <STR_MNEMONIC>
ffffffff800364a3:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
ffffffff800364a7:	c9                   	leave  
ffffffff800364a8:	c3                   	ret    

ffffffff800364a9 <ZydisMnemonicGetStringWrapped>:
ffffffff800364a9:	f3 0f 1e fa          	endbr64 
ffffffff800364ad:	55                   	push   %rbp
ffffffff800364ae:	48 89 e5             	mov    %rsp,%rbp
ffffffff800364b1:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff800364b5:	89 7d fc             	mov    %edi,-0x4(%rbp)
ffffffff800364b8:	81 7d fc da 06 00 00 	cmpl   $0x6da,-0x4(%rbp)
ffffffff800364bf:	76 07                	jbe    ffffffff800364c8 <ZydisMnemonicGetStringWrapped+0x1f>
ffffffff800364c1:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff800364c6:	eb 17                	jmp    ffffffff800364df <ZydisMnemonicGetStringWrapped+0x36>
ffffffff800364c8:	8b 55 fc             	mov    -0x4(%rbp),%edx
ffffffff800364cb:	48 89 d0             	mov    %rdx,%rax
ffffffff800364ce:	48 c1 e0 03          	shl    $0x3,%rax
ffffffff800364d2:	48 01 d0             	add    %rdx,%rax
ffffffff800364d5:	48 8d 15 c4 4e 07 00 	lea    0x74ec4(%rip),%rdx        # ffffffff800ab3a0 <STR_MNEMONIC>
ffffffff800364dc:	48 01 d0             	add    %rdx,%rax
ffffffff800364df:	c9                   	leave  
ffffffff800364e0:	c3                   	ret    
